ARM GAS  /tmp/ccb2XGtY.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f4xx_gpio.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.GPIO_DeInit,"ax",%progbits
  16              		.align	1
  17              		.global	GPIO_DeInit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	GPIO_DeInit:
  24              	.LFB112:
  25              		.file 1 "FWLIB/src/stm32f4xx_gpio.c"
   1:FWLIB/src/stm32f4xx_gpio.c **** /**
   2:FWLIB/src/stm32f4xx_gpio.c ****   ******************************************************************************
   3:FWLIB/src/stm32f4xx_gpio.c ****   * @file    stm32f4xx_gpio.c
   4:FWLIB/src/stm32f4xx_gpio.c ****   * @author  MCD Application Team
   5:FWLIB/src/stm32f4xx_gpio.c ****   * @version V1.4.0
   6:FWLIB/src/stm32f4xx_gpio.c ****   * @date    04-August-2014
   7:FWLIB/src/stm32f4xx_gpio.c ****   * @brief   This file provides firmware functions to manage the following 
   8:FWLIB/src/stm32f4xx_gpio.c ****   *          functionalities of the GPIO peripheral:           
   9:FWLIB/src/stm32f4xx_gpio.c ****   *           + Initialization and Configuration
  10:FWLIB/src/stm32f4xx_gpio.c ****   *           + GPIO Read and Write
  11:FWLIB/src/stm32f4xx_gpio.c ****   *           + GPIO Alternate functions configuration
  12:FWLIB/src/stm32f4xx_gpio.c ****   * 
  13:FWLIB/src/stm32f4xx_gpio.c **** @verbatim  
  14:FWLIB/src/stm32f4xx_gpio.c ****  ===============================================================================
  15:FWLIB/src/stm32f4xx_gpio.c ****                       ##### How to use this driver #####
  16:FWLIB/src/stm32f4xx_gpio.c ****  ===============================================================================       
  17:FWLIB/src/stm32f4xx_gpio.c ****  [..]             
  18:FWLIB/src/stm32f4xx_gpio.c ****    (#) Enable the GPIO AHB clock using the following function
  19:FWLIB/src/stm32f4xx_gpio.c ****        RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);
  20:FWLIB/src/stm32f4xx_gpio.c ****                
  21:FWLIB/src/stm32f4xx_gpio.c ****    (#) Configure the GPIO pin(s) using GPIO_Init()
  22:FWLIB/src/stm32f4xx_gpio.c ****        Four possible configuration are available for each pin:
  23:FWLIB/src/stm32f4xx_gpio.c ****        (++) Input: Floating, Pull-up, Pull-down.
  24:FWLIB/src/stm32f4xx_gpio.c ****        (++) Output: Push-Pull (Pull-up, Pull-down or no Pull)
  25:FWLIB/src/stm32f4xx_gpio.c ****             Open Drain (Pull-up, Pull-down or no Pull). In output mode, the speed 
  26:FWLIB/src/stm32f4xx_gpio.c ****             is configurable: 2 MHz, 25 MHz, 50 MHz or 100 MHz.
  27:FWLIB/src/stm32f4xx_gpio.c ****        (++) Alternate Function: Push-Pull (Pull-up, Pull-down or no Pull) Open 
  28:FWLIB/src/stm32f4xx_gpio.c ****             Drain (Pull-up, Pull-down or no Pull).
  29:FWLIB/src/stm32f4xx_gpio.c ****        (++) Analog: required mode when a pin is to be used as ADC channel or DAC 
  30:FWLIB/src/stm32f4xx_gpio.c ****             output.
  31:FWLIB/src/stm32f4xx_gpio.c ****    
  32:FWLIB/src/stm32f4xx_gpio.c ****    (#) Peripherals alternate function:
  33:FWLIB/src/stm32f4xx_gpio.c ****        (++) For ADC and DAC, configure the desired pin in analog mode using 
ARM GAS  /tmp/ccb2XGtY.s 			page 2


  34:FWLIB/src/stm32f4xx_gpio.c ****             GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AN;
  35:FWLIB/src/stm32f4xx_gpio.c ****             (+++) For other peripherals (TIM, USART...):
  36:FWLIB/src/stm32f4xx_gpio.c ****             (+++) Connect the pin to the desired peripherals' Alternate 
  37:FWLIB/src/stm32f4xx_gpio.c ****                      Function (AF) using GPIO_PinAFConfig() function
  38:FWLIB/src/stm32f4xx_gpio.c ****             (+++) Configure the desired pin in alternate function mode using
  39:FWLIB/src/stm32f4xx_gpio.c ****                      GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  40:FWLIB/src/stm32f4xx_gpio.c ****             (+++) Select the type, pull-up/pull-down and output speed via 
  41:FWLIB/src/stm32f4xx_gpio.c ****                      GPIO_PuPd, GPIO_OType and GPIO_Speed members
  42:FWLIB/src/stm32f4xx_gpio.c ****             (+++) Call GPIO_Init() function
  43:FWLIB/src/stm32f4xx_gpio.c ****           
  44:FWLIB/src/stm32f4xx_gpio.c ****    (#) To get the level of a pin configured in input mode use GPIO_ReadInputDataBit()
  45:FWLIB/src/stm32f4xx_gpio.c ****             
  46:FWLIB/src/stm32f4xx_gpio.c ****    (#) To set/reset the level of a pin configured in output mode use 
  47:FWLIB/src/stm32f4xx_gpio.c ****        GPIO_SetBits()/GPIO_ResetBits()
  48:FWLIB/src/stm32f4xx_gpio.c ****                  
  49:FWLIB/src/stm32f4xx_gpio.c ****    (#) During and just after reset, the alternate functions are not 
  50:FWLIB/src/stm32f4xx_gpio.c ****        active and the GPIO pins are configured in input floating mode (except JTAG
  51:FWLIB/src/stm32f4xx_gpio.c ****        pins).
  52:FWLIB/src/stm32f4xx_gpio.c ****   
  53:FWLIB/src/stm32f4xx_gpio.c ****    (#) The LSE oscillator pins OSC32_IN and OSC32_OUT can be used as general purpose 
  54:FWLIB/src/stm32f4xx_gpio.c ****        (PC14 and PC15, respectively) when the LSE oscillator is off. The LSE has 
  55:FWLIB/src/stm32f4xx_gpio.c ****        priority over the GPIO function.
  56:FWLIB/src/stm32f4xx_gpio.c ****   
  57:FWLIB/src/stm32f4xx_gpio.c ****    (#) The HSE oscillator pins OSC_IN/OSC_OUT can be used as 
  58:FWLIB/src/stm32f4xx_gpio.c ****        general purpose PH0 and PH1, respectively, when the HSE oscillator is off. 
  59:FWLIB/src/stm32f4xx_gpio.c ****        The HSE has priority over the GPIO function.
  60:FWLIB/src/stm32f4xx_gpio.c ****                
  61:FWLIB/src/stm32f4xx_gpio.c **** @endverbatim        
  62:FWLIB/src/stm32f4xx_gpio.c ****   *
  63:FWLIB/src/stm32f4xx_gpio.c ****   ******************************************************************************
  64:FWLIB/src/stm32f4xx_gpio.c ****   * @attention
  65:FWLIB/src/stm32f4xx_gpio.c ****   *
  66:FWLIB/src/stm32f4xx_gpio.c ****   * <h2><center>&copy; COPYRIGHT 2014 STMicroelectronics</center></h2>
  67:FWLIB/src/stm32f4xx_gpio.c ****   *
  68:FWLIB/src/stm32f4xx_gpio.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  69:FWLIB/src/stm32f4xx_gpio.c ****   * You may not use this file except in compliance with the License.
  70:FWLIB/src/stm32f4xx_gpio.c ****   * You may obtain a copy of the License at:
  71:FWLIB/src/stm32f4xx_gpio.c ****   *
  72:FWLIB/src/stm32f4xx_gpio.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  73:FWLIB/src/stm32f4xx_gpio.c ****   *
  74:FWLIB/src/stm32f4xx_gpio.c ****   * Unless required by applicable law or agreed to in writing, software 
  75:FWLIB/src/stm32f4xx_gpio.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  76:FWLIB/src/stm32f4xx_gpio.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  77:FWLIB/src/stm32f4xx_gpio.c ****   * See the License for the specific language governing permissions and
  78:FWLIB/src/stm32f4xx_gpio.c ****   * limitations under the License.
  79:FWLIB/src/stm32f4xx_gpio.c ****   *
  80:FWLIB/src/stm32f4xx_gpio.c ****   ******************************************************************************
  81:FWLIB/src/stm32f4xx_gpio.c ****   */
  82:FWLIB/src/stm32f4xx_gpio.c **** 
  83:FWLIB/src/stm32f4xx_gpio.c **** /* Includes ------------------------------------------------------------------*/
  84:FWLIB/src/stm32f4xx_gpio.c **** #include "stm32f4xx_gpio.h"
  85:FWLIB/src/stm32f4xx_gpio.c **** #include "stm32f4xx_rcc.h"
  86:FWLIB/src/stm32f4xx_gpio.c **** 
  87:FWLIB/src/stm32f4xx_gpio.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  88:FWLIB/src/stm32f4xx_gpio.c ****   * @{
  89:FWLIB/src/stm32f4xx_gpio.c ****   */
  90:FWLIB/src/stm32f4xx_gpio.c **** 
ARM GAS  /tmp/ccb2XGtY.s 			page 3


  91:FWLIB/src/stm32f4xx_gpio.c **** /** @defgroup GPIO 
  92:FWLIB/src/stm32f4xx_gpio.c ****   * @brief GPIO driver modules
  93:FWLIB/src/stm32f4xx_gpio.c ****   * @{
  94:FWLIB/src/stm32f4xx_gpio.c ****   */ 
  95:FWLIB/src/stm32f4xx_gpio.c **** 
  96:FWLIB/src/stm32f4xx_gpio.c **** /* Private typedef -----------------------------------------------------------*/
  97:FWLIB/src/stm32f4xx_gpio.c **** /* Private define ------------------------------------------------------------*/
  98:FWLIB/src/stm32f4xx_gpio.c **** /* Private macro -------------------------------------------------------------*/
  99:FWLIB/src/stm32f4xx_gpio.c **** /* Private variables ---------------------------------------------------------*/
 100:FWLIB/src/stm32f4xx_gpio.c **** /* Private function prototypes -----------------------------------------------*/
 101:FWLIB/src/stm32f4xx_gpio.c **** /* Private functions ---------------------------------------------------------*/
 102:FWLIB/src/stm32f4xx_gpio.c **** 
 103:FWLIB/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Private_Functions
 104:FWLIB/src/stm32f4xx_gpio.c ****   * @{
 105:FWLIB/src/stm32f4xx_gpio.c ****   */ 
 106:FWLIB/src/stm32f4xx_gpio.c **** 
 107:FWLIB/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group1 Initialization and Configuration
 108:FWLIB/src/stm32f4xx_gpio.c ****  *  @brief   Initialization and Configuration
 109:FWLIB/src/stm32f4xx_gpio.c ****  *
 110:FWLIB/src/stm32f4xx_gpio.c **** @verbatim   
 111:FWLIB/src/stm32f4xx_gpio.c ****  ===============================================================================
 112:FWLIB/src/stm32f4xx_gpio.c ****                  ##### Initialization and Configuration #####
 113:FWLIB/src/stm32f4xx_gpio.c ****  ===============================================================================  
 114:FWLIB/src/stm32f4xx_gpio.c **** 
 115:FWLIB/src/stm32f4xx_gpio.c **** @endverbatim
 116:FWLIB/src/stm32f4xx_gpio.c ****   * @{
 117:FWLIB/src/stm32f4xx_gpio.c ****   */
 118:FWLIB/src/stm32f4xx_gpio.c **** 
 119:FWLIB/src/stm32f4xx_gpio.c **** /**
 120:FWLIB/src/stm32f4xx_gpio.c ****   * @brief  De-initializes the GPIOx peripheral registers to their default reset values.
 121:FWLIB/src/stm32f4xx_gpio.c ****   * @note   By default, The GPIO pins are configured in input floating mode (except JTAG pins).
 122:FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 123:FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 124:FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 125:FWLIB/src/stm32f4xx_gpio.c ****   * @retval None
 126:FWLIB/src/stm32f4xx_gpio.c ****   */
 127:FWLIB/src/stm32f4xx_gpio.c **** void GPIO_DeInit(GPIO_TypeDef* GPIOx)
 128:FWLIB/src/stm32f4xx_gpio.c **** {
  26              		.loc 1 128 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 129:FWLIB/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 130:FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 131:FWLIB/src/stm32f4xx_gpio.c **** 
 132:FWLIB/src/stm32f4xx_gpio.c ****   if (GPIOx == GPIOA)
  36              		.loc 1 132 0
  37 0002 454B     		ldr	r3, .L25
  38 0004 9842     		cmp	r0, r3
  39 0006 1ED0     		beq	.L14
 133:FWLIB/src/stm32f4xx_gpio.c ****   {
ARM GAS  /tmp/ccb2XGtY.s 			page 4


 134:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, ENABLE);
 135:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, DISABLE);
 136:FWLIB/src/stm32f4xx_gpio.c ****   }
 137:FWLIB/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOB)
  40              		.loc 1 137 0
  41 0008 444B     		ldr	r3, .L25+4
  42 000a 9842     		cmp	r0, r3
  43 000c 24D0     		beq	.L15
 138:FWLIB/src/stm32f4xx_gpio.c ****   {
 139:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, ENABLE);
 140:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, DISABLE);
 141:FWLIB/src/stm32f4xx_gpio.c ****   }
 142:FWLIB/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOC)
  44              		.loc 1 142 0
  45 000e 444B     		ldr	r3, .L25+8
  46 0010 9842     		cmp	r0, r3
  47 0012 2AD0     		beq	.L16
 143:FWLIB/src/stm32f4xx_gpio.c ****   {
 144:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, ENABLE);
 145:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, DISABLE);
 146:FWLIB/src/stm32f4xx_gpio.c ****   }
 147:FWLIB/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOD)
  48              		.loc 1 147 0
  49 0014 434B     		ldr	r3, .L25+12
  50 0016 9842     		cmp	r0, r3
  51 0018 30D0     		beq	.L17
 148:FWLIB/src/stm32f4xx_gpio.c ****   {
 149:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, ENABLE);
 150:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, DISABLE);
 151:FWLIB/src/stm32f4xx_gpio.c ****   }
 152:FWLIB/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOE)
  52              		.loc 1 152 0
  53 001a 434B     		ldr	r3, .L25+16
  54 001c 9842     		cmp	r0, r3
  55 001e 36D0     		beq	.L18
 153:FWLIB/src/stm32f4xx_gpio.c ****   {
 154:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, ENABLE);
 155:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, DISABLE);
 156:FWLIB/src/stm32f4xx_gpio.c ****   }
 157:FWLIB/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOF)
  56              		.loc 1 157 0
  57 0020 424B     		ldr	r3, .L25+20
  58 0022 9842     		cmp	r0, r3
  59 0024 3CD0     		beq	.L19
 158:FWLIB/src/stm32f4xx_gpio.c ****   {
 159:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, ENABLE);
 160:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, DISABLE);
 161:FWLIB/src/stm32f4xx_gpio.c ****   }
 162:FWLIB/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOG)
  60              		.loc 1 162 0
  61 0026 424B     		ldr	r3, .L25+24
  62 0028 9842     		cmp	r0, r3
  63 002a 42D0     		beq	.L20
 163:FWLIB/src/stm32f4xx_gpio.c ****   {
 164:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, ENABLE);
 165:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, DISABLE);
 166:FWLIB/src/stm32f4xx_gpio.c ****   }
ARM GAS  /tmp/ccb2XGtY.s 			page 5


 167:FWLIB/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOH)
  64              		.loc 1 167 0
  65 002c 414B     		ldr	r3, .L25+28
  66 002e 9842     		cmp	r0, r3
  67 0030 48D0     		beq	.L21
 168:FWLIB/src/stm32f4xx_gpio.c ****   {
 169:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, ENABLE);
 170:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, DISABLE);
 171:FWLIB/src/stm32f4xx_gpio.c ****   }
 172:FWLIB/src/stm32f4xx_gpio.c **** 
 173:FWLIB/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOI)
  68              		.loc 1 173 0
  69 0032 414B     		ldr	r3, .L25+32
  70 0034 9842     		cmp	r0, r3
  71 0036 4ED0     		beq	.L22
 174:FWLIB/src/stm32f4xx_gpio.c ****   {
 175:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, ENABLE);
 176:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, DISABLE);
 177:FWLIB/src/stm32f4xx_gpio.c ****   }
 178:FWLIB/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOJ)
  72              		.loc 1 178 0
  73 0038 404B     		ldr	r3, .L25+36
  74 003a 9842     		cmp	r0, r3
  75 003c 56D0     		beq	.L23
 179:FWLIB/src/stm32f4xx_gpio.c ****   {
 180:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOJ, ENABLE);
 181:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOJ, DISABLE);
 182:FWLIB/src/stm32f4xx_gpio.c ****   }
 183:FWLIB/src/stm32f4xx_gpio.c ****   else
 184:FWLIB/src/stm32f4xx_gpio.c ****   {
 185:FWLIB/src/stm32f4xx_gpio.c ****     if (GPIOx == GPIOK)
  76              		.loc 1 185 0
  77 003e 404B     		ldr	r3, .L25+40
  78 0040 9842     		cmp	r0, r3
  79 0042 5ED0     		beq	.L24
  80              	.LVL1:
  81              	.L1:
  82 0044 08BD     		pop	{r3, pc}
  83              	.LVL2:
  84              	.L14:
 134:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, DISABLE);
  85              		.loc 1 134 0
  86 0046 0121     		movs	r1, #1
  87 0048 0846     		mov	r0, r1
  88              	.LVL3:
  89 004a FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
  90              	.LVL4:
 135:FWLIB/src/stm32f4xx_gpio.c ****   }
  91              		.loc 1 135 0
  92 004e 0021     		movs	r1, #0
  93 0050 0120     		movs	r0, #1
  94 0052 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
  95              	.LVL5:
  96 0056 08BD     		pop	{r3, pc}
  97              	.LVL6:
  98              	.L15:
 139:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, DISABLE);
ARM GAS  /tmp/ccb2XGtY.s 			page 6


  99              		.loc 1 139 0
 100 0058 0121     		movs	r1, #1
 101 005a 0220     		movs	r0, #2
 102              	.LVL7:
 103 005c FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 104              	.LVL8:
 140:FWLIB/src/stm32f4xx_gpio.c ****   }
 105              		.loc 1 140 0
 106 0060 0021     		movs	r1, #0
 107 0062 0220     		movs	r0, #2
 108 0064 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 109              	.LVL9:
 110 0068 08BD     		pop	{r3, pc}
 111              	.LVL10:
 112              	.L16:
 144:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, DISABLE);
 113              		.loc 1 144 0
 114 006a 0121     		movs	r1, #1
 115 006c 0420     		movs	r0, #4
 116              	.LVL11:
 117 006e FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 118              	.LVL12:
 145:FWLIB/src/stm32f4xx_gpio.c ****   }
 119              		.loc 1 145 0
 120 0072 0021     		movs	r1, #0
 121 0074 0420     		movs	r0, #4
 122 0076 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 123              	.LVL13:
 124 007a 08BD     		pop	{r3, pc}
 125              	.LVL14:
 126              	.L17:
 149:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, DISABLE);
 127              		.loc 1 149 0
 128 007c 0121     		movs	r1, #1
 129 007e 0820     		movs	r0, #8
 130              	.LVL15:
 131 0080 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 132              	.LVL16:
 150:FWLIB/src/stm32f4xx_gpio.c ****   }
 133              		.loc 1 150 0
 134 0084 0021     		movs	r1, #0
 135 0086 0820     		movs	r0, #8
 136 0088 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 137              	.LVL17:
 138 008c 08BD     		pop	{r3, pc}
 139              	.LVL18:
 140              	.L18:
 154:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, DISABLE);
 141              		.loc 1 154 0
 142 008e 0121     		movs	r1, #1
 143 0090 1020     		movs	r0, #16
 144              	.LVL19:
 145 0092 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 146              	.LVL20:
 155:FWLIB/src/stm32f4xx_gpio.c ****   }
 147              		.loc 1 155 0
 148 0096 0021     		movs	r1, #0
ARM GAS  /tmp/ccb2XGtY.s 			page 7


 149 0098 1020     		movs	r0, #16
 150 009a FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 151              	.LVL21:
 152 009e 08BD     		pop	{r3, pc}
 153              	.LVL22:
 154              	.L19:
 159:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, DISABLE);
 155              		.loc 1 159 0
 156 00a0 0121     		movs	r1, #1
 157 00a2 2020     		movs	r0, #32
 158              	.LVL23:
 159 00a4 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 160              	.LVL24:
 160:FWLIB/src/stm32f4xx_gpio.c ****   }
 161              		.loc 1 160 0
 162 00a8 0021     		movs	r1, #0
 163 00aa 2020     		movs	r0, #32
 164 00ac FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 165              	.LVL25:
 166 00b0 08BD     		pop	{r3, pc}
 167              	.LVL26:
 168              	.L20:
 164:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, DISABLE);
 169              		.loc 1 164 0
 170 00b2 0121     		movs	r1, #1
 171 00b4 4020     		movs	r0, #64
 172              	.LVL27:
 173 00b6 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 174              	.LVL28:
 165:FWLIB/src/stm32f4xx_gpio.c ****   }
 175              		.loc 1 165 0
 176 00ba 0021     		movs	r1, #0
 177 00bc 4020     		movs	r0, #64
 178 00be FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 179              	.LVL29:
 180 00c2 08BD     		pop	{r3, pc}
 181              	.LVL30:
 182              	.L21:
 169:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, DISABLE);
 183              		.loc 1 169 0
 184 00c4 0121     		movs	r1, #1
 185 00c6 8020     		movs	r0, #128
 186              	.LVL31:
 187 00c8 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 188              	.LVL32:
 170:FWLIB/src/stm32f4xx_gpio.c ****   }
 189              		.loc 1 170 0
 190 00cc 0021     		movs	r1, #0
 191 00ce 8020     		movs	r0, #128
 192 00d0 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 193              	.LVL33:
 194 00d4 08BD     		pop	{r3, pc}
 195              	.LVL34:
 196              	.L22:
 175:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, DISABLE);
 197              		.loc 1 175 0
 198 00d6 0121     		movs	r1, #1
ARM GAS  /tmp/ccb2XGtY.s 			page 8


 199 00d8 4FF48070 		mov	r0, #256
 200              	.LVL35:
 201 00dc FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 202              	.LVL36:
 176:FWLIB/src/stm32f4xx_gpio.c ****   }
 203              		.loc 1 176 0
 204 00e0 0021     		movs	r1, #0
 205 00e2 4FF48070 		mov	r0, #256
 206 00e6 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 207              	.LVL37:
 208 00ea 08BD     		pop	{r3, pc}
 209              	.LVL38:
 210              	.L23:
 180:FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOJ, DISABLE);
 211              		.loc 1 180 0
 212 00ec 0121     		movs	r1, #1
 213 00ee 4FF40070 		mov	r0, #512
 214              	.LVL39:
 215 00f2 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 216              	.LVL40:
 181:FWLIB/src/stm32f4xx_gpio.c ****   }
 217              		.loc 1 181 0
 218 00f6 0021     		movs	r1, #0
 219 00f8 4FF40070 		mov	r0, #512
 220 00fc FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 221              	.LVL41:
 222 0100 08BD     		pop	{r3, pc}
 223              	.LVL42:
 224              	.L24:
 186:FWLIB/src/stm32f4xx_gpio.c ****     {
 187:FWLIB/src/stm32f4xx_gpio.c ****       RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOK, ENABLE);
 225              		.loc 1 187 0
 226 0102 0121     		movs	r1, #1
 227 0104 4FF48060 		mov	r0, #1024
 228              	.LVL43:
 229 0108 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 230              	.LVL44:
 188:FWLIB/src/stm32f4xx_gpio.c ****       RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOK, DISABLE);
 231              		.loc 1 188 0
 232 010c 0021     		movs	r1, #0
 233 010e 4FF48060 		mov	r0, #1024
 234 0112 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 235              	.LVL45:
 189:FWLIB/src/stm32f4xx_gpio.c ****     }
 190:FWLIB/src/stm32f4xx_gpio.c ****   }
 191:FWLIB/src/stm32f4xx_gpio.c **** }
 236              		.loc 1 191 0
 237 0116 95E7     		b	.L1
 238              	.L26:
 239              		.align	2
 240              	.L25:
 241 0118 00000240 		.word	1073872896
 242 011c 00040240 		.word	1073873920
 243 0120 00080240 		.word	1073874944
 244 0124 000C0240 		.word	1073875968
 245 0128 00100240 		.word	1073876992
 246 012c 00140240 		.word	1073878016
ARM GAS  /tmp/ccb2XGtY.s 			page 9


 247 0130 00180240 		.word	1073879040
 248 0134 001C0240 		.word	1073880064
 249 0138 00200240 		.word	1073881088
 250 013c 00240240 		.word	1073882112
 251 0140 00280240 		.word	1073883136
 252              		.cfi_endproc
 253              	.LFE112:
 255              		.section	.text.GPIO_Init,"ax",%progbits
 256              		.align	1
 257              		.global	GPIO_Init
 258              		.syntax unified
 259              		.thumb
 260              		.thumb_func
 261              		.fpu softvfp
 263              	GPIO_Init:
 264              	.LFB113:
 192:FWLIB/src/stm32f4xx_gpio.c **** 
 193:FWLIB/src/stm32f4xx_gpio.c **** /**
 194:FWLIB/src/stm32f4xx_gpio.c ****   * @brief  Initializes the GPIOx peripheral according to the specified parameters in the GPIO_Init
 195:FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 196:FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 197:FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 198:FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that contains
 199:FWLIB/src/stm32f4xx_gpio.c ****   *         the configuration information for the specified GPIO peripheral.
 200:FWLIB/src/stm32f4xx_gpio.c ****   * @retval None
 201:FWLIB/src/stm32f4xx_gpio.c ****   */
 202:FWLIB/src/stm32f4xx_gpio.c **** void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
 203:FWLIB/src/stm32f4xx_gpio.c **** {
 265              		.loc 1 203 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              		@ link register save eliminated.
 270              	.LVL46:
 204:FWLIB/src/stm32f4xx_gpio.c ****   uint32_t pinpos = 0x00, pos = 0x00 , currentpin = 0x00;
 205:FWLIB/src/stm32f4xx_gpio.c **** 
 206:FWLIB/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 207:FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 208:FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));
 209:FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
 210:FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PUPD(GPIO_InitStruct->GPIO_PuPd));
 211:FWLIB/src/stm32f4xx_gpio.c **** 
 212:FWLIB/src/stm32f4xx_gpio.c ****   /* ------------------------- Configure the port pins ---------------- */
 213:FWLIB/src/stm32f4xx_gpio.c ****   /*-- GPIO Mode Configuration --*/
 214:FWLIB/src/stm32f4xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 271              		.loc 1 214 0
 272 0000 0023     		movs	r3, #0
 273              	.LVL47:
 274 0002 0F2B     		cmp	r3, #15
 275 0004 40D8     		bhi	.L35
 203:FWLIB/src/stm32f4xx_gpio.c ****   uint32_t pinpos = 0x00, pos = 0x00 , currentpin = 0x00;
 276              		.loc 1 203 0
 277 0006 F0B4     		push	{r4, r5, r6, r7}
 278              	.LCFI1:
 279              		.cfi_def_cfa_offset 16
 280              		.cfi_offset 4, -16
 281              		.cfi_offset 5, -12
ARM GAS  /tmp/ccb2XGtY.s 			page 10


 282              		.cfi_offset 6, -8
 283              		.cfi_offset 7, -4
 284 0008 25E0     		b	.L31
 285              	.LVL48:
 286              	.L37:
 215:FWLIB/src/stm32f4xx_gpio.c ****   {
 216:FWLIB/src/stm32f4xx_gpio.c ****     pos = ((uint32_t)0x01) << pinpos;
 217:FWLIB/src/stm32f4xx_gpio.c ****     /* Get the port pins position */
 218:FWLIB/src/stm32f4xx_gpio.c ****     currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 219:FWLIB/src/stm32f4xx_gpio.c **** 
 220:FWLIB/src/stm32f4xx_gpio.c ****     if (currentpin == pos)
 221:FWLIB/src/stm32f4xx_gpio.c ****     {
 222:FWLIB/src/stm32f4xx_gpio.c ****       GPIOx->MODER  &= ~(GPIO_MODER_MODER0 << (pinpos * 2));
 223:FWLIB/src/stm32f4xx_gpio.c ****       GPIOx->MODER |= (((uint32_t)GPIO_InitStruct->GPIO_Mode) << (pinpos * 2));
 224:FWLIB/src/stm32f4xx_gpio.c **** 
 225:FWLIB/src/stm32f4xx_gpio.c ****       if ((GPIO_InitStruct->GPIO_Mode == GPIO_Mode_OUT) || (GPIO_InitStruct->GPIO_Mode == GPIO_Mode
 226:FWLIB/src/stm32f4xx_gpio.c ****       {
 227:FWLIB/src/stm32f4xx_gpio.c ****         /* Check Speed mode parameters */
 228:FWLIB/src/stm32f4xx_gpio.c ****         assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
 229:FWLIB/src/stm32f4xx_gpio.c **** 
 230:FWLIB/src/stm32f4xx_gpio.c ****         /* Speed mode configuration */
 231:FWLIB/src/stm32f4xx_gpio.c ****         GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (pinpos * 2));
 287              		.loc 1 231 0
 288 000a 8468     		ldr	r4, [r0, #8]
 289 000c 2240     		ands	r2, r2, r4
 290 000e 8260     		str	r2, [r0, #8]
 232:FWLIB/src/stm32f4xx_gpio.c ****         GPIOx->OSPEEDR |= ((uint32_t)(GPIO_InitStruct->GPIO_Speed) << (pinpos * 2));
 291              		.loc 1 232 0
 292 0010 8268     		ldr	r2, [r0, #8]
 293 0012 4C79     		ldrb	r4, [r1, #5]	@ zero_extendqisi2
 294 0014 AC40     		lsls	r4, r4, r5
 295 0016 2243     		orrs	r2, r2, r4
 296 0018 8260     		str	r2, [r0, #8]
 233:FWLIB/src/stm32f4xx_gpio.c **** 
 234:FWLIB/src/stm32f4xx_gpio.c ****         /* Check Output mode parameters */
 235:FWLIB/src/stm32f4xx_gpio.c ****         assert_param(IS_GPIO_OTYPE(GPIO_InitStruct->GPIO_OType));
 236:FWLIB/src/stm32f4xx_gpio.c **** 
 237:FWLIB/src/stm32f4xx_gpio.c ****         /* Output mode configuration*/
 238:FWLIB/src/stm32f4xx_gpio.c ****         GPIOx->OTYPER  &= ~((GPIO_OTYPER_OT_0) << ((uint16_t)pinpos)) ;
 297              		.loc 1 238 0
 298 001a 4468     		ldr	r4, [r0, #4]
 299 001c 9FB2     		uxth	r7, r3
 300 001e 0126     		movs	r6, #1
 301              	.LVL49:
 302 0020 BE40     		lsls	r6, r6, r7
 303              	.LVL50:
 304 0022 24EA0604 		bic	r4, r4, r6
 305 0026 4460     		str	r4, [r0, #4]
 239:FWLIB/src/stm32f4xx_gpio.c ****         GPIOx->OTYPER |= (uint16_t)(((uint16_t)GPIO_InitStruct->GPIO_OType) << ((uint16_t)pinpos));
 306              		.loc 1 239 0
 307 0028 4468     		ldr	r4, [r0, #4]
 308 002a 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 309 002c BA40     		lsls	r2, r2, r7
 310 002e 92B2     		uxth	r2, r2
 311 0030 2243     		orrs	r2, r2, r4
 312 0032 4260     		str	r2, [r0, #4]
 313              	.L30:
ARM GAS  /tmp/ccb2XGtY.s 			page 11


 240:FWLIB/src/stm32f4xx_gpio.c ****       }
 241:FWLIB/src/stm32f4xx_gpio.c **** 
 242:FWLIB/src/stm32f4xx_gpio.c ****       /* Pull-up Pull down resistor configuration*/
 243:FWLIB/src/stm32f4xx_gpio.c ****       GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << ((uint16_t)pinpos * 2));
 314              		.loc 1 243 0
 315 0034 C268     		ldr	r2, [r0, #12]
 316 0036 9CB2     		uxth	r4, r3
 317 0038 6600     		lsls	r6, r4, #1
 318 003a 0324     		movs	r4, #3
 319 003c B440     		lsls	r4, r4, r6
 320 003e 22EA0402 		bic	r2, r2, r4
 321 0042 C260     		str	r2, [r0, #12]
 244:FWLIB/src/stm32f4xx_gpio.c ****       GPIOx->PUPDR |= (((uint32_t)GPIO_InitStruct->GPIO_PuPd) << (pinpos * 2));
 322              		.loc 1 244 0
 323 0044 C268     		ldr	r2, [r0, #12]
 324 0046 CC79     		ldrb	r4, [r1, #7]	@ zero_extendqisi2
 325 0048 04FA05F5 		lsl	r5, r4, r5
 326 004c 1543     		orrs	r5, r5, r2
 327 004e C560     		str	r5, [r0, #12]
 328              	.L29:
 214:FWLIB/src/stm32f4xx_gpio.c ****   {
 329              		.loc 1 214 0 discriminator 2
 330 0050 0133     		adds	r3, r3, #1
 331              	.LVL51:
 332 0052 0F2B     		cmp	r3, #15
 333 0054 16D8     		bhi	.L36
 334              	.LVL52:
 335              	.L31:
 216:FWLIB/src/stm32f4xx_gpio.c ****     /* Get the port pins position */
 336              		.loc 1 216 0
 337 0056 0122     		movs	r2, #1
 338 0058 9A40     		lsls	r2, r2, r3
 339              	.LVL53:
 218:FWLIB/src/stm32f4xx_gpio.c **** 
 340              		.loc 1 218 0
 341 005a 0C68     		ldr	r4, [r1]
 342              	.LVL54:
 220:FWLIB/src/stm32f4xx_gpio.c ****     {
 343              		.loc 1 220 0
 344 005c A243     		bics	r2, r2, r4
 345              	.LVL55:
 346 005e F7D1     		bne	.L29
 222:FWLIB/src/stm32f4xx_gpio.c ****       GPIOx->MODER |= (((uint32_t)GPIO_InitStruct->GPIO_Mode) << (pinpos * 2));
 347              		.loc 1 222 0
 348 0060 0468     		ldr	r4, [r0]
 349              	.LVL56:
 350 0062 5D00     		lsls	r5, r3, #1
 351 0064 0322     		movs	r2, #3
 352 0066 AA40     		lsls	r2, r2, r5
 353 0068 D243     		mvns	r2, r2
 354 006a 1440     		ands	r4, r4, r2
 355 006c 0460     		str	r4, [r0]
 356              	.LVL57:
 223:FWLIB/src/stm32f4xx_gpio.c **** 
 357              		.loc 1 223 0
 358 006e 0468     		ldr	r4, [r0]
 359 0070 0E79     		ldrb	r6, [r1, #4]	@ zero_extendqisi2
ARM GAS  /tmp/ccb2XGtY.s 			page 12


 360 0072 AE40     		lsls	r6, r6, r5
 361 0074 3443     		orrs	r4, r4, r6
 362 0076 0460     		str	r4, [r0]
 225:FWLIB/src/stm32f4xx_gpio.c ****       {
 363              		.loc 1 225 0
 364 0078 0C79     		ldrb	r4, [r1, #4]	@ zero_extendqisi2
 365 007a 013C     		subs	r4, r4, #1
 366 007c E4B2     		uxtb	r4, r4
 367 007e 012C     		cmp	r4, #1
 368 0080 D8D8     		bhi	.L30
 369 0082 C2E7     		b	.L37
 370              	.LVL58:
 371              	.L36:
 245:FWLIB/src/stm32f4xx_gpio.c ****     }
 246:FWLIB/src/stm32f4xx_gpio.c ****   }
 247:FWLIB/src/stm32f4xx_gpio.c **** }
 372              		.loc 1 247 0
 373 0084 F0BC     		pop	{r4, r5, r6, r7}
 374              	.LCFI2:
 375              		.cfi_restore 7
 376              		.cfi_restore 6
 377              		.cfi_restore 5
 378              		.cfi_restore 4
 379              		.cfi_def_cfa_offset 0
 380 0086 7047     		bx	lr
 381              	.LVL59:
 382              	.L35:
 383 0088 7047     		bx	lr
 384              		.cfi_endproc
 385              	.LFE113:
 387              		.section	.text.GPIO_StructInit,"ax",%progbits
 388              		.align	1
 389              		.global	GPIO_StructInit
 390              		.syntax unified
 391              		.thumb
 392              		.thumb_func
 393              		.fpu softvfp
 395              	GPIO_StructInit:
 396              	.LFB114:
 248:FWLIB/src/stm32f4xx_gpio.c **** 
 249:FWLIB/src/stm32f4xx_gpio.c **** /**
 250:FWLIB/src/stm32f4xx_gpio.c ****   * @brief  Fills each GPIO_InitStruct member with its default value.
 251:FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIO_InitStruct : pointer to a GPIO_InitTypeDef structure which will be initialized.
 252:FWLIB/src/stm32f4xx_gpio.c ****   * @retval None
 253:FWLIB/src/stm32f4xx_gpio.c ****   */
 254:FWLIB/src/stm32f4xx_gpio.c **** void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct)
 255:FWLIB/src/stm32f4xx_gpio.c **** {
 397              		.loc 1 255 0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401              		@ link register save eliminated.
 402              	.LVL60:
 256:FWLIB/src/stm32f4xx_gpio.c ****   /* Reset GPIO init structure parameters values */
 257:FWLIB/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Pin  = GPIO_Pin_All;
 403              		.loc 1 257 0
 404 0000 4FF6FF73 		movw	r3, #65535
ARM GAS  /tmp/ccb2XGtY.s 			page 13


 405 0004 0360     		str	r3, [r0]
 258:FWLIB/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_IN;
 406              		.loc 1 258 0
 407 0006 0023     		movs	r3, #0
 408 0008 0371     		strb	r3, [r0, #4]
 259:FWLIB/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Speed = GPIO_Speed_2MHz;
 409              		.loc 1 259 0
 410 000a 4371     		strb	r3, [r0, #5]
 260:FWLIB/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_OType = GPIO_OType_PP;
 411              		.loc 1 260 0
 412 000c 8371     		strb	r3, [r0, #6]
 261:FWLIB/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_PuPd = GPIO_PuPd_NOPULL;
 413              		.loc 1 261 0
 414 000e C371     		strb	r3, [r0, #7]
 415 0010 7047     		bx	lr
 416              		.cfi_endproc
 417              	.LFE114:
 419              		.section	.text.GPIO_PinLockConfig,"ax",%progbits
 420              		.align	1
 421              		.global	GPIO_PinLockConfig
 422              		.syntax unified
 423              		.thumb
 424              		.thumb_func
 425              		.fpu softvfp
 427              	GPIO_PinLockConfig:
 428              	.LFB115:
 262:FWLIB/src/stm32f4xx_gpio.c **** }
 263:FWLIB/src/stm32f4xx_gpio.c **** 
 264:FWLIB/src/stm32f4xx_gpio.c **** /**
 265:FWLIB/src/stm32f4xx_gpio.c ****   * @brief  Locks GPIO Pins configuration registers.
 266:FWLIB/src/stm32f4xx_gpio.c ****   * @note   The locked registers are GPIOx_MODER, GPIOx_OTYPER, GPIOx_OSPEEDR,
 267:FWLIB/src/stm32f4xx_gpio.c ****   *         GPIOx_PUPDR, GPIOx_AFRL and GPIOx_AFRH.
 268:FWLIB/src/stm32f4xx_gpio.c ****   * @note   The configuration of the locked GPIO pins can no longer be modified
 269:FWLIB/src/stm32f4xx_gpio.c ****   *         until the next reset.
 270:FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 271:FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 272:FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 273:FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to be locked.
 274:FWLIB/src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 275:FWLIB/src/stm32f4xx_gpio.c ****   * @retval None
 276:FWLIB/src/stm32f4xx_gpio.c ****   */
 277:FWLIB/src/stm32f4xx_gpio.c **** void GPIO_PinLockConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 278:FWLIB/src/stm32f4xx_gpio.c **** {
 429              		.loc 1 278 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 8
 432              		@ frame_needed = 0, uses_anonymous_args = 0
 433              		@ link register save eliminated.
 434              	.LVL61:
 435 0000 82B0     		sub	sp, sp, #8
 436              	.LCFI3:
 437              		.cfi_def_cfa_offset 8
 279:FWLIB/src/stm32f4xx_gpio.c ****   __IO uint32_t tmp = 0x00010000;
 438              		.loc 1 279 0
 439 0002 4FF48033 		mov	r3, #65536
 440 0006 0193     		str	r3, [sp, #4]
 280:FWLIB/src/stm32f4xx_gpio.c **** 
ARM GAS  /tmp/ccb2XGtY.s 			page 14


 281:FWLIB/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 282:FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 283:FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 284:FWLIB/src/stm32f4xx_gpio.c **** 
 285:FWLIB/src/stm32f4xx_gpio.c ****   tmp |= GPIO_Pin;
 441              		.loc 1 285 0
 442 0008 019B     		ldr	r3, [sp, #4]
 443 000a 0B43     		orrs	r3, r3, r1
 444 000c 0193     		str	r3, [sp, #4]
 286:FWLIB/src/stm32f4xx_gpio.c ****   /* Set LCKK bit */
 287:FWLIB/src/stm32f4xx_gpio.c ****   GPIOx->LCKR = tmp;
 445              		.loc 1 287 0
 446 000e 019B     		ldr	r3, [sp, #4]
 447 0010 C361     		str	r3, [r0, #28]
 288:FWLIB/src/stm32f4xx_gpio.c ****   /* Reset LCKK bit */
 289:FWLIB/src/stm32f4xx_gpio.c ****   GPIOx->LCKR =  GPIO_Pin;
 448              		.loc 1 289 0
 449 0012 C161     		str	r1, [r0, #28]
 290:FWLIB/src/stm32f4xx_gpio.c ****   /* Set LCKK bit */
 291:FWLIB/src/stm32f4xx_gpio.c ****   GPIOx->LCKR = tmp;
 450              		.loc 1 291 0
 451 0014 019B     		ldr	r3, [sp, #4]
 452 0016 C361     		str	r3, [r0, #28]
 292:FWLIB/src/stm32f4xx_gpio.c ****   /* Read LCKK bit*/
 293:FWLIB/src/stm32f4xx_gpio.c ****   tmp = GPIOx->LCKR;
 453              		.loc 1 293 0
 454 0018 C369     		ldr	r3, [r0, #28]
 455 001a 0193     		str	r3, [sp, #4]
 294:FWLIB/src/stm32f4xx_gpio.c ****   /* Read LCKK bit*/
 295:FWLIB/src/stm32f4xx_gpio.c ****   tmp = GPIOx->LCKR;
 456              		.loc 1 295 0
 457 001c C369     		ldr	r3, [r0, #28]
 458 001e 0193     		str	r3, [sp, #4]
 296:FWLIB/src/stm32f4xx_gpio.c **** }
 459              		.loc 1 296 0
 460 0020 02B0     		add	sp, sp, #8
 461              	.LCFI4:
 462              		.cfi_def_cfa_offset 0
 463              		@ sp needed
 464 0022 7047     		bx	lr
 465              		.cfi_endproc
 466              	.LFE115:
 468              		.section	.text.GPIO_ReadInputDataBit,"ax",%progbits
 469              		.align	1
 470              		.global	GPIO_ReadInputDataBit
 471              		.syntax unified
 472              		.thumb
 473              		.thumb_func
 474              		.fpu softvfp
 476              	GPIO_ReadInputDataBit:
 477              	.LFB116:
 297:FWLIB/src/stm32f4xx_gpio.c **** 
 298:FWLIB/src/stm32f4xx_gpio.c **** /**
 299:FWLIB/src/stm32f4xx_gpio.c ****   * @}
 300:FWLIB/src/stm32f4xx_gpio.c ****   */
 301:FWLIB/src/stm32f4xx_gpio.c **** 
 302:FWLIB/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group2 GPIO Read and Write
ARM GAS  /tmp/ccb2XGtY.s 			page 15


 303:FWLIB/src/stm32f4xx_gpio.c ****  *  @brief   GPIO Read and Write
 304:FWLIB/src/stm32f4xx_gpio.c ****  *
 305:FWLIB/src/stm32f4xx_gpio.c **** @verbatim   
 306:FWLIB/src/stm32f4xx_gpio.c ****  ===============================================================================
 307:FWLIB/src/stm32f4xx_gpio.c ****                          ##### GPIO Read and Write #####
 308:FWLIB/src/stm32f4xx_gpio.c ****  ===============================================================================  
 309:FWLIB/src/stm32f4xx_gpio.c **** 
 310:FWLIB/src/stm32f4xx_gpio.c **** @endverbatim
 311:FWLIB/src/stm32f4xx_gpio.c ****   * @{
 312:FWLIB/src/stm32f4xx_gpio.c ****   */
 313:FWLIB/src/stm32f4xx_gpio.c **** 
 314:FWLIB/src/stm32f4xx_gpio.c **** /**
 315:FWLIB/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified input port pin.
 316:FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 317:FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 318:FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 319:FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to read.
 320:FWLIB/src/stm32f4xx_gpio.c ****   *         This parameter can be GPIO_Pin_x where x can be (0..15).
 321:FWLIB/src/stm32f4xx_gpio.c ****   * @retval The input port pin value.
 322:FWLIB/src/stm32f4xx_gpio.c ****   */
 323:FWLIB/src/stm32f4xx_gpio.c **** uint8_t GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 324:FWLIB/src/stm32f4xx_gpio.c **** {
 478              		.loc 1 324 0
 479              		.cfi_startproc
 480              		@ args = 0, pretend = 0, frame = 0
 481              		@ frame_needed = 0, uses_anonymous_args = 0
 482              		@ link register save eliminated.
 483              	.LVL62:
 325:FWLIB/src/stm32f4xx_gpio.c ****   uint8_t bitstatus = 0x00;
 326:FWLIB/src/stm32f4xx_gpio.c **** 
 327:FWLIB/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 328:FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 329:FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 330:FWLIB/src/stm32f4xx_gpio.c **** 
 331:FWLIB/src/stm32f4xx_gpio.c ****   if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)Bit_RESET)
 484              		.loc 1 331 0
 485 0000 0369     		ldr	r3, [r0, #16]
 486 0002 1942     		tst	r1, r3
 487 0004 01D1     		bne	.L44
 332:FWLIB/src/stm32f4xx_gpio.c ****   {
 333:FWLIB/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_SET;
 334:FWLIB/src/stm32f4xx_gpio.c ****   }
 335:FWLIB/src/stm32f4xx_gpio.c ****   else
 336:FWLIB/src/stm32f4xx_gpio.c ****   {
 337:FWLIB/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_RESET;
 488              		.loc 1 337 0
 489 0006 0020     		movs	r0, #0
 490              	.LVL63:
 338:FWLIB/src/stm32f4xx_gpio.c ****   }
 339:FWLIB/src/stm32f4xx_gpio.c ****   return bitstatus;
 340:FWLIB/src/stm32f4xx_gpio.c **** }
 491              		.loc 1 340 0
 492 0008 7047     		bx	lr
 493              	.LVL64:
 494              	.L44:
 333:FWLIB/src/stm32f4xx_gpio.c ****   }
 495              		.loc 1 333 0
ARM GAS  /tmp/ccb2XGtY.s 			page 16


 496 000a 0120     		movs	r0, #1
 497              	.LVL65:
 498 000c 7047     		bx	lr
 499              		.cfi_endproc
 500              	.LFE116:
 502              		.section	.text.GPIO_ReadInputData,"ax",%progbits
 503              		.align	1
 504              		.global	GPIO_ReadInputData
 505              		.syntax unified
 506              		.thumb
 507              		.thumb_func
 508              		.fpu softvfp
 510              	GPIO_ReadInputData:
 511              	.LFB117:
 341:FWLIB/src/stm32f4xx_gpio.c **** 
 342:FWLIB/src/stm32f4xx_gpio.c **** /**
 343:FWLIB/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified GPIO input data port.
 344:FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 345:FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 346:FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 347:FWLIB/src/stm32f4xx_gpio.c ****   * @retval GPIO input data port value.
 348:FWLIB/src/stm32f4xx_gpio.c ****   */
 349:FWLIB/src/stm32f4xx_gpio.c **** uint16_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx)
 350:FWLIB/src/stm32f4xx_gpio.c **** {
 512              		.loc 1 350 0
 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 0
 515              		@ frame_needed = 0, uses_anonymous_args = 0
 516              		@ link register save eliminated.
 517              	.LVL66:
 351:FWLIB/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 352:FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 353:FWLIB/src/stm32f4xx_gpio.c **** 
 354:FWLIB/src/stm32f4xx_gpio.c ****   return ((uint16_t)GPIOx->IDR);
 518              		.loc 1 354 0
 519 0000 0069     		ldr	r0, [r0, #16]
 520              	.LVL67:
 355:FWLIB/src/stm32f4xx_gpio.c **** }
 521              		.loc 1 355 0
 522 0002 80B2     		uxth	r0, r0
 523 0004 7047     		bx	lr
 524              		.cfi_endproc
 525              	.LFE117:
 527              		.section	.text.GPIO_ReadOutputDataBit,"ax",%progbits
 528              		.align	1
 529              		.global	GPIO_ReadOutputDataBit
 530              		.syntax unified
 531              		.thumb
 532              		.thumb_func
 533              		.fpu softvfp
 535              	GPIO_ReadOutputDataBit:
 536              	.LFB118:
 356:FWLIB/src/stm32f4xx_gpio.c **** 
 357:FWLIB/src/stm32f4xx_gpio.c **** /**
 358:FWLIB/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified output data port bit.
 359:FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 360:FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
ARM GAS  /tmp/ccb2XGtY.s 			page 17


 361:FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 362:FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to read.
 363:FWLIB/src/stm32f4xx_gpio.c ****   *          This parameter can be GPIO_Pin_x where x can be (0..15).
 364:FWLIB/src/stm32f4xx_gpio.c ****   * @retval The output port pin value.
 365:FWLIB/src/stm32f4xx_gpio.c ****   */
 366:FWLIB/src/stm32f4xx_gpio.c **** uint8_t GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 367:FWLIB/src/stm32f4xx_gpio.c **** {
 537              		.loc 1 367 0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541              		@ link register save eliminated.
 542              	.LVL68:
 368:FWLIB/src/stm32f4xx_gpio.c ****   uint8_t bitstatus = 0x00;
 369:FWLIB/src/stm32f4xx_gpio.c **** 
 370:FWLIB/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 371:FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 372:FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 373:FWLIB/src/stm32f4xx_gpio.c **** 
 374:FWLIB/src/stm32f4xx_gpio.c ****   if (((GPIOx->ODR) & GPIO_Pin) != (uint32_t)Bit_RESET)
 543              		.loc 1 374 0
 544 0000 4369     		ldr	r3, [r0, #20]
 545 0002 1942     		tst	r1, r3
 546 0004 01D1     		bne	.L49
 375:FWLIB/src/stm32f4xx_gpio.c ****   {
 376:FWLIB/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_SET;
 377:FWLIB/src/stm32f4xx_gpio.c ****   }
 378:FWLIB/src/stm32f4xx_gpio.c ****   else
 379:FWLIB/src/stm32f4xx_gpio.c ****   {
 380:FWLIB/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_RESET;
 547              		.loc 1 380 0
 548 0006 0020     		movs	r0, #0
 549              	.LVL69:
 381:FWLIB/src/stm32f4xx_gpio.c ****   }
 382:FWLIB/src/stm32f4xx_gpio.c ****   return bitstatus;
 383:FWLIB/src/stm32f4xx_gpio.c **** }
 550              		.loc 1 383 0
 551 0008 7047     		bx	lr
 552              	.LVL70:
 553              	.L49:
 376:FWLIB/src/stm32f4xx_gpio.c ****   }
 554              		.loc 1 376 0
 555 000a 0120     		movs	r0, #1
 556              	.LVL71:
 557 000c 7047     		bx	lr
 558              		.cfi_endproc
 559              	.LFE118:
 561              		.section	.text.GPIO_ReadOutputData,"ax",%progbits
 562              		.align	1
 563              		.global	GPIO_ReadOutputData
 564              		.syntax unified
 565              		.thumb
 566              		.thumb_func
 567              		.fpu softvfp
 569              	GPIO_ReadOutputData:
 570              	.LFB119:
 384:FWLIB/src/stm32f4xx_gpio.c **** 
ARM GAS  /tmp/ccb2XGtY.s 			page 18


 385:FWLIB/src/stm32f4xx_gpio.c **** /**
 386:FWLIB/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified GPIO output data port.
 387:FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 388:FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 389:FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 390:FWLIB/src/stm32f4xx_gpio.c ****   * @retval GPIO output data port value.
 391:FWLIB/src/stm32f4xx_gpio.c ****   */
 392:FWLIB/src/stm32f4xx_gpio.c **** uint16_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx)
 393:FWLIB/src/stm32f4xx_gpio.c **** {
 571              		.loc 1 393 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 0
 574              		@ frame_needed = 0, uses_anonymous_args = 0
 575              		@ link register save eliminated.
 576              	.LVL72:
 394:FWLIB/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 395:FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 396:FWLIB/src/stm32f4xx_gpio.c **** 
 397:FWLIB/src/stm32f4xx_gpio.c ****   return ((uint16_t)GPIOx->ODR);
 577              		.loc 1 397 0
 578 0000 4069     		ldr	r0, [r0, #20]
 579              	.LVL73:
 398:FWLIB/src/stm32f4xx_gpio.c **** }
 580              		.loc 1 398 0
 581 0002 80B2     		uxth	r0, r0
 582 0004 7047     		bx	lr
 583              		.cfi_endproc
 584              	.LFE119:
 586              		.section	.text.GPIO_SetBits,"ax",%progbits
 587              		.align	1
 588              		.global	GPIO_SetBits
 589              		.syntax unified
 590              		.thumb
 591              		.thumb_func
 592              		.fpu softvfp
 594              	GPIO_SetBits:
 595              	.LFB120:
 399:FWLIB/src/stm32f4xx_gpio.c **** 
 400:FWLIB/src/stm32f4xx_gpio.c **** /**
 401:FWLIB/src/stm32f4xx_gpio.c ****   * @brief  Sets the selected data port bits.
 402:FWLIB/src/stm32f4xx_gpio.c ****   * @note   This functions uses GPIOx_BSRR register to allow atomic read/modify 
 403:FWLIB/src/stm32f4xx_gpio.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
 404:FWLIB/src/stm32f4xx_gpio.c ****   *         the read and the modify access.
 405:FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 406:FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 407:FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 408:FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bits to be written.
 409:FWLIB/src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 410:FWLIB/src/stm32f4xx_gpio.c ****   * @retval None
 411:FWLIB/src/stm32f4xx_gpio.c ****   */
 412:FWLIB/src/stm32f4xx_gpio.c **** void GPIO_SetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 413:FWLIB/src/stm32f4xx_gpio.c **** {
 596              		.loc 1 413 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              		@ link register save eliminated.
ARM GAS  /tmp/ccb2XGtY.s 			page 19


 601              	.LVL74:
 414:FWLIB/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 415:FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 416:FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 417:FWLIB/src/stm32f4xx_gpio.c **** 
 418:FWLIB/src/stm32f4xx_gpio.c ****   GPIOx->BSRRL = GPIO_Pin;
 602              		.loc 1 418 0
 603 0000 0183     		strh	r1, [r0, #24]	@ movhi
 604 0002 7047     		bx	lr
 605              		.cfi_endproc
 606              	.LFE120:
 608              		.section	.text.GPIO_ResetBits,"ax",%progbits
 609              		.align	1
 610              		.global	GPIO_ResetBits
 611              		.syntax unified
 612              		.thumb
 613              		.thumb_func
 614              		.fpu softvfp
 616              	GPIO_ResetBits:
 617              	.LFB121:
 419:FWLIB/src/stm32f4xx_gpio.c **** }
 420:FWLIB/src/stm32f4xx_gpio.c **** 
 421:FWLIB/src/stm32f4xx_gpio.c **** /**
 422:FWLIB/src/stm32f4xx_gpio.c ****   * @brief  Clears the selected data port bits.
 423:FWLIB/src/stm32f4xx_gpio.c ****   * @note   This functions uses GPIOx_BSRR register to allow atomic read/modify 
 424:FWLIB/src/stm32f4xx_gpio.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
 425:FWLIB/src/stm32f4xx_gpio.c ****   *         the read and the modify access.
 426:FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 427:FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 428:FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 429:FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bits to be written.
 430:FWLIB/src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 431:FWLIB/src/stm32f4xx_gpio.c ****   * @retval None
 432:FWLIB/src/stm32f4xx_gpio.c ****   */
 433:FWLIB/src/stm32f4xx_gpio.c **** void GPIO_ResetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 434:FWLIB/src/stm32f4xx_gpio.c **** {
 618              		.loc 1 434 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 0, uses_anonymous_args = 0
 622              		@ link register save eliminated.
 623              	.LVL75:
 435:FWLIB/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 436:FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 437:FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 438:FWLIB/src/stm32f4xx_gpio.c **** 
 439:FWLIB/src/stm32f4xx_gpio.c ****   GPIOx->BSRRH = GPIO_Pin;
 624              		.loc 1 439 0
 625 0000 4183     		strh	r1, [r0, #26]	@ movhi
 626 0002 7047     		bx	lr
 627              		.cfi_endproc
 628              	.LFE121:
 630              		.section	.text.GPIO_WriteBit,"ax",%progbits
 631              		.align	1
 632              		.global	GPIO_WriteBit
 633              		.syntax unified
 634              		.thumb
ARM GAS  /tmp/ccb2XGtY.s 			page 20


 635              		.thumb_func
 636              		.fpu softvfp
 638              	GPIO_WriteBit:
 639              	.LFB122:
 440:FWLIB/src/stm32f4xx_gpio.c **** }
 441:FWLIB/src/stm32f4xx_gpio.c **** 
 442:FWLIB/src/stm32f4xx_gpio.c **** /**
 443:FWLIB/src/stm32f4xx_gpio.c ****   * @brief  Sets or clears the selected data port bit.
 444:FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 445:FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 446:FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 447:FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to be written.
 448:FWLIB/src/stm32f4xx_gpio.c ****   *          This parameter can be one of GPIO_Pin_x where x can be (0..15).
 449:FWLIB/src/stm32f4xx_gpio.c ****   * @param  BitVal: specifies the value to be written to the selected bit.
 450:FWLIB/src/stm32f4xx_gpio.c ****   *          This parameter can be one of the BitAction enum values:
 451:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg Bit_RESET: to clear the port pin
 452:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg Bit_SET: to set the port pin
 453:FWLIB/src/stm32f4xx_gpio.c ****   * @retval None
 454:FWLIB/src/stm32f4xx_gpio.c ****   */
 455:FWLIB/src/stm32f4xx_gpio.c **** void GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal)
 456:FWLIB/src/stm32f4xx_gpio.c **** {
 640              		.loc 1 456 0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 0
 643              		@ frame_needed = 0, uses_anonymous_args = 0
 644              		@ link register save eliminated.
 645              	.LVL76:
 457:FWLIB/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 458:FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 459:FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 460:FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_BIT_ACTION(BitVal));
 461:FWLIB/src/stm32f4xx_gpio.c **** 
 462:FWLIB/src/stm32f4xx_gpio.c ****   if (BitVal != Bit_RESET)
 646              		.loc 1 462 0
 647 0000 0AB9     		cbnz	r2, .L56
 463:FWLIB/src/stm32f4xx_gpio.c ****   {
 464:FWLIB/src/stm32f4xx_gpio.c ****     GPIOx->BSRRL = GPIO_Pin;
 465:FWLIB/src/stm32f4xx_gpio.c ****   }
 466:FWLIB/src/stm32f4xx_gpio.c ****   else
 467:FWLIB/src/stm32f4xx_gpio.c ****   {
 468:FWLIB/src/stm32f4xx_gpio.c ****     GPIOx->BSRRH = GPIO_Pin ;
 648              		.loc 1 468 0
 649 0002 4183     		strh	r1, [r0, #26]	@ movhi
 650 0004 7047     		bx	lr
 651              	.L56:
 464:FWLIB/src/stm32f4xx_gpio.c ****   }
 652              		.loc 1 464 0
 653 0006 0183     		strh	r1, [r0, #24]	@ movhi
 654 0008 7047     		bx	lr
 655              		.cfi_endproc
 656              	.LFE122:
 658              		.section	.text.GPIO_Write,"ax",%progbits
 659              		.align	1
 660              		.global	GPIO_Write
 661              		.syntax unified
 662              		.thumb
 663              		.thumb_func
ARM GAS  /tmp/ccb2XGtY.s 			page 21


 664              		.fpu softvfp
 666              	GPIO_Write:
 667              	.LFB123:
 469:FWLIB/src/stm32f4xx_gpio.c ****   }
 470:FWLIB/src/stm32f4xx_gpio.c **** }
 471:FWLIB/src/stm32f4xx_gpio.c **** 
 472:FWLIB/src/stm32f4xx_gpio.c **** /**
 473:FWLIB/src/stm32f4xx_gpio.c ****   * @brief  Writes data to the specified GPIO data port.
 474:FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 475:FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 476:FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 477:FWLIB/src/stm32f4xx_gpio.c ****   * @param  PortVal: specifies the value to be written to the port output data register.
 478:FWLIB/src/stm32f4xx_gpio.c ****   * @retval None
 479:FWLIB/src/stm32f4xx_gpio.c ****   */
 480:FWLIB/src/stm32f4xx_gpio.c **** void GPIO_Write(GPIO_TypeDef* GPIOx, uint16_t PortVal)
 481:FWLIB/src/stm32f4xx_gpio.c **** {
 668              		.loc 1 481 0
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 0
 671              		@ frame_needed = 0, uses_anonymous_args = 0
 672              		@ link register save eliminated.
 673              	.LVL77:
 482:FWLIB/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 483:FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 484:FWLIB/src/stm32f4xx_gpio.c **** 
 485:FWLIB/src/stm32f4xx_gpio.c ****   GPIOx->ODR = PortVal;
 674              		.loc 1 485 0
 675 0000 4161     		str	r1, [r0, #20]
 676 0002 7047     		bx	lr
 677              		.cfi_endproc
 678              	.LFE123:
 680              		.section	.text.GPIO_ToggleBits,"ax",%progbits
 681              		.align	1
 682              		.global	GPIO_ToggleBits
 683              		.syntax unified
 684              		.thumb
 685              		.thumb_func
 686              		.fpu softvfp
 688              	GPIO_ToggleBits:
 689              	.LFB124:
 486:FWLIB/src/stm32f4xx_gpio.c **** }
 487:FWLIB/src/stm32f4xx_gpio.c **** 
 488:FWLIB/src/stm32f4xx_gpio.c **** /**
 489:FWLIB/src/stm32f4xx_gpio.c ****   * @brief  Toggles the specified GPIO pins..
 490:FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 491:FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 492:FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 493:FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: Specifies the pins to be toggled.
 494:FWLIB/src/stm32f4xx_gpio.c ****   * @retval None
 495:FWLIB/src/stm32f4xx_gpio.c ****   */
 496:FWLIB/src/stm32f4xx_gpio.c **** void GPIO_ToggleBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 497:FWLIB/src/stm32f4xx_gpio.c **** {
 690              		.loc 1 497 0
 691              		.cfi_startproc
 692              		@ args = 0, pretend = 0, frame = 0
 693              		@ frame_needed = 0, uses_anonymous_args = 0
 694              		@ link register save eliminated.
ARM GAS  /tmp/ccb2XGtY.s 			page 22


 695              	.LVL78:
 498:FWLIB/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 499:FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 500:FWLIB/src/stm32f4xx_gpio.c **** 
 501:FWLIB/src/stm32f4xx_gpio.c ****   GPIOx->ODR ^= GPIO_Pin;
 696              		.loc 1 501 0
 697 0000 4369     		ldr	r3, [r0, #20]
 698 0002 5940     		eors	r1, r1, r3
 699              	.LVL79:
 700 0004 4161     		str	r1, [r0, #20]
 701 0006 7047     		bx	lr
 702              		.cfi_endproc
 703              	.LFE124:
 705              		.section	.text.GPIO_PinAFConfig,"ax",%progbits
 706              		.align	1
 707              		.global	GPIO_PinAFConfig
 708              		.syntax unified
 709              		.thumb
 710              		.thumb_func
 711              		.fpu softvfp
 713              	GPIO_PinAFConfig:
 714              	.LFB125:
 502:FWLIB/src/stm32f4xx_gpio.c **** }
 503:FWLIB/src/stm32f4xx_gpio.c **** 
 504:FWLIB/src/stm32f4xx_gpio.c **** /**
 505:FWLIB/src/stm32f4xx_gpio.c ****   * @}
 506:FWLIB/src/stm32f4xx_gpio.c ****   */
 507:FWLIB/src/stm32f4xx_gpio.c **** 
 508:FWLIB/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group3 GPIO Alternate functions configuration function
 509:FWLIB/src/stm32f4xx_gpio.c ****  *  @brief   GPIO Alternate functions configuration function
 510:FWLIB/src/stm32f4xx_gpio.c ****  *
 511:FWLIB/src/stm32f4xx_gpio.c **** @verbatim   
 512:FWLIB/src/stm32f4xx_gpio.c ****  ===============================================================================
 513:FWLIB/src/stm32f4xx_gpio.c ****            ##### GPIO Alternate functions configuration function #####
 514:FWLIB/src/stm32f4xx_gpio.c ****  ===============================================================================  
 515:FWLIB/src/stm32f4xx_gpio.c **** 
 516:FWLIB/src/stm32f4xx_gpio.c **** @endverbatim
 517:FWLIB/src/stm32f4xx_gpio.c ****   * @{
 518:FWLIB/src/stm32f4xx_gpio.c ****   */
 519:FWLIB/src/stm32f4xx_gpio.c **** 
 520:FWLIB/src/stm32f4xx_gpio.c **** /**
 521:FWLIB/src/stm32f4xx_gpio.c ****   * @brief  Changes the mapping of the specified pin.
 522:FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 523:FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 524:FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 525:FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIO_PinSource: specifies the pin for the Alternate function.
 526:FWLIB/src/stm32f4xx_gpio.c ****   *         This parameter can be GPIO_PinSourcex where x can be (0..15).
 527:FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIO_AFSelection: selects the pin to used as Alternate function.
 528:FWLIB/src/stm32f4xx_gpio.c ****   *          This parameter can be one of the following values:
 529:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_RTC_50Hz: Connect RTC_50Hz pin to AF0 (default after reset) 
 530:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_MCO: Connect MCO pin (MCO1 and MCO2) to AF0 (default after reset) 
 531:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TAMPER: Connect TAMPER pins (TAMPER_1 and TAMPER_2) to AF0 (default aft
 532:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SWJ: Connect SWJ pins (SWD and JTAG)to AF0 (default after reset) 
 533:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TRACE: Connect TRACE pins to AF0 (default after reset)
 534:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM1: Connect TIM1 pins to AF1
 535:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM2: Connect TIM2 pins to AF1
 536:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM3: Connect TIM3 pins to AF2
ARM GAS  /tmp/ccb2XGtY.s 			page 23


 537:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM4: Connect TIM4 pins to AF2
 538:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM5: Connect TIM5 pins to AF2
 539:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM8: Connect TIM8 pins to AF3
 540:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM9: Connect TIM9 pins to AF3
 541:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM10: Connect TIM10 pins to AF3
 542:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM11: Connect TIM11 pins to AF3
 543:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C1: Connect I2C1 pins to AF4
 544:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C2: Connect I2C2 pins to AF4
 545:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C3: Connect I2C3 pins to AF4
 546:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI1: Connect SPI1 pins to AF5
 547:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI2: Connect SPI2/I2S2 pins to AF5
 548:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI4: Connect SPI4 pins to AF5 
 549:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI5: Connect SPI5 pins to AF5 
 550:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI6: Connect SPI6 pins to AF5
 551:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SAI1: Connect SAI1 pins to AF6 for STM32F42xxx/43xxx devices.       
 552:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI3: Connect SPI3/I2S3 pins to AF6
 553:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2S3ext: Connect I2S3ext pins to AF7
 554:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART1: Connect USART1 pins to AF7
 555:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART2: Connect USART2 pins to AF7
 556:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART3: Connect USART3 pins to AF7
 557:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_UART4: Connect UART4 pins to AF8
 558:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_UART5: Connect UART5 pins to AF8
 559:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART6: Connect USART6 pins to AF8
 560:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_UART7: Connect UART7 pins to AF8
 561:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_UART8: Connect UART8 pins to AF8
 562:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_CAN1: Connect CAN1 pins to AF9
 563:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_CAN2: Connect CAN2 pins to AF9
 564:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM12: Connect TIM12 pins to AF9
 565:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM13: Connect TIM13 pins to AF9
 566:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM14: Connect TIM14 pins to AF9
 567:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_FS: Connect OTG_FS pins to AF10
 568:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_HS: Connect OTG_HS pins to AF10
 569:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_ETH: Connect ETHERNET pins to AF11
 570:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_FSMC: Connect FSMC pins to AF12 
 571:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_FMC: Connect FMC pins to AF12 for STM32F42xxx/43xxx devices.   
 572:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_HS_FS: Connect OTG HS (configured in FS) pins to AF12
 573:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SDIO: Connect SDIO pins to AF12
 574:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_DCMI: Connect DCMI pins to AF13
 575:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_LTDC: Connect LTDC pins to AF14 for STM32F429xx/439xx devices. 
 576:FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_EVENTOUT: Connect EVENTOUT pins to AF15
 577:FWLIB/src/stm32f4xx_gpio.c ****   * @retval None
 578:FWLIB/src/stm32f4xx_gpio.c ****   */
 579:FWLIB/src/stm32f4xx_gpio.c **** void GPIO_PinAFConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_PinSource, uint8_t GPIO_AF)
 580:FWLIB/src/stm32f4xx_gpio.c **** {
 715              		.loc 1 580 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719              		@ link register save eliminated.
 720              	.LVL80:
 721 0000 30B4     		push	{r4, r5}
 722              	.LCFI5:
 723              		.cfi_def_cfa_offset 8
 724              		.cfi_offset 4, -8
 725              		.cfi_offset 5, -4
 726              	.LVL81:
 581:FWLIB/src/stm32f4xx_gpio.c ****   uint32_t temp = 0x00;
ARM GAS  /tmp/ccb2XGtY.s 			page 24


 582:FWLIB/src/stm32f4xx_gpio.c ****   uint32_t temp_2 = 0x00;
 583:FWLIB/src/stm32f4xx_gpio.c ****   
 584:FWLIB/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 585:FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 586:FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
 587:FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_AF(GPIO_AF));
 588:FWLIB/src/stm32f4xx_gpio.c ****   
 589:FWLIB/src/stm32f4xx_gpio.c ****   temp = ((uint32_t)(GPIO_AF) << ((uint32_t)((uint32_t)GPIO_PinSource & (uint32_t)0x07) * 4)) ;
 727              		.loc 1 589 0
 728 0002 01F00703 		and	r3, r1, #7
 729 0006 9B00     		lsls	r3, r3, #2
 730 0008 9A40     		lsls	r2, r2, r3
 731              	.LVL82:
 590:FWLIB/src/stm32f4xx_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] &= ~((uint32_t)0xF << ((uint32_t)((uint32_t)GPIO_PinSource & (
 732              		.loc 1 590 0
 733 000a C908     		lsrs	r1, r1, #3
 734              	.LVL83:
 735 000c 0831     		adds	r1, r1, #8
 736 000e 50F82140 		ldr	r4, [r0, r1, lsl #2]
 737 0012 0F25     		movs	r5, #15
 738 0014 05FA03F3 		lsl	r3, r5, r3
 739 0018 24EA0303 		bic	r3, r4, r3
 740 001c 40F82130 		str	r3, [r0, r1, lsl #2]
 591:FWLIB/src/stm32f4xx_gpio.c ****   temp_2 = GPIOx->AFR[GPIO_PinSource >> 0x03] | temp;
 741              		.loc 1 591 0
 742 0020 50F82130 		ldr	r3, [r0, r1, lsl #2]
 743 0024 1A43     		orrs	r2, r2, r3
 744              	.LVL84:
 592:FWLIB/src/stm32f4xx_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] = temp_2;
 745              		.loc 1 592 0
 746 0026 40F82120 		str	r2, [r0, r1, lsl #2]
 593:FWLIB/src/stm32f4xx_gpio.c **** }
 747              		.loc 1 593 0
 748 002a 30BC     		pop	{r4, r5}
 749              	.LCFI6:
 750              		.cfi_restore 5
 751              		.cfi_restore 4
 752              		.cfi_def_cfa_offset 0
 753 002c 7047     		bx	lr
 754              		.cfi_endproc
 755              	.LFE125:
 757              		.text
 758              	.Letext0:
 759              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 760              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 761              		.file 4 "CORE/core_cm4.h"
 762              		.file 5 "USER/system_stm32f4xx.h"
 763              		.file 6 "USER/stm32f4xx.h"
 764              		.file 7 "FWLIB/inc/stm32f4xx_gpio.h"
 765              		.file 8 "FWLIB/inc/stm32f4xx_rcc.h"
ARM GAS  /tmp/ccb2XGtY.s 			page 25


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_gpio.c
     /tmp/ccb2XGtY.s:16     .text.GPIO_DeInit:0000000000000000 $t
     /tmp/ccb2XGtY.s:23     .text.GPIO_DeInit:0000000000000000 GPIO_DeInit
     /tmp/ccb2XGtY.s:241    .text.GPIO_DeInit:0000000000000118 $d
     /tmp/ccb2XGtY.s:256    .text.GPIO_Init:0000000000000000 $t
     /tmp/ccb2XGtY.s:263    .text.GPIO_Init:0000000000000000 GPIO_Init
     /tmp/ccb2XGtY.s:388    .text.GPIO_StructInit:0000000000000000 $t
     /tmp/ccb2XGtY.s:395    .text.GPIO_StructInit:0000000000000000 GPIO_StructInit
     /tmp/ccb2XGtY.s:420    .text.GPIO_PinLockConfig:0000000000000000 $t
     /tmp/ccb2XGtY.s:427    .text.GPIO_PinLockConfig:0000000000000000 GPIO_PinLockConfig
     /tmp/ccb2XGtY.s:469    .text.GPIO_ReadInputDataBit:0000000000000000 $t
     /tmp/ccb2XGtY.s:476    .text.GPIO_ReadInputDataBit:0000000000000000 GPIO_ReadInputDataBit
     /tmp/ccb2XGtY.s:503    .text.GPIO_ReadInputData:0000000000000000 $t
     /tmp/ccb2XGtY.s:510    .text.GPIO_ReadInputData:0000000000000000 GPIO_ReadInputData
     /tmp/ccb2XGtY.s:528    .text.GPIO_ReadOutputDataBit:0000000000000000 $t
     /tmp/ccb2XGtY.s:535    .text.GPIO_ReadOutputDataBit:0000000000000000 GPIO_ReadOutputDataBit
     /tmp/ccb2XGtY.s:562    .text.GPIO_ReadOutputData:0000000000000000 $t
     /tmp/ccb2XGtY.s:569    .text.GPIO_ReadOutputData:0000000000000000 GPIO_ReadOutputData
     /tmp/ccb2XGtY.s:587    .text.GPIO_SetBits:0000000000000000 $t
     /tmp/ccb2XGtY.s:594    .text.GPIO_SetBits:0000000000000000 GPIO_SetBits
     /tmp/ccb2XGtY.s:609    .text.GPIO_ResetBits:0000000000000000 $t
     /tmp/ccb2XGtY.s:616    .text.GPIO_ResetBits:0000000000000000 GPIO_ResetBits
     /tmp/ccb2XGtY.s:631    .text.GPIO_WriteBit:0000000000000000 $t
     /tmp/ccb2XGtY.s:638    .text.GPIO_WriteBit:0000000000000000 GPIO_WriteBit
     /tmp/ccb2XGtY.s:659    .text.GPIO_Write:0000000000000000 $t
     /tmp/ccb2XGtY.s:666    .text.GPIO_Write:0000000000000000 GPIO_Write
     /tmp/ccb2XGtY.s:681    .text.GPIO_ToggleBits:0000000000000000 $t
     /tmp/ccb2XGtY.s:688    .text.GPIO_ToggleBits:0000000000000000 GPIO_ToggleBits
     /tmp/ccb2XGtY.s:706    .text.GPIO_PinAFConfig:0000000000000000 $t
     /tmp/ccb2XGtY.s:713    .text.GPIO_PinAFConfig:0000000000000000 GPIO_PinAFConfig
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
RCC_AHB1PeriphResetCmd
