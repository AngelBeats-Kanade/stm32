ARM GAS  /tmp/cc1HLtyU.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"adc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.Adc_DMA_Init,"ax",%progbits
  16              		.align	1
  17              		.global	Adc_DMA_Init
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	Adc_DMA_Init:
  24              	.LFB113:
  25              		.file 1 "HARDWARE/ADC/adc.c"
   1:HARDWARE/ADC/adc.c **** #include "adc.h"
   2:HARDWARE/ADC/adc.c **** #include "delay.h"		
   3:HARDWARE/ADC/adc.c **** #include "usart.h"
   4:HARDWARE/ADC/adc.c **** #include "ad9959.h"
   5:HARDWARE/ADC/adc.c **** //////////////////////////////////////////////////////////////////////////////////	 
   6:HARDWARE/ADC/adc.c **** //±¾³ÌÐòÖ»¹©Ñ§Ï°Ê¹ÓÃ£¬Î´¾­×÷ÕßÐí¿É£¬²»µÃÓÃÓÚÆäËüÈÎºÎÓÃÍ¾
   7:HARDWARE/ADC/adc.c **** //ALIENTEK STM32F407¿ª·¢°å
   8:HARDWARE/ADC/adc.c **** //ADC Çý¶¯´úÂë	   
   9:HARDWARE/ADC/adc.c **** //ÕýµãÔ­×Ó@ALIENTEK
  10:HARDWARE/ADC/adc.c **** //¼¼ÊõÂÛÌ³:www.openedv.com
  11:HARDWARE/ADC/adc.c **** //´´½¨ÈÕÆÚ:2014/5/6
  12:HARDWARE/ADC/adc.c **** //°æ±¾£ºV1.0
  13:HARDWARE/ADC/adc.c **** //°æÈ¨ËùÓÐ£¬µÁ°æ±Ø¾¿¡£
  14:HARDWARE/ADC/adc.c **** //Copyright(C) ¹ãÖÝÊÐÐÇÒíµç×Ó¿Æ¼¼ÓÐÏÞ¹«Ë¾ 2014-2024
  15:HARDWARE/ADC/adc.c **** //All rights reserved									  
  16:HARDWARE/ADC/adc.c **** ////////////////////////////////////////////////////////////////////////////////// 	
  17:HARDWARE/ADC/adc.c **** 
  18:HARDWARE/ADC/adc.c **** 
  19:HARDWARE/ADC/adc.c **** //³õÊ¼»¯ADC															   
  20:HARDWARE/ADC/adc.c **** void  Adc_DMA_Init(void)
  21:HARDWARE/ADC/adc.c **** {    
  26              		.loc 1 21 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 48
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 70B5     		push	{r4, r5, r6, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 4, -16
  34              		.cfi_offset 5, -12
  35              		.cfi_offset 6, -8
  36              		.cfi_offset 14, -4
  37 0002 8CB0     		sub	sp, sp, #48
ARM GAS  /tmp/cc1HLtyU.s 			page 2


  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 64
  22:HARDWARE/ADC/adc.c ****     GPIO_InitTypeDef  GPIO_InitStructure;
  23:HARDWARE/ADC/adc.c **** //	DMA_InitTypeDef  DMA_InitStructure;
  24:HARDWARE/ADC/adc.c **** 	ADC_CommonInitTypeDef ADC_CommonInitStructure;
  25:HARDWARE/ADC/adc.c **** 	ADC_InitTypeDef       ADC_InitStructure;
  26:HARDWARE/ADC/adc.c **** //	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_DMA2,ENABLE);//DMA2Ê±ÖÓÊ¹ÄÜ 
  27:HARDWARE/ADC/adc.c ****     
  28:HARDWARE/ADC/adc.c **** 	
  29:HARDWARE/ADC/adc.c ****     RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);//Ê¹ÄÜGPIOAÊ±ÖÓ
  40              		.loc 1 29 0
  41 0004 0121     		movs	r1, #1
  42 0006 0846     		mov	r0, r1
  43 0008 FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  44              	.LVL0:
  30:HARDWARE/ADC/adc.c **** 	//RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE);//Ê¹ÄÜGPIOBÊ±ÖÓ
  31:HARDWARE/ADC/adc.c ****     RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC1, ENABLE); //Ê¹ÄÜADC1Ê±ÖÓ
  45              		.loc 1 31 0
  46 000c 0121     		movs	r1, #1
  47 000e 4FF48070 		mov	r0, #256
  48 0012 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
  49              	.LVL1:
  32:HARDWARE/ADC/adc.c **** 	
  33:HARDWARE/ADC/adc.c ****     //ÏÈ³õÊ¼»¯ADC1Í¨6 IO¿Ú
  34:HARDWARE/ADC/adc.c ****     GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;//PA6 Í¨ 
  50              		.loc 1 34 0
  51 0016 4023     		movs	r3, #64
  52 0018 0A93     		str	r3, [sp, #40]
  35:HARDWARE/ADC/adc.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;//Ä£ÄâÊäÈë
  53              		.loc 1 35 0
  54 001a 0323     		movs	r3, #3
  55 001c 8DF82C30 		strb	r3, [sp, #44]
  36:HARDWARE/ADC/adc.c ****     GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;//²»´øÉÏÏÂÀ­
  56              		.loc 1 36 0
  57 0020 0024     		movs	r4, #0
  58 0022 8DF82F40 		strb	r4, [sp, #47]
  37:HARDWARE/ADC/adc.c ****     GPIO_Init(GPIOA, &GPIO_InitStructure);//³õÊ¼»
  59              		.loc 1 37 0
  60 0026 244D     		ldr	r5, .L3
  61 0028 0AA9     		add	r1, sp, #40
  62 002a 2846     		mov	r0, r5
  63 002c FFF7FEFF 		bl	GPIO_Init
  64              	.LVL2:
  38:HARDWARE/ADC/adc.c **** 	//³õÊ¼»¯ADC1Í¨µÀ5
  39:HARDWARE/ADC/adc.c **** 	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5;
  65              		.loc 1 39 0
  66 0030 2023     		movs	r3, #32
  67 0032 0A93     		str	r3, [sp, #40]
  40:HARDWARE/ADC/adc.c **** 	GPIO_Init(GPIOA, &GPIO_InitStructure);
  68              		.loc 1 40 0
  69 0034 0AA9     		add	r1, sp, #40
  70 0036 2846     		mov	r0, r5
  71 0038 FFF7FEFF 		bl	GPIO_Init
  72              	.LVL3:
  41:HARDWARE/ADC/adc.c **** 	//³õÊ¼»¯DMA2
  42:HARDWARE/ADC/adc.c **** 
  43:HARDWARE/ADC/adc.c ****  
ARM GAS  /tmp/cc1HLtyU.s 			page 3


  44:HARDWARE/ADC/adc.c **** 	RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1,ENABLE);	  //ADC1¸´Î»
  73              		.loc 1 44 0
  74 003c 0121     		movs	r1, #1
  75 003e 4FF48070 		mov	r0, #256
  76 0042 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  77              	.LVL4:
  45:HARDWARE/ADC/adc.c **** 	RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1,DISABLE);	//¸´Î»½áÊø	 
  78              		.loc 1 45 0
  79 0046 2146     		mov	r1, r4
  80 0048 4FF48070 		mov	r0, #256
  81 004c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  82              	.LVL5:
  46:HARDWARE/ADC/adc.c **** 
  47:HARDWARE/ADC/adc.c **** 	
  48:HARDWARE/ADC/adc.c ****   ADC_CommonInitStructure.ADC_Mode = ADC_Mode_Independent;//¶ÀÁ¢Ä£Ê½
  83              		.loc 1 48 0
  84 0050 0694     		str	r4, [sp, #24]
  49:HARDWARE/ADC/adc.c ****   ADC_CommonInitStructure.ADC_TwoSamplingDelay = ADC_TwoSamplingDelay_20Cycles;//Á½¸ö²ÉÑù½×¶ÎÖ®¼äµÄ
  85              		.loc 1 49 0
  86 0052 4FF47063 		mov	r3, #3840
  87 0056 0993     		str	r3, [sp, #36]
  50:HARDWARE/ADC/adc.c ****   ADC_CommonInitStructure.ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled; //DMAÊ§ÄÜ
  88              		.loc 1 50 0
  89 0058 0894     		str	r4, [sp, #32]
  51:HARDWARE/ADC/adc.c ****   ADC_CommonInitStructure.ADC_Prescaler = ADC_Prescaler_Div4;//Ô¤·ÖÆµ4·ÖÆµ¡£ADCCLK=PCLK2/4=84/4=21M
  90              		.loc 1 51 0
  91 005a 4FF48033 		mov	r3, #65536
  92 005e 0793     		str	r3, [sp, #28]
  52:HARDWARE/ADC/adc.c ****   ADC_CommonInit(&ADC_CommonInitStructure);//³õÊ¼»¯
  93              		.loc 1 52 0
  94 0060 06A8     		add	r0, sp, #24
  95 0062 FFF7FEFF 		bl	ADC_CommonInit
  96              	.LVL6:
  53:HARDWARE/ADC/adc.c **** 
  54:HARDWARE/ADC/adc.c ****   ADC_StructInit(&ADC_InitStructure);
  97              		.loc 1 54 0
  98 0066 6846     		mov	r0, sp
  99 0068 FFF7FEFF 		bl	ADC_StructInit
 100              	.LVL7:
  55:HARDWARE/ADC/adc.c ****   ADC_InitStructure.ADC_Resolution = ADC_Resolution_12b;//12Î»Ä£Ê½
 101              		.loc 1 55 0
 102 006c 0094     		str	r4, [sp]
  56:HARDWARE/ADC/adc.c ****   ADC_InitStructure.ADC_ScanConvMode = DISABLE;//É¨Ãè
 103              		.loc 1 56 0
 104 006e 8DF80440 		strb	r4, [sp, #4]
  57:HARDWARE/ADC/adc.c ****   ADC_InitStructure.ADC_ContinuousConvMode = ENABLE;//Á¬Ðø×ª»»
 105              		.loc 1 57 0
 106 0072 0126     		movs	r6, #1
 107 0074 8DF80560 		strb	r6, [sp, #5]
  58:HARDWARE/ADC/adc.c ****   ADC_InitStructure.ADC_ExternalTrigConvEdge = ADC_ExternalTrigConvEdge_None;//½ûÖ¹´¥·¢¼ì²â£¬Ê¹ÓÃÈí
 108              		.loc 1 58 0
 109 0078 0294     		str	r4, [sp, #8]
  59:HARDWARE/ADC/adc.c ****   ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;//ÓÒ¶ÔÆë	
 110              		.loc 1 59 0
 111 007a 0494     		str	r4, [sp, #16]
  60:HARDWARE/ADC/adc.c ****   ADC_InitStructure.ADC_NbrOfConversion = 1;//1¸ö×ª»»ÔÚ¹æÔòÐòÁÐÖÐ Ò²¾ÍÊÇÖ»×ª»»¹æÔòÐòÁÐ1 
 112              		.loc 1 60 0
ARM GAS  /tmp/cc1HLtyU.s 			page 4


 113 007c 8DF81460 		strb	r6, [sp, #20]
  61:HARDWARE/ADC/adc.c ****   ADC_Init(ADC1, &ADC_InitStructure);//ADC³õÊ¼»¯
 114              		.loc 1 61 0
 115 0080 A5F56045 		sub	r5, r5, #57344
 116 0084 6946     		mov	r1, sp
 117 0086 2846     		mov	r0, r5
 118 0088 FFF7FEFF 		bl	ADC_Init
 119              	.LVL8:
  62:HARDWARE/ADC/adc.c ****   
  63:HARDWARE/ADC/adc.c ****   
  64:HARDWARE/ADC/adc.c **** 	
  65:HARDWARE/ADC/adc.c ****   ADC_RegularChannelConfig(ADC1,ADC_Channel_5,1,ADC_SampleTime_3Cycles);
 120              		.loc 1 65 0
 121 008c 2346     		mov	r3, r4
 122 008e 3246     		mov	r2, r6
 123 0090 0521     		movs	r1, #5
 124 0092 2846     		mov	r0, r5
 125 0094 FFF7FEFF 		bl	ADC_RegularChannelConfig
 126              	.LVL9:
  66:HARDWARE/ADC/adc.c **** //  ADC_RegularChannelConfig(ADC1,ADC_Channel_6,2,ADC_SampleTime_3Cycles);
  67:HARDWARE/ADC/adc.c **** //  
  68:HARDWARE/ADC/adc.c **** 	ADC_ITConfig(ADC1, ADC_IT_EOC, ENABLE);
 127              		.loc 1 68 0
 128 0098 3246     		mov	r2, r6
 129 009a 40F20521 		movw	r1, #517
 130 009e 2846     		mov	r0, r5
 131 00a0 FFF7FEFF 		bl	ADC_ITConfig
 132              	.LVL10:
  69:HARDWARE/ADC/adc.c **** 
  70:HARDWARE/ADC/adc.c ****   //ADC_DMARequestAfterLastTransferCmd(ADC1, ENABLE);
  71:HARDWARE/ADC/adc.c ****   
  72:HARDWARE/ADC/adc.c **** 	//ADC_DMACmd(ADC1,ENABLE);
  73:HARDWARE/ADC/adc.c ****   
  74:HARDWARE/ADC/adc.c **** 	ADC_Cmd(ADC1, ENABLE);//¿ªÆôAD×ª»»Æ÷	
 133              		.loc 1 74 0
 134 00a4 3146     		mov	r1, r6
 135 00a6 2846     		mov	r0, r5
 136 00a8 FFF7FEFF 		bl	ADC_Cmd
 137              	.LVL11:
  75:HARDWARE/ADC/adc.c **** 	ADC_SoftwareStartConv(ADC1);
 138              		.loc 1 75 0
 139 00ac 2846     		mov	r0, r5
 140 00ae FFF7FEFF 		bl	ADC_SoftwareStartConv
 141              	.LVL12:
  76:HARDWARE/ADC/adc.c **** 
  77:HARDWARE/ADC/adc.c **** }				  
 142              		.loc 1 77 0
 143 00b2 0CB0     		add	sp, sp, #48
 144              	.LCFI2:
 145              		.cfi_def_cfa_offset 16
 146              		@ sp needed
 147 00b4 70BD     		pop	{r4, r5, r6, pc}
 148              	.L4:
 149 00b6 00BF     		.align	2
 150              	.L3:
 151 00b8 00000240 		.word	1073872896
 152              		.cfi_endproc
ARM GAS  /tmp/cc1HLtyU.s 			page 5


 153              	.LFE113:
 155              		.section	.text.Get_Adc,"ax",%progbits
 156              		.align	1
 157              		.global	Get_Adc
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu softvfp
 163              	Get_Adc:
 164              	.LFB114:
  78:HARDWARE/ADC/adc.c **** ////»ñµÃADCÖµ
  79:HARDWARE/ADC/adc.c **** ////ch: @ref ADC_channels 
  80:HARDWARE/ADC/adc.c **** ////Í¨µÀÖµ 0~16È¡Öµ·¶Î§Îª£ºADC_Channel_0~ADC_Channel_16
  81:HARDWARE/ADC/adc.c **** ////·µ»ØÖµ:×ª»»½á¹û
  82:HARDWARE/ADC/adc.c **** u16 Get_Adc(u8 ch)   
  83:HARDWARE/ADC/adc.c **** {
 165              		.loc 1 83 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              	.LVL13:
 170 0000 10B5     		push	{r4, lr}
 171              	.LCFI3:
 172              		.cfi_def_cfa_offset 8
 173              		.cfi_offset 4, -8
 174              		.cfi_offset 14, -4
  84:HARDWARE/ADC/adc.c **** 	  	//ÉèÖÃÖ¸¶¨ADCµÄ¹æÔò×éÍ¨µÀ£¬Ò»¸öÐòÁÐ£¬²ÉÑùÊ±¼ä
  85:HARDWARE/ADC/adc.c **** 	ADC_RegularChannelConfig(ADC1, ch, 1, ADC_SampleTime_3Cycles );	//ADC1,ADCÍ¨µÀ,480¸öÖÜÆÚ,Ìá¸ß²ÉÑùÊ
 175              		.loc 1 85 0
 176 0002 0A4C     		ldr	r4, .L8
 177 0004 0023     		movs	r3, #0
 178 0006 0122     		movs	r2, #1
 179 0008 0146     		mov	r1, r0
 180 000a 2046     		mov	r0, r4
 181              	.LVL14:
 182 000c FFF7FEFF 		bl	ADC_RegularChannelConfig
 183              	.LVL15:
  86:HARDWARE/ADC/adc.c ****   
  87:HARDWARE/ADC/adc.c **** 	ADC_SoftwareStartConv(ADC1);		//Ê¹ÄÜÖ¸¶¨µÄADC1µÄÈí¼þ×ª»»Æô¶¯¹¦ÄÜ	
 184              		.loc 1 87 0
 185 0010 2046     		mov	r0, r4
 186 0012 FFF7FEFF 		bl	ADC_SoftwareStartConv
 187              	.LVL16:
 188              	.L6:
  88:HARDWARE/ADC/adc.c **** 	 
  89:HARDWARE/ADC/adc.c **** 	while(!ADC_GetFlagStatus(ADC1, ADC_FLAG_EOC ));//µÈ´ý×ª»»½áÊø
 189              		.loc 1 89 0 discriminator 1
 190 0016 0221     		movs	r1, #2
 191 0018 0448     		ldr	r0, .L8
 192 001a FFF7FEFF 		bl	ADC_GetFlagStatus
 193              	.LVL17:
 194 001e 0028     		cmp	r0, #0
 195 0020 F9D0     		beq	.L6
  90:HARDWARE/ADC/adc.c **** 	return ADC_GetConversionValue(ADC1);	//·µ»Ø×î½üÒ»´ÎADC1¹æÔò×éµÄ×ª»»½á¹û
 196              		.loc 1 90 0
 197 0022 0248     		ldr	r0, .L8
 198 0024 FFF7FEFF 		bl	ADC_GetConversionValue
ARM GAS  /tmp/cc1HLtyU.s 			page 6


 199              	.LVL18:
  91:HARDWARE/ADC/adc.c **** }
 200              		.loc 1 91 0
 201 0028 10BD     		pop	{r4, pc}
 202              	.L9:
 203 002a 00BF     		.align	2
 204              	.L8:
 205 002c 00200140 		.word	1073815552
 206              		.cfi_endproc
 207              	.LFE114:
 209              		.text
 210              	.Letext0:
 211              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 212              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 213              		.file 4 "CORE/core_cm4.h"
 214              		.file 5 "USER/system_stm32f4xx.h"
 215              		.file 6 "USER/stm32f4xx.h"
 216              		.file 7 "FWLIB/inc/stm32f4xx_adc.h"
 217              		.file 8 "FWLIB/inc/stm32f4xx_gpio.h"
 218              		.file 9 "HARDWARE/ADC/adc.h"
 219              		.file 10 "/usr/include/newlib/sys/lock.h"
 220              		.file 11 "/usr/include/newlib/sys/_types.h"
 221              		.file 12 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 222              		.file 13 "/usr/include/newlib/sys/reent.h"
 223              		.file 14 "SYSTEM/usart/usart.h"
 224              		.file 15 "FWLIB/inc/stm32f4xx_rcc.h"
ARM GAS  /tmp/cc1HLtyU.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
     /tmp/cc1HLtyU.s:16     .text.Adc_DMA_Init:0000000000000000 $t
     /tmp/cc1HLtyU.s:23     .text.Adc_DMA_Init:0000000000000000 Adc_DMA_Init
     /tmp/cc1HLtyU.s:151    .text.Adc_DMA_Init:00000000000000b8 $d
     /tmp/cc1HLtyU.s:156    .text.Get_Adc:0000000000000000 $t
     /tmp/cc1HLtyU.s:163    .text.Get_Adc:0000000000000000 Get_Adc
     /tmp/cc1HLtyU.s:205    .text.Get_Adc:000000000000002c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
RCC_AHB1PeriphClockCmd
RCC_APB2PeriphClockCmd
GPIO_Init
RCC_APB2PeriphResetCmd
ADC_CommonInit
ADC_StructInit
ADC_Init
ADC_RegularChannelConfig
ADC_ITConfig
ADC_Cmd
ADC_SoftwareStartConv
ADC_GetFlagStatus
ADC_GetConversionValue
