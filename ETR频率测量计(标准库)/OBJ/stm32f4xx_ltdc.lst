ARM GAS  /tmp/ccCk2cG4.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f4xx_ltdc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.LTDC_DeInit,"ax",%progbits
  16              		.align	1
  17              		.global	LTDC_DeInit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	LTDC_DeInit:
  24              	.LFB112:
  25              		.file 1 "FWLIB/src/stm32f4xx_ltdc.c"
   1:FWLIB/src/stm32f4xx_ltdc.c **** /**
   2:FWLIB/src/stm32f4xx_ltdc.c ****   ******************************************************************************
   3:FWLIB/src/stm32f4xx_ltdc.c ****   * @file    stm32f4xx_ltdc.c
   4:FWLIB/src/stm32f4xx_ltdc.c ****   * @author  MCD Application Team
   5:FWLIB/src/stm32f4xx_ltdc.c ****   * @version V1.4.0
   6:FWLIB/src/stm32f4xx_ltdc.c ****   * @date    04-August-2014
   7:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief   This file provides firmware functions to manage the following 
   8:FWLIB/src/stm32f4xx_ltdc.c ****   *          functionalities of the LTDC controller (LTDC) peripheral:
   9:FWLIB/src/stm32f4xx_ltdc.c ****   *           + Initialization and configuration
  10:FWLIB/src/stm32f4xx_ltdc.c ****   *           + Interrupts and flags management
  11:FWLIB/src/stm32f4xx_ltdc.c ****   *           
  12:FWLIB/src/stm32f4xx_ltdc.c ****   *  @verbatim
  13:FWLIB/src/stm32f4xx_ltdc.c ****   
  14:FWLIB/src/stm32f4xx_ltdc.c ****  ===============================================================================
  15:FWLIB/src/stm32f4xx_ltdc.c ****                       ##### How to use this driver #####
  16:FWLIB/src/stm32f4xx_ltdc.c ****  ===============================================================================
  17:FWLIB/src/stm32f4xx_ltdc.c ****     [..]
  18:FWLIB/src/stm32f4xx_ltdc.c ****         (#) Enable LTDC clock using 
  19:FWLIB/src/stm32f4xx_ltdc.c ****             RCC_APB2PeriphResetCmd(RCC_APB2Periph_LTDC, ENABLE) function.
  20:FWLIB/src/stm32f4xx_ltdc.c ****         (#) Configures LTDC
  21:FWLIB/src/stm32f4xx_ltdc.c ****           (++) Configure the required Pixel clock following the panel datasheet
  22:FWLIB/src/stm32f4xx_ltdc.c ****           (++) Configure the Synchronous timings: VSYNC, HSYNC, Vertical and 
  23:FWLIB/src/stm32f4xx_ltdc.c ****               Horizontal back proch, active data area and the front proch 
  24:FWLIB/src/stm32f4xx_ltdc.c ****               timings 
  25:FWLIB/src/stm32f4xx_ltdc.c ****           (++) Configure the synchronous signals and clock polarity in the 
  26:FWLIB/src/stm32f4xx_ltdc.c ****               LTDC_GCR register
  27:FWLIB/src/stm32f4xx_ltdc.c ****         (#) Configures Layer1/2 parameters
  28:FWLIB/src/stm32f4xx_ltdc.c ****           (++) The Layer window horizontal and vertical position in the LTDC_LxWHPCR and 
  29:FWLIB/src/stm32f4xx_ltdc.c ****                LTDC_WVPCR registers. The layer window must be in the active data area.
  30:FWLIB/src/stm32f4xx_ltdc.c ****           (++) The pixel input format in the LTDC_LxPFCR register
  31:FWLIB/src/stm32f4xx_ltdc.c ****           (++) The color frame buffer start address in the LTDC_LxCFBAR register
  32:FWLIB/src/stm32f4xx_ltdc.c ****           (++) The line length and pitch of the color frame buffer in the 
  33:FWLIB/src/stm32f4xx_ltdc.c ****                LTDC_LxCFBLR register
ARM GAS  /tmp/ccCk2cG4.s 			page 2


  34:FWLIB/src/stm32f4xx_ltdc.c ****           (++) The number of lines of the color frame buffer in 
  35:FWLIB/src/stm32f4xx_ltdc.c ****                the LTDC_LxCFBLNR register
  36:FWLIB/src/stm32f4xx_ltdc.c ****           (++) if needed, load the CLUT with the RGB values and the address 
  37:FWLIB/src/stm32f4xx_ltdc.c ****                in the LTDC_LxCLUTWR register
  38:FWLIB/src/stm32f4xx_ltdc.c ****           (++) If needed, configure the default color and the blending factors 
  39:FWLIB/src/stm32f4xx_ltdc.c ****                respectively in the LTDC_LxDCCR and LTDC_LxBFCR registers 
  40:FWLIB/src/stm32f4xx_ltdc.c **** 
  41:FWLIB/src/stm32f4xx_ltdc.c ****           (++) If needed, Dithering and color keying can be be enabled respectively 
  42:FWLIB/src/stm32f4xx_ltdc.c ****                in the LTDC_GCR and LTDC_LxCKCR registers. It can be also enabled 
  43:FWLIB/src/stm32f4xx_ltdc.c ****                on the fly.    
  44:FWLIB/src/stm32f4xx_ltdc.c ****         (#) Enable Layer1/2 and if needed the CLUT in the LTDC_LxCR register 
  45:FWLIB/src/stm32f4xx_ltdc.c ****   
  46:FWLIB/src/stm32f4xx_ltdc.c ****         (#) Reload the shadow registers to active register through 
  47:FWLIB/src/stm32f4xx_ltdc.c ****             the LTDC_SRCR register.
  48:FWLIB/src/stm32f4xx_ltdc.c ****           -@- All layer parameters can be be modified on the fly except the CLUT. 
  49:FWLIB/src/stm32f4xx_ltdc.c ****               The new configuration has to be either reloaded immediately 
  50:FWLIB/src/stm32f4xx_ltdc.c ****               or during vertical blanking period by configuring the LTDC_SRCR register.
  51:FWLIB/src/stm32f4xx_ltdc.c ****         (#) Call the LTDC_Cmd() to enable the LTDC controller.
  52:FWLIB/src/stm32f4xx_ltdc.c **** 
  53:FWLIB/src/stm32f4xx_ltdc.c ****     @endverbatim
  54:FWLIB/src/stm32f4xx_ltdc.c ****   
  55:FWLIB/src/stm32f4xx_ltdc.c ****   ******************************************************************************
  56:FWLIB/src/stm32f4xx_ltdc.c ****   * @attention
  57:FWLIB/src/stm32f4xx_ltdc.c ****   *
  58:FWLIB/src/stm32f4xx_ltdc.c ****   * <h2><center>&copy; COPYRIGHT 2014 STMicroelectronics</center></h2>
  59:FWLIB/src/stm32f4xx_ltdc.c ****   *
  60:FWLIB/src/stm32f4xx_ltdc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  61:FWLIB/src/stm32f4xx_ltdc.c ****   * You may not use this file except in compliance with the License.
  62:FWLIB/src/stm32f4xx_ltdc.c ****   * You may obtain a copy of the License at:
  63:FWLIB/src/stm32f4xx_ltdc.c ****   *
  64:FWLIB/src/stm32f4xx_ltdc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  65:FWLIB/src/stm32f4xx_ltdc.c ****   *
  66:FWLIB/src/stm32f4xx_ltdc.c ****   * Unless required by applicable law or agreed to in writing, software 
  67:FWLIB/src/stm32f4xx_ltdc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  68:FWLIB/src/stm32f4xx_ltdc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  69:FWLIB/src/stm32f4xx_ltdc.c ****   * See the License for the specific language governing permissions and
  70:FWLIB/src/stm32f4xx_ltdc.c ****   * limitations under the License.
  71:FWLIB/src/stm32f4xx_ltdc.c ****   *
  72:FWLIB/src/stm32f4xx_ltdc.c ****   ******************************************************************************
  73:FWLIB/src/stm32f4xx_ltdc.c ****   */
  74:FWLIB/src/stm32f4xx_ltdc.c **** 
  75:FWLIB/src/stm32f4xx_ltdc.c **** /* Includes ------------------------------------------------------------------*/
  76:FWLIB/src/stm32f4xx_ltdc.c **** #include "stm32f4xx_ltdc.h"
  77:FWLIB/src/stm32f4xx_ltdc.c **** #include "stm32f4xx_rcc.h"
  78:FWLIB/src/stm32f4xx_ltdc.c **** 
  79:FWLIB/src/stm32f4xx_ltdc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  80:FWLIB/src/stm32f4xx_ltdc.c ****   * @{
  81:FWLIB/src/stm32f4xx_ltdc.c ****   */
  82:FWLIB/src/stm32f4xx_ltdc.c **** 
  83:FWLIB/src/stm32f4xx_ltdc.c **** /** @defgroup LTDC 
  84:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief LTDC driver modules
  85:FWLIB/src/stm32f4xx_ltdc.c ****   * @{
  86:FWLIB/src/stm32f4xx_ltdc.c ****   */
  87:FWLIB/src/stm32f4xx_ltdc.c **** 
  88:FWLIB/src/stm32f4xx_ltdc.c **** /* Private typedef -----------------------------------------------------------*/
  89:FWLIB/src/stm32f4xx_ltdc.c **** /* Private define ------------------------------------------------------------*/
  90:FWLIB/src/stm32f4xx_ltdc.c **** /* Private macro -------------------------------------------------------------*/
ARM GAS  /tmp/ccCk2cG4.s 			page 3


  91:FWLIB/src/stm32f4xx_ltdc.c **** /* Private variables ---------------------------------------------------------*/
  92:FWLIB/src/stm32f4xx_ltdc.c **** /* Private function prototypes -----------------------------------------------*/
  93:FWLIB/src/stm32f4xx_ltdc.c **** /* Private functions ---------------------------------------------------------*/
  94:FWLIB/src/stm32f4xx_ltdc.c **** 
  95:FWLIB/src/stm32f4xx_ltdc.c **** #define GCR_MASK                     ((uint32_t)0x0FFE888F)  /* LTDC GCR Mask */
  96:FWLIB/src/stm32f4xx_ltdc.c **** 
  97:FWLIB/src/stm32f4xx_ltdc.c **** 
  98:FWLIB/src/stm32f4xx_ltdc.c **** /** @defgroup LTDC_Private_Functions
  99:FWLIB/src/stm32f4xx_ltdc.c ****   * @{
 100:FWLIB/src/stm32f4xx_ltdc.c ****   */
 101:FWLIB/src/stm32f4xx_ltdc.c **** 
 102:FWLIB/src/stm32f4xx_ltdc.c **** /** @defgroup LTDC_Group1 Initialization and Configuration functions
 103:FWLIB/src/stm32f4xx_ltdc.c ****  *  @brief   Initialization and Configuration functions 
 104:FWLIB/src/stm32f4xx_ltdc.c ****  *
 105:FWLIB/src/stm32f4xx_ltdc.c **** @verbatim
 106:FWLIB/src/stm32f4xx_ltdc.c ****  ===============================================================================
 107:FWLIB/src/stm32f4xx_ltdc.c ****             ##### Initialization and Configuration functions #####
 108:FWLIB/src/stm32f4xx_ltdc.c ****  ===============================================================================
 109:FWLIB/src/stm32f4xx_ltdc.c ****     [..]  This section provides functions allowing to:
 110:FWLIB/src/stm32f4xx_ltdc.c ****       (+) Initialize and configure the LTDC
 111:FWLIB/src/stm32f4xx_ltdc.c ****       (+) Enable or Disable Dither
 112:FWLIB/src/stm32f4xx_ltdc.c ****       (+) Define the position of the line interrupt
 113:FWLIB/src/stm32f4xx_ltdc.c ****       (+) reload layers registers with new parameters
 114:FWLIB/src/stm32f4xx_ltdc.c ****       (+) Initialize and configure layer1 and layer2
 115:FWLIB/src/stm32f4xx_ltdc.c ****       (+) Set and configure the color keying functionality
 116:FWLIB/src/stm32f4xx_ltdc.c ****       (+) Configure and Enables or disables CLUT 
 117:FWLIB/src/stm32f4xx_ltdc.c ****       
 118:FWLIB/src/stm32f4xx_ltdc.c **** @endverbatim
 119:FWLIB/src/stm32f4xx_ltdc.c ****   * @{
 120:FWLIB/src/stm32f4xx_ltdc.c ****   */
 121:FWLIB/src/stm32f4xx_ltdc.c **** 
 122:FWLIB/src/stm32f4xx_ltdc.c **** /**
 123:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  Deinitializes the LTDC peripheral registers to their default reset
 124:FWLIB/src/stm32f4xx_ltdc.c ****   *         values.
 125:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  None
 126:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval None
 127:FWLIB/src/stm32f4xx_ltdc.c ****   */
 128:FWLIB/src/stm32f4xx_ltdc.c **** 
 129:FWLIB/src/stm32f4xx_ltdc.c **** void LTDC_DeInit(void)
 130:FWLIB/src/stm32f4xx_ltdc.c **** {
  26              		.loc 1 130 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 08B5     		push	{r3, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 131:FWLIB/src/stm32f4xx_ltdc.c ****   /* Enable LTDC reset state */
 132:FWLIB/src/stm32f4xx_ltdc.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_LTDC, ENABLE);
  35              		.loc 1 132 0
  36 0002 0121     		movs	r1, #1
  37 0004 4FF08060 		mov	r0, #67108864
  38 0008 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  39              	.LVL0:
 133:FWLIB/src/stm32f4xx_ltdc.c ****   /* Release LTDC from reset state */
ARM GAS  /tmp/ccCk2cG4.s 			page 4


 134:FWLIB/src/stm32f4xx_ltdc.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_LTDC, DISABLE);
  40              		.loc 1 134 0
  41 000c 0021     		movs	r1, #0
  42 000e 4FF08060 		mov	r0, #67108864
  43 0012 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  44              	.LVL1:
  45 0016 08BD     		pop	{r3, pc}
  46              		.cfi_endproc
  47              	.LFE112:
  49              		.section	.text.LTDC_Init,"ax",%progbits
  50              		.align	1
  51              		.global	LTDC_Init
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  55              		.fpu softvfp
  57              	LTDC_Init:
  58              	.LFB113:
 135:FWLIB/src/stm32f4xx_ltdc.c **** }
 136:FWLIB/src/stm32f4xx_ltdc.c **** 
 137:FWLIB/src/stm32f4xx_ltdc.c **** /**
 138:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  Initializes the LTDC peripheral according to the specified parameters
 139:FWLIB/src/stm32f4xx_ltdc.c ****   *         in the LTDC_InitStruct.
 140:FWLIB/src/stm32f4xx_ltdc.c ****   * @note   This function can be used only when the LTDC is disabled.
 141:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_InitStruct: pointer to a LTDC_InitTypeDef structure that contains
 142:FWLIB/src/stm32f4xx_ltdc.c ****   *         the configuration information for the specified LTDC peripheral.
 143:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval None
 144:FWLIB/src/stm32f4xx_ltdc.c ****   */
 145:FWLIB/src/stm32f4xx_ltdc.c **** 
 146:FWLIB/src/stm32f4xx_ltdc.c **** void LTDC_Init(LTDC_InitTypeDef* LTDC_InitStruct)
 147:FWLIB/src/stm32f4xx_ltdc.c **** {
  59              		.loc 1 147 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
  64              	.LVL2:
  65 0000 30B4     		push	{r4, r5}
  66              	.LCFI1:
  67              		.cfi_def_cfa_offset 8
  68              		.cfi_offset 4, -8
  69              		.cfi_offset 5, -4
  70              	.LVL3:
 148:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t horizontalsync = 0;
 149:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t accumulatedHBP = 0;
 150:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t accumulatedactiveW = 0;
 151:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t totalwidth = 0;
 152:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t backgreen = 0;
 153:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t backred = 0;
 154:FWLIB/src/stm32f4xx_ltdc.c **** 
 155:FWLIB/src/stm32f4xx_ltdc.c ****   /* Check function parameters */
 156:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_HSYNC(LTDC_InitStruct->LTDC_HorizontalSync));
 157:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_VSYNC(LTDC_InitStruct->LTDC_VerticalSync));
 158:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_AHBP(LTDC_InitStruct->LTDC_AccumulatedHBP));
 159:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_AVBP(LTDC_InitStruct->LTDC_AccumulatedVBP));
 160:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_AAH(LTDC_InitStruct->LTDC_AccumulatedActiveH));
 161:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_AAW(LTDC_InitStruct->LTDC_AccumulatedActiveW));
ARM GAS  /tmp/ccCk2cG4.s 			page 5


 162:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_TOTALH(LTDC_InitStruct->LTDC_TotalHeigh));
 163:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_TOTALW(LTDC_InitStruct->LTDC_TotalWidth));
 164:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_HSPOL(LTDC_InitStruct->LTDC_HSPolarity));
 165:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_VSPOL(LTDC_InitStruct->LTDC_VSPolarity));
 166:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_DEPOL(LTDC_InitStruct->LTDC_DEPolarity));
 167:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_PCPOL(LTDC_InitStruct->LTDC_PCPolarity));
 168:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_BackBlueValue(LTDC_InitStruct->LTDC_BackgroundBlueValue));
 169:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_BackGreenValue(LTDC_InitStruct->LTDC_BackgroundGreenValue));
 170:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_BackRedValue(LTDC_InitStruct->LTDC_BackgroundRedValue));
 171:FWLIB/src/stm32f4xx_ltdc.c **** 
 172:FWLIB/src/stm32f4xx_ltdc.c ****   /* Sets Synchronization size */
 173:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
  71              		.loc 1 173 0
  72 0002 244B     		ldr	r3, .L5
  73 0004 9968     		ldr	r1, [r3, #8]
  74 0006 244A     		ldr	r2, .L5+4
  75 0008 1140     		ands	r1, r1, r2
  76 000a 9960     		str	r1, [r3, #8]
 174:FWLIB/src/stm32f4xx_ltdc.c ****   horizontalsync = (LTDC_InitStruct->LTDC_HorizontalSync << 16);
  77              		.loc 1 174 0
  78 000c 0569     		ldr	r5, [r0, #16]
  79              	.LVL4:
 175:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC->SSCR |= (horizontalsync | LTDC_InitStruct->LTDC_VerticalSync);
  80              		.loc 1 175 0
  81 000e 9968     		ldr	r1, [r3, #8]
  82 0010 4469     		ldr	r4, [r0, #20]
  83 0012 44EA0544 		orr	r4, r4, r5, lsl #16
  84 0016 2143     		orrs	r1, r1, r4
  85 0018 9960     		str	r1, [r3, #8]
 176:FWLIB/src/stm32f4xx_ltdc.c **** 
 177:FWLIB/src/stm32f4xx_ltdc.c ****   /* Sets Accumulated Back porch */
 178:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
  86              		.loc 1 178 0
  87 001a D968     		ldr	r1, [r3, #12]
  88 001c 1140     		ands	r1, r1, r2
  89 001e D960     		str	r1, [r3, #12]
 179:FWLIB/src/stm32f4xx_ltdc.c ****   accumulatedHBP = (LTDC_InitStruct->LTDC_AccumulatedHBP << 16);
  90              		.loc 1 179 0
  91 0020 8569     		ldr	r5, [r0, #24]
  92              	.LVL5:
 180:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC->BPCR |= (accumulatedHBP | LTDC_InitStruct->LTDC_AccumulatedVBP);
  93              		.loc 1 180 0
  94 0022 D968     		ldr	r1, [r3, #12]
  95 0024 C469     		ldr	r4, [r0, #28]
  96 0026 44EA0544 		orr	r4, r4, r5, lsl #16
  97 002a 2143     		orrs	r1, r1, r4
  98 002c D960     		str	r1, [r3, #12]
 181:FWLIB/src/stm32f4xx_ltdc.c **** 
 182:FWLIB/src/stm32f4xx_ltdc.c ****   /* Sets Accumulated Active Width */
 183:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
  99              		.loc 1 183 0
 100 002e 1969     		ldr	r1, [r3, #16]
 101 0030 1140     		ands	r1, r1, r2
 102 0032 1961     		str	r1, [r3, #16]
 184:FWLIB/src/stm32f4xx_ltdc.c ****   accumulatedactiveW = (LTDC_InitStruct->LTDC_AccumulatedActiveW << 16);
 103              		.loc 1 184 0
 104 0034 056A     		ldr	r5, [r0, #32]
ARM GAS  /tmp/ccCk2cG4.s 			page 6


 105              	.LVL6:
 185:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC->AWCR |= (accumulatedactiveW | LTDC_InitStruct->LTDC_AccumulatedActiveH);
 106              		.loc 1 185 0
 107 0036 1969     		ldr	r1, [r3, #16]
 108 0038 446A     		ldr	r4, [r0, #36]
 109 003a 44EA0544 		orr	r4, r4, r5, lsl #16
 110 003e 2143     		orrs	r1, r1, r4
 111 0040 1961     		str	r1, [r3, #16]
 186:FWLIB/src/stm32f4xx_ltdc.c **** 
 187:FWLIB/src/stm32f4xx_ltdc.c ****   /* Sets Total Width */
 188:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 112              		.loc 1 188 0
 113 0042 5969     		ldr	r1, [r3, #20]
 114 0044 0A40     		ands	r2, r2, r1
 115 0046 5A61     		str	r2, [r3, #20]
 189:FWLIB/src/stm32f4xx_ltdc.c ****   totalwidth = (LTDC_InitStruct->LTDC_TotalWidth << 16);
 116              		.loc 1 189 0
 117 0048 846A     		ldr	r4, [r0, #40]
 118              	.LVL7:
 190:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC->TWCR |= (totalwidth | LTDC_InitStruct->LTDC_TotalHeigh);
 119              		.loc 1 190 0
 120 004a 5A69     		ldr	r2, [r3, #20]
 121 004c C16A     		ldr	r1, [r0, #44]
 122 004e 41EA0441 		orr	r1, r1, r4, lsl #16
 123 0052 0A43     		orrs	r2, r2, r1
 124 0054 5A61     		str	r2, [r3, #20]
 191:FWLIB/src/stm32f4xx_ltdc.c **** 
 192:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC->GCR &= (uint32_t)GCR_MASK;
 125              		.loc 1 192 0
 126 0056 9969     		ldr	r1, [r3, #24]
 127 0058 104A     		ldr	r2, .L5+8
 128 005a 0A40     		ands	r2, r2, r1
 129 005c 9A61     		str	r2, [r3, #24]
 193:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC->GCR |=  (uint32_t)(LTDC_InitStruct->LTDC_HSPolarity | LTDC_InitStruct->LTDC_VSPolarity | \
 130              		.loc 1 193 0
 131 005e 9969     		ldr	r1, [r3, #24]
 132 0060 0268     		ldr	r2, [r0]
 133 0062 4468     		ldr	r4, [r0, #4]
 134              	.LVL8:
 135 0064 2243     		orrs	r2, r2, r4
 194:FWLIB/src/stm32f4xx_ltdc.c ****                            LTDC_InitStruct->LTDC_DEPolarity | LTDC_InitStruct->LTDC_PCPolarity);
 136              		.loc 1 194 0
 137 0066 8468     		ldr	r4, [r0, #8]
 193:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC->GCR |=  (uint32_t)(LTDC_InitStruct->LTDC_HSPolarity | LTDC_InitStruct->LTDC_VSPolarity | \
 138              		.loc 1 193 0
 139 0068 2243     		orrs	r2, r2, r4
 140              		.loc 1 194 0
 141 006a C468     		ldr	r4, [r0, #12]
 142 006c 2243     		orrs	r2, r2, r4
 193:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC->GCR |=  (uint32_t)(LTDC_InitStruct->LTDC_HSPolarity | LTDC_InitStruct->LTDC_VSPolarity | \
 143              		.loc 1 193 0
 144 006e 0A43     		orrs	r2, r2, r1
 145 0070 9A61     		str	r2, [r3, #24]
 195:FWLIB/src/stm32f4xx_ltdc.c **** 
 196:FWLIB/src/stm32f4xx_ltdc.c ****   /* sets the background color value */
 197:FWLIB/src/stm32f4xx_ltdc.c ****   backgreen = (LTDC_InitStruct->LTDC_BackgroundGreenValue << 8);
 146              		.loc 1 197 0
ARM GAS  /tmp/ccCk2cG4.s 			page 7


 147 0072 446B     		ldr	r4, [r0, #52]
 148              	.LVL9:
 198:FWLIB/src/stm32f4xx_ltdc.c ****   backred = (LTDC_InitStruct->LTDC_BackgroundRedValue << 16);
 149              		.loc 1 198 0
 150 0074 026B     		ldr	r2, [r0, #48]
 151 0076 1204     		lsls	r2, r2, #16
 152              	.LVL10:
 199:FWLIB/src/stm32f4xx_ltdc.c **** 
 200:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 153              		.loc 1 200 0
 154 0078 D96A     		ldr	r1, [r3, #44]
 155 007a 01F07F41 		and	r1, r1, #-16777216
 156 007e D962     		str	r1, [r3, #44]
 201:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC->BCCR |= (backred | backgreen | LTDC_InitStruct->LTDC_BackgroundBlueValue);
 157              		.loc 1 201 0
 158 0080 D96A     		ldr	r1, [r3, #44]
 159 0082 42EA0422 		orr	r2, r2, r4, lsl #8
 160              	.LVL11:
 161 0086 806B     		ldr	r0, [r0, #56]
 162              	.LVL12:
 163 0088 0243     		orrs	r2, r2, r0
 164 008a 0A43     		orrs	r2, r2, r1
 165 008c DA62     		str	r2, [r3, #44]
 202:FWLIB/src/stm32f4xx_ltdc.c **** }
 166              		.loc 1 202 0
 167 008e 30BC     		pop	{r4, r5}
 168              	.LCFI2:
 169              		.cfi_restore 5
 170              		.cfi_restore 4
 171              		.cfi_def_cfa_offset 0
 172              	.LVL13:
 173 0090 7047     		bx	lr
 174              	.L6:
 175 0092 00BF     		.align	2
 176              	.L5:
 177 0094 00680140 		.word	1073833984
 178 0098 00F800F0 		.word	-268371968
 179 009c 8F88FE0F 		.word	268339343
 180              		.cfi_endproc
 181              	.LFE113:
 183              		.section	.text.LTDC_StructInit,"ax",%progbits
 184              		.align	1
 185              		.global	LTDC_StructInit
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 189              		.fpu softvfp
 191              	LTDC_StructInit:
 192              	.LFB114:
 203:FWLIB/src/stm32f4xx_ltdc.c **** 
 204:FWLIB/src/stm32f4xx_ltdc.c **** /**
 205:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  Fills each LTDC_InitStruct member with its default value.
 206:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_InitStruct: pointer to a LTDC_InitTypeDef structure which will
 207:FWLIB/src/stm32f4xx_ltdc.c ****   *         be initialized.
 208:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval None
 209:FWLIB/src/stm32f4xx_ltdc.c ****   */
 210:FWLIB/src/stm32f4xx_ltdc.c **** 
ARM GAS  /tmp/ccCk2cG4.s 			page 8


 211:FWLIB/src/stm32f4xx_ltdc.c **** void LTDC_StructInit(LTDC_InitTypeDef* LTDC_InitStruct)
 212:FWLIB/src/stm32f4xx_ltdc.c **** {
 193              		.loc 1 212 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		@ link register save eliminated.
 198              	.LVL14:
 213:FWLIB/src/stm32f4xx_ltdc.c ****   /*--------------- Reset LTDC init structure parameters values ----------------*/
 214:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_InitStruct->LTDC_HSPolarity = LTDC_HSPolarity_AL;      /*!< Initialize the LTDC_HSPolarity m
 199              		.loc 1 214 0
 200 0000 0023     		movs	r3, #0
 201 0002 0360     		str	r3, [r0]
 215:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_InitStruct->LTDC_VSPolarity = LTDC_VSPolarity_AL;      /*!< Initialize the LTDC_VSPolarity m
 202              		.loc 1 215 0
 203 0004 4360     		str	r3, [r0, #4]
 216:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_InitStruct->LTDC_DEPolarity = LTDC_DEPolarity_AL;      /*!< Initialize the LTDC_DEPolarity m
 204              		.loc 1 216 0
 205 0006 8360     		str	r3, [r0, #8]
 217:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_InitStruct->LTDC_PCPolarity = LTDC_PCPolarity_IPC;     /*!< Initialize the LTDC_PCPolarity m
 206              		.loc 1 217 0
 207 0008 C360     		str	r3, [r0, #12]
 218:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_InitStruct->LTDC_HorizontalSync = 0x00;                /*!< Initialize the LTDC_HorizontalSy
 208              		.loc 1 218 0
 209 000a 0361     		str	r3, [r0, #16]
 219:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_InitStruct->LTDC_VerticalSync = 0x00;                  /*!< Initialize the LTDC_VerticalSync
 210              		.loc 1 219 0
 211 000c 4361     		str	r3, [r0, #20]
 220:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_InitStruct->LTDC_AccumulatedHBP = 0x00;                /*!< Initialize the LTDC_AccumulatedH
 212              		.loc 1 220 0
 213 000e 8361     		str	r3, [r0, #24]
 221:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_InitStruct->LTDC_AccumulatedVBP = 0x00;                /*!< Initialize the LTDC_AccumulatedV
 214              		.loc 1 221 0
 215 0010 C361     		str	r3, [r0, #28]
 222:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_InitStruct->LTDC_AccumulatedActiveW = 0x00;            /*!< Initialize the LTDC_AccumulatedA
 216              		.loc 1 222 0
 217 0012 0362     		str	r3, [r0, #32]
 223:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_InitStruct->LTDC_AccumulatedActiveH = 0x00;            /*!< Initialize the LTDC_AccumulatedA
 218              		.loc 1 223 0
 219 0014 4362     		str	r3, [r0, #36]
 224:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_InitStruct->LTDC_TotalWidth = 0x00;                    /*!< Initialize the LTDC_TotalWidth m
 220              		.loc 1 224 0
 221 0016 8362     		str	r3, [r0, #40]
 225:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_InitStruct->LTDC_TotalHeigh = 0x00;                    /*!< Initialize the LTDC_TotalHeigh m
 222              		.loc 1 225 0
 223 0018 C362     		str	r3, [r0, #44]
 226:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_InitStruct->LTDC_BackgroundRedValue = 0x00;            /*!< Initialize the LTDC_BackgroundRe
 224              		.loc 1 226 0
 225 001a 0363     		str	r3, [r0, #48]
 227:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_InitStruct->LTDC_BackgroundGreenValue = 0x00;          /*!< Initialize the LTDC_BackgroundGr
 226              		.loc 1 227 0
 227 001c 4363     		str	r3, [r0, #52]
 228:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_InitStruct->LTDC_BackgroundBlueValue = 0x00;           /*!< Initialize the LTDC_BackgroundBl
 228              		.loc 1 228 0
 229 001e 8363     		str	r3, [r0, #56]
 230 0020 7047     		bx	lr
 231              		.cfi_endproc
ARM GAS  /tmp/ccCk2cG4.s 			page 9


 232              	.LFE114:
 234              		.section	.text.LTDC_Cmd,"ax",%progbits
 235              		.align	1
 236              		.global	LTDC_Cmd
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 240              		.fpu softvfp
 242              	LTDC_Cmd:
 243              	.LFB115:
 229:FWLIB/src/stm32f4xx_ltdc.c **** }
 230:FWLIB/src/stm32f4xx_ltdc.c **** 
 231:FWLIB/src/stm32f4xx_ltdc.c **** /**
 232:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  Enables or disables the LTDC Controller.
 233:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  NewState: new state of the LTDC peripheral.
 234:FWLIB/src/stm32f4xx_ltdc.c ****   *   This parameter can be: ENABLE or DISABLE.
 235:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval None
 236:FWLIB/src/stm32f4xx_ltdc.c ****   */
 237:FWLIB/src/stm32f4xx_ltdc.c **** 
 238:FWLIB/src/stm32f4xx_ltdc.c **** void LTDC_Cmd(FunctionalState NewState)
 239:FWLIB/src/stm32f4xx_ltdc.c **** {
 244              		.loc 1 239 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 249              	.LVL15:
 240:FWLIB/src/stm32f4xx_ltdc.c ****   /* Check the parameters */
 241:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 242:FWLIB/src/stm32f4xx_ltdc.c **** 
 243:FWLIB/src/stm32f4xx_ltdc.c ****   if (NewState != DISABLE)
 250              		.loc 1 243 0
 251 0000 28B9     		cbnz	r0, .L11
 244:FWLIB/src/stm32f4xx_ltdc.c ****   {
 245:FWLIB/src/stm32f4xx_ltdc.c ****     /* Enable LTDC by setting LTDCEN bit */
 246:FWLIB/src/stm32f4xx_ltdc.c ****     LTDC->GCR |= (uint32_t)LTDC_GCR_LTDCEN;
 247:FWLIB/src/stm32f4xx_ltdc.c ****   }
 248:FWLIB/src/stm32f4xx_ltdc.c ****   else
 249:FWLIB/src/stm32f4xx_ltdc.c ****   {
 250:FWLIB/src/stm32f4xx_ltdc.c ****     /* Disable LTDC by clearing LTDCEN bit */
 251:FWLIB/src/stm32f4xx_ltdc.c ****     LTDC->GCR &= ~(uint32_t)LTDC_GCR_LTDCEN;
 252              		.loc 1 251 0
 253 0002 064A     		ldr	r2, .L12
 254 0004 9369     		ldr	r3, [r2, #24]
 255 0006 23F00103 		bic	r3, r3, #1
 256 000a 9361     		str	r3, [r2, #24]
 257 000c 7047     		bx	lr
 258              	.L11:
 246:FWLIB/src/stm32f4xx_ltdc.c ****   }
 259              		.loc 1 246 0
 260 000e 034A     		ldr	r2, .L12
 261 0010 9369     		ldr	r3, [r2, #24]
 262 0012 43F00103 		orr	r3, r3, #1
 263 0016 9361     		str	r3, [r2, #24]
 264 0018 7047     		bx	lr
 265              	.L13:
 266 001a 00BF     		.align	2
ARM GAS  /tmp/ccCk2cG4.s 			page 10


 267              	.L12:
 268 001c 00680140 		.word	1073833984
 269              		.cfi_endproc
 270              	.LFE115:
 272              		.section	.text.LTDC_DitherCmd,"ax",%progbits
 273              		.align	1
 274              		.global	LTDC_DitherCmd
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 278              		.fpu softvfp
 280              	LTDC_DitherCmd:
 281              	.LFB116:
 252:FWLIB/src/stm32f4xx_ltdc.c ****   }
 253:FWLIB/src/stm32f4xx_ltdc.c **** }
 254:FWLIB/src/stm32f4xx_ltdc.c **** 
 255:FWLIB/src/stm32f4xx_ltdc.c **** /**
 256:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  Enables or disables Dither.
 257:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  NewState: new state of the Dither.
 258:FWLIB/src/stm32f4xx_ltdc.c ****   *   This parameter can be: ENABLE or DISABLE.
 259:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval None
 260:FWLIB/src/stm32f4xx_ltdc.c ****   */
 261:FWLIB/src/stm32f4xx_ltdc.c **** 
 262:FWLIB/src/stm32f4xx_ltdc.c **** void LTDC_DitherCmd(FunctionalState NewState)
 263:FWLIB/src/stm32f4xx_ltdc.c **** {
 282              		.loc 1 263 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 287              	.LVL16:
 264:FWLIB/src/stm32f4xx_ltdc.c ****   /* Check the parameters */
 265:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 266:FWLIB/src/stm32f4xx_ltdc.c **** 
 267:FWLIB/src/stm32f4xx_ltdc.c ****   if (NewState != DISABLE)
 288              		.loc 1 267 0
 289 0000 28B9     		cbnz	r0, .L17
 268:FWLIB/src/stm32f4xx_ltdc.c ****   {
 269:FWLIB/src/stm32f4xx_ltdc.c ****     /* Enable Dither by setting DTEN bit */
 270:FWLIB/src/stm32f4xx_ltdc.c ****     LTDC->GCR |= (uint32_t)LTDC_GCR_DTEN;
 271:FWLIB/src/stm32f4xx_ltdc.c ****   }
 272:FWLIB/src/stm32f4xx_ltdc.c ****   else
 273:FWLIB/src/stm32f4xx_ltdc.c ****   {
 274:FWLIB/src/stm32f4xx_ltdc.c ****     /* Disable Dither by clearing DTEN bit */
 275:FWLIB/src/stm32f4xx_ltdc.c ****     LTDC->GCR &= ~(uint32_t)LTDC_GCR_DTEN;
 290              		.loc 1 275 0
 291 0002 064A     		ldr	r2, .L18
 292 0004 9369     		ldr	r3, [r2, #24]
 293 0006 23F48033 		bic	r3, r3, #65536
 294 000a 9361     		str	r3, [r2, #24]
 295 000c 7047     		bx	lr
 296              	.L17:
 270:FWLIB/src/stm32f4xx_ltdc.c ****   }
 297              		.loc 1 270 0
 298 000e 034A     		ldr	r2, .L18
 299 0010 9369     		ldr	r3, [r2, #24]
 300 0012 43F48033 		orr	r3, r3, #65536
ARM GAS  /tmp/ccCk2cG4.s 			page 11


 301 0016 9361     		str	r3, [r2, #24]
 302 0018 7047     		bx	lr
 303              	.L19:
 304 001a 00BF     		.align	2
 305              	.L18:
 306 001c 00680140 		.word	1073833984
 307              		.cfi_endproc
 308              	.LFE116:
 310              		.section	.text.LTDC_GetRGBWidth,"ax",%progbits
 311              		.align	1
 312              		.global	LTDC_GetRGBWidth
 313              		.syntax unified
 314              		.thumb
 315              		.thumb_func
 316              		.fpu softvfp
 318              	LTDC_GetRGBWidth:
 319              	.LFB117:
 276:FWLIB/src/stm32f4xx_ltdc.c ****   }
 277:FWLIB/src/stm32f4xx_ltdc.c **** }
 278:FWLIB/src/stm32f4xx_ltdc.c **** 
 279:FWLIB/src/stm32f4xx_ltdc.c **** /**
 280:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  Get the dither RGB width.
 281:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_RGB_InitStruct: pointer to a LTDC_RGBTypeDef structure that contains
 282:FWLIB/src/stm32f4xx_ltdc.c ****   *         the Dither RGB width.
 283:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval None
 284:FWLIB/src/stm32f4xx_ltdc.c ****   */
 285:FWLIB/src/stm32f4xx_ltdc.c **** 
 286:FWLIB/src/stm32f4xx_ltdc.c **** LTDC_RGBTypeDef LTDC_GetRGBWidth(void)
 287:FWLIB/src/stm32f4xx_ltdc.c **** {
 320              		.loc 1 287 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              		@ link register save eliminated.
 325              	.LVL17:
 326 0000 10B4     		push	{r4}
 327              	.LCFI3:
 328              		.cfi_def_cfa_offset 4
 329              		.cfi_offset 4, -4
 288:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_RGBTypeDef LTDC_RGB_InitStruct;
 289:FWLIB/src/stm32f4xx_ltdc.c **** 
 290:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC->GCR &= (uint32_t)GCR_MASK;
 330              		.loc 1 290 0
 331 0002 094B     		ldr	r3, .L22
 332 0004 9C69     		ldr	r4, [r3, #24]
 333 0006 0949     		ldr	r1, .L22+4
 334 0008 2140     		ands	r1, r1, r4
 335 000a 9961     		str	r1, [r3, #24]
 291:FWLIB/src/stm32f4xx_ltdc.c **** 
 292:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_RGB_InitStruct.LTDC_BlueWidth = (uint32_t)((LTDC->GCR >> 4) & 0x7);
 336              		.loc 1 292 0
 337 000c 9969     		ldr	r1, [r3, #24]
 338 000e C1F30211 		ubfx	r1, r1, #4, #3
 339 0012 0160     		str	r1, [r0]
 293:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_RGB_InitStruct.LTDC_GreenWidth = (uint32_t)((LTDC->GCR >> 8) & 0x7);
 340              		.loc 1 293 0
 341 0014 9969     		ldr	r1, [r3, #24]
ARM GAS  /tmp/ccCk2cG4.s 			page 12


 342 0016 C1F30221 		ubfx	r1, r1, #8, #3
 343 001a 4160     		str	r1, [r0, #4]
 294:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_RGB_InitStruct.LTDC_RedWidth = (uint32_t)((LTDC->GCR >> 12) & 0x7);
 344              		.loc 1 294 0
 345 001c 9B69     		ldr	r3, [r3, #24]
 346 001e C3F30233 		ubfx	r3, r3, #12, #3
 347 0022 8360     		str	r3, [r0, #8]
 295:FWLIB/src/stm32f4xx_ltdc.c **** 
 296:FWLIB/src/stm32f4xx_ltdc.c ****   return LTDC_RGB_InitStruct;
 297:FWLIB/src/stm32f4xx_ltdc.c **** }
 348              		.loc 1 297 0
 349 0024 10BC     		pop	{r4}
 350              	.LCFI4:
 351              		.cfi_restore 4
 352              		.cfi_def_cfa_offset 0
 353 0026 7047     		bx	lr
 354              	.L23:
 355              		.align	2
 356              	.L22:
 357 0028 00680140 		.word	1073833984
 358 002c 8F88FE0F 		.word	268339343
 359              		.cfi_endproc
 360              	.LFE117:
 362              		.section	.text.LTDC_RGBStructInit,"ax",%progbits
 363              		.align	1
 364              		.global	LTDC_RGBStructInit
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 368              		.fpu softvfp
 370              	LTDC_RGBStructInit:
 371              	.LFB118:
 298:FWLIB/src/stm32f4xx_ltdc.c **** 
 299:FWLIB/src/stm32f4xx_ltdc.c **** /**
 300:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  Fills each LTDC_RGBStruct member with its default value.
 301:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_RGB_InitStruct: pointer to a LTDC_RGBTypeDef structure which will
 302:FWLIB/src/stm32f4xx_ltdc.c ****   *         be initialized.
 303:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval None
 304:FWLIB/src/stm32f4xx_ltdc.c ****   */
 305:FWLIB/src/stm32f4xx_ltdc.c **** 
 306:FWLIB/src/stm32f4xx_ltdc.c **** void LTDC_RGBStructInit(LTDC_RGBTypeDef* LTDC_RGB_InitStruct)
 307:FWLIB/src/stm32f4xx_ltdc.c **** {
 372              		.loc 1 307 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376              		@ link register save eliminated.
 377              	.LVL18:
 308:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_RGB_InitStruct->LTDC_BlueWidth = 0x02;
 378              		.loc 1 308 0
 379 0000 0223     		movs	r3, #2
 380 0002 0360     		str	r3, [r0]
 309:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_RGB_InitStruct->LTDC_GreenWidth = 0x02;
 381              		.loc 1 309 0
 382 0004 4360     		str	r3, [r0, #4]
 310:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_RGB_InitStruct->LTDC_RedWidth = 0x02;
 383              		.loc 1 310 0
ARM GAS  /tmp/ccCk2cG4.s 			page 13


 384 0006 8360     		str	r3, [r0, #8]
 385 0008 7047     		bx	lr
 386              		.cfi_endproc
 387              	.LFE118:
 389              		.section	.text.LTDC_LIPConfig,"ax",%progbits
 390              		.align	1
 391              		.global	LTDC_LIPConfig
 392              		.syntax unified
 393              		.thumb
 394              		.thumb_func
 395              		.fpu softvfp
 397              	LTDC_LIPConfig:
 398              	.LFB119:
 311:FWLIB/src/stm32f4xx_ltdc.c **** }
 312:FWLIB/src/stm32f4xx_ltdc.c **** 
 313:FWLIB/src/stm32f4xx_ltdc.c **** 
 314:FWLIB/src/stm32f4xx_ltdc.c **** /**
 315:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  Define the position of the line interrupt .
 316:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_LIPositionConfig: Line Interrupt Position.
 317:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval None
 318:FWLIB/src/stm32f4xx_ltdc.c ****   */
 319:FWLIB/src/stm32f4xx_ltdc.c **** 
 320:FWLIB/src/stm32f4xx_ltdc.c **** void LTDC_LIPConfig(uint32_t LTDC_LIPositionConfig)
 321:FWLIB/src/stm32f4xx_ltdc.c **** {
 399              		.loc 1 321 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		@ link register save eliminated.
 404              	.LVL19:
 322:FWLIB/src/stm32f4xx_ltdc.c ****   /* Check the parameters */
 323:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_LIPOS(LTDC_LIPositionConfig));
 324:FWLIB/src/stm32f4xx_ltdc.c **** 
 325:FWLIB/src/stm32f4xx_ltdc.c ****   /* Sets the Line Interrupt position */
 326:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC->LIPCR = (uint32_t)LTDC_LIPositionConfig;
 405              		.loc 1 326 0
 406 0000 014B     		ldr	r3, .L26
 407 0002 1864     		str	r0, [r3, #64]
 408 0004 7047     		bx	lr
 409              	.L27:
 410 0006 00BF     		.align	2
 411              	.L26:
 412 0008 00680140 		.word	1073833984
 413              		.cfi_endproc
 414              	.LFE119:
 416              		.section	.text.LTDC_ReloadConfig,"ax",%progbits
 417              		.align	1
 418              		.global	LTDC_ReloadConfig
 419              		.syntax unified
 420              		.thumb
 421              		.thumb_func
 422              		.fpu softvfp
 424              	LTDC_ReloadConfig:
 425              	.LFB120:
 327:FWLIB/src/stm32f4xx_ltdc.c **** }
 328:FWLIB/src/stm32f4xx_ltdc.c **** 
 329:FWLIB/src/stm32f4xx_ltdc.c **** /**
ARM GAS  /tmp/ccCk2cG4.s 			page 14


 330:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  reload layers registers with new parameters 
 331:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_Reload: specifies the type of reload.
 332:FWLIB/src/stm32f4xx_ltdc.c ****   *   This parameter can be one of the following values:
 333:FWLIB/src/stm32f4xx_ltdc.c ****   *     @arg LTDC_IMReload: Vertical blanking reload.
 334:FWLIB/src/stm32f4xx_ltdc.c ****   *     @arg LTDC_VBReload: Immediate reload.  
 335:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval None
 336:FWLIB/src/stm32f4xx_ltdc.c ****   */
 337:FWLIB/src/stm32f4xx_ltdc.c **** 
 338:FWLIB/src/stm32f4xx_ltdc.c **** void LTDC_ReloadConfig(uint32_t LTDC_Reload)
 339:FWLIB/src/stm32f4xx_ltdc.c **** {
 426              		.loc 1 339 0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 0
 429              		@ frame_needed = 0, uses_anonymous_args = 0
 430              		@ link register save eliminated.
 431              	.LVL20:
 340:FWLIB/src/stm32f4xx_ltdc.c ****   /* Check the parameters */
 341:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_RELOAD(LTDC_Reload));
 342:FWLIB/src/stm32f4xx_ltdc.c **** 
 343:FWLIB/src/stm32f4xx_ltdc.c ****   /* Sets the Reload type */
 344:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC->SRCR = (uint32_t)LTDC_Reload;
 432              		.loc 1 344 0
 433 0000 014B     		ldr	r3, .L29
 434 0002 5862     		str	r0, [r3, #36]
 435 0004 7047     		bx	lr
 436              	.L30:
 437 0006 00BF     		.align	2
 438              	.L29:
 439 0008 00680140 		.word	1073833984
 440              		.cfi_endproc
 441              	.LFE120:
 443              		.section	.text.LTDC_LayerInit,"ax",%progbits
 444              		.align	1
 445              		.global	LTDC_LayerInit
 446              		.syntax unified
 447              		.thumb
 448              		.thumb_func
 449              		.fpu softvfp
 451              	LTDC_LayerInit:
 452              	.LFB121:
 345:FWLIB/src/stm32f4xx_ltdc.c **** }
 346:FWLIB/src/stm32f4xx_ltdc.c **** 
 347:FWLIB/src/stm32f4xx_ltdc.c **** 
 348:FWLIB/src/stm32f4xx_ltdc.c **** /**
 349:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  Initializes the LTDC Layer according to the specified parameters
 350:FWLIB/src/stm32f4xx_ltdc.c ****   *         in the LTDC_LayerStruct.
 351:FWLIB/src/stm32f4xx_ltdc.c ****   * @note   This function can be used only when the LTDC is disabled.
 352:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_layerx: Select the layer to be configured, this parameter can be 
 353:FWLIB/src/stm32f4xx_ltdc.c ****   *         one of the following values: LTDC_Layer1, LTDC_Layer2    
 354:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_LayerStruct: pointer to a LTDC_LayerTypeDef structure that contains
 355:FWLIB/src/stm32f4xx_ltdc.c ****   *         the configuration information for the specified LTDC peripheral.
 356:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval None
 357:FWLIB/src/stm32f4xx_ltdc.c ****   */
 358:FWLIB/src/stm32f4xx_ltdc.c **** 
 359:FWLIB/src/stm32f4xx_ltdc.c **** void LTDC_LayerInit(LTDC_Layer_TypeDef* LTDC_Layerx, LTDC_Layer_InitTypeDef* LTDC_Layer_InitStruct)
 360:FWLIB/src/stm32f4xx_ltdc.c **** {
 453              		.loc 1 360 0
ARM GAS  /tmp/ccCk2cG4.s 			page 15


 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 457              		@ link register save eliminated.
 458              	.LVL21:
 459 0000 70B4     		push	{r4, r5, r6}
 460              	.LCFI5:
 461              		.cfi_def_cfa_offset 12
 462              		.cfi_offset 4, -12
 463              		.cfi_offset 5, -8
 464              		.cfi_offset 6, -4
 465              	.LVL22:
 361:FWLIB/src/stm32f4xx_ltdc.c **** 
 362:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t whsppos = 0;
 363:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t wvsppos = 0;
 364:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t dcgreen = 0;
 365:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t dcred = 0;
 366:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t dcalpha = 0;
 367:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t cfbp = 0;
 368:FWLIB/src/stm32f4xx_ltdc.c **** 
 369:FWLIB/src/stm32f4xx_ltdc.c **** /* Check the parameters */
 370:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_Pixelformat(LTDC_Layer_InitStruct->LTDC_PixelFormat));
 371:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_BlendingFactor1(LTDC_Layer_InitStruct->LTDC_BlendingFactor_1));
 372:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_BlendingFactor2(LTDC_Layer_InitStruct->LTDC_BlendingFactor_2));
 373:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_HCONFIGST(LTDC_Layer_InitStruct->LTDC_HorizontalStart));
 374:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_HCONFIGSP(LTDC_Layer_InitStruct->LTDC_HorizontalStop));
 375:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_VCONFIGST(LTDC_Layer_InitStruct->LTDC_VerticalStart));
 376:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_VCONFIGSP(LTDC_Layer_InitStruct->LTDC_VerticalStop));  
 377:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_DEFAULTCOLOR(LTDC_Layer_InitStruct->LTDC_DefaultColorBlue));
 378:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_DEFAULTCOLOR(LTDC_Layer_InitStruct->LTDC_DefaultColorGreen));
 379:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_DEFAULTCOLOR(LTDC_Layer_InitStruct->LTDC_DefaultColorRed));
 380:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_DEFAULTCOLOR(LTDC_Layer_InitStruct->LTDC_DefaultColorAlpha));
 381:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_CFBP(LTDC_Layer_InitStruct->LTDC_CFBPitch));
 382:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_CFBLL(LTDC_Layer_InitStruct->LTDC_CFBLineLength));
 383:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_CFBLNBR(LTDC_Layer_InitStruct->LTDC_CFBLineNumber));
 384:FWLIB/src/stm32f4xx_ltdc.c **** 
 385:FWLIB/src/stm32f4xx_ltdc.c ****   /* Configures the horizontal start and stop position */
 386:FWLIB/src/stm32f4xx_ltdc.c ****   whsppos = LTDC_Layer_InitStruct->LTDC_HorizontalStop << 16;
 466              		.loc 1 386 0
 467 0002 4C68     		ldr	r4, [r1, #4]
 468              	.LVL23:
 387:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 469              		.loc 1 387 0
 470 0004 4268     		ldr	r2, [r0, #4]
 471 0006 02F47042 		and	r2, r2, #61440
 472 000a 4260     		str	r2, [r0, #4]
 388:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->WHPCR = (LTDC_Layer_InitStruct->LTDC_HorizontalStart | whsppos);
 473              		.loc 1 388 0
 474 000c 0B68     		ldr	r3, [r1]
 475 000e 43EA0443 		orr	r3, r3, r4, lsl #16
 476 0012 4360     		str	r3, [r0, #4]
 389:FWLIB/src/stm32f4xx_ltdc.c **** 
 390:FWLIB/src/stm32f4xx_ltdc.c ****   /* Configures the vertical start and stop position */
 391:FWLIB/src/stm32f4xx_ltdc.c ****   wvsppos = LTDC_Layer_InitStruct->LTDC_VerticalStop << 16;
 477              		.loc 1 391 0
 478 0014 CC68     		ldr	r4, [r1, #12]
 479              	.LVL24:
ARM GAS  /tmp/ccCk2cG4.s 			page 16


 392:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 480              		.loc 1 392 0
 481 0016 8268     		ldr	r2, [r0, #8]
 482 0018 02F47042 		and	r2, r2, #61440
 483 001c 8260     		str	r2, [r0, #8]
 393:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->WVPCR  = (LTDC_Layer_InitStruct->LTDC_VerticalStart | wvsppos);
 484              		.loc 1 393 0
 485 001e 8B68     		ldr	r3, [r1, #8]
 486 0020 43EA0443 		orr	r3, r3, r4, lsl #16
 487 0024 8360     		str	r3, [r0, #8]
 394:FWLIB/src/stm32f4xx_ltdc.c **** 
 395:FWLIB/src/stm32f4xx_ltdc.c ****   /* Specifies the pixel format */
 396:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->PFCR &= ~(LTDC_LxPFCR_PF);
 488              		.loc 1 396 0
 489 0026 0369     		ldr	r3, [r0, #16]
 490 0028 23F00703 		bic	r3, r3, #7
 491 002c 0361     		str	r3, [r0, #16]
 397:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->PFCR = (LTDC_Layer_InitStruct->LTDC_PixelFormat);
 492              		.loc 1 397 0
 493 002e 0B69     		ldr	r3, [r1, #16]
 494 0030 0361     		str	r3, [r0, #16]
 398:FWLIB/src/stm32f4xx_ltdc.c **** 
 399:FWLIB/src/stm32f4xx_ltdc.c ****   /* Configures the default color values */
 400:FWLIB/src/stm32f4xx_ltdc.c ****   dcgreen = (LTDC_Layer_InitStruct->LTDC_DefaultColorGreen << 8);
 495              		.loc 1 400 0
 496 0032 CE69     		ldr	r6, [r1, #28]
 497              	.LVL25:
 401:FWLIB/src/stm32f4xx_ltdc.c ****   dcred = (LTDC_Layer_InitStruct->LTDC_DefaultColorRed << 16);
 498              		.loc 1 401 0
 499 0034 0D6A     		ldr	r5, [r1, #32]
 500              	.LVL26:
 402:FWLIB/src/stm32f4xx_ltdc.c ****   dcalpha = (LTDC_Layer_InitStruct->LTDC_DefaultColorAlpha << 24);
 501              		.loc 1 402 0
 502 0036 4C6A     		ldr	r4, [r1, #36]
 503              	.LVL27:
 403:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->DCCR &=  ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCC
 504              		.loc 1 403 0
 505 0038 8369     		ldr	r3, [r0, #24]
 506 003a 0022     		movs	r2, #0
 507 003c 8261     		str	r2, [r0, #24]
 404:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->DCCR = (LTDC_Layer_InitStruct->LTDC_DefaultColorBlue | dcgreen | \
 508              		.loc 1 404 0
 509 003e 8B69     		ldr	r3, [r1, #24]
 510 0040 43EA0623 		orr	r3, r3, r6, lsl #8
 511 0044 43EA0543 		orr	r3, r3, r5, lsl #16
 405:FWLIB/src/stm32f4xx_ltdc.c ****                         dcred | dcalpha);
 512              		.loc 1 405 0
 513 0048 43EA0463 		orr	r3, r3, r4, lsl #24
 404:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->DCCR = (LTDC_Layer_InitStruct->LTDC_DefaultColorBlue | dcgreen | \
 514              		.loc 1 404 0
 515 004c 8361     		str	r3, [r0, #24]
 406:FWLIB/src/stm32f4xx_ltdc.c **** 
 407:FWLIB/src/stm32f4xx_ltdc.c ****   /* Specifies the constant alpha value */      
 408:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->CACR &= ~(LTDC_LxCACR_CONSTA);
 516              		.loc 1 408 0
 517 004e 4369     		ldr	r3, [r0, #20]
 518 0050 23F0FF03 		bic	r3, r3, #255
ARM GAS  /tmp/ccCk2cG4.s 			page 17


 519 0054 4361     		str	r3, [r0, #20]
 409:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->CACR = (LTDC_Layer_InitStruct->LTDC_ConstantAlpha);
 520              		.loc 1 409 0
 521 0056 4B69     		ldr	r3, [r1, #20]
 522 0058 4361     		str	r3, [r0, #20]
 410:FWLIB/src/stm32f4xx_ltdc.c **** 
 411:FWLIB/src/stm32f4xx_ltdc.c ****   /* Specifies the blending factors */
 412:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 523              		.loc 1 412 0
 524 005a C369     		ldr	r3, [r0, #28]
 525 005c 23F4E063 		bic	r3, r3, #1792
 526 0060 23F00703 		bic	r3, r3, #7
 527 0064 C361     		str	r3, [r0, #28]
 413:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->BFCR = (LTDC_Layer_InitStruct->LTDC_BlendingFactor_1 | LTDC_Layer_InitStruct->LTDC_B
 528              		.loc 1 413 0
 529 0066 8B6A     		ldr	r3, [r1, #40]
 530 0068 CC6A     		ldr	r4, [r1, #44]
 531              	.LVL28:
 532 006a 2343     		orrs	r3, r3, r4
 533 006c C361     		str	r3, [r0, #28]
 414:FWLIB/src/stm32f4xx_ltdc.c **** 
 415:FWLIB/src/stm32f4xx_ltdc.c ****   /* Configures the color frame buffer start address */
 416:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 534              		.loc 1 416 0
 535 006e 836A     		ldr	r3, [r0, #40]
 536 0070 8262     		str	r2, [r0, #40]
 417:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->CFBAR = (LTDC_Layer_InitStruct->LTDC_CFBStartAdress);
 537              		.loc 1 417 0
 538 0072 0B6B     		ldr	r3, [r1, #48]
 539 0074 8362     		str	r3, [r0, #40]
 418:FWLIB/src/stm32f4xx_ltdc.c **** 
 419:FWLIB/src/stm32f4xx_ltdc.c ****   /* Configures the color frame buffer pitch in byte */
 420:FWLIB/src/stm32f4xx_ltdc.c ****   cfbp = (LTDC_Layer_InitStruct->LTDC_CFBPitch << 16);
 540              		.loc 1 420 0
 541 0076 8C6B     		ldr	r4, [r1, #56]
 542              	.LVL29:
 421:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 543              		.loc 1 421 0
 544 0078 C26A     		ldr	r2, [r0, #44]
 545 007a 02F0E022 		and	r2, r2, #-536813568
 546 007e C262     		str	r2, [r0, #44]
 422:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->CFBLR  = (LTDC_Layer_InitStruct->LTDC_CFBLineLength | cfbp);
 547              		.loc 1 422 0
 548 0080 4B6B     		ldr	r3, [r1, #52]
 549 0082 43EA0443 		orr	r3, r3, r4, lsl #16
 550 0086 C362     		str	r3, [r0, #44]
 423:FWLIB/src/stm32f4xx_ltdc.c **** 
 424:FWLIB/src/stm32f4xx_ltdc.c ****   /* Configures the frame buffer line number */
 425:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 551              		.loc 1 425 0
 552 0088 036B     		ldr	r3, [r0, #48]
 553 008a 23F4FF63 		bic	r3, r3, #2040
 554 008e 23F00703 		bic	r3, r3, #7
 555 0092 0363     		str	r3, [r0, #48]
 426:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->CFBLNR  = (LTDC_Layer_InitStruct->LTDC_CFBLineNumber);
 556              		.loc 1 426 0
 557 0094 CB6B     		ldr	r3, [r1, #60]
ARM GAS  /tmp/ccCk2cG4.s 			page 18


 558 0096 0363     		str	r3, [r0, #48]
 427:FWLIB/src/stm32f4xx_ltdc.c **** 
 428:FWLIB/src/stm32f4xx_ltdc.c **** }
 559              		.loc 1 428 0
 560 0098 70BC     		pop	{r4, r5, r6}
 561              	.LCFI6:
 562              		.cfi_restore 6
 563              		.cfi_restore 5
 564              		.cfi_restore 4
 565              		.cfi_def_cfa_offset 0
 566              	.LVL30:
 567 009a 7047     		bx	lr
 568              		.cfi_endproc
 569              	.LFE121:
 571              		.section	.text.LTDC_LayerStructInit,"ax",%progbits
 572              		.align	1
 573              		.global	LTDC_LayerStructInit
 574              		.syntax unified
 575              		.thumb
 576              		.thumb_func
 577              		.fpu softvfp
 579              	LTDC_LayerStructInit:
 580              	.LFB122:
 429:FWLIB/src/stm32f4xx_ltdc.c **** 
 430:FWLIB/src/stm32f4xx_ltdc.c **** /**
 431:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  Fills each LTDC_Layer_InitStruct member with its default value.
 432:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_Layer_InitStruct: pointer to a LTDC_LayerTypeDef structure which will
 433:FWLIB/src/stm32f4xx_ltdc.c ****   *         be initialized.
 434:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval None
 435:FWLIB/src/stm32f4xx_ltdc.c ****   */
 436:FWLIB/src/stm32f4xx_ltdc.c **** 
 437:FWLIB/src/stm32f4xx_ltdc.c **** void LTDC_LayerStructInit(LTDC_Layer_InitTypeDef * LTDC_Layer_InitStruct)
 438:FWLIB/src/stm32f4xx_ltdc.c **** {
 581              		.loc 1 438 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 586              	.LVL31:
 439:FWLIB/src/stm32f4xx_ltdc.c ****   /*--------------- Reset Layer structure parameters values -------------------*/
 440:FWLIB/src/stm32f4xx_ltdc.c **** 
 441:FWLIB/src/stm32f4xx_ltdc.c ****   /*!< Initialize the horizontal limit member */
 442:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layer_InitStruct->LTDC_HorizontalStart = 0x00;
 587              		.loc 1 442 0
 588 0000 0023     		movs	r3, #0
 589 0002 0360     		str	r3, [r0]
 443:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layer_InitStruct->LTDC_HorizontalStop = 0x00;
 590              		.loc 1 443 0
 591 0004 4360     		str	r3, [r0, #4]
 444:FWLIB/src/stm32f4xx_ltdc.c **** 
 445:FWLIB/src/stm32f4xx_ltdc.c ****   /*!< Initialize the vertical limit member */
 446:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layer_InitStruct->LTDC_VerticalStart = 0x00;
 592              		.loc 1 446 0
 593 0006 8360     		str	r3, [r0, #8]
 447:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layer_InitStruct->LTDC_VerticalStop = 0x00;
 594              		.loc 1 447 0
 595 0008 C360     		str	r3, [r0, #12]
ARM GAS  /tmp/ccCk2cG4.s 			page 19


 448:FWLIB/src/stm32f4xx_ltdc.c **** 
 449:FWLIB/src/stm32f4xx_ltdc.c ****   /*!< Initialize the pixel format member */
 450:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layer_InitStruct->LTDC_PixelFormat = LTDC_Pixelformat_ARGB8888;
 596              		.loc 1 450 0
 597 000a 0361     		str	r3, [r0, #16]
 451:FWLIB/src/stm32f4xx_ltdc.c **** 
 452:FWLIB/src/stm32f4xx_ltdc.c ****   /*!< Initialize the constant alpha value */
 453:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layer_InitStruct->LTDC_ConstantAlpha = 0xFF;
 598              		.loc 1 453 0
 599 000c FF22     		movs	r2, #255
 600 000e 4261     		str	r2, [r0, #20]
 454:FWLIB/src/stm32f4xx_ltdc.c **** 
 455:FWLIB/src/stm32f4xx_ltdc.c ****   /*!< Initialize the default color values */
 456:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layer_InitStruct->LTDC_DefaultColorBlue = 0x00;
 601              		.loc 1 456 0
 602 0010 8361     		str	r3, [r0, #24]
 457:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layer_InitStruct->LTDC_DefaultColorGreen = 0x00;
 603              		.loc 1 457 0
 604 0012 C361     		str	r3, [r0, #28]
 458:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layer_InitStruct->LTDC_DefaultColorRed = 0x00;
 605              		.loc 1 458 0
 606 0014 0362     		str	r3, [r0, #32]
 459:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layer_InitStruct->LTDC_DefaultColorAlpha = 0x00;
 607              		.loc 1 459 0
 608 0016 4362     		str	r3, [r0, #36]
 460:FWLIB/src/stm32f4xx_ltdc.c **** 
 461:FWLIB/src/stm32f4xx_ltdc.c ****   /*!< Initialize the blending factors */
 462:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layer_InitStruct->LTDC_BlendingFactor_1 = LTDC_BlendingFactor1_PAxCA;
 609              		.loc 1 462 0
 610 0018 4FF4C062 		mov	r2, #1536
 611 001c 8262     		str	r2, [r0, #40]
 463:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layer_InitStruct->LTDC_BlendingFactor_2 = LTDC_BlendingFactor2_PAxCA;
 612              		.loc 1 463 0
 613 001e 0722     		movs	r2, #7
 614 0020 C262     		str	r2, [r0, #44]
 464:FWLIB/src/stm32f4xx_ltdc.c **** 
 465:FWLIB/src/stm32f4xx_ltdc.c ****   /*!< Initialize the frame buffer start address */
 466:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layer_InitStruct->LTDC_CFBStartAdress = 0x00;
 615              		.loc 1 466 0
 616 0022 0363     		str	r3, [r0, #48]
 467:FWLIB/src/stm32f4xx_ltdc.c **** 
 468:FWLIB/src/stm32f4xx_ltdc.c ****   /*!< Initialize the frame buffer pitch and line length */
 469:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layer_InitStruct->LTDC_CFBLineLength = 0x00;
 617              		.loc 1 469 0
 618 0024 4363     		str	r3, [r0, #52]
 470:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layer_InitStruct->LTDC_CFBPitch = 0x00;
 619              		.loc 1 470 0
 620 0026 8363     		str	r3, [r0, #56]
 471:FWLIB/src/stm32f4xx_ltdc.c **** 
 472:FWLIB/src/stm32f4xx_ltdc.c ****   /*!< Initialize the frame buffer line number */
 473:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layer_InitStruct->LTDC_CFBLineNumber = 0x00;
 621              		.loc 1 473 0
 622 0028 C363     		str	r3, [r0, #60]
 623 002a 7047     		bx	lr
 624              		.cfi_endproc
 625              	.LFE122:
 627              		.section	.text.LTDC_LayerCmd,"ax",%progbits
ARM GAS  /tmp/ccCk2cG4.s 			page 20


 628              		.align	1
 629              		.global	LTDC_LayerCmd
 630              		.syntax unified
 631              		.thumb
 632              		.thumb_func
 633              		.fpu softvfp
 635              	LTDC_LayerCmd:
 636              	.LFB123:
 474:FWLIB/src/stm32f4xx_ltdc.c **** }
 475:FWLIB/src/stm32f4xx_ltdc.c **** 
 476:FWLIB/src/stm32f4xx_ltdc.c **** 
 477:FWLIB/src/stm32f4xx_ltdc.c **** /**
 478:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  Enables or disables the LTDC_Layer Controller.
 479:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_layerx: Select the layer to be configured, this parameter can be 
 480:FWLIB/src/stm32f4xx_ltdc.c ****   *         one of the following values: LTDC_Layer1, LTDC_Layer2
 481:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  NewState: new state of the LTDC_Layer peripheral.
 482:FWLIB/src/stm32f4xx_ltdc.c ****   *   This parameter can be: ENABLE or DISABLE.
 483:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval None
 484:FWLIB/src/stm32f4xx_ltdc.c ****   */
 485:FWLIB/src/stm32f4xx_ltdc.c **** 
 486:FWLIB/src/stm32f4xx_ltdc.c **** void LTDC_LayerCmd(LTDC_Layer_TypeDef* LTDC_Layerx, FunctionalState NewState)
 487:FWLIB/src/stm32f4xx_ltdc.c **** {
 637              		.loc 1 487 0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 0
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 641              		@ link register save eliminated.
 642              	.LVL32:
 488:FWLIB/src/stm32f4xx_ltdc.c ****   /* Check the parameters */
 489:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 490:FWLIB/src/stm32f4xx_ltdc.c **** 
 491:FWLIB/src/stm32f4xx_ltdc.c ****   if (NewState != DISABLE)
 643              		.loc 1 491 0
 644 0000 21B9     		cbnz	r1, .L37
 492:FWLIB/src/stm32f4xx_ltdc.c ****   {
 493:FWLIB/src/stm32f4xx_ltdc.c ****     /* Enable LTDC_Layer by setting LEN bit */
 494:FWLIB/src/stm32f4xx_ltdc.c ****     LTDC_Layerx->CR |= (uint32_t)LTDC_LxCR_LEN;
 495:FWLIB/src/stm32f4xx_ltdc.c ****   }
 496:FWLIB/src/stm32f4xx_ltdc.c ****   else
 497:FWLIB/src/stm32f4xx_ltdc.c ****   {
 498:FWLIB/src/stm32f4xx_ltdc.c ****     /* Disable LTDC_Layer by clearing LEN bit */
 499:FWLIB/src/stm32f4xx_ltdc.c ****     LTDC_Layerx->CR &= ~(uint32_t)LTDC_LxCR_LEN;
 645              		.loc 1 499 0
 646 0002 0368     		ldr	r3, [r0]
 647 0004 23F00103 		bic	r3, r3, #1
 648 0008 0360     		str	r3, [r0]
 649 000a 7047     		bx	lr
 650              	.L37:
 494:FWLIB/src/stm32f4xx_ltdc.c ****   }
 651              		.loc 1 494 0
 652 000c 0368     		ldr	r3, [r0]
 653 000e 43F00103 		orr	r3, r3, #1
 654 0012 0360     		str	r3, [r0]
 655 0014 7047     		bx	lr
 656              		.cfi_endproc
 657              	.LFE123:
 659              		.section	.text.LTDC_GetPosStatus,"ax",%progbits
ARM GAS  /tmp/ccCk2cG4.s 			page 21


 660              		.align	1
 661              		.global	LTDC_GetPosStatus
 662              		.syntax unified
 663              		.thumb
 664              		.thumb_func
 665              		.fpu softvfp
 667              	LTDC_GetPosStatus:
 668              	.LFB124:
 500:FWLIB/src/stm32f4xx_ltdc.c ****   }
 501:FWLIB/src/stm32f4xx_ltdc.c **** }
 502:FWLIB/src/stm32f4xx_ltdc.c **** 
 503:FWLIB/src/stm32f4xx_ltdc.c **** 
 504:FWLIB/src/stm32f4xx_ltdc.c **** /**
 505:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  Get the current position.
 506:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_Pos_InitStruct: pointer to a LTDC_PosTypeDef structure that contains
 507:FWLIB/src/stm32f4xx_ltdc.c ****   *         the current position.
 508:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval None
 509:FWLIB/src/stm32f4xx_ltdc.c ****   */
 510:FWLIB/src/stm32f4xx_ltdc.c **** 
 511:FWLIB/src/stm32f4xx_ltdc.c **** LTDC_PosTypeDef LTDC_GetPosStatus(void)
 512:FWLIB/src/stm32f4xx_ltdc.c **** {
 669              		.loc 1 512 0
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 0
 672              		@ frame_needed = 0, uses_anonymous_args = 0
 673              		@ link register save eliminated.
 674              	.LVL33:
 513:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_PosTypeDef LTDC_Pos_InitStruct;
 514:FWLIB/src/stm32f4xx_ltdc.c **** 
 515:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC->CPSR &= ~(LTDC_CPSR_CYPOS | LTDC_CPSR_CXPOS);
 675              		.loc 1 515 0
 676 0000 054B     		ldr	r3, .L39
 677 0002 5A6C     		ldr	r2, [r3, #68]
 678 0004 0022     		movs	r2, #0
 679 0006 5A64     		str	r2, [r3, #68]
 516:FWLIB/src/stm32f4xx_ltdc.c **** 
 517:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Pos_InitStruct.LTDC_POSX = (uint32_t)(LTDC->CPSR >> 16);
 680              		.loc 1 517 0
 681 0008 5A6C     		ldr	r2, [r3, #68]
 682 000a 120C     		lsrs	r2, r2, #16
 683 000c 0260     		str	r2, [r0]
 518:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Pos_InitStruct.LTDC_POSY = (uint32_t)(LTDC->CPSR & 0xFFFF);
 684              		.loc 1 518 0
 685 000e 5B6C     		ldr	r3, [r3, #68]
 686 0010 9BB2     		uxth	r3, r3
 687 0012 4360     		str	r3, [r0, #4]
 519:FWLIB/src/stm32f4xx_ltdc.c **** 
 520:FWLIB/src/stm32f4xx_ltdc.c ****   return LTDC_Pos_InitStruct;
 521:FWLIB/src/stm32f4xx_ltdc.c **** }
 688              		.loc 1 521 0
 689 0014 7047     		bx	lr
 690              	.L40:
 691 0016 00BF     		.align	2
 692              	.L39:
 693 0018 00680140 		.word	1073833984
 694              		.cfi_endproc
 695              	.LFE124:
ARM GAS  /tmp/ccCk2cG4.s 			page 22


 697              		.section	.text.LTDC_PosStructInit,"ax",%progbits
 698              		.align	1
 699              		.global	LTDC_PosStructInit
 700              		.syntax unified
 701              		.thumb
 702              		.thumb_func
 703              		.fpu softvfp
 705              	LTDC_PosStructInit:
 706              	.LFB125:
 522:FWLIB/src/stm32f4xx_ltdc.c **** 
 523:FWLIB/src/stm32f4xx_ltdc.c **** /**
 524:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  Fills each LTDC_Pos_InitStruct member with its default value.
 525:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_Pos_InitStruct: pointer to a LTDC_PosTypeDef structure which will
 526:FWLIB/src/stm32f4xx_ltdc.c ****   *         be initialized.
 527:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval None
 528:FWLIB/src/stm32f4xx_ltdc.c ****   */
 529:FWLIB/src/stm32f4xx_ltdc.c **** 
 530:FWLIB/src/stm32f4xx_ltdc.c **** void LTDC_PosStructInit(LTDC_PosTypeDef* LTDC_Pos_InitStruct)
 531:FWLIB/src/stm32f4xx_ltdc.c **** {
 707              		.loc 1 531 0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 0
 710              		@ frame_needed = 0, uses_anonymous_args = 0
 711              		@ link register save eliminated.
 712              	.LVL34:
 532:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Pos_InitStruct->LTDC_POSX = 0x00;
 713              		.loc 1 532 0
 714 0000 0023     		movs	r3, #0
 715 0002 0360     		str	r3, [r0]
 533:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Pos_InitStruct->LTDC_POSY = 0x00;
 716              		.loc 1 533 0
 717 0004 4360     		str	r3, [r0, #4]
 718 0006 7047     		bx	lr
 719              		.cfi_endproc
 720              	.LFE125:
 722              		.section	.text.LTDC_GetCDStatus,"ax",%progbits
 723              		.align	1
 724              		.global	LTDC_GetCDStatus
 725              		.syntax unified
 726              		.thumb
 727              		.thumb_func
 728              		.fpu softvfp
 730              	LTDC_GetCDStatus:
 731              	.LFB126:
 534:FWLIB/src/stm32f4xx_ltdc.c **** }
 535:FWLIB/src/stm32f4xx_ltdc.c **** 
 536:FWLIB/src/stm32f4xx_ltdc.c **** /**
 537:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  Checks whether the specified LTDC's flag is set or not.
 538:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_CD: specifies the flag to check.
 539:FWLIB/src/stm32f4xx_ltdc.c ****   *   This parameter can be one of the following values:
 540:FWLIB/src/stm32f4xx_ltdc.c ****   *     @arg LTDC_CD_VDES: vertical data enable current status.
 541:FWLIB/src/stm32f4xx_ltdc.c ****   *     @arg LTDC_CD_HDES: horizontal data enable current status.
 542:FWLIB/src/stm32f4xx_ltdc.c ****   *     @arg LTDC_CD_VSYNC:  Vertical Synchronization current status.
 543:FWLIB/src/stm32f4xx_ltdc.c ****   *     @arg LTDC_CD_HSYNC:  Horizontal Synchronization current status.
 544:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval The new state of LTDC_CD (SET or RESET).
 545:FWLIB/src/stm32f4xx_ltdc.c ****   */
 546:FWLIB/src/stm32f4xx_ltdc.c **** 
ARM GAS  /tmp/ccCk2cG4.s 			page 23


 547:FWLIB/src/stm32f4xx_ltdc.c **** FlagStatus LTDC_GetCDStatus(uint32_t LTDC_CD)
 548:FWLIB/src/stm32f4xx_ltdc.c **** {
 732              		.loc 1 548 0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 0
 735              		@ frame_needed = 0, uses_anonymous_args = 0
 736              		@ link register save eliminated.
 737              	.LVL35:
 549:FWLIB/src/stm32f4xx_ltdc.c ****   FlagStatus bitstatus;
 550:FWLIB/src/stm32f4xx_ltdc.c **** 
 551:FWLIB/src/stm32f4xx_ltdc.c ****   /* Check the parameters */
 552:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_GET_CD(LTDC_CD));
 553:FWLIB/src/stm32f4xx_ltdc.c **** 
 554:FWLIB/src/stm32f4xx_ltdc.c ****   if ((LTDC->CDSR & LTDC_CD) != (uint32_t)RESET)
 738              		.loc 1 554 0
 739 0000 034B     		ldr	r3, .L46
 740 0002 9B6C     		ldr	r3, [r3, #72]
 741 0004 0342     		tst	r3, r0
 742 0006 01D1     		bne	.L45
 555:FWLIB/src/stm32f4xx_ltdc.c ****   {
 556:FWLIB/src/stm32f4xx_ltdc.c ****     bitstatus = SET;
 557:FWLIB/src/stm32f4xx_ltdc.c ****   }
 558:FWLIB/src/stm32f4xx_ltdc.c ****   else
 559:FWLIB/src/stm32f4xx_ltdc.c ****   {
 560:FWLIB/src/stm32f4xx_ltdc.c ****     bitstatus = RESET;
 743              		.loc 1 560 0
 744 0008 0020     		movs	r0, #0
 745              	.LVL36:
 561:FWLIB/src/stm32f4xx_ltdc.c ****   }
 562:FWLIB/src/stm32f4xx_ltdc.c ****   return bitstatus;
 563:FWLIB/src/stm32f4xx_ltdc.c **** }
 746              		.loc 1 563 0
 747 000a 7047     		bx	lr
 748              	.LVL37:
 749              	.L45:
 556:FWLIB/src/stm32f4xx_ltdc.c ****   }
 750              		.loc 1 556 0
 751 000c 0120     		movs	r0, #1
 752              	.LVL38:
 753 000e 7047     		bx	lr
 754              	.L47:
 755              		.align	2
 756              	.L46:
 757 0010 00680140 		.word	1073833984
 758              		.cfi_endproc
 759              	.LFE126:
 761              		.section	.text.LTDC_ColorKeyingConfig,"ax",%progbits
 762              		.align	1
 763              		.global	LTDC_ColorKeyingConfig
 764              		.syntax unified
 765              		.thumb
 766              		.thumb_func
 767              		.fpu softvfp
 769              	LTDC_ColorKeyingConfig:
 770              	.LFB127:
 564:FWLIB/src/stm32f4xx_ltdc.c **** 
 565:FWLIB/src/stm32f4xx_ltdc.c **** /**
ARM GAS  /tmp/ccCk2cG4.s 			page 24


 566:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  Set and configure the color keying.
 567:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_colorkeying_InitStruct: pointer to a LTDC_ColorKeying_InitTypeDef 
 568:FWLIB/src/stm32f4xx_ltdc.c ****   *         structure that contains the color keying configuration.
 569:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_layerx: Select the layer to be configured, this parameter can be 
 570:FWLIB/src/stm32f4xx_ltdc.c ****   *         one of the following values: LTDC_Layer1, LTDC_Layer2   
 571:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval None
 572:FWLIB/src/stm32f4xx_ltdc.c ****   */
 573:FWLIB/src/stm32f4xx_ltdc.c **** 
 574:FWLIB/src/stm32f4xx_ltdc.c **** void LTDC_ColorKeyingConfig(LTDC_Layer_TypeDef* LTDC_Layerx, LTDC_ColorKeying_InitTypeDef* LTDC_col
 575:FWLIB/src/stm32f4xx_ltdc.c **** { 
 771              		.loc 1 575 0
 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 0
 774              		@ frame_needed = 0, uses_anonymous_args = 0
 775              		@ link register save eliminated.
 776              	.LVL39:
 576:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t ckgreen = 0;
 577:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t ckred = 0;
 578:FWLIB/src/stm32f4xx_ltdc.c **** 
 579:FWLIB/src/stm32f4xx_ltdc.c ****   /* Check the parameters */
 580:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 581:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_CKEYING(LTDC_colorkeying_InitStruct->LTDC_ColorKeyBlue));
 582:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_CKEYING(LTDC_colorkeying_InitStruct->LTDC_ColorKeyGreen));
 583:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_CKEYING(LTDC_colorkeying_InitStruct->LTDC_ColorKeyRed));
 584:FWLIB/src/stm32f4xx_ltdc.c ****   
 585:FWLIB/src/stm32f4xx_ltdc.c ****   if (NewState != DISABLE)
 777              		.loc 1 585 0
 778 0000 3AB9     		cbnz	r2, .L55
 586:FWLIB/src/stm32f4xx_ltdc.c ****   {
 587:FWLIB/src/stm32f4xx_ltdc.c ****     /* Enable LTDC color keying by setting COLKEN bit */
 588:FWLIB/src/stm32f4xx_ltdc.c ****     LTDC_Layerx->CR |= (uint32_t)LTDC_LxCR_COLKEN;
 589:FWLIB/src/stm32f4xx_ltdc.c ****     
 590:FWLIB/src/stm32f4xx_ltdc.c ****     /* Sets the color keying values */
 591:FWLIB/src/stm32f4xx_ltdc.c ****     ckgreen = (LTDC_colorkeying_InitStruct->LTDC_ColorKeyGreen << 8);
 592:FWLIB/src/stm32f4xx_ltdc.c ****     ckred = (LTDC_colorkeying_InitStruct->LTDC_ColorKeyRed << 16);
 593:FWLIB/src/stm32f4xx_ltdc.c ****     LTDC_Layerx->CKCR  &= ~(LTDC_LxCKCR_CKBLUE | LTDC_LxCKCR_CKGREEN | LTDC_LxCKCR_CKRED);
 594:FWLIB/src/stm32f4xx_ltdc.c ****     LTDC_Layerx->CKCR |= (LTDC_colorkeying_InitStruct->LTDC_ColorKeyBlue | ckgreen | ckred);
 595:FWLIB/src/stm32f4xx_ltdc.c ****   }
 596:FWLIB/src/stm32f4xx_ltdc.c ****   else
 597:FWLIB/src/stm32f4xx_ltdc.c ****   {
 598:FWLIB/src/stm32f4xx_ltdc.c ****     /* Disable LTDC color keying by clearing COLKEN bit */
 599:FWLIB/src/stm32f4xx_ltdc.c ****     LTDC_Layerx->CR &= ~(uint32_t)LTDC_LxCR_COLKEN;
 779              		.loc 1 599 0
 780 0002 0368     		ldr	r3, [r0]
 781 0004 23F00203 		bic	r3, r3, #2
 782 0008 0360     		str	r3, [r0]
 600:FWLIB/src/stm32f4xx_ltdc.c ****   }
 601:FWLIB/src/stm32f4xx_ltdc.c ****   
 602:FWLIB/src/stm32f4xx_ltdc.c ****   /* Reload shadow register */
 603:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC->SRCR = LTDC_IMReload;
 783              		.loc 1 603 0
 784 000a 0122     		movs	r2, #1
 785              	.LVL40:
 786 000c 0D4B     		ldr	r3, .L56
 787 000e 5A62     		str	r2, [r3, #36]
 788 0010 7047     		bx	lr
 789              	.LVL41:
ARM GAS  /tmp/ccCk2cG4.s 			page 25


 790              	.L55:
 575:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t ckgreen = 0;
 791              		.loc 1 575 0
 792 0012 30B4     		push	{r4, r5}
 793              	.LCFI7:
 794              		.cfi_def_cfa_offset 8
 795              		.cfi_offset 4, -8
 796              		.cfi_offset 5, -4
 588:FWLIB/src/stm32f4xx_ltdc.c ****     
 797              		.loc 1 588 0
 798 0014 0368     		ldr	r3, [r0]
 799 0016 43F00203 		orr	r3, r3, #2
 800 001a 0360     		str	r3, [r0]
 591:FWLIB/src/stm32f4xx_ltdc.c ****     ckred = (LTDC_colorkeying_InitStruct->LTDC_ColorKeyRed << 16);
 801              		.loc 1 591 0
 802 001c 4D68     		ldr	r5, [r1, #4]
 803              	.LVL42:
 592:FWLIB/src/stm32f4xx_ltdc.c ****     LTDC_Layerx->CKCR  &= ~(LTDC_LxCKCR_CKBLUE | LTDC_LxCKCR_CKGREEN | LTDC_LxCKCR_CKRED);
 804              		.loc 1 592 0
 805 001e 8C68     		ldr	r4, [r1, #8]
 806              	.LVL43:
 593:FWLIB/src/stm32f4xx_ltdc.c ****     LTDC_Layerx->CKCR |= (LTDC_colorkeying_InitStruct->LTDC_ColorKeyBlue | ckgreen | ckred);
 807              		.loc 1 593 0
 808 0020 C268     		ldr	r2, [r0, #12]
 809              	.LVL44:
 810 0022 02F07F42 		and	r2, r2, #-16777216
 811 0026 C260     		str	r2, [r0, #12]
 594:FWLIB/src/stm32f4xx_ltdc.c ****   }
 812              		.loc 1 594 0
 813 0028 C268     		ldr	r2, [r0, #12]
 814 002a 0B68     		ldr	r3, [r1]
 815 002c 43EA0523 		orr	r3, r3, r5, lsl #8
 816 0030 43EA0443 		orr	r3, r3, r4, lsl #16
 817 0034 1343     		orrs	r3, r3, r2
 818 0036 C360     		str	r3, [r0, #12]
 819              		.loc 1 603 0
 820 0038 0122     		movs	r2, #1
 821 003a 024B     		ldr	r3, .L56
 822 003c 5A62     		str	r2, [r3, #36]
 604:FWLIB/src/stm32f4xx_ltdc.c **** }
 823              		.loc 1 604 0
 824 003e 30BC     		pop	{r4, r5}
 825              	.LCFI8:
 826              		.cfi_restore 5
 827              		.cfi_restore 4
 828              		.cfi_def_cfa_offset 0
 829              	.LVL45:
 830 0040 7047     		bx	lr
 831              	.L57:
 832 0042 00BF     		.align	2
 833              	.L56:
 834 0044 00680140 		.word	1073833984
 835              		.cfi_endproc
 836              	.LFE127:
 838              		.section	.text.LTDC_ColorKeyingStructInit,"ax",%progbits
 839              		.align	1
 840              		.global	LTDC_ColorKeyingStructInit
ARM GAS  /tmp/ccCk2cG4.s 			page 26


 841              		.syntax unified
 842              		.thumb
 843              		.thumb_func
 844              		.fpu softvfp
 846              	LTDC_ColorKeyingStructInit:
 847              	.LFB128:
 605:FWLIB/src/stm32f4xx_ltdc.c **** 
 606:FWLIB/src/stm32f4xx_ltdc.c **** /**
 607:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  Fills each LTDC_colorkeying_InitStruct member with its default value.
 608:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_colorkeying_InitStruct: pointer to a LTDC_ColorKeying_InitTypeDef structure which 
 609:FWLIB/src/stm32f4xx_ltdc.c ****   *         be initialized.
 610:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval None
 611:FWLIB/src/stm32f4xx_ltdc.c ****   */
 612:FWLIB/src/stm32f4xx_ltdc.c **** 
 613:FWLIB/src/stm32f4xx_ltdc.c **** void LTDC_ColorKeyingStructInit(LTDC_ColorKeying_InitTypeDef* LTDC_colorkeying_InitStruct)
 614:FWLIB/src/stm32f4xx_ltdc.c **** {
 848              		.loc 1 614 0
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 0
 851              		@ frame_needed = 0, uses_anonymous_args = 0
 852              		@ link register save eliminated.
 853              	.LVL46:
 615:FWLIB/src/stm32f4xx_ltdc.c ****   /*!< Initialize the color keying values */
 616:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_colorkeying_InitStruct->LTDC_ColorKeyBlue = 0x00;
 854              		.loc 1 616 0
 855 0000 0023     		movs	r3, #0
 856 0002 0360     		str	r3, [r0]
 617:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_colorkeying_InitStruct->LTDC_ColorKeyGreen = 0x00;
 857              		.loc 1 617 0
 858 0004 4360     		str	r3, [r0, #4]
 618:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_colorkeying_InitStruct->LTDC_ColorKeyRed = 0x00;
 859              		.loc 1 618 0
 860 0006 8360     		str	r3, [r0, #8]
 861 0008 7047     		bx	lr
 862              		.cfi_endproc
 863              	.LFE128:
 865              		.section	.text.LTDC_CLUTCmd,"ax",%progbits
 866              		.align	1
 867              		.global	LTDC_CLUTCmd
 868              		.syntax unified
 869              		.thumb
 870              		.thumb_func
 871              		.fpu softvfp
 873              	LTDC_CLUTCmd:
 874              	.LFB129:
 619:FWLIB/src/stm32f4xx_ltdc.c **** }
 620:FWLIB/src/stm32f4xx_ltdc.c **** 
 621:FWLIB/src/stm32f4xx_ltdc.c **** 
 622:FWLIB/src/stm32f4xx_ltdc.c **** /**
 623:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  Enables or disables CLUT.
 624:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  NewState: new state of CLUT.
 625:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_layerx: Select the layer to be configured, this parameter can be 
 626:FWLIB/src/stm32f4xx_ltdc.c ****   *         one of the following values: LTDC_Layer1, LTDC_Layer2  
 627:FWLIB/src/stm32f4xx_ltdc.c ****   *   This parameter can be: ENABLE or DISABLE.
 628:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval None
 629:FWLIB/src/stm32f4xx_ltdc.c ****   */
 630:FWLIB/src/stm32f4xx_ltdc.c **** 
ARM GAS  /tmp/ccCk2cG4.s 			page 27


 631:FWLIB/src/stm32f4xx_ltdc.c **** void LTDC_CLUTCmd(LTDC_Layer_TypeDef* LTDC_Layerx, FunctionalState NewState)
 632:FWLIB/src/stm32f4xx_ltdc.c **** {
 875              		.loc 1 632 0
 876              		.cfi_startproc
 877              		@ args = 0, pretend = 0, frame = 0
 878              		@ frame_needed = 0, uses_anonymous_args = 0
 879              		@ link register save eliminated.
 880              	.LVL47:
 633:FWLIB/src/stm32f4xx_ltdc.c ****   /* Check the parameters */
 634:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 635:FWLIB/src/stm32f4xx_ltdc.c **** 
 636:FWLIB/src/stm32f4xx_ltdc.c ****   if (NewState != DISABLE)
 881              		.loc 1 636 0
 882 0000 39B9     		cbnz	r1, .L62
 637:FWLIB/src/stm32f4xx_ltdc.c ****   {
 638:FWLIB/src/stm32f4xx_ltdc.c ****     /* Enable CLUT by setting CLUTEN bit */
 639:FWLIB/src/stm32f4xx_ltdc.c ****     LTDC_Layerx->CR |= (uint32_t)LTDC_LxCR_CLUTEN;
 640:FWLIB/src/stm32f4xx_ltdc.c ****   }
 641:FWLIB/src/stm32f4xx_ltdc.c ****   else
 642:FWLIB/src/stm32f4xx_ltdc.c ****   {
 643:FWLIB/src/stm32f4xx_ltdc.c ****     /* Disable CLUT by clearing CLUTEN bit */
 644:FWLIB/src/stm32f4xx_ltdc.c ****     LTDC_Layerx->CR &= ~(uint32_t)LTDC_LxCR_CLUTEN;
 883              		.loc 1 644 0
 884 0002 0368     		ldr	r3, [r0]
 885 0004 23F01003 		bic	r3, r3, #16
 886 0008 0360     		str	r3, [r0]
 887              	.L61:
 645:FWLIB/src/stm32f4xx_ltdc.c ****   }
 646:FWLIB/src/stm32f4xx_ltdc.c ****   
 647:FWLIB/src/stm32f4xx_ltdc.c ****   /* Reload shadow register */
 648:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC->SRCR = LTDC_IMReload;
 888              		.loc 1 648 0
 889 000a 0122     		movs	r2, #1
 890 000c 034B     		ldr	r3, .L63
 891 000e 5A62     		str	r2, [r3, #36]
 892 0010 7047     		bx	lr
 893              	.L62:
 639:FWLIB/src/stm32f4xx_ltdc.c ****   }
 894              		.loc 1 639 0
 895 0012 0368     		ldr	r3, [r0]
 896 0014 43F01003 		orr	r3, r3, #16
 897 0018 0360     		str	r3, [r0]
 898 001a F6E7     		b	.L61
 899              	.L64:
 900              		.align	2
 901              	.L63:
 902 001c 00680140 		.word	1073833984
 903              		.cfi_endproc
 904              	.LFE129:
 906              		.section	.text.LTDC_CLUTInit,"ax",%progbits
 907              		.align	1
 908              		.global	LTDC_CLUTInit
 909              		.syntax unified
 910              		.thumb
 911              		.thumb_func
 912              		.fpu softvfp
 914              	LTDC_CLUTInit:
ARM GAS  /tmp/ccCk2cG4.s 			page 28


 915              	.LFB130:
 649:FWLIB/src/stm32f4xx_ltdc.c **** }
 650:FWLIB/src/stm32f4xx_ltdc.c **** 
 651:FWLIB/src/stm32f4xx_ltdc.c **** /**
 652:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  configure the CLUT.
 653:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_CLUT_InitStruct: pointer to a LTDC_CLUT_InitTypeDef structure that contains
 654:FWLIB/src/stm32f4xx_ltdc.c ****   *         the CLUT configuration.
 655:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_layerx: Select the layer to be configured, this parameter can be 
 656:FWLIB/src/stm32f4xx_ltdc.c ****   *         one of the following values: LTDC_Layer1, LTDC_Layer2   
 657:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval None
 658:FWLIB/src/stm32f4xx_ltdc.c ****   */
 659:FWLIB/src/stm32f4xx_ltdc.c **** 
 660:FWLIB/src/stm32f4xx_ltdc.c **** void LTDC_CLUTInit(LTDC_Layer_TypeDef* LTDC_Layerx, LTDC_CLUT_InitTypeDef* LTDC_CLUT_InitStruct)
 661:FWLIB/src/stm32f4xx_ltdc.c **** {  
 916              		.loc 1 661 0
 917              		.cfi_startproc
 918              		@ args = 0, pretend = 0, frame = 0
 919              		@ frame_needed = 0, uses_anonymous_args = 0
 920              		@ link register save eliminated.
 921              	.LVL48:
 922 0000 30B4     		push	{r4, r5}
 923              	.LCFI9:
 924              		.cfi_def_cfa_offset 8
 925              		.cfi_offset 4, -8
 926              		.cfi_offset 5, -4
 927              	.LVL49:
 662:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t green = 0;
 663:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t red = 0;
 664:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t clutadd = 0;
 665:FWLIB/src/stm32f4xx_ltdc.c **** 
 666:FWLIB/src/stm32f4xx_ltdc.c ****   /* Check the parameters */
 667:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_CLUTWR(LTDC_CLUT_InitStruct->LTDC_CLUTAdress));
 668:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_CLUTWR(LTDC_CLUT_InitStruct->LTDC_RedValue));
 669:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_CLUTWR(LTDC_CLUT_InitStruct->LTDC_GreenValue));
 670:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_CLUTWR(LTDC_CLUT_InitStruct->LTDC_BlueValue));
 671:FWLIB/src/stm32f4xx_ltdc.c ****     
 672:FWLIB/src/stm32f4xx_ltdc.c ****   /* Specifies the CLUT address and RGB value */
 673:FWLIB/src/stm32f4xx_ltdc.c ****   green = (LTDC_CLUT_InitStruct->LTDC_GreenValue << 8);
 928              		.loc 1 673 0
 929 0002 8C68     		ldr	r4, [r1, #8]
 930              	.LVL50:
 674:FWLIB/src/stm32f4xx_ltdc.c ****   red = (LTDC_CLUT_InitStruct->LTDC_RedValue << 16);
 931              		.loc 1 674 0
 932 0004 CA68     		ldr	r2, [r1, #12]
 933              	.LVL51:
 675:FWLIB/src/stm32f4xx_ltdc.c ****   clutadd = (LTDC_CLUT_InitStruct->LTDC_CLUTAdress << 24);
 934              		.loc 1 675 0
 935 0006 0D68     		ldr	r5, [r1]
 936              	.LVL52:
 676:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->CLUTWR  = (clutadd | LTDC_CLUT_InitStruct->LTDC_BlueValue | \
 937              		.loc 1 676 0
 938 0008 4B68     		ldr	r3, [r1, #4]
 939 000a 43EA0563 		orr	r3, r3, r5, lsl #24
 940 000e 43EA0423 		orr	r3, r3, r4, lsl #8
 677:FWLIB/src/stm32f4xx_ltdc.c ****                               green | red);
 941              		.loc 1 677 0
 942 0012 43EA0243 		orr	r3, r3, r2, lsl #16
ARM GAS  /tmp/ccCk2cG4.s 			page 29


 676:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->CLUTWR  = (clutadd | LTDC_CLUT_InitStruct->LTDC_BlueValue | \
 943              		.loc 1 676 0
 944 0016 0364     		str	r3, [r0, #64]
 678:FWLIB/src/stm32f4xx_ltdc.c **** }
 945              		.loc 1 678 0
 946 0018 30BC     		pop	{r4, r5}
 947              	.LCFI10:
 948              		.cfi_restore 5
 949              		.cfi_restore 4
 950              		.cfi_def_cfa_offset 0
 951              	.LVL53:
 952 001a 7047     		bx	lr
 953              		.cfi_endproc
 954              	.LFE130:
 956              		.section	.text.LTDC_CLUTStructInit,"ax",%progbits
 957              		.align	1
 958              		.global	LTDC_CLUTStructInit
 959              		.syntax unified
 960              		.thumb
 961              		.thumb_func
 962              		.fpu softvfp
 964              	LTDC_CLUTStructInit:
 965              	.LFB131:
 679:FWLIB/src/stm32f4xx_ltdc.c **** 
 680:FWLIB/src/stm32f4xx_ltdc.c **** /**
 681:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  Fills each LTDC_CLUT_InitStruct member with its default value.
 682:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_CLUT_InitStruct: pointer to a LTDC_CLUT_InitTypeDef structure which will
 683:FWLIB/src/stm32f4xx_ltdc.c ****   *         be initialized.
 684:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval None
 685:FWLIB/src/stm32f4xx_ltdc.c ****   */
 686:FWLIB/src/stm32f4xx_ltdc.c **** 
 687:FWLIB/src/stm32f4xx_ltdc.c **** void LTDC_CLUTStructInit(LTDC_CLUT_InitTypeDef* LTDC_CLUT_InitStruct)
 688:FWLIB/src/stm32f4xx_ltdc.c **** {
 966              		.loc 1 688 0
 967              		.cfi_startproc
 968              		@ args = 0, pretend = 0, frame = 0
 969              		@ frame_needed = 0, uses_anonymous_args = 0
 970              		@ link register save eliminated.
 971              	.LVL54:
 689:FWLIB/src/stm32f4xx_ltdc.c ****   /*!< Initialize the CLUT adress and RGB values */
 690:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_CLUT_InitStruct->LTDC_CLUTAdress = 0x00;
 972              		.loc 1 690 0
 973 0000 0023     		movs	r3, #0
 974 0002 0360     		str	r3, [r0]
 691:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_CLUT_InitStruct->LTDC_BlueValue = 0x00;
 975              		.loc 1 691 0
 976 0004 4360     		str	r3, [r0, #4]
 692:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_CLUT_InitStruct->LTDC_GreenValue = 0x00;
 977              		.loc 1 692 0
 978 0006 8360     		str	r3, [r0, #8]
 693:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_CLUT_InitStruct->LTDC_RedValue = 0x00;
 979              		.loc 1 693 0
 980 0008 C360     		str	r3, [r0, #12]
 981 000a 7047     		bx	lr
 982              		.cfi_endproc
 983              	.LFE131:
 985              		.section	.text.LTDC_LayerPosition,"ax",%progbits
ARM GAS  /tmp/ccCk2cG4.s 			page 30


 986              		.align	1
 987              		.global	LTDC_LayerPosition
 988              		.syntax unified
 989              		.thumb
 990              		.thumb_func
 991              		.fpu softvfp
 993              	LTDC_LayerPosition:
 994              	.LFB132:
 694:FWLIB/src/stm32f4xx_ltdc.c **** }
 695:FWLIB/src/stm32f4xx_ltdc.c **** 
 696:FWLIB/src/stm32f4xx_ltdc.c **** 
 697:FWLIB/src/stm32f4xx_ltdc.c **** /**
 698:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  reconfigure the layer position.
 699:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  OffsetX: horizontal offset from start active width .
 700:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  OffsetY: vertical offset from start active height.   
 701:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_layerx: Select the layer to be configured, this parameter can be 
 702:FWLIB/src/stm32f4xx_ltdc.c ****   *         one of the following values: LTDC_Layer1, LTDC_Layer2   
 703:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval Reload of the shadow registers values must be applied after layer 
 704:FWLIB/src/stm32f4xx_ltdc.c ****   *         position reconfiguration.
 705:FWLIB/src/stm32f4xx_ltdc.c ****   */
 706:FWLIB/src/stm32f4xx_ltdc.c **** 
 707:FWLIB/src/stm32f4xx_ltdc.c **** void LTDC_LayerPosition(LTDC_Layer_TypeDef* LTDC_Layerx, uint16_t OffsetX, uint16_t OffsetY)
 708:FWLIB/src/stm32f4xx_ltdc.c **** {
 995              		.loc 1 708 0
 996              		.cfi_startproc
 997              		@ args = 0, pretend = 0, frame = 0
 998              		@ frame_needed = 0, uses_anonymous_args = 0
 999              		@ link register save eliminated.
 1000              	.LVL55:
 1001 0000 10B4     		push	{r4}
 1002              	.LCFI11:
 1003              		.cfi_def_cfa_offset 4
 1004              		.cfi_offset 4, -4
 709:FWLIB/src/stm32f4xx_ltdc.c ****   
 710:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t tempreg, temp;
 711:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t horizontal_start;
 712:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t horizontal_stop;
 713:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t vertical_start;
 714:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t vertical_stop;
 715:FWLIB/src/stm32f4xx_ltdc.c ****   
 716:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 1005              		.loc 1 716 0
 1006 0002 4368     		ldr	r3, [r0, #4]
 1007 0004 03F47043 		and	r3, r3, #61440
 1008 0008 4360     		str	r3, [r0, #4]
 717:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 1009              		.loc 1 717 0
 1010 000a 8368     		ldr	r3, [r0, #8]
 1011 000c 03F47043 		and	r3, r3, #61440
 1012 0010 8360     		str	r3, [r0, #8]
 718:FWLIB/src/stm32f4xx_ltdc.c ****   
 719:FWLIB/src/stm32f4xx_ltdc.c ****   /* Reconfigures the horizontal and vertical start position */
 720:FWLIB/src/stm32f4xx_ltdc.c ****   tempreg = LTDC->BPCR;
 1013              		.loc 1 720 0
 1014 0012 1A4B     		ldr	r3, .L77
 1015 0014 DC68     		ldr	r4, [r3, #12]
 1016              	.LVL56:
ARM GAS  /tmp/ccCk2cG4.s 			page 31


 721:FWLIB/src/stm32f4xx_ltdc.c ****   horizontal_start = (tempreg >> 16) + 1 + OffsetX;
 1017              		.loc 1 721 0
 1018 0016 01EB1441 		add	r1, r1, r4, lsr #16
 1019              	.LVL57:
 1020 001a 0131     		adds	r1, r1, #1
 1021              	.LVL58:
 722:FWLIB/src/stm32f4xx_ltdc.c ****   vertical_start = (tempreg & 0xFFFF) + 1 + OffsetY;
 1022              		.loc 1 722 0
 1023 001c 12FA84F2 		uxtah	r2, r2, r4
 1024              	.LVL59:
 1025 0020 0132     		adds	r2, r2, #1
 1026              	.LVL60:
 723:FWLIB/src/stm32f4xx_ltdc.c ****   
 724:FWLIB/src/stm32f4xx_ltdc.c ****   /* Reconfigures the horizontal and vertical stop position */
 725:FWLIB/src/stm32f4xx_ltdc.c ****   /* Get the number of byte per pixel */
 726:FWLIB/src/stm32f4xx_ltdc.c ****   
 727:FWLIB/src/stm32f4xx_ltdc.c ****   tempreg = LTDC_Layerx->PFCR;
 1027              		.loc 1 727 0
 1028 0022 0469     		ldr	r4, [r0, #16]
 1029              	.LVL61:
 728:FWLIB/src/stm32f4xx_ltdc.c ****   
 729:FWLIB/src/stm32f4xx_ltdc.c ****   if (tempreg == LTDC_Pixelformat_ARGB8888)
 1030              		.loc 1 729 0
 1031 0024 6CB1     		cbz	r4, .L70
 730:FWLIB/src/stm32f4xx_ltdc.c ****   {
 731:FWLIB/src/stm32f4xx_ltdc.c ****     temp = 4;
 732:FWLIB/src/stm32f4xx_ltdc.c ****   }
 733:FWLIB/src/stm32f4xx_ltdc.c ****   else if (tempreg == LTDC_Pixelformat_RGB888)
 1032              		.loc 1 733 0
 1033 0026 012C     		cmp	r4, #1
 1034 0028 21D0     		beq	.L71
 734:FWLIB/src/stm32f4xx_ltdc.c ****   {
 735:FWLIB/src/stm32f4xx_ltdc.c ****     temp = 3;
 736:FWLIB/src/stm32f4xx_ltdc.c ****   }
 737:FWLIB/src/stm32f4xx_ltdc.c ****   else if ((tempreg == LTDC_Pixelformat_ARGB4444) || 
 1035              		.loc 1 737 0
 1036 002a 042C     		cmp	r4, #4
 1037 002c 21D0     		beq	.L72
 1038              		.loc 1 737 0 is_stmt 0 discriminator 1
 1039 002e 022C     		cmp	r4, #2
 1040 0030 08D0     		beq	.L69
 738:FWLIB/src/stm32f4xx_ltdc.c ****           (tempreg == LTDC_Pixelformat_RGB565)    ||  
 1041              		.loc 1 738 0 is_stmt 1
 1042 0032 032C     		cmp	r4, #3
 1043 0034 1FD0     		beq	.L73
 739:FWLIB/src/stm32f4xx_ltdc.c ****           (tempreg == LTDC_Pixelformat_ARGB1555)  ||
 1044              		.loc 1 739 0
 1045 0036 072C     		cmp	r4, #7
 1046 0038 01D0     		beq	.L76
 740:FWLIB/src/stm32f4xx_ltdc.c ****           (tempreg == LTDC_Pixelformat_AL88))
 741:FWLIB/src/stm32f4xx_ltdc.c ****   {
 742:FWLIB/src/stm32f4xx_ltdc.c ****     temp = 2;  
 743:FWLIB/src/stm32f4xx_ltdc.c ****   }
 744:FWLIB/src/stm32f4xx_ltdc.c ****   else
 745:FWLIB/src/stm32f4xx_ltdc.c ****   {
 746:FWLIB/src/stm32f4xx_ltdc.c ****     temp = 1;
 1047              		.loc 1 746 0
ARM GAS  /tmp/ccCk2cG4.s 			page 32


 1048 003a 0124     		movs	r4, #1
 1049              	.LVL62:
 1050 003c 02E0     		b	.L69
 1051              	.LVL63:
 1052              	.L76:
 742:FWLIB/src/stm32f4xx_ltdc.c ****   }
 1053              		.loc 1 742 0
 1054 003e 0224     		movs	r4, #2
 1055              	.LVL64:
 1056 0040 00E0     		b	.L69
 1057              	.LVL65:
 1058              	.L70:
 731:FWLIB/src/stm32f4xx_ltdc.c ****   }
 1059              		.loc 1 731 0
 1060 0042 0424     		movs	r4, #4
 1061              	.LVL66:
 1062              	.L69:
 747:FWLIB/src/stm32f4xx_ltdc.c ****   }  
 748:FWLIB/src/stm32f4xx_ltdc.c ****     
 749:FWLIB/src/stm32f4xx_ltdc.c ****   tempreg = LTDC_Layerx->CFBLR;
 1063              		.loc 1 749 0
 1064 0044 C36A     		ldr	r3, [r0, #44]
 1065              	.LVL67:
 750:FWLIB/src/stm32f4xx_ltdc.c ****   horizontal_stop = (((tempreg & 0x1FFF) - 3)/temp) + horizontal_start - 1;
 1066              		.loc 1 750 0
 1067 0046 C3F30C03 		ubfx	r3, r3, #0, #13
 1068              	.LVL68:
 1069 004a 033B     		subs	r3, r3, #3
 1070 004c B3FBF4F3 		udiv	r3, r3, r4
 1071 0050 0B44     		add	r3, r3, r1
 1072 0052 013B     		subs	r3, r3, #1
 1073              	.LVL69:
 751:FWLIB/src/stm32f4xx_ltdc.c ****   
 752:FWLIB/src/stm32f4xx_ltdc.c ****   tempreg = LTDC_Layerx->CFBLNR;
 1074              		.loc 1 752 0
 1075 0054 046B     		ldr	r4, [r0, #48]
 1076              	.LVL70:
 753:FWLIB/src/stm32f4xx_ltdc.c ****   vertical_stop = (tempreg & 0x7FF) + vertical_start - 1;  
 1077              		.loc 1 753 0
 1078 0056 C4F30A04 		ubfx	r4, r4, #0, #11
 1079              	.LVL71:
 1080 005a 1444     		add	r4, r4, r2
 1081 005c 013C     		subs	r4, r4, #1
 1082              	.LVL72:
 754:FWLIB/src/stm32f4xx_ltdc.c ****   
 755:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->WHPCR = horizontal_start | (horizontal_stop << 16);
 1083              		.loc 1 755 0
 1084 005e 41EA0341 		orr	r1, r1, r3, lsl #16
 1085              	.LVL73:
 1086 0062 4160     		str	r1, [r0, #4]
 756:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->WVPCR = vertical_start | (vertical_stop << 16);  
 1087              		.loc 1 756 0
 1088 0064 42EA0442 		orr	r2, r2, r4, lsl #16
 1089              	.LVL74:
 1090 0068 8260     		str	r2, [r0, #8]
 757:FWLIB/src/stm32f4xx_ltdc.c **** }
 1091              		.loc 1 757 0
ARM GAS  /tmp/ccCk2cG4.s 			page 33


 1092 006a 10BC     		pop	{r4}
 1093              	.LCFI12:
 1094              		.cfi_remember_state
 1095              		.cfi_restore 4
 1096              		.cfi_def_cfa_offset 0
 1097              	.LVL75:
 1098 006c 7047     		bx	lr
 1099              	.LVL76:
 1100              	.L71:
 1101              	.LCFI13:
 1102              		.cfi_restore_state
 735:FWLIB/src/stm32f4xx_ltdc.c ****   }
 1103              		.loc 1 735 0
 1104 006e 0324     		movs	r4, #3
 1105              	.LVL77:
 1106 0070 E8E7     		b	.L69
 1107              	.LVL78:
 1108              	.L72:
 742:FWLIB/src/stm32f4xx_ltdc.c ****   }
 1109              		.loc 1 742 0
 1110 0072 0224     		movs	r4, #2
 1111              	.LVL79:
 1112 0074 E6E7     		b	.L69
 1113              	.LVL80:
 1114              	.L73:
 1115 0076 0224     		movs	r4, #2
 1116              	.LVL81:
 1117 0078 E4E7     		b	.L69
 1118              	.L78:
 1119 007a 00BF     		.align	2
 1120              	.L77:
 1121 007c 00680140 		.word	1073833984
 1122              		.cfi_endproc
 1123              	.LFE132:
 1125              		.section	.text.LTDC_LayerAlpha,"ax",%progbits
 1126              		.align	1
 1127              		.global	LTDC_LayerAlpha
 1128              		.syntax unified
 1129              		.thumb
 1130              		.thumb_func
 1131              		.fpu softvfp
 1133              	LTDC_LayerAlpha:
 1134              	.LFB133:
 758:FWLIB/src/stm32f4xx_ltdc.c ****   
 759:FWLIB/src/stm32f4xx_ltdc.c **** /**
 760:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  reconfigure constant alpha.
 761:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  ConstantAlpha: constant alpha value.
 762:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_layerx: Select the layer to be configured, this parameter can be 
 763:FWLIB/src/stm32f4xx_ltdc.c ****   *         one of the following values: LTDC_Layer1, LTDC_Layer2    
 764:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval Reload of the shadow registers values must be applied after constant 
 765:FWLIB/src/stm32f4xx_ltdc.c ****   *         alpha reconfiguration.         
 766:FWLIB/src/stm32f4xx_ltdc.c ****   */
 767:FWLIB/src/stm32f4xx_ltdc.c **** 
 768:FWLIB/src/stm32f4xx_ltdc.c **** void LTDC_LayerAlpha(LTDC_Layer_TypeDef* LTDC_Layerx, uint8_t ConstantAlpha)
 769:FWLIB/src/stm32f4xx_ltdc.c **** {  
 1135              		.loc 1 769 0
 1136              		.cfi_startproc
ARM GAS  /tmp/ccCk2cG4.s 			page 34


 1137              		@ args = 0, pretend = 0, frame = 0
 1138              		@ frame_needed = 0, uses_anonymous_args = 0
 1139              		@ link register save eliminated.
 1140              	.LVL82:
 770:FWLIB/src/stm32f4xx_ltdc.c ****   /* reconfigure the constant alpha value */      
 771:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->CACR = ConstantAlpha;
 1141              		.loc 1 771 0
 1142 0000 4161     		str	r1, [r0, #20]
 1143 0002 7047     		bx	lr
 1144              		.cfi_endproc
 1145              	.LFE133:
 1147              		.section	.text.LTDC_LayerAddress,"ax",%progbits
 1148              		.align	1
 1149              		.global	LTDC_LayerAddress
 1150              		.syntax unified
 1151              		.thumb
 1152              		.thumb_func
 1153              		.fpu softvfp
 1155              	LTDC_LayerAddress:
 1156              	.LFB134:
 772:FWLIB/src/stm32f4xx_ltdc.c **** }
 773:FWLIB/src/stm32f4xx_ltdc.c **** 
 774:FWLIB/src/stm32f4xx_ltdc.c **** /**
 775:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  reconfigure layer address.
 776:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  Address: The color frame buffer start address.
 777:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_layerx: Select the layer to be configured, this parameter can be 
 778:FWLIB/src/stm32f4xx_ltdc.c ****   *         one of the following values: LTDC_Layer1, LTDC_Layer2     
 779:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval Reload of the shadow registers values must be applied after layer 
 780:FWLIB/src/stm32f4xx_ltdc.c ****   *         address reconfiguration.
 781:FWLIB/src/stm32f4xx_ltdc.c ****   */
 782:FWLIB/src/stm32f4xx_ltdc.c **** 
 783:FWLIB/src/stm32f4xx_ltdc.c **** void LTDC_LayerAddress(LTDC_Layer_TypeDef* LTDC_Layerx, uint32_t Address)
 784:FWLIB/src/stm32f4xx_ltdc.c **** {
 1157              		.loc 1 784 0
 1158              		.cfi_startproc
 1159              		@ args = 0, pretend = 0, frame = 0
 1160              		@ frame_needed = 0, uses_anonymous_args = 0
 1161              		@ link register save eliminated.
 1162              	.LVL83:
 785:FWLIB/src/stm32f4xx_ltdc.c ****   /* Reconfigures the color frame buffer start address */
 786:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->CFBAR = Address;
 1163              		.loc 1 786 0
 1164 0000 8162     		str	r1, [r0, #40]
 1165 0002 7047     		bx	lr
 1166              		.cfi_endproc
 1167              	.LFE134:
 1169              		.section	.text.LTDC_LayerSize,"ax",%progbits
 1170              		.align	1
 1171              		.global	LTDC_LayerSize
 1172              		.syntax unified
 1173              		.thumb
 1174              		.thumb_func
 1175              		.fpu softvfp
 1177              	LTDC_LayerSize:
 1178              	.LFB135:
 787:FWLIB/src/stm32f4xx_ltdc.c **** }
 788:FWLIB/src/stm32f4xx_ltdc.c ****   
ARM GAS  /tmp/ccCk2cG4.s 			page 35


 789:FWLIB/src/stm32f4xx_ltdc.c **** /**
 790:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  reconfigure layer size.
 791:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  Width: layer window width.
 792:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  Height: layer window height.   
 793:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_layerx: Select the layer to be configured, this parameter can be 
 794:FWLIB/src/stm32f4xx_ltdc.c ****   *         one of the following values: LTDC_Layer1, LTDC_Layer2   
 795:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval Reload of the shadow registers values must be applied after layer 
 796:FWLIB/src/stm32f4xx_ltdc.c ****   *         size reconfiguration.
 797:FWLIB/src/stm32f4xx_ltdc.c ****   */
 798:FWLIB/src/stm32f4xx_ltdc.c **** 
 799:FWLIB/src/stm32f4xx_ltdc.c **** void LTDC_LayerSize(LTDC_Layer_TypeDef* LTDC_Layerx, uint32_t Width, uint32_t Height)
 800:FWLIB/src/stm32f4xx_ltdc.c **** {
 1179              		.loc 1 800 0
 1180              		.cfi_startproc
 1181              		@ args = 0, pretend = 0, frame = 0
 1182              		@ frame_needed = 0, uses_anonymous_args = 0
 1183              		@ link register save eliminated.
 1184              	.LVL84:
 1185 0000 F0B4     		push	{r4, r5, r6, r7}
 1186              	.LCFI14:
 1187              		.cfi_def_cfa_offset 16
 1188              		.cfi_offset 4, -16
 1189              		.cfi_offset 5, -12
 1190              		.cfi_offset 6, -8
 1191              		.cfi_offset 7, -4
 801:FWLIB/src/stm32f4xx_ltdc.c **** 
 802:FWLIB/src/stm32f4xx_ltdc.c ****   uint8_t temp;
 803:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t tempreg;
 804:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t horizontal_start;
 805:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t horizontal_stop;
 806:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t vertical_start;
 807:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t vertical_stop;  
 808:FWLIB/src/stm32f4xx_ltdc.c ****   
 809:FWLIB/src/stm32f4xx_ltdc.c ****   tempreg = LTDC_Layerx->PFCR;
 1192              		.loc 1 809 0
 1193 0002 0369     		ldr	r3, [r0, #16]
 1194              	.LVL85:
 810:FWLIB/src/stm32f4xx_ltdc.c ****   
 811:FWLIB/src/stm32f4xx_ltdc.c ****   if (tempreg == LTDC_Pixelformat_ARGB8888)
 1195              		.loc 1 811 0
 1196 0004 6BB1     		cbz	r3, .L83
 812:FWLIB/src/stm32f4xx_ltdc.c ****   {
 813:FWLIB/src/stm32f4xx_ltdc.c ****     temp = 4;
 814:FWLIB/src/stm32f4xx_ltdc.c ****   }
 815:FWLIB/src/stm32f4xx_ltdc.c ****   else if (tempreg == LTDC_Pixelformat_RGB888)
 1197              		.loc 1 815 0
 1198 0006 012B     		cmp	r3, #1
 1199 0008 25D0     		beq	.L84
 816:FWLIB/src/stm32f4xx_ltdc.c ****   {
 817:FWLIB/src/stm32f4xx_ltdc.c ****     temp = 3;
 818:FWLIB/src/stm32f4xx_ltdc.c ****   }
 819:FWLIB/src/stm32f4xx_ltdc.c ****   else if ((tempreg == LTDC_Pixelformat_ARGB4444) || \
 1200              		.loc 1 819 0
 1201 000a 042B     		cmp	r3, #4
 1202 000c 25D0     		beq	.L85
 1203              		.loc 1 819 0 is_stmt 0 discriminator 1
 1204 000e 022B     		cmp	r3, #2
ARM GAS  /tmp/ccCk2cG4.s 			page 36


 1205 0010 25D0     		beq	.L86
 820:FWLIB/src/stm32f4xx_ltdc.c ****           (tempreg == LTDC_Pixelformat_RGB565)    || \
 1206              		.loc 1 820 0 is_stmt 1
 1207 0012 032B     		cmp	r3, #3
 1208 0014 25D0     		beq	.L87
 821:FWLIB/src/stm32f4xx_ltdc.c ****           (tempreg == LTDC_Pixelformat_ARGB1555)  || \
 1209              		.loc 1 821 0
 1210 0016 072B     		cmp	r3, #7
 1211 0018 01D0     		beq	.L90
 822:FWLIB/src/stm32f4xx_ltdc.c ****           (tempreg == LTDC_Pixelformat_AL88))
 823:FWLIB/src/stm32f4xx_ltdc.c ****   {
 824:FWLIB/src/stm32f4xx_ltdc.c ****     temp = 2;  
 825:FWLIB/src/stm32f4xx_ltdc.c ****   }
 826:FWLIB/src/stm32f4xx_ltdc.c ****   else
 827:FWLIB/src/stm32f4xx_ltdc.c ****   {
 828:FWLIB/src/stm32f4xx_ltdc.c ****     temp = 1;
 1212              		.loc 1 828 0
 1213 001a 0127     		movs	r7, #1
 1214 001c 02E0     		b	.L82
 1215              	.L90:
 824:FWLIB/src/stm32f4xx_ltdc.c ****   }
 1216              		.loc 1 824 0
 1217 001e 0227     		movs	r7, #2
 1218 0020 00E0     		b	.L82
 1219              	.L83:
 813:FWLIB/src/stm32f4xx_ltdc.c ****   }
 1220              		.loc 1 813 0
 1221 0022 0427     		movs	r7, #4
 1222              	.L82:
 1223              	.LVL86:
 829:FWLIB/src/stm32f4xx_ltdc.c ****   }
 830:FWLIB/src/stm32f4xx_ltdc.c **** 
 831:FWLIB/src/stm32f4xx_ltdc.c ****   /* update horizontal and vertical stop */
 832:FWLIB/src/stm32f4xx_ltdc.c ****   tempreg = LTDC_Layerx->WHPCR;
 1224              		.loc 1 832 0
 1225 0024 4468     		ldr	r4, [r0, #4]
 1226              	.LVL87:
 833:FWLIB/src/stm32f4xx_ltdc.c ****   horizontal_start = (tempreg & 0x1FFF);
 1227              		.loc 1 833 0
 1228 0026 C4F30C04 		ubfx	r4, r4, #0, #13
 1229              	.LVL88:
 834:FWLIB/src/stm32f4xx_ltdc.c ****   horizontal_stop = Width + horizontal_start - 1;  
 1230              		.loc 1 834 0
 1231 002a 6618     		adds	r6, r4, r1
 1232 002c 013E     		subs	r6, r6, #1
 1233              	.LVL89:
 835:FWLIB/src/stm32f4xx_ltdc.c **** 
 836:FWLIB/src/stm32f4xx_ltdc.c ****   tempreg = LTDC_Layerx->WVPCR;
 1234              		.loc 1 836 0
 1235 002e 8368     		ldr	r3, [r0, #8]
 1236              	.LVL90:
 837:FWLIB/src/stm32f4xx_ltdc.c ****   vertical_start = (tempreg & 0x1FFF);
 1237              		.loc 1 837 0
 1238 0030 C3F30C03 		ubfx	r3, r3, #0, #13
 1239              	.LVL91:
 838:FWLIB/src/stm32f4xx_ltdc.c ****   vertical_stop = Height + vertical_start - 1;  
 1240              		.loc 1 838 0
ARM GAS  /tmp/ccCk2cG4.s 			page 37


 1241 0034 9D18     		adds	r5, r3, r2
 1242 0036 013D     		subs	r5, r5, #1
 1243              	.LVL92:
 839:FWLIB/src/stm32f4xx_ltdc.c ****   
 840:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->WHPCR = horizontal_start | (horizontal_stop << 16);
 1244              		.loc 1 840 0
 1245 0038 44EA0644 		orr	r4, r4, r6, lsl #16
 1246              	.LVL93:
 1247 003c 4460     		str	r4, [r0, #4]
 841:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->WVPCR = vertical_start | (vertical_stop << 16);  
 1248              		.loc 1 841 0
 1249 003e 43EA0543 		orr	r3, r3, r5, lsl #16
 1250              	.LVL94:
 1251 0042 8360     		str	r3, [r0, #8]
 842:FWLIB/src/stm32f4xx_ltdc.c **** 
 843:FWLIB/src/stm32f4xx_ltdc.c ****   /* Reconfigures the color frame buffer pitch in byte */
 844:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->CFBLR  = ((Width * temp) << 16) | ((Width * temp) + 3);  
 1252              		.loc 1 844 0
 1253 0044 01FB07F1 		mul	r1, r1, r7
 1254              	.LVL95:
 1255 0048 CB1C     		adds	r3, r1, #3
 1256 004a 43EA0141 		orr	r1, r3, r1, lsl #16
 1257 004e C162     		str	r1, [r0, #44]
 845:FWLIB/src/stm32f4xx_ltdc.c **** 
 846:FWLIB/src/stm32f4xx_ltdc.c ****   /* Reconfigures the frame buffer line number */
 847:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->CFBLNR  = Height;  
 1258              		.loc 1 847 0
 1259 0050 0263     		str	r2, [r0, #48]
 848:FWLIB/src/stm32f4xx_ltdc.c ****   
 849:FWLIB/src/stm32f4xx_ltdc.c **** }
 1260              		.loc 1 849 0
 1261 0052 F0BC     		pop	{r4, r5, r6, r7}
 1262              	.LCFI15:
 1263              		.cfi_remember_state
 1264              		.cfi_restore 7
 1265              		.cfi_restore 6
 1266              		.cfi_restore 5
 1267              		.cfi_restore 4
 1268              		.cfi_def_cfa_offset 0
 1269              	.LVL96:
 1270 0054 7047     		bx	lr
 1271              	.LVL97:
 1272              	.L84:
 1273              	.LCFI16:
 1274              		.cfi_restore_state
 817:FWLIB/src/stm32f4xx_ltdc.c ****   }
 1275              		.loc 1 817 0
 1276 0056 0327     		movs	r7, #3
 1277 0058 E4E7     		b	.L82
 1278              	.L85:
 824:FWLIB/src/stm32f4xx_ltdc.c ****   }
 1279              		.loc 1 824 0
 1280 005a 0227     		movs	r7, #2
 1281 005c E2E7     		b	.L82
 1282              	.L86:
 1283 005e 0227     		movs	r7, #2
 1284 0060 E0E7     		b	.L82
ARM GAS  /tmp/ccCk2cG4.s 			page 38


 1285              	.L87:
 1286 0062 0227     		movs	r7, #2
 1287 0064 DEE7     		b	.L82
 1288              		.cfi_endproc
 1289              	.LFE135:
 1291              		.section	.text.LTDC_LayerPixelFormat,"ax",%progbits
 1292              		.align	1
 1293              		.global	LTDC_LayerPixelFormat
 1294              		.syntax unified
 1295              		.thumb
 1296              		.thumb_func
 1297              		.fpu softvfp
 1299              	LTDC_LayerPixelFormat:
 1300              	.LFB136:
 850:FWLIB/src/stm32f4xx_ltdc.c **** 
 851:FWLIB/src/stm32f4xx_ltdc.c **** /**
 852:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  reconfigure layer pixel format.
 853:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  PixelFormat: reconfigure the pixel format, this parameter can be 
 854:FWLIB/src/stm32f4xx_ltdc.c ****   *         one of the following values:@ref LTDC_Pixelformat.   
 855:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_layerx: Select the layer to be configured, this parameter can be 
 856:FWLIB/src/stm32f4xx_ltdc.c ****   *         one of the following values: LTDC_Layer1, LTDC_Layer2   
 857:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval Reload of the shadow registers values must be applied after layer 
 858:FWLIB/src/stm32f4xx_ltdc.c ****   *         pixel format reconfiguration.
 859:FWLIB/src/stm32f4xx_ltdc.c ****   */
 860:FWLIB/src/stm32f4xx_ltdc.c **** 
 861:FWLIB/src/stm32f4xx_ltdc.c **** void LTDC_LayerPixelFormat(LTDC_Layer_TypeDef* LTDC_Layerx, uint32_t PixelFormat)
 862:FWLIB/src/stm32f4xx_ltdc.c **** {
 1301              		.loc 1 862 0
 1302              		.cfi_startproc
 1303              		@ args = 0, pretend = 0, frame = 0
 1304              		@ frame_needed = 0, uses_anonymous_args = 0
 1305              		@ link register save eliminated.
 1306              	.LVL98:
 863:FWLIB/src/stm32f4xx_ltdc.c **** 
 864:FWLIB/src/stm32f4xx_ltdc.c ****   uint8_t temp;
 865:FWLIB/src/stm32f4xx_ltdc.c ****   uint32_t tempreg;
 866:FWLIB/src/stm32f4xx_ltdc.c ****   
 867:FWLIB/src/stm32f4xx_ltdc.c ****   tempreg = LTDC_Layerx->PFCR;
 1307              		.loc 1 867 0
 1308 0000 0369     		ldr	r3, [r0, #16]
 1309              	.LVL99:
 868:FWLIB/src/stm32f4xx_ltdc.c ****   
 869:FWLIB/src/stm32f4xx_ltdc.c ****   if (tempreg == LTDC_Pixelformat_ARGB8888)
 1310              		.loc 1 869 0
 1311 0002 6BB1     		cbz	r3, .L94
 870:FWLIB/src/stm32f4xx_ltdc.c ****   {
 871:FWLIB/src/stm32f4xx_ltdc.c ****     temp = 4;
 872:FWLIB/src/stm32f4xx_ltdc.c ****   }
 873:FWLIB/src/stm32f4xx_ltdc.c ****   else if (tempreg == LTDC_Pixelformat_RGB888)
 1312              		.loc 1 873 0
 1313 0004 012B     		cmp	r3, #1
 1314 0006 1DD0     		beq	.L95
 874:FWLIB/src/stm32f4xx_ltdc.c ****   {
 875:FWLIB/src/stm32f4xx_ltdc.c ****     temp = 3;
 876:FWLIB/src/stm32f4xx_ltdc.c ****   }
 877:FWLIB/src/stm32f4xx_ltdc.c ****   else if ((tempreg == LTDC_Pixelformat_ARGB4444) || \
 1315              		.loc 1 877 0
ARM GAS  /tmp/ccCk2cG4.s 			page 39


 1316 0008 042B     		cmp	r3, #4
 1317 000a 1DD0     		beq	.L96
 1318              		.loc 1 877 0 is_stmt 0 discriminator 1
 1319 000c 022B     		cmp	r3, #2
 1320 000e 1DD0     		beq	.L97
 878:FWLIB/src/stm32f4xx_ltdc.c ****           (tempreg == LTDC_Pixelformat_RGB565)    || \
 1321              		.loc 1 878 0 is_stmt 1
 1322 0010 032B     		cmp	r3, #3
 1323 0012 1DD0     		beq	.L98
 879:FWLIB/src/stm32f4xx_ltdc.c ****           (tempreg == LTDC_Pixelformat_ARGB1555)  || \
 1324              		.loc 1 879 0
 1325 0014 072B     		cmp	r3, #7
 1326 0016 01D0     		beq	.L106
 880:FWLIB/src/stm32f4xx_ltdc.c ****           (tempreg == LTDC_Pixelformat_AL88))  
 881:FWLIB/src/stm32f4xx_ltdc.c ****   {
 882:FWLIB/src/stm32f4xx_ltdc.c ****     temp = 2;  
 883:FWLIB/src/stm32f4xx_ltdc.c ****   }
 884:FWLIB/src/stm32f4xx_ltdc.c ****   else
 885:FWLIB/src/stm32f4xx_ltdc.c ****   {
 886:FWLIB/src/stm32f4xx_ltdc.c ****     temp = 1;
 1327              		.loc 1 886 0
 1328 0018 0122     		movs	r2, #1
 1329 001a 02E0     		b	.L92
 1330              	.L106:
 882:FWLIB/src/stm32f4xx_ltdc.c ****   }
 1331              		.loc 1 882 0
 1332 001c 0222     		movs	r2, #2
 1333 001e 00E0     		b	.L92
 1334              	.L94:
 871:FWLIB/src/stm32f4xx_ltdc.c ****   }
 1335              		.loc 1 871 0
 1336 0020 0422     		movs	r2, #4
 1337              	.L92:
 1338              	.LVL100:
 887:FWLIB/src/stm32f4xx_ltdc.c ****   }
 888:FWLIB/src/stm32f4xx_ltdc.c ****   
 889:FWLIB/src/stm32f4xx_ltdc.c ****   tempreg = (LTDC_Layerx->CFBLR >> 16);
 1339              		.loc 1 889 0
 1340 0022 C36A     		ldr	r3, [r0, #44]
 1341              	.LVL101:
 1342 0024 1B0C     		lsrs	r3, r3, #16
 1343              	.LVL102:
 890:FWLIB/src/stm32f4xx_ltdc.c ****   tempreg = (tempreg / temp); 
 1344              		.loc 1 890 0
 1345 0026 B3FBF2F3 		udiv	r3, r3, r2
 1346              	.LVL103:
 891:FWLIB/src/stm32f4xx_ltdc.c ****   
 892:FWLIB/src/stm32f4xx_ltdc.c ****   if (PixelFormat == LTDC_Pixelformat_ARGB8888)
 1347              		.loc 1 892 0
 1348 002a A9B1     		cbz	r1, .L100
 893:FWLIB/src/stm32f4xx_ltdc.c ****   {
 894:FWLIB/src/stm32f4xx_ltdc.c ****     temp = 4;
 895:FWLIB/src/stm32f4xx_ltdc.c ****   }
 896:FWLIB/src/stm32f4xx_ltdc.c ****   else if (PixelFormat == LTDC_Pixelformat_RGB888)
 1349              		.loc 1 896 0
 1350 002c 0129     		cmp	r1, #1
 1351 002e 1CD0     		beq	.L101
ARM GAS  /tmp/ccCk2cG4.s 			page 40


 897:FWLIB/src/stm32f4xx_ltdc.c ****   {
 898:FWLIB/src/stm32f4xx_ltdc.c ****     temp = 3;
 899:FWLIB/src/stm32f4xx_ltdc.c ****   }
 900:FWLIB/src/stm32f4xx_ltdc.c ****   else if ((PixelFormat == LTDC_Pixelformat_ARGB4444) || \
 1352              		.loc 1 900 0
 1353 0030 0429     		cmp	r1, #4
 1354 0032 1CD0     		beq	.L102
 1355              		.loc 1 900 0 is_stmt 0 discriminator 1
 1356 0034 0229     		cmp	r1, #2
 1357 0036 1CD0     		beq	.L103
 901:FWLIB/src/stm32f4xx_ltdc.c ****           (PixelFormat == LTDC_Pixelformat_RGB565)    || \
 1358              		.loc 1 901 0 is_stmt 1
 1359 0038 0329     		cmp	r1, #3
 1360 003a 1CD0     		beq	.L104
 902:FWLIB/src/stm32f4xx_ltdc.c ****           (PixelFormat == LTDC_Pixelformat_ARGB1555)  || \
 1361              		.loc 1 902 0
 1362 003c 0729     		cmp	r1, #7
 1363 003e 09D0     		beq	.L107
 903:FWLIB/src/stm32f4xx_ltdc.c ****           (PixelFormat == LTDC_Pixelformat_AL88))
 904:FWLIB/src/stm32f4xx_ltdc.c ****   {
 905:FWLIB/src/stm32f4xx_ltdc.c ****     temp = 2;  
 906:FWLIB/src/stm32f4xx_ltdc.c ****   }
 907:FWLIB/src/stm32f4xx_ltdc.c ****   else
 908:FWLIB/src/stm32f4xx_ltdc.c ****   {
 909:FWLIB/src/stm32f4xx_ltdc.c ****     temp = 1;
 1364              		.loc 1 909 0
 1365 0040 0122     		movs	r2, #1
 1366              	.LVL104:
 1367 0042 0AE0     		b	.L93
 1368              	.L95:
 875:FWLIB/src/stm32f4xx_ltdc.c ****   }
 1369              		.loc 1 875 0
 1370 0044 0322     		movs	r2, #3
 1371 0046 ECE7     		b	.L92
 1372              	.L96:
 882:FWLIB/src/stm32f4xx_ltdc.c ****   }
 1373              		.loc 1 882 0
 1374 0048 0222     		movs	r2, #2
 1375 004a EAE7     		b	.L92
 1376              	.L97:
 1377 004c 0222     		movs	r2, #2
 1378 004e E8E7     		b	.L92
 1379              	.L98:
 1380 0050 0222     		movs	r2, #2
 1381 0052 E6E7     		b	.L92
 1382              	.LVL105:
 1383              	.L107:
 905:FWLIB/src/stm32f4xx_ltdc.c ****   }
 1384              		.loc 1 905 0
 1385 0054 0222     		movs	r2, #2
 1386              	.LVL106:
 1387 0056 00E0     		b	.L93
 1388              	.LVL107:
 1389              	.L100:
 894:FWLIB/src/stm32f4xx_ltdc.c ****   }
 1390              		.loc 1 894 0
 1391 0058 0422     		movs	r2, #4
ARM GAS  /tmp/ccCk2cG4.s 			page 41


 1392              	.LVL108:
 1393              	.L93:
 910:FWLIB/src/stm32f4xx_ltdc.c ****   }
 911:FWLIB/src/stm32f4xx_ltdc.c ****   
 912:FWLIB/src/stm32f4xx_ltdc.c ****   /* Reconfigures the color frame buffer pitch in byte */
 913:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->CFBLR  = ((tempreg * temp) << 16) | ((tempreg * temp) + 3);  
 1394              		.loc 1 913 0
 1395 005a 03FB02F3 		mul	r3, r3, r2
 1396              	.LVL109:
 1397 005e DA1C     		adds	r2, r3, #3
 1398              	.LVL110:
 1399 0060 42EA0343 		orr	r3, r2, r3, lsl #16
 1400 0064 C362     		str	r3, [r0, #44]
 914:FWLIB/src/stm32f4xx_ltdc.c **** 
 915:FWLIB/src/stm32f4xx_ltdc.c ****   /* Reconfigures the color frame buffer start address */
 916:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC_Layerx->PFCR = PixelFormat;
 1401              		.loc 1 916 0
 1402 0066 0161     		str	r1, [r0, #16]
 1403 0068 7047     		bx	lr
 1404              	.LVL111:
 1405              	.L101:
 898:FWLIB/src/stm32f4xx_ltdc.c ****   }
 1406              		.loc 1 898 0
 1407 006a 0322     		movs	r2, #3
 1408              	.LVL112:
 1409 006c F5E7     		b	.L93
 1410              	.LVL113:
 1411              	.L102:
 905:FWLIB/src/stm32f4xx_ltdc.c ****   }
 1412              		.loc 1 905 0
 1413 006e 0222     		movs	r2, #2
 1414              	.LVL114:
 1415 0070 F3E7     		b	.L93
 1416              	.LVL115:
 1417              	.L103:
 1418 0072 0222     		movs	r2, #2
 1419              	.LVL116:
 1420 0074 F1E7     		b	.L93
 1421              	.LVL117:
 1422              	.L104:
 1423 0076 0222     		movs	r2, #2
 1424              	.LVL118:
 1425 0078 EFE7     		b	.L93
 1426              		.cfi_endproc
 1427              	.LFE136:
 1429              		.section	.text.LTDC_ITConfig,"ax",%progbits
 1430              		.align	1
 1431              		.global	LTDC_ITConfig
 1432              		.syntax unified
 1433              		.thumb
 1434              		.thumb_func
 1435              		.fpu softvfp
 1437              	LTDC_ITConfig:
 1438              	.LFB137:
 917:FWLIB/src/stm32f4xx_ltdc.c ****     
 918:FWLIB/src/stm32f4xx_ltdc.c **** }
 919:FWLIB/src/stm32f4xx_ltdc.c ****     
ARM GAS  /tmp/ccCk2cG4.s 			page 42


 920:FWLIB/src/stm32f4xx_ltdc.c **** /**
 921:FWLIB/src/stm32f4xx_ltdc.c ****   * @}
 922:FWLIB/src/stm32f4xx_ltdc.c ****   */
 923:FWLIB/src/stm32f4xx_ltdc.c **** 
 924:FWLIB/src/stm32f4xx_ltdc.c **** /** @defgroup LTDC_Group2 Interrupts and flags management functions
 925:FWLIB/src/stm32f4xx_ltdc.c ****  *  @brief   Interrupts and flags management functions
 926:FWLIB/src/stm32f4xx_ltdc.c ****  *
 927:FWLIB/src/stm32f4xx_ltdc.c **** @verbatim
 928:FWLIB/src/stm32f4xx_ltdc.c ****  ===============================================================================
 929:FWLIB/src/stm32f4xx_ltdc.c ****             ##### Interrupts and flags management functions #####
 930:FWLIB/src/stm32f4xx_ltdc.c ****  ===============================================================================
 931:FWLIB/src/stm32f4xx_ltdc.c **** 
 932:FWLIB/src/stm32f4xx_ltdc.c ****     [..] This section provides functions allowing to configure the LTDC Interrupts 
 933:FWLIB/src/stm32f4xx_ltdc.c ****          and to get the status and clear flags and Interrupts pending bits.
 934:FWLIB/src/stm32f4xx_ltdc.c ****   
 935:FWLIB/src/stm32f4xx_ltdc.c ****     [..] The LTDC provides 4 Interrupts sources and 4 Flags
 936:FWLIB/src/stm32f4xx_ltdc.c ****     
 937:FWLIB/src/stm32f4xx_ltdc.c ****     *** Flags ***
 938:FWLIB/src/stm32f4xx_ltdc.c ****     =============
 939:FWLIB/src/stm32f4xx_ltdc.c ****     [..]
 940:FWLIB/src/stm32f4xx_ltdc.c ****       (+) LTDC_FLAG_LI:   Line Interrupt flag.
 941:FWLIB/src/stm32f4xx_ltdc.c ****       (+) LTDC_FLAG_FU:   FIFO Underrun Interrupt flag.
 942:FWLIB/src/stm32f4xx_ltdc.c ****       (+) LTDC_FLAG_TERR: Transfer Error Interrupt flag.
 943:FWLIB/src/stm32f4xx_ltdc.c ****       (+) LTDC_FLAG_RR:   Register Reload interrupt flag.
 944:FWLIB/src/stm32f4xx_ltdc.c ****       
 945:FWLIB/src/stm32f4xx_ltdc.c ****     *** Interrupts ***
 946:FWLIB/src/stm32f4xx_ltdc.c ****     ==================
 947:FWLIB/src/stm32f4xx_ltdc.c ****     [..]
 948:FWLIB/src/stm32f4xx_ltdc.c ****       (+) LTDC_IT_LI: Line Interrupt is generated when a programmed line 
 949:FWLIB/src/stm32f4xx_ltdc.c ****                       is reached. The line interrupt position is programmed in 
 950:FWLIB/src/stm32f4xx_ltdc.c ****                       the LTDC_LIPR register.
 951:FWLIB/src/stm32f4xx_ltdc.c ****       (+) LTDC_IT_FU: FIFO Underrun interrupt is generated when a pixel is requested 
 952:FWLIB/src/stm32f4xx_ltdc.c ****                       from an empty layer FIFO
 953:FWLIB/src/stm32f4xx_ltdc.c ****       (+) LTDC_IT_TERR: Transfer Error interrupt is generated when an AHB bus 
 954:FWLIB/src/stm32f4xx_ltdc.c ****                         error occurs during data transfer.
 955:FWLIB/src/stm32f4xx_ltdc.c ****       (+) LTDC_IT_RR: Register Reload interrupt is generated when the shadow 
 956:FWLIB/src/stm32f4xx_ltdc.c ****                       registers reload was performed during the vertical blanking 
 957:FWLIB/src/stm32f4xx_ltdc.c ****                       period.
 958:FWLIB/src/stm32f4xx_ltdc.c ****                
 959:FWLIB/src/stm32f4xx_ltdc.c **** @endverbatim
 960:FWLIB/src/stm32f4xx_ltdc.c ****   * @{
 961:FWLIB/src/stm32f4xx_ltdc.c ****   */
 962:FWLIB/src/stm32f4xx_ltdc.c **** 
 963:FWLIB/src/stm32f4xx_ltdc.c **** /**
 964:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  Enables or disables the specified LTDC's interrupts.
 965:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_IT: specifies the LTDC interrupts sources to be enabled or disabled.
 966:FWLIB/src/stm32f4xx_ltdc.c ****   *   This parameter can be any combination of the following values:
 967:FWLIB/src/stm32f4xx_ltdc.c ****   *     @arg LTDC_IT_LI: Line Interrupt Enable.
 968:FWLIB/src/stm32f4xx_ltdc.c ****   *     @arg LTDC_IT_FU: FIFO Underrun Interrupt Enable.
 969:FWLIB/src/stm32f4xx_ltdc.c ****   *     @arg LTDC_IT_TERR: Transfer Error Interrupt Enable.
 970:FWLIB/src/stm32f4xx_ltdc.c ****   *     @arg LTDC_IT_RR: Register Reload interrupt enable.  
 971:FWLIB/src/stm32f4xx_ltdc.c ****   * @param NewState: new state of the specified LTDC interrupts.
 972:FWLIB/src/stm32f4xx_ltdc.c ****   *   This parameter can be: ENABLE or DISABLE.
 973:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval None
 974:FWLIB/src/stm32f4xx_ltdc.c ****   */
 975:FWLIB/src/stm32f4xx_ltdc.c **** void LTDC_ITConfig(uint32_t LTDC_IT, FunctionalState NewState)
 976:FWLIB/src/stm32f4xx_ltdc.c **** {
ARM GAS  /tmp/ccCk2cG4.s 			page 43


 1439              		.loc 1 976 0
 1440              		.cfi_startproc
 1441              		@ args = 0, pretend = 0, frame = 0
 1442              		@ frame_needed = 0, uses_anonymous_args = 0
 1443              		@ link register save eliminated.
 1444              	.LVL119:
 977:FWLIB/src/stm32f4xx_ltdc.c ****   /* Check the parameters */
 978:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_IT(LTDC_IT));
 979:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 980:FWLIB/src/stm32f4xx_ltdc.c **** 
 981:FWLIB/src/stm32f4xx_ltdc.c ****   if (NewState != DISABLE)
 1445              		.loc 1 981 0
 1446 0000 29B9     		cbnz	r1, .L111
 982:FWLIB/src/stm32f4xx_ltdc.c ****   {
 983:FWLIB/src/stm32f4xx_ltdc.c ****     LTDC->IER |= LTDC_IT;
 984:FWLIB/src/stm32f4xx_ltdc.c ****   }
 985:FWLIB/src/stm32f4xx_ltdc.c ****   else
 986:FWLIB/src/stm32f4xx_ltdc.c ****   {
 987:FWLIB/src/stm32f4xx_ltdc.c ****     LTDC->IER &= (uint32_t)~LTDC_IT;
 1447              		.loc 1 987 0
 1448 0002 054A     		ldr	r2, .L112
 1449 0004 536B     		ldr	r3, [r2, #52]
 1450 0006 23EA0000 		bic	r0, r3, r0
 1451              	.LVL120:
 1452 000a 5063     		str	r0, [r2, #52]
 1453 000c 7047     		bx	lr
 1454              	.LVL121:
 1455              	.L111:
 983:FWLIB/src/stm32f4xx_ltdc.c ****   }
 1456              		.loc 1 983 0
 1457 000e 024A     		ldr	r2, .L112
 1458 0010 536B     		ldr	r3, [r2, #52]
 1459 0012 1843     		orrs	r0, r0, r3
 1460              	.LVL122:
 1461 0014 5063     		str	r0, [r2, #52]
 1462 0016 7047     		bx	lr
 1463              	.L113:
 1464              		.align	2
 1465              	.L112:
 1466 0018 00680140 		.word	1073833984
 1467              		.cfi_endproc
 1468              	.LFE137:
 1470              		.section	.text.LTDC_GetFlagStatus,"ax",%progbits
 1471              		.align	1
 1472              		.global	LTDC_GetFlagStatus
 1473              		.syntax unified
 1474              		.thumb
 1475              		.thumb_func
 1476              		.fpu softvfp
 1478              	LTDC_GetFlagStatus:
 1479              	.LFB138:
 988:FWLIB/src/stm32f4xx_ltdc.c ****   }
 989:FWLIB/src/stm32f4xx_ltdc.c **** }
 990:FWLIB/src/stm32f4xx_ltdc.c **** 
 991:FWLIB/src/stm32f4xx_ltdc.c **** /**
 992:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  Checks whether the specified LTDC's flag is set or not.
 993:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_FLAG: specifies the flag to check.
ARM GAS  /tmp/ccCk2cG4.s 			page 44


 994:FWLIB/src/stm32f4xx_ltdc.c ****   *   This parameter can be one of the following values:
 995:FWLIB/src/stm32f4xx_ltdc.c ****   *     @arg LTDC_FLAG_LI:    Line Interrupt flag.
 996:FWLIB/src/stm32f4xx_ltdc.c ****   *     @arg LTDC_FLAG_FU:   FIFO Underrun Interrupt flag.
 997:FWLIB/src/stm32f4xx_ltdc.c ****   *     @arg LTDC_FLAG_TERR: Transfer Error Interrupt flag.
 998:FWLIB/src/stm32f4xx_ltdc.c ****   *     @arg LTDC_FLAG_RR:   Register Reload interrupt flag.
 999:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval The new state of LTDC_FLAG (SET or RESET).
1000:FWLIB/src/stm32f4xx_ltdc.c ****   */
1001:FWLIB/src/stm32f4xx_ltdc.c **** FlagStatus LTDC_GetFlagStatus(uint32_t LTDC_FLAG)
1002:FWLIB/src/stm32f4xx_ltdc.c **** {
 1480              		.loc 1 1002 0
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 0
 1483              		@ frame_needed = 0, uses_anonymous_args = 0
 1484              		@ link register save eliminated.
 1485              	.LVL123:
1003:FWLIB/src/stm32f4xx_ltdc.c ****   FlagStatus bitstatus = RESET;
1004:FWLIB/src/stm32f4xx_ltdc.c **** 
1005:FWLIB/src/stm32f4xx_ltdc.c ****   /* Check the parameters */
1006:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_FLAG(LTDC_FLAG));
1007:FWLIB/src/stm32f4xx_ltdc.c **** 
1008:FWLIB/src/stm32f4xx_ltdc.c ****   if ((LTDC->ISR & LTDC_FLAG) != (uint32_t)RESET)
 1486              		.loc 1 1008 0
 1487 0000 034B     		ldr	r3, .L118
 1488 0002 9B6B     		ldr	r3, [r3, #56]
 1489 0004 0342     		tst	r3, r0
 1490 0006 01D1     		bne	.L117
1009:FWLIB/src/stm32f4xx_ltdc.c ****   {
1010:FWLIB/src/stm32f4xx_ltdc.c ****     bitstatus = SET;
1011:FWLIB/src/stm32f4xx_ltdc.c ****   }
1012:FWLIB/src/stm32f4xx_ltdc.c ****   else
1013:FWLIB/src/stm32f4xx_ltdc.c ****   {
1014:FWLIB/src/stm32f4xx_ltdc.c ****     bitstatus = RESET;
 1491              		.loc 1 1014 0
 1492 0008 0020     		movs	r0, #0
 1493              	.LVL124:
1015:FWLIB/src/stm32f4xx_ltdc.c ****   }
1016:FWLIB/src/stm32f4xx_ltdc.c ****   return bitstatus;
1017:FWLIB/src/stm32f4xx_ltdc.c **** }
 1494              		.loc 1 1017 0
 1495 000a 7047     		bx	lr
 1496              	.LVL125:
 1497              	.L117:
1010:FWLIB/src/stm32f4xx_ltdc.c ****   }
 1498              		.loc 1 1010 0
 1499 000c 0120     		movs	r0, #1
 1500              	.LVL126:
 1501 000e 7047     		bx	lr
 1502              	.L119:
 1503              		.align	2
 1504              	.L118:
 1505 0010 00680140 		.word	1073833984
 1506              		.cfi_endproc
 1507              	.LFE138:
 1509              		.section	.text.LTDC_ClearFlag,"ax",%progbits
 1510              		.align	1
 1511              		.global	LTDC_ClearFlag
 1512              		.syntax unified
ARM GAS  /tmp/ccCk2cG4.s 			page 45


 1513              		.thumb
 1514              		.thumb_func
 1515              		.fpu softvfp
 1517              	LTDC_ClearFlag:
 1518              	.LFB139:
1018:FWLIB/src/stm32f4xx_ltdc.c **** 
1019:FWLIB/src/stm32f4xx_ltdc.c **** /**
1020:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  Clears the LTDC's pending flags.
1021:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_FLAG: specifies the flag to clear.
1022:FWLIB/src/stm32f4xx_ltdc.c ****   *   This parameter can be any combination of the following values:
1023:FWLIB/src/stm32f4xx_ltdc.c ****   *     @arg LTDC_FLAG_LI:    Line Interrupt flag.
1024:FWLIB/src/stm32f4xx_ltdc.c ****   *     @arg LTDC_FLAG_FU:   FIFO Underrun Interrupt flag.
1025:FWLIB/src/stm32f4xx_ltdc.c ****   *     @arg LTDC_FLAG_TERR: Transfer Error Interrupt flag.
1026:FWLIB/src/stm32f4xx_ltdc.c ****   *     @arg LTDC_FLAG_RR:   Register Reload interrupt flag.  
1027:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval None
1028:FWLIB/src/stm32f4xx_ltdc.c ****   */
1029:FWLIB/src/stm32f4xx_ltdc.c **** void LTDC_ClearFlag(uint32_t LTDC_FLAG)
1030:FWLIB/src/stm32f4xx_ltdc.c **** {
 1519              		.loc 1 1030 0
 1520              		.cfi_startproc
 1521              		@ args = 0, pretend = 0, frame = 0
 1522              		@ frame_needed = 0, uses_anonymous_args = 0
 1523              		@ link register save eliminated.
 1524              	.LVL127:
1031:FWLIB/src/stm32f4xx_ltdc.c ****   /* Check the parameters */
1032:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_FLAG(LTDC_FLAG));
1033:FWLIB/src/stm32f4xx_ltdc.c **** 
1034:FWLIB/src/stm32f4xx_ltdc.c ****   /* Clear the corresponding LTDC flag */
1035:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC->ICR = (uint32_t)LTDC_FLAG;
 1525              		.loc 1 1035 0
 1526 0000 014B     		ldr	r3, .L121
 1527 0002 D863     		str	r0, [r3, #60]
 1528 0004 7047     		bx	lr
 1529              	.L122:
 1530 0006 00BF     		.align	2
 1531              	.L121:
 1532 0008 00680140 		.word	1073833984
 1533              		.cfi_endproc
 1534              	.LFE139:
 1536              		.section	.text.LTDC_GetITStatus,"ax",%progbits
 1537              		.align	1
 1538              		.global	LTDC_GetITStatus
 1539              		.syntax unified
 1540              		.thumb
 1541              		.thumb_func
 1542              		.fpu softvfp
 1544              	LTDC_GetITStatus:
 1545              	.LFB140:
1036:FWLIB/src/stm32f4xx_ltdc.c **** }
1037:FWLIB/src/stm32f4xx_ltdc.c **** 
1038:FWLIB/src/stm32f4xx_ltdc.c **** /**
1039:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  Checks whether the specified LTDC's interrupt has occurred or not.
1040:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_IT: specifies the LTDC interrupts sources to check.
1041:FWLIB/src/stm32f4xx_ltdc.c ****   *   This parameter can be one of the following values:
1042:FWLIB/src/stm32f4xx_ltdc.c ****   *     @arg LTDC_IT_LI:    Line Interrupt Enable.
1043:FWLIB/src/stm32f4xx_ltdc.c ****   *     @arg LTDC_IT_FU:   FIFO Underrun Interrupt Enable.
1044:FWLIB/src/stm32f4xx_ltdc.c ****   *     @arg LTDC_IT_TERR: Transfer Error Interrupt Enable.
ARM GAS  /tmp/ccCk2cG4.s 			page 46


1045:FWLIB/src/stm32f4xx_ltdc.c ****   *     @arg LTDC_IT_RR:   Register Reload interrupt Enable.
1046:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval The new state of the LTDC_IT (SET or RESET).
1047:FWLIB/src/stm32f4xx_ltdc.c ****   */
1048:FWLIB/src/stm32f4xx_ltdc.c **** ITStatus LTDC_GetITStatus(uint32_t LTDC_IT)
1049:FWLIB/src/stm32f4xx_ltdc.c **** {
 1546              		.loc 1 1049 0
 1547              		.cfi_startproc
 1548              		@ args = 0, pretend = 0, frame = 0
 1549              		@ frame_needed = 0, uses_anonymous_args = 0
 1550              		@ link register save eliminated.
 1551              	.LVL128:
1050:FWLIB/src/stm32f4xx_ltdc.c ****   ITStatus bitstatus = RESET;
1051:FWLIB/src/stm32f4xx_ltdc.c **** 
1052:FWLIB/src/stm32f4xx_ltdc.c ****   /* Check the parameters */
1053:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_IT(LTDC_IT));
1054:FWLIB/src/stm32f4xx_ltdc.c **** 
1055:FWLIB/src/stm32f4xx_ltdc.c ****   if ((LTDC->ISR & LTDC_IT) != (uint32_t)RESET)
 1552              		.loc 1 1055 0
 1553 0000 064B     		ldr	r3, .L128
 1554 0002 9B6B     		ldr	r3, [r3, #56]
 1555 0004 0342     		tst	r3, r0
 1556 0006 07D0     		beq	.L126
1056:FWLIB/src/stm32f4xx_ltdc.c ****   {
1057:FWLIB/src/stm32f4xx_ltdc.c ****     bitstatus = SET;
 1557              		.loc 1 1057 0
 1558 0008 0123     		movs	r3, #1
 1559              	.L124:
 1560              	.LVL129:
1058:FWLIB/src/stm32f4xx_ltdc.c ****   }
1059:FWLIB/src/stm32f4xx_ltdc.c ****   else
1060:FWLIB/src/stm32f4xx_ltdc.c ****   {
1061:FWLIB/src/stm32f4xx_ltdc.c ****     bitstatus = RESET;
1062:FWLIB/src/stm32f4xx_ltdc.c ****   }
1063:FWLIB/src/stm32f4xx_ltdc.c **** 
1064:FWLIB/src/stm32f4xx_ltdc.c ****   if (((LTDC->IER & LTDC_IT) != (uint32_t)RESET) && (bitstatus != (uint32_t)RESET))
 1561              		.loc 1 1064 0
 1562 000a 044A     		ldr	r2, .L128
 1563 000c 526B     		ldr	r2, [r2, #52]
 1564 000e 1042     		tst	r0, r2
 1565 0010 00D1     		bne	.L125
1065:FWLIB/src/stm32f4xx_ltdc.c ****   {
1066:FWLIB/src/stm32f4xx_ltdc.c ****     bitstatus = SET;
1067:FWLIB/src/stm32f4xx_ltdc.c ****   }
1068:FWLIB/src/stm32f4xx_ltdc.c ****   else
1069:FWLIB/src/stm32f4xx_ltdc.c ****   {
1070:FWLIB/src/stm32f4xx_ltdc.c ****     bitstatus = RESET;
 1566              		.loc 1 1070 0
 1567 0012 0023     		movs	r3, #0
 1568              	.LVL130:
 1569              	.L125:
1071:FWLIB/src/stm32f4xx_ltdc.c ****   }
1072:FWLIB/src/stm32f4xx_ltdc.c ****   return bitstatus;
1073:FWLIB/src/stm32f4xx_ltdc.c **** }
 1570              		.loc 1 1073 0
 1571 0014 1846     		mov	r0, r3
 1572              	.LVL131:
 1573 0016 7047     		bx	lr
ARM GAS  /tmp/ccCk2cG4.s 			page 47


 1574              	.LVL132:
 1575              	.L126:
1061:FWLIB/src/stm32f4xx_ltdc.c ****   }
 1576              		.loc 1 1061 0
 1577 0018 0023     		movs	r3, #0
 1578 001a F6E7     		b	.L124
 1579              	.L129:
 1580              		.align	2
 1581              	.L128:
 1582 001c 00680140 		.word	1073833984
 1583              		.cfi_endproc
 1584              	.LFE140:
 1586              		.section	.text.LTDC_ClearITPendingBit,"ax",%progbits
 1587              		.align	1
 1588              		.global	LTDC_ClearITPendingBit
 1589              		.syntax unified
 1590              		.thumb
 1591              		.thumb_func
 1592              		.fpu softvfp
 1594              	LTDC_ClearITPendingBit:
 1595              	.LFB141:
1074:FWLIB/src/stm32f4xx_ltdc.c **** 
1075:FWLIB/src/stm32f4xx_ltdc.c **** 
1076:FWLIB/src/stm32f4xx_ltdc.c **** /**
1077:FWLIB/src/stm32f4xx_ltdc.c ****   * @brief  Clears the LTDC's interrupt pending bits.
1078:FWLIB/src/stm32f4xx_ltdc.c ****   * @param  LTDC_IT: specifies the interrupt pending bit to clear.
1079:FWLIB/src/stm32f4xx_ltdc.c ****   *   This parameter can be any combination of the following values:
1080:FWLIB/src/stm32f4xx_ltdc.c ****   *     @arg LTDC_IT_LIE:    Line Interrupt.
1081:FWLIB/src/stm32f4xx_ltdc.c ****   *     @arg LTDC_IT_FUIE:   FIFO Underrun Interrupt.
1082:FWLIB/src/stm32f4xx_ltdc.c ****   *     @arg LTDC_IT_TERRIE: Transfer Error Interrupt.
1083:FWLIB/src/stm32f4xx_ltdc.c ****   *     @arg LTDC_IT_RRIE:   Register Reload interrupt.
1084:FWLIB/src/stm32f4xx_ltdc.c ****   * @retval None
1085:FWLIB/src/stm32f4xx_ltdc.c ****   */
1086:FWLIB/src/stm32f4xx_ltdc.c **** void LTDC_ClearITPendingBit(uint32_t LTDC_IT)
1087:FWLIB/src/stm32f4xx_ltdc.c **** {
 1596              		.loc 1 1087 0
 1597              		.cfi_startproc
 1598              		@ args = 0, pretend = 0, frame = 0
 1599              		@ frame_needed = 0, uses_anonymous_args = 0
 1600              		@ link register save eliminated.
 1601              	.LVL133:
1088:FWLIB/src/stm32f4xx_ltdc.c ****   /* Check the parameters */
1089:FWLIB/src/stm32f4xx_ltdc.c ****   assert_param(IS_LTDC_IT(LTDC_IT));
1090:FWLIB/src/stm32f4xx_ltdc.c **** 
1091:FWLIB/src/stm32f4xx_ltdc.c ****   /* Clear the corresponding LTDC Interrupt */
1092:FWLIB/src/stm32f4xx_ltdc.c ****   LTDC->ICR = (uint32_t)LTDC_IT;
 1602              		.loc 1 1092 0
 1603 0000 014B     		ldr	r3, .L131
 1604 0002 D863     		str	r0, [r3, #60]
 1605 0004 7047     		bx	lr
 1606              	.L132:
 1607 0006 00BF     		.align	2
 1608              	.L131:
 1609 0008 00680140 		.word	1073833984
 1610              		.cfi_endproc
 1611              	.LFE141:
 1613              		.text
ARM GAS  /tmp/ccCk2cG4.s 			page 48


 1614              	.Letext0:
 1615              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1616              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1617              		.file 4 "CORE/core_cm4.h"
 1618              		.file 5 "USER/system_stm32f4xx.h"
 1619              		.file 6 "USER/stm32f4xx.h"
 1620              		.file 7 "FWLIB/inc/stm32f4xx_ltdc.h"
 1621              		.file 8 "FWLIB/inc/stm32f4xx_rcc.h"
ARM GAS  /tmp/ccCk2cG4.s 			page 49


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_ltdc.c
     /tmp/ccCk2cG4.s:16     .text.LTDC_DeInit:0000000000000000 $t
     /tmp/ccCk2cG4.s:23     .text.LTDC_DeInit:0000000000000000 LTDC_DeInit
     /tmp/ccCk2cG4.s:50     .text.LTDC_Init:0000000000000000 $t
     /tmp/ccCk2cG4.s:57     .text.LTDC_Init:0000000000000000 LTDC_Init
     /tmp/ccCk2cG4.s:177    .text.LTDC_Init:0000000000000094 $d
     /tmp/ccCk2cG4.s:184    .text.LTDC_StructInit:0000000000000000 $t
     /tmp/ccCk2cG4.s:191    .text.LTDC_StructInit:0000000000000000 LTDC_StructInit
     /tmp/ccCk2cG4.s:235    .text.LTDC_Cmd:0000000000000000 $t
     /tmp/ccCk2cG4.s:242    .text.LTDC_Cmd:0000000000000000 LTDC_Cmd
     /tmp/ccCk2cG4.s:268    .text.LTDC_Cmd:000000000000001c $d
     /tmp/ccCk2cG4.s:273    .text.LTDC_DitherCmd:0000000000000000 $t
     /tmp/ccCk2cG4.s:280    .text.LTDC_DitherCmd:0000000000000000 LTDC_DitherCmd
     /tmp/ccCk2cG4.s:306    .text.LTDC_DitherCmd:000000000000001c $d
     /tmp/ccCk2cG4.s:311    .text.LTDC_GetRGBWidth:0000000000000000 $t
     /tmp/ccCk2cG4.s:318    .text.LTDC_GetRGBWidth:0000000000000000 LTDC_GetRGBWidth
     /tmp/ccCk2cG4.s:357    .text.LTDC_GetRGBWidth:0000000000000028 $d
     /tmp/ccCk2cG4.s:363    .text.LTDC_RGBStructInit:0000000000000000 $t
     /tmp/ccCk2cG4.s:370    .text.LTDC_RGBStructInit:0000000000000000 LTDC_RGBStructInit
     /tmp/ccCk2cG4.s:390    .text.LTDC_LIPConfig:0000000000000000 $t
     /tmp/ccCk2cG4.s:397    .text.LTDC_LIPConfig:0000000000000000 LTDC_LIPConfig
     /tmp/ccCk2cG4.s:412    .text.LTDC_LIPConfig:0000000000000008 $d
     /tmp/ccCk2cG4.s:417    .text.LTDC_ReloadConfig:0000000000000000 $t
     /tmp/ccCk2cG4.s:424    .text.LTDC_ReloadConfig:0000000000000000 LTDC_ReloadConfig
     /tmp/ccCk2cG4.s:439    .text.LTDC_ReloadConfig:0000000000000008 $d
     /tmp/ccCk2cG4.s:444    .text.LTDC_LayerInit:0000000000000000 $t
     /tmp/ccCk2cG4.s:451    .text.LTDC_LayerInit:0000000000000000 LTDC_LayerInit
     /tmp/ccCk2cG4.s:572    .text.LTDC_LayerStructInit:0000000000000000 $t
     /tmp/ccCk2cG4.s:579    .text.LTDC_LayerStructInit:0000000000000000 LTDC_LayerStructInit
     /tmp/ccCk2cG4.s:628    .text.LTDC_LayerCmd:0000000000000000 $t
     /tmp/ccCk2cG4.s:635    .text.LTDC_LayerCmd:0000000000000000 LTDC_LayerCmd
     /tmp/ccCk2cG4.s:660    .text.LTDC_GetPosStatus:0000000000000000 $t
     /tmp/ccCk2cG4.s:667    .text.LTDC_GetPosStatus:0000000000000000 LTDC_GetPosStatus
     /tmp/ccCk2cG4.s:693    .text.LTDC_GetPosStatus:0000000000000018 $d
     /tmp/ccCk2cG4.s:698    .text.LTDC_PosStructInit:0000000000000000 $t
     /tmp/ccCk2cG4.s:705    .text.LTDC_PosStructInit:0000000000000000 LTDC_PosStructInit
     /tmp/ccCk2cG4.s:723    .text.LTDC_GetCDStatus:0000000000000000 $t
     /tmp/ccCk2cG4.s:730    .text.LTDC_GetCDStatus:0000000000000000 LTDC_GetCDStatus
     /tmp/ccCk2cG4.s:757    .text.LTDC_GetCDStatus:0000000000000010 $d
     /tmp/ccCk2cG4.s:762    .text.LTDC_ColorKeyingConfig:0000000000000000 $t
     /tmp/ccCk2cG4.s:769    .text.LTDC_ColorKeyingConfig:0000000000000000 LTDC_ColorKeyingConfig
     /tmp/ccCk2cG4.s:834    .text.LTDC_ColorKeyingConfig:0000000000000044 $d
     /tmp/ccCk2cG4.s:839    .text.LTDC_ColorKeyingStructInit:0000000000000000 $t
     /tmp/ccCk2cG4.s:846    .text.LTDC_ColorKeyingStructInit:0000000000000000 LTDC_ColorKeyingStructInit
     /tmp/ccCk2cG4.s:866    .text.LTDC_CLUTCmd:0000000000000000 $t
     /tmp/ccCk2cG4.s:873    .text.LTDC_CLUTCmd:0000000000000000 LTDC_CLUTCmd
     /tmp/ccCk2cG4.s:902    .text.LTDC_CLUTCmd:000000000000001c $d
     /tmp/ccCk2cG4.s:907    .text.LTDC_CLUTInit:0000000000000000 $t
     /tmp/ccCk2cG4.s:914    .text.LTDC_CLUTInit:0000000000000000 LTDC_CLUTInit
     /tmp/ccCk2cG4.s:957    .text.LTDC_CLUTStructInit:0000000000000000 $t
     /tmp/ccCk2cG4.s:964    .text.LTDC_CLUTStructInit:0000000000000000 LTDC_CLUTStructInit
     /tmp/ccCk2cG4.s:986    .text.LTDC_LayerPosition:0000000000000000 $t
     /tmp/ccCk2cG4.s:993    .text.LTDC_LayerPosition:0000000000000000 LTDC_LayerPosition
     /tmp/ccCk2cG4.s:1121   .text.LTDC_LayerPosition:000000000000007c $d
     /tmp/ccCk2cG4.s:1126   .text.LTDC_LayerAlpha:0000000000000000 $t
     /tmp/ccCk2cG4.s:1133   .text.LTDC_LayerAlpha:0000000000000000 LTDC_LayerAlpha
ARM GAS  /tmp/ccCk2cG4.s 			page 50


     /tmp/ccCk2cG4.s:1148   .text.LTDC_LayerAddress:0000000000000000 $t
     /tmp/ccCk2cG4.s:1155   .text.LTDC_LayerAddress:0000000000000000 LTDC_LayerAddress
     /tmp/ccCk2cG4.s:1170   .text.LTDC_LayerSize:0000000000000000 $t
     /tmp/ccCk2cG4.s:1177   .text.LTDC_LayerSize:0000000000000000 LTDC_LayerSize
     /tmp/ccCk2cG4.s:1292   .text.LTDC_LayerPixelFormat:0000000000000000 $t
     /tmp/ccCk2cG4.s:1299   .text.LTDC_LayerPixelFormat:0000000000000000 LTDC_LayerPixelFormat
     /tmp/ccCk2cG4.s:1430   .text.LTDC_ITConfig:0000000000000000 $t
     /tmp/ccCk2cG4.s:1437   .text.LTDC_ITConfig:0000000000000000 LTDC_ITConfig
     /tmp/ccCk2cG4.s:1466   .text.LTDC_ITConfig:0000000000000018 $d
     /tmp/ccCk2cG4.s:1471   .text.LTDC_GetFlagStatus:0000000000000000 $t
     /tmp/ccCk2cG4.s:1478   .text.LTDC_GetFlagStatus:0000000000000000 LTDC_GetFlagStatus
     /tmp/ccCk2cG4.s:1505   .text.LTDC_GetFlagStatus:0000000000000010 $d
     /tmp/ccCk2cG4.s:1510   .text.LTDC_ClearFlag:0000000000000000 $t
     /tmp/ccCk2cG4.s:1517   .text.LTDC_ClearFlag:0000000000000000 LTDC_ClearFlag
     /tmp/ccCk2cG4.s:1532   .text.LTDC_ClearFlag:0000000000000008 $d
     /tmp/ccCk2cG4.s:1537   .text.LTDC_GetITStatus:0000000000000000 $t
     /tmp/ccCk2cG4.s:1544   .text.LTDC_GetITStatus:0000000000000000 LTDC_GetITStatus
     /tmp/ccCk2cG4.s:1582   .text.LTDC_GetITStatus:000000000000001c $d
     /tmp/ccCk2cG4.s:1587   .text.LTDC_ClearITPendingBit:0000000000000000 $t
     /tmp/ccCk2cG4.s:1594   .text.LTDC_ClearITPendingBit:0000000000000000 LTDC_ClearITPendingBit
     /tmp/ccCk2cG4.s:1609   .text.LTDC_ClearITPendingBit:0000000000000008 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
