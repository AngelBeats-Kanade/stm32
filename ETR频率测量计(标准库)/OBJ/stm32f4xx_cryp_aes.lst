ARM GAS  /tmp/ccg7Oav1.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f4xx_cryp_aes.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.CRYP_AES_ECB,"ax",%progbits
  16              		.align	1
  17              		.global	CRYP_AES_ECB
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	CRYP_AES_ECB:
  24              	.LFB112:
  25              		.file 1 "FWLIB/src/stm32f4xx_cryp_aes.c"
   1:FWLIB/src/stm32f4xx_cryp_aes.c **** /**
   2:FWLIB/src/stm32f4xx_cryp_aes.c ****   ******************************************************************************
   3:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @file    stm32f4xx_cryp_aes.c
   4:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @author  MCD Application Team
   5:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @version V1.4.0
   6:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @date    04-August-2014
   7:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @brief   This file provides high level functions to encrypt and decrypt an 
   8:FWLIB/src/stm32f4xx_cryp_aes.c ****   *          input message using AES in ECB/CBC/CTR/GCM/CCM modes.
   9:FWLIB/src/stm32f4xx_cryp_aes.c ****   *          It uses the stm32f4xx_cryp.c/.h drivers to access the STM32F4xx CRYP
  10:FWLIB/src/stm32f4xx_cryp_aes.c ****   *          peripheral.
  11:FWLIB/src/stm32f4xx_cryp_aes.c ****   *          AES-ECB/CBC/CTR/GCM/CCM modes are available on STM32F437x Devices.
  12:FWLIB/src/stm32f4xx_cryp_aes.c ****   *          For STM32F41xx Devices, only AES-ECB/CBC/CTR modes are available.
  13:FWLIB/src/stm32f4xx_cryp_aes.c ****   *
  14:FWLIB/src/stm32f4xx_cryp_aes.c **** @verbatim
  15:FWLIB/src/stm32f4xx_cryp_aes.c ****  ===================================================================
  16:FWLIB/src/stm32f4xx_cryp_aes.c ****                   ##### How to use this driver #####
  17:FWLIB/src/stm32f4xx_cryp_aes.c ****  ===================================================================
  18:FWLIB/src/stm32f4xx_cryp_aes.c ****  [..]
  19:FWLIB/src/stm32f4xx_cryp_aes.c ****    (#) Enable The CRYP controller clock using 
  20:FWLIB/src/stm32f4xx_cryp_aes.c ****       RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_CRYP, ENABLE); function.
  21:FWLIB/src/stm32f4xx_cryp_aes.c ****   
  22:FWLIB/src/stm32f4xx_cryp_aes.c ****    (#) Encrypt and decrypt using AES in ECB Mode using CRYP_AES_ECB() function.
  23:FWLIB/src/stm32f4xx_cryp_aes.c ****   
  24:FWLIB/src/stm32f4xx_cryp_aes.c ****    (#) Encrypt and decrypt using AES in CBC Mode using CRYP_AES_CBC() function.
  25:FWLIB/src/stm32f4xx_cryp_aes.c ****   
  26:FWLIB/src/stm32f4xx_cryp_aes.c ****    (#) Encrypt and decrypt using AES in CTR Mode using CRYP_AES_CTR() function.
  27:FWLIB/src/stm32f4xx_cryp_aes.c **** 
  28:FWLIB/src/stm32f4xx_cryp_aes.c ****    (#) Encrypt and decrypt using AES in GCM Mode using CRYP_AES_GCM() function.
  29:FWLIB/src/stm32f4xx_cryp_aes.c ****    
  30:FWLIB/src/stm32f4xx_cryp_aes.c ****    (#) Encrypt and decrypt using AES in CCM Mode using CRYP_AES_CCM() function.
  31:FWLIB/src/stm32f4xx_cryp_aes.c ****      
  32:FWLIB/src/stm32f4xx_cryp_aes.c **** @endverbatim
  33:FWLIB/src/stm32f4xx_cryp_aes.c ****   *
ARM GAS  /tmp/ccg7Oav1.s 			page 2


  34:FWLIB/src/stm32f4xx_cryp_aes.c ****   ******************************************************************************
  35:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @attention
  36:FWLIB/src/stm32f4xx_cryp_aes.c ****   *
  37:FWLIB/src/stm32f4xx_cryp_aes.c ****   * <h2><center>&copy; COPYRIGHT 2014 STMicroelectronics</center></h2>
  38:FWLIB/src/stm32f4xx_cryp_aes.c ****   *
  39:FWLIB/src/stm32f4xx_cryp_aes.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  40:FWLIB/src/stm32f4xx_cryp_aes.c ****   * You may not use this file except in compliance with the License.
  41:FWLIB/src/stm32f4xx_cryp_aes.c ****   * You may obtain a copy of the License at:
  42:FWLIB/src/stm32f4xx_cryp_aes.c ****   *
  43:FWLIB/src/stm32f4xx_cryp_aes.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  44:FWLIB/src/stm32f4xx_cryp_aes.c ****   *
  45:FWLIB/src/stm32f4xx_cryp_aes.c ****   * Unless required by applicable law or agreed to in writing, software 
  46:FWLIB/src/stm32f4xx_cryp_aes.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  47:FWLIB/src/stm32f4xx_cryp_aes.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  48:FWLIB/src/stm32f4xx_cryp_aes.c ****   * See the License for the specific language governing permissions and
  49:FWLIB/src/stm32f4xx_cryp_aes.c ****   * limitations under the License.
  50:FWLIB/src/stm32f4xx_cryp_aes.c ****   *
  51:FWLIB/src/stm32f4xx_cryp_aes.c ****   ******************************************************************************  
  52:FWLIB/src/stm32f4xx_cryp_aes.c ****   */
  53:FWLIB/src/stm32f4xx_cryp_aes.c **** 
  54:FWLIB/src/stm32f4xx_cryp_aes.c **** /* Includes ------------------------------------------------------------------*/
  55:FWLIB/src/stm32f4xx_cryp_aes.c **** #include "stm32f4xx_cryp.h"
  56:FWLIB/src/stm32f4xx_cryp_aes.c **** 
  57:FWLIB/src/stm32f4xx_cryp_aes.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  58:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @{
  59:FWLIB/src/stm32f4xx_cryp_aes.c ****   */
  60:FWLIB/src/stm32f4xx_cryp_aes.c **** 
  61:FWLIB/src/stm32f4xx_cryp_aes.c **** /** @defgroup CRYP 
  62:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @brief CRYP driver modules
  63:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @{
  64:FWLIB/src/stm32f4xx_cryp_aes.c ****   */
  65:FWLIB/src/stm32f4xx_cryp_aes.c **** 
  66:FWLIB/src/stm32f4xx_cryp_aes.c **** /* Private typedef -----------------------------------------------------------*/
  67:FWLIB/src/stm32f4xx_cryp_aes.c **** /* Private define ------------------------------------------------------------*/
  68:FWLIB/src/stm32f4xx_cryp_aes.c **** #define AESBUSY_TIMEOUT    ((uint32_t) 0x00010000)
  69:FWLIB/src/stm32f4xx_cryp_aes.c **** 
  70:FWLIB/src/stm32f4xx_cryp_aes.c **** /* Private macro -------------------------------------------------------------*/
  71:FWLIB/src/stm32f4xx_cryp_aes.c **** /* Private variables ---------------------------------------------------------*/
  72:FWLIB/src/stm32f4xx_cryp_aes.c **** /* Private function prototypes -----------------------------------------------*/
  73:FWLIB/src/stm32f4xx_cryp_aes.c **** /* Private functions ---------------------------------------------------------*/
  74:FWLIB/src/stm32f4xx_cryp_aes.c **** 
  75:FWLIB/src/stm32f4xx_cryp_aes.c **** /** @defgroup CRYP_Private_Functions
  76:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @{
  77:FWLIB/src/stm32f4xx_cryp_aes.c ****   */ 
  78:FWLIB/src/stm32f4xx_cryp_aes.c **** 
  79:FWLIB/src/stm32f4xx_cryp_aes.c **** /** @defgroup CRYP_Group6 High Level AES functions
  80:FWLIB/src/stm32f4xx_cryp_aes.c ****  *  @brief   High Level AES functions 
  81:FWLIB/src/stm32f4xx_cryp_aes.c ****  *
  82:FWLIB/src/stm32f4xx_cryp_aes.c **** @verbatim   
  83:FWLIB/src/stm32f4xx_cryp_aes.c ****  ===============================================================================
  84:FWLIB/src/stm32f4xx_cryp_aes.c ****                        ##### High Level AES functions #####
  85:FWLIB/src/stm32f4xx_cryp_aes.c ****  ===============================================================================
  86:FWLIB/src/stm32f4xx_cryp_aes.c **** 
  87:FWLIB/src/stm32f4xx_cryp_aes.c **** @endverbatim
  88:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @{
  89:FWLIB/src/stm32f4xx_cryp_aes.c ****   */
  90:FWLIB/src/stm32f4xx_cryp_aes.c **** 
ARM GAS  /tmp/ccg7Oav1.s 			page 3


  91:FWLIB/src/stm32f4xx_cryp_aes.c **** /**
  92:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @brief  Encrypt and decrypt using AES in ECB Mode
  93:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Mode: encryption or decryption Mode.
  94:FWLIB/src/stm32f4xx_cryp_aes.c ****   *          This parameter can be one of the following values:
  95:FWLIB/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_ENCRYPT: Encryption
  96:FWLIB/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_DECRYPT: Decryption
  97:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Key: Key used for AES algorithm.
  98:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Keysize: length of the Key, must be a 128, 192 or 256.
  99:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Input: pointer to the Input buffer.
 100:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 16.
 101:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Output: pointer to the returned buffer.
 102:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @retval An ErrorStatus enumeration value:
 103:FWLIB/src/stm32f4xx_cryp_aes.c ****   *          - SUCCESS: Operation done
 104:FWLIB/src/stm32f4xx_cryp_aes.c ****   *          - ERROR: Operation failed
 105:FWLIB/src/stm32f4xx_cryp_aes.c ****   */
 106:FWLIB/src/stm32f4xx_cryp_aes.c **** ErrorStatus CRYP_AES_ECB(uint8_t Mode, uint8_t* Key, uint16_t Keysize,
 107:FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint8_t* Input, uint32_t Ilength, uint8_t* Output)
 108:FWLIB/src/stm32f4xx_cryp_aes.c **** {
  26              		.loc 1 108 0
  27              		.cfi_startproc
  28              		@ args = 8, pretend = 0, frame = 56
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 28
  34              		.cfi_offset 4, -28
  35              		.cfi_offset 5, -24
  36              		.cfi_offset 6, -20
  37              		.cfi_offset 7, -16
  38              		.cfi_offset 8, -12
  39              		.cfi_offset 9, -8
  40              		.cfi_offset 14, -4
  41 0004 8FB0     		sub	sp, sp, #60
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 88
  44 0006 8146     		mov	r9, r0
  45 0008 0D46     		mov	r5, r1
  46 000a 1646     		mov	r6, r2
  47 000c DDF85880 		ldr	r8, [sp, #88]
 109:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_InitTypeDef AES_CRYP_InitStructure;
 110:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
 111:FWLIB/src/stm32f4xx_cryp_aes.c ****   __IO uint32_t counter = 0;
  48              		.loc 1 111 0
  49 0010 0022     		movs	r2, #0
  50              	.LVL1:
  51 0012 0192     		str	r2, [sp, #4]
  52              	.LVL2:
 112:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t busystatus = 0;
 113:FWLIB/src/stm32f4xx_cryp_aes.c ****   ErrorStatus status = SUCCESS;
 114:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 115:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t inputaddr  = (uint32_t)Input;
  53              		.loc 1 115 0
  54 0014 1C46     		mov	r4, r3
  55              	.LVL3:
 116:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t outputaddr = (uint32_t)Output;
  56              		.loc 1 116 0
ARM GAS  /tmp/ccg7Oav1.s 			page 4


  57 0016 179F     		ldr	r7, [sp, #92]
  58              	.LVL4:
 117:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t i = 0;
 118:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 119:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Crypto structures initialisation*/
 120:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
  59              		.loc 1 120 0
  60 0018 02A8     		add	r0, sp, #8
  61              	.LVL5:
  62 001a FFF7FEFF 		bl	CRYP_KeyStructInit
  63              	.LVL6:
 121:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 122:FWLIB/src/stm32f4xx_cryp_aes.c ****   switch(Keysize)
  64              		.loc 1 122 0
  65 001e C02E     		cmp	r6, #192
  66 0020 3AD0     		beq	.L3
  67 0022 B6F5807F 		cmp	r6, #256
  68 0026 4DD0     		beq	.L4
  69 0028 802E     		cmp	r6, #128
  70 002a 26D0     		beq	.L21
  71              	.LVL7:
  72              	.L2:
 123:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 124:FWLIB/src/stm32f4xx_cryp_aes.c ****     case 128:
 125:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
 126:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 127:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 128:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 129:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 130:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 131:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 132:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 133:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 134:FWLIB/src/stm32f4xx_cryp_aes.c ****     case 192:
 135:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
 136:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 137:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 138:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 139:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 140:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 141:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 142:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 143:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 144:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 145:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 146:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 147:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 148:FWLIB/src/stm32f4xx_cryp_aes.c ****     case 256:
 149:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
 150:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 151:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 152:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
 153:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 154:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 155:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 156:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 157:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
ARM GAS  /tmp/ccg7Oav1.s 			page 5


 158:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 159:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 160:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 161:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 162:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 163:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 164:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 165:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 166:FWLIB/src/stm32f4xx_cryp_aes.c ****     default:
 167:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 168:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 169:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 170:FWLIB/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Decryption ------------------*/
 171:FWLIB/src/stm32f4xx_cryp_aes.c ****   if(Mode == MODE_DECRYPT) /* AES decryption */
  73              		.loc 1 171 0
  74 002c B9F1000F 		cmp	r9, #0
  75 0030 64D1     		bne	.L6
 172:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 173:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Flush IN/OUT FIFOs */
 174:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_FIFOFlush();
  76              		.loc 1 174 0
  77 0032 FFF7FEFF 		bl	CRYP_FIFOFlush
  78              	.LVL8:
 175:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 176:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Key preparation for decryption process */
 177:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
  79              		.loc 1 177 0
  80 0036 0423     		movs	r3, #4
  81 0038 0A93     		str	r3, [sp, #40]
 178:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_Key;
  82              		.loc 1 178 0
  83 003a 3823     		movs	r3, #56
  84 003c 0B93     		str	r3, [sp, #44]
 179:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_32b;
  85              		.loc 1 179 0
  86 003e 0023     		movs	r3, #0
  87 0040 0C93     		str	r3, [sp, #48]
 180:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
  88              		.loc 1 180 0
  89 0042 0AA8     		add	r0, sp, #40
  90 0044 FFF7FEFF 		bl	CRYP_Init
  91              	.LVL9:
 181:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 182:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Key Initialisation */
 183:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
  92              		.loc 1 183 0
  93 0048 02A8     		add	r0, sp, #8
  94 004a FFF7FEFF 		bl	CRYP_KeyInit
  95              	.LVL10:
 184:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 185:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
 186:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
  96              		.loc 1 186 0
  97 004e 0120     		movs	r0, #1
  98 0050 FFF7FEFF 		bl	CRYP_Cmd
  99              	.LVL11:
 100              	.L8:
ARM GAS  /tmp/ccg7Oav1.s 			page 6


 187:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 188:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* wait until the Busy flag is RESET */
 189:FWLIB/src/stm32f4xx_cryp_aes.c ****     do
 190:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 191:FWLIB/src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 101              		.loc 1 191 0 discriminator 2
 102 0054 1020     		movs	r0, #16
 103 0056 FFF7FEFF 		bl	CRYP_GetFlagStatus
 104              	.LVL12:
 105 005a 0246     		mov	r2, r0
 106              	.LVL13:
 192:FWLIB/src/stm32f4xx_cryp_aes.c ****       counter++;
 107              		.loc 1 192 0 discriminator 2
 108 005c 019B     		ldr	r3, [sp, #4]
 109 005e 0133     		adds	r3, r3, #1
 110 0060 0193     		str	r3, [sp, #4]
 193:FWLIB/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 111              		.loc 1 193 0 discriminator 2
 112 0062 019B     		ldr	r3, [sp, #4]
 113 0064 B3F5803F 		cmp	r3, #65536
 114 0068 01D0     		beq	.L7
 115              		.loc 1 193 0 is_stmt 0 discriminator 1
 116 006a 0028     		cmp	r0, #0
 117 006c F2D1     		bne	.L8
 118              	.L7:
 194:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 195:FWLIB/src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 119              		.loc 1 195 0 is_stmt 1
 120 006e 002A     		cmp	r2, #0
 121 0070 5CD1     		bne	.L17
 196:FWLIB/src/stm32f4xx_cryp_aes.c ****    {
 197:FWLIB/src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 198:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 199:FWLIB/src/stm32f4xx_cryp_aes.c ****     else
 200:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 201:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Crypto Init for decryption process */  
 202:FWLIB/src/stm32f4xx_cryp_aes.c ****       AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 122              		.loc 1 202 0
 123 0072 0423     		movs	r3, #4
 124 0074 0A93     		str	r3, [sp, #40]
 113:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 125              		.loc 1 113 0
 126 0076 0126     		movs	r6, #1
 127 0078 46E0     		b	.L9
 128              	.LVL14:
 129              	.L21:
 125:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 130              		.loc 1 125 0
 131 007a 0023     		movs	r3, #0
 132 007c 0D93     		str	r3, [sp, #52]
 126:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 133              		.loc 1 126 0
 134 007e 2B68     		ldr	r3, [r5]
 135              	.LVL15:
 136              	.LBB230:
 137              	.LBB231:
 138              		.file 2 "CORE/core_cmInstr.h"
ARM GAS  /tmp/ccg7Oav1.s 			page 7


   1:CORE/core_cmInstr.h **** /**************************************************************************//**
   2:CORE/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:CORE/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:CORE/core_cmInstr.h ****  * @version  V3.20
   5:CORE/core_cmInstr.h ****  * @date     05. March 2013
   6:CORE/core_cmInstr.h ****  *
   7:CORE/core_cmInstr.h ****  * @note
   8:CORE/core_cmInstr.h ****  *
   9:CORE/core_cmInstr.h ****  ******************************************************************************/
  10:CORE/core_cmInstr.h **** /* Copyright (c) 2009 - 2013 ARM LIMITED
  11:CORE/core_cmInstr.h **** 
  12:CORE/core_cmInstr.h ****    All rights reserved.
  13:CORE/core_cmInstr.h ****    Redistribution and use in source and binary forms, with or without
  14:CORE/core_cmInstr.h ****    modification, are permitted provided that the following conditions are met:
  15:CORE/core_cmInstr.h ****    - Redistributions of source code must retain the above copyright
  16:CORE/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer.
  17:CORE/core_cmInstr.h ****    - Redistributions in binary form must reproduce the above copyright
  18:CORE/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer in the
  19:CORE/core_cmInstr.h ****      documentation and/or other materials provided with the distribution.
  20:CORE/core_cmInstr.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:CORE/core_cmInstr.h ****      to endorse or promote products derived from this software without
  22:CORE/core_cmInstr.h ****      specific prior written permission.
  23:CORE/core_cmInstr.h ****    *
  24:CORE/core_cmInstr.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:CORE/core_cmInstr.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:CORE/core_cmInstr.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:CORE/core_cmInstr.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:CORE/core_cmInstr.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:CORE/core_cmInstr.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:CORE/core_cmInstr.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:CORE/core_cmInstr.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:CORE/core_cmInstr.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:CORE/core_cmInstr.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:CORE/core_cmInstr.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:CORE/core_cmInstr.h ****    ---------------------------------------------------------------------------*/
  36:CORE/core_cmInstr.h **** 
  37:CORE/core_cmInstr.h **** 
  38:CORE/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  39:CORE/core_cmInstr.h **** #define __CORE_CMINSTR_H
  40:CORE/core_cmInstr.h **** 
  41:CORE/core_cmInstr.h **** 
  42:CORE/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  43:CORE/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  44:CORE/core_cmInstr.h ****   Access to dedicated instructions
  45:CORE/core_cmInstr.h ****   @{
  46:CORE/core_cmInstr.h **** */
  47:CORE/core_cmInstr.h **** 
  48:CORE/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  49:CORE/core_cmInstr.h **** /* ARM armcc specific functions */
  50:CORE/core_cmInstr.h **** 
  51:CORE/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  52:CORE/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  53:CORE/core_cmInstr.h **** #endif
  54:CORE/core_cmInstr.h **** 
  55:CORE/core_cmInstr.h **** 
  56:CORE/core_cmInstr.h **** /** \brief  No Operation
  57:CORE/core_cmInstr.h **** 
ARM GAS  /tmp/ccg7Oav1.s 			page 8


  58:CORE/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  59:CORE/core_cmInstr.h ****  */
  60:CORE/core_cmInstr.h **** #define __NOP                             __nop
  61:CORE/core_cmInstr.h **** 
  62:CORE/core_cmInstr.h **** 
  63:CORE/core_cmInstr.h **** /** \brief  Wait For Interrupt
  64:CORE/core_cmInstr.h **** 
  65:CORE/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  66:CORE/core_cmInstr.h ****     until one of a number of events occurs.
  67:CORE/core_cmInstr.h ****  */
  68:CORE/core_cmInstr.h **** #define __WFI                             __wfi
  69:CORE/core_cmInstr.h **** 
  70:CORE/core_cmInstr.h **** 
  71:CORE/core_cmInstr.h **** /** \brief  Wait For Event
  72:CORE/core_cmInstr.h **** 
  73:CORE/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  74:CORE/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  75:CORE/core_cmInstr.h ****  */
  76:CORE/core_cmInstr.h **** #define __WFE                             __wfe
  77:CORE/core_cmInstr.h **** 
  78:CORE/core_cmInstr.h **** 
  79:CORE/core_cmInstr.h **** /** \brief  Send Event
  80:CORE/core_cmInstr.h **** 
  81:CORE/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  82:CORE/core_cmInstr.h ****  */
  83:CORE/core_cmInstr.h **** #define __SEV                             __sev
  84:CORE/core_cmInstr.h **** 
  85:CORE/core_cmInstr.h **** 
  86:CORE/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  87:CORE/core_cmInstr.h **** 
  88:CORE/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
  89:CORE/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
  90:CORE/core_cmInstr.h ****     memory, after the instruction has been completed.
  91:CORE/core_cmInstr.h ****  */
  92:CORE/core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  93:CORE/core_cmInstr.h **** 
  94:CORE/core_cmInstr.h **** 
  95:CORE/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  96:CORE/core_cmInstr.h **** 
  97:CORE/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
  98:CORE/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  99:CORE/core_cmInstr.h ****  */
 100:CORE/core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
 101:CORE/core_cmInstr.h **** 
 102:CORE/core_cmInstr.h **** 
 103:CORE/core_cmInstr.h **** /** \brief  Data Memory Barrier
 104:CORE/core_cmInstr.h **** 
 105:CORE/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 106:CORE/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 107:CORE/core_cmInstr.h ****  */
 108:CORE/core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
 109:CORE/core_cmInstr.h **** 
 110:CORE/core_cmInstr.h **** 
 111:CORE/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 112:CORE/core_cmInstr.h **** 
 113:CORE/core_cmInstr.h ****     This function reverses the byte order in integer value.
 114:CORE/core_cmInstr.h **** 
ARM GAS  /tmp/ccg7Oav1.s 			page 9


 115:CORE/core_cmInstr.h ****     \param [in]    value  Value to reverse
 116:CORE/core_cmInstr.h ****     \return               Reversed value
 117:CORE/core_cmInstr.h ****  */
 118:CORE/core_cmInstr.h **** #define __REV                             __rev
 119:CORE/core_cmInstr.h **** 
 120:CORE/core_cmInstr.h **** 
 121:CORE/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 122:CORE/core_cmInstr.h **** 
 123:CORE/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 124:CORE/core_cmInstr.h **** 
 125:CORE/core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:CORE/core_cmInstr.h ****     \return               Reversed value
 127:CORE/core_cmInstr.h ****  */
 128:CORE/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 129:CORE/core_cmInstr.h **** __attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)
 130:CORE/core_cmInstr.h **** {
 131:CORE/core_cmInstr.h ****   rev16 r0, r0
 132:CORE/core_cmInstr.h ****   bx lr
 133:CORE/core_cmInstr.h **** }
 134:CORE/core_cmInstr.h **** #endif
 135:CORE/core_cmInstr.h **** 
 136:CORE/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 137:CORE/core_cmInstr.h **** 
 138:CORE/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 139:CORE/core_cmInstr.h **** 
 140:CORE/core_cmInstr.h ****     \param [in]    value  Value to reverse
 141:CORE/core_cmInstr.h ****     \return               Reversed value
 142:CORE/core_cmInstr.h ****  */
 143:CORE/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 144:CORE/core_cmInstr.h **** __attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int32_t __REVSH(int32_t value)
 145:CORE/core_cmInstr.h **** {
 146:CORE/core_cmInstr.h ****   revsh r0, r0
 147:CORE/core_cmInstr.h ****   bx lr
 148:CORE/core_cmInstr.h **** }
 149:CORE/core_cmInstr.h **** #endif
 150:CORE/core_cmInstr.h **** 
 151:CORE/core_cmInstr.h **** 
 152:CORE/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 153:CORE/core_cmInstr.h **** 
 154:CORE/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 155:CORE/core_cmInstr.h **** 
 156:CORE/core_cmInstr.h ****     \param [in]    value  Value to rotate
 157:CORE/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 158:CORE/core_cmInstr.h ****     \return               Rotated value
 159:CORE/core_cmInstr.h ****  */
 160:CORE/core_cmInstr.h **** #define __ROR                             __ror
 161:CORE/core_cmInstr.h **** 
 162:CORE/core_cmInstr.h **** 
 163:CORE/core_cmInstr.h **** /** \brief  Breakpoint
 164:CORE/core_cmInstr.h **** 
 165:CORE/core_cmInstr.h ****     This function causes the processor to enter Debug state.
 166:CORE/core_cmInstr.h ****     Debug tools can use this to investigate system state when the instruction at a particular addre
 167:CORE/core_cmInstr.h **** 
 168:CORE/core_cmInstr.h ****     \param [in]    value  is ignored by the processor.
 169:CORE/core_cmInstr.h ****                    If required, a debugger can use it to store additional information about the bre
 170:CORE/core_cmInstr.h ****  */
 171:CORE/core_cmInstr.h **** #define __BKPT(value)                       __breakpoint(value)
ARM GAS  /tmp/ccg7Oav1.s 			page 10


 172:CORE/core_cmInstr.h **** 
 173:CORE/core_cmInstr.h **** 
 174:CORE/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 175:CORE/core_cmInstr.h **** 
 176:CORE/core_cmInstr.h **** /** \brief  Reverse bit order of value
 177:CORE/core_cmInstr.h **** 
 178:CORE/core_cmInstr.h ****     This function reverses the bit order of the given value.
 179:CORE/core_cmInstr.h **** 
 180:CORE/core_cmInstr.h ****     \param [in]    value  Value to reverse
 181:CORE/core_cmInstr.h ****     \return               Reversed value
 182:CORE/core_cmInstr.h ****  */
 183:CORE/core_cmInstr.h **** #define __RBIT                            __rbit
 184:CORE/core_cmInstr.h **** 
 185:CORE/core_cmInstr.h **** 
 186:CORE/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 187:CORE/core_cmInstr.h **** 
 188:CORE/core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 189:CORE/core_cmInstr.h **** 
 190:CORE/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 191:CORE/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 192:CORE/core_cmInstr.h ****  */
 193:CORE/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 194:CORE/core_cmInstr.h **** 
 195:CORE/core_cmInstr.h **** 
 196:CORE/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 197:CORE/core_cmInstr.h **** 
 198:CORE/core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 199:CORE/core_cmInstr.h **** 
 200:CORE/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 201:CORE/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 202:CORE/core_cmInstr.h ****  */
 203:CORE/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 204:CORE/core_cmInstr.h **** 
 205:CORE/core_cmInstr.h **** 
 206:CORE/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 207:CORE/core_cmInstr.h **** 
 208:CORE/core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 209:CORE/core_cmInstr.h **** 
 210:CORE/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 211:CORE/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 212:CORE/core_cmInstr.h ****  */
 213:CORE/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 214:CORE/core_cmInstr.h **** 
 215:CORE/core_cmInstr.h **** 
 216:CORE/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 217:CORE/core_cmInstr.h **** 
 218:CORE/core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 219:CORE/core_cmInstr.h **** 
 220:CORE/core_cmInstr.h ****     \param [in]  value  Value to store
 221:CORE/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 222:CORE/core_cmInstr.h ****     \return          0  Function succeeded
 223:CORE/core_cmInstr.h ****     \return          1  Function failed
 224:CORE/core_cmInstr.h ****  */
 225:CORE/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 226:CORE/core_cmInstr.h **** 
 227:CORE/core_cmInstr.h **** 
 228:CORE/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
ARM GAS  /tmp/ccg7Oav1.s 			page 11


 229:CORE/core_cmInstr.h **** 
 230:CORE/core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 231:CORE/core_cmInstr.h **** 
 232:CORE/core_cmInstr.h ****     \param [in]  value  Value to store
 233:CORE/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 234:CORE/core_cmInstr.h ****     \return          0  Function succeeded
 235:CORE/core_cmInstr.h ****     \return          1  Function failed
 236:CORE/core_cmInstr.h ****  */
 237:CORE/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 238:CORE/core_cmInstr.h **** 
 239:CORE/core_cmInstr.h **** 
 240:CORE/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 241:CORE/core_cmInstr.h **** 
 242:CORE/core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 243:CORE/core_cmInstr.h **** 
 244:CORE/core_cmInstr.h ****     \param [in]  value  Value to store
 245:CORE/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 246:CORE/core_cmInstr.h ****     \return          0  Function succeeded
 247:CORE/core_cmInstr.h ****     \return          1  Function failed
 248:CORE/core_cmInstr.h ****  */
 249:CORE/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 250:CORE/core_cmInstr.h **** 
 251:CORE/core_cmInstr.h **** 
 252:CORE/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 253:CORE/core_cmInstr.h **** 
 254:CORE/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 255:CORE/core_cmInstr.h **** 
 256:CORE/core_cmInstr.h ****  */
 257:CORE/core_cmInstr.h **** #define __CLREX                           __clrex
 258:CORE/core_cmInstr.h **** 
 259:CORE/core_cmInstr.h **** 
 260:CORE/core_cmInstr.h **** /** \brief  Signed Saturate
 261:CORE/core_cmInstr.h **** 
 262:CORE/core_cmInstr.h ****     This function saturates a signed value.
 263:CORE/core_cmInstr.h **** 
 264:CORE/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 265:CORE/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 266:CORE/core_cmInstr.h ****     \return             Saturated value
 267:CORE/core_cmInstr.h ****  */
 268:CORE/core_cmInstr.h **** #define __SSAT                            __ssat
 269:CORE/core_cmInstr.h **** 
 270:CORE/core_cmInstr.h **** 
 271:CORE/core_cmInstr.h **** /** \brief  Unsigned Saturate
 272:CORE/core_cmInstr.h **** 
 273:CORE/core_cmInstr.h ****     This function saturates an unsigned value.
 274:CORE/core_cmInstr.h **** 
 275:CORE/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 276:CORE/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 277:CORE/core_cmInstr.h ****     \return             Saturated value
 278:CORE/core_cmInstr.h ****  */
 279:CORE/core_cmInstr.h **** #define __USAT                            __usat
 280:CORE/core_cmInstr.h **** 
 281:CORE/core_cmInstr.h **** 
 282:CORE/core_cmInstr.h **** /** \brief  Count leading zeros
 283:CORE/core_cmInstr.h **** 
 284:CORE/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 285:CORE/core_cmInstr.h **** 
ARM GAS  /tmp/ccg7Oav1.s 			page 12


 286:CORE/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 287:CORE/core_cmInstr.h ****     \return             number of leading zeros in value
 288:CORE/core_cmInstr.h ****  */
 289:CORE/core_cmInstr.h **** #define __CLZ                             __clz
 290:CORE/core_cmInstr.h **** 
 291:CORE/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
 292:CORE/core_cmInstr.h **** 
 293:CORE/core_cmInstr.h **** 
 294:CORE/core_cmInstr.h **** 
 295:CORE/core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 296:CORE/core_cmInstr.h **** /* IAR iccarm specific functions */
 297:CORE/core_cmInstr.h **** 
 298:CORE/core_cmInstr.h **** #include <cmsis_iar.h>
 299:CORE/core_cmInstr.h **** 
 300:CORE/core_cmInstr.h **** 
 301:CORE/core_cmInstr.h **** #elif defined ( __TMS470__ ) /*---------------- TI CCS Compiler ------------------*/
 302:CORE/core_cmInstr.h **** /* TI CCS specific functions */
 303:CORE/core_cmInstr.h **** 
 304:CORE/core_cmInstr.h **** #include <cmsis_ccs.h>
 305:CORE/core_cmInstr.h **** 
 306:CORE/core_cmInstr.h **** 
 307:CORE/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 308:CORE/core_cmInstr.h **** /* GNU gcc specific functions */
 309:CORE/core_cmInstr.h **** 
 310:CORE/core_cmInstr.h **** /* Define macros for porting to both thumb1 and thumb2.
 311:CORE/core_cmInstr.h ****  * For thumb1, use low register (r0-r7), specified by constrant "l"
 312:CORE/core_cmInstr.h ****  * Otherwise, use general registers, specified by constrant "r" */
 313:CORE/core_cmInstr.h **** #if defined (__thumb__) && !defined (__thumb2__)
 314:CORE/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 315:CORE/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 316:CORE/core_cmInstr.h **** #else
 317:CORE/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 318:CORE/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 319:CORE/core_cmInstr.h **** #endif
 320:CORE/core_cmInstr.h **** 
 321:CORE/core_cmInstr.h **** /** \brief  No Operation
 322:CORE/core_cmInstr.h **** 
 323:CORE/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 324:CORE/core_cmInstr.h ****  */
 325:CORE/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
 326:CORE/core_cmInstr.h **** {
 327:CORE/core_cmInstr.h ****   __ASM volatile ("nop");
 328:CORE/core_cmInstr.h **** }
 329:CORE/core_cmInstr.h **** 
 330:CORE/core_cmInstr.h **** 
 331:CORE/core_cmInstr.h **** /** \brief  Wait For Interrupt
 332:CORE/core_cmInstr.h **** 
 333:CORE/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 334:CORE/core_cmInstr.h ****     until one of a number of events occurs.
 335:CORE/core_cmInstr.h ****  */
 336:CORE/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFI(void)
 337:CORE/core_cmInstr.h **** {
 338:CORE/core_cmInstr.h ****   __ASM volatile ("wfi");
 339:CORE/core_cmInstr.h **** }
 340:CORE/core_cmInstr.h **** 
 341:CORE/core_cmInstr.h **** 
 342:CORE/core_cmInstr.h **** /** \brief  Wait For Event
ARM GAS  /tmp/ccg7Oav1.s 			page 13


 343:CORE/core_cmInstr.h **** 
 344:CORE/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 345:CORE/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 346:CORE/core_cmInstr.h ****  */
 347:CORE/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFE(void)
 348:CORE/core_cmInstr.h **** {
 349:CORE/core_cmInstr.h ****   __ASM volatile ("wfe");
 350:CORE/core_cmInstr.h **** }
 351:CORE/core_cmInstr.h **** 
 352:CORE/core_cmInstr.h **** 
 353:CORE/core_cmInstr.h **** /** \brief  Send Event
 354:CORE/core_cmInstr.h **** 
 355:CORE/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 356:CORE/core_cmInstr.h ****  */
 357:CORE/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __SEV(void)
 358:CORE/core_cmInstr.h **** {
 359:CORE/core_cmInstr.h ****   __ASM volatile ("sev");
 360:CORE/core_cmInstr.h **** }
 361:CORE/core_cmInstr.h **** 
 362:CORE/core_cmInstr.h **** 
 363:CORE/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 364:CORE/core_cmInstr.h **** 
 365:CORE/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
 366:CORE/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
 367:CORE/core_cmInstr.h ****     memory, after the instruction has been completed.
 368:CORE/core_cmInstr.h ****  */
 369:CORE/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __ISB(void)
 370:CORE/core_cmInstr.h **** {
 371:CORE/core_cmInstr.h ****   __ASM volatile ("isb");
 372:CORE/core_cmInstr.h **** }
 373:CORE/core_cmInstr.h **** 
 374:CORE/core_cmInstr.h **** 
 375:CORE/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 376:CORE/core_cmInstr.h **** 
 377:CORE/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 378:CORE/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 379:CORE/core_cmInstr.h ****  */
 380:CORE/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
 381:CORE/core_cmInstr.h **** {
 382:CORE/core_cmInstr.h ****   __ASM volatile ("dsb");
 383:CORE/core_cmInstr.h **** }
 384:CORE/core_cmInstr.h **** 
 385:CORE/core_cmInstr.h **** 
 386:CORE/core_cmInstr.h **** /** \brief  Data Memory Barrier
 387:CORE/core_cmInstr.h **** 
 388:CORE/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 389:CORE/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 390:CORE/core_cmInstr.h ****  */
 391:CORE/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
 392:CORE/core_cmInstr.h **** {
 393:CORE/core_cmInstr.h ****   __ASM volatile ("dmb");
 394:CORE/core_cmInstr.h **** }
 395:CORE/core_cmInstr.h **** 
 396:CORE/core_cmInstr.h **** 
 397:CORE/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 398:CORE/core_cmInstr.h **** 
 399:CORE/core_cmInstr.h ****     This function reverses the byte order in integer value.
ARM GAS  /tmp/ccg7Oav1.s 			page 14


 400:CORE/core_cmInstr.h **** 
 401:CORE/core_cmInstr.h ****     \param [in]    value  Value to reverse
 402:CORE/core_cmInstr.h ****     \return               Reversed value
 403:CORE/core_cmInstr.h ****  */
 404:CORE/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __REV(uint32_t value)
 405:CORE/core_cmInstr.h **** {
 406:CORE/core_cmInstr.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 407:CORE/core_cmInstr.h ****   return __builtin_bswap32(value);
 139              		.loc 2 407 0
 140 0080 1BBA     		rev	r3, r3
 141              	.LVL16:
 142              	.LBE231:
 143              	.LBE230:
 126:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 144              		.loc 1 126 0
 145 0082 0693     		str	r3, [sp, #24]
 146              	.LVL17:
 128:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 147              		.loc 1 128 0
 148 0084 6B68     		ldr	r3, [r5, #4]
 149              	.LVL18:
 150              	.LBB232:
 151              	.LBB233:
 152              		.loc 2 407 0
 153 0086 1BBA     		rev	r3, r3
 154              	.LVL19:
 155              	.LBE233:
 156              	.LBE232:
 128:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 157              		.loc 1 128 0
 158 0088 0793     		str	r3, [sp, #28]
 159              	.LVL20:
 130:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 160              		.loc 1 130 0
 161 008a AB68     		ldr	r3, [r5, #8]
 162              	.LVL21:
 163              	.LBB234:
 164              	.LBB235:
 165              		.loc 2 407 0
 166 008c 1BBA     		rev	r3, r3
 167              	.LVL22:
 168              	.LBE235:
 169              	.LBE234:
 130:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 170              		.loc 1 130 0
 171 008e 0893     		str	r3, [sp, #32]
 172              	.LVL23:
 132:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 173              		.loc 1 132 0
 174 0090 EB68     		ldr	r3, [r5, #12]
 175              	.LVL24:
 176              	.LBB236:
 177              	.LBB237:
 178              		.loc 2 407 0
 179 0092 1BBA     		rev	r3, r3
 180              	.LVL25:
 181              	.LBE237:
ARM GAS  /tmp/ccg7Oav1.s 			page 15


 182              	.LBE236:
 132:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 183              		.loc 1 132 0
 184 0094 0993     		str	r3, [sp, #36]
 133:FWLIB/src/stm32f4xx_cryp_aes.c ****     case 192:
 185              		.loc 1 133 0
 186 0096 C9E7     		b	.L2
 187              	.LVL26:
 188              	.L3:
 135:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 189              		.loc 1 135 0
 190 0098 4FF48073 		mov	r3, #256
 191 009c 0D93     		str	r3, [sp, #52]
 136:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 192              		.loc 1 136 0
 193 009e 2B68     		ldr	r3, [r5]
 194              	.LVL27:
 195              	.LBB238:
 196              	.LBB239:
 197              		.loc 2 407 0
 198 00a0 1BBA     		rev	r3, r3
 199              	.LVL28:
 200              	.LBE239:
 201              	.LBE238:
 136:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 202              		.loc 1 136 0
 203 00a2 0493     		str	r3, [sp, #16]
 204              	.LVL29:
 138:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 205              		.loc 1 138 0
 206 00a4 6B68     		ldr	r3, [r5, #4]
 207              	.LVL30:
 208              	.LBB240:
 209              	.LBB241:
 210              		.loc 2 407 0
 211 00a6 1BBA     		rev	r3, r3
 212              	.LVL31:
 213              	.LBE241:
 214              	.LBE240:
 138:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 215              		.loc 1 138 0
 216 00a8 0593     		str	r3, [sp, #20]
 217              	.LVL32:
 140:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 218              		.loc 1 140 0
 219 00aa AB68     		ldr	r3, [r5, #8]
 220              	.LVL33:
 221              	.LBB242:
 222              	.LBB243:
 223              		.loc 2 407 0
 224 00ac 1BBA     		rev	r3, r3
 225              	.LVL34:
 226              	.LBE243:
 227              	.LBE242:
 140:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 228              		.loc 1 140 0
 229 00ae 0693     		str	r3, [sp, #24]
ARM GAS  /tmp/ccg7Oav1.s 			page 16


 230              	.LVL35:
 142:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 231              		.loc 1 142 0
 232 00b0 EB68     		ldr	r3, [r5, #12]
 233              	.LVL36:
 234              	.LBB244:
 235              	.LBB245:
 236              		.loc 2 407 0
 237 00b2 1BBA     		rev	r3, r3
 238              	.LVL37:
 239              	.LBE245:
 240              	.LBE244:
 142:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 241              		.loc 1 142 0
 242 00b4 0793     		str	r3, [sp, #28]
 243              	.LVL38:
 144:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 244              		.loc 1 144 0
 245 00b6 2B69     		ldr	r3, [r5, #16]
 246              	.LVL39:
 247              	.LBB246:
 248              	.LBB247:
 249              		.loc 2 407 0
 250 00b8 1BBA     		rev	r3, r3
 251              	.LVL40:
 252              	.LBE247:
 253              	.LBE246:
 144:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 254              		.loc 1 144 0
 255 00ba 0893     		str	r3, [sp, #32]
 256              	.LVL41:
 146:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 257              		.loc 1 146 0
 258 00bc 6B69     		ldr	r3, [r5, #20]
 259              	.LVL42:
 260              	.LBB248:
 261              	.LBB249:
 262              		.loc 2 407 0
 263 00be 1BBA     		rev	r3, r3
 264              	.LVL43:
 265              	.LBE249:
 266              	.LBE248:
 146:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 267              		.loc 1 146 0
 268 00c0 0993     		str	r3, [sp, #36]
 147:FWLIB/src/stm32f4xx_cryp_aes.c ****     case 256:
 269              		.loc 1 147 0
 270 00c2 B3E7     		b	.L2
 271              	.LVL44:
 272              	.L4:
 149:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 273              		.loc 1 149 0
 274 00c4 4FF40073 		mov	r3, #512
 275 00c8 0D93     		str	r3, [sp, #52]
 150:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 276              		.loc 1 150 0
 277 00ca 2B68     		ldr	r3, [r5]
ARM GAS  /tmp/ccg7Oav1.s 			page 17


 278              	.LVL45:
 279              	.LBB250:
 280              	.LBB251:
 281              		.loc 2 407 0
 282 00cc 1BBA     		rev	r3, r3
 283              	.LVL46:
 284              	.LBE251:
 285              	.LBE250:
 150:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 286              		.loc 1 150 0
 287 00ce 0293     		str	r3, [sp, #8]
 288              	.LVL47:
 152:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 289              		.loc 1 152 0
 290 00d0 6B68     		ldr	r3, [r5, #4]
 291              	.LVL48:
 292              	.LBB252:
 293              	.LBB253:
 294              		.loc 2 407 0
 295 00d2 1BBA     		rev	r3, r3
 296              	.LVL49:
 297              	.LBE253:
 298              	.LBE252:
 152:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 299              		.loc 1 152 0
 300 00d4 0393     		str	r3, [sp, #12]
 301              	.LVL50:
 154:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 302              		.loc 1 154 0
 303 00d6 AB68     		ldr	r3, [r5, #8]
 304              	.LVL51:
 305              	.LBB254:
 306              	.LBB255:
 307              		.loc 2 407 0
 308 00d8 1BBA     		rev	r3, r3
 309              	.LVL52:
 310              	.LBE255:
 311              	.LBE254:
 154:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 312              		.loc 1 154 0
 313 00da 0493     		str	r3, [sp, #16]
 314              	.LVL53:
 156:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 315              		.loc 1 156 0
 316 00dc EB68     		ldr	r3, [r5, #12]
 317              	.LVL54:
 318              	.LBB256:
 319              	.LBB257:
 320              		.loc 2 407 0
 321 00de 1BBA     		rev	r3, r3
 322              	.LVL55:
 323              	.LBE257:
 324              	.LBE256:
 156:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 325              		.loc 1 156 0
 326 00e0 0593     		str	r3, [sp, #20]
 327              	.LVL56:
ARM GAS  /tmp/ccg7Oav1.s 			page 18


 158:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 328              		.loc 1 158 0
 329 00e2 2B69     		ldr	r3, [r5, #16]
 330              	.LVL57:
 331              	.LBB258:
 332              	.LBB259:
 333              		.loc 2 407 0
 334 00e4 1BBA     		rev	r3, r3
 335              	.LVL58:
 336              	.LBE259:
 337              	.LBE258:
 158:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 338              		.loc 1 158 0
 339 00e6 0693     		str	r3, [sp, #24]
 340              	.LVL59:
 160:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 341              		.loc 1 160 0
 342 00e8 6B69     		ldr	r3, [r5, #20]
 343              	.LVL60:
 344              	.LBB260:
 345              	.LBB261:
 346              		.loc 2 407 0
 347 00ea 1BBA     		rev	r3, r3
 348              	.LVL61:
 349              	.LBE261:
 350              	.LBE260:
 160:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 351              		.loc 1 160 0
 352 00ec 0793     		str	r3, [sp, #28]
 353              	.LVL62:
 162:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 354              		.loc 1 162 0
 355 00ee AB69     		ldr	r3, [r5, #24]
 356              	.LVL63:
 357              	.LBB262:
 358              	.LBB263:
 359              		.loc 2 407 0
 360 00f0 1BBA     		rev	r3, r3
 361              	.LVL64:
 362              	.LBE263:
 363              	.LBE262:
 162:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 364              		.loc 1 162 0
 365 00f2 0893     		str	r3, [sp, #32]
 366              	.LVL65:
 164:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 367              		.loc 1 164 0
 368 00f4 EB69     		ldr	r3, [r5, #28]
 369              	.LVL66:
 370              	.LBB264:
 371              	.LBB265:
 372              		.loc 2 407 0
 373 00f6 1BBA     		rev	r3, r3
 374              	.LVL67:
 375              	.LBE265:
 376              	.LBE264:
 164:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
ARM GAS  /tmp/ccg7Oav1.s 			page 19


 377              		.loc 1 164 0
 378 00f8 0993     		str	r3, [sp, #36]
 165:FWLIB/src/stm32f4xx_cryp_aes.c ****     default:
 379              		.loc 1 165 0
 380 00fa 97E7     		b	.L2
 381              	.LVL68:
 382              	.L6:
 203:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 204:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 205:FWLIB/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Encryption ------------------*/
 206:FWLIB/src/stm32f4xx_cryp_aes.c ****   else /* AES encryption */
 207:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 208:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 209:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 383              		.loc 1 209 0
 384 00fc 02A8     		add	r0, sp, #8
 385 00fe FFF7FEFF 		bl	CRYP_KeyInit
 386              	.LVL69:
 210:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 211:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Encryption process */
 212:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
 387              		.loc 1 212 0
 388 0102 0023     		movs	r3, #0
 389 0104 0A93     		str	r3, [sp, #40]
 113:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 390              		.loc 1 113 0
 391 0106 0126     		movs	r6, #1
 392              	.LVL70:
 393              	.L9:
 213:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 214:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 215:FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_ECB;
 394              		.loc 1 215 0
 395 0108 2023     		movs	r3, #32
 396 010a 0B93     		str	r3, [sp, #44]
 216:FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 397              		.loc 1 216 0
 398 010c 8023     		movs	r3, #128
 399 010e 0C93     		str	r3, [sp, #48]
 217:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_Init(&AES_CRYP_InitStructure);
 400              		.loc 1 217 0
 401 0110 0AA8     		add	r0, sp, #40
 402 0112 FFF7FEFF 		bl	CRYP_Init
 403              	.LVL71:
 218:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 219:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Flush IN/OUT FIFOs */
 220:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_FIFOFlush();
 404              		.loc 1 220 0
 405 0116 FFF7FEFF 		bl	CRYP_FIFOFlush
 406              	.LVL72:
 221:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 222:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Enable Crypto processor */
 223:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(ENABLE);
 407              		.loc 1 223 0
 408 011a 0120     		movs	r0, #1
 409 011c FFF7FEFF 		bl	CRYP_Cmd
 410              	.LVL73:
ARM GAS  /tmp/ccg7Oav1.s 			page 20


 224:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 225:FWLIB/src/stm32f4xx_cryp_aes.c ****   if(CRYP_GetCmdStatus() == DISABLE)
 411              		.loc 1 225 0
 412 0120 FFF7FEFF 		bl	CRYP_GetCmdStatus
 413              	.LVL74:
 414 0124 0028     		cmp	r0, #0
 415 0126 3BD0     		beq	.L18
 416 0128 0025     		movs	r5, #0
 417              	.LVL75:
 418 012a 04E0     		b	.L11
 419              	.LVL76:
 420              	.L17:
 197:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 421              		.loc 1 197 0
 422 012c 0026     		movs	r6, #0
 423 012e EBE7     		b	.L9
 424              	.LVL77:
 425              	.L12:
 226:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 227:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
 228:FWLIB/src/stm32f4xx_cryp_aes.c ****        the CRYP peripheral (please check the device sales type. */
 229:FWLIB/src/stm32f4xx_cryp_aes.c ****     return(ERROR);
 230:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 231:FWLIB/src/stm32f4xx_cryp_aes.c ****   
 232:FWLIB/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 233:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 234:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 235:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Write the Input block in the IN FIFO */
 236:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 237:FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 238:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 239:FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 240:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 241:FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 242:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 243:FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 244:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 245:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait until the complete message has been processed */
 246:FWLIB/src/stm32f4xx_cryp_aes.c ****     counter = 0;
 247:FWLIB/src/stm32f4xx_cryp_aes.c ****     do
 248:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 249:FWLIB/src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 250:FWLIB/src/stm32f4xx_cryp_aes.c ****       counter++;
 251:FWLIB/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 252:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 253:FWLIB/src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 426              		.loc 1 253 0
 427 0130 0AB3     		cbz	r2, .L22
 254:FWLIB/src/stm32f4xx_cryp_aes.c ****    {
 255:FWLIB/src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 428              		.loc 1 255 0
 429 0132 0026     		movs	r6, #0
 430              	.LVL78:
 431              	.L14:
 232:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 432              		.loc 1 232 0 discriminator 2
 433 0134 1035     		adds	r5, r5, #16
ARM GAS  /tmp/ccg7Oav1.s 			page 21


 434              	.LVL79:
 435              	.L11:
 232:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 436              		.loc 1 232 0 is_stmt 0 discriminator 1
 437 0136 4545     		cmp	r5, r8
 438 0138 2BD2     		bcs	.L15
 232:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 439              		.loc 1 232 0 discriminator 3
 440 013a 56B3     		cbz	r6, .L15
 236:FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 441              		.loc 1 236 0 is_stmt 1
 442 013c 2068     		ldr	r0, [r4]
 443 013e FFF7FEFF 		bl	CRYP_DataIn
 444              	.LVL80:
 238:FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 445              		.loc 1 238 0
 446 0142 6068     		ldr	r0, [r4, #4]
 447 0144 FFF7FEFF 		bl	CRYP_DataIn
 448              	.LVL81:
 240:FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 449              		.loc 1 240 0
 450 0148 A068     		ldr	r0, [r4, #8]
 451 014a FFF7FEFF 		bl	CRYP_DataIn
 452              	.LVL82:
 242:FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 453              		.loc 1 242 0
 454 014e E068     		ldr	r0, [r4, #12]
 455 0150 FFF7FEFF 		bl	CRYP_DataIn
 456              	.LVL83:
 243:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 457              		.loc 1 243 0
 458 0154 1034     		adds	r4, r4, #16
 459              	.LVL84:
 246:FWLIB/src/stm32f4xx_cryp_aes.c ****     do
 460              		.loc 1 246 0
 461 0156 0023     		movs	r3, #0
 462 0158 0193     		str	r3, [sp, #4]
 463              	.L13:
 249:FWLIB/src/stm32f4xx_cryp_aes.c ****       counter++;
 464              		.loc 1 249 0 discriminator 2
 465 015a 1020     		movs	r0, #16
 466 015c FFF7FEFF 		bl	CRYP_GetFlagStatus
 467              	.LVL85:
 468 0160 0246     		mov	r2, r0
 469              	.LVL86:
 250:FWLIB/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 470              		.loc 1 250 0 discriminator 2
 471 0162 019B     		ldr	r3, [sp, #4]
 472 0164 0133     		adds	r3, r3, #1
 473 0166 0193     		str	r3, [sp, #4]
 251:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 474              		.loc 1 251 0 discriminator 2
 475 0168 019B     		ldr	r3, [sp, #4]
 476 016a B3F5803F 		cmp	r3, #65536
 477 016e DFD0     		beq	.L12
 251:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 478              		.loc 1 251 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccg7Oav1.s 			page 22


 479 0170 0028     		cmp	r0, #0
 480 0172 F2D1     		bne	.L13
 481 0174 DCE7     		b	.L12
 482              	.L22:
 256:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 257:FWLIB/src/stm32f4xx_cryp_aes.c ****     else
 258:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 259:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 260:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Read the Output block from the Output FIFO */
 261:FWLIB/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 483              		.loc 1 261 0 is_stmt 1
 484 0176 FFF7FEFF 		bl	CRYP_DataOut
 485              	.LVL87:
 486 017a 3860     		str	r0, [r7]
 487              	.LVL88:
 262:FWLIB/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 263:FWLIB/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 488              		.loc 1 263 0
 489 017c FFF7FEFF 		bl	CRYP_DataOut
 490              	.LVL89:
 491 0180 7860     		str	r0, [r7, #4]
 492              	.LVL90:
 264:FWLIB/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 265:FWLIB/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 493              		.loc 1 265 0
 494 0182 FFF7FEFF 		bl	CRYP_DataOut
 495              	.LVL91:
 496 0186 B860     		str	r0, [r7, #8]
 497              	.LVL92:
 266:FWLIB/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 267:FWLIB/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut(); 
 498              		.loc 1 267 0
 499 0188 FFF7FEFF 		bl	CRYP_DataOut
 500              	.LVL93:
 501 018c F860     		str	r0, [r7, #12]
 268:FWLIB/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 502              		.loc 1 268 0
 503 018e 1037     		adds	r7, r7, #16
 504              	.LVL94:
 505 0190 D0E7     		b	.L14
 506              	.L15:
 269:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 270:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 271:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 272:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Disable Crypto */
 273:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(DISABLE);
 507              		.loc 1 273 0
 508 0192 0020     		movs	r0, #0
 509 0194 FFF7FEFF 		bl	CRYP_Cmd
 510              	.LVL95:
 511              	.L10:
 274:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 275:FWLIB/src/stm32f4xx_cryp_aes.c ****   return status; 
 276:FWLIB/src/stm32f4xx_cryp_aes.c **** }
 512              		.loc 1 276 0
 513 0198 3046     		mov	r0, r6
 514 019a 0FB0     		add	sp, sp, #60
ARM GAS  /tmp/ccg7Oav1.s 			page 23


 515              	.LCFI2:
 516              		.cfi_remember_state
 517              		.cfi_def_cfa_offset 28
 518              		@ sp needed
 519 019c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 520              	.LVL96:
 521              	.L18:
 522              	.LCFI3:
 523              		.cfi_restore_state
 229:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 524              		.loc 1 229 0
 525 01a0 0026     		movs	r6, #0
 526              	.LVL97:
 527 01a2 F9E7     		b	.L10
 528              		.cfi_endproc
 529              	.LFE112:
 531              		.section	.text.CRYP_AES_CBC,"ax",%progbits
 532              		.align	1
 533              		.global	CRYP_AES_CBC
 534              		.syntax unified
 535              		.thumb
 536              		.thumb_func
 537              		.fpu softvfp
 539              	CRYP_AES_CBC:
 540              	.LFB113:
 277:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 278:FWLIB/src/stm32f4xx_cryp_aes.c **** /**
 279:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @brief  Encrypt and decrypt using AES in CBC Mode
 280:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Mode: encryption or decryption Mode.
 281:FWLIB/src/stm32f4xx_cryp_aes.c ****   *          This parameter can be one of the following values:
 282:FWLIB/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_ENCRYPT: Encryption
 283:FWLIB/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_DECRYPT: Decryption
 284:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  InitVectors: Initialisation Vectors used for AES algorithm.
 285:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Key: Key used for AES algorithm.
 286:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Keysize: length of the Key, must be a 128, 192 or 256.
 287:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Input: pointer to the Input buffer.
 288:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 16.
 289:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Output: pointer to the returned buffer.
 290:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @retval An ErrorStatus enumeration value:
 291:FWLIB/src/stm32f4xx_cryp_aes.c ****   *          - SUCCESS: Operation done
 292:FWLIB/src/stm32f4xx_cryp_aes.c ****   *          - ERROR: Operation failed
 293:FWLIB/src/stm32f4xx_cryp_aes.c ****   */
 294:FWLIB/src/stm32f4xx_cryp_aes.c **** ErrorStatus CRYP_AES_CBC(uint8_t Mode, uint8_t InitVectors[16], uint8_t *Key,
 295:FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint16_t Keysize, uint8_t *Input, uint32_t Ilength,
 296:FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint8_t *Output)
 297:FWLIB/src/stm32f4xx_cryp_aes.c **** {
 541              		.loc 1 297 0
 542              		.cfi_startproc
 543              		@ args = 12, pretend = 0, frame = 72
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545              	.LVL98:
 546 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 547              	.LCFI4:
 548              		.cfi_def_cfa_offset 32
 549              		.cfi_offset 4, -32
 550              		.cfi_offset 5, -28
 551              		.cfi_offset 6, -24
ARM GAS  /tmp/ccg7Oav1.s 			page 24


 552              		.cfi_offset 7, -20
 553              		.cfi_offset 8, -16
 554              		.cfi_offset 9, -12
 555              		.cfi_offset 10, -8
 556              		.cfi_offset 14, -4
 557 0004 92B0     		sub	sp, sp, #72
 558              	.LCFI5:
 559              		.cfi_def_cfa_offset 104
 560 0006 8146     		mov	r9, r0
 561 0008 0E46     		mov	r6, r1
 562 000a 1546     		mov	r5, r2
 563 000c 9A46     		mov	r10, r3
 564 000e DDF86C80 		ldr	r8, [sp, #108]
 298:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_InitTypeDef AES_CRYP_InitStructure;
 299:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
 300:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_IVInitTypeDef AES_CRYP_IVInitStructure;
 301:FWLIB/src/stm32f4xx_cryp_aes.c ****   __IO uint32_t counter = 0;
 565              		.loc 1 301 0
 566 0012 0023     		movs	r3, #0
 567              	.LVL99:
 568 0014 0193     		str	r3, [sp, #4]
 569              	.LVL100:
 302:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t busystatus = 0;
 303:FWLIB/src/stm32f4xx_cryp_aes.c ****   ErrorStatus status = SUCCESS;
 304:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 305:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t inputaddr  = (uint32_t)Input;
 570              		.loc 1 305 0
 571 0016 1A9C     		ldr	r4, [sp, #104]
 572              	.LVL101:
 306:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t outputaddr = (uint32_t)Output;
 573              		.loc 1 306 0
 574 0018 1C9F     		ldr	r7, [sp, #112]
 575              	.LVL102:
 307:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t ivaddr = (uint32_t)InitVectors;
 308:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t i = 0;
 309:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 310:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Crypto structures initialisation*/
 311:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
 576              		.loc 1 311 0
 577 001a 06A8     		add	r0, sp, #24
 578              	.LVL103:
 579 001c FFF7FEFF 		bl	CRYP_KeyStructInit
 580              	.LVL104:
 312:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 313:FWLIB/src/stm32f4xx_cryp_aes.c ****   switch(Keysize)
 581              		.loc 1 313 0
 582 0020 BAF1C00F 		cmp	r10, #192
 583 0024 47D0     		beq	.L25
 584 0026 BAF5807F 		cmp	r10, #256
 585 002a 5AD0     		beq	.L26
 586 002c BAF1800F 		cmp	r10, #128
 587 0030 32D0     		beq	.L43
 588              	.LVL105:
 589              	.L24:
 314:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 315:FWLIB/src/stm32f4xx_cryp_aes.c ****     case 128:
 316:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
ARM GAS  /tmp/ccg7Oav1.s 			page 25


 317:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 318:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 319:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 320:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 321:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 322:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 323:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 324:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 325:FWLIB/src/stm32f4xx_cryp_aes.c ****     case 192:
 326:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
 327:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 328:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 329:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 330:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 331:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 332:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 333:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 334:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 335:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 336:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 337:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 338:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 339:FWLIB/src/stm32f4xx_cryp_aes.c ****     case 256:
 340:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
 341:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 342:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 343:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
 344:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 345:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 346:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 347:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 348:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 349:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 350:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 351:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 352:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 353:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 354:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 355:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 356:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 357:FWLIB/src/stm32f4xx_cryp_aes.c ****     default:
 358:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 359:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 360:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 361:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
 362:FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Left = __REV(*(uint32_t*)(ivaddr));
 590              		.loc 1 362 0
 591 0032 3368     		ldr	r3, [r6]
 592              	.LVL106:
 593              	.LBB266:
 594              	.LBB267:
 595              		.loc 2 407 0
 596 0034 1BBA     		rev	r3, r3
 597              	.LVL107:
 598              	.LBE267:
 599              	.LBE266:
 600              		.loc 1 362 0
ARM GAS  /tmp/ccg7Oav1.s 			page 26


 601 0036 0293     		str	r3, [sp, #8]
 602              	.LVL108:
 363:FWLIB/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 364:FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Right= __REV(*(uint32_t*)(ivaddr));
 603              		.loc 1 364 0
 604 0038 7368     		ldr	r3, [r6, #4]
 605              	.LVL109:
 606              	.LBB268:
 607              	.LBB269:
 608              		.loc 2 407 0
 609 003a 1BBA     		rev	r3, r3
 610              	.LVL110:
 611              	.LBE269:
 612              	.LBE268:
 613              		.loc 1 364 0
 614 003c 0393     		str	r3, [sp, #12]
 615              	.LVL111:
 365:FWLIB/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 366:FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Left = __REV(*(uint32_t*)(ivaddr));
 616              		.loc 1 366 0
 617 003e B368     		ldr	r3, [r6, #8]
 618              	.LVL112:
 619              	.LBB270:
 620              	.LBB271:
 621              		.loc 2 407 0
 622 0040 1BBA     		rev	r3, r3
 623              	.LVL113:
 624              	.LBE271:
 625              	.LBE270:
 626              		.loc 1 366 0
 627 0042 0493     		str	r3, [sp, #16]
 628              	.LVL114:
 367:FWLIB/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 368:FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Right= __REV(*(uint32_t*)(ivaddr));
 629              		.loc 1 368 0
 630 0044 F368     		ldr	r3, [r6, #12]
 631              	.LVL115:
 632              	.LBB272:
 633              	.LBB273:
 634              		.loc 2 407 0
 635 0046 1BBA     		rev	r3, r3
 636              	.LVL116:
 637              	.LBE273:
 638              	.LBE272:
 639              		.loc 1 368 0
 640 0048 0593     		str	r3, [sp, #20]
 369:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 370:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 371:FWLIB/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Decryption ------------------*/
 372:FWLIB/src/stm32f4xx_cryp_aes.c ****   if(Mode == MODE_DECRYPT) /* AES decryption */
 641              		.loc 1 372 0
 642 004a B9F1000F 		cmp	r9, #0
 643 004e 64D1     		bne	.L28
 373:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 374:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Flush IN/OUT FIFOs */
 375:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_FIFOFlush();
 644              		.loc 1 375 0
ARM GAS  /tmp/ccg7Oav1.s 			page 27


 645 0050 FFF7FEFF 		bl	CRYP_FIFOFlush
 646              	.LVL117:
 376:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 377:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Key preparation for decryption process */
 378:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 647              		.loc 1 378 0
 648 0054 0423     		movs	r3, #4
 649 0056 0E93     		str	r3, [sp, #56]
 379:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_Key;
 650              		.loc 1 379 0
 651 0058 3823     		movs	r3, #56
 652 005a 0F93     		str	r3, [sp, #60]
 380:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_32b;
 653              		.loc 1 380 0
 654 005c 0023     		movs	r3, #0
 655 005e 1093     		str	r3, [sp, #64]
 381:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 382:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
 656              		.loc 1 382 0
 657 0060 0EA8     		add	r0, sp, #56
 658 0062 FFF7FEFF 		bl	CRYP_Init
 659              	.LVL118:
 383:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 384:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Key Initialisation */
 385:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 660              		.loc 1 385 0
 661 0066 06A8     		add	r0, sp, #24
 662 0068 FFF7FEFF 		bl	CRYP_KeyInit
 663              	.LVL119:
 386:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 387:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
 388:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 664              		.loc 1 388 0
 665 006c 0120     		movs	r0, #1
 666 006e FFF7FEFF 		bl	CRYP_Cmd
 667              	.LVL120:
 668              	.L30:
 389:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 390:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* wait until the Busy flag is RESET */
 391:FWLIB/src/stm32f4xx_cryp_aes.c ****     do
 392:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 393:FWLIB/src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 669              		.loc 1 393 0 discriminator 2
 670 0072 1020     		movs	r0, #16
 671 0074 FFF7FEFF 		bl	CRYP_GetFlagStatus
 672              	.LVL121:
 673 0078 0246     		mov	r2, r0
 674              	.LVL122:
 394:FWLIB/src/stm32f4xx_cryp_aes.c ****       counter++;
 675              		.loc 1 394 0 discriminator 2
 676 007a 019B     		ldr	r3, [sp, #4]
 677 007c 0133     		adds	r3, r3, #1
 678 007e 0193     		str	r3, [sp, #4]
 395:FWLIB/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 679              		.loc 1 395 0 discriminator 2
 680 0080 019B     		ldr	r3, [sp, #4]
 681 0082 B3F5803F 		cmp	r3, #65536
ARM GAS  /tmp/ccg7Oav1.s 			page 28


 682 0086 01D0     		beq	.L29
 683              		.loc 1 395 0 is_stmt 0 discriminator 1
 684 0088 0028     		cmp	r0, #0
 685 008a F2D1     		bne	.L30
 686              	.L29:
 396:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 397:FWLIB/src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 687              		.loc 1 397 0 is_stmt 1
 688 008c 002A     		cmp	r2, #0
 689 008e 5FD1     		bne	.L39
 398:FWLIB/src/stm32f4xx_cryp_aes.c ****    {
 399:FWLIB/src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 400:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 401:FWLIB/src/stm32f4xx_cryp_aes.c ****     else
 402:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 403:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Crypto Init for decryption process */  
 404:FWLIB/src/stm32f4xx_cryp_aes.c ****       AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 690              		.loc 1 404 0
 691 0090 0423     		movs	r3, #4
 692 0092 0E93     		str	r3, [sp, #56]
 303:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 693              		.loc 1 303 0
 694 0094 0126     		movs	r6, #1
 695              	.LVL123:
 696 0096 46E0     		b	.L31
 697              	.LVL124:
 698              	.L43:
 316:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 699              		.loc 1 316 0
 700 0098 0023     		movs	r3, #0
 701 009a 1193     		str	r3, [sp, #68]
 317:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 702              		.loc 1 317 0
 703 009c 2B68     		ldr	r3, [r5]
 704              	.LVL125:
 705              	.LBB274:
 706              	.LBB275:
 707              		.loc 2 407 0
 708 009e 1BBA     		rev	r3, r3
 709              	.LVL126:
 710              	.LBE275:
 711              	.LBE274:
 317:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 712              		.loc 1 317 0
 713 00a0 0A93     		str	r3, [sp, #40]
 714              	.LVL127:
 319:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 715              		.loc 1 319 0
 716 00a2 6B68     		ldr	r3, [r5, #4]
 717              	.LVL128:
 718              	.LBB276:
 719              	.LBB277:
 720              		.loc 2 407 0
 721 00a4 1BBA     		rev	r3, r3
 722              	.LVL129:
 723              	.LBE277:
 724              	.LBE276:
ARM GAS  /tmp/ccg7Oav1.s 			page 29


 319:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 725              		.loc 1 319 0
 726 00a6 0B93     		str	r3, [sp, #44]
 727              	.LVL130:
 321:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 728              		.loc 1 321 0
 729 00a8 AB68     		ldr	r3, [r5, #8]
 730              	.LVL131:
 731              	.LBB278:
 732              	.LBB279:
 733              		.loc 2 407 0
 734 00aa 1BBA     		rev	r3, r3
 735              	.LVL132:
 736              	.LBE279:
 737              	.LBE278:
 321:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 738              		.loc 1 321 0
 739 00ac 0C93     		str	r3, [sp, #48]
 740              	.LVL133:
 323:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 741              		.loc 1 323 0
 742 00ae EB68     		ldr	r3, [r5, #12]
 743              	.LVL134:
 744              	.LBB280:
 745              	.LBB281:
 746              		.loc 2 407 0
 747 00b0 1BBA     		rev	r3, r3
 748              	.LVL135:
 749              	.LBE281:
 750              	.LBE280:
 323:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 751              		.loc 1 323 0
 752 00b2 0D93     		str	r3, [sp, #52]
 324:FWLIB/src/stm32f4xx_cryp_aes.c ****     case 192:
 753              		.loc 1 324 0
 754 00b4 BDE7     		b	.L24
 755              	.LVL136:
 756              	.L25:
 326:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 757              		.loc 1 326 0
 758 00b6 4FF48073 		mov	r3, #256
 759 00ba 1193     		str	r3, [sp, #68]
 327:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 760              		.loc 1 327 0
 761 00bc 2B68     		ldr	r3, [r5]
 762              	.LVL137:
 763              	.LBB282:
 764              	.LBB283:
 765              		.loc 2 407 0
 766 00be 1BBA     		rev	r3, r3
 767              	.LVL138:
 768              	.LBE283:
 769              	.LBE282:
 327:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 770              		.loc 1 327 0
 771 00c0 0893     		str	r3, [sp, #32]
 772              	.LVL139:
ARM GAS  /tmp/ccg7Oav1.s 			page 30


 329:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 773              		.loc 1 329 0
 774 00c2 6B68     		ldr	r3, [r5, #4]
 775              	.LVL140:
 776              	.LBB284:
 777              	.LBB285:
 778              		.loc 2 407 0
 779 00c4 1BBA     		rev	r3, r3
 780              	.LVL141:
 781              	.LBE285:
 782              	.LBE284:
 329:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 783              		.loc 1 329 0
 784 00c6 0993     		str	r3, [sp, #36]
 785              	.LVL142:
 331:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 786              		.loc 1 331 0
 787 00c8 AB68     		ldr	r3, [r5, #8]
 788              	.LVL143:
 789              	.LBB286:
 790              	.LBB287:
 791              		.loc 2 407 0
 792 00ca 1BBA     		rev	r3, r3
 793              	.LVL144:
 794              	.LBE287:
 795              	.LBE286:
 331:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 796              		.loc 1 331 0
 797 00cc 0A93     		str	r3, [sp, #40]
 798              	.LVL145:
 333:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 799              		.loc 1 333 0
 800 00ce EB68     		ldr	r3, [r5, #12]
 801              	.LVL146:
 802              	.LBB288:
 803              	.LBB289:
 804              		.loc 2 407 0
 805 00d0 1BBA     		rev	r3, r3
 806              	.LVL147:
 807              	.LBE289:
 808              	.LBE288:
 333:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 809              		.loc 1 333 0
 810 00d2 0B93     		str	r3, [sp, #44]
 811              	.LVL148:
 335:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 812              		.loc 1 335 0
 813 00d4 2B69     		ldr	r3, [r5, #16]
 814              	.LVL149:
 815              	.LBB290:
 816              	.LBB291:
 817              		.loc 2 407 0
 818 00d6 1BBA     		rev	r3, r3
 819              	.LVL150:
 820              	.LBE291:
 821              	.LBE290:
 335:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
ARM GAS  /tmp/ccg7Oav1.s 			page 31


 822              		.loc 1 335 0
 823 00d8 0C93     		str	r3, [sp, #48]
 824              	.LVL151:
 337:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 825              		.loc 1 337 0
 826 00da 6B69     		ldr	r3, [r5, #20]
 827              	.LVL152:
 828              	.LBB292:
 829              	.LBB293:
 830              		.loc 2 407 0
 831 00dc 1BBA     		rev	r3, r3
 832              	.LVL153:
 833              	.LBE293:
 834              	.LBE292:
 337:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 835              		.loc 1 337 0
 836 00de 0D93     		str	r3, [sp, #52]
 338:FWLIB/src/stm32f4xx_cryp_aes.c ****     case 256:
 837              		.loc 1 338 0
 838 00e0 A7E7     		b	.L24
 839              	.LVL154:
 840              	.L26:
 340:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 841              		.loc 1 340 0
 842 00e2 4FF40073 		mov	r3, #512
 843 00e6 1193     		str	r3, [sp, #68]
 341:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 844              		.loc 1 341 0
 845 00e8 2B68     		ldr	r3, [r5]
 846              	.LVL155:
 847              	.LBB294:
 848              	.LBB295:
 849              		.loc 2 407 0
 850 00ea 1BBA     		rev	r3, r3
 851              	.LVL156:
 852              	.LBE295:
 853              	.LBE294:
 341:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 854              		.loc 1 341 0
 855 00ec 0693     		str	r3, [sp, #24]
 856              	.LVL157:
 343:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 857              		.loc 1 343 0
 858 00ee 6B68     		ldr	r3, [r5, #4]
 859              	.LVL158:
 860              	.LBB296:
 861              	.LBB297:
 862              		.loc 2 407 0
 863 00f0 1BBA     		rev	r3, r3
 864              	.LVL159:
 865              	.LBE297:
 866              	.LBE296:
 343:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 867              		.loc 1 343 0
 868 00f2 0793     		str	r3, [sp, #28]
 869              	.LVL160:
 345:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
ARM GAS  /tmp/ccg7Oav1.s 			page 32


 870              		.loc 1 345 0
 871 00f4 AB68     		ldr	r3, [r5, #8]
 872              	.LVL161:
 873              	.LBB298:
 874              	.LBB299:
 875              		.loc 2 407 0
 876 00f6 1BBA     		rev	r3, r3
 877              	.LVL162:
 878              	.LBE299:
 879              	.LBE298:
 345:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 880              		.loc 1 345 0
 881 00f8 0893     		str	r3, [sp, #32]
 882              	.LVL163:
 347:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 883              		.loc 1 347 0
 884 00fa EB68     		ldr	r3, [r5, #12]
 885              	.LVL164:
 886              	.LBB300:
 887              	.LBB301:
 888              		.loc 2 407 0
 889 00fc 1BBA     		rev	r3, r3
 890              	.LVL165:
 891              	.LBE301:
 892              	.LBE300:
 347:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 893              		.loc 1 347 0
 894 00fe 0993     		str	r3, [sp, #36]
 895              	.LVL166:
 349:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 896              		.loc 1 349 0
 897 0100 2B69     		ldr	r3, [r5, #16]
 898              	.LVL167:
 899              	.LBB302:
 900              	.LBB303:
 901              		.loc 2 407 0
 902 0102 1BBA     		rev	r3, r3
 903              	.LVL168:
 904              	.LBE303:
 905              	.LBE302:
 349:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 906              		.loc 1 349 0
 907 0104 0A93     		str	r3, [sp, #40]
 908              	.LVL169:
 351:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 909              		.loc 1 351 0
 910 0106 6B69     		ldr	r3, [r5, #20]
 911              	.LVL170:
 912              	.LBB304:
 913              	.LBB305:
 914              		.loc 2 407 0
 915 0108 1BBA     		rev	r3, r3
 916              	.LVL171:
 917              	.LBE305:
 918              	.LBE304:
 351:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 919              		.loc 1 351 0
ARM GAS  /tmp/ccg7Oav1.s 			page 33


 920 010a 0B93     		str	r3, [sp, #44]
 921              	.LVL172:
 353:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 922              		.loc 1 353 0
 923 010c AB69     		ldr	r3, [r5, #24]
 924              	.LVL173:
 925              	.LBB306:
 926              	.LBB307:
 927              		.loc 2 407 0
 928 010e 1BBA     		rev	r3, r3
 929              	.LVL174:
 930              	.LBE307:
 931              	.LBE306:
 353:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 932              		.loc 1 353 0
 933 0110 0C93     		str	r3, [sp, #48]
 934              	.LVL175:
 355:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 935              		.loc 1 355 0
 936 0112 EB69     		ldr	r3, [r5, #28]
 937              	.LVL176:
 938              	.LBB308:
 939              	.LBB309:
 940              		.loc 2 407 0
 941 0114 1BBA     		rev	r3, r3
 942              	.LVL177:
 943              	.LBE309:
 944              	.LBE308:
 355:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 945              		.loc 1 355 0
 946 0116 0D93     		str	r3, [sp, #52]
 356:FWLIB/src/stm32f4xx_cryp_aes.c ****     default:
 947              		.loc 1 356 0
 948 0118 8BE7     		b	.L24
 949              	.LVL178:
 950              	.L28:
 405:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 406:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 407:FWLIB/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Encryption ------------------*/
 408:FWLIB/src/stm32f4xx_cryp_aes.c ****   else /* AES encryption */
 409:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 410:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 951              		.loc 1 410 0
 952 011a 06A8     		add	r0, sp, #24
 953 011c FFF7FEFF 		bl	CRYP_KeyInit
 954              	.LVL179:
 411:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 412:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Encryption process */
 413:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
 955              		.loc 1 413 0
 956 0120 0023     		movs	r3, #0
 957 0122 0E93     		str	r3, [sp, #56]
 303:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 958              		.loc 1 303 0
 959 0124 0126     		movs	r6, #1
 960              	.LVL180:
 961              	.L31:
ARM GAS  /tmp/ccg7Oav1.s 			page 34


 414:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 415:FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_CBC;
 962              		.loc 1 415 0
 963 0126 2823     		movs	r3, #40
 964 0128 0F93     		str	r3, [sp, #60]
 416:FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 965              		.loc 1 416 0
 966 012a 8023     		movs	r3, #128
 967 012c 1093     		str	r3, [sp, #64]
 417:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_Init(&AES_CRYP_InitStructure);
 968              		.loc 1 417 0
 969 012e 0EA8     		add	r0, sp, #56
 970 0130 FFF7FEFF 		bl	CRYP_Init
 971              	.LVL181:
 418:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 419:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
 420:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_IVInit(&AES_CRYP_IVInitStructure);
 972              		.loc 1 420 0
 973 0134 02A8     		add	r0, sp, #8
 974 0136 FFF7FEFF 		bl	CRYP_IVInit
 975              	.LVL182:
 421:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 422:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Flush IN/OUT FIFOs */
 423:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_FIFOFlush();
 976              		.loc 1 423 0
 977 013a FFF7FEFF 		bl	CRYP_FIFOFlush
 978              	.LVL183:
 424:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 425:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Enable Crypto processor */
 426:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(ENABLE);
 979              		.loc 1 426 0
 980 013e 0120     		movs	r0, #1
 981 0140 FFF7FEFF 		bl	CRYP_Cmd
 982              	.LVL184:
 427:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 428:FWLIB/src/stm32f4xx_cryp_aes.c ****   if(CRYP_GetCmdStatus() == DISABLE)
 983              		.loc 1 428 0
 984 0144 FFF7FEFF 		bl	CRYP_GetCmdStatus
 985              	.LVL185:
 986 0148 0028     		cmp	r0, #0
 987 014a 3BD0     		beq	.L40
 988 014c 0025     		movs	r5, #0
 989              	.LVL186:
 990 014e 04E0     		b	.L33
 991              	.LVL187:
 992              	.L39:
 399:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 993              		.loc 1 399 0
 994 0150 0026     		movs	r6, #0
 995              	.LVL188:
 996 0152 E8E7     		b	.L31
 997              	.LVL189:
 998              	.L34:
 429:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 430:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
 431:FWLIB/src/stm32f4xx_cryp_aes.c ****        the CRYP peripheral (please check the device sales type. */
 432:FWLIB/src/stm32f4xx_cryp_aes.c ****     return(ERROR);
ARM GAS  /tmp/ccg7Oav1.s 			page 35


 433:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 434:FWLIB/src/stm32f4xx_cryp_aes.c ****   
 435:FWLIB/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 436:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 437:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 438:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Write the Input block in the IN FIFO */
 439:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 440:FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 441:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 442:FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 443:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 444:FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 445:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 446:FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 447:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait until the complete message has been processed */
 448:FWLIB/src/stm32f4xx_cryp_aes.c ****     counter = 0;
 449:FWLIB/src/stm32f4xx_cryp_aes.c ****     do
 450:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 451:FWLIB/src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 452:FWLIB/src/stm32f4xx_cryp_aes.c ****       counter++;
 453:FWLIB/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 454:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 455:FWLIB/src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 999              		.loc 1 455 0
 1000 0154 0AB3     		cbz	r2, .L44
 456:FWLIB/src/stm32f4xx_cryp_aes.c ****    {
 457:FWLIB/src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 1001              		.loc 1 457 0
 1002 0156 0026     		movs	r6, #0
 1003              	.LVL190:
 1004              	.L36:
 435:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 1005              		.loc 1 435 0 discriminator 2
 1006 0158 1035     		adds	r5, r5, #16
 1007              	.LVL191:
 1008              	.L33:
 435:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 1009              		.loc 1 435 0 is_stmt 0 discriminator 1
 1010 015a 4545     		cmp	r5, r8
 1011 015c 2BD2     		bcs	.L37
 435:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 1012              		.loc 1 435 0 discriminator 3
 1013 015e 56B3     		cbz	r6, .L37
 439:FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1014              		.loc 1 439 0 is_stmt 1
 1015 0160 2068     		ldr	r0, [r4]
 1016 0162 FFF7FEFF 		bl	CRYP_DataIn
 1017              	.LVL192:
 441:FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1018              		.loc 1 441 0
 1019 0166 6068     		ldr	r0, [r4, #4]
 1020 0168 FFF7FEFF 		bl	CRYP_DataIn
 1021              	.LVL193:
 443:FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1022              		.loc 1 443 0
 1023 016c A068     		ldr	r0, [r4, #8]
 1024 016e FFF7FEFF 		bl	CRYP_DataIn
ARM GAS  /tmp/ccg7Oav1.s 			page 36


 1025              	.LVL194:
 445:FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1026              		.loc 1 445 0
 1027 0172 E068     		ldr	r0, [r4, #12]
 1028 0174 FFF7FEFF 		bl	CRYP_DataIn
 1029              	.LVL195:
 446:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait until the complete message has been processed */
 1030              		.loc 1 446 0
 1031 0178 1034     		adds	r4, r4, #16
 1032              	.LVL196:
 448:FWLIB/src/stm32f4xx_cryp_aes.c ****     do
 1033              		.loc 1 448 0
 1034 017a 0023     		movs	r3, #0
 1035 017c 0193     		str	r3, [sp, #4]
 1036              	.L35:
 451:FWLIB/src/stm32f4xx_cryp_aes.c ****       counter++;
 1037              		.loc 1 451 0 discriminator 2
 1038 017e 1020     		movs	r0, #16
 1039 0180 FFF7FEFF 		bl	CRYP_GetFlagStatus
 1040              	.LVL197:
 1041 0184 0246     		mov	r2, r0
 1042              	.LVL198:
 452:FWLIB/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 1043              		.loc 1 452 0 discriminator 2
 1044 0186 019B     		ldr	r3, [sp, #4]
 1045 0188 0133     		adds	r3, r3, #1
 1046 018a 0193     		str	r3, [sp, #4]
 453:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 1047              		.loc 1 453 0 discriminator 2
 1048 018c 019B     		ldr	r3, [sp, #4]
 1049 018e B3F5803F 		cmp	r3, #65536
 1050 0192 DFD0     		beq	.L34
 453:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 1051              		.loc 1 453 0 is_stmt 0 discriminator 1
 1052 0194 0028     		cmp	r0, #0
 1053 0196 F2D1     		bne	.L35
 1054 0198 DCE7     		b	.L34
 1055              	.L44:
 458:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 459:FWLIB/src/stm32f4xx_cryp_aes.c ****     else
 460:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 461:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 462:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Read the Output block from the Output FIFO */
 463:FWLIB/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1056              		.loc 1 463 0 is_stmt 1
 1057 019a FFF7FEFF 		bl	CRYP_DataOut
 1058              	.LVL199:
 1059 019e 3860     		str	r0, [r7]
 1060              	.LVL200:
 464:FWLIB/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 465:FWLIB/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1061              		.loc 1 465 0
 1062 01a0 FFF7FEFF 		bl	CRYP_DataOut
 1063              	.LVL201:
 1064 01a4 7860     		str	r0, [r7, #4]
 1065              	.LVL202:
 466:FWLIB/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
ARM GAS  /tmp/ccg7Oav1.s 			page 37


 467:FWLIB/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1066              		.loc 1 467 0
 1067 01a6 FFF7FEFF 		bl	CRYP_DataOut
 1068              	.LVL203:
 1069 01aa B860     		str	r0, [r7, #8]
 1070              	.LVL204:
 468:FWLIB/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 469:FWLIB/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1071              		.loc 1 469 0
 1072 01ac FFF7FEFF 		bl	CRYP_DataOut
 1073              	.LVL205:
 1074 01b0 F860     		str	r0, [r7, #12]
 470:FWLIB/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 1075              		.loc 1 470 0
 1076 01b2 1037     		adds	r7, r7, #16
 1077              	.LVL206:
 1078 01b4 D0E7     		b	.L36
 1079              	.L37:
 471:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 472:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 473:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 474:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Disable Crypto */
 475:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(DISABLE);
 1080              		.loc 1 475 0
 1081 01b6 0020     		movs	r0, #0
 1082 01b8 FFF7FEFF 		bl	CRYP_Cmd
 1083              	.LVL207:
 1084              	.L32:
 476:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 477:FWLIB/src/stm32f4xx_cryp_aes.c ****   return status;
 478:FWLIB/src/stm32f4xx_cryp_aes.c **** }
 1085              		.loc 1 478 0
 1086 01bc 3046     		mov	r0, r6
 1087 01be 12B0     		add	sp, sp, #72
 1088              	.LCFI6:
 1089              		.cfi_remember_state
 1090              		.cfi_def_cfa_offset 32
 1091              		@ sp needed
 1092 01c0 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1093              	.LVL208:
 1094              	.L40:
 1095              	.LCFI7:
 1096              		.cfi_restore_state
 432:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 1097              		.loc 1 432 0
 1098 01c4 0026     		movs	r6, #0
 1099              	.LVL209:
 1100 01c6 F9E7     		b	.L32
 1101              		.cfi_endproc
 1102              	.LFE113:
 1104              		.section	.text.CRYP_AES_CTR,"ax",%progbits
 1105              		.align	1
 1106              		.global	CRYP_AES_CTR
 1107              		.syntax unified
 1108              		.thumb
 1109              		.thumb_func
 1110              		.fpu softvfp
ARM GAS  /tmp/ccg7Oav1.s 			page 38


 1112              	CRYP_AES_CTR:
 1113              	.LFB114:
 479:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 480:FWLIB/src/stm32f4xx_cryp_aes.c **** /**
 481:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @brief  Encrypt and decrypt using AES in CTR Mode
 482:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Mode: encryption or decryption Mode.
 483:FWLIB/src/stm32f4xx_cryp_aes.c ****   *           This parameter can be one of the following values:
 484:FWLIB/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_ENCRYPT: Encryption
 485:FWLIB/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_DECRYPT: Decryption
 486:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  InitVectors: Initialisation Vectors used for AES algorithm.
 487:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Key: Key used for AES algorithm.
 488:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Keysize: length of the Key, must be a 128, 192 or 256.
 489:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Input: pointer to the Input buffer.
 490:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 16.
 491:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Output: pointer to the returned buffer.
 492:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @retval An ErrorStatus enumeration value:
 493:FWLIB/src/stm32f4xx_cryp_aes.c ****   *          - SUCCESS: Operation done
 494:FWLIB/src/stm32f4xx_cryp_aes.c ****   *          - ERROR: Operation failed
 495:FWLIB/src/stm32f4xx_cryp_aes.c ****   */
 496:FWLIB/src/stm32f4xx_cryp_aes.c **** ErrorStatus CRYP_AES_CTR(uint8_t Mode, uint8_t InitVectors[16], uint8_t *Key, 
 497:FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint16_t Keysize, uint8_t *Input, uint32_t Ilength,
 498:FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint8_t *Output)
 499:FWLIB/src/stm32f4xx_cryp_aes.c **** {
 1114              		.loc 1 499 0
 1115              		.cfi_startproc
 1116              		@ args = 12, pretend = 0, frame = 72
 1117              		@ frame_needed = 0, uses_anonymous_args = 0
 1118              	.LVL210:
 1119 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1120              	.LCFI8:
 1121              		.cfi_def_cfa_offset 32
 1122              		.cfi_offset 4, -32
 1123              		.cfi_offset 5, -28
 1124              		.cfi_offset 6, -24
 1125              		.cfi_offset 7, -20
 1126              		.cfi_offset 8, -16
 1127              		.cfi_offset 9, -12
 1128              		.cfi_offset 10, -8
 1129              		.cfi_offset 14, -4
 1130 0004 92B0     		sub	sp, sp, #72
 1131              	.LCFI9:
 1132              		.cfi_def_cfa_offset 104
 1133 0006 8146     		mov	r9, r0
 1134 0008 0E46     		mov	r6, r1
 1135 000a 1546     		mov	r5, r2
 1136 000c 9A46     		mov	r10, r3
 1137 000e DDF86C80 		ldr	r8, [sp, #108]
 500:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_InitTypeDef AES_CRYP_InitStructure;
 501:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
 502:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_IVInitTypeDef AES_CRYP_IVInitStructure;
 503:FWLIB/src/stm32f4xx_cryp_aes.c ****   __IO uint32_t counter = 0;
 1138              		.loc 1 503 0
 1139 0012 0023     		movs	r3, #0
 1140              	.LVL211:
 1141 0014 0193     		str	r3, [sp, #4]
 1142              	.LVL212:
 504:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t busystatus = 0;
ARM GAS  /tmp/ccg7Oav1.s 			page 39


 505:FWLIB/src/stm32f4xx_cryp_aes.c ****   ErrorStatus status = SUCCESS;
 506:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 507:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t inputaddr  = (uint32_t)Input;
 1143              		.loc 1 507 0
 1144 0016 1A9C     		ldr	r4, [sp, #104]
 1145              	.LVL213:
 508:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t outputaddr = (uint32_t)Output;
 1146              		.loc 1 508 0
 1147 0018 1C9F     		ldr	r7, [sp, #112]
 1148              	.LVL214:
 509:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t ivaddr     = (uint32_t)InitVectors;
 510:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t i = 0;
 511:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 512:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Crypto structures initialisation*/
 513:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
 1149              		.loc 1 513 0
 1150 001a 06A8     		add	r0, sp, #24
 1151              	.LVL215:
 1152 001c FFF7FEFF 		bl	CRYP_KeyStructInit
 1153              	.LVL216:
 514:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 515:FWLIB/src/stm32f4xx_cryp_aes.c ****   switch(Keysize)
 1154              		.loc 1 515 0
 1155 0020 BAF1C00F 		cmp	r10, #192
 1156 0024 3ED0     		beq	.L47
 1157 0026 BAF5807F 		cmp	r10, #256
 1158 002a 51D0     		beq	.L48
 1159 002c BAF1800F 		cmp	r10, #128
 1160 0030 29D0     		beq	.L62
 1161              	.LVL217:
 1162              	.L46:
 516:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 517:FWLIB/src/stm32f4xx_cryp_aes.c ****     case 128:
 518:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
 519:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 520:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 521:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 522:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 523:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 524:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 525:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 526:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 527:FWLIB/src/stm32f4xx_cryp_aes.c ****     case 192:
 528:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
 529:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 530:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 531:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 532:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 533:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 534:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 535:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 536:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 537:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 538:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 539:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 540:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 541:FWLIB/src/stm32f4xx_cryp_aes.c ****     case 256:
ARM GAS  /tmp/ccg7Oav1.s 			page 40


 542:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
 543:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 544:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 545:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
 546:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 547:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 548:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 549:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 550:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 551:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 552:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 553:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 554:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 555:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 556:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 557:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 558:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 559:FWLIB/src/stm32f4xx_cryp_aes.c ****     default:
 560:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 561:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 562:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
 563:FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Left = __REV(*(uint32_t*)(ivaddr));
 1163              		.loc 1 563 0
 1164 0032 3368     		ldr	r3, [r6]
 1165              	.LVL218:
 1166              	.LBB310:
 1167              	.LBB311:
 1168              		.loc 2 407 0
 1169 0034 1BBA     		rev	r3, r3
 1170              	.LVL219:
 1171              	.LBE311:
 1172              	.LBE310:
 1173              		.loc 1 563 0
 1174 0036 0293     		str	r3, [sp, #8]
 1175              	.LVL220:
 564:FWLIB/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 565:FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Right= __REV(*(uint32_t*)(ivaddr));
 1176              		.loc 1 565 0
 1177 0038 7368     		ldr	r3, [r6, #4]
 1178              	.LVL221:
 1179              	.LBB312:
 1180              	.LBB313:
 1181              		.loc 2 407 0
 1182 003a 1BBA     		rev	r3, r3
 1183              	.LVL222:
 1184              	.LBE313:
 1185              	.LBE312:
 1186              		.loc 1 565 0
 1187 003c 0393     		str	r3, [sp, #12]
 1188              	.LVL223:
 566:FWLIB/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 567:FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Left = __REV(*(uint32_t*)(ivaddr));
 1189              		.loc 1 567 0
 1190 003e B368     		ldr	r3, [r6, #8]
 1191              	.LVL224:
 1192              	.LBB314:
 1193              	.LBB315:
ARM GAS  /tmp/ccg7Oav1.s 			page 41


 1194              		.loc 2 407 0
 1195 0040 1BBA     		rev	r3, r3
 1196              	.LVL225:
 1197              	.LBE315:
 1198              	.LBE314:
 1199              		.loc 1 567 0
 1200 0042 0493     		str	r3, [sp, #16]
 1201              	.LVL226:
 568:FWLIB/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 569:FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Right= __REV(*(uint32_t*)(ivaddr));
 1202              		.loc 1 569 0
 1203 0044 F368     		ldr	r3, [r6, #12]
 1204              	.LVL227:
 1205              	.LBB316:
 1206              	.LBB317:
 1207              		.loc 2 407 0
 1208 0046 1BBA     		rev	r3, r3
 1209              	.LVL228:
 1210              	.LBE317:
 1211              	.LBE316:
 1212              		.loc 1 569 0
 1213 0048 0593     		str	r3, [sp, #20]
 570:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 571:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Key Initialisation */
 572:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 1214              		.loc 1 572 0
 1215 004a 06A8     		add	r0, sp, #24
 1216 004c FFF7FEFF 		bl	CRYP_KeyInit
 1217              	.LVL229:
 573:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 574:FWLIB/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Decryption ------------------*/
 575:FWLIB/src/stm32f4xx_cryp_aes.c ****   if(Mode == MODE_DECRYPT) /* AES decryption */
 1218              		.loc 1 575 0
 1219 0050 B9F1000F 		cmp	r9, #0
 1220 0054 58D1     		bne	.L50
 576:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 577:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for decryption process */
 578:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 1221              		.loc 1 578 0
 1222 0056 0423     		movs	r3, #4
 1223 0058 0E93     		str	r3, [sp, #56]
 1224              	.L51:
 579:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 580:FWLIB/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Encryption ------------------*/
 581:FWLIB/src/stm32f4xx_cryp_aes.c ****   else /* AES encryption */
 582:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 583:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Encryption process */
 584:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Encrypt;
 585:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 586:FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_CTR;
 1225              		.loc 1 586 0
 1226 005a 3023     		movs	r3, #48
 1227 005c 0F93     		str	r3, [sp, #60]
 587:FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 1228              		.loc 1 587 0
 1229 005e 8023     		movs	r3, #128
 1230 0060 1093     		str	r3, [sp, #64]
ARM GAS  /tmp/ccg7Oav1.s 			page 42


 588:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_Init(&AES_CRYP_InitStructure);
 1231              		.loc 1 588 0
 1232 0062 0EA8     		add	r0, sp, #56
 1233 0064 FFF7FEFF 		bl	CRYP_Init
 1234              	.LVL230:
 589:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 590:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
 591:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_IVInit(&AES_CRYP_IVInitStructure);
 1235              		.loc 1 591 0
 1236 0068 02A8     		add	r0, sp, #8
 1237 006a FFF7FEFF 		bl	CRYP_IVInit
 1238              	.LVL231:
 592:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 593:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Flush IN/OUT FIFOs */
 594:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_FIFOFlush();
 1239              		.loc 1 594 0
 1240 006e FFF7FEFF 		bl	CRYP_FIFOFlush
 1241              	.LVL232:
 595:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 596:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Enable Crypto processor */
 597:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(ENABLE);
 1242              		.loc 1 597 0
 1243 0072 0120     		movs	r0, #1
 1244 0074 FFF7FEFF 		bl	CRYP_Cmd
 1245              	.LVL233:
 598:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 599:FWLIB/src/stm32f4xx_cryp_aes.c ****   if(CRYP_GetCmdStatus() == DISABLE)
 1246              		.loc 1 599 0
 1247 0078 FFF7FEFF 		bl	CRYP_GetCmdStatus
 1248              	.LVL234:
 1249 007c 0028     		cmp	r0, #0
 1250 007e 7ED0     		beq	.L59
 1251 0080 0025     		movs	r5, #0
 1252              	.LVL235:
 1253 0082 0126     		movs	r6, #1
 1254              	.LVL236:
 1255 0084 46E0     		b	.L53
 1256              	.LVL237:
 1257              	.L62:
 518:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 1258              		.loc 1 518 0
 1259 0086 0023     		movs	r3, #0
 1260 0088 1193     		str	r3, [sp, #68]
 519:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1261              		.loc 1 519 0
 1262 008a 2B68     		ldr	r3, [r5]
 1263              	.LVL238:
 1264              	.LBB318:
 1265              	.LBB319:
 1266              		.loc 2 407 0
 1267 008c 1BBA     		rev	r3, r3
 1268              	.LVL239:
 1269              	.LBE319:
 1270              	.LBE318:
 519:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1271              		.loc 1 519 0
 1272 008e 0A93     		str	r3, [sp, #40]
ARM GAS  /tmp/ccg7Oav1.s 			page 43


 1273              	.LVL240:
 521:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1274              		.loc 1 521 0
 1275 0090 6B68     		ldr	r3, [r5, #4]
 1276              	.LVL241:
 1277              	.LBB320:
 1278              	.LBB321:
 1279              		.loc 2 407 0
 1280 0092 1BBA     		rev	r3, r3
 1281              	.LVL242:
 1282              	.LBE321:
 1283              	.LBE320:
 521:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1284              		.loc 1 521 0
 1285 0094 0B93     		str	r3, [sp, #44]
 1286              	.LVL243:
 523:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1287              		.loc 1 523 0
 1288 0096 AB68     		ldr	r3, [r5, #8]
 1289              	.LVL244:
 1290              	.LBB322:
 1291              	.LBB323:
 1292              		.loc 2 407 0
 1293 0098 1BBA     		rev	r3, r3
 1294              	.LVL245:
 1295              	.LBE323:
 1296              	.LBE322:
 523:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1297              		.loc 1 523 0
 1298 009a 0C93     		str	r3, [sp, #48]
 1299              	.LVL246:
 525:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 1300              		.loc 1 525 0
 1301 009c EB68     		ldr	r3, [r5, #12]
 1302              	.LVL247:
 1303              	.LBB324:
 1304              	.LBB325:
 1305              		.loc 2 407 0
 1306 009e 1BBA     		rev	r3, r3
 1307              	.LVL248:
 1308              	.LBE325:
 1309              	.LBE324:
 525:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 1310              		.loc 1 525 0
 1311 00a0 0D93     		str	r3, [sp, #52]
 526:FWLIB/src/stm32f4xx_cryp_aes.c ****     case 192:
 1312              		.loc 1 526 0
 1313 00a2 C6E7     		b	.L46
 1314              	.LVL249:
 1315              	.L47:
 528:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 1316              		.loc 1 528 0
 1317 00a4 4FF48073 		mov	r3, #256
 1318 00a8 1193     		str	r3, [sp, #68]
 529:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1319              		.loc 1 529 0
 1320 00aa 2B68     		ldr	r3, [r5]
ARM GAS  /tmp/ccg7Oav1.s 			page 44


 1321              	.LVL250:
 1322              	.LBB326:
 1323              	.LBB327:
 1324              		.loc 2 407 0
 1325 00ac 1BBA     		rev	r3, r3
 1326              	.LVL251:
 1327              	.LBE327:
 1328              	.LBE326:
 529:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1329              		.loc 1 529 0
 1330 00ae 0893     		str	r3, [sp, #32]
 1331              	.LVL252:
 531:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1332              		.loc 1 531 0
 1333 00b0 6B68     		ldr	r3, [r5, #4]
 1334              	.LVL253:
 1335              	.LBB328:
 1336              	.LBB329:
 1337              		.loc 2 407 0
 1338 00b2 1BBA     		rev	r3, r3
 1339              	.LVL254:
 1340              	.LBE329:
 1341              	.LBE328:
 531:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1342              		.loc 1 531 0
 1343 00b4 0993     		str	r3, [sp, #36]
 1344              	.LVL255:
 533:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1345              		.loc 1 533 0
 1346 00b6 AB68     		ldr	r3, [r5, #8]
 1347              	.LVL256:
 1348              	.LBB330:
 1349              	.LBB331:
 1350              		.loc 2 407 0
 1351 00b8 1BBA     		rev	r3, r3
 1352              	.LVL257:
 1353              	.LBE331:
 1354              	.LBE330:
 533:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1355              		.loc 1 533 0
 1356 00ba 0A93     		str	r3, [sp, #40]
 1357              	.LVL258:
 535:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1358              		.loc 1 535 0
 1359 00bc EB68     		ldr	r3, [r5, #12]
 1360              	.LVL259:
 1361              	.LBB332:
 1362              	.LBB333:
 1363              		.loc 2 407 0
 1364 00be 1BBA     		rev	r3, r3
 1365              	.LVL260:
 1366              	.LBE333:
 1367              	.LBE332:
 535:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1368              		.loc 1 535 0
 1369 00c0 0B93     		str	r3, [sp, #44]
 1370              	.LVL261:
ARM GAS  /tmp/ccg7Oav1.s 			page 45


 537:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1371              		.loc 1 537 0
 1372 00c2 2B69     		ldr	r3, [r5, #16]
 1373              	.LVL262:
 1374              	.LBB334:
 1375              	.LBB335:
 1376              		.loc 2 407 0
 1377 00c4 1BBA     		rev	r3, r3
 1378              	.LVL263:
 1379              	.LBE335:
 1380              	.LBE334:
 537:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1381              		.loc 1 537 0
 1382 00c6 0C93     		str	r3, [sp, #48]
 1383              	.LVL264:
 539:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 1384              		.loc 1 539 0
 1385 00c8 6B69     		ldr	r3, [r5, #20]
 1386              	.LVL265:
 1387              	.LBB336:
 1388              	.LBB337:
 1389              		.loc 2 407 0
 1390 00ca 1BBA     		rev	r3, r3
 1391              	.LVL266:
 1392              	.LBE337:
 1393              	.LBE336:
 539:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 1394              		.loc 1 539 0
 1395 00cc 0D93     		str	r3, [sp, #52]
 540:FWLIB/src/stm32f4xx_cryp_aes.c ****     case 256:
 1396              		.loc 1 540 0
 1397 00ce B0E7     		b	.L46
 1398              	.LVL267:
 1399              	.L48:
 542:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 1400              		.loc 1 542 0
 1401 00d0 4FF40073 		mov	r3, #512
 1402 00d4 1193     		str	r3, [sp, #68]
 543:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1403              		.loc 1 543 0
 1404 00d6 2B68     		ldr	r3, [r5]
 1405              	.LVL268:
 1406              	.LBB338:
 1407              	.LBB339:
 1408              		.loc 2 407 0
 1409 00d8 1BBA     		rev	r3, r3
 1410              	.LVL269:
 1411              	.LBE339:
 1412              	.LBE338:
 543:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1413              		.loc 1 543 0
 1414 00da 0693     		str	r3, [sp, #24]
 1415              	.LVL270:
 545:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1416              		.loc 1 545 0
 1417 00dc 6B68     		ldr	r3, [r5, #4]
 1418              	.LVL271:
ARM GAS  /tmp/ccg7Oav1.s 			page 46


 1419              	.LBB340:
 1420              	.LBB341:
 1421              		.loc 2 407 0
 1422 00de 1BBA     		rev	r3, r3
 1423              	.LVL272:
 1424              	.LBE341:
 1425              	.LBE340:
 545:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1426              		.loc 1 545 0
 1427 00e0 0793     		str	r3, [sp, #28]
 1428              	.LVL273:
 547:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1429              		.loc 1 547 0
 1430 00e2 AB68     		ldr	r3, [r5, #8]
 1431              	.LVL274:
 1432              	.LBB342:
 1433              	.LBB343:
 1434              		.loc 2 407 0
 1435 00e4 1BBA     		rev	r3, r3
 1436              	.LVL275:
 1437              	.LBE343:
 1438              	.LBE342:
 547:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1439              		.loc 1 547 0
 1440 00e6 0893     		str	r3, [sp, #32]
 1441              	.LVL276:
 549:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1442              		.loc 1 549 0
 1443 00e8 EB68     		ldr	r3, [r5, #12]
 1444              	.LVL277:
 1445              	.LBB344:
 1446              	.LBB345:
 1447              		.loc 2 407 0
 1448 00ea 1BBA     		rev	r3, r3
 1449              	.LVL278:
 1450              	.LBE345:
 1451              	.LBE344:
 549:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1452              		.loc 1 549 0
 1453 00ec 0993     		str	r3, [sp, #36]
 1454              	.LVL279:
 551:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1455              		.loc 1 551 0
 1456 00ee 2B69     		ldr	r3, [r5, #16]
 1457              	.LVL280:
 1458              	.LBB346:
 1459              	.LBB347:
 1460              		.loc 2 407 0
 1461 00f0 1BBA     		rev	r3, r3
 1462              	.LVL281:
 1463              	.LBE347:
 1464              	.LBE346:
 551:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1465              		.loc 1 551 0
 1466 00f2 0A93     		str	r3, [sp, #40]
 1467              	.LVL282:
 553:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
ARM GAS  /tmp/ccg7Oav1.s 			page 47


 1468              		.loc 1 553 0
 1469 00f4 6B69     		ldr	r3, [r5, #20]
 1470              	.LVL283:
 1471              	.LBB348:
 1472              	.LBB349:
 1473              		.loc 2 407 0
 1474 00f6 1BBA     		rev	r3, r3
 1475              	.LVL284:
 1476              	.LBE349:
 1477              	.LBE348:
 553:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1478              		.loc 1 553 0
 1479 00f8 0B93     		str	r3, [sp, #44]
 1480              	.LVL285:
 555:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1481              		.loc 1 555 0
 1482 00fa AB69     		ldr	r3, [r5, #24]
 1483              	.LVL286:
 1484              	.LBB350:
 1485              	.LBB351:
 1486              		.loc 2 407 0
 1487 00fc 1BBA     		rev	r3, r3
 1488              	.LVL287:
 1489              	.LBE351:
 1490              	.LBE350:
 555:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1491              		.loc 1 555 0
 1492 00fe 0C93     		str	r3, [sp, #48]
 1493              	.LVL288:
 557:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 1494              		.loc 1 557 0
 1495 0100 EB69     		ldr	r3, [r5, #28]
 1496              	.LVL289:
 1497              	.LBB352:
 1498              	.LBB353:
 1499              		.loc 2 407 0
 1500 0102 1BBA     		rev	r3, r3
 1501              	.LVL290:
 1502              	.LBE353:
 1503              	.LBE352:
 557:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 1504              		.loc 1 557 0
 1505 0104 0D93     		str	r3, [sp, #52]
 558:FWLIB/src/stm32f4xx_cryp_aes.c ****     default:
 1506              		.loc 1 558 0
 1507 0106 94E7     		b	.L46
 1508              	.LVL291:
 1509              	.L50:
 584:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 1510              		.loc 1 584 0
 1511 0108 0023     		movs	r3, #0
 1512 010a 0E93     		str	r3, [sp, #56]
 1513 010c A5E7     		b	.L51
 1514              	.LVL292:
 1515              	.L54:
 600:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 601:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
ARM GAS  /tmp/ccg7Oav1.s 			page 48


 602:FWLIB/src/stm32f4xx_cryp_aes.c ****        the CRYP peripheral (please check the device sales type. */
 603:FWLIB/src/stm32f4xx_cryp_aes.c ****     return(ERROR);
 604:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 605:FWLIB/src/stm32f4xx_cryp_aes.c ****   
 606:FWLIB/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 607:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 608:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 609:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Write the Input block in the IN FIFO */
 610:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 611:FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 612:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 613:FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 614:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 615:FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 616:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 617:FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 618:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait until the complete message has been processed */
 619:FWLIB/src/stm32f4xx_cryp_aes.c ****     counter = 0;
 620:FWLIB/src/stm32f4xx_cryp_aes.c ****     do
 621:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 622:FWLIB/src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 623:FWLIB/src/stm32f4xx_cryp_aes.c ****       counter++;
 624:FWLIB/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 625:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 626:FWLIB/src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 1516              		.loc 1 626 0
 1517 010e 0AB3     		cbz	r2, .L63
 627:FWLIB/src/stm32f4xx_cryp_aes.c ****    {
 628:FWLIB/src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 1518              		.loc 1 628 0
 1519 0110 0026     		movs	r6, #0
 1520              	.LVL293:
 1521              	.L56:
 606:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 1522              		.loc 1 606 0 discriminator 2
 1523 0112 1035     		adds	r5, r5, #16
 1524              	.LVL294:
 1525              	.L53:
 606:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 1526              		.loc 1 606 0 is_stmt 0 discriminator 1
 1527 0114 4545     		cmp	r5, r8
 1528 0116 2BD2     		bcs	.L57
 606:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 1529              		.loc 1 606 0 discriminator 3
 1530 0118 56B3     		cbz	r6, .L57
 610:FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1531              		.loc 1 610 0 is_stmt 1
 1532 011a 2068     		ldr	r0, [r4]
 1533 011c FFF7FEFF 		bl	CRYP_DataIn
 1534              	.LVL295:
 612:FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1535              		.loc 1 612 0
 1536 0120 6068     		ldr	r0, [r4, #4]
 1537 0122 FFF7FEFF 		bl	CRYP_DataIn
 1538              	.LVL296:
 614:FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1539              		.loc 1 614 0
ARM GAS  /tmp/ccg7Oav1.s 			page 49


 1540 0126 A068     		ldr	r0, [r4, #8]
 1541 0128 FFF7FEFF 		bl	CRYP_DataIn
 1542              	.LVL297:
 616:FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1543              		.loc 1 616 0
 1544 012c E068     		ldr	r0, [r4, #12]
 1545 012e FFF7FEFF 		bl	CRYP_DataIn
 1546              	.LVL298:
 617:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait until the complete message has been processed */
 1547              		.loc 1 617 0
 1548 0132 1034     		adds	r4, r4, #16
 1549              	.LVL299:
 619:FWLIB/src/stm32f4xx_cryp_aes.c ****     do
 1550              		.loc 1 619 0
 1551 0134 0023     		movs	r3, #0
 1552 0136 0193     		str	r3, [sp, #4]
 1553              	.L55:
 622:FWLIB/src/stm32f4xx_cryp_aes.c ****       counter++;
 1554              		.loc 1 622 0 discriminator 2
 1555 0138 1020     		movs	r0, #16
 1556 013a FFF7FEFF 		bl	CRYP_GetFlagStatus
 1557              	.LVL300:
 1558 013e 0246     		mov	r2, r0
 1559              	.LVL301:
 623:FWLIB/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 1560              		.loc 1 623 0 discriminator 2
 1561 0140 019B     		ldr	r3, [sp, #4]
 1562 0142 0133     		adds	r3, r3, #1
 1563 0144 0193     		str	r3, [sp, #4]
 624:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 1564              		.loc 1 624 0 discriminator 2
 1565 0146 019B     		ldr	r3, [sp, #4]
 1566 0148 B3F5803F 		cmp	r3, #65536
 1567 014c DFD0     		beq	.L54
 624:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 1568              		.loc 1 624 0 is_stmt 0 discriminator 1
 1569 014e 0028     		cmp	r0, #0
 1570 0150 F2D1     		bne	.L55
 1571 0152 DCE7     		b	.L54
 1572              	.L63:
 629:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 630:FWLIB/src/stm32f4xx_cryp_aes.c ****     else
 631:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 632:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 633:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Read the Output block from the Output FIFO */
 634:FWLIB/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1573              		.loc 1 634 0 is_stmt 1
 1574 0154 FFF7FEFF 		bl	CRYP_DataOut
 1575              	.LVL302:
 1576 0158 3860     		str	r0, [r7]
 1577              	.LVL303:
 635:FWLIB/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 636:FWLIB/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1578              		.loc 1 636 0
 1579 015a FFF7FEFF 		bl	CRYP_DataOut
 1580              	.LVL304:
 1581 015e 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccg7Oav1.s 			page 50


 1582              	.LVL305:
 637:FWLIB/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 638:FWLIB/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1583              		.loc 1 638 0
 1584 0160 FFF7FEFF 		bl	CRYP_DataOut
 1585              	.LVL306:
 1586 0164 B860     		str	r0, [r7, #8]
 1587              	.LVL307:
 639:FWLIB/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 640:FWLIB/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1588              		.loc 1 640 0
 1589 0166 FFF7FEFF 		bl	CRYP_DataOut
 1590              	.LVL308:
 1591 016a F860     		str	r0, [r7, #12]
 641:FWLIB/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 1592              		.loc 1 641 0
 1593 016c 1037     		adds	r7, r7, #16
 1594              	.LVL309:
 1595 016e D0E7     		b	.L56
 1596              	.L57:
 642:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 643:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 644:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Disable Crypto */
 645:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(DISABLE);
 1597              		.loc 1 645 0
 1598 0170 0020     		movs	r0, #0
 1599 0172 FFF7FEFF 		bl	CRYP_Cmd
 1600              	.LVL310:
 1601              	.L52:
 646:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 647:FWLIB/src/stm32f4xx_cryp_aes.c ****   return status;
 648:FWLIB/src/stm32f4xx_cryp_aes.c **** }
 1602              		.loc 1 648 0
 1603 0176 3046     		mov	r0, r6
 1604 0178 12B0     		add	sp, sp, #72
 1605              	.LCFI10:
 1606              		.cfi_remember_state
 1607              		.cfi_def_cfa_offset 32
 1608              		@ sp needed
 1609 017a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1610              	.LVL311:
 1611              	.L59:
 1612              	.LCFI11:
 1613              		.cfi_restore_state
 603:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 1614              		.loc 1 603 0
 1615 017e 0026     		movs	r6, #0
 1616              	.LVL312:
 1617 0180 F9E7     		b	.L52
 1618              		.cfi_endproc
 1619              	.LFE114:
 1621              		.section	.text.CRYP_AES_GCM,"ax",%progbits
 1622              		.align	1
 1623              		.global	CRYP_AES_GCM
 1624              		.syntax unified
 1625              		.thumb
 1626              		.thumb_func
ARM GAS  /tmp/ccg7Oav1.s 			page 51


 1627              		.fpu softvfp
 1629              	CRYP_AES_GCM:
 1630              	.LFB115:
 649:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 650:FWLIB/src/stm32f4xx_cryp_aes.c **** /**
 651:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @brief  Encrypt and decrypt using AES in GCM Mode. The GCM and CCM modes
 652:FWLIB/src/stm32f4xx_cryp_aes.c ****   *         are available only on STM32F437x Devices.
 653:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Mode: encryption or decryption Mode.
 654:FWLIB/src/stm32f4xx_cryp_aes.c ****   *          This parameter can be one of the following values:
 655:FWLIB/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_ENCRYPT: Encryption
 656:FWLIB/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_DECRYPT: Decryption
 657:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  InitVectors: Initialisation Vectors used for AES algorithm.
 658:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Key: Key used for AES algorithm.
 659:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Keysize: length of the Key, must be a 128, 192 or 256.
 660:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Input: pointer to the Input buffer.
 661:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Ilength: length of the Input buffer in bytes, must be a multiple of 16.
 662:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Header: pointer to the header buffer.
 663:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Hlength: length of the header buffer in bytes, must be a multiple of 16.  
 664:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Output: pointer to the returned buffer.
 665:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  AuthTAG: pointer to the authentication TAG buffer.
 666:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @retval An ErrorStatus enumeration value:
 667:FWLIB/src/stm32f4xx_cryp_aes.c ****   *          - SUCCESS: Operation done
 668:FWLIB/src/stm32f4xx_cryp_aes.c ****   *          - ERROR: Operation failed
 669:FWLIB/src/stm32f4xx_cryp_aes.c ****   */
 670:FWLIB/src/stm32f4xx_cryp_aes.c **** ErrorStatus CRYP_AES_GCM(uint8_t Mode, uint8_t InitVectors[16],
 671:FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint8_t *Key, uint16_t Keysize,
 672:FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint8_t *Input, uint32_t ILength,
 673:FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint8_t *Header, uint32_t HLength,
 674:FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint8_t *Output, uint8_t *AuthTAG)
 675:FWLIB/src/stm32f4xx_cryp_aes.c **** {
 1631              		.loc 1 675 0
 1632              		.cfi_startproc
 1633              		@ args = 24, pretend = 0, frame = 88
 1634              		@ frame_needed = 0, uses_anonymous_args = 0
 1635              	.LVL313:
 1636 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1637              	.LCFI12:
 1638              		.cfi_def_cfa_offset 36
 1639              		.cfi_offset 4, -36
 1640              		.cfi_offset 5, -32
 1641              		.cfi_offset 6, -28
 1642              		.cfi_offset 7, -24
 1643              		.cfi_offset 8, -20
 1644              		.cfi_offset 9, -16
 1645              		.cfi_offset 10, -12
 1646              		.cfi_offset 11, -8
 1647              		.cfi_offset 14, -4
 1648 0004 97B0     		sub	sp, sp, #92
 1649              	.LCFI13:
 1650              		.cfi_def_cfa_offset 128
 1651 0006 0190     		str	r0, [sp, #4]
 1652 0008 8946     		mov	r9, r1
 1653 000a 9046     		mov	r8, r2
 1654 000c 9B46     		mov	fp, r3
 1655 000e 219F     		ldr	r7, [sp, #132]
 1656 0010 DDF88CA0 		ldr	r10, [sp, #140]
 676:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_InitTypeDef AES_CRYP_InitStructure;
ARM GAS  /tmp/ccg7Oav1.s 			page 52


 677:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
 678:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_IVInitTypeDef AES_CRYP_IVInitStructure;
 679:FWLIB/src/stm32f4xx_cryp_aes.c ****   __IO uint32_t counter = 0;
 1657              		.loc 1 679 0
 1658 0014 0023     		movs	r3, #0
 1659              	.LVL314:
 1660 0016 0593     		str	r3, [sp, #20]
 1661              	.LVL315:
 680:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t busystatus = 0;
 681:FWLIB/src/stm32f4xx_cryp_aes.c ****   ErrorStatus status = SUCCESS;
 682:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 683:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t inputaddr  = (uint32_t)Input;
 1662              		.loc 1 683 0
 1663 0018 209C     		ldr	r4, [sp, #128]
 1664              	.LVL316:
 684:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t outputaddr = (uint32_t)Output;
 1665              		.loc 1 684 0
 1666 001a 249E     		ldr	r6, [sp, #144]
 1667              	.LVL317:
 685:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t ivaddr     = (uint32_t)InitVectors;
 686:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t headeraddr = (uint32_t)Header;
 1668              		.loc 1 686 0
 1669 001c 229D     		ldr	r5, [sp, #136]
 1670              	.LVL318:
 687:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t tagaddr = (uint32_t)AuthTAG;
 688:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint64_t headerlength = HLength * 8;/* header length in bits */
 1671              		.loc 1 688 0
 1672 001e 4FEACA03 		lsl	r3, r10, #3
 1673 0022 0293     		str	r3, [sp, #8]
 1674              	.LVL319:
 689:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint64_t inputlength = ILength * 8;/* input length in bits */
 1675              		.loc 1 689 0
 1676 0024 FB00     		lsls	r3, r7, #3
 1677              	.LVL320:
 1678 0026 0393     		str	r3, [sp, #12]
 1679              	.LVL321:
 690:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t loopcounter = 0;
 691:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 692:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Crypto structures initialisation*/
 693:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
 1680              		.loc 1 693 0
 1681 0028 0AA8     		add	r0, sp, #40
 1682              	.LVL322:
 1683 002a FFF7FEFF 		bl	CRYP_KeyStructInit
 1684              	.LVL323:
 694:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 695:FWLIB/src/stm32f4xx_cryp_aes.c ****   switch(Keysize)
 1685              		.loc 1 695 0
 1686 002e BBF1C00F 		cmp	fp, #192
 1687 0032 5FD0     		beq	.L66
 1688 0034 BBF5807F 		cmp	fp, #256
 1689 0038 78D0     		beq	.L67
 1690 003a BBF1800F 		cmp	fp, #128
 1691 003e 46D0     		beq	.L115
 1692              	.LVL324:
 1693              	.L65:
 696:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
ARM GAS  /tmp/ccg7Oav1.s 			page 53


 697:FWLIB/src/stm32f4xx_cryp_aes.c ****     case 128:
 698:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
 699:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 700:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 701:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 702:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 703:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 704:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 705:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 706:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 707:FWLIB/src/stm32f4xx_cryp_aes.c ****     case 192:
 708:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
 709:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 710:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 711:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 712:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 713:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 714:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 715:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 716:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 717:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 718:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 719:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 720:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 721:FWLIB/src/stm32f4xx_cryp_aes.c ****     case 256:
 722:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
 723:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 724:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 725:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
 726:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 727:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 728:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 729:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 730:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 731:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 732:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 733:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 734:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 735:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 736:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 737:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 738:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 739:FWLIB/src/stm32f4xx_cryp_aes.c ****     default:
 740:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 741:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 742:FWLIB/src/stm32f4xx_cryp_aes.c ****   
 743:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
 744:FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Left = __REV(*(uint32_t*)(ivaddr));
 1694              		.loc 1 744 0
 1695 0040 D9F80030 		ldr	r3, [r9]
 1696              	.LVL325:
 1697              	.LBB354:
 1698              	.LBB355:
 1699              		.loc 2 407 0
 1700 0044 1BBA     		rev	r3, r3
 1701              	.LVL326:
 1702              	.LBE355:
ARM GAS  /tmp/ccg7Oav1.s 			page 54


 1703              	.LBE354:
 1704              		.loc 1 744 0
 1705 0046 0693     		str	r3, [sp, #24]
 1706              	.LVL327:
 745:FWLIB/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 746:FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Right= __REV(*(uint32_t*)(ivaddr));
 1707              		.loc 1 746 0
 1708 0048 D9F80430 		ldr	r3, [r9, #4]
 1709              	.LVL328:
 1710              	.LBB356:
 1711              	.LBB357:
 1712              		.loc 2 407 0
 1713 004c 1BBA     		rev	r3, r3
 1714              	.LVL329:
 1715              	.LBE357:
 1716              	.LBE356:
 1717              		.loc 1 746 0
 1718 004e 0793     		str	r3, [sp, #28]
 1719              	.LVL330:
 747:FWLIB/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 748:FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Left = __REV(*(uint32_t*)(ivaddr));
 1720              		.loc 1 748 0
 1721 0050 D9F80830 		ldr	r3, [r9, #8]
 1722              	.LVL331:
 1723              	.LBB358:
 1724              	.LBB359:
 1725              		.loc 2 407 0
 1726 0054 1BBA     		rev	r3, r3
 1727              	.LVL332:
 1728              	.LBE359:
 1729              	.LBE358:
 1730              		.loc 1 748 0
 1731 0056 0893     		str	r3, [sp, #32]
 1732              	.LVL333:
 749:FWLIB/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 750:FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Right= __REV(*(uint32_t*)(ivaddr));
 1733              		.loc 1 750 0
 1734 0058 D9F80C30 		ldr	r3, [r9, #12]
 1735              	.LVL334:
 1736              	.LBB360:
 1737              	.LBB361:
 1738              		.loc 2 407 0
 1739 005c 1BBA     		rev	r3, r3
 1740              	.LVL335:
 1741              	.LBE361:
 1742              	.LBE360:
 1743              		.loc 1 750 0
 1744 005e 0993     		str	r3, [sp, #36]
 751:FWLIB/src/stm32f4xx_cryp_aes.c ****   
 752:FWLIB/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Encryption ------------------*/
 753:FWLIB/src/stm32f4xx_cryp_aes.c ****   if(Mode == MODE_ENCRYPT) /* AES encryption */
 1745              		.loc 1 753 0
 1746 0060 019B     		ldr	r3, [sp, #4]
 1747 0062 012B     		cmp	r3, #1
 1748 0064 00F08680 		beq	.L116
 754:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 755:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Flush IN/OUT FIFOs */
ARM GAS  /tmp/ccg7Oav1.s 			page 55


 756:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_FIFOFlush();
 757:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 758:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Key Initialisation */
 759:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 760:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 761:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* CRYP Initialization Vectors */
 762:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_IVInit(&AES_CRYP_IVInitStructure);
 763:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 764:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Key preparation for decryption process */
 765:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Encrypt;
 766:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_GCM;
 767:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 768:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
 769:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 770:FWLIB/src/stm32f4xx_cryp_aes.c ****     /***************************** Init phase *********************************/
 771:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Select init phase */
 772:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_PhaseConfig(CRYP_Phase_Init);
 773:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 774:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
 775:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 776:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 777:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait for CRYPEN bit to be 0 */
 778:FWLIB/src/stm32f4xx_cryp_aes.c ****     while(CRYP_GetCmdStatus() == ENABLE)
 779:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 780:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 781:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 782:FWLIB/src/stm32f4xx_cryp_aes.c ****     /***************************** header phase *******************************/
 783:FWLIB/src/stm32f4xx_cryp_aes.c ****     if(HLength != 0)
 784:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 785:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Select header phase */
 786:FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_PhaseConfig(CRYP_Phase_Header);
 787:FWLIB/src/stm32f4xx_cryp_aes.c ****       
 788:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Enable Crypto processor */
 789:FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_Cmd(ENABLE);
 790:FWLIB/src/stm32f4xx_cryp_aes.c ****       
 791:FWLIB/src/stm32f4xx_cryp_aes.c ****       if(CRYP_GetCmdStatus() == DISABLE)
 792:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 793:FWLIB/src/stm32f4xx_cryp_aes.c ****          /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
 794:FWLIB/src/stm32f4xx_cryp_aes.c ****             the CRYP peripheral (please check the device sales type. */
 795:FWLIB/src/stm32f4xx_cryp_aes.c ****          return(ERROR);
 796:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 797:FWLIB/src/stm32f4xx_cryp_aes.c ****       
 798:FWLIB/src/stm32f4xx_cryp_aes.c ****       for(loopcounter = 0; (loopcounter < HLength); loopcounter+=16)
 799:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 800:FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Wait until the IFEM flag is reset */
 801:FWLIB/src/stm32f4xx_cryp_aes.c ****         while(CRYP_GetFlagStatus(CRYP_FLAG_IFEM) == RESET)
 802:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 803:FWLIB/src/stm32f4xx_cryp_aes.c ****         }
 804:FWLIB/src/stm32f4xx_cryp_aes.c ****         
 805:FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Write the Input block in the IN FIFO */
 806:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 807:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 808:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 809:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 810:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 811:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 812:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
ARM GAS  /tmp/ccg7Oav1.s 			page 56


 813:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 814:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 815:FWLIB/src/stm32f4xx_cryp_aes.c ****       
 816:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Wait until the complete message has been processed */
 817:FWLIB/src/stm32f4xx_cryp_aes.c ****       counter = 0;
 818:FWLIB/src/stm32f4xx_cryp_aes.c ****       do
 819:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 820:FWLIB/src/stm32f4xx_cryp_aes.c ****         busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 821:FWLIB/src/stm32f4xx_cryp_aes.c ****         counter++;
 822:FWLIB/src/stm32f4xx_cryp_aes.c ****       }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 823:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 824:FWLIB/src/stm32f4xx_cryp_aes.c ****       if (busystatus != RESET)
 825:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 826:FWLIB/src/stm32f4xx_cryp_aes.c ****         status = ERROR;
 827:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 828:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 829:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 830:FWLIB/src/stm32f4xx_cryp_aes.c ****     /**************************** payload phase *******************************/
 831:FWLIB/src/stm32f4xx_cryp_aes.c ****     if(ILength != 0)
 832:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 833:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Select payload phase */
 834:FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_PhaseConfig(CRYP_Phase_Payload);
 835:FWLIB/src/stm32f4xx_cryp_aes.c ****       
 836:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Enable Crypto processor */
 837:FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_Cmd(ENABLE);
 838:FWLIB/src/stm32f4xx_cryp_aes.c ****       
 839:FWLIB/src/stm32f4xx_cryp_aes.c ****       if(CRYP_GetCmdStatus() == DISABLE)
 840:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 841:FWLIB/src/stm32f4xx_cryp_aes.c ****         /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
 842:FWLIB/src/stm32f4xx_cryp_aes.c ****            the CRYP peripheral (please check the device sales type. */
 843:FWLIB/src/stm32f4xx_cryp_aes.c ****         return(ERROR);
 844:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 845:FWLIB/src/stm32f4xx_cryp_aes.c ****       
 846:FWLIB/src/stm32f4xx_cryp_aes.c ****       for(loopcounter = 0; ((loopcounter < ILength) && (status != ERROR)); loopcounter+=16)
 847:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 848:FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Wait until the IFEM flag is reset */
 849:FWLIB/src/stm32f4xx_cryp_aes.c ****         while(CRYP_GetFlagStatus(CRYP_FLAG_IFEM) == RESET)
 850:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 851:FWLIB/src/stm32f4xx_cryp_aes.c ****         }
 852:FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Write the Input block in the IN FIFO */
 853:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
 854:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 855:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
 856:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 857:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
 858:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 859:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
 860:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 861:FWLIB/src/stm32f4xx_cryp_aes.c ****         
 862:FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Wait until the complete message has been processed */
 863:FWLIB/src/stm32f4xx_cryp_aes.c ****         counter = 0;
 864:FWLIB/src/stm32f4xx_cryp_aes.c ****         do
 865:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 866:FWLIB/src/stm32f4xx_cryp_aes.c ****           busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 867:FWLIB/src/stm32f4xx_cryp_aes.c ****           counter++;
 868:FWLIB/src/stm32f4xx_cryp_aes.c ****         }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 869:FWLIB/src/stm32f4xx_cryp_aes.c **** 
ARM GAS  /tmp/ccg7Oav1.s 			page 57


 870:FWLIB/src/stm32f4xx_cryp_aes.c ****         if (busystatus != RESET)
 871:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 872:FWLIB/src/stm32f4xx_cryp_aes.c ****           status = ERROR;
 873:FWLIB/src/stm32f4xx_cryp_aes.c ****         }
 874:FWLIB/src/stm32f4xx_cryp_aes.c ****         else
 875:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 876:FWLIB/src/stm32f4xx_cryp_aes.c ****           /* Wait until the OFNE flag is reset */
 877:FWLIB/src/stm32f4xx_cryp_aes.c ****           while(CRYP_GetFlagStatus(CRYP_FLAG_OFNE) == RESET)
 878:FWLIB/src/stm32f4xx_cryp_aes.c ****           {
 879:FWLIB/src/stm32f4xx_cryp_aes.c ****           }
 880:FWLIB/src/stm32f4xx_cryp_aes.c ****           
 881:FWLIB/src/stm32f4xx_cryp_aes.c ****           /* Read the Output block from the Output FIFO */
 882:FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 883:FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 884:FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 885:FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 886:FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 887:FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 888:FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 889:FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 890:FWLIB/src/stm32f4xx_cryp_aes.c ****         }
 891:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 892:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 893:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 894:FWLIB/src/stm32f4xx_cryp_aes.c ****     /***************************** final phase ********************************/
 895:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Select final phase */
 896:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_PhaseConfig(CRYP_Phase_Final);
 897:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 898:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
 899:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 900:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 901:FWLIB/src/stm32f4xx_cryp_aes.c ****     if(CRYP_GetCmdStatus() == DISABLE)
 902:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 903:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
 904:FWLIB/src/stm32f4xx_cryp_aes.c ****          the CRYP peripheral (please check the device sales type. */
 905:FWLIB/src/stm32f4xx_cryp_aes.c ****       return(ERROR);
 906:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 907:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 908:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Write number of bits concatenated with header in the IN FIFO */
 909:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(headerlength>>32));
 910:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(headerlength));
 911:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(inputlength>>32));
 912:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(inputlength));
 913:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait until the OFNE flag is reset */
 914:FWLIB/src/stm32f4xx_cryp_aes.c ****     while(CRYP_GetFlagStatus(CRYP_FLAG_OFNE) == RESET)
 915:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 916:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 917:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 918:FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr = (uint32_t)AuthTAG;
 919:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Read the Auth TAG in the IN FIFO */
 920:FWLIB/src/stm32f4xx_cryp_aes.c ****     *(uint32_t*)(tagaddr) = CRYP_DataOut();
 921:FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 922:FWLIB/src/stm32f4xx_cryp_aes.c ****     *(uint32_t*)(tagaddr) = CRYP_DataOut();
 923:FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 924:FWLIB/src/stm32f4xx_cryp_aes.c ****     *(uint32_t*)(tagaddr) = CRYP_DataOut();
 925:FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 926:FWLIB/src/stm32f4xx_cryp_aes.c ****     *(uint32_t*)(tagaddr) = CRYP_DataOut();
ARM GAS  /tmp/ccg7Oav1.s 			page 58


 927:FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 928:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 929:FWLIB/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Decryption ------------------*/
 930:FWLIB/src/stm32f4xx_cryp_aes.c ****   else /* AES decryption */
 931:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 932:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Flush IN/OUT FIFOs */
 933:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_FIFOFlush();
 1749              		.loc 1 933 0
 1750 0068 FFF7FEFF 		bl	CRYP_FIFOFlush
 1751              	.LVL336:
 934:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 935:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Key Initialisation */
 936:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 1752              		.loc 1 936 0
 1753 006c 0AA8     		add	r0, sp, #40
 1754 006e FFF7FEFF 		bl	CRYP_KeyInit
 1755              	.LVL337:
 937:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 938:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* CRYP Initialization Vectors */
 939:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_IVInit(&AES_CRYP_IVInitStructure);
 1756              		.loc 1 939 0
 1757 0072 06A8     		add	r0, sp, #24
 1758 0074 FFF7FEFF 		bl	CRYP_IVInit
 1759              	.LVL338:
 940:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 941:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Key preparation for decryption process */
 942:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 1760              		.loc 1 942 0
 1761 0078 0423     		movs	r3, #4
 1762 007a 1293     		str	r3, [sp, #72]
 943:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_GCM;
 1763              		.loc 1 943 0
 1764 007c 4FF40023 		mov	r3, #524288
 1765 0080 1393     		str	r3, [sp, #76]
 944:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 1766              		.loc 1 944 0
 1767 0082 8023     		movs	r3, #128
 1768 0084 1493     		str	r3, [sp, #80]
 945:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
 1769              		.loc 1 945 0
 1770 0086 12A8     		add	r0, sp, #72
 1771 0088 FFF7FEFF 		bl	CRYP_Init
 1772              	.LVL339:
 946:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 947:FWLIB/src/stm32f4xx_cryp_aes.c ****     /***************************** Init phase *********************************/
 948:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Select init phase */
 949:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_PhaseConfig(CRYP_Phase_Init);
 1773              		.loc 1 949 0
 1774 008c 0020     		movs	r0, #0
 1775 008e FFF7FEFF 		bl	CRYP_PhaseConfig
 1776              	.LVL340:
 950:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 951:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
 952:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 1777              		.loc 1 952 0
 1778 0092 0120     		movs	r0, #1
 1779 0094 FFF7FEFF 		bl	CRYP_Cmd
ARM GAS  /tmp/ccg7Oav1.s 			page 59


 1780              	.LVL341:
 1781              	.L86:
 953:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 954:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait for CRYPEN bit to be 0 */
 955:FWLIB/src/stm32f4xx_cryp_aes.c ****     while(CRYP_GetCmdStatus() == ENABLE)
 1782              		.loc 1 955 0 discriminator 1
 1783 0098 FFF7FEFF 		bl	CRYP_GetCmdStatus
 1784              	.LVL342:
 1785 009c 0128     		cmp	r0, #1
 1786 009e FBD0     		beq	.L86
 956:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 957:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 958:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 959:FWLIB/src/stm32f4xx_cryp_aes.c ****     /***************************** header phase *******************************/
 960:FWLIB/src/stm32f4xx_cryp_aes.c ****     if(HLength != 0)
 1787              		.loc 1 960 0
 1788 00a0 BAF1000F 		cmp	r10, #0
 1789 00a4 40F04081 		bne	.L117
 681:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 1790              		.loc 1 681 0
 1791 00a8 0125     		movs	r5, #1
 1792              	.LVL343:
 1793              	.L87:
 961:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 962:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Select header phase */
 963:FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_PhaseConfig(CRYP_Phase_Header);
 964:FWLIB/src/stm32f4xx_cryp_aes.c ****       
 965:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Enable Crypto processor */
 966:FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_Cmd(ENABLE);
 967:FWLIB/src/stm32f4xx_cryp_aes.c ****       
 968:FWLIB/src/stm32f4xx_cryp_aes.c ****       if(CRYP_GetCmdStatus() == DISABLE)
 969:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 970:FWLIB/src/stm32f4xx_cryp_aes.c ****         /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
 971:FWLIB/src/stm32f4xx_cryp_aes.c ****            the CRYP peripheral (please check the device sales type. */
 972:FWLIB/src/stm32f4xx_cryp_aes.c ****         return(ERROR);
 973:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 974:FWLIB/src/stm32f4xx_cryp_aes.c ****       
 975:FWLIB/src/stm32f4xx_cryp_aes.c ****       for(loopcounter = 0; (loopcounter < HLength); loopcounter+=16)
 976:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 977:FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Wait until the IFEM flag is reset */
 978:FWLIB/src/stm32f4xx_cryp_aes.c ****         while(CRYP_GetFlagStatus(CRYP_FLAG_IFEM) == RESET)
 979:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 980:FWLIB/src/stm32f4xx_cryp_aes.c ****         }
 981:FWLIB/src/stm32f4xx_cryp_aes.c ****         
 982:FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Write the Input block in the IN FIFO */
 983:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 984:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 985:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 986:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 987:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 988:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 989:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 990:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 991:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 992:FWLIB/src/stm32f4xx_cryp_aes.c ****       
 993:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Wait until the complete message has been processed */
 994:FWLIB/src/stm32f4xx_cryp_aes.c ****       counter = 0;
ARM GAS  /tmp/ccg7Oav1.s 			page 60


 995:FWLIB/src/stm32f4xx_cryp_aes.c ****       do
 996:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 997:FWLIB/src/stm32f4xx_cryp_aes.c ****         busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 998:FWLIB/src/stm32f4xx_cryp_aes.c ****         counter++;
 999:FWLIB/src/stm32f4xx_cryp_aes.c ****       }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
1000:FWLIB/src/stm32f4xx_cryp_aes.c **** 
1001:FWLIB/src/stm32f4xx_cryp_aes.c ****       if (busystatus != RESET)
1002:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1003:FWLIB/src/stm32f4xx_cryp_aes.c ****         status = ERROR;
1004:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1005:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1006:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1007:FWLIB/src/stm32f4xx_cryp_aes.c ****     /**************************** payload phase *******************************/
1008:FWLIB/src/stm32f4xx_cryp_aes.c ****     if(ILength != 0)
 1794              		.loc 1 1008 0
 1795 00aa 002F     		cmp	r7, #0
 1796 00ac 00F0B281 		beq	.L92
1009:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1010:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Select payload phase */
1011:FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_PhaseConfig(CRYP_Phase_Payload);
 1797              		.loc 1 1011 0
 1798 00b0 4FF40030 		mov	r0, #131072
 1799 00b4 FFF7FEFF 		bl	CRYP_PhaseConfig
 1800              	.LVL344:
1012:FWLIB/src/stm32f4xx_cryp_aes.c **** 
1013:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Enable Crypto processor */
1014:FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_Cmd(ENABLE);
 1801              		.loc 1 1014 0
 1802 00b8 0120     		movs	r0, #1
 1803 00ba FFF7FEFF 		bl	CRYP_Cmd
 1804              	.LVL345:
1015:FWLIB/src/stm32f4xx_cryp_aes.c ****       
1016:FWLIB/src/stm32f4xx_cryp_aes.c ****       if(CRYP_GetCmdStatus() == DISABLE)
 1805              		.loc 1 1016 0
 1806 00be FFF7FEFF 		bl	CRYP_GetCmdStatus
 1807              	.LVL346:
 1808 00c2 0028     		cmp	r0, #0
 1809 00c4 00F0E281 		beq	.L109
 1810 00c8 4FF00008 		mov	r8, #0
 1811              	.LVL347:
 1812 00cc 7BE1     		b	.L93
 1813              	.LVL348:
 1814              	.L115:
 698:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 1815              		.loc 1 698 0
 1816 00ce 0023     		movs	r3, #0
 1817 00d0 1593     		str	r3, [sp, #84]
 699:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1818              		.loc 1 699 0
 1819 00d2 D8F80030 		ldr	r3, [r8]
 1820              	.LVL349:
 1821              	.LBB362:
 1822              	.LBB363:
 1823              		.loc 2 407 0
 1824 00d6 1BBA     		rev	r3, r3
 1825              	.LVL350:
 1826              	.LBE363:
ARM GAS  /tmp/ccg7Oav1.s 			page 61


 1827              	.LBE362:
 699:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1828              		.loc 1 699 0
 1829 00d8 0E93     		str	r3, [sp, #56]
 1830              	.LVL351:
 701:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1831              		.loc 1 701 0
 1832 00da D8F80430 		ldr	r3, [r8, #4]
 1833              	.LVL352:
 1834              	.LBB364:
 1835              	.LBB365:
 1836              		.loc 2 407 0
 1837 00de 1BBA     		rev	r3, r3
 1838              	.LVL353:
 1839              	.LBE365:
 1840              	.LBE364:
 701:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1841              		.loc 1 701 0
 1842 00e0 0F93     		str	r3, [sp, #60]
 1843              	.LVL354:
 703:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1844              		.loc 1 703 0
 1845 00e2 D8F80830 		ldr	r3, [r8, #8]
 1846              	.LVL355:
 1847              	.LBB366:
 1848              	.LBB367:
 1849              		.loc 2 407 0
 1850 00e6 1BBA     		rev	r3, r3
 1851              	.LVL356:
 1852              	.LBE367:
 1853              	.LBE366:
 703:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1854              		.loc 1 703 0
 1855 00e8 1093     		str	r3, [sp, #64]
 1856              	.LVL357:
 705:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 1857              		.loc 1 705 0
 1858 00ea D8F80C30 		ldr	r3, [r8, #12]
 1859              	.LVL358:
 1860              	.LBB368:
 1861              	.LBB369:
 1862              		.loc 2 407 0
 1863 00ee 1BBA     		rev	r3, r3
 1864              	.LVL359:
 1865              	.LBE369:
 1866              	.LBE368:
 705:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 1867              		.loc 1 705 0
 1868 00f0 1193     		str	r3, [sp, #68]
 706:FWLIB/src/stm32f4xx_cryp_aes.c ****     case 192:
 1869              		.loc 1 706 0
 1870 00f2 A5E7     		b	.L65
 1871              	.LVL360:
 1872              	.L66:
 708:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 1873              		.loc 1 708 0
 1874 00f4 4FF48073 		mov	r3, #256
ARM GAS  /tmp/ccg7Oav1.s 			page 62


 1875 00f8 1593     		str	r3, [sp, #84]
 709:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1876              		.loc 1 709 0
 1877 00fa D8F80030 		ldr	r3, [r8]
 1878              	.LVL361:
 1879              	.LBB370:
 1880              	.LBB371:
 1881              		.loc 2 407 0
 1882 00fe 1BBA     		rev	r3, r3
 1883              	.LVL362:
 1884              	.LBE371:
 1885              	.LBE370:
 709:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1886              		.loc 1 709 0
 1887 0100 0C93     		str	r3, [sp, #48]
 1888              	.LVL363:
 711:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1889              		.loc 1 711 0
 1890 0102 D8F80430 		ldr	r3, [r8, #4]
 1891              	.LVL364:
 1892              	.LBB372:
 1893              	.LBB373:
 1894              		.loc 2 407 0
 1895 0106 1BBA     		rev	r3, r3
 1896              	.LVL365:
 1897              	.LBE373:
 1898              	.LBE372:
 711:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1899              		.loc 1 711 0
 1900 0108 0D93     		str	r3, [sp, #52]
 1901              	.LVL366:
 713:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1902              		.loc 1 713 0
 1903 010a D8F80830 		ldr	r3, [r8, #8]
 1904              	.LVL367:
 1905              	.LBB374:
 1906              	.LBB375:
 1907              		.loc 2 407 0
 1908 010e 1BBA     		rev	r3, r3
 1909              	.LVL368:
 1910              	.LBE375:
 1911              	.LBE374:
 713:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1912              		.loc 1 713 0
 1913 0110 0E93     		str	r3, [sp, #56]
 1914              	.LVL369:
 715:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1915              		.loc 1 715 0
 1916 0112 D8F80C30 		ldr	r3, [r8, #12]
 1917              	.LVL370:
 1918              	.LBB376:
 1919              	.LBB377:
 1920              		.loc 2 407 0
 1921 0116 1BBA     		rev	r3, r3
 1922              	.LVL371:
 1923              	.LBE377:
 1924              	.LBE376:
ARM GAS  /tmp/ccg7Oav1.s 			page 63


 715:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1925              		.loc 1 715 0
 1926 0118 0F93     		str	r3, [sp, #60]
 1927              	.LVL372:
 717:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1928              		.loc 1 717 0
 1929 011a D8F81030 		ldr	r3, [r8, #16]
 1930              	.LVL373:
 1931              	.LBB378:
 1932              	.LBB379:
 1933              		.loc 2 407 0
 1934 011e 1BBA     		rev	r3, r3
 1935              	.LVL374:
 1936              	.LBE379:
 1937              	.LBE378:
 717:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1938              		.loc 1 717 0
 1939 0120 1093     		str	r3, [sp, #64]
 1940              	.LVL375:
 719:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 1941              		.loc 1 719 0
 1942 0122 D8F81430 		ldr	r3, [r8, #20]
 1943              	.LVL376:
 1944              	.LBB380:
 1945              	.LBB381:
 1946              		.loc 2 407 0
 1947 0126 1BBA     		rev	r3, r3
 1948              	.LVL377:
 1949              	.LBE381:
 1950              	.LBE380:
 719:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 1951              		.loc 1 719 0
 1952 0128 1193     		str	r3, [sp, #68]
 720:FWLIB/src/stm32f4xx_cryp_aes.c ****     case 256:
 1953              		.loc 1 720 0
 1954 012a 89E7     		b	.L65
 1955              	.LVL378:
 1956              	.L67:
 722:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 1957              		.loc 1 722 0
 1958 012c 4FF40073 		mov	r3, #512
 1959 0130 1593     		str	r3, [sp, #84]
 723:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1960              		.loc 1 723 0
 1961 0132 D8F80030 		ldr	r3, [r8]
 1962              	.LVL379:
 1963              	.LBB382:
 1964              	.LBB383:
 1965              		.loc 2 407 0
 1966 0136 1BBA     		rev	r3, r3
 1967              	.LVL380:
 1968              	.LBE383:
 1969              	.LBE382:
 723:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1970              		.loc 1 723 0
 1971 0138 0A93     		str	r3, [sp, #40]
 1972              	.LVL381:
ARM GAS  /tmp/ccg7Oav1.s 			page 64


 725:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1973              		.loc 1 725 0
 1974 013a D8F80430 		ldr	r3, [r8, #4]
 1975              	.LVL382:
 1976              	.LBB384:
 1977              	.LBB385:
 1978              		.loc 2 407 0
 1979 013e 1BBA     		rev	r3, r3
 1980              	.LVL383:
 1981              	.LBE385:
 1982              	.LBE384:
 725:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1983              		.loc 1 725 0
 1984 0140 0B93     		str	r3, [sp, #44]
 1985              	.LVL384:
 727:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1986              		.loc 1 727 0
 1987 0142 D8F80830 		ldr	r3, [r8, #8]
 1988              	.LVL385:
 1989              	.LBB386:
 1990              	.LBB387:
 1991              		.loc 2 407 0
 1992 0146 1BBA     		rev	r3, r3
 1993              	.LVL386:
 1994              	.LBE387:
 1995              	.LBE386:
 727:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1996              		.loc 1 727 0
 1997 0148 0C93     		str	r3, [sp, #48]
 1998              	.LVL387:
 729:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1999              		.loc 1 729 0
 2000 014a D8F80C30 		ldr	r3, [r8, #12]
 2001              	.LVL388:
 2002              	.LBB388:
 2003              	.LBB389:
 2004              		.loc 2 407 0
 2005 014e 1BBA     		rev	r3, r3
 2006              	.LVL389:
 2007              	.LBE389:
 2008              	.LBE388:
 729:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2009              		.loc 1 729 0
 2010 0150 0D93     		str	r3, [sp, #52]
 2011              	.LVL390:
 731:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2012              		.loc 1 731 0
 2013 0152 D8F81030 		ldr	r3, [r8, #16]
 2014              	.LVL391:
 2015              	.LBB390:
 2016              	.LBB391:
 2017              		.loc 2 407 0
 2018 0156 1BBA     		rev	r3, r3
 2019              	.LVL392:
 2020              	.LBE391:
 2021              	.LBE390:
 731:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
ARM GAS  /tmp/ccg7Oav1.s 			page 65


 2022              		.loc 1 731 0
 2023 0158 0E93     		str	r3, [sp, #56]
 2024              	.LVL393:
 733:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2025              		.loc 1 733 0
 2026 015a D8F81430 		ldr	r3, [r8, #20]
 2027              	.LVL394:
 2028              	.LBB392:
 2029              	.LBB393:
 2030              		.loc 2 407 0
 2031 015e 1BBA     		rev	r3, r3
 2032              	.LVL395:
 2033              	.LBE393:
 2034              	.LBE392:
 733:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2035              		.loc 1 733 0
 2036 0160 0F93     		str	r3, [sp, #60]
 2037              	.LVL396:
 735:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2038              		.loc 1 735 0
 2039 0162 D8F81830 		ldr	r3, [r8, #24]
 2040              	.LVL397:
 2041              	.LBB394:
 2042              	.LBB395:
 2043              		.loc 2 407 0
 2044 0166 1BBA     		rev	r3, r3
 2045              	.LVL398:
 2046              	.LBE395:
 2047              	.LBE394:
 735:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2048              		.loc 1 735 0
 2049 0168 1093     		str	r3, [sp, #64]
 2050              	.LVL399:
 737:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 2051              		.loc 1 737 0
 2052 016a D8F81C30 		ldr	r3, [r8, #28]
 2053              	.LVL400:
 2054              	.LBB396:
 2055              	.LBB397:
 2056              		.loc 2 407 0
 2057 016e 1BBA     		rev	r3, r3
 2058              	.LVL401:
 2059              	.LBE397:
 2060              	.LBE396:
 737:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 2061              		.loc 1 737 0
 2062 0170 1193     		str	r3, [sp, #68]
 738:FWLIB/src/stm32f4xx_cryp_aes.c ****     default:
 2063              		.loc 1 738 0
 2064 0172 65E7     		b	.L65
 2065              	.LVL402:
 2066              	.L116:
 756:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 2067              		.loc 1 756 0
 2068 0174 FFF7FEFF 		bl	CRYP_FIFOFlush
 2069              	.LVL403:
 759:FWLIB/src/stm32f4xx_cryp_aes.c ****     
ARM GAS  /tmp/ccg7Oav1.s 			page 66


 2070              		.loc 1 759 0
 2071 0178 0AA8     		add	r0, sp, #40
 2072 017a FFF7FEFF 		bl	CRYP_KeyInit
 2073              	.LVL404:
 762:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 2074              		.loc 1 762 0
 2075 017e 06A8     		add	r0, sp, #24
 2076 0180 FFF7FEFF 		bl	CRYP_IVInit
 2077              	.LVL405:
 765:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_GCM;
 2078              		.loc 1 765 0
 2079 0184 4FF00008 		mov	r8, #0
 2080              	.LVL406:
 2081 0188 CDF84880 		str	r8, [sp, #72]
 766:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 2082              		.loc 1 766 0
 2083 018c 4FF40023 		mov	r3, #524288
 2084 0190 1393     		str	r3, [sp, #76]
 767:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
 2085              		.loc 1 767 0
 2086 0192 8023     		movs	r3, #128
 2087 0194 1493     		str	r3, [sp, #80]
 768:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 2088              		.loc 1 768 0
 2089 0196 12A8     		add	r0, sp, #72
 2090 0198 FFF7FEFF 		bl	CRYP_Init
 2091              	.LVL407:
 772:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 2092              		.loc 1 772 0
 2093 019c 4046     		mov	r0, r8
 2094 019e FFF7FEFF 		bl	CRYP_PhaseConfig
 2095              	.LVL408:
 775:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 2096              		.loc 1 775 0
 2097 01a2 0120     		movs	r0, #1
 2098 01a4 FFF7FEFF 		bl	CRYP_Cmd
 2099              	.LVL409:
 2100              	.L70:
 778:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 2101              		.loc 1 778 0 discriminator 1
 2102 01a8 FFF7FEFF 		bl	CRYP_GetCmdStatus
 2103              	.LVL410:
 2104 01ac 0128     		cmp	r0, #1
 2105 01ae FBD0     		beq	.L70
 783:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 2106              		.loc 1 783 0
 2107 01b0 BAF1000F 		cmp	r10, #0
 2108 01b4 12D1     		bne	.L118
 681:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 2109              		.loc 1 681 0
 2110 01b6 0125     		movs	r5, #1
 2111              	.LVL411:
 2112              	.L71:
 831:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 2113              		.loc 1 831 0
 2114 01b8 002F     		cmp	r7, #0
 2115 01ba 00F08580 		beq	.L77
ARM GAS  /tmp/ccg7Oav1.s 			page 67


 834:FWLIB/src/stm32f4xx_cryp_aes.c ****       
 2116              		.loc 1 834 0
 2117 01be 4FF40030 		mov	r0, #131072
 2118 01c2 FFF7FEFF 		bl	CRYP_PhaseConfig
 2119              	.LVL412:
 837:FWLIB/src/stm32f4xx_cryp_aes.c ****       
 2120              		.loc 1 837 0
 2121 01c6 0120     		movs	r0, #1
 2122 01c8 FFF7FEFF 		bl	CRYP_Cmd
 2123              	.LVL413:
 839:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2124              		.loc 1 839 0
 2125 01cc FFF7FEFF 		bl	CRYP_GetCmdStatus
 2126              	.LVL414:
 2127 01d0 0028     		cmp	r0, #0
 2128 01d2 00F05781 		beq	.L103
 2129 01d6 4FF00008 		mov	r8, #0
 2130              	.LVL415:
 2131 01da 4EE0     		b	.L78
 2132              	.LVL416:
 2133              	.L118:
 786:FWLIB/src/stm32f4xx_cryp_aes.c ****       
 2134              		.loc 1 786 0
 2135 01dc 4FF48030 		mov	r0, #65536
 2136 01e0 FFF7FEFF 		bl	CRYP_PhaseConfig
 2137              	.LVL417:
 789:FWLIB/src/stm32f4xx_cryp_aes.c ****       
 2138              		.loc 1 789 0
 2139 01e4 0120     		movs	r0, #1
 2140 01e6 FFF7FEFF 		bl	CRYP_Cmd
 2141              	.LVL418:
 791:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2142              		.loc 1 791 0
 2143 01ea FFF7FEFF 		bl	CRYP_GetCmdStatus
 2144              	.LVL419:
 2145 01ee 0028     		cmp	r0, #0
 2146 01f0 00F04681 		beq	.L101
 2147 01f4 4FF00008 		mov	r8, #0
 2148 01f8 13E0     		b	.L73
 2149              	.LVL420:
 2150              	.L74:
 801:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 2151              		.loc 1 801 0 discriminator 1
 2152 01fa 0120     		movs	r0, #1
 2153 01fc FFF7FEFF 		bl	CRYP_GetFlagStatus
 2154              	.LVL421:
 2155 0200 0028     		cmp	r0, #0
 2156 0202 FAD0     		beq	.L74
 806:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 2157              		.loc 1 806 0 discriminator 2
 2158 0204 2868     		ldr	r0, [r5]
 2159 0206 FFF7FEFF 		bl	CRYP_DataIn
 2160              	.LVL422:
 808:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 2161              		.loc 1 808 0 discriminator 2
 2162 020a 6868     		ldr	r0, [r5, #4]
 2163 020c FFF7FEFF 		bl	CRYP_DataIn
ARM GAS  /tmp/ccg7Oav1.s 			page 68


 2164              	.LVL423:
 810:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 2165              		.loc 1 810 0 discriminator 2
 2166 0210 A868     		ldr	r0, [r5, #8]
 2167 0212 FFF7FEFF 		bl	CRYP_DataIn
 2168              	.LVL424:
 812:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 2169              		.loc 1 812 0 discriminator 2
 2170 0216 E868     		ldr	r0, [r5, #12]
 2171 0218 FFF7FEFF 		bl	CRYP_DataIn
 2172              	.LVL425:
 813:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 2173              		.loc 1 813 0 discriminator 2
 2174 021c 1035     		adds	r5, r5, #16
 2175              	.LVL426:
 798:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2176              		.loc 1 798 0 discriminator 2
 2177 021e 08F11008 		add	r8, r8, #16
 2178              	.LVL427:
 2179              	.L73:
 798:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2180              		.loc 1 798 0 is_stmt 0 discriminator 1
 2181 0222 D045     		cmp	r8, r10
 2182 0224 E9D3     		bcc	.L74
 817:FWLIB/src/stm32f4xx_cryp_aes.c ****       do
 2183              		.loc 1 817 0 is_stmt 1
 2184 0226 0023     		movs	r3, #0
 2185 0228 0593     		str	r3, [sp, #20]
 2186              	.LVL428:
 2187              	.L76:
 820:FWLIB/src/stm32f4xx_cryp_aes.c ****         counter++;
 2188              		.loc 1 820 0 discriminator 2
 2189 022a 1020     		movs	r0, #16
 2190 022c FFF7FEFF 		bl	CRYP_GetFlagStatus
 2191              	.LVL429:
 2192 0230 0246     		mov	r2, r0
 2193              	.LVL430:
 821:FWLIB/src/stm32f4xx_cryp_aes.c ****       }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 2194              		.loc 1 821 0 discriminator 2
 2195 0232 059B     		ldr	r3, [sp, #20]
 2196 0234 0133     		adds	r3, r3, #1
 2197 0236 0593     		str	r3, [sp, #20]
 822:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 2198              		.loc 1 822 0 discriminator 2
 2199 0238 059B     		ldr	r3, [sp, #20]
 2200 023a B3F5803F 		cmp	r3, #65536
 2201 023e 01D0     		beq	.L75
 822:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 2202              		.loc 1 822 0 is_stmt 0 discriminator 1
 2203 0240 0028     		cmp	r0, #0
 2204 0242 F2D1     		bne	.L76
 2205              	.L75:
 824:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2206              		.loc 1 824 0 is_stmt 1
 2207 0244 0AB9     		cbnz	r2, .L102
 681:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 2208              		.loc 1 681 0
ARM GAS  /tmp/ccg7Oav1.s 			page 69


 2209 0246 0125     		movs	r5, #1
 2210              	.LVL431:
 2211 0248 B6E7     		b	.L71
 2212              	.LVL432:
 2213              	.L102:
 826:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 2214              		.loc 1 826 0
 2215 024a 0025     		movs	r5, #0
 2216              	.LVL433:
 2217 024c B4E7     		b	.L71
 2218              	.LVL434:
 2219              	.L80:
 870:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 2220              		.loc 1 870 0
 2221 024e 002A     		cmp	r2, #0
 2222 0250 38D1     		bne	.L104
 2223              	.LVL435:
 2224              	.L83:
 877:FWLIB/src/stm32f4xx_cryp_aes.c ****           {
 2225              		.loc 1 877 0 discriminator 1
 2226 0252 0420     		movs	r0, #4
 2227 0254 FFF7FEFF 		bl	CRYP_GetFlagStatus
 2228              	.LVL436:
 2229 0258 0028     		cmp	r0, #0
 2230 025a FAD0     		beq	.L83
 882:FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 2231              		.loc 1 882 0
 2232 025c FFF7FEFF 		bl	CRYP_DataOut
 2233              	.LVL437:
 2234 0260 3060     		str	r0, [r6]
 2235              	.LVL438:
 884:FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 2236              		.loc 1 884 0
 2237 0262 FFF7FEFF 		bl	CRYP_DataOut
 2238              	.LVL439:
 2239 0266 7060     		str	r0, [r6, #4]
 2240              	.LVL440:
 886:FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 2241              		.loc 1 886 0
 2242 0268 FFF7FEFF 		bl	CRYP_DataOut
 2243              	.LVL441:
 2244 026c B060     		str	r0, [r6, #8]
 2245              	.LVL442:
 888:FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 2246              		.loc 1 888 0
 2247 026e FFF7FEFF 		bl	CRYP_DataOut
 2248              	.LVL443:
 2249 0272 F060     		str	r0, [r6, #12]
 889:FWLIB/src/stm32f4xx_cryp_aes.c ****         }
 2250              		.loc 1 889 0
 2251 0274 1036     		adds	r6, r6, #16
 2252              	.LVL444:
 2253              	.L82:
 846:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2254              		.loc 1 846 0 discriminator 2
 2255 0276 08F11008 		add	r8, r8, #16
 2256              	.LVL445:
ARM GAS  /tmp/ccg7Oav1.s 			page 70


 2257              	.L78:
 846:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2258              		.loc 1 846 0 is_stmt 0 discriminator 1
 2259 027a B845     		cmp	r8, r7
 2260 027c 24D2     		bcs	.L77
 846:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2261              		.loc 1 846 0 discriminator 3
 2262 027e 1DB3     		cbz	r5, .L77
 2263              	.L79:
 849:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 2264              		.loc 1 849 0 is_stmt 1 discriminator 1
 2265 0280 0120     		movs	r0, #1
 2266 0282 FFF7FEFF 		bl	CRYP_GetFlagStatus
 2267              	.LVL446:
 2268 0286 0028     		cmp	r0, #0
 2269 0288 FAD0     		beq	.L79
 853:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 2270              		.loc 1 853 0
 2271 028a 2068     		ldr	r0, [r4]
 2272 028c FFF7FEFF 		bl	CRYP_DataIn
 2273              	.LVL447:
 855:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 2274              		.loc 1 855 0
 2275 0290 6068     		ldr	r0, [r4, #4]
 2276 0292 FFF7FEFF 		bl	CRYP_DataIn
 2277              	.LVL448:
 857:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 2278              		.loc 1 857 0
 2279 0296 A068     		ldr	r0, [r4, #8]
 2280 0298 FFF7FEFF 		bl	CRYP_DataIn
 2281              	.LVL449:
 859:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 2282              		.loc 1 859 0
 2283 029c E068     		ldr	r0, [r4, #12]
 2284 029e FFF7FEFF 		bl	CRYP_DataIn
 2285              	.LVL450:
 860:FWLIB/src/stm32f4xx_cryp_aes.c ****         
 2286              		.loc 1 860 0
 2287 02a2 1034     		adds	r4, r4, #16
 2288              	.LVL451:
 863:FWLIB/src/stm32f4xx_cryp_aes.c ****         do
 2289              		.loc 1 863 0
 2290 02a4 0023     		movs	r3, #0
 2291              	.LVL452:
 2292 02a6 0593     		str	r3, [sp, #20]
 2293              	.LVL453:
 2294              	.L81:
 866:FWLIB/src/stm32f4xx_cryp_aes.c ****           counter++;
 2295              		.loc 1 866 0 discriminator 2
 2296 02a8 1020     		movs	r0, #16
 2297 02aa FFF7FEFF 		bl	CRYP_GetFlagStatus
 2298              	.LVL454:
 2299 02ae 0246     		mov	r2, r0
 2300              	.LVL455:
 867:FWLIB/src/stm32f4xx_cryp_aes.c ****         }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 2301              		.loc 1 867 0 discriminator 2
 2302 02b0 059B     		ldr	r3, [sp, #20]
ARM GAS  /tmp/ccg7Oav1.s 			page 71


 2303 02b2 0133     		adds	r3, r3, #1
 2304 02b4 0593     		str	r3, [sp, #20]
 868:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 2305              		.loc 1 868 0 discriminator 2
 2306 02b6 059B     		ldr	r3, [sp, #20]
 2307 02b8 B3F5803F 		cmp	r3, #65536
 2308 02bc C7D0     		beq	.L80
 868:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 2309              		.loc 1 868 0 is_stmt 0 discriminator 1
 2310 02be 0028     		cmp	r0, #0
 2311 02c0 F2D1     		bne	.L81
 2312 02c2 C4E7     		b	.L80
 2313              	.L104:
 872:FWLIB/src/stm32f4xx_cryp_aes.c ****         }
 2314              		.loc 1 872 0 is_stmt 1
 2315 02c4 0025     		movs	r5, #0
 2316              	.LVL456:
 2317 02c6 D6E7     		b	.L82
 2318              	.LVL457:
 2319              	.L77:
 896:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 2320              		.loc 1 896 0
 2321 02c8 4FF44030 		mov	r0, #196608
 2322 02cc FFF7FEFF 		bl	CRYP_PhaseConfig
 2323              	.LVL458:
 899:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 2324              		.loc 1 899 0
 2325 02d0 0120     		movs	r0, #1
 2326 02d2 FFF7FEFF 		bl	CRYP_Cmd
 2327              	.LVL459:
 901:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 2328              		.loc 1 901 0
 2329 02d6 FFF7FEFF 		bl	CRYP_GetCmdStatus
 2330              	.LVL460:
 2331 02da 08B9     		cbnz	r0, .L119
 905:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 2332              		.loc 1 905 0
 2333 02dc 0025     		movs	r5, #0
 2334              	.LVL461:
 2335 02de A4E0     		b	.L72
 2336              	.LVL462:
 2337              	.L119:
 909:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(headerlength));
 2338              		.loc 1 909 0
 2339 02e0 0020     		movs	r0, #0
 2340              	.LVL463:
 2341 02e2 FFF7FEFF 		bl	CRYP_DataIn
 2342              	.LVL464:
 910:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(inputlength>>32));
 2343              		.loc 1 910 0
 2344 02e6 029B     		ldr	r3, [sp, #8]
 2345 02e8 18BA     		rev	r0, r3
 2346 02ea FFF7FEFF 		bl	CRYP_DataIn
 2347              	.LVL465:
 911:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(inputlength));
 2348              		.loc 1 911 0
 2349 02ee 0020     		movs	r0, #0
ARM GAS  /tmp/ccg7Oav1.s 			page 72


 2350              	.LVL466:
 2351 02f0 FFF7FEFF 		bl	CRYP_DataIn
 2352              	.LVL467:
 912:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait until the OFNE flag is reset */
 2353              		.loc 1 912 0
 2354 02f4 039B     		ldr	r3, [sp, #12]
 2355 02f6 18BA     		rev	r0, r3
 2356 02f8 FFF7FEFF 		bl	CRYP_DataIn
 2357              	.LVL468:
 2358              	.L84:
 914:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 2359              		.loc 1 914 0 discriminator 1
 2360 02fc 0420     		movs	r0, #4
 2361 02fe FFF7FEFF 		bl	CRYP_GetFlagStatus
 2362              	.LVL469:
 2363 0302 0028     		cmp	r0, #0
 2364 0304 FAD0     		beq	.L84
 920:FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 2365              		.loc 1 920 0
 2366 0306 FFF7FEFF 		bl	CRYP_DataOut
 2367              	.LVL470:
 2368 030a 259B     		ldr	r3, [sp, #148]
 2369 030c 1860     		str	r0, [r3]
 2370              	.LVL471:
 922:FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 2371              		.loc 1 922 0
 2372 030e FFF7FEFF 		bl	CRYP_DataOut
 2373              	.LVL472:
 2374 0312 259B     		ldr	r3, [sp, #148]
 2375 0314 5860     		str	r0, [r3, #4]
 2376              	.LVL473:
 924:FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 2377              		.loc 1 924 0
 2378 0316 FFF7FEFF 		bl	CRYP_DataOut
 2379              	.LVL474:
 2380 031a 259B     		ldr	r3, [sp, #148]
 2381 031c 9860     		str	r0, [r3, #8]
 2382              	.LVL475:
 926:FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 2383              		.loc 1 926 0
 2384 031e FFF7FEFF 		bl	CRYP_DataOut
 2385              	.LVL476:
 2386 0322 259B     		ldr	r3, [sp, #148]
 2387 0324 D860     		str	r0, [r3, #12]
 2388              	.LVL477:
 2389 0326 A7E0     		b	.L85
 2390              	.LVL478:
 2391              	.L117:
 963:FWLIB/src/stm32f4xx_cryp_aes.c ****       
 2392              		.loc 1 963 0
 2393 0328 4FF48030 		mov	r0, #65536
 2394 032c FFF7FEFF 		bl	CRYP_PhaseConfig
 2395              	.LVL479:
 966:FWLIB/src/stm32f4xx_cryp_aes.c ****       
 2396              		.loc 1 966 0
 2397 0330 0120     		movs	r0, #1
 2398 0332 FFF7FEFF 		bl	CRYP_Cmd
ARM GAS  /tmp/ccg7Oav1.s 			page 73


 2399              	.LVL480:
 968:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2400              		.loc 1 968 0
 2401 0336 FFF7FEFF 		bl	CRYP_GetCmdStatus
 2402              	.LVL481:
 2403 033a 0028     		cmp	r0, #0
 2404 033c 00F0A480 		beq	.L107
 2405 0340 4FF00008 		mov	r8, #0
 2406              	.LVL482:
 2407 0344 13E0     		b	.L88
 2408              	.LVL483:
 2409              	.L89:
 978:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 2410              		.loc 1 978 0 discriminator 1
 2411 0346 0120     		movs	r0, #1
 2412 0348 FFF7FEFF 		bl	CRYP_GetFlagStatus
 2413              	.LVL484:
 2414 034c 0028     		cmp	r0, #0
 2415 034e FAD0     		beq	.L89
 983:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 2416              		.loc 1 983 0 discriminator 2
 2417 0350 2868     		ldr	r0, [r5]
 2418 0352 FFF7FEFF 		bl	CRYP_DataIn
 2419              	.LVL485:
 985:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 2420              		.loc 1 985 0 discriminator 2
 2421 0356 6868     		ldr	r0, [r5, #4]
 2422 0358 FFF7FEFF 		bl	CRYP_DataIn
 2423              	.LVL486:
 987:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 2424              		.loc 1 987 0 discriminator 2
 2425 035c A868     		ldr	r0, [r5, #8]
 2426 035e FFF7FEFF 		bl	CRYP_DataIn
 2427              	.LVL487:
 989:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 2428              		.loc 1 989 0 discriminator 2
 2429 0362 E868     		ldr	r0, [r5, #12]
 2430 0364 FFF7FEFF 		bl	CRYP_DataIn
 2431              	.LVL488:
 990:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 2432              		.loc 1 990 0 discriminator 2
 2433 0368 1035     		adds	r5, r5, #16
 2434              	.LVL489:
 975:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2435              		.loc 1 975 0 discriminator 2
 2436 036a 08F11008 		add	r8, r8, #16
 2437              	.LVL490:
 2438              	.L88:
 975:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2439              		.loc 1 975 0 is_stmt 0 discriminator 1
 2440 036e D045     		cmp	r8, r10
 2441 0370 E9D3     		bcc	.L89
 994:FWLIB/src/stm32f4xx_cryp_aes.c ****       do
 2442              		.loc 1 994 0 is_stmt 1
 2443 0372 0023     		movs	r3, #0
 2444 0374 0593     		str	r3, [sp, #20]
 2445              	.LVL491:
ARM GAS  /tmp/ccg7Oav1.s 			page 74


 2446              	.L91:
 997:FWLIB/src/stm32f4xx_cryp_aes.c ****         counter++;
 2447              		.loc 1 997 0 discriminator 2
 2448 0376 1020     		movs	r0, #16
 2449 0378 FFF7FEFF 		bl	CRYP_GetFlagStatus
 2450              	.LVL492:
 2451 037c 0246     		mov	r2, r0
 2452              	.LVL493:
 998:FWLIB/src/stm32f4xx_cryp_aes.c ****       }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 2453              		.loc 1 998 0 discriminator 2
 2454 037e 059B     		ldr	r3, [sp, #20]
 2455 0380 0133     		adds	r3, r3, #1
 2456 0382 0593     		str	r3, [sp, #20]
 999:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 2457              		.loc 1 999 0 discriminator 2
 2458 0384 059B     		ldr	r3, [sp, #20]
 2459 0386 B3F5803F 		cmp	r3, #65536
 2460 038a 01D0     		beq	.L90
 999:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 2461              		.loc 1 999 0 is_stmt 0 discriminator 1
 2462 038c 0028     		cmp	r0, #0
 2463 038e F2D1     		bne	.L91
 2464              	.L90:
1001:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2465              		.loc 1 1001 0 is_stmt 1
 2466 0390 0AB9     		cbnz	r2, .L108
 681:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 2467              		.loc 1 681 0
 2468 0392 0125     		movs	r5, #1
 2469              	.LVL494:
 2470 0394 89E6     		b	.L87
 2471              	.LVL495:
 2472              	.L108:
1003:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 2473              		.loc 1 1003 0
 2474 0396 0025     		movs	r5, #0
 2475              	.LVL496:
 2476 0398 87E6     		b	.L87
 2477              	.LVL497:
 2478              	.L95:
1017:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1018:FWLIB/src/stm32f4xx_cryp_aes.c ****         /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
1019:FWLIB/src/stm32f4xx_cryp_aes.c ****            the CRYP peripheral (please check the device sales type. */
1020:FWLIB/src/stm32f4xx_cryp_aes.c ****         return(ERROR);
1021:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1022:FWLIB/src/stm32f4xx_cryp_aes.c ****       
1023:FWLIB/src/stm32f4xx_cryp_aes.c ****       for(loopcounter = 0; ((loopcounter < ILength) && (status != ERROR)); loopcounter+=16)
1024:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1025:FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Wait until the IFEM flag is reset */
1026:FWLIB/src/stm32f4xx_cryp_aes.c ****         while(CRYP_GetFlagStatus(CRYP_FLAG_IFEM) == RESET)
1027:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
1028:FWLIB/src/stm32f4xx_cryp_aes.c ****         }
1029:FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Write the Input block in the IN FIFO */
1030:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
1031:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
1032:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
1033:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
ARM GAS  /tmp/ccg7Oav1.s 			page 75


1034:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
1035:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
1036:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
1037:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
1038:FWLIB/src/stm32f4xx_cryp_aes.c ****         
1039:FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Wait until the complete message has been processed */
1040:FWLIB/src/stm32f4xx_cryp_aes.c ****         counter = 0;
1041:FWLIB/src/stm32f4xx_cryp_aes.c ****         do
1042:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
1043:FWLIB/src/stm32f4xx_cryp_aes.c ****           busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
1044:FWLIB/src/stm32f4xx_cryp_aes.c ****           counter++;
1045:FWLIB/src/stm32f4xx_cryp_aes.c ****         }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
1046:FWLIB/src/stm32f4xx_cryp_aes.c **** 
1047:FWLIB/src/stm32f4xx_cryp_aes.c ****         if (busystatus != RESET)
 2479              		.loc 1 1047 0
 2480 039a 002A     		cmp	r2, #0
 2481 039c 38D1     		bne	.L110
 2482              	.LVL498:
 2483              	.L98:
1048:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
1049:FWLIB/src/stm32f4xx_cryp_aes.c ****           status = ERROR;
1050:FWLIB/src/stm32f4xx_cryp_aes.c ****         }
1051:FWLIB/src/stm32f4xx_cryp_aes.c ****         else
1052:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
1053:FWLIB/src/stm32f4xx_cryp_aes.c ****           /* Wait until the OFNE flag is reset */
1054:FWLIB/src/stm32f4xx_cryp_aes.c ****           while(CRYP_GetFlagStatus(CRYP_FLAG_OFNE) == RESET)
 2484              		.loc 1 1054 0 discriminator 1
 2485 039e 0420     		movs	r0, #4
 2486 03a0 FFF7FEFF 		bl	CRYP_GetFlagStatus
 2487              	.LVL499:
 2488 03a4 0028     		cmp	r0, #0
 2489 03a6 FAD0     		beq	.L98
1055:FWLIB/src/stm32f4xx_cryp_aes.c ****           {
1056:FWLIB/src/stm32f4xx_cryp_aes.c ****           }
1057:FWLIB/src/stm32f4xx_cryp_aes.c ****           
1058:FWLIB/src/stm32f4xx_cryp_aes.c ****           /* Read the Output block from the Output FIFO */
1059:FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 2490              		.loc 1 1059 0
 2491 03a8 FFF7FEFF 		bl	CRYP_DataOut
 2492              	.LVL500:
 2493 03ac 3060     		str	r0, [r6]
 2494              	.LVL501:
1060:FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
1061:FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 2495              		.loc 1 1061 0
 2496 03ae FFF7FEFF 		bl	CRYP_DataOut
 2497              	.LVL502:
 2498 03b2 7060     		str	r0, [r6, #4]
 2499              	.LVL503:
1062:FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
1063:FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 2500              		.loc 1 1063 0
 2501 03b4 FFF7FEFF 		bl	CRYP_DataOut
 2502              	.LVL504:
 2503 03b8 B060     		str	r0, [r6, #8]
 2504              	.LVL505:
1064:FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
ARM GAS  /tmp/ccg7Oav1.s 			page 76


1065:FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 2505              		.loc 1 1065 0
 2506 03ba FFF7FEFF 		bl	CRYP_DataOut
 2507              	.LVL506:
 2508 03be F060     		str	r0, [r6, #12]
1066:FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 2509              		.loc 1 1066 0
 2510 03c0 1036     		adds	r6, r6, #16
 2511              	.LVL507:
 2512              	.L97:
1023:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2513              		.loc 1 1023 0 discriminator 2
 2514 03c2 08F11008 		add	r8, r8, #16
 2515              	.LVL508:
 2516              	.L93:
1023:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2517              		.loc 1 1023 0 is_stmt 0 discriminator 1
 2518 03c6 B845     		cmp	r8, r7
 2519 03c8 24D2     		bcs	.L92
1023:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2520              		.loc 1 1023 0 discriminator 3
 2521 03ca 1DB3     		cbz	r5, .L92
 2522              	.L94:
1026:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 2523              		.loc 1 1026 0 is_stmt 1 discriminator 1
 2524 03cc 0120     		movs	r0, #1
 2525 03ce FFF7FEFF 		bl	CRYP_GetFlagStatus
 2526              	.LVL509:
 2527 03d2 0028     		cmp	r0, #0
 2528 03d4 FAD0     		beq	.L94
1030:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 2529              		.loc 1 1030 0
 2530 03d6 2068     		ldr	r0, [r4]
 2531 03d8 FFF7FEFF 		bl	CRYP_DataIn
 2532              	.LVL510:
1032:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 2533              		.loc 1 1032 0
 2534 03dc 6068     		ldr	r0, [r4, #4]
 2535 03de FFF7FEFF 		bl	CRYP_DataIn
 2536              	.LVL511:
1034:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 2537              		.loc 1 1034 0
 2538 03e2 A068     		ldr	r0, [r4, #8]
 2539 03e4 FFF7FEFF 		bl	CRYP_DataIn
 2540              	.LVL512:
1036:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 2541              		.loc 1 1036 0
 2542 03e8 E068     		ldr	r0, [r4, #12]
 2543 03ea FFF7FEFF 		bl	CRYP_DataIn
 2544              	.LVL513:
1037:FWLIB/src/stm32f4xx_cryp_aes.c ****         
 2545              		.loc 1 1037 0
 2546 03ee 1034     		adds	r4, r4, #16
 2547              	.LVL514:
1040:FWLIB/src/stm32f4xx_cryp_aes.c ****         do
 2548              		.loc 1 1040 0
 2549 03f0 0023     		movs	r3, #0
ARM GAS  /tmp/ccg7Oav1.s 			page 77


 2550              	.LVL515:
 2551 03f2 0593     		str	r3, [sp, #20]
 2552              	.LVL516:
 2553              	.L96:
1043:FWLIB/src/stm32f4xx_cryp_aes.c ****           counter++;
 2554              		.loc 1 1043 0 discriminator 2
 2555 03f4 1020     		movs	r0, #16
 2556 03f6 FFF7FEFF 		bl	CRYP_GetFlagStatus
 2557              	.LVL517:
 2558 03fa 0246     		mov	r2, r0
 2559              	.LVL518:
1044:FWLIB/src/stm32f4xx_cryp_aes.c ****         }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 2560              		.loc 1 1044 0 discriminator 2
 2561 03fc 059B     		ldr	r3, [sp, #20]
 2562 03fe 0133     		adds	r3, r3, #1
 2563 0400 0593     		str	r3, [sp, #20]
1045:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 2564              		.loc 1 1045 0 discriminator 2
 2565 0402 059B     		ldr	r3, [sp, #20]
 2566 0404 B3F5803F 		cmp	r3, #65536
 2567 0408 C7D0     		beq	.L95
1045:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 2568              		.loc 1 1045 0 is_stmt 0 discriminator 1
 2569 040a 0028     		cmp	r0, #0
 2570 040c F2D1     		bne	.L96
 2571 040e C4E7     		b	.L95
 2572              	.L110:
1049:FWLIB/src/stm32f4xx_cryp_aes.c ****         }
 2573              		.loc 1 1049 0 is_stmt 1
 2574 0410 0025     		movs	r5, #0
 2575              	.LVL519:
 2576 0412 D6E7     		b	.L97
 2577              	.LVL520:
 2578              	.L92:
1067:FWLIB/src/stm32f4xx_cryp_aes.c ****         }
1068:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1069:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1070:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1071:FWLIB/src/stm32f4xx_cryp_aes.c ****     /***************************** final phase ********************************/
1072:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Select final phase */
1073:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_PhaseConfig(CRYP_Phase_Final);
 2579              		.loc 1 1073 0
 2580 0414 4FF44030 		mov	r0, #196608
 2581 0418 FFF7FEFF 		bl	CRYP_PhaseConfig
 2582              	.LVL521:
1074:FWLIB/src/stm32f4xx_cryp_aes.c **** 
1075:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
1076:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 2583              		.loc 1 1076 0
 2584 041c 0120     		movs	r0, #1
 2585 041e FFF7FEFF 		bl	CRYP_Cmd
 2586              	.LVL522:
1077:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1078:FWLIB/src/stm32f4xx_cryp_aes.c ****     if(CRYP_GetCmdStatus() == DISABLE)
 2587              		.loc 1 1078 0
 2588 0422 FFF7FEFF 		bl	CRYP_GetCmdStatus
 2589              	.LVL523:
ARM GAS  /tmp/ccg7Oav1.s 			page 78


 2590 0426 20B9     		cbnz	r0, .L120
1079:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1080:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
1081:FWLIB/src/stm32f4xx_cryp_aes.c ****          the CRYP peripheral (please check the device sales type. */
1082:FWLIB/src/stm32f4xx_cryp_aes.c ****       return(ERROR);
 2591              		.loc 1 1082 0
 2592 0428 0025     		movs	r5, #0
 2593              	.LVL524:
 2594              	.L72:
1083:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1084:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1085:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Write number of bits concatenated with header in the IN FIFO */
1086:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(headerlength>>32));
1087:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(headerlength));
1088:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(inputlength>>32));
1089:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(inputlength));
1090:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait until the OFNE flag is reset */
1091:FWLIB/src/stm32f4xx_cryp_aes.c ****     while(CRYP_GetFlagStatus(CRYP_FLAG_OFNE) == RESET)
1092:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1093:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1094:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1095:FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr = (uint32_t)AuthTAG;
1096:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Read the Auth TAG in the IN FIFO */
1097:FWLIB/src/stm32f4xx_cryp_aes.c ****     *(uint32_t*)(tagaddr) = CRYP_DataOut();
1098:FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
1099:FWLIB/src/stm32f4xx_cryp_aes.c ****     *(uint32_t*)(tagaddr) = CRYP_DataOut();
1100:FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
1101:FWLIB/src/stm32f4xx_cryp_aes.c ****     *(uint32_t*)(tagaddr) = CRYP_DataOut();
1102:FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
1103:FWLIB/src/stm32f4xx_cryp_aes.c ****     *(uint32_t*)(tagaddr) = CRYP_DataOut();
1104:FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
1105:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
1106:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Disable Crypto */
1107:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(DISABLE);
1108:FWLIB/src/stm32f4xx_cryp_aes.c **** 
1109:FWLIB/src/stm32f4xx_cryp_aes.c ****   return status;
1110:FWLIB/src/stm32f4xx_cryp_aes.c **** }
 2595              		.loc 1 1110 0
 2596 042a 2846     		mov	r0, r5
 2597 042c 17B0     		add	sp, sp, #92
 2598              	.LCFI14:
 2599              		.cfi_remember_state
 2600              		.cfi_def_cfa_offset 36
 2601              		@ sp needed
 2602 042e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2603              	.LVL525:
 2604              	.L120:
 2605              	.LCFI15:
 2606              		.cfi_restore_state
1086:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(headerlength));
 2607              		.loc 1 1086 0
 2608 0432 0020     		movs	r0, #0
 2609              	.LVL526:
 2610 0434 FFF7FEFF 		bl	CRYP_DataIn
 2611              	.LVL527:
1087:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(inputlength>>32));
 2612              		.loc 1 1087 0
ARM GAS  /tmp/ccg7Oav1.s 			page 79


 2613 0438 029B     		ldr	r3, [sp, #8]
 2614 043a 18BA     		rev	r0, r3
 2615 043c FFF7FEFF 		bl	CRYP_DataIn
 2616              	.LVL528:
1088:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(inputlength));
 2617              		.loc 1 1088 0
 2618 0440 0020     		movs	r0, #0
 2619              	.LVL529:
 2620 0442 FFF7FEFF 		bl	CRYP_DataIn
 2621              	.LVL530:
1089:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait until the OFNE flag is reset */
 2622              		.loc 1 1089 0
 2623 0446 039B     		ldr	r3, [sp, #12]
 2624 0448 18BA     		rev	r0, r3
 2625 044a FFF7FEFF 		bl	CRYP_DataIn
 2626              	.LVL531:
 2627              	.L99:
1091:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 2628              		.loc 1 1091 0 discriminator 1
 2629 044e 0420     		movs	r0, #4
 2630 0450 FFF7FEFF 		bl	CRYP_GetFlagStatus
 2631              	.LVL532:
 2632 0454 0028     		cmp	r0, #0
 2633 0456 FAD0     		beq	.L99
1097:FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 2634              		.loc 1 1097 0
 2635 0458 FFF7FEFF 		bl	CRYP_DataOut
 2636              	.LVL533:
 2637 045c 259B     		ldr	r3, [sp, #148]
 2638 045e 1860     		str	r0, [r3]
 2639              	.LVL534:
1099:FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 2640              		.loc 1 1099 0
 2641 0460 FFF7FEFF 		bl	CRYP_DataOut
 2642              	.LVL535:
 2643 0464 259B     		ldr	r3, [sp, #148]
 2644 0466 5860     		str	r0, [r3, #4]
 2645              	.LVL536:
1101:FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 2646              		.loc 1 1101 0
 2647 0468 FFF7FEFF 		bl	CRYP_DataOut
 2648              	.LVL537:
 2649 046c 259B     		ldr	r3, [sp, #148]
 2650 046e 9860     		str	r0, [r3, #8]
 2651              	.LVL538:
1103:FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 2652              		.loc 1 1103 0
 2653 0470 FFF7FEFF 		bl	CRYP_DataOut
 2654              	.LVL539:
 2655 0474 259B     		ldr	r3, [sp, #148]
 2656 0476 D860     		str	r0, [r3, #12]
 2657              	.LVL540:
 2658              	.L85:
1107:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 2659              		.loc 1 1107 0
 2660 0478 0020     		movs	r0, #0
 2661              	.LVL541:
ARM GAS  /tmp/ccg7Oav1.s 			page 80


 2662 047a FFF7FEFF 		bl	CRYP_Cmd
 2663              	.LVL542:
1109:FWLIB/src/stm32f4xx_cryp_aes.c **** }
 2664              		.loc 1 1109 0
 2665 047e D4E7     		b	.L72
 2666              	.LVL543:
 2667              	.L101:
 795:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 2668              		.loc 1 795 0
 2669 0480 0025     		movs	r5, #0
 2670              	.LVL544:
 2671 0482 D2E7     		b	.L72
 2672              	.LVL545:
 2673              	.L103:
 843:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 2674              		.loc 1 843 0
 2675 0484 0025     		movs	r5, #0
 2676              	.LVL546:
 2677 0486 D0E7     		b	.L72
 2678              	.LVL547:
 2679              	.L107:
 972:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 2680              		.loc 1 972 0
 2681 0488 0025     		movs	r5, #0
 2682              	.LVL548:
 2683 048a CEE7     		b	.L72
 2684              	.LVL549:
 2685              	.L109:
1020:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 2686              		.loc 1 1020 0
 2687 048c 0025     		movs	r5, #0
 2688              	.LVL550:
 2689 048e CCE7     		b	.L72
 2690              		.cfi_endproc
 2691              	.LFE115:
 2693              		.section	.text.CRYP_AES_CCM,"ax",%progbits
 2694              		.align	1
 2695              		.global	CRYP_AES_CCM
 2696              		.syntax unified
 2697              		.thumb
 2698              		.thumb_func
 2699              		.fpu softvfp
 2701              	CRYP_AES_CCM:
 2702              	.LFB116:
1111:FWLIB/src/stm32f4xx_cryp_aes.c **** 
1112:FWLIB/src/stm32f4xx_cryp_aes.c **** /**
1113:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @brief  Encrypt and decrypt using AES in CCM Mode. The GCM and CCM modes
1114:FWLIB/src/stm32f4xx_cryp_aes.c ****   *         are available only on STM32F437x Devices.
1115:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Mode: encryption or decryption Mode.
1116:FWLIB/src/stm32f4xx_cryp_aes.c ****   *          This parameter can be one of the following values:
1117:FWLIB/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_ENCRYPT: Encryption
1118:FWLIB/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_DECRYPT: Decryption
1119:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Nonce: the nounce used for AES algorithm. It shall be unique for each processing.
1120:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Key: Key used for AES algorithm.
1121:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Keysize: length of the Key, must be a 128, 192 or 256.
1122:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Input: pointer to the Input buffer.
1123:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Ilength: length of the Input buffer in bytes, must be a multiple of 16.
ARM GAS  /tmp/ccg7Oav1.s 			page 81


1124:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Header: pointer to the header buffer.
1125:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Hlength: length of the header buffer in bytes.
1126:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  HBuffer: pointer to temporary buffer used to append the header
1127:FWLIB/src/stm32f4xx_cryp_aes.c ****   *         HBuffer size must be equal to Hlength + 21
1128:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Output: pointer to the returned buffer.
1129:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  AuthTAG: pointer to the authentication TAG buffer.
1130:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  TAGSize: the size of the TAG (called also MAC).
1131:FWLIB/src/stm32f4xx_cryp_aes.c ****   * @retval An ErrorStatus enumeration value:
1132:FWLIB/src/stm32f4xx_cryp_aes.c ****   *          - SUCCESS: Operation done
1133:FWLIB/src/stm32f4xx_cryp_aes.c ****   *          - ERROR: Operation failed
1134:FWLIB/src/stm32f4xx_cryp_aes.c ****   */
1135:FWLIB/src/stm32f4xx_cryp_aes.c **** ErrorStatus CRYP_AES_CCM(uint8_t Mode, 
1136:FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint8_t* Nonce, uint32_t NonceSize,
1137:FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint8_t *Key, uint16_t Keysize,
1138:FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint8_t *Input, uint32_t ILength,
1139:FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint8_t *Header, uint32_t HLength, uint8_t *HBuffer,
1140:FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint8_t *Output,
1141:FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint8_t *AuthTAG, uint32_t TAGSize)
1142:FWLIB/src/stm32f4xx_cryp_aes.c **** {
 2703              		.loc 1 1142 0
 2704              		.cfi_startproc
 2705              		@ args = 36, pretend = 0, frame = 136
 2706              		@ frame_needed = 0, uses_anonymous_args = 0
 2707              	.LVL551:
 2708 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2709              	.LCFI16:
 2710              		.cfi_def_cfa_offset 36
 2711              		.cfi_offset 4, -36
 2712              		.cfi_offset 5, -32
 2713              		.cfi_offset 6, -28
 2714              		.cfi_offset 7, -24
 2715              		.cfi_offset 8, -20
 2716              		.cfi_offset 9, -16
 2717              		.cfi_offset 10, -12
 2718              		.cfi_offset 11, -8
 2719              		.cfi_offset 14, -4
 2720 0004 A3B0     		sub	sp, sp, #140
 2721              	.LCFI17:
 2722              		.cfi_def_cfa_offset 176
 2723 0006 0290     		str	r0, [sp, #8]
 2724 0008 9A46     		mov	r10, r3
 2725 000a BDF8B030 		ldrh	r3, [sp, #176]
 2726              	.LVL552:
 2727 000e 0393     		str	r3, [sp, #12]
 2728 0010 DDF8B890 		ldr	r9, [sp, #184]
 2729 0014 DDF8BCC0 		ldr	ip, [sp, #188]
 2730 0018 309D     		ldr	r5, [sp, #192]
 2731 001a DDF8C4E0 		ldr	lr, [sp, #196]
1143:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_InitTypeDef AES_CRYP_InitStructure;
1144:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
1145:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_IVInitTypeDef AES_CRYP_IVInitStructure;
1146:FWLIB/src/stm32f4xx_cryp_aes.c ****   __IO uint32_t counter = 0;
 2732              		.loc 1 1146 0
 2733 001e 0023     		movs	r3, #0
 2734 0020 1193     		str	r3, [sp, #68]
 2735              	.LVL553:
1147:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t busystatus = 0;
ARM GAS  /tmp/ccg7Oav1.s 			page 82


1148:FWLIB/src/stm32f4xx_cryp_aes.c ****   ErrorStatus status = SUCCESS;
1149:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
1150:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t inputaddr  = (uint32_t)Input;
 2736              		.loc 1 1150 0
 2737 0022 2D9C     		ldr	r4, [sp, #180]
 2738              	.LVL554:
1151:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t outputaddr = (uint32_t)Output;
 2739              		.loc 1 1151 0
 2740 0024 DDF8C880 		ldr	r8, [sp, #200]
 2741              	.LVL555:
1152:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t headeraddr = (uint32_t)Header;
 2742              		.loc 1 1152 0
 2743 0028 6646     		mov	r6, ip
 2744              	.LVL556:
1153:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t tagaddr = (uint32_t)AuthTAG;
 2745              		.loc 1 1153 0
 2746 002a DDF8CCB0 		ldr	fp, [sp, #204]
 2747              	.LVL557:
1154:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t headersize = HLength;
1155:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t loopcounter = 0;
1156:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t bufferidx = 0;
1157:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint8_t blockb0[16] = {0};/* Block B0 */
 2748              		.loc 1 1157 0
 2749 002e 0DA8     		add	r0, sp, #52
 2750              	.LVL558:
 2751 0030 0D93     		str	r3, [sp, #52]
 2752 0032 0E93     		str	r3, [sp, #56]
 2753 0034 0F93     		str	r3, [sp, #60]
 2754 0036 1093     		str	r3, [sp, #64]
1158:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint8_t ctr[16] = {0}; /* Counter */
 2755              		.loc 1 1158 0
 2756 0038 09AF     		add	r7, sp, #36
 2757 003a 0993     		str	r3, [sp, #36]
 2758 003c 7B60     		str	r3, [r7, #4]
 2759 003e BB60     		str	r3, [r7, #8]
 2760 0040 FB60     		str	r3, [r7, #12]
1159:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t temptag[4] = {0}; /* temporary TAG (MAC) */
 2761              		.loc 1 1159 0
 2762 0042 0593     		str	r3, [sp, #20]
 2763 0044 0693     		str	r3, [sp, #24]
 2764 0046 0793     		str	r3, [sp, #28]
 2765 0048 0893     		str	r3, [sp, #32]
 2766              	.LVL559:
1160:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t ctraddr = (uint32_t)ctr;
1161:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t b0addr = (uint32_t)blockb0;
 2767              		.loc 1 1161 0
 2768 004a 0190     		str	r0, [sp, #4]
 2769              	.LVL560:
1162:FWLIB/src/stm32f4xx_cryp_aes.c ****   
1163:FWLIB/src/stm32f4xx_cryp_aes.c ****   /************************ Formatting the header block ***********************/
1164:FWLIB/src/stm32f4xx_cryp_aes.c ****   if(headersize != 0)
 2770              		.loc 1 1164 0
 2771 004c 55B3     		cbz	r5, .L122
1165:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
1166:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Check that the associated data (or header) length is lower than 2^16 - 2^8 = 65536 - 256 = 6
1167:FWLIB/src/stm32f4xx_cryp_aes.c ****     if(headersize < 65280)
 2772              		.loc 1 1167 0
ARM GAS  /tmp/ccg7Oav1.s 			page 83


 2773 004e B5F57F4F 		cmp	r5, #65280
 2774 0052 09D2     		bcs	.L123
 2775              	.LVL561:
1168:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1169:FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = (uint8_t) ((headersize >> 8) & 0xFF);
 2776              		.loc 1 1169 0
 2777 0054 C5F30723 		ubfx	r3, r5, #8, #8
 2778 0058 8EF80030 		strb	r3, [lr]
 2779              	.LVL562:
1170:FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = (uint8_t) ((headersize) & 0xFF);
 2780              		.loc 1 1170 0
 2781 005c 8EF80150 		strb	r5, [lr, #1]
1171:FWLIB/src/stm32f4xx_cryp_aes.c ****       headersize += 2;
 2782              		.loc 1 1171 0
 2783 0060 0235     		adds	r5, r5, #2
 2784              	.LVL563:
1170:FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = (uint8_t) ((headersize) & 0xFF);
 2785              		.loc 1 1170 0
 2786 0062 0220     		movs	r0, #2
 2787              	.LVL564:
 2788              	.L124:
1172:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1173:FWLIB/src/stm32f4xx_cryp_aes.c ****     else
1174:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1175:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* header is encoded as 0xff || 0xfe || [headersize]32, i.e., six octets */
1176:FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = 0xFF;
1177:FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = 0xFE;
1178:FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = headersize & 0xff000000;
1179:FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = headersize & 0x00ff0000;
1180:FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = headersize & 0x0000ff00;
1181:FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = headersize & 0x000000ff;
1182:FWLIB/src/stm32f4xx_cryp_aes.c ****       headersize += 6;
1183:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1184:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Copy the header buffer in internal buffer "HBuffer" */
1185:FWLIB/src/stm32f4xx_cryp_aes.c ****     for(loopcounter = 0; loopcounter < headersize; loopcounter++)
 2789              		.loc 1 1185 0
 2790 0064 0023     		movs	r3, #0
 2791 0066 17E0     		b	.L125
 2792              	.LVL565:
 2793              	.L123:
1176:FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = 0xFE;
 2794              		.loc 1 1176 0
 2795 0068 FF23     		movs	r3, #255
 2796 006a 8EF80030 		strb	r3, [lr]
 2797              	.LVL566:
1177:FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = headersize & 0xff000000;
 2798              		.loc 1 1177 0
 2799 006e FE23     		movs	r3, #254
 2800 0070 8EF80130 		strb	r3, [lr, #1]
 2801              	.LVL567:
1178:FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = headersize & 0x00ff0000;
 2802              		.loc 1 1178 0
 2803 0074 0023     		movs	r3, #0
 2804 0076 8EF80230 		strb	r3, [lr, #2]
 2805              	.LVL568:
1179:FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = headersize & 0x0000ff00;
 2806              		.loc 1 1179 0
ARM GAS  /tmp/ccg7Oav1.s 			page 84


 2807 007a 8EF80330 		strb	r3, [lr, #3]
 2808              	.LVL569:
1180:FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = headersize & 0x000000ff;
 2809              		.loc 1 1180 0
 2810 007e 8EF80430 		strb	r3, [lr, #4]
 2811              	.LVL570:
1181:FWLIB/src/stm32f4xx_cryp_aes.c ****       headersize += 6;
 2812              		.loc 1 1181 0
 2813 0082 8EF80550 		strb	r5, [lr, #5]
1182:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 2814              		.loc 1 1182 0
 2815 0086 0635     		adds	r5, r5, #6
 2816              	.LVL571:
1181:FWLIB/src/stm32f4xx_cryp_aes.c ****       headersize += 6;
 2817              		.loc 1 1181 0
 2818 0088 0620     		movs	r0, #6
 2819              	.LVL572:
 2820 008a EBE7     		b	.L124
 2821              	.LVL573:
 2822              	.L126:
1186:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1187:FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = Header[loopcounter];
 2823              		.loc 1 1187 0 discriminator 3
 2824 008c 1CF80360 		ldrb	r6, [ip, r3]	@ zero_extendqisi2
 2825 0090 0EF80060 		strb	r6, [lr, r0]
1185:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 2826              		.loc 1 1185 0 discriminator 3
 2827 0094 0133     		adds	r3, r3, #1
 2828              	.LVL574:
 2829              		.loc 1 1187 0 discriminator 3
 2830 0096 0130     		adds	r0, r0, #1
 2831              	.LVL575:
 2832              	.L125:
1185:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 2833              		.loc 1 1185 0 discriminator 1
 2834 0098 9D42     		cmp	r5, r3
 2835 009a F7D8     		bhi	.L126
1188:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1189:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Check if the header size is modulo 16 */
1190:FWLIB/src/stm32f4xx_cryp_aes.c ****     if ((headersize % 16) != 0)
 2836              		.loc 1 1190 0
 2837 009c 15F00F0F 		tst	r5, #15
 2838 00a0 24D1     		bne	.L174
 2839              	.LVL576:
 2840              	.L128:
1191:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1192:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Padd the header buffer with 0s till the HBuffer length is modulo 16 */
1193:FWLIB/src/stm32f4xx_cryp_aes.c ****       for(loopcounter = headersize; loopcounter <= ((headersize/16) + 1) * 16; loopcounter++)
1194:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1195:FWLIB/src/stm32f4xx_cryp_aes.c ****         HBuffer[loopcounter] = 0;
1196:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1197:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Set the header size to modulo 16 */
1198:FWLIB/src/stm32f4xx_cryp_aes.c ****       headersize = ((headersize/16) + 1) * 16;
1199:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1200:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* set the pointer headeraddr to HBuffer */
1201:FWLIB/src/stm32f4xx_cryp_aes.c ****     headeraddr = (uint32_t)HBuffer;
 2841              		.loc 1 1201 0
ARM GAS  /tmp/ccg7Oav1.s 			page 85


 2842 00a2 7646     		mov	r6, lr
 2843              	.LVL577:
 2844              	.L122:
1202:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
1203:FWLIB/src/stm32f4xx_cryp_aes.c ****   /************************* Formatting the block B0 **************************/
1204:FWLIB/src/stm32f4xx_cryp_aes.c ****   if(headersize != 0)
 2845              		.loc 1 1204 0
 2846 00a4 15B1     		cbz	r5, .L130
1205:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
1206:FWLIB/src/stm32f4xx_cryp_aes.c ****     blockb0[0] = 0x40;
 2847              		.loc 1 1206 0
 2848 00a6 4023     		movs	r3, #64
 2849 00a8 8DF83430 		strb	r3, [sp, #52]
 2850              	.L130:
1207:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
1208:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Flags byte */
1209:FWLIB/src/stm32f4xx_cryp_aes.c ****   blockb0[0] |= 0u | (((( (uint8_t) TAGSize - 2) / 2) & 0x07 ) << 3 ) | ( ( (uint8_t) (15 - NonceSi
 2851              		.loc 1 1209 0
 2852 00ac 9DF8D030 		ldrb	r3, [sp, #208]	@ zero_extendqisi2
 2853 00b0 023B     		subs	r3, r3, #2
 2854 00b2 03EBD373 		add	r3, r3, r3, lsr #31
 2855 00b6 5B10     		asrs	r3, r3, #1
 2856 00b8 DB00     		lsls	r3, r3, #3
 2857 00ba 03F03803 		and	r3, r3, #56
 2858 00be C2F10E00 		rsb	r0, r2, #14
 2859 00c2 00F00700 		and	r0, r0, #7
 2860 00c6 0343     		orrs	r3, r3, r0
 2861 00c8 9DF83400 		ldrb	r0, [sp, #52]	@ zero_extendqisi2
 2862 00cc 0343     		orrs	r3, r3, r0
 2863 00ce 8DF83430 		strb	r3, [sp, #52]
 2864              	.LVL578:
1210:FWLIB/src/stm32f4xx_cryp_aes.c ****   
1211:FWLIB/src/stm32f4xx_cryp_aes.c ****   for (loopcounter = 0; loopcounter < NonceSize; loopcounter++)
 2865              		.loc 1 1211 0
 2866 00d2 0023     		movs	r3, #0
 2867 00d4 14E0     		b	.L131
 2868              	.LVL579:
 2869              	.L129:
1195:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 2870              		.loc 1 1195 0 discriminator 3
 2871 00d6 0023     		movs	r3, #0
 2872 00d8 0EF80030 		strb	r3, [lr, r0]
1193:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2873              		.loc 1 1193 0 discriminator 3
 2874 00dc 0130     		adds	r0, r0, #1
 2875              	.LVL580:
 2876              	.L127:
1193:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2877              		.loc 1 1193 0 is_stmt 0 discriminator 1
 2878 00de 25F00F03 		bic	r3, r5, #15
 2879 00e2 1033     		adds	r3, r3, #16
 2880 00e4 9842     		cmp	r0, r3
 2881 00e6 F6D9     		bls	.L129
1198:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 2882              		.loc 1 1198 0 is_stmt 1
 2883 00e8 1D46     		mov	r5, r3
 2884              	.LVL581:
ARM GAS  /tmp/ccg7Oav1.s 			page 86


 2885 00ea DAE7     		b	.L128
 2886              	.LVL582:
 2887              	.L174:
 2888 00ec 2846     		mov	r0, r5
 2889              	.LVL583:
 2890 00ee F6E7     		b	.L127
 2891              	.LVL584:
 2892              	.L132:
1212:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
1213:FWLIB/src/stm32f4xx_cryp_aes.c ****     blockb0[loopcounter+1] = Nonce[loopcounter];
 2893              		.loc 1 1213 0 discriminator 3
 2894 00f0 581C     		adds	r0, r3, #1
 2895 00f2 11F803E0 		ldrb	lr, [r1, r3]	@ zero_extendqisi2
 2896 00f6 22AB     		add	r3, sp, #136
 2897              	.LVL585:
 2898 00f8 0344     		add	r3, r3, r0
 2899 00fa 03F854EC 		strb	lr, [r3, #-84]
 2900              	.LVL586:
1211:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 2901              		.loc 1 1211 0 discriminator 3
 2902 00fe 0346     		mov	r3, r0
 2903              	.LVL587:
 2904              	.L131:
1211:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 2905              		.loc 1 1211 0 is_stmt 0 discriminator 1
 2906 0100 9342     		cmp	r3, r2
 2907 0102 F5D3     		bcc	.L132
 2908 0104 05E0     		b	.L133
 2909              	.LVL588:
 2910              	.L134:
1214:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
1215:FWLIB/src/stm32f4xx_cryp_aes.c ****   for ( ; loopcounter < 13; loopcounter++)
1216:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
1217:FWLIB/src/stm32f4xx_cryp_aes.c ****     blockb0[loopcounter+1] = 0;
 2911              		.loc 1 1217 0 is_stmt 1 discriminator 2
 2912 0106 0133     		adds	r3, r3, #1
 2913              	.LVL589:
 2914 0108 22A9     		add	r1, sp, #136
 2915 010a 1944     		add	r1, r1, r3
 2916 010c 0020     		movs	r0, #0
 2917 010e 01F8540C 		strb	r0, [r1, #-84]
 2918              	.LVL590:
 2919              	.L133:
1215:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 2920              		.loc 1 1215 0 discriminator 1
 2921 0112 0C2B     		cmp	r3, #12
 2922 0114 F7D9     		bls	.L134
1218:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
1219:FWLIB/src/stm32f4xx_cryp_aes.c ****   
1220:FWLIB/src/stm32f4xx_cryp_aes.c ****   blockb0[14] = ((ILength >> 8) & 0xFF);
 2923              		.loc 1 1220 0
 2924 0116 4FEA1923 		lsr	r3, r9, #8
 2925              	.LVL591:
 2926 011a 8DF84230 		strb	r3, [sp, #66]
1221:FWLIB/src/stm32f4xx_cryp_aes.c ****   blockb0[15] = (ILength & 0xFF);
 2927              		.loc 1 1221 0
 2928 011e 8DF84390 		strb	r9, [sp, #67]
ARM GAS  /tmp/ccg7Oav1.s 			page 87


1222:FWLIB/src/stm32f4xx_cryp_aes.c ****   
1223:FWLIB/src/stm32f4xx_cryp_aes.c ****   /************************* Formatting the initial counter *******************/
1224:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Byte 0:
1225:FWLIB/src/stm32f4xx_cryp_aes.c ****      Bits 7 and 6 are reserved and shall be set to 0
1226:FWLIB/src/stm32f4xx_cryp_aes.c ****      Bits 3, 4, and 5 shall also be set to 0, to ensure that all the counter blocks
1227:FWLIB/src/stm32f4xx_cryp_aes.c ****      are distinct from B0
1228:FWLIB/src/stm32f4xx_cryp_aes.c ****      Bits 0, 1, and 2 contain the same encoding of q as in B0
1229:FWLIB/src/stm32f4xx_cryp_aes.c ****   */
1230:FWLIB/src/stm32f4xx_cryp_aes.c ****   ctr[0] = blockb0[0] & 0x07;
 2929              		.loc 1 1230 0
 2930 0122 9DF83430 		ldrb	r3, [sp, #52]	@ zero_extendqisi2
 2931 0126 03F00703 		and	r3, r3, #7
 2932 012a 8DF82430 		strb	r3, [sp, #36]
 2933              	.LVL592:
1231:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* byte 1 to NonceSize is the IV (Nonce) */
1232:FWLIB/src/stm32f4xx_cryp_aes.c ****   for(loopcounter = 1; loopcounter < NonceSize + 1; loopcounter++)
 2934              		.loc 1 1232 0
 2935 012e 0123     		movs	r3, #1
 2936 0130 06E0     		b	.L135
 2937              	.LVL593:
 2938              	.L136:
1233:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
1234:FWLIB/src/stm32f4xx_cryp_aes.c ****     ctr[loopcounter] = blockb0[loopcounter];
 2939              		.loc 1 1234 0 discriminator 3
 2940 0132 22A9     		add	r1, sp, #136
 2941 0134 1944     		add	r1, r1, r3
 2942 0136 11F8540C 		ldrb	r0, [r1, #-84]	@ zero_extendqisi2
 2943 013a 01F8640C 		strb	r0, [r1, #-100]
1232:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 2944              		.loc 1 1232 0 discriminator 3
 2945 013e 0133     		adds	r3, r3, #1
 2946              	.LVL594:
 2947              	.L135:
1232:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 2948              		.loc 1 1232 0 is_stmt 0 discriminator 1
 2949 0140 511C     		adds	r1, r2, #1
 2950 0142 8B42     		cmp	r3, r1
 2951 0144 F5D3     		bcc	.L136
1235:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
1236:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Set the LSB to 1 */
1237:FWLIB/src/stm32f4xx_cryp_aes.c ****   ctr[15] |= 0x01;
 2952              		.loc 1 1237 0 is_stmt 1
 2953 0146 9DF83330 		ldrb	r3, [sp, #51]	@ zero_extendqisi2
 2954              	.LVL595:
 2955 014a 43F00103 		orr	r3, r3, #1
 2956 014e 8DF83330 		strb	r3, [sp, #51]
1238:FWLIB/src/stm32f4xx_cryp_aes.c ****   
1239:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Crypto structures initialisation*/
1240:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
 2957              		.loc 1 1240 0
 2958 0152 16A8     		add	r0, sp, #88
 2959 0154 FFF7FEFF 		bl	CRYP_KeyStructInit
 2960              	.LVL596:
1241:FWLIB/src/stm32f4xx_cryp_aes.c ****   
1242:FWLIB/src/stm32f4xx_cryp_aes.c ****   switch(Keysize)
 2961              		.loc 1 1242 0
 2962 0158 039B     		ldr	r3, [sp, #12]
ARM GAS  /tmp/ccg7Oav1.s 			page 88


 2963 015a C02B     		cmp	r3, #192
 2964 015c 69D0     		beq	.L138
 2965 015e B3F5807F 		cmp	r3, #256
 2966 0162 00F08280 		beq	.L139
 2967 0166 802B     		cmp	r3, #128
 2968 0168 50D0     		beq	.L190
 2969              	.LVL597:
 2970              	.L137:
1243:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
1244:FWLIB/src/stm32f4xx_cryp_aes.c ****     case 128:
1245:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
1246:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
1247:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1248:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
1249:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1250:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
1251:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1252:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
1253:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
1254:FWLIB/src/stm32f4xx_cryp_aes.c ****     case 192:
1255:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
1256:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
1257:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1258:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
1259:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1260:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
1261:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1262:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
1263:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1264:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
1265:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1266:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
1267:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
1268:FWLIB/src/stm32f4xx_cryp_aes.c ****     case 256:
1269:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
1270:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
1271:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1272:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
1273:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1274:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
1275:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1276:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
1277:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1278:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
1279:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1280:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
1281:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1282:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
1283:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1284:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
1285:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
1286:FWLIB/src/stm32f4xx_cryp_aes.c ****     default:
1287:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
1288:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
1289:FWLIB/src/stm32f4xx_cryp_aes.c ****   
1290:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
1291:FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Left = (__REV(*(uint32_t*)(ctraddr)));
ARM GAS  /tmp/ccg7Oav1.s 			page 89


 2971              		.loc 1 1291 0
 2972 016a 099B     		ldr	r3, [sp, #36]
 2973              	.LVL598:
 2974              	.LBB398:
 2975              	.LBB399:
 2976              		.loc 2 407 0
 2977 016c 1BBA     		rev	r3, r3
 2978              	.LVL599:
 2979              	.LBE399:
 2980              	.LBE398:
 2981              		.loc 1 1291 0
 2982 016e 1293     		str	r3, [sp, #72]
 2983              	.LVL600:
1292:FWLIB/src/stm32f4xx_cryp_aes.c ****   ctraddr+=4;
1293:FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Right= (__REV(*(uint32_t*)(ctraddr)));
 2984              		.loc 1 1293 0
 2985 0170 7B68     		ldr	r3, [r7, #4]
 2986              	.LVL601:
 2987              	.LBB400:
 2988              	.LBB401:
 2989              		.loc 2 407 0
 2990 0172 1BBA     		rev	r3, r3
 2991              	.LVL602:
 2992              	.LBE401:
 2993              	.LBE400:
 2994              		.loc 1 1293 0
 2995 0174 1393     		str	r3, [sp, #76]
 2996              	.LVL603:
1294:FWLIB/src/stm32f4xx_cryp_aes.c ****   ctraddr+=4;
1295:FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Left = (__REV(*(uint32_t*)(ctraddr)));
 2997              		.loc 1 1295 0
 2998 0176 BB68     		ldr	r3, [r7, #8]
 2999              	.LVL604:
 3000              	.LBB402:
 3001              	.LBB403:
 3002              		.loc 2 407 0
 3003 0178 1BBA     		rev	r3, r3
 3004              	.LVL605:
 3005              	.LBE403:
 3006              	.LBE402:
 3007              		.loc 1 1295 0
 3008 017a 1493     		str	r3, [sp, #80]
 3009              	.LVL606:
1296:FWLIB/src/stm32f4xx_cryp_aes.c ****   ctraddr+=4;
1297:FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Right= (__REV(*(uint32_t*)(ctraddr)));
 3010              		.loc 1 1297 0
 3011 017c FB68     		ldr	r3, [r7, #12]
 3012              	.LVL607:
 3013              	.LBB404:
 3014              	.LBB405:
 3015              		.loc 2 407 0
 3016 017e 1BBA     		rev	r3, r3
 3017              	.LVL608:
 3018              	.LBE405:
 3019              	.LBE404:
 3020              		.loc 1 1297 0
 3021 0180 1593     		str	r3, [sp, #84]
ARM GAS  /tmp/ccg7Oav1.s 			page 90


1298:FWLIB/src/stm32f4xx_cryp_aes.c ****   
1299:FWLIB/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Encryption ------------------*/
1300:FWLIB/src/stm32f4xx_cryp_aes.c ****   if(Mode == MODE_ENCRYPT) /* AES encryption */
 3022              		.loc 1 1300 0
 3023 0182 029B     		ldr	r3, [sp, #8]
 3024 0184 012B     		cmp	r3, #1
 3025 0186 00F09480 		beq	.L191
1301:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
1302:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Flush IN/OUT FIFOs */
1303:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_FIFOFlush();
1304:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1305:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Key Initialisation */
1306:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
1307:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1308:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* CRYP Initialization Vectors */
1309:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_IVInit(&AES_CRYP_IVInitStructure);
1310:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1311:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Key preparation for decryption process */
1312:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Encrypt;
1313:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_CCM;
1314:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
1315:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
1316:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1317:FWLIB/src/stm32f4xx_cryp_aes.c ****     /***************************** Init phase *********************************/
1318:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Select init phase */
1319:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_PhaseConfig(CRYP_Phase_Init);
1320:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1321:FWLIB/src/stm32f4xx_cryp_aes.c ****     b0addr = (uint32_t)blockb0;
1322:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Write the blockb0 block in the IN FIFO */
1323:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn((*(uint32_t*)(b0addr)));
1324:FWLIB/src/stm32f4xx_cryp_aes.c ****     b0addr+=4;
1325:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn((*(uint32_t*)(b0addr)));
1326:FWLIB/src/stm32f4xx_cryp_aes.c ****     b0addr+=4;
1327:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn((*(uint32_t*)(b0addr)));
1328:FWLIB/src/stm32f4xx_cryp_aes.c ****     b0addr+=4;
1329:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn((*(uint32_t*)(b0addr)));
1330:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1331:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
1332:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
1333:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1334:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait for CRYPEN bit to be 0 */
1335:FWLIB/src/stm32f4xx_cryp_aes.c ****     while(CRYP_GetCmdStatus() == ENABLE)
1336:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1337:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1338:FWLIB/src/stm32f4xx_cryp_aes.c ****     /***************************** header phase *******************************/
1339:FWLIB/src/stm32f4xx_cryp_aes.c ****     if(headersize != 0)
1340:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1341:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Select header phase */
1342:FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_PhaseConfig(CRYP_Phase_Header);
1343:FWLIB/src/stm32f4xx_cryp_aes.c ****       
1344:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Enable Crypto processor */
1345:FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_Cmd(ENABLE);
1346:FWLIB/src/stm32f4xx_cryp_aes.c ****       
1347:FWLIB/src/stm32f4xx_cryp_aes.c ****       if(CRYP_GetCmdStatus() == DISABLE)
1348:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1349:FWLIB/src/stm32f4xx_cryp_aes.c ****          /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
1350:FWLIB/src/stm32f4xx_cryp_aes.c ****             the CRYP peripheral (please check the device sales type. */
ARM GAS  /tmp/ccg7Oav1.s 			page 91


1351:FWLIB/src/stm32f4xx_cryp_aes.c ****          return(ERROR);
1352:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1353:FWLIB/src/stm32f4xx_cryp_aes.c ****       
1354:FWLIB/src/stm32f4xx_cryp_aes.c ****       for(loopcounter = 0; (loopcounter < headersize); loopcounter+=16)
1355:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1356:FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Wait until the IFEM flag is reset */
1357:FWLIB/src/stm32f4xx_cryp_aes.c ****         while(CRYP_GetFlagStatus(CRYP_FLAG_IFEM) == RESET)
1358:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
1359:FWLIB/src/stm32f4xx_cryp_aes.c ****         }
1360:FWLIB/src/stm32f4xx_cryp_aes.c ****         
1361:FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Write the Input block in the IN FIFO */
1362:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
1363:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
1364:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
1365:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
1366:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
1367:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
1368:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
1369:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
1370:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1371:FWLIB/src/stm32f4xx_cryp_aes.c ****       
1372:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Wait until the complete message has been processed */
1373:FWLIB/src/stm32f4xx_cryp_aes.c ****       counter = 0;
1374:FWLIB/src/stm32f4xx_cryp_aes.c ****       do
1375:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1376:FWLIB/src/stm32f4xx_cryp_aes.c ****         busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
1377:FWLIB/src/stm32f4xx_cryp_aes.c ****         counter++;
1378:FWLIB/src/stm32f4xx_cryp_aes.c ****       }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
1379:FWLIB/src/stm32f4xx_cryp_aes.c **** 
1380:FWLIB/src/stm32f4xx_cryp_aes.c ****       if (busystatus != RESET)
1381:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1382:FWLIB/src/stm32f4xx_cryp_aes.c ****         status = ERROR;
1383:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1384:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1385:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1386:FWLIB/src/stm32f4xx_cryp_aes.c ****     /**************************** payload phase *******************************/
1387:FWLIB/src/stm32f4xx_cryp_aes.c ****     if(ILength != 0)
1388:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1389:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Select payload phase */
1390:FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_PhaseConfig(CRYP_Phase_Payload);
1391:FWLIB/src/stm32f4xx_cryp_aes.c ****       
1392:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Enable Crypto processor */
1393:FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_Cmd(ENABLE);
1394:FWLIB/src/stm32f4xx_cryp_aes.c ****       
1395:FWLIB/src/stm32f4xx_cryp_aes.c ****       if(CRYP_GetCmdStatus() == DISABLE)
1396:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1397:FWLIB/src/stm32f4xx_cryp_aes.c ****         /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
1398:FWLIB/src/stm32f4xx_cryp_aes.c ****            the CRYP peripheral (please check the device sales type. */
1399:FWLIB/src/stm32f4xx_cryp_aes.c ****         return(ERROR);
1400:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1401:FWLIB/src/stm32f4xx_cryp_aes.c ****       
1402:FWLIB/src/stm32f4xx_cryp_aes.c ****       for(loopcounter = 0; ((loopcounter < ILength) && (status != ERROR)); loopcounter+=16)
1403:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1404:FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Wait until the IFEM flag is reset */
1405:FWLIB/src/stm32f4xx_cryp_aes.c ****         while(CRYP_GetFlagStatus(CRYP_FLAG_IFEM) == RESET)
1406:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
1407:FWLIB/src/stm32f4xx_cryp_aes.c ****         }
ARM GAS  /tmp/ccg7Oav1.s 			page 92


1408:FWLIB/src/stm32f4xx_cryp_aes.c ****         
1409:FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Write the Input block in the IN FIFO */
1410:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
1411:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
1412:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
1413:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
1414:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
1415:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
1416:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
1417:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
1418:FWLIB/src/stm32f4xx_cryp_aes.c ****         
1419:FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Wait until the complete message has been processed */
1420:FWLIB/src/stm32f4xx_cryp_aes.c ****         counter = 0;
1421:FWLIB/src/stm32f4xx_cryp_aes.c ****         do
1422:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
1423:FWLIB/src/stm32f4xx_cryp_aes.c ****           busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
1424:FWLIB/src/stm32f4xx_cryp_aes.c ****           counter++;
1425:FWLIB/src/stm32f4xx_cryp_aes.c ****         }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
1426:FWLIB/src/stm32f4xx_cryp_aes.c **** 
1427:FWLIB/src/stm32f4xx_cryp_aes.c ****         if (busystatus != RESET)
1428:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
1429:FWLIB/src/stm32f4xx_cryp_aes.c ****           status = ERROR;
1430:FWLIB/src/stm32f4xx_cryp_aes.c ****         }
1431:FWLIB/src/stm32f4xx_cryp_aes.c ****         else
1432:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
1433:FWLIB/src/stm32f4xx_cryp_aes.c ****           /* Wait until the OFNE flag is reset */
1434:FWLIB/src/stm32f4xx_cryp_aes.c ****           while(CRYP_GetFlagStatus(CRYP_FLAG_OFNE) == RESET)
1435:FWLIB/src/stm32f4xx_cryp_aes.c ****           {
1436:FWLIB/src/stm32f4xx_cryp_aes.c ****           }
1437:FWLIB/src/stm32f4xx_cryp_aes.c ****           
1438:FWLIB/src/stm32f4xx_cryp_aes.c ****           /* Read the Output block from the Output FIFO */
1439:FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
1440:FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
1441:FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
1442:FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
1443:FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
1444:FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
1445:FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
1446:FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
1447:FWLIB/src/stm32f4xx_cryp_aes.c ****         }
1448:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1449:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1450:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1451:FWLIB/src/stm32f4xx_cryp_aes.c ****     /***************************** final phase ********************************/
1452:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Select final phase */
1453:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_PhaseConfig(CRYP_Phase_Final);
1454:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1455:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
1456:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
1457:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1458:FWLIB/src/stm32f4xx_cryp_aes.c ****     if(CRYP_GetCmdStatus() == DISABLE)
1459:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1460:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
1461:FWLIB/src/stm32f4xx_cryp_aes.c ****          the CRYP peripheral (please check the device sales type. */
1462:FWLIB/src/stm32f4xx_cryp_aes.c ****       return(ERROR);
1463:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1464:FWLIB/src/stm32f4xx_cryp_aes.c ****     
ARM GAS  /tmp/ccg7Oav1.s 			page 93


1465:FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr = (uint32_t)ctr;
1466:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Write the counter block in the IN FIFO */
1467:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(ctraddr));
1468:FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
1469:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(ctraddr));
1470:FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
1471:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(ctraddr));
1472:FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
1473:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Reset bit 0 (after 8-bit swap) is equivalent to reset bit 24 (before 8-bit swap) */
1474:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(ctraddr) & 0xfeffffff);
1475:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1476:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait until the OFNE flag is reset */
1477:FWLIB/src/stm32f4xx_cryp_aes.c ****     while(CRYP_GetFlagStatus(CRYP_FLAG_OFNE) == RESET)
1478:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1479:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1480:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1481:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Read the Auth TAG in the IN FIFO */
1482:FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[0] = CRYP_DataOut();
1483:FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[1] = CRYP_DataOut();
1484:FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[2] = CRYP_DataOut();
1485:FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[3] = CRYP_DataOut();
1486:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
1487:FWLIB/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Decryption ------------------*/
1488:FWLIB/src/stm32f4xx_cryp_aes.c ****   else /* AES decryption */
1489:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
1490:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Flush IN/OUT FIFOs */
1491:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_FIFOFlush();
 3026              		.loc 1 1491 0
 3027 018a FFF7FEFF 		bl	CRYP_FIFOFlush
 3028              	.LVL609:
1492:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1493:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Key Initialisation */
1494:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 3029              		.loc 1 1494 0
 3030 018e 16A8     		add	r0, sp, #88
 3031 0190 FFF7FEFF 		bl	CRYP_KeyInit
 3032              	.LVL610:
1495:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1496:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* CRYP Initialization Vectors */
1497:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_IVInit(&AES_CRYP_IVInitStructure);
 3033              		.loc 1 1497 0
 3034 0194 12A8     		add	r0, sp, #72
 3035 0196 FFF7FEFF 		bl	CRYP_IVInit
 3036              	.LVL611:
1498:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1499:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Key preparation for decryption process */
1500:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 3037              		.loc 1 1500 0
 3038 019a 0423     		movs	r3, #4
 3039 019c 1E93     		str	r3, [sp, #120]
1501:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_CCM;
 3040              		.loc 1 1501 0
 3041 019e 4FF00813 		mov	r3, #524296
 3042 01a2 1F93     		str	r3, [sp, #124]
1502:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 3043              		.loc 1 1502 0
 3044 01a4 8023     		movs	r3, #128
ARM GAS  /tmp/ccg7Oav1.s 			page 94


 3045 01a6 2093     		str	r3, [sp, #128]
1503:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
 3046              		.loc 1 1503 0
 3047 01a8 1EA8     		add	r0, sp, #120
 3048 01aa FFF7FEFF 		bl	CRYP_Init
 3049              	.LVL612:
1504:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1505:FWLIB/src/stm32f4xx_cryp_aes.c ****     /***************************** Init phase *********************************/
1506:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Select init phase */
1507:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_PhaseConfig(CRYP_Phase_Init);
 3050              		.loc 1 1507 0
 3051 01ae 0020     		movs	r0, #0
 3052 01b0 FFF7FEFF 		bl	CRYP_PhaseConfig
 3053              	.LVL613:
1508:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1509:FWLIB/src/stm32f4xx_cryp_aes.c ****     b0addr = (uint32_t)blockb0;
1510:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Write the blockb0 block in the IN FIFO */
1511:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn((*(uint32_t*)(b0addr)));
 3054              		.loc 1 1511 0
 3055 01b4 0D98     		ldr	r0, [sp, #52]
 3056 01b6 FFF7FEFF 		bl	CRYP_DataIn
 3057              	.LVL614:
1512:FWLIB/src/stm32f4xx_cryp_aes.c ****     b0addr+=4;
1513:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn((*(uint32_t*)(b0addr)));
 3058              		.loc 1 1513 0
 3059 01ba 019B     		ldr	r3, [sp, #4]
 3060 01bc 5868     		ldr	r0, [r3, #4]
 3061 01be FFF7FEFF 		bl	CRYP_DataIn
 3062              	.LVL615:
1514:FWLIB/src/stm32f4xx_cryp_aes.c ****     b0addr+=4;
1515:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn((*(uint32_t*)(b0addr)));
 3063              		.loc 1 1515 0
 3064 01c2 019A     		ldr	r2, [sp, #4]
 3065 01c4 9068     		ldr	r0, [r2, #8]
 3066 01c6 FFF7FEFF 		bl	CRYP_DataIn
 3067              	.LVL616:
1516:FWLIB/src/stm32f4xx_cryp_aes.c ****     b0addr+=4;
1517:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn((*(uint32_t*)(b0addr)));
 3068              		.loc 1 1517 0
 3069 01ca 019A     		ldr	r2, [sp, #4]
 3070 01cc D068     		ldr	r0, [r2, #12]
 3071 01ce FFF7FEFF 		bl	CRYP_DataIn
 3072              	.LVL617:
1518:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1519:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
1520:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 3073              		.loc 1 1520 0
 3074 01d2 0120     		movs	r0, #1
 3075 01d4 FFF7FEFF 		bl	CRYP_Cmd
 3076              	.LVL618:
 3077              	.L158:
1521:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1522:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait for CRYPEN bit to be 0 */
1523:FWLIB/src/stm32f4xx_cryp_aes.c ****     while(CRYP_GetCmdStatus() == ENABLE)
 3078              		.loc 1 1523 0 discriminator 1
 3079 01d8 FFF7FEFF 		bl	CRYP_GetCmdStatus
 3080              	.LVL619:
ARM GAS  /tmp/ccg7Oav1.s 			page 95


 3081 01dc 0128     		cmp	r0, #1
 3082 01de FBD0     		beq	.L158
1524:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1525:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1526:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1527:FWLIB/src/stm32f4xx_cryp_aes.c ****     /***************************** header phase *******************************/
1528:FWLIB/src/stm32f4xx_cryp_aes.c ****     if(headersize != 0)
 3083              		.loc 1 1528 0
 3084 01e0 002D     		cmp	r5, #0
 3085 01e2 40F04D81 		bne	.L192
1148:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 3086              		.loc 1 1148 0
 3087 01e6 0125     		movs	r5, #1
 3088              	.LVL620:
 3089              	.L159:
1529:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1530:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Select header phase */
1531:FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_PhaseConfig(CRYP_Phase_Header);
1532:FWLIB/src/stm32f4xx_cryp_aes.c ****       
1533:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Enable Crypto processor */
1534:FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_Cmd(ENABLE);
1535:FWLIB/src/stm32f4xx_cryp_aes.c ****       
1536:FWLIB/src/stm32f4xx_cryp_aes.c ****       if(CRYP_GetCmdStatus() == DISABLE)
1537:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1538:FWLIB/src/stm32f4xx_cryp_aes.c ****         /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
1539:FWLIB/src/stm32f4xx_cryp_aes.c ****            the CRYP peripheral (please check the device sales type. */
1540:FWLIB/src/stm32f4xx_cryp_aes.c ****         return(ERROR);
1541:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1542:FWLIB/src/stm32f4xx_cryp_aes.c ****       
1543:FWLIB/src/stm32f4xx_cryp_aes.c ****       for(loopcounter = 0; (loopcounter < headersize); loopcounter+=16)
1544:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1545:FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Wait until the IFEM flag is reset */
1546:FWLIB/src/stm32f4xx_cryp_aes.c ****         while(CRYP_GetFlagStatus(CRYP_FLAG_IFEM) == RESET)
1547:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
1548:FWLIB/src/stm32f4xx_cryp_aes.c ****         }
1549:FWLIB/src/stm32f4xx_cryp_aes.c ****         
1550:FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Write the Input block in the IN FIFO */
1551:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
1552:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
1553:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
1554:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
1555:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
1556:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
1557:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
1558:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
1559:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1560:FWLIB/src/stm32f4xx_cryp_aes.c ****       
1561:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Wait until the complete message has been processed */
1562:FWLIB/src/stm32f4xx_cryp_aes.c ****       counter = 0;
1563:FWLIB/src/stm32f4xx_cryp_aes.c ****       do
1564:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1565:FWLIB/src/stm32f4xx_cryp_aes.c ****         busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
1566:FWLIB/src/stm32f4xx_cryp_aes.c ****         counter++;
1567:FWLIB/src/stm32f4xx_cryp_aes.c ****       }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
1568:FWLIB/src/stm32f4xx_cryp_aes.c **** 
1569:FWLIB/src/stm32f4xx_cryp_aes.c ****       if (busystatus != RESET)
1570:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
ARM GAS  /tmp/ccg7Oav1.s 			page 96


1571:FWLIB/src/stm32f4xx_cryp_aes.c ****         status = ERROR;
1572:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1573:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1574:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1575:FWLIB/src/stm32f4xx_cryp_aes.c ****     /**************************** payload phase *******************************/
1576:FWLIB/src/stm32f4xx_cryp_aes.c ****     if(ILength != 0)
 3090              		.loc 1 1576 0
 3091 01e8 B9F1000F 		cmp	r9, #0
 3092 01ec 00F0C281 		beq	.L164
1577:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1578:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Select payload phase */
1579:FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_PhaseConfig(CRYP_Phase_Payload);
 3093              		.loc 1 1579 0
 3094 01f0 4FF40030 		mov	r0, #131072
 3095 01f4 FFF7FEFF 		bl	CRYP_PhaseConfig
 3096              	.LVL621:
1580:FWLIB/src/stm32f4xx_cryp_aes.c **** 
1581:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Enable Crypto processor */
1582:FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_Cmd(ENABLE);
 3097              		.loc 1 1582 0
 3098 01f8 0120     		movs	r0, #1
 3099 01fa FFF7FEFF 		bl	CRYP_Cmd
 3100              	.LVL622:
1583:FWLIB/src/stm32f4xx_cryp_aes.c ****       
1584:FWLIB/src/stm32f4xx_cryp_aes.c ****       if(CRYP_GetCmdStatus() == DISABLE)
 3101              		.loc 1 1584 0
 3102 01fe FFF7FEFF 		bl	CRYP_GetCmdStatus
 3103              	.LVL623:
 3104 0202 0028     		cmp	r0, #0
 3105 0204 00F0F881 		beq	.L184
 3106 0208 0026     		movs	r6, #0
 3107              	.LVL624:
 3108 020a 8CE1     		b	.L165
 3109              	.LVL625:
 3110              	.L190:
1245:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 3111              		.loc 1 1245 0
 3112 020c 0023     		movs	r3, #0
 3113 020e 2193     		str	r3, [sp, #132]
1246:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3114              		.loc 1 1246 0
 3115 0210 DAF80030 		ldr	r3, [r10]
 3116              	.LVL626:
 3117              	.LBB406:
 3118              	.LBB407:
 3119              		.loc 2 407 0
 3120 0214 1BBA     		rev	r3, r3
 3121              	.LVL627:
 3122              	.LBE407:
 3123              	.LBE406:
1246:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3124              		.loc 1 1246 0
 3125 0216 1A93     		str	r3, [sp, #104]
 3126              	.LVL628:
1248:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3127              		.loc 1 1248 0
 3128 0218 DAF80430 		ldr	r3, [r10, #4]
ARM GAS  /tmp/ccg7Oav1.s 			page 97


 3129              	.LVL629:
 3130              	.LBB408:
 3131              	.LBB409:
 3132              		.loc 2 407 0
 3133 021c 1BBA     		rev	r3, r3
 3134              	.LVL630:
 3135              	.LBE409:
 3136              	.LBE408:
1248:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3137              		.loc 1 1248 0
 3138 021e 1B93     		str	r3, [sp, #108]
 3139              	.LVL631:
1250:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3140              		.loc 1 1250 0
 3141 0220 DAF80830 		ldr	r3, [r10, #8]
 3142              	.LVL632:
 3143              	.LBB410:
 3144              	.LBB411:
 3145              		.loc 2 407 0
 3146 0224 1BBA     		rev	r3, r3
 3147              	.LVL633:
 3148              	.LBE411:
 3149              	.LBE410:
1250:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3150              		.loc 1 1250 0
 3151 0226 1C93     		str	r3, [sp, #112]
 3152              	.LVL634:
1252:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 3153              		.loc 1 1252 0
 3154 0228 DAF80C30 		ldr	r3, [r10, #12]
 3155              	.LVL635:
 3156              	.LBB412:
 3157              	.LBB413:
 3158              		.loc 2 407 0
 3159 022c 1BBA     		rev	r3, r3
 3160              	.LVL636:
 3161              	.LBE413:
 3162              	.LBE412:
1252:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 3163              		.loc 1 1252 0
 3164 022e 1D93     		str	r3, [sp, #116]
1253:FWLIB/src/stm32f4xx_cryp_aes.c ****     case 192:
 3165              		.loc 1 1253 0
 3166 0230 9BE7     		b	.L137
 3167              	.LVL637:
 3168              	.L138:
1255:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 3169              		.loc 1 1255 0
 3170 0232 4FF48073 		mov	r3, #256
 3171 0236 2193     		str	r3, [sp, #132]
1256:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3172              		.loc 1 1256 0
 3173 0238 DAF80030 		ldr	r3, [r10]
 3174              	.LVL638:
 3175              	.LBB414:
 3176              	.LBB415:
 3177              		.loc 2 407 0
ARM GAS  /tmp/ccg7Oav1.s 			page 98


 3178 023c 1BBA     		rev	r3, r3
 3179              	.LVL639:
 3180              	.LBE415:
 3181              	.LBE414:
1256:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3182              		.loc 1 1256 0
 3183 023e 1893     		str	r3, [sp, #96]
 3184              	.LVL640:
1258:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3185              		.loc 1 1258 0
 3186 0240 DAF80430 		ldr	r3, [r10, #4]
 3187              	.LVL641:
 3188              	.LBB416:
 3189              	.LBB417:
 3190              		.loc 2 407 0
 3191 0244 1BBA     		rev	r3, r3
 3192              	.LVL642:
 3193              	.LBE417:
 3194              	.LBE416:
1258:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3195              		.loc 1 1258 0
 3196 0246 1993     		str	r3, [sp, #100]
 3197              	.LVL643:
1260:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3198              		.loc 1 1260 0
 3199 0248 DAF80830 		ldr	r3, [r10, #8]
 3200              	.LVL644:
 3201              	.LBB418:
 3202              	.LBB419:
 3203              		.loc 2 407 0
 3204 024c 1BBA     		rev	r3, r3
 3205              	.LVL645:
 3206              	.LBE419:
 3207              	.LBE418:
1260:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3208              		.loc 1 1260 0
 3209 024e 1A93     		str	r3, [sp, #104]
 3210              	.LVL646:
1262:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3211              		.loc 1 1262 0
 3212 0250 DAF80C30 		ldr	r3, [r10, #12]
 3213              	.LVL647:
 3214              	.LBB420:
 3215              	.LBB421:
 3216              		.loc 2 407 0
 3217 0254 1BBA     		rev	r3, r3
 3218              	.LVL648:
 3219              	.LBE421:
 3220              	.LBE420:
1262:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3221              		.loc 1 1262 0
 3222 0256 1B93     		str	r3, [sp, #108]
 3223              	.LVL649:
1264:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3224              		.loc 1 1264 0
 3225 0258 DAF81030 		ldr	r3, [r10, #16]
 3226              	.LVL650:
ARM GAS  /tmp/ccg7Oav1.s 			page 99


 3227              	.LBB422:
 3228              	.LBB423:
 3229              		.loc 2 407 0
 3230 025c 1BBA     		rev	r3, r3
 3231              	.LVL651:
 3232              	.LBE423:
 3233              	.LBE422:
1264:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3234              		.loc 1 1264 0
 3235 025e 1C93     		str	r3, [sp, #112]
 3236              	.LVL652:
1266:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 3237              		.loc 1 1266 0
 3238 0260 DAF81430 		ldr	r3, [r10, #20]
 3239              	.LVL653:
 3240              	.LBB424:
 3241              	.LBB425:
 3242              		.loc 2 407 0
 3243 0264 1BBA     		rev	r3, r3
 3244              	.LVL654:
 3245              	.LBE425:
 3246              	.LBE424:
1266:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 3247              		.loc 1 1266 0
 3248 0266 1D93     		str	r3, [sp, #116]
1267:FWLIB/src/stm32f4xx_cryp_aes.c ****     case 256:
 3249              		.loc 1 1267 0
 3250 0268 7FE7     		b	.L137
 3251              	.LVL655:
 3252              	.L139:
1269:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 3253              		.loc 1 1269 0
 3254 026a 4FF40073 		mov	r3, #512
 3255 026e 2193     		str	r3, [sp, #132]
1270:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3256              		.loc 1 1270 0
 3257 0270 DAF80030 		ldr	r3, [r10]
 3258              	.LVL656:
 3259              	.LBB426:
 3260              	.LBB427:
 3261              		.loc 2 407 0
 3262 0274 1BBA     		rev	r3, r3
 3263              	.LVL657:
 3264              	.LBE427:
 3265              	.LBE426:
1270:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3266              		.loc 1 1270 0
 3267 0276 1693     		str	r3, [sp, #88]
 3268              	.LVL658:
1272:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3269              		.loc 1 1272 0
 3270 0278 DAF80430 		ldr	r3, [r10, #4]
 3271              	.LVL659:
 3272              	.LBB428:
 3273              	.LBB429:
 3274              		.loc 2 407 0
 3275 027c 1BBA     		rev	r3, r3
ARM GAS  /tmp/ccg7Oav1.s 			page 100


 3276              	.LVL660:
 3277              	.LBE429:
 3278              	.LBE428:
1272:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3279              		.loc 1 1272 0
 3280 027e 1793     		str	r3, [sp, #92]
 3281              	.LVL661:
1274:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3282              		.loc 1 1274 0
 3283 0280 DAF80830 		ldr	r3, [r10, #8]
 3284              	.LVL662:
 3285              	.LBB430:
 3286              	.LBB431:
 3287              		.loc 2 407 0
 3288 0284 1BBA     		rev	r3, r3
 3289              	.LVL663:
 3290              	.LBE431:
 3291              	.LBE430:
1274:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3292              		.loc 1 1274 0
 3293 0286 1893     		str	r3, [sp, #96]
 3294              	.LVL664:
1276:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3295              		.loc 1 1276 0
 3296 0288 DAF80C30 		ldr	r3, [r10, #12]
 3297              	.LVL665:
 3298              	.LBB432:
 3299              	.LBB433:
 3300              		.loc 2 407 0
 3301 028c 1BBA     		rev	r3, r3
 3302              	.LVL666:
 3303              	.LBE433:
 3304              	.LBE432:
1276:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3305              		.loc 1 1276 0
 3306 028e 1993     		str	r3, [sp, #100]
 3307              	.LVL667:
1278:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3308              		.loc 1 1278 0
 3309 0290 DAF81030 		ldr	r3, [r10, #16]
 3310              	.LVL668:
 3311              	.LBB434:
 3312              	.LBB435:
 3313              		.loc 2 407 0
 3314 0294 1BBA     		rev	r3, r3
 3315              	.LVL669:
 3316              	.LBE435:
 3317              	.LBE434:
1278:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3318              		.loc 1 1278 0
 3319 0296 1A93     		str	r3, [sp, #104]
 3320              	.LVL670:
1280:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3321              		.loc 1 1280 0
 3322 0298 DAF81430 		ldr	r3, [r10, #20]
 3323              	.LVL671:
 3324              	.LBB436:
ARM GAS  /tmp/ccg7Oav1.s 			page 101


 3325              	.LBB437:
 3326              		.loc 2 407 0
 3327 029c 1BBA     		rev	r3, r3
 3328              	.LVL672:
 3329              	.LBE437:
 3330              	.LBE436:
1280:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3331              		.loc 1 1280 0
 3332 029e 1B93     		str	r3, [sp, #108]
 3333              	.LVL673:
1282:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3334              		.loc 1 1282 0
 3335 02a0 DAF81830 		ldr	r3, [r10, #24]
 3336              	.LVL674:
 3337              	.LBB438:
 3338              	.LBB439:
 3339              		.loc 2 407 0
 3340 02a4 1BBA     		rev	r3, r3
 3341              	.LVL675:
 3342              	.LBE439:
 3343              	.LBE438:
1282:FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3344              		.loc 1 1282 0
 3345 02a6 1C93     		str	r3, [sp, #112]
 3346              	.LVL676:
1284:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 3347              		.loc 1 1284 0
 3348 02a8 DAF81C30 		ldr	r3, [r10, #28]
 3349              	.LVL677:
 3350              	.LBB440:
 3351              	.LBB441:
 3352              		.loc 2 407 0
 3353 02ac 1BBA     		rev	r3, r3
 3354              	.LVL678:
 3355              	.LBE441:
 3356              	.LBE440:
1284:FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 3357              		.loc 1 1284 0
 3358 02ae 1D93     		str	r3, [sp, #116]
1285:FWLIB/src/stm32f4xx_cryp_aes.c ****     default:
 3359              		.loc 1 1285 0
 3360 02b0 5BE7     		b	.L137
 3361              	.LVL679:
 3362              	.L191:
1303:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 3363              		.loc 1 1303 0
 3364 02b2 FFF7FEFF 		bl	CRYP_FIFOFlush
 3365              	.LVL680:
1306:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 3366              		.loc 1 1306 0
 3367 02b6 16A8     		add	r0, sp, #88
 3368 02b8 FFF7FEFF 		bl	CRYP_KeyInit
 3369              	.LVL681:
1309:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 3370              		.loc 1 1309 0
 3371 02bc 12A8     		add	r0, sp, #72
 3372 02be FFF7FEFF 		bl	CRYP_IVInit
ARM GAS  /tmp/ccg7Oav1.s 			page 102


 3373              	.LVL682:
1312:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_CCM;
 3374              		.loc 1 1312 0
 3375 02c2 4FF0000A 		mov	r10, #0
 3376              	.LVL683:
 3377 02c6 CDF878A0 		str	r10, [sp, #120]
1313:FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 3378              		.loc 1 1313 0
 3379 02ca 4FF00813 		mov	r3, #524296
 3380 02ce 1F93     		str	r3, [sp, #124]
1314:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
 3381              		.loc 1 1314 0
 3382 02d0 8023     		movs	r3, #128
 3383 02d2 2093     		str	r3, [sp, #128]
1315:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 3384              		.loc 1 1315 0
 3385 02d4 1EA8     		add	r0, sp, #120
 3386 02d6 FFF7FEFF 		bl	CRYP_Init
 3387              	.LVL684:
1319:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 3388              		.loc 1 1319 0
 3389 02da 5046     		mov	r0, r10
 3390 02dc FFF7FEFF 		bl	CRYP_PhaseConfig
 3391              	.LVL685:
1323:FWLIB/src/stm32f4xx_cryp_aes.c ****     b0addr+=4;
 3392              		.loc 1 1323 0
 3393 02e0 0D98     		ldr	r0, [sp, #52]
 3394 02e2 FFF7FEFF 		bl	CRYP_DataIn
 3395              	.LVL686:
1325:FWLIB/src/stm32f4xx_cryp_aes.c ****     b0addr+=4;
 3396              		.loc 1 1325 0
 3397 02e6 019B     		ldr	r3, [sp, #4]
 3398 02e8 5868     		ldr	r0, [r3, #4]
 3399 02ea FFF7FEFF 		bl	CRYP_DataIn
 3400              	.LVL687:
1327:FWLIB/src/stm32f4xx_cryp_aes.c ****     b0addr+=4;
 3401              		.loc 1 1327 0
 3402 02ee 019A     		ldr	r2, [sp, #4]
 3403 02f0 9068     		ldr	r0, [r2, #8]
 3404 02f2 FFF7FEFF 		bl	CRYP_DataIn
 3405              	.LVL688:
1329:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 3406              		.loc 1 1329 0
 3407 02f6 019A     		ldr	r2, [sp, #4]
 3408 02f8 D068     		ldr	r0, [r2, #12]
 3409 02fa FFF7FEFF 		bl	CRYP_DataIn
 3410              	.LVL689:
1332:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 3411              		.loc 1 1332 0
 3412 02fe 0120     		movs	r0, #1
 3413 0300 FFF7FEFF 		bl	CRYP_Cmd
 3414              	.LVL690:
 3415              	.L142:
1335:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 3416              		.loc 1 1335 0 discriminator 1
 3417 0304 FFF7FEFF 		bl	CRYP_GetCmdStatus
 3418              	.LVL691:
ARM GAS  /tmp/ccg7Oav1.s 			page 103


 3419 0308 0128     		cmp	r0, #1
 3420 030a FBD0     		beq	.L142
1339:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 3421              		.loc 1 1339 0
 3422 030c 95B9     		cbnz	r5, .L193
1148:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 3423              		.loc 1 1148 0
 3424 030e 0125     		movs	r5, #1
 3425              	.LVL692:
 3426              	.L143:
1387:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 3427              		.loc 1 1387 0
 3428 0310 B9F1000F 		cmp	r9, #0
 3429 0314 00F08880 		beq	.L149
1390:FWLIB/src/stm32f4xx_cryp_aes.c ****       
 3430              		.loc 1 1390 0
 3431 0318 4FF40030 		mov	r0, #131072
 3432 031c FFF7FEFF 		bl	CRYP_PhaseConfig
 3433              	.LVL693:
1393:FWLIB/src/stm32f4xx_cryp_aes.c ****       
 3434              		.loc 1 1393 0
 3435 0320 0120     		movs	r0, #1
 3436 0322 FFF7FEFF 		bl	CRYP_Cmd
 3437              	.LVL694:
1395:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3438              		.loc 1 1395 0
 3439 0326 FFF7FEFF 		bl	CRYP_GetCmdStatus
 3440              	.LVL695:
 3441 032a 0028     		cmp	r0, #0
 3442 032c 00F06081 		beq	.L178
 3443 0330 0026     		movs	r6, #0
 3444              	.LVL696:
 3445 0332 52E0     		b	.L150
 3446              	.LVL697:
 3447              	.L193:
1342:FWLIB/src/stm32f4xx_cryp_aes.c ****       
 3448              		.loc 1 1342 0
 3449 0334 4FF48030 		mov	r0, #65536
 3450 0338 FFF7FEFF 		bl	CRYP_PhaseConfig
 3451              	.LVL698:
1345:FWLIB/src/stm32f4xx_cryp_aes.c ****       
 3452              		.loc 1 1345 0
 3453 033c 0120     		movs	r0, #1
 3454 033e FFF7FEFF 		bl	CRYP_Cmd
 3455              	.LVL699:
1347:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3456              		.loc 1 1347 0
 3457 0342 FFF7FEFF 		bl	CRYP_GetCmdStatus
 3458              	.LVL700:
 3459 0346 0028     		cmp	r0, #0
 3460 0348 00F05081 		beq	.L176
 3461 034c 4FF0000A 		mov	r10, #0
 3462 0350 13E0     		b	.L145
 3463              	.LVL701:
 3464              	.L146:
1357:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 3465              		.loc 1 1357 0 discriminator 1
ARM GAS  /tmp/ccg7Oav1.s 			page 104


 3466 0352 0120     		movs	r0, #1
 3467 0354 FFF7FEFF 		bl	CRYP_GetFlagStatus
 3468              	.LVL702:
 3469 0358 0028     		cmp	r0, #0
 3470 035a FAD0     		beq	.L146
1362:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 3471              		.loc 1 1362 0 discriminator 2
 3472 035c 3068     		ldr	r0, [r6]
 3473 035e FFF7FEFF 		bl	CRYP_DataIn
 3474              	.LVL703:
1364:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 3475              		.loc 1 1364 0 discriminator 2
 3476 0362 7068     		ldr	r0, [r6, #4]
 3477 0364 FFF7FEFF 		bl	CRYP_DataIn
 3478              	.LVL704:
1366:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 3479              		.loc 1 1366 0 discriminator 2
 3480 0368 B068     		ldr	r0, [r6, #8]
 3481 036a FFF7FEFF 		bl	CRYP_DataIn
 3482              	.LVL705:
1368:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 3483              		.loc 1 1368 0 discriminator 2
 3484 036e F068     		ldr	r0, [r6, #12]
 3485 0370 FFF7FEFF 		bl	CRYP_DataIn
 3486              	.LVL706:
1369:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 3487              		.loc 1 1369 0 discriminator 2
 3488 0374 1036     		adds	r6, r6, #16
 3489              	.LVL707:
1354:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3490              		.loc 1 1354 0 discriminator 2
 3491 0376 0AF1100A 		add	r10, r10, #16
 3492              	.LVL708:
 3493              	.L145:
1354:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3494              		.loc 1 1354 0 is_stmt 0 discriminator 1
 3495 037a 5545     		cmp	r5, r10
 3496 037c E9D8     		bhi	.L146
1373:FWLIB/src/stm32f4xx_cryp_aes.c ****       do
 3497              		.loc 1 1373 0 is_stmt 1
 3498 037e 0023     		movs	r3, #0
 3499 0380 1193     		str	r3, [sp, #68]
 3500              	.LVL709:
 3501              	.L148:
1376:FWLIB/src/stm32f4xx_cryp_aes.c ****         counter++;
 3502              		.loc 1 1376 0 discriminator 2
 3503 0382 1020     		movs	r0, #16
 3504 0384 FFF7FEFF 		bl	CRYP_GetFlagStatus
 3505              	.LVL710:
 3506 0388 0246     		mov	r2, r0
 3507              	.LVL711:
1377:FWLIB/src/stm32f4xx_cryp_aes.c ****       }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 3508              		.loc 1 1377 0 discriminator 2
 3509 038a 119B     		ldr	r3, [sp, #68]
 3510 038c 0133     		adds	r3, r3, #1
 3511 038e 1193     		str	r3, [sp, #68]
1378:FWLIB/src/stm32f4xx_cryp_aes.c **** 
ARM GAS  /tmp/ccg7Oav1.s 			page 105


 3512              		.loc 1 1378 0 discriminator 2
 3513 0390 119B     		ldr	r3, [sp, #68]
 3514 0392 B3F5803F 		cmp	r3, #65536
 3515 0396 01D0     		beq	.L147
1378:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 3516              		.loc 1 1378 0 is_stmt 0 discriminator 1
 3517 0398 0028     		cmp	r0, #0
 3518 039a F2D1     		bne	.L148
 3519              	.L147:
1380:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3520              		.loc 1 1380 0 is_stmt 1
 3521 039c 0AB9     		cbnz	r2, .L177
1148:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 3522              		.loc 1 1148 0
 3523 039e 0125     		movs	r5, #1
 3524              	.LVL712:
 3525 03a0 B6E7     		b	.L143
 3526              	.LVL713:
 3527              	.L177:
1382:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 3528              		.loc 1 1382 0
 3529 03a2 0025     		movs	r5, #0
 3530              	.LVL714:
 3531 03a4 B4E7     		b	.L143
 3532              	.LVL715:
 3533              	.L152:
1427:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 3534              		.loc 1 1427 0
 3535 03a6 002A     		cmp	r2, #0
 3536 03a8 3CD1     		bne	.L179
 3537              	.LVL716:
 3538              	.L155:
1434:FWLIB/src/stm32f4xx_cryp_aes.c ****           {
 3539              		.loc 1 1434 0 discriminator 1
 3540 03aa 0420     		movs	r0, #4
 3541 03ac FFF7FEFF 		bl	CRYP_GetFlagStatus
 3542              	.LVL717:
 3543 03b0 0028     		cmp	r0, #0
 3544 03b2 FAD0     		beq	.L155
1439:FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 3545              		.loc 1 1439 0
 3546 03b4 FFF7FEFF 		bl	CRYP_DataOut
 3547              	.LVL718:
 3548 03b8 C8F80000 		str	r0, [r8]
 3549              	.LVL719:
1441:FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 3550              		.loc 1 1441 0
 3551 03bc FFF7FEFF 		bl	CRYP_DataOut
 3552              	.LVL720:
 3553 03c0 C8F80400 		str	r0, [r8, #4]
 3554              	.LVL721:
1443:FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 3555              		.loc 1 1443 0
 3556 03c4 FFF7FEFF 		bl	CRYP_DataOut
 3557              	.LVL722:
 3558 03c8 C8F80800 		str	r0, [r8, #8]
 3559              	.LVL723:
ARM GAS  /tmp/ccg7Oav1.s 			page 106


1445:FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 3560              		.loc 1 1445 0
 3561 03cc FFF7FEFF 		bl	CRYP_DataOut
 3562              	.LVL724:
 3563 03d0 C8F80C00 		str	r0, [r8, #12]
1446:FWLIB/src/stm32f4xx_cryp_aes.c ****         }
 3564              		.loc 1 1446 0
 3565 03d4 08F11008 		add	r8, r8, #16
 3566              	.LVL725:
 3567              	.L154:
1402:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3568              		.loc 1 1402 0 discriminator 2
 3569 03d8 1036     		adds	r6, r6, #16
 3570              	.LVL726:
 3571              	.L150:
1402:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3572              		.loc 1 1402 0 is_stmt 0 discriminator 1
 3573 03da 4E45     		cmp	r6, r9
 3574 03dc 24D2     		bcs	.L149
1402:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3575              		.loc 1 1402 0 discriminator 3
 3576 03de 1DB3     		cbz	r5, .L149
 3577              	.L151:
1405:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 3578              		.loc 1 1405 0 is_stmt 1 discriminator 1
 3579 03e0 0120     		movs	r0, #1
 3580 03e2 FFF7FEFF 		bl	CRYP_GetFlagStatus
 3581              	.LVL727:
 3582 03e6 0028     		cmp	r0, #0
 3583 03e8 FAD0     		beq	.L151
1410:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 3584              		.loc 1 1410 0
 3585 03ea 2068     		ldr	r0, [r4]
 3586 03ec FFF7FEFF 		bl	CRYP_DataIn
 3587              	.LVL728:
1412:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 3588              		.loc 1 1412 0
 3589 03f0 6068     		ldr	r0, [r4, #4]
 3590 03f2 FFF7FEFF 		bl	CRYP_DataIn
 3591              	.LVL729:
1414:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 3592              		.loc 1 1414 0
 3593 03f6 A068     		ldr	r0, [r4, #8]
 3594 03f8 FFF7FEFF 		bl	CRYP_DataIn
 3595              	.LVL730:
1416:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 3596              		.loc 1 1416 0
 3597 03fc E068     		ldr	r0, [r4, #12]
 3598 03fe FFF7FEFF 		bl	CRYP_DataIn
 3599              	.LVL731:
1417:FWLIB/src/stm32f4xx_cryp_aes.c ****         
 3600              		.loc 1 1417 0
 3601 0402 1034     		adds	r4, r4, #16
 3602              	.LVL732:
1420:FWLIB/src/stm32f4xx_cryp_aes.c ****         do
 3603              		.loc 1 1420 0
 3604 0404 0023     		movs	r3, #0
ARM GAS  /tmp/ccg7Oav1.s 			page 107


 3605 0406 1193     		str	r3, [sp, #68]
 3606              	.L153:
1423:FWLIB/src/stm32f4xx_cryp_aes.c ****           counter++;
 3607              		.loc 1 1423 0 discriminator 2
 3608 0408 1020     		movs	r0, #16
 3609 040a FFF7FEFF 		bl	CRYP_GetFlagStatus
 3610              	.LVL733:
 3611 040e 0246     		mov	r2, r0
 3612              	.LVL734:
1424:FWLIB/src/stm32f4xx_cryp_aes.c ****         }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 3613              		.loc 1 1424 0 discriminator 2
 3614 0410 119B     		ldr	r3, [sp, #68]
 3615 0412 0133     		adds	r3, r3, #1
 3616 0414 1193     		str	r3, [sp, #68]
1425:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 3617              		.loc 1 1425 0 discriminator 2
 3618 0416 119B     		ldr	r3, [sp, #68]
 3619 0418 B3F5803F 		cmp	r3, #65536
 3620 041c C3D0     		beq	.L152
1425:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 3621              		.loc 1 1425 0 is_stmt 0 discriminator 1
 3622 041e 0028     		cmp	r0, #0
 3623 0420 F2D1     		bne	.L153
 3624 0422 C0E7     		b	.L152
 3625              	.L179:
1429:FWLIB/src/stm32f4xx_cryp_aes.c ****         }
 3626              		.loc 1 1429 0 is_stmt 1
 3627 0424 0025     		movs	r5, #0
 3628              	.LVL735:
 3629 0426 D7E7     		b	.L154
 3630              	.LVL736:
 3631              	.L149:
1453:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 3632              		.loc 1 1453 0
 3633 0428 4FF44030 		mov	r0, #196608
 3634 042c FFF7FEFF 		bl	CRYP_PhaseConfig
 3635              	.LVL737:
1456:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 3636              		.loc 1 1456 0
 3637 0430 0120     		movs	r0, #1
 3638 0432 FFF7FEFF 		bl	CRYP_Cmd
 3639              	.LVL738:
1458:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 3640              		.loc 1 1458 0
 3641 0436 FFF7FEFF 		bl	CRYP_GetCmdStatus
 3642              	.LVL739:
 3643 043a 08B9     		cbnz	r0, .L194
1462:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 3644              		.loc 1 1462 0
 3645 043c 0025     		movs	r5, #0
 3646              	.LVL740:
 3647 043e A4E0     		b	.L144
 3648              	.LVL741:
 3649              	.L194:
1467:FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
 3650              		.loc 1 1467 0
 3651 0440 0998     		ldr	r0, [sp, #36]
ARM GAS  /tmp/ccg7Oav1.s 			page 108


 3652 0442 FFF7FEFF 		bl	CRYP_DataIn
 3653              	.LVL742:
1469:FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
 3654              		.loc 1 1469 0
 3655 0446 7868     		ldr	r0, [r7, #4]
 3656 0448 FFF7FEFF 		bl	CRYP_DataIn
 3657              	.LVL743:
1471:FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
 3658              		.loc 1 1471 0
 3659 044c B868     		ldr	r0, [r7, #8]
 3660 044e FFF7FEFF 		bl	CRYP_DataIn
 3661              	.LVL744:
1474:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 3662              		.loc 1 1474 0
 3663 0452 F868     		ldr	r0, [r7, #12]
 3664 0454 20F08070 		bic	r0, r0, #16777216
 3665 0458 FFF7FEFF 		bl	CRYP_DataIn
 3666              	.LVL745:
 3667              	.L156:
1477:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 3668              		.loc 1 1477 0 discriminator 1
 3669 045c 0420     		movs	r0, #4
 3670 045e FFF7FEFF 		bl	CRYP_GetFlagStatus
 3671              	.LVL746:
 3672 0462 0028     		cmp	r0, #0
 3673 0464 FAD0     		beq	.L156
1482:FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[1] = CRYP_DataOut();
 3674              		.loc 1 1482 0
 3675 0466 FFF7FEFF 		bl	CRYP_DataOut
 3676              	.LVL747:
 3677 046a 0590     		str	r0, [sp, #20]
1483:FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[2] = CRYP_DataOut();
 3678              		.loc 1 1483 0
 3679 046c FFF7FEFF 		bl	CRYP_DataOut
 3680              	.LVL748:
 3681 0470 0690     		str	r0, [sp, #24]
1484:FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[3] = CRYP_DataOut();
 3682              		.loc 1 1484 0
 3683 0472 FFF7FEFF 		bl	CRYP_DataOut
 3684              	.LVL749:
 3685 0476 0790     		str	r0, [sp, #28]
1485:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 3686              		.loc 1 1485 0
 3687 0478 FFF7FEFF 		bl	CRYP_DataOut
 3688              	.LVL750:
 3689 047c 0890     		str	r0, [sp, #32]
 3690 047e A7E0     		b	.L157
 3691              	.LVL751:
 3692              	.L192:
1531:FWLIB/src/stm32f4xx_cryp_aes.c ****       
 3693              		.loc 1 1531 0
 3694 0480 4FF48030 		mov	r0, #65536
 3695 0484 FFF7FEFF 		bl	CRYP_PhaseConfig
 3696              	.LVL752:
1534:FWLIB/src/stm32f4xx_cryp_aes.c ****       
 3697              		.loc 1 1534 0
 3698 0488 0120     		movs	r0, #1
ARM GAS  /tmp/ccg7Oav1.s 			page 109


 3699 048a FFF7FEFF 		bl	CRYP_Cmd
 3700              	.LVL753:
1536:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3701              		.loc 1 1536 0
 3702 048e FFF7FEFF 		bl	CRYP_GetCmdStatus
 3703              	.LVL754:
 3704 0492 0028     		cmp	r0, #0
 3705 0494 00F0AE80 		beq	.L182
 3706 0498 4FF0000A 		mov	r10, #0
 3707              	.LVL755:
 3708 049c 13E0     		b	.L160
 3709              	.LVL756:
 3710              	.L161:
1546:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 3711              		.loc 1 1546 0 discriminator 1
 3712 049e 0120     		movs	r0, #1
 3713 04a0 FFF7FEFF 		bl	CRYP_GetFlagStatus
 3714              	.LVL757:
 3715 04a4 0028     		cmp	r0, #0
 3716 04a6 FAD0     		beq	.L161
1551:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 3717              		.loc 1 1551 0 discriminator 2
 3718 04a8 3068     		ldr	r0, [r6]
 3719 04aa FFF7FEFF 		bl	CRYP_DataIn
 3720              	.LVL758:
1553:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 3721              		.loc 1 1553 0 discriminator 2
 3722 04ae 7068     		ldr	r0, [r6, #4]
 3723 04b0 FFF7FEFF 		bl	CRYP_DataIn
 3724              	.LVL759:
1555:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 3725              		.loc 1 1555 0 discriminator 2
 3726 04b4 B068     		ldr	r0, [r6, #8]
 3727 04b6 FFF7FEFF 		bl	CRYP_DataIn
 3728              	.LVL760:
1557:FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 3729              		.loc 1 1557 0 discriminator 2
 3730 04ba F068     		ldr	r0, [r6, #12]
 3731 04bc FFF7FEFF 		bl	CRYP_DataIn
 3732              	.LVL761:
1558:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 3733              		.loc 1 1558 0 discriminator 2
 3734 04c0 1036     		adds	r6, r6, #16
 3735              	.LVL762:
1543:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3736              		.loc 1 1543 0 discriminator 2
 3737 04c2 0AF1100A 		add	r10, r10, #16
 3738              	.LVL763:
 3739              	.L160:
1543:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3740              		.loc 1 1543 0 is_stmt 0 discriminator 1
 3741 04c6 5545     		cmp	r5, r10
 3742 04c8 E9D8     		bhi	.L161
1562:FWLIB/src/stm32f4xx_cryp_aes.c ****       do
 3743              		.loc 1 1562 0 is_stmt 1
 3744 04ca 0023     		movs	r3, #0
 3745 04cc 1193     		str	r3, [sp, #68]
ARM GAS  /tmp/ccg7Oav1.s 			page 110


 3746              	.LVL764:
 3747              	.L163:
1565:FWLIB/src/stm32f4xx_cryp_aes.c ****         counter++;
 3748              		.loc 1 1565 0 discriminator 2
 3749 04ce 1020     		movs	r0, #16
 3750 04d0 FFF7FEFF 		bl	CRYP_GetFlagStatus
 3751              	.LVL765:
 3752 04d4 0246     		mov	r2, r0
 3753              	.LVL766:
1566:FWLIB/src/stm32f4xx_cryp_aes.c ****       }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 3754              		.loc 1 1566 0 discriminator 2
 3755 04d6 119B     		ldr	r3, [sp, #68]
 3756 04d8 0133     		adds	r3, r3, #1
 3757 04da 1193     		str	r3, [sp, #68]
1567:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 3758              		.loc 1 1567 0 discriminator 2
 3759 04dc 119B     		ldr	r3, [sp, #68]
 3760 04de B3F5803F 		cmp	r3, #65536
 3761 04e2 01D0     		beq	.L162
1567:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 3762              		.loc 1 1567 0 is_stmt 0 discriminator 1
 3763 04e4 0028     		cmp	r0, #0
 3764 04e6 F2D1     		bne	.L163
 3765              	.L162:
1569:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3766              		.loc 1 1569 0 is_stmt 1
 3767 04e8 0AB9     		cbnz	r2, .L183
1148:FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 3768              		.loc 1 1148 0
 3769 04ea 0125     		movs	r5, #1
 3770              	.LVL767:
 3771 04ec 7CE6     		b	.L159
 3772              	.LVL768:
 3773              	.L183:
1571:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 3774              		.loc 1 1571 0
 3775 04ee 0025     		movs	r5, #0
 3776              	.LVL769:
 3777 04f0 7AE6     		b	.L159
 3778              	.LVL770:
 3779              	.L167:
1585:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1586:FWLIB/src/stm32f4xx_cryp_aes.c ****         /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
1587:FWLIB/src/stm32f4xx_cryp_aes.c ****            the CRYP peripheral (please check the device sales type. */
1588:FWLIB/src/stm32f4xx_cryp_aes.c ****         return(ERROR);
1589:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1590:FWLIB/src/stm32f4xx_cryp_aes.c ****       
1591:FWLIB/src/stm32f4xx_cryp_aes.c ****       for(loopcounter = 0; ((loopcounter < ILength) && (status != ERROR)); loopcounter+=16)
1592:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1593:FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Wait until the IFEM flag is reset */
1594:FWLIB/src/stm32f4xx_cryp_aes.c ****         while(CRYP_GetFlagStatus(CRYP_FLAG_IFEM) == RESET)
1595:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
1596:FWLIB/src/stm32f4xx_cryp_aes.c ****         }
1597:FWLIB/src/stm32f4xx_cryp_aes.c ****         
1598:FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Write the Input block in the IN FIFO */
1599:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
1600:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
ARM GAS  /tmp/ccg7Oav1.s 			page 111


1601:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
1602:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
1603:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
1604:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
1605:FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
1606:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
1607:FWLIB/src/stm32f4xx_cryp_aes.c ****         
1608:FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Wait until the complete message has been processed */
1609:FWLIB/src/stm32f4xx_cryp_aes.c ****         counter = 0;
1610:FWLIB/src/stm32f4xx_cryp_aes.c ****         do
1611:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
1612:FWLIB/src/stm32f4xx_cryp_aes.c ****           busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
1613:FWLIB/src/stm32f4xx_cryp_aes.c ****           counter++;
1614:FWLIB/src/stm32f4xx_cryp_aes.c ****         }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
1615:FWLIB/src/stm32f4xx_cryp_aes.c **** 
1616:FWLIB/src/stm32f4xx_cryp_aes.c ****         if (busystatus != RESET)
 3780              		.loc 1 1616 0
 3781 04f2 002A     		cmp	r2, #0
 3782 04f4 3CD1     		bne	.L185
 3783              	.LVL771:
 3784              	.L170:
1617:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
1618:FWLIB/src/stm32f4xx_cryp_aes.c ****           status = ERROR;
1619:FWLIB/src/stm32f4xx_cryp_aes.c ****         }
1620:FWLIB/src/stm32f4xx_cryp_aes.c ****         else
1621:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
1622:FWLIB/src/stm32f4xx_cryp_aes.c ****           /* Wait until the OFNE flag is reset */
1623:FWLIB/src/stm32f4xx_cryp_aes.c ****           while(CRYP_GetFlagStatus(CRYP_FLAG_OFNE) == RESET)
 3785              		.loc 1 1623 0 discriminator 1
 3786 04f6 0420     		movs	r0, #4
 3787 04f8 FFF7FEFF 		bl	CRYP_GetFlagStatus
 3788              	.LVL772:
 3789 04fc 0028     		cmp	r0, #0
 3790 04fe FAD0     		beq	.L170
1624:FWLIB/src/stm32f4xx_cryp_aes.c ****           {
1625:FWLIB/src/stm32f4xx_cryp_aes.c ****           }
1626:FWLIB/src/stm32f4xx_cryp_aes.c ****           
1627:FWLIB/src/stm32f4xx_cryp_aes.c ****           /* Read the Output block from the Output FIFO */
1628:FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 3791              		.loc 1 1628 0
 3792 0500 FFF7FEFF 		bl	CRYP_DataOut
 3793              	.LVL773:
 3794 0504 C8F80000 		str	r0, [r8]
 3795              	.LVL774:
1629:FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
1630:FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 3796              		.loc 1 1630 0
 3797 0508 FFF7FEFF 		bl	CRYP_DataOut
 3798              	.LVL775:
 3799 050c C8F80400 		str	r0, [r8, #4]
 3800              	.LVL776:
1631:FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
1632:FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 3801              		.loc 1 1632 0
 3802 0510 FFF7FEFF 		bl	CRYP_DataOut
 3803              	.LVL777:
 3804 0514 C8F80800 		str	r0, [r8, #8]
ARM GAS  /tmp/ccg7Oav1.s 			page 112


 3805              	.LVL778:
1633:FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
1634:FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 3806              		.loc 1 1634 0
 3807 0518 FFF7FEFF 		bl	CRYP_DataOut
 3808              	.LVL779:
 3809 051c C8F80C00 		str	r0, [r8, #12]
1635:FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 3810              		.loc 1 1635 0
 3811 0520 08F11008 		add	r8, r8, #16
 3812              	.LVL780:
 3813              	.L169:
1591:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3814              		.loc 1 1591 0 discriminator 2
 3815 0524 1036     		adds	r6, r6, #16
 3816              	.LVL781:
 3817              	.L165:
1591:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3818              		.loc 1 1591 0 is_stmt 0 discriminator 1
 3819 0526 4E45     		cmp	r6, r9
 3820 0528 24D2     		bcs	.L164
1591:FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3821              		.loc 1 1591 0 discriminator 3
 3822 052a 1DB3     		cbz	r5, .L164
 3823              	.L166:
1594:FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 3824              		.loc 1 1594 0 is_stmt 1 discriminator 1
 3825 052c 0120     		movs	r0, #1
 3826 052e FFF7FEFF 		bl	CRYP_GetFlagStatus
 3827              	.LVL782:
 3828 0532 0028     		cmp	r0, #0
 3829 0534 FAD0     		beq	.L166
1599:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 3830              		.loc 1 1599 0
 3831 0536 2068     		ldr	r0, [r4]
 3832 0538 FFF7FEFF 		bl	CRYP_DataIn
 3833              	.LVL783:
1601:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 3834              		.loc 1 1601 0
 3835 053c 6068     		ldr	r0, [r4, #4]
 3836 053e FFF7FEFF 		bl	CRYP_DataIn
 3837              	.LVL784:
1603:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 3838              		.loc 1 1603 0
 3839 0542 A068     		ldr	r0, [r4, #8]
 3840 0544 FFF7FEFF 		bl	CRYP_DataIn
 3841              	.LVL785:
1605:FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 3842              		.loc 1 1605 0
 3843 0548 E068     		ldr	r0, [r4, #12]
 3844 054a FFF7FEFF 		bl	CRYP_DataIn
 3845              	.LVL786:
1606:FWLIB/src/stm32f4xx_cryp_aes.c ****         
 3846              		.loc 1 1606 0
 3847 054e 1034     		adds	r4, r4, #16
 3848              	.LVL787:
1609:FWLIB/src/stm32f4xx_cryp_aes.c ****         do
ARM GAS  /tmp/ccg7Oav1.s 			page 113


 3849              		.loc 1 1609 0
 3850 0550 0023     		movs	r3, #0
 3851 0552 1193     		str	r3, [sp, #68]
 3852              	.L168:
1612:FWLIB/src/stm32f4xx_cryp_aes.c ****           counter++;
 3853              		.loc 1 1612 0 discriminator 2
 3854 0554 1020     		movs	r0, #16
 3855 0556 FFF7FEFF 		bl	CRYP_GetFlagStatus
 3856              	.LVL788:
 3857 055a 0246     		mov	r2, r0
 3858              	.LVL789:
1613:FWLIB/src/stm32f4xx_cryp_aes.c ****         }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 3859              		.loc 1 1613 0 discriminator 2
 3860 055c 119B     		ldr	r3, [sp, #68]
 3861 055e 0133     		adds	r3, r3, #1
 3862 0560 1193     		str	r3, [sp, #68]
1614:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 3863              		.loc 1 1614 0 discriminator 2
 3864 0562 119B     		ldr	r3, [sp, #68]
 3865 0564 B3F5803F 		cmp	r3, #65536
 3866 0568 C3D0     		beq	.L167
1614:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 3867              		.loc 1 1614 0 is_stmt 0 discriminator 1
 3868 056a 0028     		cmp	r0, #0
 3869 056c F2D1     		bne	.L168
 3870 056e C0E7     		b	.L167
 3871              	.L185:
1618:FWLIB/src/stm32f4xx_cryp_aes.c ****         }
 3872              		.loc 1 1618 0 is_stmt 1
 3873 0570 0025     		movs	r5, #0
 3874              	.LVL790:
 3875 0572 D7E7     		b	.L169
 3876              	.LVL791:
 3877              	.L164:
1636:FWLIB/src/stm32f4xx_cryp_aes.c ****         }
1637:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1638:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1639:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1640:FWLIB/src/stm32f4xx_cryp_aes.c ****     /***************************** final phase ********************************/
1641:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Select final phase */
1642:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_PhaseConfig(CRYP_Phase_Final);
 3878              		.loc 1 1642 0
 3879 0574 4FF44030 		mov	r0, #196608
 3880 0578 FFF7FEFF 		bl	CRYP_PhaseConfig
 3881              	.LVL792:
1643:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1644:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
1645:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 3882              		.loc 1 1645 0
 3883 057c 0120     		movs	r0, #1
 3884 057e FFF7FEFF 		bl	CRYP_Cmd
 3885              	.LVL793:
1646:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1647:FWLIB/src/stm32f4xx_cryp_aes.c ****     if(CRYP_GetCmdStatus() == DISABLE)
 3886              		.loc 1 1647 0
 3887 0582 FFF7FEFF 		bl	CRYP_GetCmdStatus
 3888              	.LVL794:
ARM GAS  /tmp/ccg7Oav1.s 			page 114


 3889 0586 20B9     		cbnz	r0, .L195
1648:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1649:FWLIB/src/stm32f4xx_cryp_aes.c ****       /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
1650:FWLIB/src/stm32f4xx_cryp_aes.c ****          the CRYP peripheral (please check the device sales type. */
1651:FWLIB/src/stm32f4xx_cryp_aes.c ****       return(ERROR);
 3890              		.loc 1 1651 0
 3891 0588 0025     		movs	r5, #0
 3892              	.LVL795:
 3893              	.L144:
1652:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1653:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1654:FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr = (uint32_t)ctr;
1655:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Write the counter block in the IN FIFO */
1656:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(ctraddr));
1657:FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
1658:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(ctraddr));
1659:FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
1660:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(ctraddr));
1661:FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
1662:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Reset bit 0 (after 8-bit swap) is equivalent to reset bit 24 (before 8-bit swap) */
1663:FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(ctraddr) & 0xfeffffff);
1664:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1665:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait until the OFNE flag is reset */
1666:FWLIB/src/stm32f4xx_cryp_aes.c ****     while(CRYP_GetFlagStatus(CRYP_FLAG_OFNE) == RESET)
1667:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1668:FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1669:FWLIB/src/stm32f4xx_cryp_aes.c ****     
1670:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Read the Authentaication TAG (MAC) in the IN FIFO */
1671:FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[0] = CRYP_DataOut();
1672:FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[1] = CRYP_DataOut();
1673:FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[2] = CRYP_DataOut();
1674:FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[3] = CRYP_DataOut();
1675:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
1676:FWLIB/src/stm32f4xx_cryp_aes.c ****   
1677:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Copy temporary authentication TAG in user TAG buffer */
1678:FWLIB/src/stm32f4xx_cryp_aes.c ****   for(loopcounter = 0; (loopcounter < TAGSize); loopcounter++)
1679:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
1680:FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Set the authentication TAG buffer */
1681:FWLIB/src/stm32f4xx_cryp_aes.c ****     *((uint8_t*)tagaddr+loopcounter) = *((uint8_t*)temptag+loopcounter);
1682:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
1683:FWLIB/src/stm32f4xx_cryp_aes.c ****   
1684:FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Disable Crypto */
1685:FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(DISABLE);
1686:FWLIB/src/stm32f4xx_cryp_aes.c **** 
1687:FWLIB/src/stm32f4xx_cryp_aes.c ****   return status;
1688:FWLIB/src/stm32f4xx_cryp_aes.c **** }
 3894              		.loc 1 1688 0
 3895 058a 2846     		mov	r0, r5
 3896 058c 23B0     		add	sp, sp, #140
 3897              	.LCFI18:
 3898              		.cfi_remember_state
 3899              		.cfi_def_cfa_offset 36
 3900              		@ sp needed
 3901 058e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3902              	.LVL796:
 3903              	.L195:
 3904              	.LCFI19:
ARM GAS  /tmp/ccg7Oav1.s 			page 115


 3905              		.cfi_restore_state
1656:FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
 3906              		.loc 1 1656 0
 3907 0592 0998     		ldr	r0, [sp, #36]
 3908 0594 FFF7FEFF 		bl	CRYP_DataIn
 3909              	.LVL797:
1658:FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
 3910              		.loc 1 1658 0
 3911 0598 7868     		ldr	r0, [r7, #4]
 3912 059a FFF7FEFF 		bl	CRYP_DataIn
 3913              	.LVL798:
1660:FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
 3914              		.loc 1 1660 0
 3915 059e B868     		ldr	r0, [r7, #8]
 3916 05a0 FFF7FEFF 		bl	CRYP_DataIn
 3917              	.LVL799:
1663:FWLIB/src/stm32f4xx_cryp_aes.c ****     
 3918              		.loc 1 1663 0
 3919 05a4 F868     		ldr	r0, [r7, #12]
 3920 05a6 20F08070 		bic	r0, r0, #16777216
 3921 05aa FFF7FEFF 		bl	CRYP_DataIn
 3922              	.LVL800:
 3923              	.L171:
1666:FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 3924              		.loc 1 1666 0 discriminator 1
 3925 05ae 0420     		movs	r0, #4
 3926 05b0 FFF7FEFF 		bl	CRYP_GetFlagStatus
 3927              	.LVL801:
 3928 05b4 0028     		cmp	r0, #0
 3929 05b6 FAD0     		beq	.L171
1671:FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[1] = CRYP_DataOut();
 3930              		.loc 1 1671 0
 3931 05b8 FFF7FEFF 		bl	CRYP_DataOut
 3932              	.LVL802:
 3933 05bc 0590     		str	r0, [sp, #20]
1672:FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[2] = CRYP_DataOut();
 3934              		.loc 1 1672 0
 3935 05be FFF7FEFF 		bl	CRYP_DataOut
 3936              	.LVL803:
 3937 05c2 0690     		str	r0, [sp, #24]
1673:FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[3] = CRYP_DataOut();
 3938              		.loc 1 1673 0
 3939 05c4 FFF7FEFF 		bl	CRYP_DataOut
 3940              	.LVL804:
 3941 05c8 0790     		str	r0, [sp, #28]
1674:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 3942              		.loc 1 1674 0
 3943 05ca FFF7FEFF 		bl	CRYP_DataOut
 3944              	.LVL805:
 3945 05ce 0890     		str	r0, [sp, #32]
 3946              	.LVL806:
 3947              	.L157:
1678:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 3948              		.loc 1 1678 0
 3949 05d0 0023     		movs	r3, #0
 3950 05d2 3499     		ldr	r1, [sp, #208]
 3951 05d4 04E0     		b	.L172
ARM GAS  /tmp/ccg7Oav1.s 			page 116


 3952              	.LVL807:
 3953              	.L173:
1681:FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 3954              		.loc 1 1681 0 discriminator 3
 3955 05d6 05AA     		add	r2, sp, #20
 3956 05d8 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 3957 05da 03F80B20 		strb	r2, [r3, fp]
1678:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 3958              		.loc 1 1678 0 discriminator 3
 3959 05de 0133     		adds	r3, r3, #1
 3960              	.LVL808:
 3961              	.L172:
1678:FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 3962              		.loc 1 1678 0 is_stmt 0 discriminator 1
 3963 05e0 8B42     		cmp	r3, r1
 3964 05e2 F8D3     		bcc	.L173
1685:FWLIB/src/stm32f4xx_cryp_aes.c **** 
 3965              		.loc 1 1685 0 is_stmt 1
 3966 05e4 0020     		movs	r0, #0
 3967 05e6 FFF7FEFF 		bl	CRYP_Cmd
 3968              	.LVL809:
1687:FWLIB/src/stm32f4xx_cryp_aes.c **** }
 3969              		.loc 1 1687 0
 3970 05ea CEE7     		b	.L144
 3971              	.LVL810:
 3972              	.L176:
1351:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 3973              		.loc 1 1351 0
 3974 05ec 0025     		movs	r5, #0
 3975              	.LVL811:
 3976 05ee CCE7     		b	.L144
 3977              	.LVL812:
 3978              	.L178:
1399:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 3979              		.loc 1 1399 0
 3980 05f0 0025     		movs	r5, #0
 3981              	.LVL813:
 3982 05f2 CAE7     		b	.L144
 3983              	.LVL814:
 3984              	.L182:
1540:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 3985              		.loc 1 1540 0
 3986 05f4 0025     		movs	r5, #0
 3987              	.LVL815:
 3988 05f6 C8E7     		b	.L144
 3989              	.LVL816:
 3990              	.L184:
1588:FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 3991              		.loc 1 1588 0
 3992 05f8 0025     		movs	r5, #0
 3993              	.LVL817:
 3994 05fa C6E7     		b	.L144
 3995              		.cfi_endproc
 3996              	.LFE116:
 3998              		.text
 3999              	.Letext0:
 4000              		.file 3 "/usr/include/newlib/machine/_default_types.h"
ARM GAS  /tmp/ccg7Oav1.s 			page 117


 4001              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 4002              		.file 5 "CORE/core_cm4.h"
 4003              		.file 6 "USER/system_stm32f4xx.h"
 4004              		.file 7 "USER/stm32f4xx.h"
 4005              		.file 8 "FWLIB/inc/stm32f4xx_cryp.h"
ARM GAS  /tmp/ccg7Oav1.s 			page 118


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_cryp_aes.c
     /tmp/ccg7Oav1.s:16     .text.CRYP_AES_ECB:0000000000000000 $t
     /tmp/ccg7Oav1.s:23     .text.CRYP_AES_ECB:0000000000000000 CRYP_AES_ECB
     /tmp/ccg7Oav1.s:532    .text.CRYP_AES_CBC:0000000000000000 $t
     /tmp/ccg7Oav1.s:539    .text.CRYP_AES_CBC:0000000000000000 CRYP_AES_CBC
     /tmp/ccg7Oav1.s:1105   .text.CRYP_AES_CTR:0000000000000000 $t
     /tmp/ccg7Oav1.s:1112   .text.CRYP_AES_CTR:0000000000000000 CRYP_AES_CTR
     /tmp/ccg7Oav1.s:1622   .text.CRYP_AES_GCM:0000000000000000 $t
     /tmp/ccg7Oav1.s:1629   .text.CRYP_AES_GCM:0000000000000000 CRYP_AES_GCM
     /tmp/ccg7Oav1.s:2694   .text.CRYP_AES_CCM:0000000000000000 $t
     /tmp/ccg7Oav1.s:2701   .text.CRYP_AES_CCM:0000000000000000 CRYP_AES_CCM
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
CRYP_KeyStructInit
CRYP_FIFOFlush
CRYP_Init
CRYP_KeyInit
CRYP_Cmd
CRYP_GetFlagStatus
CRYP_GetCmdStatus
CRYP_DataIn
CRYP_DataOut
CRYP_IVInit
CRYP_PhaseConfig
