ARM GAS  /tmp/ccHGbaW0.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f4xx_dbgmcu.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.DBGMCU_GetREVID,"ax",%progbits
  16              		.align	1
  17              		.global	DBGMCU_GetREVID
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	DBGMCU_GetREVID:
  24              	.LFB112:
  25              		.file 1 "FWLIB/src/stm32f4xx_dbgmcu.c"
   1:FWLIB/src/stm32f4xx_dbgmcu.c **** /**
   2:FWLIB/src/stm32f4xx_dbgmcu.c ****   ******************************************************************************
   3:FWLIB/src/stm32f4xx_dbgmcu.c ****   * @file    stm32f4xx_dbgmcu.c
   4:FWLIB/src/stm32f4xx_dbgmcu.c ****   * @author  MCD Application Team
   5:FWLIB/src/stm32f4xx_dbgmcu.c ****   * @version V1.4.0
   6:FWLIB/src/stm32f4xx_dbgmcu.c ****   * @date    04-August-2014
   7:FWLIB/src/stm32f4xx_dbgmcu.c ****   * @brief   This file provides all the DBGMCU firmware functions.
   8:FWLIB/src/stm32f4xx_dbgmcu.c ****   ******************************************************************************
   9:FWLIB/src/stm32f4xx_dbgmcu.c ****   * @attention
  10:FWLIB/src/stm32f4xx_dbgmcu.c ****   *
  11:FWLIB/src/stm32f4xx_dbgmcu.c ****   * <h2><center>&copy; COPYRIGHT 2014 STMicroelectronics</center></h2>
  12:FWLIB/src/stm32f4xx_dbgmcu.c ****   *
  13:FWLIB/src/stm32f4xx_dbgmcu.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  14:FWLIB/src/stm32f4xx_dbgmcu.c ****   * You may not use this file except in compliance with the License.
  15:FWLIB/src/stm32f4xx_dbgmcu.c ****   * You may obtain a copy of the License at:
  16:FWLIB/src/stm32f4xx_dbgmcu.c ****   *
  17:FWLIB/src/stm32f4xx_dbgmcu.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  18:FWLIB/src/stm32f4xx_dbgmcu.c ****   *
  19:FWLIB/src/stm32f4xx_dbgmcu.c ****   * Unless required by applicable law or agreed to in writing, software 
  20:FWLIB/src/stm32f4xx_dbgmcu.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  21:FWLIB/src/stm32f4xx_dbgmcu.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:FWLIB/src/stm32f4xx_dbgmcu.c ****   * See the License for the specific language governing permissions and
  23:FWLIB/src/stm32f4xx_dbgmcu.c ****   * limitations under the License.
  24:FWLIB/src/stm32f4xx_dbgmcu.c ****   *
  25:FWLIB/src/stm32f4xx_dbgmcu.c ****   ******************************************************************************
  26:FWLIB/src/stm32f4xx_dbgmcu.c ****   */
  27:FWLIB/src/stm32f4xx_dbgmcu.c **** 
  28:FWLIB/src/stm32f4xx_dbgmcu.c **** /* Includes ------------------------------------------------------------------*/
  29:FWLIB/src/stm32f4xx_dbgmcu.c **** #include "stm32f4xx_dbgmcu.h"
  30:FWLIB/src/stm32f4xx_dbgmcu.c **** 
  31:FWLIB/src/stm32f4xx_dbgmcu.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  32:FWLIB/src/stm32f4xx_dbgmcu.c ****   * @{
  33:FWLIB/src/stm32f4xx_dbgmcu.c ****   */
ARM GAS  /tmp/ccHGbaW0.s 			page 2


  34:FWLIB/src/stm32f4xx_dbgmcu.c **** 
  35:FWLIB/src/stm32f4xx_dbgmcu.c **** /** @defgroup DBGMCU 
  36:FWLIB/src/stm32f4xx_dbgmcu.c ****   * @brief DBGMCU driver modules
  37:FWLIB/src/stm32f4xx_dbgmcu.c ****   * @{
  38:FWLIB/src/stm32f4xx_dbgmcu.c ****   */ 
  39:FWLIB/src/stm32f4xx_dbgmcu.c **** 
  40:FWLIB/src/stm32f4xx_dbgmcu.c **** /* Private typedef -----------------------------------------------------------*/
  41:FWLIB/src/stm32f4xx_dbgmcu.c **** /* Private define ------------------------------------------------------------*/
  42:FWLIB/src/stm32f4xx_dbgmcu.c **** #define IDCODE_DEVID_MASK    ((uint32_t)0x00000FFF)
  43:FWLIB/src/stm32f4xx_dbgmcu.c **** 
  44:FWLIB/src/stm32f4xx_dbgmcu.c **** /* Private macro -------------------------------------------------------------*/
  45:FWLIB/src/stm32f4xx_dbgmcu.c **** /* Private variables ---------------------------------------------------------*/
  46:FWLIB/src/stm32f4xx_dbgmcu.c **** /* Private function prototypes -----------------------------------------------*/
  47:FWLIB/src/stm32f4xx_dbgmcu.c **** /* Private functions ---------------------------------------------------------*/
  48:FWLIB/src/stm32f4xx_dbgmcu.c **** 
  49:FWLIB/src/stm32f4xx_dbgmcu.c **** /** @defgroup DBGMCU_Private_Functions
  50:FWLIB/src/stm32f4xx_dbgmcu.c ****   * @{
  51:FWLIB/src/stm32f4xx_dbgmcu.c ****   */ 
  52:FWLIB/src/stm32f4xx_dbgmcu.c **** 
  53:FWLIB/src/stm32f4xx_dbgmcu.c **** /**
  54:FWLIB/src/stm32f4xx_dbgmcu.c ****   * @brief  Returns the device revision identifier.
  55:FWLIB/src/stm32f4xx_dbgmcu.c ****   * @param  None
  56:FWLIB/src/stm32f4xx_dbgmcu.c ****   * @retval Device revision identifier
  57:FWLIB/src/stm32f4xx_dbgmcu.c ****   */
  58:FWLIB/src/stm32f4xx_dbgmcu.c **** uint32_t DBGMCU_GetREVID(void)
  59:FWLIB/src/stm32f4xx_dbgmcu.c **** {
  26              		.loc 1 59 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  60:FWLIB/src/stm32f4xx_dbgmcu.c ****    return(DBGMCU->IDCODE >> 16);
  31              		.loc 1 60 0
  32 0000 014B     		ldr	r3, .L2
  33 0002 1868     		ldr	r0, [r3]
  61:FWLIB/src/stm32f4xx_dbgmcu.c **** }
  34              		.loc 1 61 0
  35 0004 000C     		lsrs	r0, r0, #16
  36 0006 7047     		bx	lr
  37              	.L3:
  38              		.align	2
  39              	.L2:
  40 0008 002004E0 		.word	-536600576
  41              		.cfi_endproc
  42              	.LFE112:
  44              		.section	.text.DBGMCU_GetDEVID,"ax",%progbits
  45              		.align	1
  46              		.global	DBGMCU_GetDEVID
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  50              		.fpu softvfp
  52              	DBGMCU_GetDEVID:
  53              	.LFB113:
  62:FWLIB/src/stm32f4xx_dbgmcu.c **** 
  63:FWLIB/src/stm32f4xx_dbgmcu.c **** /**
  64:FWLIB/src/stm32f4xx_dbgmcu.c ****   * @brief  Returns the device identifier.
ARM GAS  /tmp/ccHGbaW0.s 			page 3


  65:FWLIB/src/stm32f4xx_dbgmcu.c ****   * @param  None
  66:FWLIB/src/stm32f4xx_dbgmcu.c ****   * @retval Device identifier
  67:FWLIB/src/stm32f4xx_dbgmcu.c ****   */
  68:FWLIB/src/stm32f4xx_dbgmcu.c **** uint32_t DBGMCU_GetDEVID(void)
  69:FWLIB/src/stm32f4xx_dbgmcu.c **** {
  54              		.loc 1 69 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  70:FWLIB/src/stm32f4xx_dbgmcu.c ****    return(DBGMCU->IDCODE & IDCODE_DEVID_MASK);
  59              		.loc 1 70 0
  60 0000 024B     		ldr	r3, .L5
  61 0002 1868     		ldr	r0, [r3]
  71:FWLIB/src/stm32f4xx_dbgmcu.c **** }
  62              		.loc 1 71 0
  63 0004 C0F30B00 		ubfx	r0, r0, #0, #12
  64 0008 7047     		bx	lr
  65              	.L6:
  66 000a 00BF     		.align	2
  67              	.L5:
  68 000c 002004E0 		.word	-536600576
  69              		.cfi_endproc
  70              	.LFE113:
  72              		.section	.text.DBGMCU_Config,"ax",%progbits
  73              		.align	1
  74              		.global	DBGMCU_Config
  75              		.syntax unified
  76              		.thumb
  77              		.thumb_func
  78              		.fpu softvfp
  80              	DBGMCU_Config:
  81              	.LFB114:
  72:FWLIB/src/stm32f4xx_dbgmcu.c **** 
  73:FWLIB/src/stm32f4xx_dbgmcu.c **** /**
  74:FWLIB/src/stm32f4xx_dbgmcu.c ****   * @brief  Configures low power mode behavior when the MCU is in Debug mode.
  75:FWLIB/src/stm32f4xx_dbgmcu.c ****   * @param  DBGMCU_Periph: specifies the low power mode.
  76:FWLIB/src/stm32f4xx_dbgmcu.c ****   *   This parameter can be any combination of the following values:
  77:FWLIB/src/stm32f4xx_dbgmcu.c ****   *     @arg DBGMCU_SLEEP: Keep debugger connection during SLEEP mode              
  78:FWLIB/src/stm32f4xx_dbgmcu.c ****   *     @arg DBGMCU_STOP: Keep debugger connection during STOP mode               
  79:FWLIB/src/stm32f4xx_dbgmcu.c ****   *     @arg DBGMCU_STANDBY: Keep debugger connection during STANDBY mode        
  80:FWLIB/src/stm32f4xx_dbgmcu.c ****   * @param  NewState: new state of the specified low power mode in Debug mode.
  81:FWLIB/src/stm32f4xx_dbgmcu.c ****   *   This parameter can be: ENABLE or DISABLE.
  82:FWLIB/src/stm32f4xx_dbgmcu.c ****   * @retval None
  83:FWLIB/src/stm32f4xx_dbgmcu.c ****   */
  84:FWLIB/src/stm32f4xx_dbgmcu.c **** void DBGMCU_Config(uint32_t DBGMCU_Periph, FunctionalState NewState)
  85:FWLIB/src/stm32f4xx_dbgmcu.c **** {
  82              		.loc 1 85 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              		@ link register save eliminated.
  87              	.LVL0:
  86:FWLIB/src/stm32f4xx_dbgmcu.c ****   /* Check the parameters */
  87:FWLIB/src/stm32f4xx_dbgmcu.c ****   assert_param(IS_DBGMCU_PERIPH(DBGMCU_Periph));
  88:FWLIB/src/stm32f4xx_dbgmcu.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
  89:FWLIB/src/stm32f4xx_dbgmcu.c ****   if (NewState != DISABLE)
ARM GAS  /tmp/ccHGbaW0.s 			page 4


  88              		.loc 1 89 0
  89 0000 29B9     		cbnz	r1, .L10
  90:FWLIB/src/stm32f4xx_dbgmcu.c ****   {
  91:FWLIB/src/stm32f4xx_dbgmcu.c ****     DBGMCU->CR |= DBGMCU_Periph;
  92:FWLIB/src/stm32f4xx_dbgmcu.c ****   }
  93:FWLIB/src/stm32f4xx_dbgmcu.c ****   else
  94:FWLIB/src/stm32f4xx_dbgmcu.c ****   {
  95:FWLIB/src/stm32f4xx_dbgmcu.c ****     DBGMCU->CR &= ~DBGMCU_Periph;
  90              		.loc 1 95 0
  91 0002 054A     		ldr	r2, .L11
  92 0004 5368     		ldr	r3, [r2, #4]
  93 0006 23EA0000 		bic	r0, r3, r0
  94              	.LVL1:
  95 000a 5060     		str	r0, [r2, #4]
  96 000c 7047     		bx	lr
  97              	.LVL2:
  98              	.L10:
  91:FWLIB/src/stm32f4xx_dbgmcu.c ****   }
  99              		.loc 1 91 0
 100 000e 024A     		ldr	r2, .L11
 101 0010 5368     		ldr	r3, [r2, #4]
 102 0012 1843     		orrs	r0, r0, r3
 103              	.LVL3:
 104 0014 5060     		str	r0, [r2, #4]
 105 0016 7047     		bx	lr
 106              	.L12:
 107              		.align	2
 108              	.L11:
 109 0018 002004E0 		.word	-536600576
 110              		.cfi_endproc
 111              	.LFE114:
 113              		.section	.text.DBGMCU_APB1PeriphConfig,"ax",%progbits
 114              		.align	1
 115              		.global	DBGMCU_APB1PeriphConfig
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 119              		.fpu softvfp
 121              	DBGMCU_APB1PeriphConfig:
 122              	.LFB115:
  96:FWLIB/src/stm32f4xx_dbgmcu.c ****   }
  97:FWLIB/src/stm32f4xx_dbgmcu.c **** }
  98:FWLIB/src/stm32f4xx_dbgmcu.c **** 
  99:FWLIB/src/stm32f4xx_dbgmcu.c **** /**
 100:FWLIB/src/stm32f4xx_dbgmcu.c ****   * @brief  Configures APB1 peripheral behavior when the MCU is in Debug mode.
 101:FWLIB/src/stm32f4xx_dbgmcu.c ****   * @param  DBGMCU_Periph: specifies the APB1 peripheral.
 102:FWLIB/src/stm32f4xx_dbgmcu.c ****   *   This parameter can be any combination of the following values:        
 103:FWLIB/src/stm32f4xx_dbgmcu.c ****   *     @arg DBGMCU_TIM2_STOP: TIM2 counter stopped when Core is halted          
 104:FWLIB/src/stm32f4xx_dbgmcu.c ****   *     @arg DBGMCU_TIM3_STOP: TIM3 counter stopped when Core is halted          
 105:FWLIB/src/stm32f4xx_dbgmcu.c ****   *     @arg DBGMCU_TIM4_STOP: TIM4 counter stopped when Core is halted
 106:FWLIB/src/stm32f4xx_dbgmcu.c ****   *     @arg DBGMCU_TIM5_STOP: TIM5 counter stopped when Core is halted          
 107:FWLIB/src/stm32f4xx_dbgmcu.c ****   *     @arg DBGMCU_TIM6_STOP: TIM6 counter stopped when Core is halted          
 108:FWLIB/src/stm32f4xx_dbgmcu.c ****   *     @arg DBGMCU_TIM7_STOP: TIM7 counter stopped when Core is halted
 109:FWLIB/src/stm32f4xx_dbgmcu.c ****   *     @arg DBGMCU_TIM12_STOP: TIM12 counter stopped when Core is halted  
 110:FWLIB/src/stm32f4xx_dbgmcu.c ****   *     @arg DBGMCU_TIM13_STOP: TIM13 counter stopped when Core is halted  
 111:FWLIB/src/stm32f4xx_dbgmcu.c ****   *     @arg DBGMCU_TIM14_STOP: TIM14 counter stopped when Core is halted 
 112:FWLIB/src/stm32f4xx_dbgmcu.c ****   *     @arg DBGMCU_RTC_STOP: RTC Calendar and Wakeup counter stopped when Core is halted.         
ARM GAS  /tmp/ccHGbaW0.s 			page 5


 113:FWLIB/src/stm32f4xx_dbgmcu.c ****   *     @arg DBGMCU_WWDG_STOP: Debug WWDG stopped when Core is halted
 114:FWLIB/src/stm32f4xx_dbgmcu.c ****   *     @arg DBGMCU_IWDG_STOP: Debug IWDG stopped when Core is halted        
 115:FWLIB/src/stm32f4xx_dbgmcu.c ****   *     @arg DBGMCU_I2C1_SMBUS_TIMEOUT: I2C1 SMBUS timeout mode stopped when Core is halted
 116:FWLIB/src/stm32f4xx_dbgmcu.c ****   *     @arg DBGMCU_I2C2_SMBUS_TIMEOUT: I2C2 SMBUS timeout mode stopped when Core is halted
 117:FWLIB/src/stm32f4xx_dbgmcu.c ****   *     @arg DBGMCU_I2C3_SMBUS_TIMEOUT: I2C3 SMBUS timeout mode stopped when Core is halted
 118:FWLIB/src/stm32f4xx_dbgmcu.c ****   *     @arg DBGMCU_CAN2_STOP: Debug CAN1 stopped when Core is halted           
 119:FWLIB/src/stm32f4xx_dbgmcu.c ****   *     @arg DBGMCU_CAN1_STOP: Debug CAN2 stopped when Core is halted        
 120:FWLIB/src/stm32f4xx_dbgmcu.c ****   *   This parameter can be: ENABLE or DISABLE.
 121:FWLIB/src/stm32f4xx_dbgmcu.c ****   * @retval None
 122:FWLIB/src/stm32f4xx_dbgmcu.c ****   */
 123:FWLIB/src/stm32f4xx_dbgmcu.c **** void DBGMCU_APB1PeriphConfig(uint32_t DBGMCU_Periph, FunctionalState NewState)
 124:FWLIB/src/stm32f4xx_dbgmcu.c **** {
 123              		.loc 1 124 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 128              	.LVL4:
 125:FWLIB/src/stm32f4xx_dbgmcu.c ****   /* Check the parameters */
 126:FWLIB/src/stm32f4xx_dbgmcu.c ****   assert_param(IS_DBGMCU_APB1PERIPH(DBGMCU_Periph));
 127:FWLIB/src/stm32f4xx_dbgmcu.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 128:FWLIB/src/stm32f4xx_dbgmcu.c **** 
 129:FWLIB/src/stm32f4xx_dbgmcu.c ****   if (NewState != DISABLE)
 129              		.loc 1 129 0
 130 0000 29B9     		cbnz	r1, .L16
 130:FWLIB/src/stm32f4xx_dbgmcu.c ****   {
 131:FWLIB/src/stm32f4xx_dbgmcu.c ****     DBGMCU->APB1FZ |= DBGMCU_Periph;
 132:FWLIB/src/stm32f4xx_dbgmcu.c ****   }
 133:FWLIB/src/stm32f4xx_dbgmcu.c ****   else
 134:FWLIB/src/stm32f4xx_dbgmcu.c ****   {
 135:FWLIB/src/stm32f4xx_dbgmcu.c ****     DBGMCU->APB1FZ &= ~DBGMCU_Periph;
 131              		.loc 1 135 0
 132 0002 054A     		ldr	r2, .L17
 133 0004 9368     		ldr	r3, [r2, #8]
 134 0006 23EA0000 		bic	r0, r3, r0
 135              	.LVL5:
 136 000a 9060     		str	r0, [r2, #8]
 137 000c 7047     		bx	lr
 138              	.LVL6:
 139              	.L16:
 131:FWLIB/src/stm32f4xx_dbgmcu.c ****   }
 140              		.loc 1 131 0
 141 000e 024A     		ldr	r2, .L17
 142 0010 9368     		ldr	r3, [r2, #8]
 143 0012 1843     		orrs	r0, r0, r3
 144              	.LVL7:
 145 0014 9060     		str	r0, [r2, #8]
 146 0016 7047     		bx	lr
 147              	.L18:
 148              		.align	2
 149              	.L17:
 150 0018 002004E0 		.word	-536600576
 151              		.cfi_endproc
 152              	.LFE115:
 154              		.section	.text.DBGMCU_APB2PeriphConfig,"ax",%progbits
 155              		.align	1
 156              		.global	DBGMCU_APB2PeriphConfig
ARM GAS  /tmp/ccHGbaW0.s 			page 6


 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 160              		.fpu softvfp
 162              	DBGMCU_APB2PeriphConfig:
 163              	.LFB116:
 136:FWLIB/src/stm32f4xx_dbgmcu.c ****   }
 137:FWLIB/src/stm32f4xx_dbgmcu.c **** }
 138:FWLIB/src/stm32f4xx_dbgmcu.c **** 
 139:FWLIB/src/stm32f4xx_dbgmcu.c **** /**
 140:FWLIB/src/stm32f4xx_dbgmcu.c ****   * @brief  Configures APB2 peripheral behavior when the MCU is in Debug mode.
 141:FWLIB/src/stm32f4xx_dbgmcu.c ****   * @param  DBGMCU_Periph: specifies the APB2 peripheral.
 142:FWLIB/src/stm32f4xx_dbgmcu.c ****   *   This parameter can be any combination of the following values:       
 143:FWLIB/src/stm32f4xx_dbgmcu.c ****   *     @arg DBGMCU_TIM1_STOP: TIM1 counter stopped when Core is halted                
 144:FWLIB/src/stm32f4xx_dbgmcu.c ****   *     @arg DBGMCU_TIM8_STOP: TIM8 counter stopped when Core is halted
 145:FWLIB/src/stm32f4xx_dbgmcu.c ****   *     @arg DBGMCU_TIM9_STOP: TIM9 counter stopped when Core is halted   
 146:FWLIB/src/stm32f4xx_dbgmcu.c ****   *     @arg DBGMCU_TIM10_STOP: TIM10 counter stopped when Core is halted   
 147:FWLIB/src/stm32f4xx_dbgmcu.c ****   *     @arg DBGMCU_TIM11_STOP: TIM11 counter stopped when Core is halted                          
 148:FWLIB/src/stm32f4xx_dbgmcu.c ****   * @param  NewState: new state of the specified peripheral in Debug mode.
 149:FWLIB/src/stm32f4xx_dbgmcu.c ****   *   This parameter can be: ENABLE or DISABLE.
 150:FWLIB/src/stm32f4xx_dbgmcu.c ****   * @retval None
 151:FWLIB/src/stm32f4xx_dbgmcu.c ****   */
 152:FWLIB/src/stm32f4xx_dbgmcu.c **** void DBGMCU_APB2PeriphConfig(uint32_t DBGMCU_Periph, FunctionalState NewState)
 153:FWLIB/src/stm32f4xx_dbgmcu.c **** {
 164              		.loc 1 153 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 169              	.LVL8:
 154:FWLIB/src/stm32f4xx_dbgmcu.c ****   /* Check the parameters */
 155:FWLIB/src/stm32f4xx_dbgmcu.c ****   assert_param(IS_DBGMCU_APB2PERIPH(DBGMCU_Periph));
 156:FWLIB/src/stm32f4xx_dbgmcu.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 157:FWLIB/src/stm32f4xx_dbgmcu.c **** 
 158:FWLIB/src/stm32f4xx_dbgmcu.c ****   if (NewState != DISABLE)
 170              		.loc 1 158 0
 171 0000 29B9     		cbnz	r1, .L22
 159:FWLIB/src/stm32f4xx_dbgmcu.c ****   {
 160:FWLIB/src/stm32f4xx_dbgmcu.c ****     DBGMCU->APB2FZ |= DBGMCU_Periph;
 161:FWLIB/src/stm32f4xx_dbgmcu.c ****   }
 162:FWLIB/src/stm32f4xx_dbgmcu.c ****   else
 163:FWLIB/src/stm32f4xx_dbgmcu.c ****   {
 164:FWLIB/src/stm32f4xx_dbgmcu.c ****     DBGMCU->APB2FZ &= ~DBGMCU_Periph;
 172              		.loc 1 164 0
 173 0002 054A     		ldr	r2, .L23
 174 0004 D368     		ldr	r3, [r2, #12]
 175 0006 23EA0000 		bic	r0, r3, r0
 176              	.LVL9:
 177 000a D060     		str	r0, [r2, #12]
 178 000c 7047     		bx	lr
 179              	.LVL10:
 180              	.L22:
 160:FWLIB/src/stm32f4xx_dbgmcu.c ****   }
 181              		.loc 1 160 0
 182 000e 024A     		ldr	r2, .L23
 183 0010 D368     		ldr	r3, [r2, #12]
 184 0012 1843     		orrs	r0, r0, r3
ARM GAS  /tmp/ccHGbaW0.s 			page 7


 185              	.LVL11:
 186 0014 D060     		str	r0, [r2, #12]
 187 0016 7047     		bx	lr
 188              	.L24:
 189              		.align	2
 190              	.L23:
 191 0018 002004E0 		.word	-536600576
 192              		.cfi_endproc
 193              	.LFE116:
 195              		.text
 196              	.Letext0:
 197              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 198              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 199              		.file 4 "CORE/core_cm4.h"
 200              		.file 5 "USER/system_stm32f4xx.h"
 201              		.file 6 "USER/stm32f4xx.h"
ARM GAS  /tmp/ccHGbaW0.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_dbgmcu.c
     /tmp/ccHGbaW0.s:16     .text.DBGMCU_GetREVID:0000000000000000 $t
     /tmp/ccHGbaW0.s:23     .text.DBGMCU_GetREVID:0000000000000000 DBGMCU_GetREVID
     /tmp/ccHGbaW0.s:40     .text.DBGMCU_GetREVID:0000000000000008 $d
     /tmp/ccHGbaW0.s:45     .text.DBGMCU_GetDEVID:0000000000000000 $t
     /tmp/ccHGbaW0.s:52     .text.DBGMCU_GetDEVID:0000000000000000 DBGMCU_GetDEVID
     /tmp/ccHGbaW0.s:68     .text.DBGMCU_GetDEVID:000000000000000c $d
     /tmp/ccHGbaW0.s:73     .text.DBGMCU_Config:0000000000000000 $t
     /tmp/ccHGbaW0.s:80     .text.DBGMCU_Config:0000000000000000 DBGMCU_Config
     /tmp/ccHGbaW0.s:109    .text.DBGMCU_Config:0000000000000018 $d
     /tmp/ccHGbaW0.s:114    .text.DBGMCU_APB1PeriphConfig:0000000000000000 $t
     /tmp/ccHGbaW0.s:121    .text.DBGMCU_APB1PeriphConfig:0000000000000000 DBGMCU_APB1PeriphConfig
     /tmp/ccHGbaW0.s:150    .text.DBGMCU_APB1PeriphConfig:0000000000000018 $d
     /tmp/ccHGbaW0.s:155    .text.DBGMCU_APB2PeriphConfig:0000000000000000 $t
     /tmp/ccHGbaW0.s:162    .text.DBGMCU_APB2PeriphConfig:0000000000000000 DBGMCU_APB2PeriphConfig
     /tmp/ccHGbaW0.s:191    .text.DBGMCU_APB2PeriphConfig:0000000000000018 $d
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
