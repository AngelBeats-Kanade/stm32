ARM GAS  /tmp/cc0Ri0QQ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"usart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text._sys_exit,"ax",%progbits
  16              		.align	1
  17              		.global	_sys_exit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	_sys_exit:
  24              	.LFB113:
  25              		.file 1 "SYSTEM/usart/usart.c"
   1:SYSTEM/usart/usart.c **** #include "usart.h"
   2:SYSTEM/usart/usart.c **** #include "sys.h"
   3:SYSTEM/usart/usart.c **** 
   4:SYSTEM/usart/usart.c **** #if SYSTEM_SUPPORT_OS
   5:SYSTEM/usart/usart.c **** #include "includes.h"
   6:SYSTEM/usart/usart.c **** #endif
   7:SYSTEM/usart/usart.c **** 
   8:SYSTEM/usart/usart.c **** #if 1
   9:SYSTEM/usart/usart.c **** #pragma import(__use_no_semihosting)
  10:SYSTEM/usart/usart.c **** 
  11:SYSTEM/usart/usart.c **** struct __FILE
  12:SYSTEM/usart/usart.c **** {
  13:SYSTEM/usart/usart.c ****   int handle;
  14:SYSTEM/usart/usart.c **** };
  15:SYSTEM/usart/usart.c **** 
  16:SYSTEM/usart/usart.c **** FILE __stdout;
  17:SYSTEM/usart/usart.c **** 
  18:SYSTEM/usart/usart.c **** _sys_exit(int x) { x = x; }
  26              		.loc 1 18 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  32              	.LVL1:
  33              		.loc 1 18 0
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE113:
  38              		.section	.text.fputc,"ax",%progbits
  39              		.align	1
  40              		.global	fputc
  41              		.syntax unified
ARM GAS  /tmp/cc0Ri0QQ.s 			page 2


  42              		.thumb
  43              		.thumb_func
  44              		.fpu softvfp
  46              	fputc:
  47              	.LFB114:
  19:SYSTEM/usart/usart.c **** 
  20:SYSTEM/usart/usart.c **** int fputc(int ch, FILE *f)
  21:SYSTEM/usart/usart.c **** {
  48              		.loc 1 21 0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.LVL2:
  54              	.L3:
  22:SYSTEM/usart/usart.c ****   while ((USART1->SR & 0X40) == 0)
  55              		.loc 1 22 0 discriminator 1
  56 0000 044B     		ldr	r3, .L4
  57 0002 1B88     		ldrh	r3, [r3]
  58 0004 13F0400F 		tst	r3, #64
  59 0008 FAD0     		beq	.L3
  23:SYSTEM/usart/usart.c ****     ;
  24:SYSTEM/usart/usart.c ****   USART1->DR = (u8)ch;
  60              		.loc 1 24 0
  61 000a C2B2     		uxtb	r2, r0
  62 000c 014B     		ldr	r3, .L4
  63 000e 9A80     		strh	r2, [r3, #4]	@ movhi
  25:SYSTEM/usart/usart.c ****   return ch;
  26:SYSTEM/usart/usart.c **** }
  64              		.loc 1 26 0
  65 0010 7047     		bx	lr
  66              	.L5:
  67 0012 00BF     		.align	2
  68              	.L4:
  69 0014 00100140 		.word	1073811456
  70              		.cfi_endproc
  71              	.LFE114:
  73              		.section	.text.uart_init,"ax",%progbits
  74              		.align	1
  75              		.global	uart_init
  76              		.syntax unified
  77              		.thumb
  78              		.thumb_func
  79              		.fpu softvfp
  81              	uart_init:
  82              	.LFB115:
  27:SYSTEM/usart/usart.c **** #endif
  28:SYSTEM/usart/usart.c **** 
  29:SYSTEM/usart/usart.c **** #if EN_USART1_RX
  30:SYSTEM/usart/usart.c **** 
  31:SYSTEM/usart/usart.c **** u8 USART_RX_BUF[USART_REC_LEN];
  32:SYSTEM/usart/usart.c **** 
  33:SYSTEM/usart/usart.c **** u16 USART_RX_STA = 0;
  34:SYSTEM/usart/usart.c **** 
  35:SYSTEM/usart/usart.c **** void uart_init(u32 bound)
  36:SYSTEM/usart/usart.c **** {
  83              		.loc 1 36 0
ARM GAS  /tmp/cc0Ri0QQ.s 			page 3


  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 32
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              	.LVL3:
  88 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  89              	.LCFI0:
  90              		.cfi_def_cfa_offset 20
  91              		.cfi_offset 4, -20
  92              		.cfi_offset 5, -16
  93              		.cfi_offset 6, -12
  94              		.cfi_offset 7, -8
  95              		.cfi_offset 14, -4
  96 0002 89B0     		sub	sp, sp, #36
  97              	.LCFI1:
  98              		.cfi_def_cfa_offset 56
  99 0004 0746     		mov	r7, r0
  37:SYSTEM/usart/usart.c **** 
  38:SYSTEM/usart/usart.c ****   GPIO_InitTypeDef GPIO_InitStructure;
  39:SYSTEM/usart/usart.c ****   USART_InitTypeDef USART_InitStructure;
  40:SYSTEM/usart/usart.c ****   NVIC_InitTypeDef NVIC_InitStructure;
  41:SYSTEM/usart/usart.c **** 
  42:SYSTEM/usart/usart.c ****   RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
 100              		.loc 1 42 0
 101 0006 0121     		movs	r1, #1
 102 0008 0846     		mov	r0, r1
 103              	.LVL4:
 104 000a FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
 105              	.LVL5:
  43:SYSTEM/usart/usart.c ****   RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1, ENABLE);
 106              		.loc 1 43 0
 107 000e 0121     		movs	r1, #1
 108 0010 1020     		movs	r0, #16
 109 0012 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 110              	.LVL6:
  44:SYSTEM/usart/usart.c **** 
  45:SYSTEM/usart/usart.c ****   GPIO_PinAFConfig(GPIOA, GPIO_PinSource9, GPIO_AF_USART1);
 111              		.loc 1 45 0
 112 0016 254E     		ldr	r6, .L8
 113 0018 0722     		movs	r2, #7
 114 001a 0921     		movs	r1, #9
 115 001c 3046     		mov	r0, r6
 116 001e FFF7FEFF 		bl	GPIO_PinAFConfig
 117              	.LVL7:
  46:SYSTEM/usart/usart.c ****   GPIO_PinAFConfig(GPIOA, GPIO_PinSource10, GPIO_AF_USART1);
 118              		.loc 1 46 0
 119 0022 0722     		movs	r2, #7
 120 0024 0A21     		movs	r1, #10
 121 0026 3046     		mov	r0, r6
 122 0028 FFF7FEFF 		bl	GPIO_PinAFConfig
 123              	.LVL8:
  47:SYSTEM/usart/usart.c **** 
  48:SYSTEM/usart/usart.c ****   GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9 | GPIO_Pin_10;
 124              		.loc 1 48 0
 125 002c 4FF4C063 		mov	r3, #1536
 126 0030 0693     		str	r3, [sp, #24]
  49:SYSTEM/usart/usart.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
 127              		.loc 1 49 0
ARM GAS  /tmp/cc0Ri0QQ.s 			page 4


 128 0032 0223     		movs	r3, #2
 129 0034 8DF81C30 		strb	r3, [sp, #28]
  50:SYSTEM/usart/usart.c ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 130              		.loc 1 50 0
 131 0038 8DF81D30 		strb	r3, [sp, #29]
  51:SYSTEM/usart/usart.c ****   GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 132              		.loc 1 51 0
 133 003c 0024     		movs	r4, #0
 134 003e 8DF81E40 		strb	r4, [sp, #30]
  52:SYSTEM/usart/usart.c ****   GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 135              		.loc 1 52 0
 136 0042 0125     		movs	r5, #1
 137 0044 8DF81F50 		strb	r5, [sp, #31]
  53:SYSTEM/usart/usart.c ****   GPIO_Init(GPIOA, &GPIO_InitStructure);
 138              		.loc 1 53 0
 139 0048 06A9     		add	r1, sp, #24
 140 004a 3046     		mov	r0, r6
 141 004c FFF7FEFF 		bl	GPIO_Init
 142              	.LVL9:
  54:SYSTEM/usart/usart.c **** 
  55:SYSTEM/usart/usart.c ****   USART_InitStructure.USART_BaudRate = bound;
 143              		.loc 1 55 0
 144 0050 0297     		str	r7, [sp, #8]
  56:SYSTEM/usart/usart.c ****   USART_InitStructure.USART_WordLength = USART_WordLength_8b;
 145              		.loc 1 56 0
 146 0052 ADF80C40 		strh	r4, [sp, #12]	@ movhi
  57:SYSTEM/usart/usart.c ****   USART_InitStructure.USART_StopBits = USART_StopBits_1;
 147              		.loc 1 57 0
 148 0056 ADF80E40 		strh	r4, [sp, #14]	@ movhi
  58:SYSTEM/usart/usart.c ****   USART_InitStructure.USART_Parity = USART_Parity_No;
 149              		.loc 1 58 0
 150 005a ADF81040 		strh	r4, [sp, #16]	@ movhi
  59:SYSTEM/usart/usart.c ****   USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 151              		.loc 1 59 0
 152 005e ADF81440 		strh	r4, [sp, #20]	@ movhi
  60:SYSTEM/usart/usart.c ****   USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 153              		.loc 1 60 0
 154 0062 0C23     		movs	r3, #12
 155 0064 ADF81230 		strh	r3, [sp, #18]	@ movhi
  61:SYSTEM/usart/usart.c ****   USART_Init(USART1, &USART_InitStructure);
 156              		.loc 1 61 0
 157 0068 04F18044 		add	r4, r4, #1073741824
 158 006c 04F58834 		add	r4, r4, #69632
 159 0070 02A9     		add	r1, sp, #8
 160 0072 2046     		mov	r0, r4
 161 0074 FFF7FEFF 		bl	USART_Init
 162              	.LVL10:
  62:SYSTEM/usart/usart.c **** 
  63:SYSTEM/usart/usart.c ****   USART_Cmd(USART1, ENABLE);
 163              		.loc 1 63 0
 164 0078 2946     		mov	r1, r5
 165 007a 2046     		mov	r0, r4
 166 007c FFF7FEFF 		bl	USART_Cmd
 167              	.LVL11:
  64:SYSTEM/usart/usart.c **** 
  65:SYSTEM/usart/usart.c ****   // USART_ClearFlag(USART1, USART_FLAG_TC);
  66:SYSTEM/usart/usart.c **** 
ARM GAS  /tmp/cc0Ri0QQ.s 			page 5


  67:SYSTEM/usart/usart.c **** #if EN_USART1_RX
  68:SYSTEM/usart/usart.c ****   USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);
 168              		.loc 1 68 0
 169 0080 2A46     		mov	r2, r5
 170 0082 40F22551 		movw	r1, #1317
 171 0086 2046     		mov	r0, r4
 172 0088 FFF7FEFF 		bl	USART_ITConfig
 173              	.LVL12:
  69:SYSTEM/usart/usart.c **** 
  70:SYSTEM/usart/usart.c ****   // Usart1 NVIC
  71:SYSTEM/usart/usart.c ****   NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn;
 174              		.loc 1 71 0
 175 008c 2523     		movs	r3, #37
 176 008e 8DF80430 		strb	r3, [sp, #4]
  72:SYSTEM/usart/usart.c ****   NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 3;
 177              		.loc 1 72 0
 178 0092 0323     		movs	r3, #3
 179 0094 8DF80530 		strb	r3, [sp, #5]
  73:SYSTEM/usart/usart.c ****   NVIC_InitStructure.NVIC_IRQChannelSubPriority = 3;
 180              		.loc 1 73 0
 181 0098 8DF80630 		strb	r3, [sp, #6]
  74:SYSTEM/usart/usart.c ****   NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 182              		.loc 1 74 0
 183 009c 8DF80750 		strb	r5, [sp, #7]
  75:SYSTEM/usart/usart.c ****   NVIC_Init(&NVIC_InitStructure);
 184              		.loc 1 75 0
 185 00a0 01A8     		add	r0, sp, #4
 186 00a2 FFF7FEFF 		bl	NVIC_Init
 187              	.LVL13:
  76:SYSTEM/usart/usart.c **** 
  77:SYSTEM/usart/usart.c **** #endif
  78:SYSTEM/usart/usart.c **** }
 188              		.loc 1 78 0
 189 00a6 09B0     		add	sp, sp, #36
 190              	.LCFI2:
 191              		.cfi_def_cfa_offset 20
 192              		@ sp needed
 193 00a8 F0BD     		pop	{r4, r5, r6, r7, pc}
 194              	.LVL14:
 195              	.L9:
 196 00aa 00BF     		.align	2
 197              	.L8:
 198 00ac 00000240 		.word	1073872896
 199              		.cfi_endproc
 200              	.LFE115:
 202              		.section	.text.USART1_IRQHandler,"ax",%progbits
 203              		.align	1
 204              		.global	USART1_IRQHandler
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu softvfp
 210              	USART1_IRQHandler:
 211              	.LFB116:
  79:SYSTEM/usart/usart.c **** 
  80:SYSTEM/usart/usart.c **** void USART1_IRQHandler(void)
  81:SYSTEM/usart/usart.c **** {
ARM GAS  /tmp/cc0Ri0QQ.s 			page 6


 212              		.loc 1 81 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216 0000 08B5     		push	{r3, lr}
 217              	.LCFI3:
 218              		.cfi_def_cfa_offset 8
 219              		.cfi_offset 3, -8
 220              		.cfi_offset 14, -4
  82:SYSTEM/usart/usart.c ****   u8 Res;
  83:SYSTEM/usart/usart.c **** #if SYSTEM_SUPPORT_OS
  84:SYSTEM/usart/usart.c ****   OSIntEnter();
  85:SYSTEM/usart/usart.c **** #endif
  86:SYSTEM/usart/usart.c ****   if (USART_GetITStatus(USART1, USART_IT_RXNE) != RESET)
 221              		.loc 1 86 0
 222 0002 40F22551 		movw	r1, #1317
 223 0006 1948     		ldr	r0, .L18
 224 0008 FFF7FEFF 		bl	USART_GetITStatus
 225              	.LVL15:
 226 000c 00B9     		cbnz	r0, .L16
 227              	.L10:
 228 000e 08BD     		pop	{r3, pc}
 229              	.L16:
  87:SYSTEM/usart/usart.c ****   {
  88:SYSTEM/usart/usart.c ****     Res = USART_ReceiveData(USART1); //(USART1->DR);
 230              		.loc 1 88 0
 231 0010 1648     		ldr	r0, .L18
 232 0012 FFF7FEFF 		bl	USART_ReceiveData
 233              	.LVL16:
 234 0016 C0B2     		uxtb	r0, r0
 235              	.LVL17:
  89:SYSTEM/usart/usart.c **** 
  90:SYSTEM/usart/usart.c ****     if ((USART_RX_STA & 0x8000) == 0)
 236              		.loc 1 90 0
 237 0018 154B     		ldr	r3, .L18+4
 238 001a 1B88     		ldrh	r3, [r3]
 239 001c 13F4004F 		tst	r3, #32768
 240 0020 F5D1     		bne	.L10
  91:SYSTEM/usart/usart.c ****     {
  92:SYSTEM/usart/usart.c ****       if (USART_RX_STA & 0x4000)
 241              		.loc 1 92 0
 242 0022 13F4804F 		tst	r3, #16384
 243 0026 0CD0     		beq	.L12
  93:SYSTEM/usart/usart.c ****       {
  94:SYSTEM/usart/usart.c ****         if (Res != 0x0a)
 244              		.loc 1 94 0
 245 0028 0A28     		cmp	r0, #10
 246 002a 03D0     		beq	.L13
  95:SYSTEM/usart/usart.c ****           USART_RX_STA = 0;
 247              		.loc 1 95 0
 248 002c 0022     		movs	r2, #0
 249 002e 104B     		ldr	r3, .L18+4
 250 0030 1A80     		strh	r2, [r3]	@ movhi
 251 0032 08BD     		pop	{r3, pc}
 252              	.L13:
  96:SYSTEM/usart/usart.c ****         else
  97:SYSTEM/usart/usart.c ****           USART_RX_STA |= 0x8000;
ARM GAS  /tmp/cc0Ri0QQ.s 			page 7


 253              		.loc 1 97 0
 254 0034 6FEA4343 		mvn	r3, r3, lsl #17
 255 0038 6FEA5343 		mvn	r3, r3, lsr #17
 256 003c 0C4A     		ldr	r2, .L18+4
 257 003e 1380     		strh	r3, [r2]	@ movhi
 258 0040 08BD     		pop	{r3, pc}
 259              	.L12:
  98:SYSTEM/usart/usart.c ****       }
  99:SYSTEM/usart/usart.c ****       else
 100:SYSTEM/usart/usart.c ****       {
 101:SYSTEM/usart/usart.c ****         if (Res == 0x0d)
 260              		.loc 1 101 0
 261 0042 0D28     		cmp	r0, #13
 262 0044 0DD0     		beq	.L17
 102:SYSTEM/usart/usart.c ****           USART_RX_STA |= 0x4000;
 103:SYSTEM/usart/usart.c ****         else
 104:SYSTEM/usart/usart.c ****         {
 105:SYSTEM/usart/usart.c ****           USART_RX_BUF[USART_RX_STA & 0X3FFF] = Res;
 263              		.loc 1 105 0
 264 0046 C3F30D02 		ubfx	r2, r3, #0, #14
 265 004a 0A49     		ldr	r1, .L18+8
 266 004c 8854     		strb	r0, [r1, r2]
 106:SYSTEM/usart/usart.c ****           USART_RX_STA++;
 267              		.loc 1 106 0
 268 004e 0133     		adds	r3, r3, #1
 269 0050 9BB2     		uxth	r3, r3
 270 0052 074A     		ldr	r2, .L18+4
 271 0054 1380     		strh	r3, [r2]	@ movhi
 107:SYSTEM/usart/usart.c ****           if (USART_RX_STA > (USART_REC_LEN - 1))
 272              		.loc 1 107 0
 273 0056 C72B     		cmp	r3, #199
 274 0058 D9D9     		bls	.L10
 108:SYSTEM/usart/usart.c ****             USART_RX_STA = 0;
 275              		.loc 1 108 0
 276 005a 0022     		movs	r2, #0
 277 005c 044B     		ldr	r3, .L18+4
 278 005e 1A80     		strh	r2, [r3]	@ movhi
 109:SYSTEM/usart/usart.c ****         }
 110:SYSTEM/usart/usart.c ****       }
 111:SYSTEM/usart/usart.c ****     }
 112:SYSTEM/usart/usart.c ****   }
 113:SYSTEM/usart/usart.c **** #if SYSTEM_SUPPORT_OS
 114:SYSTEM/usart/usart.c ****   OSIntExit();
 115:SYSTEM/usart/usart.c **** #endif
 116:SYSTEM/usart/usart.c **** }
 279              		.loc 1 116 0
 280 0060 D5E7     		b	.L10
 281              	.L17:
 102:SYSTEM/usart/usart.c ****         else
 282              		.loc 1 102 0
 283 0062 43F48043 		orr	r3, r3, #16384
 284 0066 024A     		ldr	r2, .L18+4
 285 0068 1380     		strh	r3, [r2]	@ movhi
 286 006a 08BD     		pop	{r3, pc}
 287              	.L19:
 288              		.align	2
 289              	.L18:
ARM GAS  /tmp/cc0Ri0QQ.s 			page 8


 290 006c 00100140 		.word	1073811456
 291 0070 00000000 		.word	.LANCHOR0
 292 0074 00000000 		.word	USART_RX_BUF
 293              		.cfi_endproc
 294              	.LFE116:
 296              		.global	USART_RX_STA
 297              		.comm	USART_RX_BUF,200,4
 298              		.comm	__stdout,104,4
 299              		.section	.bss.USART_RX_STA,"aw",%nobits
 300              		.align	1
 301              		.set	.LANCHOR0,. + 0
 304              	USART_RX_STA:
 305 0000 0000     		.space	2
 306              		.text
 307              	.Letext0:
 308              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 309              		.file 3 "/usr/include/newlib/sys/lock.h"
 310              		.file 4 "/usr/include/newlib/sys/_types.h"
 311              		.file 5 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 312              		.file 6 "/usr/include/newlib/sys/reent.h"
 313              		.file 7 "/usr/include/newlib/sys/_stdint.h"
 314              		.file 8 "/usr/include/newlib/stdio.h"
 315              		.file 9 "CORE/core_cm4.h"
 316              		.file 10 "USER/system_stm32f4xx.h"
 317              		.file 11 "USER/stm32f4xx.h"
 318              		.file 12 "FWLIB/inc/stm32f4xx_gpio.h"
 319              		.file 13 "FWLIB/inc/stm32f4xx_usart.h"
 320              		.file 14 "FWLIB/inc/misc.h"
 321              		.file 15 "SYSTEM/usart/usart.h"
 322              		.file 16 "FWLIB/inc/stm32f4xx_rcc.h"
ARM GAS  /tmp/cc0Ri0QQ.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/cc0Ri0QQ.s:16     .text._sys_exit:0000000000000000 $t
     /tmp/cc0Ri0QQ.s:23     .text._sys_exit:0000000000000000 _sys_exit
     /tmp/cc0Ri0QQ.s:39     .text.fputc:0000000000000000 $t
     /tmp/cc0Ri0QQ.s:46     .text.fputc:0000000000000000 fputc
     /tmp/cc0Ri0QQ.s:69     .text.fputc:0000000000000014 $d
     /tmp/cc0Ri0QQ.s:74     .text.uart_init:0000000000000000 $t
     /tmp/cc0Ri0QQ.s:81     .text.uart_init:0000000000000000 uart_init
     /tmp/cc0Ri0QQ.s:198    .text.uart_init:00000000000000ac $d
     /tmp/cc0Ri0QQ.s:203    .text.USART1_IRQHandler:0000000000000000 $t
     /tmp/cc0Ri0QQ.s:210    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
     /tmp/cc0Ri0QQ.s:290    .text.USART1_IRQHandler:000000000000006c $d
                            *COM*:00000000000000c8 USART_RX_BUF
     /tmp/cc0Ri0QQ.s:304    .bss.USART_RX_STA:0000000000000000 USART_RX_STA
                            *COM*:0000000000000068 __stdout
     /tmp/cc0Ri0QQ.s:300    .bss.USART_RX_STA:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
RCC_AHB1PeriphClockCmd
RCC_APB2PeriphClockCmd
GPIO_PinAFConfig
GPIO_Init
USART_Init
USART_Cmd
USART_ITConfig
NVIC_Init
USART_GetITStatus
USART_ReceiveData
