ARM GAS  /tmp/ccOIxr21.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f4xx_sdio.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SDIO_DeInit,"ax",%progbits
  16              		.align	1
  17              		.global	SDIO_DeInit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	SDIO_DeInit:
  24              	.LFB112:
  25              		.file 1 "FWLIB/src/stm32f4xx_sdio.c"
   1:FWLIB/src/stm32f4xx_sdio.c **** /**
   2:FWLIB/src/stm32f4xx_sdio.c ****   ******************************************************************************
   3:FWLIB/src/stm32f4xx_sdio.c ****   * @file    stm32f4xx_sdio.c
   4:FWLIB/src/stm32f4xx_sdio.c ****   * @author  MCD Application Team
   5:FWLIB/src/stm32f4xx_sdio.c ****   * @version V1.4.0
   6:FWLIB/src/stm32f4xx_sdio.c ****   * @date    04-August-2014
   7:FWLIB/src/stm32f4xx_sdio.c ****   * @brief   This file provides firmware functions to manage the following 
   8:FWLIB/src/stm32f4xx_sdio.c ****   *          functionalities of the Secure digital input/output interface (SDIO) 
   9:FWLIB/src/stm32f4xx_sdio.c ****   *          peripheral:
  10:FWLIB/src/stm32f4xx_sdio.c ****   *           + Initialization and Configuration
  11:FWLIB/src/stm32f4xx_sdio.c ****   *           + Command path state machine (CPSM) management
  12:FWLIB/src/stm32f4xx_sdio.c ****   *           + Data path state machine (DPSM) management
  13:FWLIB/src/stm32f4xx_sdio.c ****   *           + SDIO IO Cards mode management
  14:FWLIB/src/stm32f4xx_sdio.c ****   *           + CE-ATA mode management
  15:FWLIB/src/stm32f4xx_sdio.c ****   *           + DMA transfers management
  16:FWLIB/src/stm32f4xx_sdio.c ****   *           + Interrupts and flags management
  17:FWLIB/src/stm32f4xx_sdio.c ****   *
  18:FWLIB/src/stm32f4xx_sdio.c **** @verbatim
  19:FWLIB/src/stm32f4xx_sdio.c **** 
  20:FWLIB/src/stm32f4xx_sdio.c ****  ===================================================================
  21:FWLIB/src/stm32f4xx_sdio.c ****                  ##### How to use this driver #####
  22:FWLIB/src/stm32f4xx_sdio.c ****  ===================================================================
  23:FWLIB/src/stm32f4xx_sdio.c ****  [..]
  24:FWLIB/src/stm32f4xx_sdio.c ****    (#) The SDIO clock (SDIOCLK = 48 MHz) is coming from a specific output of PLL 
  25:FWLIB/src/stm32f4xx_sdio.c ****        (PLL48CLK). Before to start working with SDIO peripheral make sure that the
  26:FWLIB/src/stm32f4xx_sdio.c ****        PLL is well configured.
  27:FWLIB/src/stm32f4xx_sdio.c ****        The SDIO peripheral uses two clock signals:
  28:FWLIB/src/stm32f4xx_sdio.c ****        (++) SDIO adapter clock (SDIOCLK = 48 MHz)
  29:FWLIB/src/stm32f4xx_sdio.c ****        (++) APB2 bus clock (PCLK2)
  30:FWLIB/src/stm32f4xx_sdio.c ****        
  31:FWLIB/src/stm32f4xx_sdio.c ****        -@@- PCLK2 and SDIO_CK clock frequencies must respect the following condition:
  32:FWLIB/src/stm32f4xx_sdio.c ****            Frequency(PCLK2) >= (3 / 8 x Frequency(SDIO_CK))
  33:FWLIB/src/stm32f4xx_sdio.c ****   
ARM GAS  /tmp/ccOIxr21.s 			page 2


  34:FWLIB/src/stm32f4xx_sdio.c ****    (#) Enable peripheral clock using RCC_APB2PeriphClockCmd(RCC_APB2Periph_SDIO, ENABLE).
  35:FWLIB/src/stm32f4xx_sdio.c ****   
  36:FWLIB/src/stm32f4xx_sdio.c ****    (#) According to the SDIO mode, enable the GPIO clocks using 
  37:FWLIB/src/stm32f4xx_sdio.c ****        RCC_AHB1PeriphClockCmd() function. 
  38:FWLIB/src/stm32f4xx_sdio.c ****        The I/O can be one of the following configurations:
  39:FWLIB/src/stm32f4xx_sdio.c ****        (++) 1-bit data length: SDIO_CMD, SDIO_CK and D0.
  40:FWLIB/src/stm32f4xx_sdio.c ****        (++) 4-bit data length: SDIO_CMD, SDIO_CK and D[3:0].
  41:FWLIB/src/stm32f4xx_sdio.c ****        (++) 8-bit data length: SDIO_CMD, SDIO_CK and D[7:0].      
  42:FWLIB/src/stm32f4xx_sdio.c ****   
  43:FWLIB/src/stm32f4xx_sdio.c ****    (#) Peripheral alternate function: 
  44:FWLIB/src/stm32f4xx_sdio.c ****        (++) Connect the pin to the desired peripherals' Alternate Function (AF) 
  45:FWLIB/src/stm32f4xx_sdio.c ****            using GPIO_PinAFConfig() function
  46:FWLIB/src/stm32f4xx_sdio.c ****        (++) Configure the desired pin in alternate function by: 
  47:FWLIB/src/stm32f4xx_sdio.c ****            GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  48:FWLIB/src/stm32f4xx_sdio.c ****        (++) Select the type, pull-up/pull-down and output speed via GPIO_PuPd, 
  49:FWLIB/src/stm32f4xx_sdio.c ****            GPIO_OType and GPIO_Speed members
  50:FWLIB/src/stm32f4xx_sdio.c ****        (++) Call GPIO_Init() function
  51:FWLIB/src/stm32f4xx_sdio.c ****   
  52:FWLIB/src/stm32f4xx_sdio.c ****    (#) Program the Clock Edge, Clock Bypass, Clock Power Save, Bus Wide, 
  53:FWLIB/src/stm32f4xx_sdio.c ****        hardware, flow control and the Clock Divider using the SDIO_Init()
  54:FWLIB/src/stm32f4xx_sdio.c ****        function.
  55:FWLIB/src/stm32f4xx_sdio.c ****   
  56:FWLIB/src/stm32f4xx_sdio.c ****    (#) Enable the Power ON State using the SDIO_SetPowerState(SDIO_PowerState_ON) 
  57:FWLIB/src/stm32f4xx_sdio.c ****        function.
  58:FWLIB/src/stm32f4xx_sdio.c ****                 
  59:FWLIB/src/stm32f4xx_sdio.c ****    (#) Enable the clock using the SDIO_ClockCmd() function.
  60:FWLIB/src/stm32f4xx_sdio.c ****   
  61:FWLIB/src/stm32f4xx_sdio.c ****    (#) Enable the NVIC and the corresponding interrupt using the function 
  62:FWLIB/src/stm32f4xx_sdio.c ****        SDIO_ITConfig() if you need to use interrupt mode. 
  63:FWLIB/src/stm32f4xx_sdio.c ****   
  64:FWLIB/src/stm32f4xx_sdio.c ****    (#) When using the DMA mode 
  65:FWLIB/src/stm32f4xx_sdio.c ****        (++) Configure the DMA using DMA_Init() function
  66:FWLIB/src/stm32f4xx_sdio.c ****        (++) Active the needed channel Request using SDIO_DMACmd() function
  67:FWLIB/src/stm32f4xx_sdio.c ****   
  68:FWLIB/src/stm32f4xx_sdio.c ****    (#) Enable the DMA using the DMA_Cmd() function, when using DMA mode. 
  69:FWLIB/src/stm32f4xx_sdio.c ****   
  70:FWLIB/src/stm32f4xx_sdio.c ****    (#) To control the CPSM (Command Path State Machine) and send 
  71:FWLIB/src/stm32f4xx_sdio.c ****        commands to the card use the SDIO_SendCommand(), 
  72:FWLIB/src/stm32f4xx_sdio.c ****        SDIO_GetCommandResponse() and SDIO_GetResponse() functions. First, user has
  73:FWLIB/src/stm32f4xx_sdio.c ****        to fill the command structure (pointer to SDIO_CmdInitTypeDef) according 
  74:FWLIB/src/stm32f4xx_sdio.c ****        to the selected command to be sent.
  75:FWLIB/src/stm32f4xx_sdio.c ****        The parameters that should be filled are:
  76:FWLIB/src/stm32f4xx_sdio.c ****        (++) Command Argument
  77:FWLIB/src/stm32f4xx_sdio.c ****        (++) Command Index
  78:FWLIB/src/stm32f4xx_sdio.c ****        (++) Command Response type
  79:FWLIB/src/stm32f4xx_sdio.c ****        (++) Command Wait
  80:FWLIB/src/stm32f4xx_sdio.c ****        (++) CPSM Status (Enable or Disable).
  81:FWLIB/src/stm32f4xx_sdio.c ****   
  82:FWLIB/src/stm32f4xx_sdio.c ****        -@@- To check if the command is well received, read the SDIO_CMDRESP
  83:FWLIB/src/stm32f4xx_sdio.c ****            register using the SDIO_GetCommandResponse().
  84:FWLIB/src/stm32f4xx_sdio.c ****            The SDIO responses registers (SDIO_RESP1 to SDIO_RESP2), use the
  85:FWLIB/src/stm32f4xx_sdio.c ****            SDIO_GetResponse() function.
  86:FWLIB/src/stm32f4xx_sdio.c ****   
  87:FWLIB/src/stm32f4xx_sdio.c ****    (#) To control the DPSM (Data Path State Machine) and send/receive 
  88:FWLIB/src/stm32f4xx_sdio.c ****        data to/from the card use the SDIO_DataConfig(), SDIO_GetDataCounter(), 
  89:FWLIB/src/stm32f4xx_sdio.c ****        SDIO_ReadData(), SDIO_WriteData() and SDIO_GetFIFOCount() functions.
  90:FWLIB/src/stm32f4xx_sdio.c ****   
ARM GAS  /tmp/ccOIxr21.s 			page 3


  91:FWLIB/src/stm32f4xx_sdio.c ****  *** Read Operations ***
  92:FWLIB/src/stm32f4xx_sdio.c ****  =======================
  93:FWLIB/src/stm32f4xx_sdio.c ****  [..]
  94:FWLIB/src/stm32f4xx_sdio.c ****    (#) First, user has to fill the data structure (pointer to
  95:FWLIB/src/stm32f4xx_sdio.c ****        SDIO_DataInitTypeDef) according to the selected data type to be received.
  96:FWLIB/src/stm32f4xx_sdio.c ****        The parameters that should be filled are:
  97:FWLIB/src/stm32f4xx_sdio.c ****        (++) Data TimeOut
  98:FWLIB/src/stm32f4xx_sdio.c ****        (++) Data Length
  99:FWLIB/src/stm32f4xx_sdio.c ****        (++) Data Block size
 100:FWLIB/src/stm32f4xx_sdio.c ****        (++) Data Transfer direction: should be from card (To SDIO)
 101:FWLIB/src/stm32f4xx_sdio.c ****        (++) Data Transfer mode
 102:FWLIB/src/stm32f4xx_sdio.c ****        (++) DPSM Status (Enable or Disable)
 103:FWLIB/src/stm32f4xx_sdio.c ****                                      
 104:FWLIB/src/stm32f4xx_sdio.c ****    (#) Configure the SDIO resources to receive the data from the card
 105:FWLIB/src/stm32f4xx_sdio.c ****        according to selected transfer mode (Refer to Step 8, 9 and 10).
 106:FWLIB/src/stm32f4xx_sdio.c ****   
 107:FWLIB/src/stm32f4xx_sdio.c ****    (#)  Send the selected Read command (refer to step 11).
 108:FWLIB/src/stm32f4xx_sdio.c ****                     
 109:FWLIB/src/stm32f4xx_sdio.c ****    (#) Use the SDIO flags/interrupts to check the transfer status.
 110:FWLIB/src/stm32f4xx_sdio.c ****   
 111:FWLIB/src/stm32f4xx_sdio.c ****  *** Write Operations ***
 112:FWLIB/src/stm32f4xx_sdio.c ****  ========================
 113:FWLIB/src/stm32f4xx_sdio.c ****  [..]
 114:FWLIB/src/stm32f4xx_sdio.c ****    (#) First, user has to fill the data structure (pointer to
 115:FWLIB/src/stm32f4xx_sdio.c ****        SDIO_DataInitTypeDef) according to the selected data type to be received.
 116:FWLIB/src/stm32f4xx_sdio.c ****        The parameters that should be filled are:
 117:FWLIB/src/stm32f4xx_sdio.c ****        (++) Data TimeOut
 118:FWLIB/src/stm32f4xx_sdio.c ****        (++) Data Length
 119:FWLIB/src/stm32f4xx_sdio.c ****        (++) Data Block size
 120:FWLIB/src/stm32f4xx_sdio.c ****        (++) Data Transfer direction:  should be to card (To CARD)
 121:FWLIB/src/stm32f4xx_sdio.c ****        (++) Data Transfer mode
 122:FWLIB/src/stm32f4xx_sdio.c ****        (++) DPSM Status (Enable or Disable)
 123:FWLIB/src/stm32f4xx_sdio.c ****   
 124:FWLIB/src/stm32f4xx_sdio.c ****    (#) Configure the SDIO resources to send the data to the card according to 
 125:FWLIB/src/stm32f4xx_sdio.c ****        selected transfer mode (Refer to Step 8, 9 and 10).
 126:FWLIB/src/stm32f4xx_sdio.c ****                      
 127:FWLIB/src/stm32f4xx_sdio.c ****    (#) Send the selected Write command (refer to step 11).
 128:FWLIB/src/stm32f4xx_sdio.c ****                     
 129:FWLIB/src/stm32f4xx_sdio.c ****    (#) Use the SDIO flags/interrupts to check the transfer status.
 130:FWLIB/src/stm32f4xx_sdio.c ****   
 131:FWLIB/src/stm32f4xx_sdio.c ****   
 132:FWLIB/src/stm32f4xx_sdio.c **** @endverbatim
 133:FWLIB/src/stm32f4xx_sdio.c ****   *
 134:FWLIB/src/stm32f4xx_sdio.c ****   *
 135:FWLIB/src/stm32f4xx_sdio.c ****   ******************************************************************************
 136:FWLIB/src/stm32f4xx_sdio.c ****   * @attention
 137:FWLIB/src/stm32f4xx_sdio.c ****   *
 138:FWLIB/src/stm32f4xx_sdio.c ****   * <h2><center>&copy; COPYRIGHT 2014 STMicroelectronics</center></h2>
 139:FWLIB/src/stm32f4xx_sdio.c ****   *
 140:FWLIB/src/stm32f4xx_sdio.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
 141:FWLIB/src/stm32f4xx_sdio.c ****   * You may not use this file except in compliance with the License.
 142:FWLIB/src/stm32f4xx_sdio.c ****   * You may obtain a copy of the License at:
 143:FWLIB/src/stm32f4xx_sdio.c ****   *
 144:FWLIB/src/stm32f4xx_sdio.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
 145:FWLIB/src/stm32f4xx_sdio.c ****   *
 146:FWLIB/src/stm32f4xx_sdio.c ****   * Unless required by applicable law or agreed to in writing, software 
 147:FWLIB/src/stm32f4xx_sdio.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
ARM GAS  /tmp/ccOIxr21.s 			page 4


 148:FWLIB/src/stm32f4xx_sdio.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 149:FWLIB/src/stm32f4xx_sdio.c ****   * See the License for the specific language governing permissions and
 150:FWLIB/src/stm32f4xx_sdio.c ****   * limitations under the License.
 151:FWLIB/src/stm32f4xx_sdio.c ****   *
 152:FWLIB/src/stm32f4xx_sdio.c ****   ******************************************************************************
 153:FWLIB/src/stm32f4xx_sdio.c ****   */
 154:FWLIB/src/stm32f4xx_sdio.c **** 
 155:FWLIB/src/stm32f4xx_sdio.c **** /* Includes ------------------------------------------------------------------*/
 156:FWLIB/src/stm32f4xx_sdio.c **** #include "stm32f4xx_sdio.h"
 157:FWLIB/src/stm32f4xx_sdio.c **** #include "stm32f4xx_rcc.h"
 158:FWLIB/src/stm32f4xx_sdio.c **** 
 159:FWLIB/src/stm32f4xx_sdio.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 160:FWLIB/src/stm32f4xx_sdio.c ****   * @{
 161:FWLIB/src/stm32f4xx_sdio.c ****   */
 162:FWLIB/src/stm32f4xx_sdio.c **** 
 163:FWLIB/src/stm32f4xx_sdio.c **** /** @defgroup SDIO 
 164:FWLIB/src/stm32f4xx_sdio.c ****   * @brief SDIO driver modules
 165:FWLIB/src/stm32f4xx_sdio.c ****   * @{
 166:FWLIB/src/stm32f4xx_sdio.c ****   */ 
 167:FWLIB/src/stm32f4xx_sdio.c **** 
 168:FWLIB/src/stm32f4xx_sdio.c **** /* Private typedef -----------------------------------------------------------*/
 169:FWLIB/src/stm32f4xx_sdio.c **** /* Private define ------------------------------------------------------------*/
 170:FWLIB/src/stm32f4xx_sdio.c **** 
 171:FWLIB/src/stm32f4xx_sdio.c **** /* ------------ SDIO registers bit address in the alias region ----------- */
 172:FWLIB/src/stm32f4xx_sdio.c **** #define SDIO_OFFSET                (SDIO_BASE - PERIPH_BASE)
 173:FWLIB/src/stm32f4xx_sdio.c **** 
 174:FWLIB/src/stm32f4xx_sdio.c **** /* --- CLKCR Register ---*/
 175:FWLIB/src/stm32f4xx_sdio.c **** /* Alias word address of CLKEN bit */
 176:FWLIB/src/stm32f4xx_sdio.c **** #define CLKCR_OFFSET              (SDIO_OFFSET + 0x04)
 177:FWLIB/src/stm32f4xx_sdio.c **** #define CLKEN_BitNumber           0x08
 178:FWLIB/src/stm32f4xx_sdio.c **** #define CLKCR_CLKEN_BB            (PERIPH_BB_BASE + (CLKCR_OFFSET * 32) + (CLKEN_BitNumber * 4))
 179:FWLIB/src/stm32f4xx_sdio.c **** 
 180:FWLIB/src/stm32f4xx_sdio.c **** /* --- CMD Register ---*/
 181:FWLIB/src/stm32f4xx_sdio.c **** /* Alias word address of SDIOSUSPEND bit */
 182:FWLIB/src/stm32f4xx_sdio.c **** #define CMD_OFFSET                (SDIO_OFFSET + 0x0C)
 183:FWLIB/src/stm32f4xx_sdio.c **** #define SDIOSUSPEND_BitNumber     0x0B
 184:FWLIB/src/stm32f4xx_sdio.c **** #define CMD_SDIOSUSPEND_BB        (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (SDIOSUSPEND_BitNumber * 4)
 185:FWLIB/src/stm32f4xx_sdio.c **** 
 186:FWLIB/src/stm32f4xx_sdio.c **** /* Alias word address of ENCMDCOMPL bit */
 187:FWLIB/src/stm32f4xx_sdio.c **** #define ENCMDCOMPL_BitNumber      0x0C
 188:FWLIB/src/stm32f4xx_sdio.c **** #define CMD_ENCMDCOMPL_BB         (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ENCMDCOMPL_BitNumber * 4))
 189:FWLIB/src/stm32f4xx_sdio.c **** 
 190:FWLIB/src/stm32f4xx_sdio.c **** /* Alias word address of NIEN bit */
 191:FWLIB/src/stm32f4xx_sdio.c **** #define NIEN_BitNumber            0x0D
 192:FWLIB/src/stm32f4xx_sdio.c **** #define CMD_NIEN_BB               (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (NIEN_BitNumber * 4))
 193:FWLIB/src/stm32f4xx_sdio.c **** 
 194:FWLIB/src/stm32f4xx_sdio.c **** /* Alias word address of ATACMD bit */
 195:FWLIB/src/stm32f4xx_sdio.c **** #define ATACMD_BitNumber          0x0E
 196:FWLIB/src/stm32f4xx_sdio.c **** #define CMD_ATACMD_BB             (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ATACMD_BitNumber * 4))
 197:FWLIB/src/stm32f4xx_sdio.c **** 
 198:FWLIB/src/stm32f4xx_sdio.c **** /* --- DCTRL Register ---*/
 199:FWLIB/src/stm32f4xx_sdio.c **** /* Alias word address of DMAEN bit */
 200:FWLIB/src/stm32f4xx_sdio.c **** #define DCTRL_OFFSET              (SDIO_OFFSET + 0x2C)
 201:FWLIB/src/stm32f4xx_sdio.c **** #define DMAEN_BitNumber           0x03
 202:FWLIB/src/stm32f4xx_sdio.c **** #define DCTRL_DMAEN_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (DMAEN_BitNumber * 4))
 203:FWLIB/src/stm32f4xx_sdio.c **** 
 204:FWLIB/src/stm32f4xx_sdio.c **** /* Alias word address of RWSTART bit */
ARM GAS  /tmp/ccOIxr21.s 			page 5


 205:FWLIB/src/stm32f4xx_sdio.c **** #define RWSTART_BitNumber         0x08
 206:FWLIB/src/stm32f4xx_sdio.c **** #define DCTRL_RWSTART_BB          (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTART_BitNumber * 4))
 207:FWLIB/src/stm32f4xx_sdio.c **** 
 208:FWLIB/src/stm32f4xx_sdio.c **** /* Alias word address of RWSTOP bit */
 209:FWLIB/src/stm32f4xx_sdio.c **** #define RWSTOP_BitNumber          0x09
 210:FWLIB/src/stm32f4xx_sdio.c **** #define DCTRL_RWSTOP_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTOP_BitNumber * 4))
 211:FWLIB/src/stm32f4xx_sdio.c **** 
 212:FWLIB/src/stm32f4xx_sdio.c **** /* Alias word address of RWMOD bit */
 213:FWLIB/src/stm32f4xx_sdio.c **** #define RWMOD_BitNumber           0x0A
 214:FWLIB/src/stm32f4xx_sdio.c **** #define DCTRL_RWMOD_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWMOD_BitNumber * 4))
 215:FWLIB/src/stm32f4xx_sdio.c **** 
 216:FWLIB/src/stm32f4xx_sdio.c **** /* Alias word address of SDIOEN bit */
 217:FWLIB/src/stm32f4xx_sdio.c **** #define SDIOEN_BitNumber          0x0B
 218:FWLIB/src/stm32f4xx_sdio.c **** #define DCTRL_SDIOEN_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (SDIOEN_BitNumber * 4))
 219:FWLIB/src/stm32f4xx_sdio.c **** 
 220:FWLIB/src/stm32f4xx_sdio.c **** /* ---------------------- SDIO registers bit mask ------------------------ */
 221:FWLIB/src/stm32f4xx_sdio.c **** /* --- CLKCR Register ---*/
 222:FWLIB/src/stm32f4xx_sdio.c **** /* CLKCR register clear mask */
 223:FWLIB/src/stm32f4xx_sdio.c **** #define CLKCR_CLEAR_MASK         ((uint32_t)0xFFFF8100) 
 224:FWLIB/src/stm32f4xx_sdio.c **** 
 225:FWLIB/src/stm32f4xx_sdio.c **** /* --- PWRCTRL Register ---*/
 226:FWLIB/src/stm32f4xx_sdio.c **** /* SDIO PWRCTRL Mask */
 227:FWLIB/src/stm32f4xx_sdio.c **** #define PWR_PWRCTRL_MASK         ((uint32_t)0xFFFFFFFC)
 228:FWLIB/src/stm32f4xx_sdio.c **** 
 229:FWLIB/src/stm32f4xx_sdio.c **** /* --- DCTRL Register ---*/
 230:FWLIB/src/stm32f4xx_sdio.c **** /* SDIO DCTRL Clear Mask */
 231:FWLIB/src/stm32f4xx_sdio.c **** #define DCTRL_CLEAR_MASK         ((uint32_t)0xFFFFFF08)
 232:FWLIB/src/stm32f4xx_sdio.c **** 
 233:FWLIB/src/stm32f4xx_sdio.c **** /* --- CMD Register ---*/
 234:FWLIB/src/stm32f4xx_sdio.c **** /* CMD Register clear mask */
 235:FWLIB/src/stm32f4xx_sdio.c **** #define CMD_CLEAR_MASK           ((uint32_t)0xFFFFF800)
 236:FWLIB/src/stm32f4xx_sdio.c **** 
 237:FWLIB/src/stm32f4xx_sdio.c **** /* SDIO RESP Registers Address */
 238:FWLIB/src/stm32f4xx_sdio.c **** #define SDIO_RESP_ADDR           ((uint32_t)(SDIO_BASE + 0x14))
 239:FWLIB/src/stm32f4xx_sdio.c **** 
 240:FWLIB/src/stm32f4xx_sdio.c **** /* Private macro -------------------------------------------------------------*/
 241:FWLIB/src/stm32f4xx_sdio.c **** /* Private variables ---------------------------------------------------------*/
 242:FWLIB/src/stm32f4xx_sdio.c **** /* Private function prototypes -----------------------------------------------*/
 243:FWLIB/src/stm32f4xx_sdio.c **** /* Private functions ---------------------------------------------------------*/
 244:FWLIB/src/stm32f4xx_sdio.c **** 
 245:FWLIB/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Private_Functions
 246:FWLIB/src/stm32f4xx_sdio.c ****   * @{
 247:FWLIB/src/stm32f4xx_sdio.c ****   */
 248:FWLIB/src/stm32f4xx_sdio.c **** 
 249:FWLIB/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group1 Initialization and Configuration functions
 250:FWLIB/src/stm32f4xx_sdio.c ****  *  @brief   Initialization and Configuration functions 
 251:FWLIB/src/stm32f4xx_sdio.c ****  *
 252:FWLIB/src/stm32f4xx_sdio.c **** @verbatim   
 253:FWLIB/src/stm32f4xx_sdio.c ****  ===============================================================================
 254:FWLIB/src/stm32f4xx_sdio.c ****               ##### Initialization and Configuration functions #####
 255:FWLIB/src/stm32f4xx_sdio.c ****  ===============================================================================
 256:FWLIB/src/stm32f4xx_sdio.c **** 
 257:FWLIB/src/stm32f4xx_sdio.c **** @endverbatim
 258:FWLIB/src/stm32f4xx_sdio.c ****   * @{
 259:FWLIB/src/stm32f4xx_sdio.c ****   */
 260:FWLIB/src/stm32f4xx_sdio.c **** 
 261:FWLIB/src/stm32f4xx_sdio.c **** /**
ARM GAS  /tmp/ccOIxr21.s 			page 6


 262:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Deinitializes the SDIO peripheral registers to their default reset values.
 263:FWLIB/src/stm32f4xx_sdio.c ****   * @param  None
 264:FWLIB/src/stm32f4xx_sdio.c ****   * @retval None
 265:FWLIB/src/stm32f4xx_sdio.c ****   */
 266:FWLIB/src/stm32f4xx_sdio.c **** void SDIO_DeInit(void)
 267:FWLIB/src/stm32f4xx_sdio.c **** {
  26              		.loc 1 267 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 08B5     		push	{r3, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 268:FWLIB/src/stm32f4xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, ENABLE);
  35              		.loc 1 268 0
  36 0002 0121     		movs	r1, #1
  37 0004 4FF40060 		mov	r0, #2048
  38 0008 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  39              	.LVL0:
 269:FWLIB/src/stm32f4xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, DISABLE);
  40              		.loc 1 269 0
  41 000c 0021     		movs	r1, #0
  42 000e 4FF40060 		mov	r0, #2048
  43 0012 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  44              	.LVL1:
  45 0016 08BD     		pop	{r3, pc}
  46              		.cfi_endproc
  47              	.LFE112:
  49              		.section	.text.SDIO_Init,"ax",%progbits
  50              		.align	1
  51              		.global	SDIO_Init
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  55              		.fpu softvfp
  57              	SDIO_Init:
  58              	.LFB113:
 270:FWLIB/src/stm32f4xx_sdio.c **** }
 271:FWLIB/src/stm32f4xx_sdio.c **** 
 272:FWLIB/src/stm32f4xx_sdio.c **** /**
 273:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO peripheral according to the specified 
 274:FWLIB/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_InitStruct.
 275:FWLIB/src/stm32f4xx_sdio.c ****   * @param  SDIO_InitStruct : pointer to a SDIO_InitTypeDef structure 
 276:FWLIB/src/stm32f4xx_sdio.c ****   *         that contains the configuration information for the SDIO peripheral.
 277:FWLIB/src/stm32f4xx_sdio.c ****   * @retval None
 278:FWLIB/src/stm32f4xx_sdio.c ****   */
 279:FWLIB/src/stm32f4xx_sdio.c **** void SDIO_Init(SDIO_InitTypeDef* SDIO_InitStruct)
 280:FWLIB/src/stm32f4xx_sdio.c **** {
  59              		.loc 1 280 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
  64              	.LVL2:
  65 0000 10B4     		push	{r4}
ARM GAS  /tmp/ccOIxr21.s 			page 7


  66              	.LCFI1:
  67              		.cfi_def_cfa_offset 4
  68              		.cfi_offset 4, -4
  69              	.LVL3:
 281:FWLIB/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 282:FWLIB/src/stm32f4xx_sdio.c ****     
 283:FWLIB/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 284:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_EDGE(SDIO_InitStruct->SDIO_ClockEdge));
 285:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_BYPASS(SDIO_InitStruct->SDIO_ClockBypass));
 286:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_POWER_SAVE(SDIO_InitStruct->SDIO_ClockPowerSave));
 287:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_BUS_WIDE(SDIO_InitStruct->SDIO_BusWide));
 288:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_HARDWARE_FLOW_CONTROL(SDIO_InitStruct->SDIO_HardwareFlowControl)); 
 289:FWLIB/src/stm32f4xx_sdio.c ****    
 290:FWLIB/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO CLKCR Configuration ------------------------*/  
 291:FWLIB/src/stm32f4xx_sdio.c ****   /* Get the SDIO CLKCR value */
 292:FWLIB/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->CLKCR;
  70              		.loc 1 292 0
  71 0002 0A49     		ldr	r1, .L5
  72 0004 4A68     		ldr	r2, [r1, #4]
  73              	.LVL4:
 293:FWLIB/src/stm32f4xx_sdio.c ****   
 294:FWLIB/src/stm32f4xx_sdio.c ****   /* Clear CLKDIV, PWRSAV, BYPASS, WIDBUS, NEGEDGE, HWFC_EN bits */
 295:FWLIB/src/stm32f4xx_sdio.c ****   tmpreg &= CLKCR_CLEAR_MASK;
  74              		.loc 1 295 0
  75 0006 22F4FD42 		bic	r2, r2, #32384
  76              	.LVL5:
  77 000a 22F07F02 		bic	r2, r2, #127
  78              	.LVL6:
 296:FWLIB/src/stm32f4xx_sdio.c ****   
 297:FWLIB/src/stm32f4xx_sdio.c ****   /* Set CLKDIV bits according to SDIO_ClockDiv value */
 298:FWLIB/src/stm32f4xx_sdio.c ****   /* Set PWRSAV bit according to SDIO_ClockPowerSave value */
 299:FWLIB/src/stm32f4xx_sdio.c ****   /* Set BYPASS bit according to SDIO_ClockBypass value */
 300:FWLIB/src/stm32f4xx_sdio.c ****   /* Set WIDBUS bits according to SDIO_BusWide value */
 301:FWLIB/src/stm32f4xx_sdio.c ****   /* Set NEGEDGE bits according to SDIO_ClockEdge value */
 302:FWLIB/src/stm32f4xx_sdio.c ****   /* Set HWFC_EN bits according to SDIO_HardwareFlowControl value */
 303:FWLIB/src/stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
  79              		.loc 1 303 0
  80 000e 037D     		ldrb	r3, [r0, #20]	@ zero_extendqisi2
  81 0010 8468     		ldr	r4, [r0, #8]
  82 0012 2343     		orrs	r3, r3, r4
 304:FWLIB/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
  83              		.loc 1 304 0
  84 0014 4468     		ldr	r4, [r0, #4]
 303:FWLIB/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
  85              		.loc 1 303 0
  86 0016 2343     		orrs	r3, r3, r4
  87              		.loc 1 304 0
  88 0018 C468     		ldr	r4, [r0, #12]
  89 001a 2343     		orrs	r3, r3, r4
 305:FWLIB/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockEdge | SDIO_InitStruct->SDIO_HardwareFlowControl); 
  90              		.loc 1 305 0
  91 001c 0468     		ldr	r4, [r0]
 304:FWLIB/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
  92              		.loc 1 304 0
  93 001e 2343     		orrs	r3, r3, r4
  94              		.loc 1 305 0
  95 0020 0069     		ldr	r0, [r0, #16]
ARM GAS  /tmp/ccOIxr21.s 			page 8


  96              	.LVL7:
  97 0022 0343     		orrs	r3, r3, r0
 303:FWLIB/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
  98              		.loc 1 303 0
  99 0024 1343     		orrs	r3, r3, r2
 100              	.LVL8:
 306:FWLIB/src/stm32f4xx_sdio.c ****   
 307:FWLIB/src/stm32f4xx_sdio.c ****   /* Write to SDIO CLKCR */
 308:FWLIB/src/stm32f4xx_sdio.c ****   SDIO->CLKCR = tmpreg;
 101              		.loc 1 308 0
 102 0026 4B60     		str	r3, [r1, #4]
 309:FWLIB/src/stm32f4xx_sdio.c **** }
 103              		.loc 1 309 0
 104 0028 10BC     		pop	{r4}
 105              	.LCFI2:
 106              		.cfi_restore 4
 107              		.cfi_def_cfa_offset 0
 108 002a 7047     		bx	lr
 109              	.L6:
 110              		.align	2
 111              	.L5:
 112 002c 002C0140 		.word	1073818624
 113              		.cfi_endproc
 114              	.LFE113:
 116              		.section	.text.SDIO_StructInit,"ax",%progbits
 117              		.align	1
 118              		.global	SDIO_StructInit
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu softvfp
 124              	SDIO_StructInit:
 125              	.LFB114:
 310:FWLIB/src/stm32f4xx_sdio.c **** 
 311:FWLIB/src/stm32f4xx_sdio.c **** /**
 312:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_InitStruct member with its default value.
 313:FWLIB/src/stm32f4xx_sdio.c ****   * @param  SDIO_InitStruct: pointer to an SDIO_InitTypeDef structure which 
 314:FWLIB/src/stm32f4xx_sdio.c ****   *         will be initialized.
 315:FWLIB/src/stm32f4xx_sdio.c ****   * @retval None
 316:FWLIB/src/stm32f4xx_sdio.c ****   */
 317:FWLIB/src/stm32f4xx_sdio.c **** void SDIO_StructInit(SDIO_InitTypeDef* SDIO_InitStruct)
 318:FWLIB/src/stm32f4xx_sdio.c **** {
 126              		.loc 1 318 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131              	.LVL9:
 319:FWLIB/src/stm32f4xx_sdio.c ****   /* SDIO_InitStruct members default value */
 320:FWLIB/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockDiv = 0x00;
 132              		.loc 1 320 0
 133 0000 0023     		movs	r3, #0
 134 0002 0375     		strb	r3, [r0, #20]
 321:FWLIB/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockEdge = SDIO_ClockEdge_Rising;
 135              		.loc 1 321 0
 136 0004 0360     		str	r3, [r0]
 322:FWLIB/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockBypass = SDIO_ClockBypass_Disable;
ARM GAS  /tmp/ccOIxr21.s 			page 9


 137              		.loc 1 322 0
 138 0006 4360     		str	r3, [r0, #4]
 323:FWLIB/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockPowerSave = SDIO_ClockPowerSave_Disable;
 139              		.loc 1 323 0
 140 0008 8360     		str	r3, [r0, #8]
 324:FWLIB/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_BusWide = SDIO_BusWide_1b;
 141              		.loc 1 324 0
 142 000a C360     		str	r3, [r0, #12]
 325:FWLIB/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_HardwareFlowControl = SDIO_HardwareFlowControl_Disable;
 143              		.loc 1 325 0
 144 000c 0361     		str	r3, [r0, #16]
 145 000e 7047     		bx	lr
 146              		.cfi_endproc
 147              	.LFE114:
 149              		.section	.text.SDIO_ClockCmd,"ax",%progbits
 150              		.align	1
 151              		.global	SDIO_ClockCmd
 152              		.syntax unified
 153              		.thumb
 154              		.thumb_func
 155              		.fpu softvfp
 157              	SDIO_ClockCmd:
 158              	.LFB115:
 326:FWLIB/src/stm32f4xx_sdio.c **** }
 327:FWLIB/src/stm32f4xx_sdio.c **** 
 328:FWLIB/src/stm32f4xx_sdio.c **** /**
 329:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO Clock.
 330:FWLIB/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the SDIO Clock. 
 331:FWLIB/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 332:FWLIB/src/stm32f4xx_sdio.c ****   * @retval None
 333:FWLIB/src/stm32f4xx_sdio.c ****   */
 334:FWLIB/src/stm32f4xx_sdio.c **** void SDIO_ClockCmd(FunctionalState NewState)
 335:FWLIB/src/stm32f4xx_sdio.c **** {
 159              		.loc 1 335 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 164              	.LVL10:
 336:FWLIB/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 337:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 338:FWLIB/src/stm32f4xx_sdio.c ****   
 339:FWLIB/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CLKCR_CLKEN_BB = (uint32_t)NewState;
 165              		.loc 1 339 0
 166 0000 014B     		ldr	r3, .L9
 167 0002 1860     		str	r0, [r3]
 168 0004 7047     		bx	lr
 169              	.L10:
 170 0006 00BF     		.align	2
 171              	.L9:
 172 0008 A0802542 		.word	1109754016
 173              		.cfi_endproc
 174              	.LFE115:
 176              		.section	.text.SDIO_SetPowerState,"ax",%progbits
 177              		.align	1
 178              		.global	SDIO_SetPowerState
 179              		.syntax unified
ARM GAS  /tmp/ccOIxr21.s 			page 10


 180              		.thumb
 181              		.thumb_func
 182              		.fpu softvfp
 184              	SDIO_SetPowerState:
 185              	.LFB116:
 340:FWLIB/src/stm32f4xx_sdio.c **** }
 341:FWLIB/src/stm32f4xx_sdio.c **** 
 342:FWLIB/src/stm32f4xx_sdio.c **** /**
 343:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Sets the power status of the controller.
 344:FWLIB/src/stm32f4xx_sdio.c ****   * @param  SDIO_PowerState: new state of the Power state. 
 345:FWLIB/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 346:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_PowerState_OFF: SDIO Power OFF
 347:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_PowerState_ON: SDIO Power ON
 348:FWLIB/src/stm32f4xx_sdio.c ****   * @retval None
 349:FWLIB/src/stm32f4xx_sdio.c ****   */
 350:FWLIB/src/stm32f4xx_sdio.c **** void SDIO_SetPowerState(uint32_t SDIO_PowerState)
 351:FWLIB/src/stm32f4xx_sdio.c **** {
 186              		.loc 1 351 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 191              	.LVL11:
 352:FWLIB/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 353:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_POWER_STATE(SDIO_PowerState));
 354:FWLIB/src/stm32f4xx_sdio.c ****   
 355:FWLIB/src/stm32f4xx_sdio.c ****   SDIO->POWER = SDIO_PowerState;
 192              		.loc 1 355 0
 193 0000 014B     		ldr	r3, .L12
 194 0002 1860     		str	r0, [r3]
 195 0004 7047     		bx	lr
 196              	.L13:
 197 0006 00BF     		.align	2
 198              	.L12:
 199 0008 002C0140 		.word	1073818624
 200              		.cfi_endproc
 201              	.LFE116:
 203              		.section	.text.SDIO_GetPowerState,"ax",%progbits
 204              		.align	1
 205              		.global	SDIO_GetPowerState
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu softvfp
 211              	SDIO_GetPowerState:
 212              	.LFB117:
 356:FWLIB/src/stm32f4xx_sdio.c **** }
 357:FWLIB/src/stm32f4xx_sdio.c **** 
 358:FWLIB/src/stm32f4xx_sdio.c **** /**
 359:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Gets the power status of the controller.
 360:FWLIB/src/stm32f4xx_sdio.c ****   * @param  None
 361:FWLIB/src/stm32f4xx_sdio.c ****   * @retval Power status of the controller. The returned value can be one of the 
 362:FWLIB/src/stm32f4xx_sdio.c ****   *         following values:
 363:FWLIB/src/stm32f4xx_sdio.c ****   *            - 0x00: Power OFF
 364:FWLIB/src/stm32f4xx_sdio.c ****   *            - 0x02: Power UP
 365:FWLIB/src/stm32f4xx_sdio.c ****   *            - 0x03: Power ON 
 366:FWLIB/src/stm32f4xx_sdio.c ****   */
ARM GAS  /tmp/ccOIxr21.s 			page 11


 367:FWLIB/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetPowerState(void)
 368:FWLIB/src/stm32f4xx_sdio.c **** {
 213              		.loc 1 368 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 369:FWLIB/src/stm32f4xx_sdio.c ****   return (SDIO->POWER & (~PWR_PWRCTRL_MASK));
 218              		.loc 1 369 0
 219 0000 024B     		ldr	r3, .L15
 220 0002 1868     		ldr	r0, [r3]
 370:FWLIB/src/stm32f4xx_sdio.c **** }
 221              		.loc 1 370 0
 222 0004 00F00300 		and	r0, r0, #3
 223 0008 7047     		bx	lr
 224              	.L16:
 225 000a 00BF     		.align	2
 226              	.L15:
 227 000c 002C0140 		.word	1073818624
 228              		.cfi_endproc
 229              	.LFE117:
 231              		.section	.text.SDIO_SendCommand,"ax",%progbits
 232              		.align	1
 233              		.global	SDIO_SendCommand
 234              		.syntax unified
 235              		.thumb
 236              		.thumb_func
 237              		.fpu softvfp
 239              	SDIO_SendCommand:
 240              	.LFB118:
 371:FWLIB/src/stm32f4xx_sdio.c **** 
 372:FWLIB/src/stm32f4xx_sdio.c **** /**
 373:FWLIB/src/stm32f4xx_sdio.c ****   * @}
 374:FWLIB/src/stm32f4xx_sdio.c ****   */
 375:FWLIB/src/stm32f4xx_sdio.c **** 
 376:FWLIB/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group2 Command path state machine (CPSM) management functions
 377:FWLIB/src/stm32f4xx_sdio.c ****  *  @brief   Command path state machine (CPSM) management functions 
 378:FWLIB/src/stm32f4xx_sdio.c ****  *
 379:FWLIB/src/stm32f4xx_sdio.c **** @verbatim   
 380:FWLIB/src/stm32f4xx_sdio.c ****  ===============================================================================
 381:FWLIB/src/stm32f4xx_sdio.c ****         ##### Command path state machine (CPSM) management functions #####
 382:FWLIB/src/stm32f4xx_sdio.c ****  ===============================================================================  
 383:FWLIB/src/stm32f4xx_sdio.c **** 
 384:FWLIB/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the Command path 
 385:FWLIB/src/stm32f4xx_sdio.c ****   state machine (CPSM).
 386:FWLIB/src/stm32f4xx_sdio.c **** 
 387:FWLIB/src/stm32f4xx_sdio.c **** @endverbatim
 388:FWLIB/src/stm32f4xx_sdio.c ****   * @{
 389:FWLIB/src/stm32f4xx_sdio.c ****   */
 390:FWLIB/src/stm32f4xx_sdio.c **** 
 391:FWLIB/src/stm32f4xx_sdio.c **** /**
 392:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO Command according to the specified 
 393:FWLIB/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_CmdInitStruct and send the command.
 394:FWLIB/src/stm32f4xx_sdio.c ****   * @param  SDIO_CmdInitStruct : pointer to a SDIO_CmdInitTypeDef 
 395:FWLIB/src/stm32f4xx_sdio.c ****   *         structure that contains the configuration information for the SDIO 
 396:FWLIB/src/stm32f4xx_sdio.c ****   *         command.
 397:FWLIB/src/stm32f4xx_sdio.c ****   * @retval None
ARM GAS  /tmp/ccOIxr21.s 			page 12


 398:FWLIB/src/stm32f4xx_sdio.c ****   */
 399:FWLIB/src/stm32f4xx_sdio.c **** void SDIO_SendCommand(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct)
 400:FWLIB/src/stm32f4xx_sdio.c **** {
 241              		.loc 1 400 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245              		@ link register save eliminated.
 246              	.LVL12:
 247 0000 10B4     		push	{r4}
 248              	.LCFI3:
 249              		.cfi_def_cfa_offset 4
 250              		.cfi_offset 4, -4
 251              	.LVL13:
 401:FWLIB/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 402:FWLIB/src/stm32f4xx_sdio.c ****   
 403:FWLIB/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 404:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CMD_INDEX(SDIO_CmdInitStruct->SDIO_CmdIndex));
 405:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_RESPONSE(SDIO_CmdInitStruct->SDIO_Response));
 406:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_WAIT(SDIO_CmdInitStruct->SDIO_Wait));
 407:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CPSM(SDIO_CmdInitStruct->SDIO_CPSM));
 408:FWLIB/src/stm32f4xx_sdio.c ****   
 409:FWLIB/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO ARG Configuration ------------------------*/
 410:FWLIB/src/stm32f4xx_sdio.c ****   /* Set the SDIO Argument value */
 411:FWLIB/src/stm32f4xx_sdio.c ****   SDIO->ARG = SDIO_CmdInitStruct->SDIO_Argument;
 252              		.loc 1 411 0
 253 0002 0368     		ldr	r3, [r0]
 254 0004 0849     		ldr	r1, .L19
 255 0006 8B60     		str	r3, [r1, #8]
 412:FWLIB/src/stm32f4xx_sdio.c ****   
 413:FWLIB/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO CMD Configuration ------------------------*/  
 414:FWLIB/src/stm32f4xx_sdio.c ****   /* Get the SDIO CMD value */
 415:FWLIB/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->CMD;
 256              		.loc 1 415 0
 257 0008 CB68     		ldr	r3, [r1, #12]
 258              	.LVL14:
 416:FWLIB/src/stm32f4xx_sdio.c ****   /* Clear CMDINDEX, WAITRESP, WAITINT, WAITPEND, CPSMEN bits */
 417:FWLIB/src/stm32f4xx_sdio.c ****   tmpreg &= CMD_CLEAR_MASK;
 259              		.loc 1 417 0
 260 000a 23F4FF63 		bic	r3, r3, #2040
 261              	.LVL15:
 262 000e 23F00703 		bic	r3, r3, #7
 263              	.LVL16:
 418:FWLIB/src/stm32f4xx_sdio.c ****   /* Set CMDINDEX bits according to SDIO_CmdIndex value */
 419:FWLIB/src/stm32f4xx_sdio.c ****   /* Set WAITRESP bits according to SDIO_Response value */
 420:FWLIB/src/stm32f4xx_sdio.c ****   /* Set WAITINT and WAITPEND bits according to SDIO_Wait value */
 421:FWLIB/src/stm32f4xx_sdio.c ****   /* Set CPSMEN bits according to SDIO_CPSM value */
 422:FWLIB/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
 264              		.loc 1 422 0
 265 0012 4268     		ldr	r2, [r0, #4]
 266 0014 8468     		ldr	r4, [r0, #8]
 267 0016 2243     		orrs	r2, r2, r4
 423:FWLIB/src/stm32f4xx_sdio.c ****            | SDIO_CmdInitStruct->SDIO_Wait | SDIO_CmdInitStruct->SDIO_CPSM;
 268              		.loc 1 423 0
 269 0018 C468     		ldr	r4, [r0, #12]
 270 001a 2243     		orrs	r2, r2, r4
 271 001c 0069     		ldr	r0, [r0, #16]
ARM GAS  /tmp/ccOIxr21.s 			page 13


 272              	.LVL17:
 273 001e 0243     		orrs	r2, r2, r0
 422:FWLIB/src/stm32f4xx_sdio.c ****            | SDIO_CmdInitStruct->SDIO_Wait | SDIO_CmdInitStruct->SDIO_CPSM;
 274              		.loc 1 422 0
 275 0020 1343     		orrs	r3, r3, r2
 276              	.LVL18:
 424:FWLIB/src/stm32f4xx_sdio.c ****   
 425:FWLIB/src/stm32f4xx_sdio.c ****   /* Write to SDIO CMD */
 426:FWLIB/src/stm32f4xx_sdio.c ****   SDIO->CMD = tmpreg;
 277              		.loc 1 426 0
 278 0022 CB60     		str	r3, [r1, #12]
 427:FWLIB/src/stm32f4xx_sdio.c **** }
 279              		.loc 1 427 0
 280 0024 10BC     		pop	{r4}
 281              	.LCFI4:
 282              		.cfi_restore 4
 283              		.cfi_def_cfa_offset 0
 284 0026 7047     		bx	lr
 285              	.L20:
 286              		.align	2
 287              	.L19:
 288 0028 002C0140 		.word	1073818624
 289              		.cfi_endproc
 290              	.LFE118:
 292              		.section	.text.SDIO_CmdStructInit,"ax",%progbits
 293              		.align	1
 294              		.global	SDIO_CmdStructInit
 295              		.syntax unified
 296              		.thumb
 297              		.thumb_func
 298              		.fpu softvfp
 300              	SDIO_CmdStructInit:
 301              	.LFB119:
 428:FWLIB/src/stm32f4xx_sdio.c **** 
 429:FWLIB/src/stm32f4xx_sdio.c **** /**
 430:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_CmdInitStruct member with its default value.
 431:FWLIB/src/stm32f4xx_sdio.c ****   * @param  SDIO_CmdInitStruct: pointer to an SDIO_CmdInitTypeDef 
 432:FWLIB/src/stm32f4xx_sdio.c ****   *         structure which will be initialized.
 433:FWLIB/src/stm32f4xx_sdio.c ****   * @retval None
 434:FWLIB/src/stm32f4xx_sdio.c ****   */
 435:FWLIB/src/stm32f4xx_sdio.c **** void SDIO_CmdStructInit(SDIO_CmdInitTypeDef* SDIO_CmdInitStruct)
 436:FWLIB/src/stm32f4xx_sdio.c **** {
 302              		.loc 1 436 0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 0
 305              		@ frame_needed = 0, uses_anonymous_args = 0
 306              		@ link register save eliminated.
 307              	.LVL19:
 437:FWLIB/src/stm32f4xx_sdio.c ****   /* SDIO_CmdInitStruct members default value */
 438:FWLIB/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Argument = 0x00;
 308              		.loc 1 438 0
 309 0000 0023     		movs	r3, #0
 310 0002 0360     		str	r3, [r0]
 439:FWLIB/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_CmdIndex = 0x00;
 311              		.loc 1 439 0
 312 0004 4360     		str	r3, [r0, #4]
 440:FWLIB/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Response = SDIO_Response_No;
ARM GAS  /tmp/ccOIxr21.s 			page 14


 313              		.loc 1 440 0
 314 0006 8360     		str	r3, [r0, #8]
 441:FWLIB/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Wait = SDIO_Wait_No;
 315              		.loc 1 441 0
 316 0008 C360     		str	r3, [r0, #12]
 442:FWLIB/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_CPSM = SDIO_CPSM_Disable;
 317              		.loc 1 442 0
 318 000a 0361     		str	r3, [r0, #16]
 319 000c 7047     		bx	lr
 320              		.cfi_endproc
 321              	.LFE119:
 323              		.section	.text.SDIO_GetCommandResponse,"ax",%progbits
 324              		.align	1
 325              		.global	SDIO_GetCommandResponse
 326              		.syntax unified
 327              		.thumb
 328              		.thumb_func
 329              		.fpu softvfp
 331              	SDIO_GetCommandResponse:
 332              	.LFB120:
 443:FWLIB/src/stm32f4xx_sdio.c **** }
 444:FWLIB/src/stm32f4xx_sdio.c **** 
 445:FWLIB/src/stm32f4xx_sdio.c **** /**
 446:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Returns command index of last command for which response received.
 447:FWLIB/src/stm32f4xx_sdio.c ****   * @param  None
 448:FWLIB/src/stm32f4xx_sdio.c ****   * @retval Returns the command index of the last command response received.
 449:FWLIB/src/stm32f4xx_sdio.c ****   */
 450:FWLIB/src/stm32f4xx_sdio.c **** uint8_t SDIO_GetCommandResponse(void)
 451:FWLIB/src/stm32f4xx_sdio.c **** {
 333              		.loc 1 451 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337              		@ link register save eliminated.
 452:FWLIB/src/stm32f4xx_sdio.c ****   return (uint8_t)(SDIO->RESPCMD);
 338              		.loc 1 452 0
 339 0000 014B     		ldr	r3, .L23
 340 0002 1869     		ldr	r0, [r3, #16]
 453:FWLIB/src/stm32f4xx_sdio.c **** }
 341              		.loc 1 453 0
 342 0004 C0B2     		uxtb	r0, r0
 343 0006 7047     		bx	lr
 344              	.L24:
 345              		.align	2
 346              	.L23:
 347 0008 002C0140 		.word	1073818624
 348              		.cfi_endproc
 349              	.LFE120:
 351              		.section	.text.SDIO_GetResponse,"ax",%progbits
 352              		.align	1
 353              		.global	SDIO_GetResponse
 354              		.syntax unified
 355              		.thumb
 356              		.thumb_func
 357              		.fpu softvfp
 359              	SDIO_GetResponse:
 360              	.LFB121:
ARM GAS  /tmp/ccOIxr21.s 			page 15


 454:FWLIB/src/stm32f4xx_sdio.c **** 
 455:FWLIB/src/stm32f4xx_sdio.c **** /**
 456:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Returns response received from the card for the last command.
 457:FWLIB/src/stm32f4xx_sdio.c ****   * @param  SDIO_RESP: Specifies the SDIO response register. 
 458:FWLIB/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 459:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP1: Response Register 1
 460:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP2: Response Register 2
 461:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP3: Response Register 3
 462:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP4: Response Register 4
 463:FWLIB/src/stm32f4xx_sdio.c ****   * @retval The Corresponding response register value.
 464:FWLIB/src/stm32f4xx_sdio.c ****   */
 465:FWLIB/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetResponse(uint32_t SDIO_RESP)
 466:FWLIB/src/stm32f4xx_sdio.c **** {
 361              		.loc 1 466 0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 8
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365              		@ link register save eliminated.
 366              	.LVL20:
 367 0000 82B0     		sub	sp, sp, #8
 368              	.LCFI5:
 369              		.cfi_def_cfa_offset 8
 467:FWLIB/src/stm32f4xx_sdio.c ****   __IO uint32_t tmp = 0;
 370              		.loc 1 467 0
 371 0002 0023     		movs	r3, #0
 372 0004 0193     		str	r3, [sp, #4]
 468:FWLIB/src/stm32f4xx_sdio.c **** 
 469:FWLIB/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 470:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_RESP(SDIO_RESP));
 471:FWLIB/src/stm32f4xx_sdio.c **** 
 472:FWLIB/src/stm32f4xx_sdio.c ****   tmp = SDIO_RESP_ADDR + SDIO_RESP;
 373              		.loc 1 472 0
 374 0006 034B     		ldr	r3, .L27
 375 0008 0344     		add	r3, r3, r0
 376 000a 0193     		str	r3, [sp, #4]
 473:FWLIB/src/stm32f4xx_sdio.c ****   
 474:FWLIB/src/stm32f4xx_sdio.c ****   return (*(__IO uint32_t *) tmp); 
 377              		.loc 1 474 0
 378 000c 019B     		ldr	r3, [sp, #4]
 379 000e 1868     		ldr	r0, [r3]
 380              	.LVL21:
 475:FWLIB/src/stm32f4xx_sdio.c **** }
 381              		.loc 1 475 0
 382 0010 02B0     		add	sp, sp, #8
 383              	.LCFI6:
 384              		.cfi_def_cfa_offset 0
 385              		@ sp needed
 386 0012 7047     		bx	lr
 387              	.L28:
 388              		.align	2
 389              	.L27:
 390 0014 142C0140 		.word	1073818644
 391              		.cfi_endproc
 392              	.LFE121:
 394              		.section	.text.SDIO_DataConfig,"ax",%progbits
 395              		.align	1
 396              		.global	SDIO_DataConfig
ARM GAS  /tmp/ccOIxr21.s 			page 16


 397              		.syntax unified
 398              		.thumb
 399              		.thumb_func
 400              		.fpu softvfp
 402              	SDIO_DataConfig:
 403              	.LFB122:
 476:FWLIB/src/stm32f4xx_sdio.c **** 
 477:FWLIB/src/stm32f4xx_sdio.c **** /**
 478:FWLIB/src/stm32f4xx_sdio.c ****   * @}
 479:FWLIB/src/stm32f4xx_sdio.c ****   */
 480:FWLIB/src/stm32f4xx_sdio.c **** 
 481:FWLIB/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group3 Data path state machine (DPSM) management functions
 482:FWLIB/src/stm32f4xx_sdio.c ****  *  @brief   Data path state machine (DPSM) management functions
 483:FWLIB/src/stm32f4xx_sdio.c ****  *
 484:FWLIB/src/stm32f4xx_sdio.c **** @verbatim   
 485:FWLIB/src/stm32f4xx_sdio.c ****  ===============================================================================
 486:FWLIB/src/stm32f4xx_sdio.c ****          ##### Data path state machine (DPSM) management functions #####
 487:FWLIB/src/stm32f4xx_sdio.c ****  ===============================================================================  
 488:FWLIB/src/stm32f4xx_sdio.c **** 
 489:FWLIB/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the Data path 
 490:FWLIB/src/stm32f4xx_sdio.c ****   state machine (DPSM).
 491:FWLIB/src/stm32f4xx_sdio.c **** 
 492:FWLIB/src/stm32f4xx_sdio.c **** @endverbatim
 493:FWLIB/src/stm32f4xx_sdio.c ****   * @{
 494:FWLIB/src/stm32f4xx_sdio.c ****   */
 495:FWLIB/src/stm32f4xx_sdio.c **** 
 496:FWLIB/src/stm32f4xx_sdio.c **** /**
 497:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO data path according to the specified 
 498:FWLIB/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_DataInitStruct.
 499:FWLIB/src/stm32f4xx_sdio.c ****   * @param  SDIO_DataInitStruct : pointer to a SDIO_DataInitTypeDef structure 
 500:FWLIB/src/stm32f4xx_sdio.c ****   *         that contains the configuration information for the SDIO command.
 501:FWLIB/src/stm32f4xx_sdio.c ****   * @retval None
 502:FWLIB/src/stm32f4xx_sdio.c ****   */
 503:FWLIB/src/stm32f4xx_sdio.c **** void SDIO_DataConfig(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 504:FWLIB/src/stm32f4xx_sdio.c **** {
 404              		.loc 1 504 0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 408              		@ link register save eliminated.
 409              	.LVL22:
 410 0000 10B4     		push	{r4}
 411              	.LCFI7:
 412              		.cfi_def_cfa_offset 4
 413              		.cfi_offset 4, -4
 414              	.LVL23:
 505:FWLIB/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 506:FWLIB/src/stm32f4xx_sdio.c ****   
 507:FWLIB/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 508:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_DATA_LENGTH(SDIO_DataInitStruct->SDIO_DataLength));
 509:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_BLOCK_SIZE(SDIO_DataInitStruct->SDIO_DataBlockSize));
 510:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_TRANSFER_DIR(SDIO_DataInitStruct->SDIO_TransferDir));
 511:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_TRANSFER_MODE(SDIO_DataInitStruct->SDIO_TransferMode));
 512:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_DPSM(SDIO_DataInitStruct->SDIO_DPSM));
 513:FWLIB/src/stm32f4xx_sdio.c **** 
 514:FWLIB/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DTIMER Configuration ---------------------*/
 515:FWLIB/src/stm32f4xx_sdio.c ****   /* Set the SDIO Data TimeOut value */
ARM GAS  /tmp/ccOIxr21.s 			page 17


 516:FWLIB/src/stm32f4xx_sdio.c ****   SDIO->DTIMER = SDIO_DataInitStruct->SDIO_DataTimeOut;
 415              		.loc 1 516 0
 416 0002 0368     		ldr	r3, [r0]
 417 0004 0849     		ldr	r1, .L31
 418 0006 4B62     		str	r3, [r1, #36]
 517:FWLIB/src/stm32f4xx_sdio.c **** 
 518:FWLIB/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DLEN Configuration -----------------------*/
 519:FWLIB/src/stm32f4xx_sdio.c ****   /* Set the SDIO DataLength value */
 520:FWLIB/src/stm32f4xx_sdio.c ****   SDIO->DLEN = SDIO_DataInitStruct->SDIO_DataLength;
 419              		.loc 1 520 0
 420 0008 4368     		ldr	r3, [r0, #4]
 421 000a 8B62     		str	r3, [r1, #40]
 521:FWLIB/src/stm32f4xx_sdio.c **** 
 522:FWLIB/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DCTRL Configuration ----------------------*/  
 523:FWLIB/src/stm32f4xx_sdio.c ****   /* Get the SDIO DCTRL value */
 524:FWLIB/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->DCTRL;
 422              		.loc 1 524 0
 423 000c CA6A     		ldr	r2, [r1, #44]
 424              	.LVL24:
 525:FWLIB/src/stm32f4xx_sdio.c ****   /* Clear DEN, DTMODE, DTDIR and DBCKSIZE bits */
 526:FWLIB/src/stm32f4xx_sdio.c ****   tmpreg &= DCTRL_CLEAR_MASK;
 425              		.loc 1 526 0
 426 000e 22F0F702 		bic	r2, r2, #247
 427              	.LVL25:
 527:FWLIB/src/stm32f4xx_sdio.c ****   /* Set DEN bit according to SDIO_DPSM value */
 528:FWLIB/src/stm32f4xx_sdio.c ****   /* Set DTMODE bit according to SDIO_TransferMode value */
 529:FWLIB/src/stm32f4xx_sdio.c ****   /* Set DTDIR bit according to SDIO_TransferDir value */
 530:FWLIB/src/stm32f4xx_sdio.c ****   /* Set DBCKSIZE bits according to SDIO_DataBlockSize value */
 531:FWLIB/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferD
 428              		.loc 1 531 0
 429 0012 8368     		ldr	r3, [r0, #8]
 430 0014 C468     		ldr	r4, [r0, #12]
 431 0016 2343     		orrs	r3, r3, r4
 532:FWLIB/src/stm32f4xx_sdio.c ****            | SDIO_DataInitStruct->SDIO_TransferMode | SDIO_DataInitStruct->SDIO_DPSM;
 432              		.loc 1 532 0
 433 0018 0469     		ldr	r4, [r0, #16]
 434 001a 2343     		orrs	r3, r3, r4
 435 001c 4069     		ldr	r0, [r0, #20]
 436              	.LVL26:
 437 001e 0343     		orrs	r3, r3, r0
 531:FWLIB/src/stm32f4xx_sdio.c ****            | SDIO_DataInitStruct->SDIO_TransferMode | SDIO_DataInitStruct->SDIO_DPSM;
 438              		.loc 1 531 0
 439 0020 1343     		orrs	r3, r3, r2
 440              	.LVL27:
 533:FWLIB/src/stm32f4xx_sdio.c **** 
 534:FWLIB/src/stm32f4xx_sdio.c ****   /* Write to SDIO DCTRL */
 535:FWLIB/src/stm32f4xx_sdio.c ****   SDIO->DCTRL = tmpreg;
 441              		.loc 1 535 0
 442 0022 CB62     		str	r3, [r1, #44]
 536:FWLIB/src/stm32f4xx_sdio.c **** }
 443              		.loc 1 536 0
 444 0024 10BC     		pop	{r4}
 445              	.LCFI8:
 446              		.cfi_restore 4
 447              		.cfi_def_cfa_offset 0
 448 0026 7047     		bx	lr
 449              	.L32:
ARM GAS  /tmp/ccOIxr21.s 			page 18


 450              		.align	2
 451              	.L31:
 452 0028 002C0140 		.word	1073818624
 453              		.cfi_endproc
 454              	.LFE122:
 456              		.section	.text.SDIO_DataStructInit,"ax",%progbits
 457              		.align	1
 458              		.global	SDIO_DataStructInit
 459              		.syntax unified
 460              		.thumb
 461              		.thumb_func
 462              		.fpu softvfp
 464              	SDIO_DataStructInit:
 465              	.LFB123:
 537:FWLIB/src/stm32f4xx_sdio.c **** 
 538:FWLIB/src/stm32f4xx_sdio.c **** /**
 539:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_DataInitStruct member with its default value.
 540:FWLIB/src/stm32f4xx_sdio.c ****   * @param  SDIO_DataInitStruct: pointer to an SDIO_DataInitTypeDef structure 
 541:FWLIB/src/stm32f4xx_sdio.c ****   *         which will be initialized.
 542:FWLIB/src/stm32f4xx_sdio.c ****   * @retval None
 543:FWLIB/src/stm32f4xx_sdio.c ****   */
 544:FWLIB/src/stm32f4xx_sdio.c **** void SDIO_DataStructInit(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 545:FWLIB/src/stm32f4xx_sdio.c **** {
 466              		.loc 1 545 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              		@ link register save eliminated.
 471              	.LVL28:
 546:FWLIB/src/stm32f4xx_sdio.c ****   /* SDIO_DataInitStruct members default value */
 547:FWLIB/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataTimeOut = 0xFFFFFFFF;
 472              		.loc 1 547 0
 473 0000 4FF0FF33 		mov	r3, #-1
 474 0004 0360     		str	r3, [r0]
 548:FWLIB/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataLength = 0x00;
 475              		.loc 1 548 0
 476 0006 0023     		movs	r3, #0
 477 0008 4360     		str	r3, [r0, #4]
 549:FWLIB/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataBlockSize = SDIO_DataBlockSize_1b;
 478              		.loc 1 549 0
 479 000a 8360     		str	r3, [r0, #8]
 550:FWLIB/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferDir = SDIO_TransferDir_ToCard;
 480              		.loc 1 550 0
 481 000c C360     		str	r3, [r0, #12]
 551:FWLIB/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferMode = SDIO_TransferMode_Block;  
 482              		.loc 1 551 0
 483 000e 0361     		str	r3, [r0, #16]
 552:FWLIB/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DPSM = SDIO_DPSM_Disable;
 484              		.loc 1 552 0
 485 0010 4361     		str	r3, [r0, #20]
 486 0012 7047     		bx	lr
 487              		.cfi_endproc
 488              	.LFE123:
 490              		.section	.text.SDIO_GetDataCounter,"ax",%progbits
 491              		.align	1
 492              		.global	SDIO_GetDataCounter
 493              		.syntax unified
ARM GAS  /tmp/ccOIxr21.s 			page 19


 494              		.thumb
 495              		.thumb_func
 496              		.fpu softvfp
 498              	SDIO_GetDataCounter:
 499              	.LFB124:
 553:FWLIB/src/stm32f4xx_sdio.c **** }
 554:FWLIB/src/stm32f4xx_sdio.c **** 
 555:FWLIB/src/stm32f4xx_sdio.c **** /**
 556:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Returns number of remaining data bytes to be transferred.
 557:FWLIB/src/stm32f4xx_sdio.c ****   * @param  None
 558:FWLIB/src/stm32f4xx_sdio.c ****   * @retval Number of remaining data bytes to be transferred
 559:FWLIB/src/stm32f4xx_sdio.c ****   */
 560:FWLIB/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetDataCounter(void)
 561:FWLIB/src/stm32f4xx_sdio.c **** { 
 500              		.loc 1 561 0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 0, uses_anonymous_args = 0
 504              		@ link register save eliminated.
 562:FWLIB/src/stm32f4xx_sdio.c ****   return SDIO->DCOUNT;
 505              		.loc 1 562 0
 506 0000 014B     		ldr	r3, .L35
 507 0002 186B     		ldr	r0, [r3, #48]
 563:FWLIB/src/stm32f4xx_sdio.c **** }
 508              		.loc 1 563 0
 509 0004 7047     		bx	lr
 510              	.L36:
 511 0006 00BF     		.align	2
 512              	.L35:
 513 0008 002C0140 		.word	1073818624
 514              		.cfi_endproc
 515              	.LFE124:
 517              		.section	.text.SDIO_ReadData,"ax",%progbits
 518              		.align	1
 519              		.global	SDIO_ReadData
 520              		.syntax unified
 521              		.thumb
 522              		.thumb_func
 523              		.fpu softvfp
 525              	SDIO_ReadData:
 526              	.LFB125:
 564:FWLIB/src/stm32f4xx_sdio.c **** 
 565:FWLIB/src/stm32f4xx_sdio.c **** /**
 566:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Read one data word from Rx FIFO.
 567:FWLIB/src/stm32f4xx_sdio.c ****   * @param  None
 568:FWLIB/src/stm32f4xx_sdio.c ****   * @retval Data received
 569:FWLIB/src/stm32f4xx_sdio.c ****   */
 570:FWLIB/src/stm32f4xx_sdio.c **** uint32_t SDIO_ReadData(void)
 571:FWLIB/src/stm32f4xx_sdio.c **** { 
 527              		.loc 1 571 0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 0
 530              		@ frame_needed = 0, uses_anonymous_args = 0
 531              		@ link register save eliminated.
 572:FWLIB/src/stm32f4xx_sdio.c ****   return SDIO->FIFO;
 532              		.loc 1 572 0
 533 0000 014B     		ldr	r3, .L38
ARM GAS  /tmp/ccOIxr21.s 			page 20


 534 0002 D3F88000 		ldr	r0, [r3, #128]
 573:FWLIB/src/stm32f4xx_sdio.c **** }
 535              		.loc 1 573 0
 536 0006 7047     		bx	lr
 537              	.L39:
 538              		.align	2
 539              	.L38:
 540 0008 002C0140 		.word	1073818624
 541              		.cfi_endproc
 542              	.LFE125:
 544              		.section	.text.SDIO_WriteData,"ax",%progbits
 545              		.align	1
 546              		.global	SDIO_WriteData
 547              		.syntax unified
 548              		.thumb
 549              		.thumb_func
 550              		.fpu softvfp
 552              	SDIO_WriteData:
 553              	.LFB126:
 574:FWLIB/src/stm32f4xx_sdio.c **** 
 575:FWLIB/src/stm32f4xx_sdio.c **** /**
 576:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Write one data word to Tx FIFO.
 577:FWLIB/src/stm32f4xx_sdio.c ****   * @param  Data: 32-bit data word to write.
 578:FWLIB/src/stm32f4xx_sdio.c ****   * @retval None
 579:FWLIB/src/stm32f4xx_sdio.c ****   */
 580:FWLIB/src/stm32f4xx_sdio.c **** void SDIO_WriteData(uint32_t Data)
 581:FWLIB/src/stm32f4xx_sdio.c **** { 
 554              		.loc 1 581 0
 555              		.cfi_startproc
 556              		@ args = 0, pretend = 0, frame = 0
 557              		@ frame_needed = 0, uses_anonymous_args = 0
 558              		@ link register save eliminated.
 559              	.LVL29:
 582:FWLIB/src/stm32f4xx_sdio.c ****   SDIO->FIFO = Data;
 560              		.loc 1 582 0
 561 0000 014B     		ldr	r3, .L41
 562 0002 C3F88000 		str	r0, [r3, #128]
 563 0006 7047     		bx	lr
 564              	.L42:
 565              		.align	2
 566              	.L41:
 567 0008 002C0140 		.word	1073818624
 568              		.cfi_endproc
 569              	.LFE126:
 571              		.section	.text.SDIO_GetFIFOCount,"ax",%progbits
 572              		.align	1
 573              		.global	SDIO_GetFIFOCount
 574              		.syntax unified
 575              		.thumb
 576              		.thumb_func
 577              		.fpu softvfp
 579              	SDIO_GetFIFOCount:
 580              	.LFB127:
 583:FWLIB/src/stm32f4xx_sdio.c **** }
 584:FWLIB/src/stm32f4xx_sdio.c **** 
 585:FWLIB/src/stm32f4xx_sdio.c **** /**
 586:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Returns the number of words left to be written to or read from FIFO.	
ARM GAS  /tmp/ccOIxr21.s 			page 21


 587:FWLIB/src/stm32f4xx_sdio.c ****   * @param  None
 588:FWLIB/src/stm32f4xx_sdio.c ****   * @retval Remaining number of words.
 589:FWLIB/src/stm32f4xx_sdio.c ****   */
 590:FWLIB/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetFIFOCount(void)
 591:FWLIB/src/stm32f4xx_sdio.c **** { 
 581              		.loc 1 591 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 592:FWLIB/src/stm32f4xx_sdio.c ****   return SDIO->FIFOCNT;
 586              		.loc 1 592 0
 587 0000 014B     		ldr	r3, .L44
 588 0002 986C     		ldr	r0, [r3, #72]
 593:FWLIB/src/stm32f4xx_sdio.c **** }
 589              		.loc 1 593 0
 590 0004 7047     		bx	lr
 591              	.L45:
 592 0006 00BF     		.align	2
 593              	.L44:
 594 0008 002C0140 		.word	1073818624
 595              		.cfi_endproc
 596              	.LFE127:
 598              		.section	.text.SDIO_StartSDIOReadWait,"ax",%progbits
 599              		.align	1
 600              		.global	SDIO_StartSDIOReadWait
 601              		.syntax unified
 602              		.thumb
 603              		.thumb_func
 604              		.fpu softvfp
 606              	SDIO_StartSDIOReadWait:
 607              	.LFB128:
 594:FWLIB/src/stm32f4xx_sdio.c **** 
 595:FWLIB/src/stm32f4xx_sdio.c **** /**
 596:FWLIB/src/stm32f4xx_sdio.c ****   * @}
 597:FWLIB/src/stm32f4xx_sdio.c ****   */
 598:FWLIB/src/stm32f4xx_sdio.c **** 
 599:FWLIB/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group4 SDIO IO Cards mode management functions
 600:FWLIB/src/stm32f4xx_sdio.c ****  *  @brief   SDIO IO Cards mode management functions
 601:FWLIB/src/stm32f4xx_sdio.c ****  *
 602:FWLIB/src/stm32f4xx_sdio.c **** @verbatim   
 603:FWLIB/src/stm32f4xx_sdio.c ****  ===============================================================================
 604:FWLIB/src/stm32f4xx_sdio.c ****                ##### SDIO IO Cards mode management functions #####
 605:FWLIB/src/stm32f4xx_sdio.c ****  ===============================================================================  
 606:FWLIB/src/stm32f4xx_sdio.c **** 
 607:FWLIB/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the SDIO IO Cards.
 608:FWLIB/src/stm32f4xx_sdio.c **** 
 609:FWLIB/src/stm32f4xx_sdio.c **** @endverbatim
 610:FWLIB/src/stm32f4xx_sdio.c ****   * @{
 611:FWLIB/src/stm32f4xx_sdio.c ****   */
 612:FWLIB/src/stm32f4xx_sdio.c **** 
 613:FWLIB/src/stm32f4xx_sdio.c **** /**
 614:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Starts the SD I/O Read Wait operation.	
 615:FWLIB/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the Start SDIO Read Wait operation. 
 616:FWLIB/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 617:FWLIB/src/stm32f4xx_sdio.c ****   * @retval None
 618:FWLIB/src/stm32f4xx_sdio.c ****   */
ARM GAS  /tmp/ccOIxr21.s 			page 22


 619:FWLIB/src/stm32f4xx_sdio.c **** void SDIO_StartSDIOReadWait(FunctionalState NewState)
 620:FWLIB/src/stm32f4xx_sdio.c **** { 
 608              		.loc 1 620 0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 0
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612              		@ link register save eliminated.
 613              	.LVL30:
 621:FWLIB/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 622:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 623:FWLIB/src/stm32f4xx_sdio.c ****   
 624:FWLIB/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTART_BB = (uint32_t) NewState;
 614              		.loc 1 624 0
 615 0000 014B     		ldr	r3, .L47
 616 0002 1860     		str	r0, [r3]
 617 0004 7047     		bx	lr
 618              	.L48:
 619 0006 00BF     		.align	2
 620              	.L47:
 621 0008 A0852542 		.word	1109755296
 622              		.cfi_endproc
 623              	.LFE128:
 625              		.section	.text.SDIO_StopSDIOReadWait,"ax",%progbits
 626              		.align	1
 627              		.global	SDIO_StopSDIOReadWait
 628              		.syntax unified
 629              		.thumb
 630              		.thumb_func
 631              		.fpu softvfp
 633              	SDIO_StopSDIOReadWait:
 634              	.LFB129:
 625:FWLIB/src/stm32f4xx_sdio.c **** }
 626:FWLIB/src/stm32f4xx_sdio.c **** 
 627:FWLIB/src/stm32f4xx_sdio.c **** /**
 628:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Stops the SD I/O Read Wait operation.	
 629:FWLIB/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the Stop SDIO Read Wait operation. 
 630:FWLIB/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 631:FWLIB/src/stm32f4xx_sdio.c ****   * @retval None
 632:FWLIB/src/stm32f4xx_sdio.c ****   */
 633:FWLIB/src/stm32f4xx_sdio.c **** void SDIO_StopSDIOReadWait(FunctionalState NewState)
 634:FWLIB/src/stm32f4xx_sdio.c **** { 
 635              		.loc 1 634 0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 0
 638              		@ frame_needed = 0, uses_anonymous_args = 0
 639              		@ link register save eliminated.
 640              	.LVL31:
 635:FWLIB/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 636:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 637:FWLIB/src/stm32f4xx_sdio.c ****   
 638:FWLIB/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTOP_BB = (uint32_t) NewState;
 641              		.loc 1 638 0
 642 0000 014B     		ldr	r3, .L50
 643 0002 1860     		str	r0, [r3]
 644 0004 7047     		bx	lr
 645              	.L51:
 646 0006 00BF     		.align	2
ARM GAS  /tmp/ccOIxr21.s 			page 23


 647              	.L50:
 648 0008 A4852542 		.word	1109755300
 649              		.cfi_endproc
 650              	.LFE129:
 652              		.section	.text.SDIO_SetSDIOReadWaitMode,"ax",%progbits
 653              		.align	1
 654              		.global	SDIO_SetSDIOReadWaitMode
 655              		.syntax unified
 656              		.thumb
 657              		.thumb_func
 658              		.fpu softvfp
 660              	SDIO_SetSDIOReadWaitMode:
 661              	.LFB130:
 639:FWLIB/src/stm32f4xx_sdio.c **** }
 640:FWLIB/src/stm32f4xx_sdio.c **** 
 641:FWLIB/src/stm32f4xx_sdio.c **** /**
 642:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Sets one of the two options of inserting read wait interval.
 643:FWLIB/src/stm32f4xx_sdio.c ****   * @param  SDIO_ReadWaitMode: SD I/O Read Wait operation mode.
 644:FWLIB/src/stm32f4xx_sdio.c ****   *          This parameter can be:
 645:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_ReadWaitMode_CLK: Read Wait control by stopping SDIOCLK
 646:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_ReadWaitMode_DATA2: Read Wait control using SDIO_DATA2
 647:FWLIB/src/stm32f4xx_sdio.c ****   * @retval None
 648:FWLIB/src/stm32f4xx_sdio.c ****   */
 649:FWLIB/src/stm32f4xx_sdio.c **** void SDIO_SetSDIOReadWaitMode(uint32_t SDIO_ReadWaitMode)
 650:FWLIB/src/stm32f4xx_sdio.c **** {
 662              		.loc 1 650 0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 0
 665              		@ frame_needed = 0, uses_anonymous_args = 0
 666              		@ link register save eliminated.
 667              	.LVL32:
 651:FWLIB/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 652:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_READWAIT_MODE(SDIO_ReadWaitMode));
 653:FWLIB/src/stm32f4xx_sdio.c ****   
 654:FWLIB/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWMOD_BB = SDIO_ReadWaitMode;
 668              		.loc 1 654 0
 669 0000 014B     		ldr	r3, .L53
 670 0002 1860     		str	r0, [r3]
 671 0004 7047     		bx	lr
 672              	.L54:
 673 0006 00BF     		.align	2
 674              	.L53:
 675 0008 A8852542 		.word	1109755304
 676              		.cfi_endproc
 677              	.LFE130:
 679              		.section	.text.SDIO_SetSDIOOperation,"ax",%progbits
 680              		.align	1
 681              		.global	SDIO_SetSDIOOperation
 682              		.syntax unified
 683              		.thumb
 684              		.thumb_func
 685              		.fpu softvfp
 687              	SDIO_SetSDIOOperation:
 688              	.LFB131:
 655:FWLIB/src/stm32f4xx_sdio.c **** }
 656:FWLIB/src/stm32f4xx_sdio.c **** 
 657:FWLIB/src/stm32f4xx_sdio.c **** /**
ARM GAS  /tmp/ccOIxr21.s 			page 24


 658:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SD I/O Mode Operation.
 659:FWLIB/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of SDIO specific operation. 
 660:FWLIB/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 661:FWLIB/src/stm32f4xx_sdio.c ****   * @retval None
 662:FWLIB/src/stm32f4xx_sdio.c ****   */
 663:FWLIB/src/stm32f4xx_sdio.c **** void SDIO_SetSDIOOperation(FunctionalState NewState)
 664:FWLIB/src/stm32f4xx_sdio.c **** { 
 689              		.loc 1 664 0
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 0
 692              		@ frame_needed = 0, uses_anonymous_args = 0
 693              		@ link register save eliminated.
 694              	.LVL33:
 665:FWLIB/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 666:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 667:FWLIB/src/stm32f4xx_sdio.c ****   
 668:FWLIB/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_SDIOEN_BB = (uint32_t)NewState;
 695              		.loc 1 668 0
 696 0000 014B     		ldr	r3, .L56
 697 0002 1860     		str	r0, [r3]
 698 0004 7047     		bx	lr
 699              	.L57:
 700 0006 00BF     		.align	2
 701              	.L56:
 702 0008 AC852542 		.word	1109755308
 703              		.cfi_endproc
 704              	.LFE131:
 706              		.section	.text.SDIO_SendSDIOSuspendCmd,"ax",%progbits
 707              		.align	1
 708              		.global	SDIO_SendSDIOSuspendCmd
 709              		.syntax unified
 710              		.thumb
 711              		.thumb_func
 712              		.fpu softvfp
 714              	SDIO_SendSDIOSuspendCmd:
 715              	.LFB132:
 669:FWLIB/src/stm32f4xx_sdio.c **** }
 670:FWLIB/src/stm32f4xx_sdio.c **** 
 671:FWLIB/src/stm32f4xx_sdio.c **** /**
 672:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SD I/O Mode suspend command sending.
 673:FWLIB/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the SD I/O Mode suspend command.
 674:FWLIB/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 675:FWLIB/src/stm32f4xx_sdio.c ****   * @retval None
 676:FWLIB/src/stm32f4xx_sdio.c ****   */
 677:FWLIB/src/stm32f4xx_sdio.c **** void SDIO_SendSDIOSuspendCmd(FunctionalState NewState)
 678:FWLIB/src/stm32f4xx_sdio.c **** { 
 716              		.loc 1 678 0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 0
 719              		@ frame_needed = 0, uses_anonymous_args = 0
 720              		@ link register save eliminated.
 721              	.LVL34:
 679:FWLIB/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 680:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 681:FWLIB/src/stm32f4xx_sdio.c ****   
 682:FWLIB/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_SDIOSUSPEND_BB = (uint32_t)NewState;
 722              		.loc 1 682 0
ARM GAS  /tmp/ccOIxr21.s 			page 25


 723 0000 014B     		ldr	r3, .L59
 724 0002 1860     		str	r0, [r3]
 725 0004 7047     		bx	lr
 726              	.L60:
 727 0006 00BF     		.align	2
 728              	.L59:
 729 0008 AC812542 		.word	1109754284
 730              		.cfi_endproc
 731              	.LFE132:
 733              		.section	.text.SDIO_CommandCompletionCmd,"ax",%progbits
 734              		.align	1
 735              		.global	SDIO_CommandCompletionCmd
 736              		.syntax unified
 737              		.thumb
 738              		.thumb_func
 739              		.fpu softvfp
 741              	SDIO_CommandCompletionCmd:
 742              	.LFB133:
 683:FWLIB/src/stm32f4xx_sdio.c **** }
 684:FWLIB/src/stm32f4xx_sdio.c **** 
 685:FWLIB/src/stm32f4xx_sdio.c **** /**
 686:FWLIB/src/stm32f4xx_sdio.c ****   * @}
 687:FWLIB/src/stm32f4xx_sdio.c ****   */
 688:FWLIB/src/stm32f4xx_sdio.c **** 
 689:FWLIB/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group5 CE-ATA mode management functions
 690:FWLIB/src/stm32f4xx_sdio.c ****  *  @brief   CE-ATA mode management functions
 691:FWLIB/src/stm32f4xx_sdio.c ****  *
 692:FWLIB/src/stm32f4xx_sdio.c **** @verbatim   
 693:FWLIB/src/stm32f4xx_sdio.c ****  ===============================================================================
 694:FWLIB/src/stm32f4xx_sdio.c ****                   ##### CE-ATA mode management functions #####
 695:FWLIB/src/stm32f4xx_sdio.c ****  ===============================================================================  
 696:FWLIB/src/stm32f4xx_sdio.c **** 
 697:FWLIB/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the CE-ATA card.
 698:FWLIB/src/stm32f4xx_sdio.c **** 
 699:FWLIB/src/stm32f4xx_sdio.c **** @endverbatim
 700:FWLIB/src/stm32f4xx_sdio.c ****   * @{
 701:FWLIB/src/stm32f4xx_sdio.c ****   */
 702:FWLIB/src/stm32f4xx_sdio.c **** 
 703:FWLIB/src/stm32f4xx_sdio.c **** /**
 704:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the command completion signal.
 705:FWLIB/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of command completion signal. 
 706:FWLIB/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 707:FWLIB/src/stm32f4xx_sdio.c ****   * @retval None
 708:FWLIB/src/stm32f4xx_sdio.c ****   */
 709:FWLIB/src/stm32f4xx_sdio.c **** void SDIO_CommandCompletionCmd(FunctionalState NewState)
 710:FWLIB/src/stm32f4xx_sdio.c **** { 
 743              		.loc 1 710 0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 0
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 747              		@ link register save eliminated.
 748              	.LVL35:
 711:FWLIB/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 712:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 713:FWLIB/src/stm32f4xx_sdio.c ****   
 714:FWLIB/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_ENCMDCOMPL_BB = (uint32_t)NewState;
 749              		.loc 1 714 0
ARM GAS  /tmp/ccOIxr21.s 			page 26


 750 0000 014B     		ldr	r3, .L62
 751 0002 1860     		str	r0, [r3]
 752 0004 7047     		bx	lr
 753              	.L63:
 754 0006 00BF     		.align	2
 755              	.L62:
 756 0008 B0812542 		.word	1109754288
 757              		.cfi_endproc
 758              	.LFE133:
 760              		.section	.text.SDIO_CEATAITCmd,"ax",%progbits
 761              		.align	1
 762              		.global	SDIO_CEATAITCmd
 763              		.syntax unified
 764              		.thumb
 765              		.thumb_func
 766              		.fpu softvfp
 768              	SDIO_CEATAITCmd:
 769              	.LFB134:
 715:FWLIB/src/stm32f4xx_sdio.c **** }
 716:FWLIB/src/stm32f4xx_sdio.c **** 
 717:FWLIB/src/stm32f4xx_sdio.c **** /**
 718:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the CE-ATA interrupt.
 719:FWLIB/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of CE-ATA interrupt. 
 720:FWLIB/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 721:FWLIB/src/stm32f4xx_sdio.c ****   * @retval None
 722:FWLIB/src/stm32f4xx_sdio.c ****   */
 723:FWLIB/src/stm32f4xx_sdio.c **** void SDIO_CEATAITCmd(FunctionalState NewState)
 724:FWLIB/src/stm32f4xx_sdio.c **** { 
 770              		.loc 1 724 0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              		@ link register save eliminated.
 775              	.LVL36:
 725:FWLIB/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 726:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 727:FWLIB/src/stm32f4xx_sdio.c ****   
 728:FWLIB/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_NIEN_BB = (uint32_t)((~((uint32_t)NewState)) & ((uint32_t)0x1));
 776              		.loc 1 728 0
 777 0000 80F00100 		eor	r0, r0, #1
 778              	.LVL37:
 779 0004 00F00100 		and	r0, r0, #1
 780 0008 014B     		ldr	r3, .L65
 781 000a 1860     		str	r0, [r3]
 782 000c 7047     		bx	lr
 783              	.L66:
 784 000e 00BF     		.align	2
 785              	.L65:
 786 0010 B4812542 		.word	1109754292
 787              		.cfi_endproc
 788              	.LFE134:
 790              		.section	.text.SDIO_SendCEATACmd,"ax",%progbits
 791              		.align	1
 792              		.global	SDIO_SendCEATACmd
 793              		.syntax unified
 794              		.thumb
 795              		.thumb_func
ARM GAS  /tmp/ccOIxr21.s 			page 27


 796              		.fpu softvfp
 798              	SDIO_SendCEATACmd:
 799              	.LFB135:
 729:FWLIB/src/stm32f4xx_sdio.c **** }
 730:FWLIB/src/stm32f4xx_sdio.c **** 
 731:FWLIB/src/stm32f4xx_sdio.c **** /**
 732:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Sends CE-ATA command (CMD61).
 733:FWLIB/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of CE-ATA command. 
 734:FWLIB/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 735:FWLIB/src/stm32f4xx_sdio.c ****   * @retval None
 736:FWLIB/src/stm32f4xx_sdio.c ****   */
 737:FWLIB/src/stm32f4xx_sdio.c **** void SDIO_SendCEATACmd(FunctionalState NewState)
 738:FWLIB/src/stm32f4xx_sdio.c **** { 
 800              		.loc 1 738 0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 804              		@ link register save eliminated.
 805              	.LVL38:
 739:FWLIB/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 740:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 741:FWLIB/src/stm32f4xx_sdio.c ****   
 742:FWLIB/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_ATACMD_BB = (uint32_t)NewState;
 806              		.loc 1 742 0
 807 0000 014B     		ldr	r3, .L68
 808 0002 1860     		str	r0, [r3]
 809 0004 7047     		bx	lr
 810              	.L69:
 811 0006 00BF     		.align	2
 812              	.L68:
 813 0008 B8812542 		.word	1109754296
 814              		.cfi_endproc
 815              	.LFE135:
 817              		.section	.text.SDIO_DMACmd,"ax",%progbits
 818              		.align	1
 819              		.global	SDIO_DMACmd
 820              		.syntax unified
 821              		.thumb
 822              		.thumb_func
 823              		.fpu softvfp
 825              	SDIO_DMACmd:
 826              	.LFB136:
 743:FWLIB/src/stm32f4xx_sdio.c **** }
 744:FWLIB/src/stm32f4xx_sdio.c **** 
 745:FWLIB/src/stm32f4xx_sdio.c **** /**
 746:FWLIB/src/stm32f4xx_sdio.c ****   * @}
 747:FWLIB/src/stm32f4xx_sdio.c ****   */
 748:FWLIB/src/stm32f4xx_sdio.c **** 
 749:FWLIB/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group6 DMA transfers management functions
 750:FWLIB/src/stm32f4xx_sdio.c ****  *  @brief   DMA transfers management functions
 751:FWLIB/src/stm32f4xx_sdio.c ****  *
 752:FWLIB/src/stm32f4xx_sdio.c **** @verbatim   
 753:FWLIB/src/stm32f4xx_sdio.c ****  ===============================================================================
 754:FWLIB/src/stm32f4xx_sdio.c ****                   ##### DMA transfers management functions #####
 755:FWLIB/src/stm32f4xx_sdio.c ****  ===============================================================================  
 756:FWLIB/src/stm32f4xx_sdio.c **** 
 757:FWLIB/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program SDIO DMA transfer.
ARM GAS  /tmp/ccOIxr21.s 			page 28


 758:FWLIB/src/stm32f4xx_sdio.c **** 
 759:FWLIB/src/stm32f4xx_sdio.c **** @endverbatim
 760:FWLIB/src/stm32f4xx_sdio.c ****   * @{
 761:FWLIB/src/stm32f4xx_sdio.c ****   */
 762:FWLIB/src/stm32f4xx_sdio.c **** 
 763:FWLIB/src/stm32f4xx_sdio.c **** /**
 764:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO DMA request.
 765:FWLIB/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the selected SDIO DMA request.
 766:FWLIB/src/stm32f4xx_sdio.c ****   *          This parameter can be: ENABLE or DISABLE.
 767:FWLIB/src/stm32f4xx_sdio.c ****   * @retval None
 768:FWLIB/src/stm32f4xx_sdio.c ****   */
 769:FWLIB/src/stm32f4xx_sdio.c **** void SDIO_DMACmd(FunctionalState NewState)
 770:FWLIB/src/stm32f4xx_sdio.c **** {
 827              		.loc 1 770 0
 828              		.cfi_startproc
 829              		@ args = 0, pretend = 0, frame = 0
 830              		@ frame_needed = 0, uses_anonymous_args = 0
 831              		@ link register save eliminated.
 832              	.LVL39:
 771:FWLIB/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 772:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 773:FWLIB/src/stm32f4xx_sdio.c ****   
 774:FWLIB/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_DMAEN_BB = (uint32_t)NewState;
 833              		.loc 1 774 0
 834 0000 014B     		ldr	r3, .L71
 835 0002 1860     		str	r0, [r3]
 836 0004 7047     		bx	lr
 837              	.L72:
 838 0006 00BF     		.align	2
 839              	.L71:
 840 0008 8C852542 		.word	1109755276
 841              		.cfi_endproc
 842              	.LFE136:
 844              		.section	.text.SDIO_ITConfig,"ax",%progbits
 845              		.align	1
 846              		.global	SDIO_ITConfig
 847              		.syntax unified
 848              		.thumb
 849              		.thumb_func
 850              		.fpu softvfp
 852              	SDIO_ITConfig:
 853              	.LFB137:
 775:FWLIB/src/stm32f4xx_sdio.c **** }
 776:FWLIB/src/stm32f4xx_sdio.c **** 
 777:FWLIB/src/stm32f4xx_sdio.c **** /**
 778:FWLIB/src/stm32f4xx_sdio.c ****   * @}
 779:FWLIB/src/stm32f4xx_sdio.c ****   */
 780:FWLIB/src/stm32f4xx_sdio.c **** 
 781:FWLIB/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group7 Interrupts and flags management functions
 782:FWLIB/src/stm32f4xx_sdio.c ****  *  @brief   Interrupts and flags management functions  
 783:FWLIB/src/stm32f4xx_sdio.c ****  *
 784:FWLIB/src/stm32f4xx_sdio.c **** @verbatim   
 785:FWLIB/src/stm32f4xx_sdio.c ****  ===============================================================================
 786:FWLIB/src/stm32f4xx_sdio.c ****               ##### Interrupts and flags management functions #####
 787:FWLIB/src/stm32f4xx_sdio.c ****  ===============================================================================  
 788:FWLIB/src/stm32f4xx_sdio.c **** 
 789:FWLIB/src/stm32f4xx_sdio.c **** 
ARM GAS  /tmp/ccOIxr21.s 			page 29


 790:FWLIB/src/stm32f4xx_sdio.c **** @endverbatim
 791:FWLIB/src/stm32f4xx_sdio.c ****   * @{
 792:FWLIB/src/stm32f4xx_sdio.c ****   */
 793:FWLIB/src/stm32f4xx_sdio.c **** 
 794:FWLIB/src/stm32f4xx_sdio.c **** /**
 795:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO interrupts.
 796:FWLIB/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt sources to be enabled or disabled.
 797:FWLIB/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 798:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 799:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 800:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 801:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 802:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 803:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 804:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 805:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 806:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 807:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 808:FWLIB/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 809:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 810:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 811:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 812:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 813:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 814:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 815:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 816:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 817:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 818:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 819:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 820:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 821:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 822:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 823:FWLIB/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the specified SDIO interrupts.
 824:FWLIB/src/stm32f4xx_sdio.c ****   *          This parameter can be: ENABLE or DISABLE.
 825:FWLIB/src/stm32f4xx_sdio.c ****   * @retval None 
 826:FWLIB/src/stm32f4xx_sdio.c ****   */
 827:FWLIB/src/stm32f4xx_sdio.c **** void SDIO_ITConfig(uint32_t SDIO_IT, FunctionalState NewState)
 828:FWLIB/src/stm32f4xx_sdio.c **** {
 854              		.loc 1 828 0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 0
 857              		@ frame_needed = 0, uses_anonymous_args = 0
 858              		@ link register save eliminated.
 859              	.LVL40:
 829:FWLIB/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 830:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_IT(SDIO_IT));
 831:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 832:FWLIB/src/stm32f4xx_sdio.c ****   
 833:FWLIB/src/stm32f4xx_sdio.c ****   if (NewState != DISABLE)
 860              		.loc 1 833 0
 861 0000 29B9     		cbnz	r1, .L76
 834:FWLIB/src/stm32f4xx_sdio.c ****   {
 835:FWLIB/src/stm32f4xx_sdio.c ****     /* Enable the SDIO interrupts */
 836:FWLIB/src/stm32f4xx_sdio.c ****     SDIO->MASK |= SDIO_IT;
 837:FWLIB/src/stm32f4xx_sdio.c ****   }
 838:FWLIB/src/stm32f4xx_sdio.c ****   else
ARM GAS  /tmp/ccOIxr21.s 			page 30


 839:FWLIB/src/stm32f4xx_sdio.c ****   {
 840:FWLIB/src/stm32f4xx_sdio.c ****     /* Disable the SDIO interrupts */
 841:FWLIB/src/stm32f4xx_sdio.c ****     SDIO->MASK &= ~SDIO_IT;
 862              		.loc 1 841 0
 863 0002 054A     		ldr	r2, .L77
 864 0004 D36B     		ldr	r3, [r2, #60]
 865 0006 23EA0000 		bic	r0, r3, r0
 866              	.LVL41:
 867 000a D063     		str	r0, [r2, #60]
 868 000c 7047     		bx	lr
 869              	.LVL42:
 870              	.L76:
 836:FWLIB/src/stm32f4xx_sdio.c ****   }
 871              		.loc 1 836 0
 872 000e 024A     		ldr	r2, .L77
 873 0010 D36B     		ldr	r3, [r2, #60]
 874 0012 1843     		orrs	r0, r0, r3
 875              	.LVL43:
 876 0014 D063     		str	r0, [r2, #60]
 877 0016 7047     		bx	lr
 878              	.L78:
 879              		.align	2
 880              	.L77:
 881 0018 002C0140 		.word	1073818624
 882              		.cfi_endproc
 883              	.LFE137:
 885              		.section	.text.SDIO_GetFlagStatus,"ax",%progbits
 886              		.align	1
 887              		.global	SDIO_GetFlagStatus
 888              		.syntax unified
 889              		.thumb
 890              		.thumb_func
 891              		.fpu softvfp
 893              	SDIO_GetFlagStatus:
 894              	.LFB138:
 842:FWLIB/src/stm32f4xx_sdio.c ****   } 
 843:FWLIB/src/stm32f4xx_sdio.c **** }
 844:FWLIB/src/stm32f4xx_sdio.c **** 
 845:FWLIB/src/stm32f4xx_sdio.c **** /**
 846:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Checks whether the specified SDIO flag is set or not.
 847:FWLIB/src/stm32f4xx_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to check. 
 848:FWLIB/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 849:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 850:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 851:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 852:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DTIMEOUT: Data timeout
 853:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 854:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 855:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 856:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 857:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 858:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode
 859:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 860:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDACT:   Command transfer in progress
 861:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXACT:    Data transmit in progress
 862:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXACT:    Data receive in progress
 863:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOHE: Transmit FIFO Half Empty
ARM GAS  /tmp/ccOIxr21.s 			page 31


 864:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOHF: Receive FIFO Half Full
 865:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOF:  Transmit FIFO full
 866:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOF:  Receive FIFO full
 867:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOE:  Transmit FIFO empty
 868:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOE:  Receive FIFO empty
 869:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXDAVL:   Data available in transmit FIFO
 870:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXDAVL:   Data available in receive FIFO
 871:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 872:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 873:FWLIB/src/stm32f4xx_sdio.c ****   * @retval The new state of SDIO_FLAG (SET or RESET).
 874:FWLIB/src/stm32f4xx_sdio.c ****   */
 875:FWLIB/src/stm32f4xx_sdio.c **** FlagStatus SDIO_GetFlagStatus(uint32_t SDIO_FLAG)
 876:FWLIB/src/stm32f4xx_sdio.c **** { 
 895              		.loc 1 876 0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 0
 898              		@ frame_needed = 0, uses_anonymous_args = 0
 899              		@ link register save eliminated.
 900              	.LVL44:
 877:FWLIB/src/stm32f4xx_sdio.c ****   FlagStatus bitstatus = RESET;
 878:FWLIB/src/stm32f4xx_sdio.c ****   
 879:FWLIB/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 880:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_FLAG(SDIO_FLAG));
 881:FWLIB/src/stm32f4xx_sdio.c ****   
 882:FWLIB/src/stm32f4xx_sdio.c ****   if ((SDIO->STA & SDIO_FLAG) != (uint32_t)RESET)
 901              		.loc 1 882 0
 902 0000 034B     		ldr	r3, .L83
 903 0002 5B6B     		ldr	r3, [r3, #52]
 904 0004 0342     		tst	r3, r0
 905 0006 01D1     		bne	.L82
 883:FWLIB/src/stm32f4xx_sdio.c ****   {
 884:FWLIB/src/stm32f4xx_sdio.c ****     bitstatus = SET;
 885:FWLIB/src/stm32f4xx_sdio.c ****   }
 886:FWLIB/src/stm32f4xx_sdio.c ****   else
 887:FWLIB/src/stm32f4xx_sdio.c ****   {
 888:FWLIB/src/stm32f4xx_sdio.c ****     bitstatus = RESET;
 906              		.loc 1 888 0
 907 0008 0020     		movs	r0, #0
 908              	.LVL45:
 889:FWLIB/src/stm32f4xx_sdio.c ****   }
 890:FWLIB/src/stm32f4xx_sdio.c ****   return bitstatus;
 891:FWLIB/src/stm32f4xx_sdio.c **** }
 909              		.loc 1 891 0
 910 000a 7047     		bx	lr
 911              	.LVL46:
 912              	.L82:
 884:FWLIB/src/stm32f4xx_sdio.c ****   }
 913              		.loc 1 884 0
 914 000c 0120     		movs	r0, #1
 915              	.LVL47:
 916 000e 7047     		bx	lr
 917              	.L84:
 918              		.align	2
 919              	.L83:
 920 0010 002C0140 		.word	1073818624
 921              		.cfi_endproc
 922              	.LFE138:
ARM GAS  /tmp/ccOIxr21.s 			page 32


 924              		.section	.text.SDIO_ClearFlag,"ax",%progbits
 925              		.align	1
 926              		.global	SDIO_ClearFlag
 927              		.syntax unified
 928              		.thumb
 929              		.thumb_func
 930              		.fpu softvfp
 932              	SDIO_ClearFlag:
 933              	.LFB139:
 892:FWLIB/src/stm32f4xx_sdio.c **** 
 893:FWLIB/src/stm32f4xx_sdio.c **** /**
 894:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Clears the SDIO's pending flags.
 895:FWLIB/src/stm32f4xx_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to clear.  
 896:FWLIB/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 897:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 898:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 899:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 900:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DTIMEOUT: Data timeout
 901:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 902:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 903:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 904:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 905:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 906:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode
 907:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 908:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 909:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 910:FWLIB/src/stm32f4xx_sdio.c ****   * @retval None
 911:FWLIB/src/stm32f4xx_sdio.c ****   */
 912:FWLIB/src/stm32f4xx_sdio.c **** void SDIO_ClearFlag(uint32_t SDIO_FLAG)
 913:FWLIB/src/stm32f4xx_sdio.c **** { 
 934              		.loc 1 913 0
 935              		.cfi_startproc
 936              		@ args = 0, pretend = 0, frame = 0
 937              		@ frame_needed = 0, uses_anonymous_args = 0
 938              		@ link register save eliminated.
 939              	.LVL48:
 914:FWLIB/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 915:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLEAR_FLAG(SDIO_FLAG));
 916:FWLIB/src/stm32f4xx_sdio.c ****    
 917:FWLIB/src/stm32f4xx_sdio.c ****   SDIO->ICR = SDIO_FLAG;
 940              		.loc 1 917 0
 941 0000 014B     		ldr	r3, .L86
 942 0002 9863     		str	r0, [r3, #56]
 943 0004 7047     		bx	lr
 944              	.L87:
 945 0006 00BF     		.align	2
 946              	.L86:
 947 0008 002C0140 		.word	1073818624
 948              		.cfi_endproc
 949              	.LFE139:
 951              		.section	.text.SDIO_GetITStatus,"ax",%progbits
 952              		.align	1
 953              		.global	SDIO_GetITStatus
 954              		.syntax unified
 955              		.thumb
 956              		.thumb_func
ARM GAS  /tmp/ccOIxr21.s 			page 33


 957              		.fpu softvfp
 959              	SDIO_GetITStatus:
 960              	.LFB140:
 918:FWLIB/src/stm32f4xx_sdio.c **** }
 919:FWLIB/src/stm32f4xx_sdio.c **** 
 920:FWLIB/src/stm32f4xx_sdio.c **** /**
 921:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Checks whether the specified SDIO interrupt has occurred or not.
 922:FWLIB/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt source to check. 
 923:FWLIB/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 924:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 925:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 926:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 927:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 928:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 929:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 930:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 931:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 932:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 933:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 934:FWLIB/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 935:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 936:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 937:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 938:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 939:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 940:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 941:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 942:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 943:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 944:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 945:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 946:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 947:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 948:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 949:FWLIB/src/stm32f4xx_sdio.c ****   * @retval The new state of SDIO_IT (SET or RESET).
 950:FWLIB/src/stm32f4xx_sdio.c ****   */
 951:FWLIB/src/stm32f4xx_sdio.c **** ITStatus SDIO_GetITStatus(uint32_t SDIO_IT)
 952:FWLIB/src/stm32f4xx_sdio.c **** { 
 961              		.loc 1 952 0
 962              		.cfi_startproc
 963              		@ args = 0, pretend = 0, frame = 0
 964              		@ frame_needed = 0, uses_anonymous_args = 0
 965              		@ link register save eliminated.
 966              	.LVL49:
 953:FWLIB/src/stm32f4xx_sdio.c ****   ITStatus bitstatus = RESET;
 954:FWLIB/src/stm32f4xx_sdio.c ****   
 955:FWLIB/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 956:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_GET_IT(SDIO_IT));
 957:FWLIB/src/stm32f4xx_sdio.c ****   if ((SDIO->STA & SDIO_IT) != (uint32_t)RESET)  
 967              		.loc 1 957 0
 968 0000 034B     		ldr	r3, .L92
 969 0002 5B6B     		ldr	r3, [r3, #52]
 970 0004 0342     		tst	r3, r0
 971 0006 01D1     		bne	.L91
 958:FWLIB/src/stm32f4xx_sdio.c ****   {
 959:FWLIB/src/stm32f4xx_sdio.c ****     bitstatus = SET;
 960:FWLIB/src/stm32f4xx_sdio.c ****   }
ARM GAS  /tmp/ccOIxr21.s 			page 34


 961:FWLIB/src/stm32f4xx_sdio.c ****   else
 962:FWLIB/src/stm32f4xx_sdio.c ****   {
 963:FWLIB/src/stm32f4xx_sdio.c ****     bitstatus = RESET;
 972              		.loc 1 963 0
 973 0008 0020     		movs	r0, #0
 974              	.LVL50:
 964:FWLIB/src/stm32f4xx_sdio.c ****   }
 965:FWLIB/src/stm32f4xx_sdio.c ****   return bitstatus;
 966:FWLIB/src/stm32f4xx_sdio.c **** }
 975              		.loc 1 966 0
 976 000a 7047     		bx	lr
 977              	.LVL51:
 978              	.L91:
 959:FWLIB/src/stm32f4xx_sdio.c ****   }
 979              		.loc 1 959 0
 980 000c 0120     		movs	r0, #1
 981              	.LVL52:
 982 000e 7047     		bx	lr
 983              	.L93:
 984              		.align	2
 985              	.L92:
 986 0010 002C0140 		.word	1073818624
 987              		.cfi_endproc
 988              	.LFE140:
 990              		.section	.text.SDIO_ClearITPendingBit,"ax",%progbits
 991              		.align	1
 992              		.global	SDIO_ClearITPendingBit
 993              		.syntax unified
 994              		.thumb
 995              		.thumb_func
 996              		.fpu softvfp
 998              	SDIO_ClearITPendingBit:
 999              	.LFB141:
 967:FWLIB/src/stm32f4xx_sdio.c **** 
 968:FWLIB/src/stm32f4xx_sdio.c **** /**
 969:FWLIB/src/stm32f4xx_sdio.c ****   * @brief  Clears the SDIO's interrupt pending bits.
 970:FWLIB/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the interrupt pending bit to clear. 
 971:FWLIB/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 972:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 973:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 974:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 975:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 976:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 977:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 978:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 979:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 980:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIO_DCOUNT, is zero) interrupt
 981:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 982:FWLIB/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 983:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 984:FWLIB/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61
 985:FWLIB/src/stm32f4xx_sdio.c ****   * @retval None
 986:FWLIB/src/stm32f4xx_sdio.c ****   */
 987:FWLIB/src/stm32f4xx_sdio.c **** void SDIO_ClearITPendingBit(uint32_t SDIO_IT)
 988:FWLIB/src/stm32f4xx_sdio.c **** { 
 1000              		.loc 1 988 0
 1001              		.cfi_startproc
ARM GAS  /tmp/ccOIxr21.s 			page 35


 1002              		@ args = 0, pretend = 0, frame = 0
 1003              		@ frame_needed = 0, uses_anonymous_args = 0
 1004              		@ link register save eliminated.
 1005              	.LVL53:
 989:FWLIB/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 990:FWLIB/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLEAR_IT(SDIO_IT));
 991:FWLIB/src/stm32f4xx_sdio.c ****    
 992:FWLIB/src/stm32f4xx_sdio.c ****   SDIO->ICR = SDIO_IT;
 1006              		.loc 1 992 0
 1007 0000 014B     		ldr	r3, .L95
 1008 0002 9863     		str	r0, [r3, #56]
 1009 0004 7047     		bx	lr
 1010              	.L96:
 1011 0006 00BF     		.align	2
 1012              	.L95:
 1013 0008 002C0140 		.word	1073818624
 1014              		.cfi_endproc
 1015              	.LFE141:
 1017              		.text
 1018              	.Letext0:
 1019              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1020              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1021              		.file 4 "CORE/core_cm4.h"
 1022              		.file 5 "USER/system_stm32f4xx.h"
 1023              		.file 6 "USER/stm32f4xx.h"
 1024              		.file 7 "FWLIB/inc/stm32f4xx_sdio.h"
 1025              		.file 8 "FWLIB/inc/stm32f4xx_rcc.h"
ARM GAS  /tmp/ccOIxr21.s 			page 36


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_sdio.c
     /tmp/ccOIxr21.s:16     .text.SDIO_DeInit:0000000000000000 $t
     /tmp/ccOIxr21.s:23     .text.SDIO_DeInit:0000000000000000 SDIO_DeInit
     /tmp/ccOIxr21.s:50     .text.SDIO_Init:0000000000000000 $t
     /tmp/ccOIxr21.s:57     .text.SDIO_Init:0000000000000000 SDIO_Init
     /tmp/ccOIxr21.s:112    .text.SDIO_Init:000000000000002c $d
     /tmp/ccOIxr21.s:117    .text.SDIO_StructInit:0000000000000000 $t
     /tmp/ccOIxr21.s:124    .text.SDIO_StructInit:0000000000000000 SDIO_StructInit
     /tmp/ccOIxr21.s:150    .text.SDIO_ClockCmd:0000000000000000 $t
     /tmp/ccOIxr21.s:157    .text.SDIO_ClockCmd:0000000000000000 SDIO_ClockCmd
     /tmp/ccOIxr21.s:172    .text.SDIO_ClockCmd:0000000000000008 $d
     /tmp/ccOIxr21.s:177    .text.SDIO_SetPowerState:0000000000000000 $t
     /tmp/ccOIxr21.s:184    .text.SDIO_SetPowerState:0000000000000000 SDIO_SetPowerState
     /tmp/ccOIxr21.s:199    .text.SDIO_SetPowerState:0000000000000008 $d
     /tmp/ccOIxr21.s:204    .text.SDIO_GetPowerState:0000000000000000 $t
     /tmp/ccOIxr21.s:211    .text.SDIO_GetPowerState:0000000000000000 SDIO_GetPowerState
     /tmp/ccOIxr21.s:227    .text.SDIO_GetPowerState:000000000000000c $d
     /tmp/ccOIxr21.s:232    .text.SDIO_SendCommand:0000000000000000 $t
     /tmp/ccOIxr21.s:239    .text.SDIO_SendCommand:0000000000000000 SDIO_SendCommand
     /tmp/ccOIxr21.s:288    .text.SDIO_SendCommand:0000000000000028 $d
     /tmp/ccOIxr21.s:293    .text.SDIO_CmdStructInit:0000000000000000 $t
     /tmp/ccOIxr21.s:300    .text.SDIO_CmdStructInit:0000000000000000 SDIO_CmdStructInit
     /tmp/ccOIxr21.s:324    .text.SDIO_GetCommandResponse:0000000000000000 $t
     /tmp/ccOIxr21.s:331    .text.SDIO_GetCommandResponse:0000000000000000 SDIO_GetCommandResponse
     /tmp/ccOIxr21.s:347    .text.SDIO_GetCommandResponse:0000000000000008 $d
     /tmp/ccOIxr21.s:352    .text.SDIO_GetResponse:0000000000000000 $t
     /tmp/ccOIxr21.s:359    .text.SDIO_GetResponse:0000000000000000 SDIO_GetResponse
     /tmp/ccOIxr21.s:390    .text.SDIO_GetResponse:0000000000000014 $d
     /tmp/ccOIxr21.s:395    .text.SDIO_DataConfig:0000000000000000 $t
     /tmp/ccOIxr21.s:402    .text.SDIO_DataConfig:0000000000000000 SDIO_DataConfig
     /tmp/ccOIxr21.s:452    .text.SDIO_DataConfig:0000000000000028 $d
     /tmp/ccOIxr21.s:457    .text.SDIO_DataStructInit:0000000000000000 $t
     /tmp/ccOIxr21.s:464    .text.SDIO_DataStructInit:0000000000000000 SDIO_DataStructInit
     /tmp/ccOIxr21.s:491    .text.SDIO_GetDataCounter:0000000000000000 $t
     /tmp/ccOIxr21.s:498    .text.SDIO_GetDataCounter:0000000000000000 SDIO_GetDataCounter
     /tmp/ccOIxr21.s:513    .text.SDIO_GetDataCounter:0000000000000008 $d
     /tmp/ccOIxr21.s:518    .text.SDIO_ReadData:0000000000000000 $t
     /tmp/ccOIxr21.s:525    .text.SDIO_ReadData:0000000000000000 SDIO_ReadData
     /tmp/ccOIxr21.s:540    .text.SDIO_ReadData:0000000000000008 $d
     /tmp/ccOIxr21.s:545    .text.SDIO_WriteData:0000000000000000 $t
     /tmp/ccOIxr21.s:552    .text.SDIO_WriteData:0000000000000000 SDIO_WriteData
     /tmp/ccOIxr21.s:567    .text.SDIO_WriteData:0000000000000008 $d
     /tmp/ccOIxr21.s:572    .text.SDIO_GetFIFOCount:0000000000000000 $t
     /tmp/ccOIxr21.s:579    .text.SDIO_GetFIFOCount:0000000000000000 SDIO_GetFIFOCount
     /tmp/ccOIxr21.s:594    .text.SDIO_GetFIFOCount:0000000000000008 $d
     /tmp/ccOIxr21.s:599    .text.SDIO_StartSDIOReadWait:0000000000000000 $t
     /tmp/ccOIxr21.s:606    .text.SDIO_StartSDIOReadWait:0000000000000000 SDIO_StartSDIOReadWait
     /tmp/ccOIxr21.s:621    .text.SDIO_StartSDIOReadWait:0000000000000008 $d
     /tmp/ccOIxr21.s:626    .text.SDIO_StopSDIOReadWait:0000000000000000 $t
     /tmp/ccOIxr21.s:633    .text.SDIO_StopSDIOReadWait:0000000000000000 SDIO_StopSDIOReadWait
     /tmp/ccOIxr21.s:648    .text.SDIO_StopSDIOReadWait:0000000000000008 $d
     /tmp/ccOIxr21.s:653    .text.SDIO_SetSDIOReadWaitMode:0000000000000000 $t
     /tmp/ccOIxr21.s:660    .text.SDIO_SetSDIOReadWaitMode:0000000000000000 SDIO_SetSDIOReadWaitMode
     /tmp/ccOIxr21.s:675    .text.SDIO_SetSDIOReadWaitMode:0000000000000008 $d
     /tmp/ccOIxr21.s:680    .text.SDIO_SetSDIOOperation:0000000000000000 $t
     /tmp/ccOIxr21.s:687    .text.SDIO_SetSDIOOperation:0000000000000000 SDIO_SetSDIOOperation
ARM GAS  /tmp/ccOIxr21.s 			page 37


     /tmp/ccOIxr21.s:702    .text.SDIO_SetSDIOOperation:0000000000000008 $d
     /tmp/ccOIxr21.s:707    .text.SDIO_SendSDIOSuspendCmd:0000000000000000 $t
     /tmp/ccOIxr21.s:714    .text.SDIO_SendSDIOSuspendCmd:0000000000000000 SDIO_SendSDIOSuspendCmd
     /tmp/ccOIxr21.s:729    .text.SDIO_SendSDIOSuspendCmd:0000000000000008 $d
     /tmp/ccOIxr21.s:734    .text.SDIO_CommandCompletionCmd:0000000000000000 $t
     /tmp/ccOIxr21.s:741    .text.SDIO_CommandCompletionCmd:0000000000000000 SDIO_CommandCompletionCmd
     /tmp/ccOIxr21.s:756    .text.SDIO_CommandCompletionCmd:0000000000000008 $d
     /tmp/ccOIxr21.s:761    .text.SDIO_CEATAITCmd:0000000000000000 $t
     /tmp/ccOIxr21.s:768    .text.SDIO_CEATAITCmd:0000000000000000 SDIO_CEATAITCmd
     /tmp/ccOIxr21.s:786    .text.SDIO_CEATAITCmd:0000000000000010 $d
     /tmp/ccOIxr21.s:791    .text.SDIO_SendCEATACmd:0000000000000000 $t
     /tmp/ccOIxr21.s:798    .text.SDIO_SendCEATACmd:0000000000000000 SDIO_SendCEATACmd
     /tmp/ccOIxr21.s:813    .text.SDIO_SendCEATACmd:0000000000000008 $d
     /tmp/ccOIxr21.s:818    .text.SDIO_DMACmd:0000000000000000 $t
     /tmp/ccOIxr21.s:825    .text.SDIO_DMACmd:0000000000000000 SDIO_DMACmd
     /tmp/ccOIxr21.s:840    .text.SDIO_DMACmd:0000000000000008 $d
     /tmp/ccOIxr21.s:845    .text.SDIO_ITConfig:0000000000000000 $t
     /tmp/ccOIxr21.s:852    .text.SDIO_ITConfig:0000000000000000 SDIO_ITConfig
     /tmp/ccOIxr21.s:881    .text.SDIO_ITConfig:0000000000000018 $d
     /tmp/ccOIxr21.s:886    .text.SDIO_GetFlagStatus:0000000000000000 $t
     /tmp/ccOIxr21.s:893    .text.SDIO_GetFlagStatus:0000000000000000 SDIO_GetFlagStatus
     /tmp/ccOIxr21.s:920    .text.SDIO_GetFlagStatus:0000000000000010 $d
     /tmp/ccOIxr21.s:925    .text.SDIO_ClearFlag:0000000000000000 $t
     /tmp/ccOIxr21.s:932    .text.SDIO_ClearFlag:0000000000000000 SDIO_ClearFlag
     /tmp/ccOIxr21.s:947    .text.SDIO_ClearFlag:0000000000000008 $d
     /tmp/ccOIxr21.s:952    .text.SDIO_GetITStatus:0000000000000000 $t
     /tmp/ccOIxr21.s:959    .text.SDIO_GetITStatus:0000000000000000 SDIO_GetITStatus
     /tmp/ccOIxr21.s:986    .text.SDIO_GetITStatus:0000000000000010 $d
     /tmp/ccOIxr21.s:991    .text.SDIO_ClearITPendingBit:0000000000000000 $t
     /tmp/ccOIxr21.s:998    .text.SDIO_ClearITPendingBit:0000000000000000 SDIO_ClearITPendingBit
     /tmp/ccOIxr21.s:1013   .text.SDIO_ClearITPendingBit:0000000000000008 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
