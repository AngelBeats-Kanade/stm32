ARM GAS  /tmp/ccdFaGN6.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f10x_rtc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.RTC_ITConfig,"ax",%progbits
  16              		.align	1
  17              		.global	RTC_ITConfig
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	RTC_ITConfig:
  24              	.LFB29:
  25              		.file 1 "Libraries/FWlib/src/stm32f10x_rtc.c"
   1:Libraries/FWlib/src/stm32f10x_rtc.c **** /**
   2:Libraries/FWlib/src/stm32f10x_rtc.c ****   ******************************************************************************
   3:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @file    stm32f10x_rtc.c
   4:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @author  MCD Application Team
   5:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @version V3.5.0
   6:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @date    11-March-2011
   7:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @brief   This file provides all the RTC firmware functions.
   8:Libraries/FWlib/src/stm32f10x_rtc.c ****   ******************************************************************************
   9:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @attention
  10:Libraries/FWlib/src/stm32f10x_rtc.c ****   *
  11:Libraries/FWlib/src/stm32f10x_rtc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:Libraries/FWlib/src/stm32f10x_rtc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:Libraries/FWlib/src/stm32f10x_rtc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:Libraries/FWlib/src/stm32f10x_rtc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:Libraries/FWlib/src/stm32f10x_rtc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:Libraries/FWlib/src/stm32f10x_rtc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:Libraries/FWlib/src/stm32f10x_rtc.c ****   *
  18:Libraries/FWlib/src/stm32f10x_rtc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:Libraries/FWlib/src/stm32f10x_rtc.c ****   ******************************************************************************
  20:Libraries/FWlib/src/stm32f10x_rtc.c ****   */
  21:Libraries/FWlib/src/stm32f10x_rtc.c **** 
  22:Libraries/FWlib/src/stm32f10x_rtc.c **** /* Includes ------------------------------------------------------------------*/
  23:Libraries/FWlib/src/stm32f10x_rtc.c **** #include "stm32f10x_rtc.h"
  24:Libraries/FWlib/src/stm32f10x_rtc.c **** 
  25:Libraries/FWlib/src/stm32f10x_rtc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  26:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @{
  27:Libraries/FWlib/src/stm32f10x_rtc.c ****   */
  28:Libraries/FWlib/src/stm32f10x_rtc.c **** 
  29:Libraries/FWlib/src/stm32f10x_rtc.c **** /** @defgroup RTC 
  30:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @brief RTC driver modules
  31:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @{
  32:Libraries/FWlib/src/stm32f10x_rtc.c ****   */
  33:Libraries/FWlib/src/stm32f10x_rtc.c **** 
ARM GAS  /tmp/ccdFaGN6.s 			page 2


  34:Libraries/FWlib/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_TypesDefinitions
  35:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @{
  36:Libraries/FWlib/src/stm32f10x_rtc.c ****   */ 
  37:Libraries/FWlib/src/stm32f10x_rtc.c **** /**
  38:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @}
  39:Libraries/FWlib/src/stm32f10x_rtc.c ****   */
  40:Libraries/FWlib/src/stm32f10x_rtc.c **** 
  41:Libraries/FWlib/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_Defines
  42:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @{
  43:Libraries/FWlib/src/stm32f10x_rtc.c ****   */
  44:Libraries/FWlib/src/stm32f10x_rtc.c **** #define RTC_LSB_MASK     ((uint32_t)0x0000FFFF)  /*!< RTC LSB Mask */
  45:Libraries/FWlib/src/stm32f10x_rtc.c **** #define PRLH_MSB_MASK    ((uint32_t)0x000F0000)  /*!< RTC Prescaler MSB Mask */
  46:Libraries/FWlib/src/stm32f10x_rtc.c **** 
  47:Libraries/FWlib/src/stm32f10x_rtc.c **** /**
  48:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @}
  49:Libraries/FWlib/src/stm32f10x_rtc.c ****   */
  50:Libraries/FWlib/src/stm32f10x_rtc.c **** 
  51:Libraries/FWlib/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_Macros
  52:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @{
  53:Libraries/FWlib/src/stm32f10x_rtc.c ****   */
  54:Libraries/FWlib/src/stm32f10x_rtc.c **** 
  55:Libraries/FWlib/src/stm32f10x_rtc.c **** /**
  56:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @}
  57:Libraries/FWlib/src/stm32f10x_rtc.c ****   */
  58:Libraries/FWlib/src/stm32f10x_rtc.c **** 
  59:Libraries/FWlib/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_Variables
  60:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @{
  61:Libraries/FWlib/src/stm32f10x_rtc.c ****   */
  62:Libraries/FWlib/src/stm32f10x_rtc.c **** 
  63:Libraries/FWlib/src/stm32f10x_rtc.c **** /**
  64:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @}
  65:Libraries/FWlib/src/stm32f10x_rtc.c ****   */
  66:Libraries/FWlib/src/stm32f10x_rtc.c **** 
  67:Libraries/FWlib/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_FunctionPrototypes
  68:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @{
  69:Libraries/FWlib/src/stm32f10x_rtc.c ****   */
  70:Libraries/FWlib/src/stm32f10x_rtc.c **** 
  71:Libraries/FWlib/src/stm32f10x_rtc.c **** /**
  72:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @}
  73:Libraries/FWlib/src/stm32f10x_rtc.c ****   */
  74:Libraries/FWlib/src/stm32f10x_rtc.c **** 
  75:Libraries/FWlib/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_Functions
  76:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @{
  77:Libraries/FWlib/src/stm32f10x_rtc.c ****   */
  78:Libraries/FWlib/src/stm32f10x_rtc.c **** 
  79:Libraries/FWlib/src/stm32f10x_rtc.c **** /**
  80:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @brief  Enables or disables the specified RTC interrupts.
  81:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @param  RTC_IT: specifies the RTC interrupts sources to be enabled or disabled.
  82:Libraries/FWlib/src/stm32f10x_rtc.c ****   *   This parameter can be any combination of the following values:
  83:Libraries/FWlib/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_OW: Overflow interrupt
  84:Libraries/FWlib/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_ALR: Alarm interrupt
  85:Libraries/FWlib/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_SEC: Second interrupt
  86:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @param  NewState: new state of the specified RTC interrupts.
  87:Libraries/FWlib/src/stm32f10x_rtc.c ****   *   This parameter can be: ENABLE or DISABLE.
  88:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @retval None
  89:Libraries/FWlib/src/stm32f10x_rtc.c ****   */
  90:Libraries/FWlib/src/stm32f10x_rtc.c **** void RTC_ITConfig(uint16_t RTC_IT, FunctionalState NewState)
ARM GAS  /tmp/ccdFaGN6.s 			page 3


  91:Libraries/FWlib/src/stm32f10x_rtc.c **** {
  26              		.loc 1 91 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  92:Libraries/FWlib/src/stm32f10x_rtc.c ****   /* Check the parameters */
  93:Libraries/FWlib/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_IT(RTC_IT));  
  94:Libraries/FWlib/src/stm32f10x_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
  95:Libraries/FWlib/src/stm32f10x_rtc.c ****   
  96:Libraries/FWlib/src/stm32f10x_rtc.c ****   if (NewState != DISABLE)
  32              		.loc 1 96 0
  33 0000 31B9     		cbnz	r1, .L4
  97:Libraries/FWlib/src/stm32f10x_rtc.c ****   {
  98:Libraries/FWlib/src/stm32f10x_rtc.c ****     RTC->CRH |= RTC_IT;
  99:Libraries/FWlib/src/stm32f10x_rtc.c ****   }
 100:Libraries/FWlib/src/stm32f10x_rtc.c ****   else
 101:Libraries/FWlib/src/stm32f10x_rtc.c ****   {
 102:Libraries/FWlib/src/stm32f10x_rtc.c ****     RTC->CRH &= (uint16_t)~RTC_IT;
  34              		.loc 1 102 0
  35 0002 064B     		ldr	r3, .L5
  36 0004 1A88     		ldrh	r2, [r3]
  37 0006 C043     		mvns	r0, r0
  38              	.LVL1:
  39 0008 80B2     		uxth	r0, r0
  40 000a 1040     		ands	r0, r0, r2
  41 000c 1880     		strh	r0, [r3]	@ movhi
  42 000e 7047     		bx	lr
  43              	.LVL2:
  44              	.L4:
  98:Libraries/FWlib/src/stm32f10x_rtc.c ****   }
  45              		.loc 1 98 0
  46 0010 024A     		ldr	r2, .L5
  47 0012 1388     		ldrh	r3, [r2]
  48 0014 9BB2     		uxth	r3, r3
  49 0016 1843     		orrs	r0, r0, r3
  50              	.LVL3:
  51 0018 1080     		strh	r0, [r2]	@ movhi
  52 001a 7047     		bx	lr
  53              	.L6:
  54              		.align	2
  55              	.L5:
  56 001c 00280040 		.word	1073752064
  57              		.cfi_endproc
  58              	.LFE29:
  60              		.section	.text.RTC_EnterConfigMode,"ax",%progbits
  61              		.align	1
  62              		.global	RTC_EnterConfigMode
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  66              		.fpu softvfp
  68              	RTC_EnterConfigMode:
  69              	.LFB30:
 103:Libraries/FWlib/src/stm32f10x_rtc.c ****   }
 104:Libraries/FWlib/src/stm32f10x_rtc.c **** }
ARM GAS  /tmp/ccdFaGN6.s 			page 4


 105:Libraries/FWlib/src/stm32f10x_rtc.c **** 
 106:Libraries/FWlib/src/stm32f10x_rtc.c **** /**
 107:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @brief  Enters the RTC configuration mode.
 108:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @param  None
 109:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @retval None
 110:Libraries/FWlib/src/stm32f10x_rtc.c ****   */
 111:Libraries/FWlib/src/stm32f10x_rtc.c **** void RTC_EnterConfigMode(void)
 112:Libraries/FWlib/src/stm32f10x_rtc.c **** {
  70              		.loc 1 112 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
 113:Libraries/FWlib/src/stm32f10x_rtc.c ****   /* Set the CNF flag to enter in the Configuration Mode */
 114:Libraries/FWlib/src/stm32f10x_rtc.c ****   RTC->CRL |= RTC_CRL_CNF;
  75              		.loc 1 114 0
  76 0000 034A     		ldr	r2, .L8
  77 0002 9388     		ldrh	r3, [r2, #4]
  78 0004 9BB2     		uxth	r3, r3
  79 0006 43F01003 		orr	r3, r3, #16
  80 000a 9380     		strh	r3, [r2, #4]	@ movhi
  81 000c 7047     		bx	lr
  82              	.L9:
  83 000e 00BF     		.align	2
  84              	.L8:
  85 0010 00280040 		.word	1073752064
  86              		.cfi_endproc
  87              	.LFE30:
  89              		.section	.text.RTC_ExitConfigMode,"ax",%progbits
  90              		.align	1
  91              		.global	RTC_ExitConfigMode
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  95              		.fpu softvfp
  97              	RTC_ExitConfigMode:
  98              	.LFB31:
 115:Libraries/FWlib/src/stm32f10x_rtc.c **** }
 116:Libraries/FWlib/src/stm32f10x_rtc.c **** 
 117:Libraries/FWlib/src/stm32f10x_rtc.c **** /**
 118:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @brief  Exits from the RTC configuration mode.
 119:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @param  None
 120:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @retval None
 121:Libraries/FWlib/src/stm32f10x_rtc.c ****   */
 122:Libraries/FWlib/src/stm32f10x_rtc.c **** void RTC_ExitConfigMode(void)
 123:Libraries/FWlib/src/stm32f10x_rtc.c **** {
  99              		.loc 1 123 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 124:Libraries/FWlib/src/stm32f10x_rtc.c ****   /* Reset the CNF flag to exit from the Configuration Mode */
 125:Libraries/FWlib/src/stm32f10x_rtc.c ****   RTC->CRL &= (uint16_t)~((uint16_t)RTC_CRL_CNF); 
 104              		.loc 1 125 0
 105 0000 034A     		ldr	r2, .L11
 106 0002 9388     		ldrh	r3, [r2, #4]
 107 0004 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccdFaGN6.s 			page 5


 108 0006 23F01003 		bic	r3, r3, #16
 109 000a 9BB2     		uxth	r3, r3
 110 000c 9380     		strh	r3, [r2, #4]	@ movhi
 111 000e 7047     		bx	lr
 112              	.L12:
 113              		.align	2
 114              	.L11:
 115 0010 00280040 		.word	1073752064
 116              		.cfi_endproc
 117              	.LFE31:
 119              		.section	.text.RTC_GetCounter,"ax",%progbits
 120              		.align	1
 121              		.global	RTC_GetCounter
 122              		.syntax unified
 123              		.thumb
 124              		.thumb_func
 125              		.fpu softvfp
 127              	RTC_GetCounter:
 128              	.LFB32:
 126:Libraries/FWlib/src/stm32f10x_rtc.c **** }
 127:Libraries/FWlib/src/stm32f10x_rtc.c **** 
 128:Libraries/FWlib/src/stm32f10x_rtc.c **** /**
 129:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @brief  Gets the RTC counter value.
 130:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @param  None
 131:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @retval RTC counter value.
 132:Libraries/FWlib/src/stm32f10x_rtc.c ****   */
 133:Libraries/FWlib/src/stm32f10x_rtc.c **** uint32_t RTC_GetCounter(void)
 134:Libraries/FWlib/src/stm32f10x_rtc.c **** {
 129              		.loc 1 134 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              	.LVL4:
 135:Libraries/FWlib/src/stm32f10x_rtc.c ****   uint16_t tmp = 0;
 136:Libraries/FWlib/src/stm32f10x_rtc.c ****   tmp = RTC->CNTL;
 135              		.loc 1 136 0
 136 0000 034A     		ldr	r2, .L14
 137 0002 938B     		ldrh	r3, [r2, #28]
 138 0004 9BB2     		uxth	r3, r3
 139              	.LVL5:
 137:Libraries/FWlib/src/stm32f10x_rtc.c ****   return (((uint32_t)RTC->CNTH << 16 ) | tmp) ;
 140              		.loc 1 137 0
 141 0006 108B     		ldrh	r0, [r2, #24]
 138:Libraries/FWlib/src/stm32f10x_rtc.c **** }
 142              		.loc 1 138 0
 143 0008 43EA0040 		orr	r0, r3, r0, lsl #16
 144 000c 7047     		bx	lr
 145              	.L15:
 146 000e 00BF     		.align	2
 147              	.L14:
 148 0010 00280040 		.word	1073752064
 149              		.cfi_endproc
 150              	.LFE32:
 152              		.section	.text.RTC_SetCounter,"ax",%progbits
 153              		.align	1
 154              		.global	RTC_SetCounter
ARM GAS  /tmp/ccdFaGN6.s 			page 6


 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 158              		.fpu softvfp
 160              	RTC_SetCounter:
 161              	.LFB33:
 139:Libraries/FWlib/src/stm32f10x_rtc.c **** 
 140:Libraries/FWlib/src/stm32f10x_rtc.c **** /**
 141:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @brief  Sets the RTC counter value.
 142:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @param  CounterValue: RTC counter new value.
 143:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @retval None
 144:Libraries/FWlib/src/stm32f10x_rtc.c ****   */
 145:Libraries/FWlib/src/stm32f10x_rtc.c **** void RTC_SetCounter(uint32_t CounterValue)
 146:Libraries/FWlib/src/stm32f10x_rtc.c **** { 
 162              		.loc 1 146 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              	.LVL6:
 167 0000 10B5     		push	{r4, lr}
 168              	.LCFI0:
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 4, -8
 171              		.cfi_offset 14, -4
 172 0002 0446     		mov	r4, r0
 147:Libraries/FWlib/src/stm32f10x_rtc.c ****   RTC_EnterConfigMode();
 173              		.loc 1 147 0
 174 0004 FFF7FEFF 		bl	RTC_EnterConfigMode
 175              	.LVL7:
 148:Libraries/FWlib/src/stm32f10x_rtc.c ****   /* Set RTC COUNTER MSB word */
 149:Libraries/FWlib/src/stm32f10x_rtc.c ****   RTC->CNTH = CounterValue >> 16;
 176              		.loc 1 149 0
 177 0008 220C     		lsrs	r2, r4, #16
 178 000a 034B     		ldr	r3, .L18
 179 000c 1A83     		strh	r2, [r3, #24]	@ movhi
 150:Libraries/FWlib/src/stm32f10x_rtc.c ****   /* Set RTC COUNTER LSB word */
 151:Libraries/FWlib/src/stm32f10x_rtc.c ****   RTC->CNTL = (CounterValue & RTC_LSB_MASK);
 180              		.loc 1 151 0
 181 000e A4B2     		uxth	r4, r4
 182              	.LVL8:
 183 0010 9C83     		strh	r4, [r3, #28]	@ movhi
 152:Libraries/FWlib/src/stm32f10x_rtc.c ****   RTC_ExitConfigMode();
 184              		.loc 1 152 0
 185 0012 FFF7FEFF 		bl	RTC_ExitConfigMode
 186              	.LVL9:
 187 0016 10BD     		pop	{r4, pc}
 188              	.L19:
 189              		.align	2
 190              	.L18:
 191 0018 00280040 		.word	1073752064
 192              		.cfi_endproc
 193              	.LFE33:
 195              		.section	.text.RTC_SetPrescaler,"ax",%progbits
 196              		.align	1
 197              		.global	RTC_SetPrescaler
 198              		.syntax unified
 199              		.thumb
ARM GAS  /tmp/ccdFaGN6.s 			page 7


 200              		.thumb_func
 201              		.fpu softvfp
 203              	RTC_SetPrescaler:
 204              	.LFB34:
 153:Libraries/FWlib/src/stm32f10x_rtc.c **** }
 154:Libraries/FWlib/src/stm32f10x_rtc.c **** 
 155:Libraries/FWlib/src/stm32f10x_rtc.c **** /**
 156:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @brief  Sets the RTC prescaler value.
 157:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @param  PrescalerValue: RTC prescaler new value.
 158:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @retval None
 159:Libraries/FWlib/src/stm32f10x_rtc.c ****   */
 160:Libraries/FWlib/src/stm32f10x_rtc.c **** void RTC_SetPrescaler(uint32_t PrescalerValue)
 161:Libraries/FWlib/src/stm32f10x_rtc.c **** {
 205              		.loc 1 161 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              	.LVL10:
 210 0000 10B5     		push	{r4, lr}
 211              	.LCFI1:
 212              		.cfi_def_cfa_offset 8
 213              		.cfi_offset 4, -8
 214              		.cfi_offset 14, -4
 215 0002 0446     		mov	r4, r0
 162:Libraries/FWlib/src/stm32f10x_rtc.c ****   /* Check the parameters */
 163:Libraries/FWlib/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_PRESCALER(PrescalerValue));
 164:Libraries/FWlib/src/stm32f10x_rtc.c ****   
 165:Libraries/FWlib/src/stm32f10x_rtc.c ****   RTC_EnterConfigMode();
 216              		.loc 1 165 0
 217 0004 FFF7FEFF 		bl	RTC_EnterConfigMode
 218              	.LVL11:
 166:Libraries/FWlib/src/stm32f10x_rtc.c ****   /* Set RTC PRESCALER MSB word */
 167:Libraries/FWlib/src/stm32f10x_rtc.c ****   RTC->PRLH = (PrescalerValue & PRLH_MSB_MASK) >> 16;
 219              		.loc 1 167 0
 220 0008 C4F30342 		ubfx	r2, r4, #16, #4
 221 000c 034B     		ldr	r3, .L22
 222 000e 1A81     		strh	r2, [r3, #8]	@ movhi
 168:Libraries/FWlib/src/stm32f10x_rtc.c ****   /* Set RTC PRESCALER LSB word */
 169:Libraries/FWlib/src/stm32f10x_rtc.c ****   RTC->PRLL = (PrescalerValue & RTC_LSB_MASK);
 223              		.loc 1 169 0
 224 0010 A4B2     		uxth	r4, r4
 225              	.LVL12:
 226 0012 9C81     		strh	r4, [r3, #12]	@ movhi
 170:Libraries/FWlib/src/stm32f10x_rtc.c ****   RTC_ExitConfigMode();
 227              		.loc 1 170 0
 228 0014 FFF7FEFF 		bl	RTC_ExitConfigMode
 229              	.LVL13:
 230 0018 10BD     		pop	{r4, pc}
 231              	.L23:
 232 001a 00BF     		.align	2
 233              	.L22:
 234 001c 00280040 		.word	1073752064
 235              		.cfi_endproc
 236              	.LFE34:
 238              		.section	.text.RTC_SetAlarm,"ax",%progbits
 239              		.align	1
 240              		.global	RTC_SetAlarm
ARM GAS  /tmp/ccdFaGN6.s 			page 8


 241              		.syntax unified
 242              		.thumb
 243              		.thumb_func
 244              		.fpu softvfp
 246              	RTC_SetAlarm:
 247              	.LFB35:
 171:Libraries/FWlib/src/stm32f10x_rtc.c **** }
 172:Libraries/FWlib/src/stm32f10x_rtc.c **** 
 173:Libraries/FWlib/src/stm32f10x_rtc.c **** /**
 174:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @brief  Sets the RTC alarm value.
 175:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @param  AlarmValue: RTC alarm new value.
 176:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @retval None
 177:Libraries/FWlib/src/stm32f10x_rtc.c ****   */
 178:Libraries/FWlib/src/stm32f10x_rtc.c **** void RTC_SetAlarm(uint32_t AlarmValue)
 179:Libraries/FWlib/src/stm32f10x_rtc.c **** {  
 248              		.loc 1 179 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252              	.LVL14:
 253 0000 10B5     		push	{r4, lr}
 254              	.LCFI2:
 255              		.cfi_def_cfa_offset 8
 256              		.cfi_offset 4, -8
 257              		.cfi_offset 14, -4
 258 0002 0446     		mov	r4, r0
 180:Libraries/FWlib/src/stm32f10x_rtc.c ****   RTC_EnterConfigMode();
 259              		.loc 1 180 0
 260 0004 FFF7FEFF 		bl	RTC_EnterConfigMode
 261              	.LVL15:
 181:Libraries/FWlib/src/stm32f10x_rtc.c ****   /* Set the ALARM MSB word */
 182:Libraries/FWlib/src/stm32f10x_rtc.c ****   RTC->ALRH = AlarmValue >> 16;
 262              		.loc 1 182 0
 263 0008 220C     		lsrs	r2, r4, #16
 264 000a 034B     		ldr	r3, .L26
 265 000c 1A84     		strh	r2, [r3, #32]	@ movhi
 183:Libraries/FWlib/src/stm32f10x_rtc.c ****   /* Set the ALARM LSB word */
 184:Libraries/FWlib/src/stm32f10x_rtc.c ****   RTC->ALRL = (AlarmValue & RTC_LSB_MASK);
 266              		.loc 1 184 0
 267 000e A4B2     		uxth	r4, r4
 268              	.LVL16:
 269 0010 9C84     		strh	r4, [r3, #36]	@ movhi
 185:Libraries/FWlib/src/stm32f10x_rtc.c ****   RTC_ExitConfigMode();
 270              		.loc 1 185 0
 271 0012 FFF7FEFF 		bl	RTC_ExitConfigMode
 272              	.LVL17:
 273 0016 10BD     		pop	{r4, pc}
 274              	.L27:
 275              		.align	2
 276              	.L26:
 277 0018 00280040 		.word	1073752064
 278              		.cfi_endproc
 279              	.LFE35:
 281              		.section	.text.RTC_GetDivider,"ax",%progbits
 282              		.align	1
 283              		.global	RTC_GetDivider
 284              		.syntax unified
ARM GAS  /tmp/ccdFaGN6.s 			page 9


 285              		.thumb
 286              		.thumb_func
 287              		.fpu softvfp
 289              	RTC_GetDivider:
 290              	.LFB36:
 186:Libraries/FWlib/src/stm32f10x_rtc.c **** }
 187:Libraries/FWlib/src/stm32f10x_rtc.c **** 
 188:Libraries/FWlib/src/stm32f10x_rtc.c **** /**
 189:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @brief  Gets the RTC divider value.
 190:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @param  None
 191:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @retval RTC Divider value.
 192:Libraries/FWlib/src/stm32f10x_rtc.c ****   */
 193:Libraries/FWlib/src/stm32f10x_rtc.c **** uint32_t RTC_GetDivider(void)
 194:Libraries/FWlib/src/stm32f10x_rtc.c **** {
 291              		.loc 1 194 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		@ link register save eliminated.
 296              	.LVL18:
 195:Libraries/FWlib/src/stm32f10x_rtc.c ****   uint32_t tmp = 0x00;
 196:Libraries/FWlib/src/stm32f10x_rtc.c ****   tmp = ((uint32_t)RTC->DIVH & (uint32_t)0x000F) << 16;
 297              		.loc 1 196 0
 298 0000 044A     		ldr	r2, .L29
 299 0002 138A     		ldrh	r3, [r2, #16]
 300 0004 1B04     		lsls	r3, r3, #16
 301 0006 03F47023 		and	r3, r3, #983040
 302              	.LVL19:
 197:Libraries/FWlib/src/stm32f10x_rtc.c ****   tmp |= RTC->DIVL;
 303              		.loc 1 197 0
 304 000a 908A     		ldrh	r0, [r2, #20]
 305 000c 80B2     		uxth	r0, r0
 306              	.LVL20:
 198:Libraries/FWlib/src/stm32f10x_rtc.c ****   return tmp;
 199:Libraries/FWlib/src/stm32f10x_rtc.c **** }
 307              		.loc 1 199 0
 308 000e 1843     		orrs	r0, r0, r3
 309              	.LVL21:
 310 0010 7047     		bx	lr
 311              	.L30:
 312 0012 00BF     		.align	2
 313              	.L29:
 314 0014 00280040 		.word	1073752064
 315              		.cfi_endproc
 316              	.LFE36:
 318              		.section	.text.RTC_WaitForLastTask,"ax",%progbits
 319              		.align	1
 320              		.global	RTC_WaitForLastTask
 321              		.syntax unified
 322              		.thumb
 323              		.thumb_func
 324              		.fpu softvfp
 326              	RTC_WaitForLastTask:
 327              	.LFB37:
 200:Libraries/FWlib/src/stm32f10x_rtc.c **** 
 201:Libraries/FWlib/src/stm32f10x_rtc.c **** /**
 202:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @brief  Waits until last write operation on RTC registers has finished.
ARM GAS  /tmp/ccdFaGN6.s 			page 10


 203:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @note   This function must be called before any write to RTC registers.
 204:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @param  None
 205:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @retval None
 206:Libraries/FWlib/src/stm32f10x_rtc.c ****   */
 207:Libraries/FWlib/src/stm32f10x_rtc.c **** void RTC_WaitForLastTask(void)
 208:Libraries/FWlib/src/stm32f10x_rtc.c **** {
 328              		.loc 1 208 0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332              		@ link register save eliminated.
 333              	.L32:
 209:Libraries/FWlib/src/stm32f10x_rtc.c ****   /* Loop until RTOFF flag is set */
 210:Libraries/FWlib/src/stm32f10x_rtc.c ****   while ((RTC->CRL & RTC_FLAG_RTOFF) == (uint16_t)RESET)
 334              		.loc 1 210 0 discriminator 1
 335 0000 024B     		ldr	r3, .L33
 336 0002 9B88     		ldrh	r3, [r3, #4]
 337 0004 13F0200F 		tst	r3, #32
 338 0008 FAD0     		beq	.L32
 211:Libraries/FWlib/src/stm32f10x_rtc.c ****   {
 212:Libraries/FWlib/src/stm32f10x_rtc.c ****   }
 213:Libraries/FWlib/src/stm32f10x_rtc.c **** }
 339              		.loc 1 213 0
 340 000a 7047     		bx	lr
 341              	.L34:
 342              		.align	2
 343              	.L33:
 344 000c 00280040 		.word	1073752064
 345              		.cfi_endproc
 346              	.LFE37:
 348              		.section	.text.RTC_WaitForSynchro,"ax",%progbits
 349              		.align	1
 350              		.global	RTC_WaitForSynchro
 351              		.syntax unified
 352              		.thumb
 353              		.thumb_func
 354              		.fpu softvfp
 356              	RTC_WaitForSynchro:
 357              	.LFB38:
 214:Libraries/FWlib/src/stm32f10x_rtc.c **** 
 215:Libraries/FWlib/src/stm32f10x_rtc.c **** /**
 216:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @brief  Waits until the RTC registers (RTC_CNT, RTC_ALR and RTC_PRL)
 217:Libraries/FWlib/src/stm32f10x_rtc.c ****   *   are synchronized with RTC APB clock.
 218:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @note   This function must be called before any read operation after an APB reset
 219:Libraries/FWlib/src/stm32f10x_rtc.c ****   *   or an APB clock stop.
 220:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @param  None
 221:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @retval None
 222:Libraries/FWlib/src/stm32f10x_rtc.c ****   */
 223:Libraries/FWlib/src/stm32f10x_rtc.c **** void RTC_WaitForSynchro(void)
 224:Libraries/FWlib/src/stm32f10x_rtc.c **** {
 358              		.loc 1 224 0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 0, uses_anonymous_args = 0
 362              		@ link register save eliminated.
 225:Libraries/FWlib/src/stm32f10x_rtc.c ****   /* Clear RSF flag */
 226:Libraries/FWlib/src/stm32f10x_rtc.c ****   RTC->CRL &= (uint16_t)~RTC_FLAG_RSF;
ARM GAS  /tmp/ccdFaGN6.s 			page 11


 363              		.loc 1 226 0
 364 0000 064A     		ldr	r2, .L37
 365 0002 9388     		ldrh	r3, [r2, #4]
 366 0004 9BB2     		uxth	r3, r3
 367 0006 23F00803 		bic	r3, r3, #8
 368 000a 9BB2     		uxth	r3, r3
 369 000c 9380     		strh	r3, [r2, #4]	@ movhi
 370              	.L36:
 227:Libraries/FWlib/src/stm32f10x_rtc.c ****   /* Loop until RSF flag is set */
 228:Libraries/FWlib/src/stm32f10x_rtc.c ****   while ((RTC->CRL & RTC_FLAG_RSF) == (uint16_t)RESET)
 371              		.loc 1 228 0 discriminator 1
 372 000e 034B     		ldr	r3, .L37
 373 0010 9B88     		ldrh	r3, [r3, #4]
 374 0012 13F0080F 		tst	r3, #8
 375 0016 FAD0     		beq	.L36
 229:Libraries/FWlib/src/stm32f10x_rtc.c ****   {
 230:Libraries/FWlib/src/stm32f10x_rtc.c ****   }
 231:Libraries/FWlib/src/stm32f10x_rtc.c **** }
 376              		.loc 1 231 0
 377 0018 7047     		bx	lr
 378              	.L38:
 379 001a 00BF     		.align	2
 380              	.L37:
 381 001c 00280040 		.word	1073752064
 382              		.cfi_endproc
 383              	.LFE38:
 385              		.section	.text.RTC_GetFlagStatus,"ax",%progbits
 386              		.align	1
 387              		.global	RTC_GetFlagStatus
 388              		.syntax unified
 389              		.thumb
 390              		.thumb_func
 391              		.fpu softvfp
 393              	RTC_GetFlagStatus:
 394              	.LFB39:
 232:Libraries/FWlib/src/stm32f10x_rtc.c **** 
 233:Libraries/FWlib/src/stm32f10x_rtc.c **** /**
 234:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @brief  Checks whether the specified RTC flag is set or not.
 235:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @param  RTC_FLAG: specifies the flag to check.
 236:Libraries/FWlib/src/stm32f10x_rtc.c ****   *   This parameter can be one the following values:
 237:Libraries/FWlib/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_RTOFF: RTC Operation OFF flag
 238:Libraries/FWlib/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_RSF: Registers Synchronized flag
 239:Libraries/FWlib/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_OW: Overflow flag
 240:Libraries/FWlib/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_ALR: Alarm flag
 241:Libraries/FWlib/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_SEC: Second flag
 242:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @retval The new state of RTC_FLAG (SET or RESET).
 243:Libraries/FWlib/src/stm32f10x_rtc.c ****   */
 244:Libraries/FWlib/src/stm32f10x_rtc.c **** FlagStatus RTC_GetFlagStatus(uint16_t RTC_FLAG)
 245:Libraries/FWlib/src/stm32f10x_rtc.c **** {
 395              		.loc 1 245 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399              		@ link register save eliminated.
 400              	.LVL22:
 246:Libraries/FWlib/src/stm32f10x_rtc.c ****   FlagStatus bitstatus = RESET;
 247:Libraries/FWlib/src/stm32f10x_rtc.c ****   
ARM GAS  /tmp/ccdFaGN6.s 			page 12


 248:Libraries/FWlib/src/stm32f10x_rtc.c ****   /* Check the parameters */
 249:Libraries/FWlib/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_GET_FLAG(RTC_FLAG)); 
 250:Libraries/FWlib/src/stm32f10x_rtc.c ****   
 251:Libraries/FWlib/src/stm32f10x_rtc.c ****   if ((RTC->CRL & RTC_FLAG) != (uint16_t)RESET)
 401              		.loc 1 251 0
 402 0000 034B     		ldr	r3, .L43
 403 0002 9B88     		ldrh	r3, [r3, #4]
 404 0004 1842     		tst	r0, r3
 405 0006 01D1     		bne	.L42
 252:Libraries/FWlib/src/stm32f10x_rtc.c ****   {
 253:Libraries/FWlib/src/stm32f10x_rtc.c ****     bitstatus = SET;
 254:Libraries/FWlib/src/stm32f10x_rtc.c ****   }
 255:Libraries/FWlib/src/stm32f10x_rtc.c ****   else
 256:Libraries/FWlib/src/stm32f10x_rtc.c ****   {
 257:Libraries/FWlib/src/stm32f10x_rtc.c ****     bitstatus = RESET;
 406              		.loc 1 257 0
 407 0008 0020     		movs	r0, #0
 408              	.LVL23:
 258:Libraries/FWlib/src/stm32f10x_rtc.c ****   }
 259:Libraries/FWlib/src/stm32f10x_rtc.c ****   return bitstatus;
 260:Libraries/FWlib/src/stm32f10x_rtc.c **** }
 409              		.loc 1 260 0
 410 000a 7047     		bx	lr
 411              	.LVL24:
 412              	.L42:
 253:Libraries/FWlib/src/stm32f10x_rtc.c ****   }
 413              		.loc 1 253 0
 414 000c 0120     		movs	r0, #1
 415              	.LVL25:
 416 000e 7047     		bx	lr
 417              	.L44:
 418              		.align	2
 419              	.L43:
 420 0010 00280040 		.word	1073752064
 421              		.cfi_endproc
 422              	.LFE39:
 424              		.section	.text.RTC_ClearFlag,"ax",%progbits
 425              		.align	1
 426              		.global	RTC_ClearFlag
 427              		.syntax unified
 428              		.thumb
 429              		.thumb_func
 430              		.fpu softvfp
 432              	RTC_ClearFlag:
 433              	.LFB40:
 261:Libraries/FWlib/src/stm32f10x_rtc.c **** 
 262:Libraries/FWlib/src/stm32f10x_rtc.c **** /**
 263:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @brief  Clears the RTC's pending flags.
 264:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @param  RTC_FLAG: specifies the flag to clear.
 265:Libraries/FWlib/src/stm32f10x_rtc.c ****   *   This parameter can be any combination of the following values:
 266:Libraries/FWlib/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_RSF: Registers Synchronized flag. This flag is cleared only after
 267:Libraries/FWlib/src/stm32f10x_rtc.c ****   *                        an APB reset or an APB Clock stop.
 268:Libraries/FWlib/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_OW: Overflow flag
 269:Libraries/FWlib/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_ALR: Alarm flag
 270:Libraries/FWlib/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_SEC: Second flag
 271:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @retval None
 272:Libraries/FWlib/src/stm32f10x_rtc.c ****   */
ARM GAS  /tmp/ccdFaGN6.s 			page 13


 273:Libraries/FWlib/src/stm32f10x_rtc.c **** void RTC_ClearFlag(uint16_t RTC_FLAG)
 274:Libraries/FWlib/src/stm32f10x_rtc.c **** {
 434              		.loc 1 274 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              		@ link register save eliminated.
 439              	.LVL26:
 275:Libraries/FWlib/src/stm32f10x_rtc.c ****   /* Check the parameters */
 276:Libraries/FWlib/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_CLEAR_FLAG(RTC_FLAG)); 
 277:Libraries/FWlib/src/stm32f10x_rtc.c ****     
 278:Libraries/FWlib/src/stm32f10x_rtc.c ****   /* Clear the corresponding RTC flag */
 279:Libraries/FWlib/src/stm32f10x_rtc.c ****   RTC->CRL &= (uint16_t)~RTC_FLAG;
 440              		.loc 1 279 0
 441 0000 034B     		ldr	r3, .L46
 442 0002 9A88     		ldrh	r2, [r3, #4]
 443 0004 C043     		mvns	r0, r0
 444              	.LVL27:
 445 0006 80B2     		uxth	r0, r0
 446 0008 1040     		ands	r0, r0, r2
 447 000a 9880     		strh	r0, [r3, #4]	@ movhi
 448 000c 7047     		bx	lr
 449              	.L47:
 450 000e 00BF     		.align	2
 451              	.L46:
 452 0010 00280040 		.word	1073752064
 453              		.cfi_endproc
 454              	.LFE40:
 456              		.section	.text.RTC_GetITStatus,"ax",%progbits
 457              		.align	1
 458              		.global	RTC_GetITStatus
 459              		.syntax unified
 460              		.thumb
 461              		.thumb_func
 462              		.fpu softvfp
 464              	RTC_GetITStatus:
 465              	.LFB41:
 280:Libraries/FWlib/src/stm32f10x_rtc.c **** }
 281:Libraries/FWlib/src/stm32f10x_rtc.c **** 
 282:Libraries/FWlib/src/stm32f10x_rtc.c **** /**
 283:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @brief  Checks whether the specified RTC interrupt has occurred or not.
 284:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @param  RTC_IT: specifies the RTC interrupts sources to check.
 285:Libraries/FWlib/src/stm32f10x_rtc.c ****   *   This parameter can be one of the following values:
 286:Libraries/FWlib/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_OW: Overflow interrupt
 287:Libraries/FWlib/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_ALR: Alarm interrupt
 288:Libraries/FWlib/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_SEC: Second interrupt
 289:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @retval The new state of the RTC_IT (SET or RESET).
 290:Libraries/FWlib/src/stm32f10x_rtc.c ****   */
 291:Libraries/FWlib/src/stm32f10x_rtc.c **** ITStatus RTC_GetITStatus(uint16_t RTC_IT)
 292:Libraries/FWlib/src/stm32f10x_rtc.c **** {
 466              		.loc 1 292 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              		@ link register save eliminated.
 471              	.LVL28:
 293:Libraries/FWlib/src/stm32f10x_rtc.c ****   ITStatus bitstatus = RESET;
ARM GAS  /tmp/ccdFaGN6.s 			page 14


 294:Libraries/FWlib/src/stm32f10x_rtc.c ****   /* Check the parameters */
 295:Libraries/FWlib/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_GET_IT(RTC_IT)); 
 296:Libraries/FWlib/src/stm32f10x_rtc.c ****   
 297:Libraries/FWlib/src/stm32f10x_rtc.c ****   bitstatus = (ITStatus)(RTC->CRL & RTC_IT);
 472              		.loc 1 297 0
 473 0000 064A     		ldr	r2, .L52
 474 0002 9188     		ldrh	r1, [r2, #4]
 475 0004 C3B2     		uxtb	r3, r0
 476 0006 0B40     		ands	r3, r3, r1
 477              	.LVL29:
 298:Libraries/FWlib/src/stm32f10x_rtc.c ****   if (((RTC->CRH & RTC_IT) != (uint16_t)RESET) && (bitstatus != (uint16_t)RESET))
 478              		.loc 1 298 0
 479 0008 1288     		ldrh	r2, [r2]
 480 000a 1042     		tst	r0, r2
 481 000c 02D0     		beq	.L50
 482              		.loc 1 298 0 is_stmt 0 discriminator 1
 483 000e 1BB9     		cbnz	r3, .L51
 299:Libraries/FWlib/src/stm32f10x_rtc.c ****   {
 300:Libraries/FWlib/src/stm32f10x_rtc.c ****     bitstatus = SET;
 301:Libraries/FWlib/src/stm32f10x_rtc.c ****   }
 302:Libraries/FWlib/src/stm32f10x_rtc.c ****   else
 303:Libraries/FWlib/src/stm32f10x_rtc.c ****   {
 304:Libraries/FWlib/src/stm32f10x_rtc.c ****     bitstatus = RESET;
 484              		.loc 1 304 0 is_stmt 1
 485 0010 0020     		movs	r0, #0
 486              	.LVL30:
 487 0012 7047     		bx	lr
 488              	.LVL31:
 489              	.L50:
 490 0014 0020     		movs	r0, #0
 491              	.LVL32:
 492 0016 7047     		bx	lr
 493              	.LVL33:
 494              	.L51:
 300:Libraries/FWlib/src/stm32f10x_rtc.c ****   }
 495              		.loc 1 300 0
 496 0018 0120     		movs	r0, #1
 497              	.LVL34:
 305:Libraries/FWlib/src/stm32f10x_rtc.c ****   }
 306:Libraries/FWlib/src/stm32f10x_rtc.c ****   return bitstatus;
 307:Libraries/FWlib/src/stm32f10x_rtc.c **** }
 498              		.loc 1 307 0
 499 001a 7047     		bx	lr
 500              	.L53:
 501              		.align	2
 502              	.L52:
 503 001c 00280040 		.word	1073752064
 504              		.cfi_endproc
 505              	.LFE41:
 507              		.section	.text.RTC_ClearITPendingBit,"ax",%progbits
 508              		.align	1
 509              		.global	RTC_ClearITPendingBit
 510              		.syntax unified
 511              		.thumb
 512              		.thumb_func
 513              		.fpu softvfp
 515              	RTC_ClearITPendingBit:
ARM GAS  /tmp/ccdFaGN6.s 			page 15


 516              	.LFB42:
 308:Libraries/FWlib/src/stm32f10x_rtc.c **** 
 309:Libraries/FWlib/src/stm32f10x_rtc.c **** /**
 310:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @brief  Clears the RTC's interrupt pending bits.
 311:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @param  RTC_IT: specifies the interrupt pending bit to clear.
 312:Libraries/FWlib/src/stm32f10x_rtc.c ****   *   This parameter can be any combination of the following values:
 313:Libraries/FWlib/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_OW: Overflow interrupt
 314:Libraries/FWlib/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_ALR: Alarm interrupt
 315:Libraries/FWlib/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_SEC: Second interrupt
 316:Libraries/FWlib/src/stm32f10x_rtc.c ****   * @retval None
 317:Libraries/FWlib/src/stm32f10x_rtc.c ****   */
 318:Libraries/FWlib/src/stm32f10x_rtc.c **** void RTC_ClearITPendingBit(uint16_t RTC_IT)
 319:Libraries/FWlib/src/stm32f10x_rtc.c **** {
 517              		.loc 1 319 0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 0
 520              		@ frame_needed = 0, uses_anonymous_args = 0
 521              		@ link register save eliminated.
 522              	.LVL35:
 320:Libraries/FWlib/src/stm32f10x_rtc.c ****   /* Check the parameters */
 321:Libraries/FWlib/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_IT(RTC_IT));  
 322:Libraries/FWlib/src/stm32f10x_rtc.c ****   
 323:Libraries/FWlib/src/stm32f10x_rtc.c ****   /* Clear the corresponding RTC pending bit */
 324:Libraries/FWlib/src/stm32f10x_rtc.c ****   RTC->CRL &= (uint16_t)~RTC_IT;
 523              		.loc 1 324 0
 524 0000 034B     		ldr	r3, .L55
 525 0002 9A88     		ldrh	r2, [r3, #4]
 526 0004 C043     		mvns	r0, r0
 527              	.LVL36:
 528 0006 80B2     		uxth	r0, r0
 529 0008 1040     		ands	r0, r0, r2
 530 000a 9880     		strh	r0, [r3, #4]	@ movhi
 531 000c 7047     		bx	lr
 532              	.L56:
 533 000e 00BF     		.align	2
 534              	.L55:
 535 0010 00280040 		.word	1073752064
 536              		.cfi_endproc
 537              	.LFE42:
 539              		.text
 540              	.Letext0:
 541              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 542              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 543              		.file 4 "Libraries/CMSIS/core_cm3.h"
 544              		.file 5 "Libraries/CMSIS/system_stm32f10x.h"
 545              		.file 6 "Libraries/CMSIS/stm32f10x.h"
ARM GAS  /tmp/ccdFaGN6.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f10x_rtc.c
     /tmp/ccdFaGN6.s:16     .text.RTC_ITConfig:0000000000000000 $t
     /tmp/ccdFaGN6.s:23     .text.RTC_ITConfig:0000000000000000 RTC_ITConfig
     /tmp/ccdFaGN6.s:56     .text.RTC_ITConfig:000000000000001c $d
     /tmp/ccdFaGN6.s:61     .text.RTC_EnterConfigMode:0000000000000000 $t
     /tmp/ccdFaGN6.s:68     .text.RTC_EnterConfigMode:0000000000000000 RTC_EnterConfigMode
     /tmp/ccdFaGN6.s:85     .text.RTC_EnterConfigMode:0000000000000010 $d
     /tmp/ccdFaGN6.s:90     .text.RTC_ExitConfigMode:0000000000000000 $t
     /tmp/ccdFaGN6.s:97     .text.RTC_ExitConfigMode:0000000000000000 RTC_ExitConfigMode
     /tmp/ccdFaGN6.s:115    .text.RTC_ExitConfigMode:0000000000000010 $d
     /tmp/ccdFaGN6.s:120    .text.RTC_GetCounter:0000000000000000 $t
     /tmp/ccdFaGN6.s:127    .text.RTC_GetCounter:0000000000000000 RTC_GetCounter
     /tmp/ccdFaGN6.s:148    .text.RTC_GetCounter:0000000000000010 $d
     /tmp/ccdFaGN6.s:153    .text.RTC_SetCounter:0000000000000000 $t
     /tmp/ccdFaGN6.s:160    .text.RTC_SetCounter:0000000000000000 RTC_SetCounter
     /tmp/ccdFaGN6.s:191    .text.RTC_SetCounter:0000000000000018 $d
     /tmp/ccdFaGN6.s:196    .text.RTC_SetPrescaler:0000000000000000 $t
     /tmp/ccdFaGN6.s:203    .text.RTC_SetPrescaler:0000000000000000 RTC_SetPrescaler
     /tmp/ccdFaGN6.s:234    .text.RTC_SetPrescaler:000000000000001c $d
     /tmp/ccdFaGN6.s:239    .text.RTC_SetAlarm:0000000000000000 $t
     /tmp/ccdFaGN6.s:246    .text.RTC_SetAlarm:0000000000000000 RTC_SetAlarm
     /tmp/ccdFaGN6.s:277    .text.RTC_SetAlarm:0000000000000018 $d
     /tmp/ccdFaGN6.s:282    .text.RTC_GetDivider:0000000000000000 $t
     /tmp/ccdFaGN6.s:289    .text.RTC_GetDivider:0000000000000000 RTC_GetDivider
     /tmp/ccdFaGN6.s:314    .text.RTC_GetDivider:0000000000000014 $d
     /tmp/ccdFaGN6.s:319    .text.RTC_WaitForLastTask:0000000000000000 $t
     /tmp/ccdFaGN6.s:326    .text.RTC_WaitForLastTask:0000000000000000 RTC_WaitForLastTask
     /tmp/ccdFaGN6.s:344    .text.RTC_WaitForLastTask:000000000000000c $d
     /tmp/ccdFaGN6.s:349    .text.RTC_WaitForSynchro:0000000000000000 $t
     /tmp/ccdFaGN6.s:356    .text.RTC_WaitForSynchro:0000000000000000 RTC_WaitForSynchro
     /tmp/ccdFaGN6.s:381    .text.RTC_WaitForSynchro:000000000000001c $d
     /tmp/ccdFaGN6.s:386    .text.RTC_GetFlagStatus:0000000000000000 $t
     /tmp/ccdFaGN6.s:393    .text.RTC_GetFlagStatus:0000000000000000 RTC_GetFlagStatus
     /tmp/ccdFaGN6.s:420    .text.RTC_GetFlagStatus:0000000000000010 $d
     /tmp/ccdFaGN6.s:425    .text.RTC_ClearFlag:0000000000000000 $t
     /tmp/ccdFaGN6.s:432    .text.RTC_ClearFlag:0000000000000000 RTC_ClearFlag
     /tmp/ccdFaGN6.s:452    .text.RTC_ClearFlag:0000000000000010 $d
     /tmp/ccdFaGN6.s:457    .text.RTC_GetITStatus:0000000000000000 $t
     /tmp/ccdFaGN6.s:464    .text.RTC_GetITStatus:0000000000000000 RTC_GetITStatus
     /tmp/ccdFaGN6.s:503    .text.RTC_GetITStatus:000000000000001c $d
     /tmp/ccdFaGN6.s:508    .text.RTC_ClearITPendingBit:0000000000000000 $t
     /tmp/ccdFaGN6.s:515    .text.RTC_ClearITPendingBit:0000000000000000 RTC_ClearITPendingBit
     /tmp/ccdFaGN6.s:535    .text.RTC_ClearITPendingBit:0000000000000010 $d
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
