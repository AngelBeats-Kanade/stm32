ARM GAS  /tmp/ccwUBerI.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_hal_nand.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_NAND_MspInit,"ax",%progbits
  16              		.align	1
  17              		.weak	HAL_NAND_MspInit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_NAND_MspInit:
  24              	.LFB66:
  25              		.file 1 "Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c"
   1:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
   2:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   ******************************************************************************
   3:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @file    stm32f1xx_hal_nand.c
   4:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @author  MCD Application Team
   5:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @version V1.1.1
   6:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @date    12-May-2017
   7:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief   NAND HAL module driver.
   8:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *          This file provides a generic firmware to drive NAND memories mounted 
   9:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *          as external device.
  10:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *         
  11:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   @verbatim
  12:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   ==============================================================================
  13:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****                          ##### How to use this driver #####
  14:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   ==============================================================================    
  15:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     [..]
  16:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       This driver is a generic layered driver which contains a set of APIs used to 
  17:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       control NAND flash memories. It uses the FSMC layer functions to interface 
  18:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       with NAND devices. This driver is used as follows:
  19:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
  20:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       (+) NAND flash memory configuration sequence using the function HAL_NAND_Init() 
  21:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****           with control and timing parameters for both common and attribute spaces.
  22:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****             
  23:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       (+) Read NAND flash memory maker and device IDs using the function
  24:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****           HAL_NAND_Read_ID(). The read information is stored in the NAND_ID_TypeDef 
  25:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****           structure declared by the function caller. 
  26:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         
  27:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       (+) Access NAND flash memory by read/write operations using the functions
  28:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****           HAL_NAND_Read_Page_8b()/HAL_NAND_Read_SpareArea_8b(), 
  29:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****           HAL_NAND_Write_Page_8b()/HAL_NAND_Write_SpareArea_8b(),
  30:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****           HAL_NAND_Read_Page_16b()/HAL_NAND_Read_SpareArea_16b(), 
  31:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****           HAL_NAND_Write_Page_16b()/HAL_NAND_Write_SpareArea_16b()
  32:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****           to read/write page(s)/spare area(s). These functions use specific device 
  33:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****           information (Block, page size..) predefined by the user in the NAND_DeviceConfigTypeDef 
ARM GAS  /tmp/ccwUBerI.s 			page 2


  34:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****           structure. The read/write address information is contained by the Nand_Address_Typedef
  35:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****           structure passed as parameter.
  36:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         
  37:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       (+) Perform NAND flash Reset chip operation using the function HAL_NAND_Reset().
  38:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         
  39:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       (+) Perform NAND flash erase block operation using the function HAL_NAND_Erase_Block().
  40:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****           The erase block address information is contained in the Nand_Address_Typedef 
  41:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****           structure passed as parameter.
  42:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
  43:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       (+) Read the NAND flash status operation using the function HAL_NAND_Read_Status().
  44:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         
  45:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       (+) You can also control the NAND device by calling the control APIs HAL_NAND_ECC_Enable()/
  46:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****           HAL_NAND_ECC_Disable() to respectively enable/disable the ECC code correction
  47:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****           feature or the function HAL_NAND_GetECC() to get the ECC correction code. 
  48:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****        
  49:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       (+) You can monitor the NAND device HAL state by calling the function
  50:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****           HAL_NAND_GetState()  
  51:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
  52:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     [..]
  53:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       (@) This driver is a set of generic APIs which handle standard NAND flash operations.
  54:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****           If a NAND flash device contains different operations and/or implementations, 
  55:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****           it should be implemented separately.
  56:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
  57:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   @endverbatim
  58:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   ******************************************************************************
  59:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @attention
  60:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *
  61:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  62:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *
  63:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * Redistribution and use in source and binary forms, with or without modification,
  64:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * are permitted provided that the following conditions are met:
  65:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  66:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *      this list of conditions and the following disclaimer.
  67:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  68:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *      this list of conditions and the following disclaimer in the documentation
  69:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *      and/or other materials provided with the distribution.
  70:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  71:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *      may be used to endorse or promote products derived from this software
  72:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *      without specific prior written permission.
  73:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *
  74:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  75:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  76:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  77:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  78:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  79:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  80:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  81:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  82:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  83:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  84:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *
  85:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   ******************************************************************************
  86:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */ 
  87:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
  88:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /* Includes ------------------------------------------------------------------*/
  89:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** #include "stm32f1xx_hal.h"
  90:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
ARM GAS  /tmp/ccwUBerI.s 			page 3


  91:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /** @addtogroup STM32F1xx_HAL_Driver
  92:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @{
  93:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
  94:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
  95:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** #ifdef HAL_NAND_MODULE_ENABLED
  96:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
  97:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** #if defined (STM32F101xE) || defined(STM32F103xE) || defined(STM32F101xG) || defined(STM32F103xG)
  98:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
  99:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /** @defgroup NAND NAND
 100:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief NAND HAL module driver
 101:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @{
 102:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
 103:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 104:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /* Private typedef -----------------------------------------------------------*/
 105:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /* Private define ------------------------------------------------------------*/
 106:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /** @defgroup NAND_Private_Constants NAND Private Constants
 107:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @{
 108:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
 109:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 110:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
 111:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @}
 112:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
 113:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 114:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /* Private macro -------------------------------------------------------------*/    
 115:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /** @defgroup NAND_Private_Macros NAND Private Macros
 116:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @{
 117:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
 118:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 119:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
 120:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @}
 121:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
 122:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 123:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /* Private variables ---------------------------------------------------------*/
 124:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /* Private function prototypes -----------------------------------------------*/
 125:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /* Exported functions --------------------------------------------------------*/
 126:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /** @defgroup NAND_Exported_Functions NAND Exported Functions
 127:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @{
 128:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
 129:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 130:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /** @defgroup NAND_Exported_Functions_Group1 Initialization and de-initialization functions 
 131:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief    Initialization and Configuration functions 
 132:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *
 133:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   @verbatim    
 134:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   ==============================================================================
 135:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****             ##### NAND Initialization and de-initialization functions #####
 136:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   ==============================================================================
 137:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   [..]  
 138:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     This section provides functions allowing to initialize/de-initialize
 139:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     the NAND memory
 140:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 141:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** @endverbatim
 142:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @{
 143:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
 144:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 145:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
 146:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief  Perform NAND memory Initialization sequence
 147:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  hnand: pointer to a NAND_HandleTypeDef structure that contains
ARM GAS  /tmp/ccwUBerI.s 			page 4


 148:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *                the configuration information for NAND module.
 149:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  ComSpace_Timing: pointer to Common space timing structure
 150:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  AttSpace_Timing: pointer to Attribute space timing structure
 151:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @retval HAL status
 152:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
 153:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** HAL_StatusTypeDef  HAL_NAND_Init(NAND_HandleTypeDef *hnand, FSMC_NAND_PCC_TimingTypeDef *ComSpace_T
 154:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** {
 155:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Check the NAND handle state */
 156:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand == NULL)
 157:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 158:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****      return HAL_ERROR;
 159:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 160:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 161:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_RESET)
 162:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 163:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Allocate lock resource and initialize it */
 164:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     hnand->Lock = HAL_UNLOCKED;
 165:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Initialize the low level hardware (MSP) */
 166:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     HAL_NAND_MspInit(hnand);
 167:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   } 
 168:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 169:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Initialize NAND control Interface */
 170:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   FSMC_NAND_Init(hnand->Instance, &(hnand->Init));
 171:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 172:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Initialize NAND common space timing Interface */  
 173:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   FSMC_NAND_CommonSpace_Timing_Init(hnand->Instance, ComSpace_Timing, hnand->Init.NandBank);
 174:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 175:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Initialize NAND attribute space timing Interface */  
 176:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   FSMC_NAND_AttributeSpace_Timing_Init(hnand->Instance, AttSpace_Timing, hnand->Init.NandBank);
 177:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 178:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Enable the NAND device */
 179:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __FSMC_NAND_ENABLE(hnand->Instance, hnand->Init.NandBank);
 180:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 181:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the NAND controller state */
 182:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
 183:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 184:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   return HAL_OK;
 185:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
 186:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 187:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
 188:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief  Perform NAND memory De-Initialization sequence
 189:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  hnand: pointer to a NAND_HandleTypeDef structure that contains
 190:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *                the configuration information for NAND module.
 191:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @retval HAL status
 192:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
 193:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_DeInit(NAND_HandleTypeDef *hnand)  
 194:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** {
 195:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Initialize the low level hardware (MSP) */
 196:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   HAL_NAND_MspDeInit(hnand);
 197:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 198:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Configure the NAND registers with their reset values */
 199:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   FSMC_NAND_DeInit(hnand->Instance, hnand->Init.NandBank);
 200:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 201:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Reset the NAND controller state */
 202:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_RESET;
 203:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 204:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Release Lock */
ARM GAS  /tmp/ccwUBerI.s 			page 5


 205:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __HAL_UNLOCK(hnand);
 206:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 207:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   return HAL_OK;
 208:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
 209:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 210:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
 211:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief  NAND MSP Init
 212:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  hnand: pointer to a NAND_HandleTypeDef structure that contains
 213:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *                the configuration information for NAND module.
 214:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @retval None
 215:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
 216:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** __weak void HAL_NAND_MspInit(NAND_HandleTypeDef *hnand)
 217:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** {
  26              		.loc 1 217 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  32 0000 7047     		bx	lr
  33              		.cfi_endproc
  34              	.LFE66:
  36              		.section	.text.HAL_NAND_Init,"ax",%progbits
  37              		.align	1
  38              		.global	HAL_NAND_Init
  39              		.syntax unified
  40              		.thumb
  41              		.thumb_func
  42              		.fpu softvfp
  44              	HAL_NAND_Init:
  45              	.LFB64:
 154:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Check the NAND handle state */
  46              		.loc 1 154 0
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 0
  49              		@ frame_needed = 0, uses_anonymous_args = 0
  50              	.LVL1:
 156:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
  51              		.loc 1 156 0
  52 0000 60B3     		cbz	r0, .L7
 154:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Check the NAND handle state */
  53              		.loc 1 154 0
  54 0002 70B5     		push	{r4, r5, r6, lr}
  55              	.LCFI0:
  56              		.cfi_def_cfa_offset 16
  57              		.cfi_offset 4, -16
  58              		.cfi_offset 5, -12
  59              		.cfi_offset 6, -8
  60              		.cfi_offset 14, -4
  61 0004 0446     		mov	r4, r0
  62 0006 1546     		mov	r5, r2
  63 0008 0E46     		mov	r6, r1
 161:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
  64              		.loc 1 161 0
  65 000a 90F82130 		ldrb	r3, [r0, #33]	@ zero_extendqisi2
  66 000e D3B1     		cbz	r3, .L12
  67              	.LVL2:
ARM GAS  /tmp/ccwUBerI.s 			page 6


  68              	.L4:
 170:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
  69              		.loc 1 170 0
  70 0010 211D     		adds	r1, r4, #4
  71 0012 2068     		ldr	r0, [r4]
  72 0014 FFF7FEFF 		bl	FSMC_NAND_Init
  73              	.LVL3:
 173:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
  74              		.loc 1 173 0
  75 0018 6268     		ldr	r2, [r4, #4]
  76 001a 3146     		mov	r1, r6
  77 001c 2068     		ldr	r0, [r4]
  78 001e FFF7FEFF 		bl	FSMC_NAND_CommonSpace_Timing_Init
  79              	.LVL4:
 176:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
  80              		.loc 1 176 0
  81 0022 6268     		ldr	r2, [r4, #4]
  82 0024 2946     		mov	r1, r5
  83 0026 2068     		ldr	r0, [r4]
  84 0028 FFF7FEFF 		bl	FSMC_NAND_AttributeSpace_Timing_Init
  85              	.LVL5:
 179:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
  86              		.loc 1 179 0
  87 002c 6368     		ldr	r3, [r4, #4]
  88 002e 102B     		cmp	r3, #16
  89 0030 0ED0     		beq	.L13
 179:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
  90              		.loc 1 179 0 is_stmt 0 discriminator 2
  91 0032 2268     		ldr	r2, [r4]
  92 0034 136A     		ldr	r3, [r2, #32]
  93 0036 43F00403 		orr	r3, r3, #4
  94 003a 1362     		str	r3, [r2, #32]
  95              	.L6:
 182:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
  96              		.loc 1 182 0 is_stmt 1
  97 003c 0123     		movs	r3, #1
  98 003e 84F82130 		strb	r3, [r4, #33]
 184:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
  99              		.loc 1 184 0
 100 0042 0020     		movs	r0, #0
 101 0044 70BD     		pop	{r4, r5, r6, pc}
 102              	.LVL6:
 103              	.L12:
 164:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Initialize the low level hardware (MSP) */
 104              		.loc 1 164 0
 105 0046 80F82030 		strb	r3, [r0, #32]
 166:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   } 
 106              		.loc 1 166 0
 107 004a FFF7FEFF 		bl	HAL_NAND_MspInit
 108              	.LVL7:
 109 004e DFE7     		b	.L4
 110              	.L13:
 179:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 111              		.loc 1 179 0 discriminator 1
 112 0050 2268     		ldr	r2, [r4]
 113 0052 1368     		ldr	r3, [r2]
 114 0054 43F00403 		orr	r3, r3, #4
ARM GAS  /tmp/ccwUBerI.s 			page 7


 115 0058 1360     		str	r3, [r2]
 116 005a EFE7     		b	.L6
 117              	.LVL8:
 118              	.L7:
 119              	.LCFI1:
 120              		.cfi_def_cfa_offset 0
 121              		.cfi_restore 4
 122              		.cfi_restore 5
 123              		.cfi_restore 6
 124              		.cfi_restore 14
 158:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 125              		.loc 1 158 0
 126 005c 0120     		movs	r0, #1
 127              	.LVL9:
 128 005e 7047     		bx	lr
 129              		.cfi_endproc
 130              	.LFE64:
 132              		.section	.text.HAL_NAND_MspDeInit,"ax",%progbits
 133              		.align	1
 134              		.weak	HAL_NAND_MspDeInit
 135              		.syntax unified
 136              		.thumb
 137              		.thumb_func
 138              		.fpu softvfp
 140              	HAL_NAND_MspDeInit:
 141              	.LFB67:
 218:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Prevent unused argument(s) compilation warning */
 219:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   UNUSED(hnand);
 220:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 221:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****             the HAL_NAND_MspInit could be implemented in the user file
 222:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****    */ 
 223:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
 224:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 225:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
 226:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief  NAND MSP DeInit
 227:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  hnand: pointer to a NAND_HandleTypeDef structure that contains
 228:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *                the configuration information for NAND module.
 229:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @retval None
 230:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
 231:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** __weak void HAL_NAND_MspDeInit(NAND_HandleTypeDef *hnand)
 232:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** {
 142              		.loc 1 232 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              		@ link register save eliminated.
 147              	.LVL10:
 148 0000 7047     		bx	lr
 149              		.cfi_endproc
 150              	.LFE67:
 152              		.section	.text.HAL_NAND_DeInit,"ax",%progbits
 153              		.align	1
 154              		.global	HAL_NAND_DeInit
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 158              		.fpu softvfp
ARM GAS  /tmp/ccwUBerI.s 			page 8


 160              	HAL_NAND_DeInit:
 161              	.LFB65:
 194:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Initialize the low level hardware (MSP) */
 162              		.loc 1 194 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              	.LVL11:
 194:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Initialize the low level hardware (MSP) */
 167              		.loc 1 194 0
 168 0000 10B5     		push	{r4, lr}
 169              	.LCFI2:
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 4, -8
 172              		.cfi_offset 14, -4
 173 0002 0446     		mov	r4, r0
 196:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 174              		.loc 1 196 0
 175 0004 FFF7FEFF 		bl	HAL_NAND_MspDeInit
 176              	.LVL12:
 199:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 177              		.loc 1 199 0
 178 0008 6168     		ldr	r1, [r4, #4]
 179 000a 2068     		ldr	r0, [r4]
 180 000c FFF7FEFF 		bl	FSMC_NAND_DeInit
 181              	.LVL13:
 202:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 182              		.loc 1 202 0
 183 0010 0020     		movs	r0, #0
 184 0012 84F82100 		strb	r0, [r4, #33]
 205:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 185              		.loc 1 205 0
 186 0016 84F82000 		strb	r0, [r4, #32]
 208:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 187              		.loc 1 208 0
 188 001a 10BD     		pop	{r4, pc}
 189              		.cfi_endproc
 190              	.LFE65:
 192              		.section	.text.HAL_NAND_ITCallback,"ax",%progbits
 193              		.align	1
 194              		.weak	HAL_NAND_ITCallback
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu softvfp
 200              	HAL_NAND_ITCallback:
 201              	.LFB69:
 233:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Prevent unused argument(s) compilation warning */
 234:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   UNUSED(hnand);
 235:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 236:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****             the HAL_NAND_MspDeInit could be implemented in the user file
 237:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****    */ 
 238:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
 239:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 240:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 241:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
 242:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief  This function handles NAND device interrupt request.
ARM GAS  /tmp/ccwUBerI.s 			page 9


 243:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  hnand: pointer to a NAND_HandleTypeDef structure that contains
 244:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *                the configuration information for NAND module.
 245:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @retval HAL status
 246:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** */
 247:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** void HAL_NAND_IRQHandler(NAND_HandleTypeDef *hnand)
 248:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** {
 249:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Check NAND interrupt Rising edge flag */
 250:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(__FSMC_NAND_GET_FLAG(hnand->Instance, hnand->Init.NandBank, FSMC_FLAG_RISING_EDGE))
 251:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 252:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* NAND interrupt callback*/
 253:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     HAL_NAND_ITCallback(hnand);
 254:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 255:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Clear NAND interrupt Rising edge pending bit */
 256:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     __FSMC_NAND_CLEAR_FLAG(hnand->Instance, hnand->Init.NandBank, FSMC_FLAG_RISING_EDGE);
 257:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 258:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 259:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Check NAND interrupt Level flag */
 260:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(__FSMC_NAND_GET_FLAG(hnand->Instance, hnand->Init.NandBank, FSMC_FLAG_LEVEL))
 261:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 262:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* NAND interrupt callback*/
 263:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     HAL_NAND_ITCallback(hnand);
 264:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 265:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Clear NAND interrupt Level pending bit */
 266:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     __FSMC_NAND_CLEAR_FLAG(hnand->Instance, hnand->Init.NandBank, FSMC_FLAG_LEVEL);
 267:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 268:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 269:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Check NAND interrupt Falling edge flag */
 270:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(__FSMC_NAND_GET_FLAG(hnand->Instance, hnand->Init.NandBank, FSMC_FLAG_FALLING_EDGE))
 271:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 272:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* NAND interrupt callback*/
 273:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     HAL_NAND_ITCallback(hnand);
 274:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 275:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Clear NAND interrupt Falling edge pending bit */
 276:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     __FSMC_NAND_CLEAR_FLAG(hnand->Instance, hnand->Init.NandBank, FSMC_FLAG_FALLING_EDGE);
 277:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 278:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 279:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Check NAND interrupt FIFO empty flag */
 280:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(__FSMC_NAND_GET_FLAG(hnand->Instance, hnand->Init.NandBank, FSMC_FLAG_FEMPT))
 281:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 282:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* NAND interrupt callback*/
 283:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     HAL_NAND_ITCallback(hnand);
 284:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 285:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Clear NAND interrupt FIFO empty pending bit */
 286:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     __FSMC_NAND_CLEAR_FLAG(hnand->Instance, hnand->Init.NandBank, FSMC_FLAG_FEMPT);
 287:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 288:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
 289:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 290:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
 291:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief  NAND interrupt feature callback
 292:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  hnand: pointer to a NAND_HandleTypeDef structure that contains
 293:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *                the configuration information for NAND module.
 294:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @retval None
 295:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
 296:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** __weak void HAL_NAND_ITCallback(NAND_HandleTypeDef *hnand)
 297:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** {
 202              		.loc 1 297 0
 203              		.cfi_startproc
ARM GAS  /tmp/ccwUBerI.s 			page 10


 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              		@ link register save eliminated.
 207              	.LVL14:
 208 0000 7047     		bx	lr
 209              		.cfi_endproc
 210              	.LFE69:
 212              		.section	.text.HAL_NAND_IRQHandler,"ax",%progbits
 213              		.align	1
 214              		.global	HAL_NAND_IRQHandler
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
 218              		.fpu softvfp
 220              	HAL_NAND_IRQHandler:
 221              	.LFB68:
 248:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Check NAND interrupt Rising edge flag */
 222              		.loc 1 248 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226              	.LVL15:
 248:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Check NAND interrupt Rising edge flag */
 227              		.loc 1 248 0
 228 0000 10B5     		push	{r4, lr}
 229              	.LCFI3:
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 4, -8
 232              		.cfi_offset 14, -4
 233 0002 0446     		mov	r4, r0
 250:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 234              		.loc 1 250 0
 235 0004 4368     		ldr	r3, [r0, #4]
 236 0006 102B     		cmp	r3, #16
 237 0008 21D0     		beq	.L36
 250:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 238              		.loc 1 250 0 is_stmt 0 discriminator 2
 239 000a 0368     		ldr	r3, [r0]
 240 000c 5B6A     		ldr	r3, [r3, #36]
 241 000e 03F00103 		and	r3, r3, #1
 242 0012 DBB2     		uxtb	r3, r3
 243              	.L20:
 250:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 244              		.loc 1 250 0 discriminator 4
 245 0014 0BBB     		cbnz	r3, .L37
 246              	.LVL16:
 247              	.L21:
 260:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 248              		.loc 1 260 0 is_stmt 1
 249 0016 6368     		ldr	r3, [r4, #4]
 250 0018 102B     		cmp	r3, #16
 251 001a 30D0     		beq	.L38
 260:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 252              		.loc 1 260 0 is_stmt 0 discriminator 2
 253 001c 2368     		ldr	r3, [r4]
 254 001e 5B6A     		ldr	r3, [r3, #36]
 255 0020 C3F34003 		ubfx	r3, r3, #1, #1
ARM GAS  /tmp/ccwUBerI.s 			page 11


 256              	.L24:
 260:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 257              		.loc 1 260 0 discriminator 4
 258 0024 002B     		cmp	r3, #0
 259 0026 2FD1     		bne	.L39
 260              	.L25:
 270:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 261              		.loc 1 270 0 is_stmt 1
 262 0028 6368     		ldr	r3, [r4, #4]
 263 002a 102B     		cmp	r3, #16
 264 002c 3ED0     		beq	.L40
 270:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 265              		.loc 1 270 0 is_stmt 0 discriminator 2
 266 002e 2368     		ldr	r3, [r4]
 267 0030 5B6A     		ldr	r3, [r3, #36]
 268 0032 C3F38003 		ubfx	r3, r3, #2, #1
 269              	.L28:
 270:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 270              		.loc 1 270 0 discriminator 4
 271 0036 002B     		cmp	r3, #0
 272 0038 3DD1     		bne	.L41
 273              	.L29:
 280:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 274              		.loc 1 280 0 is_stmt 1
 275 003a 6368     		ldr	r3, [r4, #4]
 276 003c 102B     		cmp	r3, #16
 277 003e 4CD0     		beq	.L42
 280:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 278              		.loc 1 280 0 is_stmt 0 discriminator 2
 279 0040 2368     		ldr	r3, [r4]
 280 0042 5B6A     		ldr	r3, [r3, #36]
 281 0044 C3F38013 		ubfx	r3, r3, #6, #1
 282              	.L32:
 280:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 283              		.loc 1 280 0 discriminator 4
 284 0048 002B     		cmp	r3, #0
 285 004a 4BD1     		bne	.L43
 286              	.L18:
 287 004c 10BD     		pop	{r4, pc}
 288              	.LVL17:
 289              	.L36:
 250:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 290              		.loc 1 250 0 is_stmt 1 discriminator 1
 291 004e 0368     		ldr	r3, [r0]
 292 0050 5B68     		ldr	r3, [r3, #4]
 293 0052 03F00103 		and	r3, r3, #1
 294 0056 DBB2     		uxtb	r3, r3
 295 0058 DCE7     		b	.L20
 296              	.L37:
 253:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 297              		.loc 1 253 0
 298 005a 2046     		mov	r0, r4
 299              	.LVL18:
 300 005c FFF7FEFF 		bl	HAL_NAND_ITCallback
 301              	.LVL19:
 256:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 302              		.loc 1 256 0
ARM GAS  /tmp/ccwUBerI.s 			page 12


 303 0060 6368     		ldr	r3, [r4, #4]
 304 0062 102B     		cmp	r3, #16
 305 0064 05D0     		beq	.L44
 256:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 306              		.loc 1 256 0 is_stmt 0 discriminator 2
 307 0066 2268     		ldr	r2, [r4]
 308 0068 536A     		ldr	r3, [r2, #36]
 309 006a 23F00103 		bic	r3, r3, #1
 310 006e 5362     		str	r3, [r2, #36]
 311 0070 D1E7     		b	.L21
 312              	.L44:
 256:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 313              		.loc 1 256 0 discriminator 1
 314 0072 2268     		ldr	r2, [r4]
 315 0074 5368     		ldr	r3, [r2, #4]
 316 0076 23F00103 		bic	r3, r3, #1
 317 007a 5360     		str	r3, [r2, #4]
 318 007c CBE7     		b	.L21
 319              	.L38:
 260:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 320              		.loc 1 260 0 is_stmt 1 discriminator 1
 321 007e 2368     		ldr	r3, [r4]
 322 0080 5B68     		ldr	r3, [r3, #4]
 323 0082 C3F34003 		ubfx	r3, r3, #1, #1
 324 0086 CDE7     		b	.L24
 325              	.L39:
 263:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 326              		.loc 1 263 0
 327 0088 2046     		mov	r0, r4
 328 008a FFF7FEFF 		bl	HAL_NAND_ITCallback
 329              	.LVL20:
 266:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 330              		.loc 1 266 0
 331 008e 6368     		ldr	r3, [r4, #4]
 332 0090 102B     		cmp	r3, #16
 333 0092 05D0     		beq	.L45
 266:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 334              		.loc 1 266 0 is_stmt 0 discriminator 2
 335 0094 2268     		ldr	r2, [r4]
 336 0096 536A     		ldr	r3, [r2, #36]
 337 0098 23F00203 		bic	r3, r3, #2
 338 009c 5362     		str	r3, [r2, #36]
 339 009e C3E7     		b	.L25
 340              	.L45:
 266:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 341              		.loc 1 266 0 discriminator 1
 342 00a0 2268     		ldr	r2, [r4]
 343 00a2 5368     		ldr	r3, [r2, #4]
 344 00a4 23F00203 		bic	r3, r3, #2
 345 00a8 5360     		str	r3, [r2, #4]
 346 00aa BDE7     		b	.L25
 347              	.L40:
 270:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 348              		.loc 1 270 0 is_stmt 1 discriminator 1
 349 00ac 2368     		ldr	r3, [r4]
 350 00ae 5B68     		ldr	r3, [r3, #4]
 351 00b0 C3F38003 		ubfx	r3, r3, #2, #1
ARM GAS  /tmp/ccwUBerI.s 			page 13


 352 00b4 BFE7     		b	.L28
 353              	.L41:
 273:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 354              		.loc 1 273 0
 355 00b6 2046     		mov	r0, r4
 356 00b8 FFF7FEFF 		bl	HAL_NAND_ITCallback
 357              	.LVL21:
 276:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 358              		.loc 1 276 0
 359 00bc 6368     		ldr	r3, [r4, #4]
 360 00be 102B     		cmp	r3, #16
 361 00c0 05D0     		beq	.L46
 276:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 362              		.loc 1 276 0 is_stmt 0 discriminator 2
 363 00c2 2268     		ldr	r2, [r4]
 364 00c4 536A     		ldr	r3, [r2, #36]
 365 00c6 23F00403 		bic	r3, r3, #4
 366 00ca 5362     		str	r3, [r2, #36]
 367 00cc B5E7     		b	.L29
 368              	.L46:
 276:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 369              		.loc 1 276 0 discriminator 1
 370 00ce 2268     		ldr	r2, [r4]
 371 00d0 5368     		ldr	r3, [r2, #4]
 372 00d2 23F00403 		bic	r3, r3, #4
 373 00d6 5360     		str	r3, [r2, #4]
 374 00d8 AFE7     		b	.L29
 375              	.L42:
 280:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 376              		.loc 1 280 0 is_stmt 1 discriminator 1
 377 00da 2368     		ldr	r3, [r4]
 378 00dc 5B68     		ldr	r3, [r3, #4]
 379 00de C3F38013 		ubfx	r3, r3, #6, #1
 380 00e2 B1E7     		b	.L32
 381              	.L43:
 283:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 382              		.loc 1 283 0
 383 00e4 2046     		mov	r0, r4
 384 00e6 FFF7FEFF 		bl	HAL_NAND_ITCallback
 385              	.LVL22:
 286:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 386              		.loc 1 286 0
 387 00ea 6368     		ldr	r3, [r4, #4]
 388 00ec 102B     		cmp	r3, #16
 389 00ee 05D0     		beq	.L47
 286:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 390              		.loc 1 286 0 is_stmt 0 discriminator 2
 391 00f0 2268     		ldr	r2, [r4]
 392 00f2 536A     		ldr	r3, [r2, #36]
 393 00f4 23F04003 		bic	r3, r3, #64
 394 00f8 5362     		str	r3, [r2, #36]
 288:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 395              		.loc 1 288 0 is_stmt 1 discriminator 2
 396 00fa A7E7     		b	.L18
 397              	.L47:
 286:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 398              		.loc 1 286 0 discriminator 1
ARM GAS  /tmp/ccwUBerI.s 			page 14


 399 00fc 2268     		ldr	r2, [r4]
 400 00fe 5368     		ldr	r3, [r2, #4]
 401 0100 23F04003 		bic	r3, r3, #64
 402 0104 5360     		str	r3, [r2, #4]
 403 0106 10BD     		pop	{r4, pc}
 404              		.cfi_endproc
 405              	.LFE68:
 407              		.section	.text.HAL_NAND_Read_ID,"ax",%progbits
 408              		.align	1
 409              		.global	HAL_NAND_Read_ID
 410              		.syntax unified
 411              		.thumb
 412              		.thumb_func
 413              		.fpu softvfp
 415              	HAL_NAND_Read_ID:
 416              	.LFB70:
 298:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Prevent unused argument(s) compilation warning */
 299:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   UNUSED(hnand);
 300:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 301:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****             the HAL_NAND_ITCallback could be implemented in the user file
 302:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****    */
 303:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
 304:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****  
 305:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
 306:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @}
 307:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
 308:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 309:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /** @defgroup NAND_Exported_Functions_Group2 Input and Output functions 
 310:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief    Input Output and memory control functions 
 311:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *
 312:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   @verbatim    
 313:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   ==============================================================================
 314:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****                     ##### NAND Input and Output functions #####
 315:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   ==============================================================================
 316:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   [..]  
 317:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     This section provides functions allowing to use and control the NAND 
 318:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     memory
 319:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 320:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** @endverbatim
 321:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @{
 322:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
 323:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 324:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
 325:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief  Read the NAND memory electronic signature
 326:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  hnand: pointer to a NAND_HandleTypeDef structure that contains
 327:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *                the configuration information for NAND module.
 328:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  pNAND_ID: NAND ID structure
 329:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @retval HAL status
 330:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
 331:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Read_ID(NAND_HandleTypeDef *hnand, NAND_IDTypeDef *pNAND_ID)
 332:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** {
 417              		.loc 1 332 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 8
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421              		@ link register save eliminated.
 422              	.LVL23:
ARM GAS  /tmp/ccwUBerI.s 			page 15


 423 0000 10B4     		push	{r4}
 424              	.LCFI4:
 425              		.cfi_def_cfa_offset 4
 426              		.cfi_offset 4, -4
 427 0002 83B0     		sub	sp, sp, #12
 428              	.LCFI5:
 429              		.cfi_def_cfa_offset 16
 333:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __IO uint32_t data = 0U;
 430              		.loc 1 333 0
 431 0004 0023     		movs	r3, #0
 432 0006 0193     		str	r3, [sp, #4]
 334:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __IO uint32_t data1 = 0U;
 433              		.loc 1 334 0
 434 0008 0093     		str	r3, [sp]
 435              	.LVL24:
 335:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t deviceaddress = 0U;
 336:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 337:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Process Locked */
 338:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __HAL_LOCK(hnand);  
 436              		.loc 1 338 0
 437 000a 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 438 000e 012B     		cmp	r3, #1
 439 0010 44D0     		beq	.L53
 440              		.loc 1 338 0 is_stmt 0 discriminator 2
 441 0012 0123     		movs	r3, #1
 442 0014 80F82030 		strb	r3, [r0, #32]
 339:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 340:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Check the NAND controller state */
 341:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
 443              		.loc 1 341 0 is_stmt 1 discriminator 2
 444 0018 90F82130 		ldrb	r3, [r0, #33]	@ zero_extendqisi2
 445 001c DBB2     		uxtb	r3, r3
 446 001e 022B     		cmp	r3, #2
 447 0020 40D0     		beq	.L54
 342:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 343:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****      return HAL_BUSY;
 344:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 345:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 346:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Identify the device address */
 347:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand->Init.NandBank == FSMC_NAND_BANK2)
 448              		.loc 1 347 0
 449 0022 4368     		ldr	r3, [r0, #4]
 450 0024 102B     		cmp	r3, #16
 451 0026 25D0     		beq	.L57
 348:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 349:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     deviceaddress = NAND_DEVICE1;
 350:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 351:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   else
 352:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 353:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     deviceaddress = NAND_DEVICE2;
 452              		.loc 1 353 0
 453 0028 4FF00043 		mov	r3, #-2147483648
 454              	.L50:
 455              	.LVL25:
 354:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 355:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 356:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the NAND controller state */ 
ARM GAS  /tmp/ccwUBerI.s 			page 16


 357:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY;
 456              		.loc 1 357 0
 457 002c 0222     		movs	r2, #2
 458 002e 80F82120 		strb	r2, [r0, #33]
 358:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 359:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Send Read ID command sequence */   
 360:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA))  = NAND_CMD_READID;
 459              		.loc 1 360 0
 460 0032 43F48032 		orr	r2, r3, #65536
 461 0036 9024     		movs	r4, #144
 462 0038 1470     		strb	r4, [r2]
 361:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 463              		.loc 1 361 0
 464 003a 43F40032 		orr	r2, r3, #131072
 465 003e 0024     		movs	r4, #0
 466 0040 1470     		strb	r4, [r2]
 362:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 363:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Read the electronic signature from NAND flash */
 364:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if (hnand->Init.MemoryDataWidth == FSMC_NAND_PCC_MEM_BUS_WIDTH_8)
 467              		.loc 1 364 0
 468 0042 C268     		ldr	r2, [r0, #12]
 469 0044 CAB9     		cbnz	r2, .L51
 365:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 366:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     data = *(__IO uint32_t *)deviceaddress;
 470              		.loc 1 366 0
 471 0046 1B68     		ldr	r3, [r3]
 472              	.LVL26:
 473 0048 0193     		str	r3, [sp, #4]
 367:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 368:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Return the data read */
 369:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     pNAND_ID->Maker_Id   = ADDR_1ST_CYCLE(data);
 474              		.loc 1 369 0
 475 004a 019B     		ldr	r3, [sp, #4]
 476 004c 0B70     		strb	r3, [r1]
 370:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     pNAND_ID->Device_Id  = ADDR_2ND_CYCLE(data);
 477              		.loc 1 370 0
 478 004e 019B     		ldr	r3, [sp, #4]
 479 0050 C3F30723 		ubfx	r3, r3, #8, #8
 480 0054 4B70     		strb	r3, [r1, #1]
 371:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     pNAND_ID->Third_Id   = ADDR_3RD_CYCLE(data);
 481              		.loc 1 371 0
 482 0056 019B     		ldr	r3, [sp, #4]
 483 0058 C3F30743 		ubfx	r3, r3, #16, #8
 484 005c 8B70     		strb	r3, [r1, #2]
 372:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     pNAND_ID->Fourth_Id  = ADDR_4TH_CYCLE(data);
 485              		.loc 1 372 0
 486 005e 019B     		ldr	r3, [sp, #4]
 487 0060 1B0E     		lsrs	r3, r3, #24
 488 0062 CB70     		strb	r3, [r1, #3]
 489              	.L52:
 373:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 374:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   else
 375:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 376:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     data = *(__IO uint32_t *)deviceaddress;
 377:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     data1 = *((__IO uint32_t *)deviceaddress + 4U);
 378:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 379:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Return the data read */
ARM GAS  /tmp/ccwUBerI.s 			page 17


 380:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     pNAND_ID->Maker_Id   = ADDR_1ST_CYCLE(data);
 381:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     pNAND_ID->Device_Id  = ADDR_3RD_CYCLE(data);
 382:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     pNAND_ID->Third_Id   = ADDR_1ST_CYCLE(data1);
 383:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     pNAND_ID->Fourth_Id  = ADDR_3RD_CYCLE(data1);
 384:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 385:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 386:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the NAND controller state */ 
 387:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
 490              		.loc 1 387 0
 491 0064 0123     		movs	r3, #1
 492 0066 80F82130 		strb	r3, [r0, #33]
 388:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 389:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Process unlocked */
 390:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __HAL_UNLOCK(hnand);
 493              		.loc 1 390 0
 494 006a 0023     		movs	r3, #0
 495 006c 80F82030 		strb	r3, [r0, #32]
 391:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****    
 392:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   return HAL_OK;
 496              		.loc 1 392 0
 497 0070 1846     		mov	r0, r3
 498              	.LVL27:
 499 0072 14E0     		b	.L49
 500              	.LVL28:
 501              	.L57:
 349:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 502              		.loc 1 349 0
 503 0074 4FF0E043 		mov	r3, #1879048192
 504 0078 D8E7     		b	.L50
 505              	.LVL29:
 506              	.L51:
 376:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     data1 = *((__IO uint32_t *)deviceaddress + 4U);
 507              		.loc 1 376 0
 508 007a 1A68     		ldr	r2, [r3]
 509 007c 0192     		str	r2, [sp, #4]
 377:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 510              		.loc 1 377 0
 511 007e 1B69     		ldr	r3, [r3, #16]
 512              	.LVL30:
 513 0080 0093     		str	r3, [sp]
 380:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     pNAND_ID->Device_Id  = ADDR_3RD_CYCLE(data);
 514              		.loc 1 380 0
 515 0082 019B     		ldr	r3, [sp, #4]
 516 0084 0B70     		strb	r3, [r1]
 381:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     pNAND_ID->Third_Id   = ADDR_1ST_CYCLE(data1);
 517              		.loc 1 381 0
 518 0086 019B     		ldr	r3, [sp, #4]
 519 0088 C3F30743 		ubfx	r3, r3, #16, #8
 520 008c 4B70     		strb	r3, [r1, #1]
 382:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     pNAND_ID->Fourth_Id  = ADDR_3RD_CYCLE(data1);
 521              		.loc 1 382 0
 522 008e 009B     		ldr	r3, [sp]
 523 0090 8B70     		strb	r3, [r1, #2]
 383:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 524              		.loc 1 383 0
 525 0092 009B     		ldr	r3, [sp]
 526 0094 C3F30743 		ubfx	r3, r3, #16, #8
ARM GAS  /tmp/ccwUBerI.s 			page 18


 527 0098 CB70     		strb	r3, [r1, #3]
 528 009a E3E7     		b	.L52
 529              	.LVL31:
 530              	.L53:
 338:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 531              		.loc 1 338 0
 532 009c 0220     		movs	r0, #2
 533              	.LVL32:
 534              	.L49:
 393:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
 535              		.loc 1 393 0
 536 009e 03B0     		add	sp, sp, #12
 537              	.LCFI6:
 538              		.cfi_remember_state
 539              		.cfi_def_cfa_offset 4
 540              		@ sp needed
 541 00a0 10BC     		pop	{r4}
 542              	.LCFI7:
 543              		.cfi_restore 4
 544              		.cfi_def_cfa_offset 0
 545 00a2 7047     		bx	lr
 546              	.LVL33:
 547              	.L54:
 548              	.LCFI8:
 549              		.cfi_restore_state
 343:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 550              		.loc 1 343 0
 551 00a4 0220     		movs	r0, #2
 552              	.LVL34:
 553 00a6 FAE7     		b	.L49
 554              		.cfi_endproc
 555              	.LFE70:
 557              		.section	.text.HAL_NAND_Reset,"ax",%progbits
 558              		.align	1
 559              		.global	HAL_NAND_Reset
 560              		.syntax unified
 561              		.thumb
 562              		.thumb_func
 563              		.fpu softvfp
 565              	HAL_NAND_Reset:
 566              	.LFB71:
 394:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 395:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
 396:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief  NAND memory reset
 397:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  hnand: pointer to a NAND_HandleTypeDef structure that contains
 398:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *                the configuration information for NAND module.
 399:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @retval HAL status
 400:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
 401:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Reset(NAND_HandleTypeDef *hnand)
 402:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** {
 567              		.loc 1 402 0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 0
 570              		@ frame_needed = 0, uses_anonymous_args = 0
 571              		@ link register save eliminated.
 572              	.LVL35:
 403:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t deviceaddress = 0U;
ARM GAS  /tmp/ccwUBerI.s 			page 19


 404:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 405:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Process Locked */
 406:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __HAL_LOCK(hnand);
 573              		.loc 1 406 0
 574 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 575 0004 012B     		cmp	r3, #1
 576 0006 1ED0     		beq	.L61
 577              		.loc 1 406 0 is_stmt 0 discriminator 2
 578 0008 0123     		movs	r3, #1
 579 000a 80F82030 		strb	r3, [r0, #32]
 407:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 408:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Check the NAND controller state */
 409:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
 580              		.loc 1 409 0 is_stmt 1 discriminator 2
 581 000e 90F82130 		ldrb	r3, [r0, #33]	@ zero_extendqisi2
 582 0012 DBB2     		uxtb	r3, r3
 583 0014 022B     		cmp	r3, #2
 584 0016 18D0     		beq	.L62
 410:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 411:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****      return HAL_BUSY;
 412:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 413:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 414:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Identify the device address */
 415:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand->Init.NandBank == FSMC_NAND_BANK2)
 585              		.loc 1 415 0
 586 0018 4368     		ldr	r3, [r0, #4]
 587 001a 102B     		cmp	r3, #16
 588 001c 10D0     		beq	.L64
 416:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 417:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     deviceaddress = NAND_DEVICE1;
 418:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 419:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   else
 420:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 421:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     deviceaddress = NAND_DEVICE2;
 589              		.loc 1 421 0
 590 001e 4FF00043 		mov	r3, #-2147483648
 591              	.L60:
 592              	.LVL36:
 422:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }  
 423:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 424:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the NAND controller state */
 425:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY; 
 593              		.loc 1 425 0
 594 0022 0222     		movs	r2, #2
 595 0024 80F82120 		strb	r2, [r0, #33]
 426:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 427:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Send NAND reset command */  
 428:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = 0xFF;
 596              		.loc 1 428 0
 597 0028 43F48033 		orr	r3, r3, #65536
 598              	.LVL37:
 599 002c FF22     		movs	r2, #255
 600 002e 1A70     		strb	r2, [r3]
 429:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 430:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 431:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the NAND controller state */
 432:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
ARM GAS  /tmp/ccwUBerI.s 			page 20


 601              		.loc 1 432 0
 602 0030 0123     		movs	r3, #1
 603 0032 80F82130 		strb	r3, [r0, #33]
 433:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 434:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Process unlocked */
 435:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __HAL_UNLOCK(hnand);
 604              		.loc 1 435 0
 605 0036 0023     		movs	r3, #0
 606 0038 80F82030 		strb	r3, [r0, #32]
 436:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 437:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   return HAL_OK;
 607              		.loc 1 437 0
 608 003c 1846     		mov	r0, r3
 609              	.LVL38:
 610 003e 7047     		bx	lr
 611              	.LVL39:
 612              	.L64:
 417:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 613              		.loc 1 417 0
 614 0040 4FF0E043 		mov	r3, #1879048192
 615 0044 EDE7     		b	.L60
 616              	.L61:
 406:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 617              		.loc 1 406 0
 618 0046 0220     		movs	r0, #2
 619              	.LVL40:
 620 0048 7047     		bx	lr
 621              	.LVL41:
 622              	.L62:
 411:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 623              		.loc 1 411 0
 624 004a 0220     		movs	r0, #2
 625              	.LVL42:
 438:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 439:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
 626              		.loc 1 439 0
 627 004c 7047     		bx	lr
 628              		.cfi_endproc
 629              	.LFE71:
 631              		.section	.text.HAL_NAND_ConfigDevice,"ax",%progbits
 632              		.align	1
 633              		.global	HAL_NAND_ConfigDevice
 634              		.syntax unified
 635              		.thumb
 636              		.thumb_func
 637              		.fpu softvfp
 639              	HAL_NAND_ConfigDevice:
 640              	.LFB72:
 440:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 441:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
 442:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief  Configure the device: Enter the physical parameters of the device
 443:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  hnand: pointer to a NAND_HandleTypeDef structure that contains
 444:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *                the configuration information for NAND module.
 445:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  pDeviceConfig : pointer to NAND_DeviceConfigTypeDef structure
 446:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @retval HAL status
 447:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
 448:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** HAL_StatusTypeDef  HAL_NAND_ConfigDevice(NAND_HandleTypeDef *hnand, NAND_DeviceConfigTypeDef *pDevi
ARM GAS  /tmp/ccwUBerI.s 			page 21


 449:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** {
 641              		.loc 1 449 0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 0
 644              		@ frame_needed = 0, uses_anonymous_args = 0
 645              		@ link register save eliminated.
 646              	.LVL43:
 450:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->Config.PageSize           = pDeviceConfig->PageSize;
 647              		.loc 1 450 0
 648 0000 0B68     		ldr	r3, [r1]
 649 0002 4362     		str	r3, [r0, #36]
 451:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->Config.SpareAreaSize      = pDeviceConfig->SpareAreaSize;
 650              		.loc 1 451 0
 651 0004 4B68     		ldr	r3, [r1, #4]
 652 0006 8362     		str	r3, [r0, #40]
 452:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->Config.BlockSize          = pDeviceConfig->BlockSize;
 653              		.loc 1 452 0
 654 0008 8B68     		ldr	r3, [r1, #8]
 655 000a C362     		str	r3, [r0, #44]
 453:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->Config.BlockNbr           = pDeviceConfig->BlockNbr;
 656              		.loc 1 453 0
 657 000c CB68     		ldr	r3, [r1, #12]
 658 000e 0363     		str	r3, [r0, #48]
 454:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->Config.PlaneSize          = pDeviceConfig->PlaneSize;
 659              		.loc 1 454 0
 660 0010 4B69     		ldr	r3, [r1, #20]
 661 0012 8363     		str	r3, [r0, #56]
 455:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->Config.PlaneNbr           = pDeviceConfig->PlaneNbr;
 662              		.loc 1 455 0
 663 0014 0B69     		ldr	r3, [r1, #16]
 664 0016 4363     		str	r3, [r0, #52]
 456:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->Config.ExtraCommandEnable = pDeviceConfig->ExtraCommandEnable;
 665              		.loc 1 456 0
 666 0018 0B7E     		ldrb	r3, [r1, #24]	@ zero_extendqisi2
 667 001a 80F83C30 		strb	r3, [r0, #60]
 457:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 458:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   return HAL_OK;
 459:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
 668              		.loc 1 459 0
 669 001e 0020     		movs	r0, #0
 670              	.LVL44:
 671 0020 7047     		bx	lr
 672              		.cfi_endproc
 673              	.LFE72:
 675              		.section	.text.HAL_NAND_Read_Status,"ax",%progbits
 676              		.align	1
 677              		.global	HAL_NAND_Read_Status
 678              		.syntax unified
 679              		.thumb
 680              		.thumb_func
 681              		.fpu softvfp
 683              	HAL_NAND_Read_Status:
 684              	.LFB82:
 460:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 461:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
 462:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief  Read Page(s) from NAND memory block (8-bits addressing)
 463:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  hnand: pointer to a NAND_HandleTypeDef structure that contains
ARM GAS  /tmp/ccwUBerI.s 			page 22


 464:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *                the configuration information for NAND module.
 465:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  pAddress : pointer to NAND address structure
 466:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  pBuffer : pointer to destination read buffer
 467:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  NumPageToRead : number of pages to read from block 
 468:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @retval HAL status
 469:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
 470:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Read_Page_8b(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAddress, u
 471:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** {   
 472:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __IO uint32_t index  = 0U;
 473:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t tickstart = 0U;
 474:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t deviceaddress = 0U, size = 0U, numPagesRead = 0U, nandaddress = 0U;
 475:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 476:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Process Locked */
 477:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __HAL_LOCK(hnand); 
 478:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 479:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Check the NAND controller state */
 480:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
 481:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 482:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****      return HAL_BUSY;
 483:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 484:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 485:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Identify the device address */
 486:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand->Init.NandBank == FSMC_NAND_BANK2)
 487:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 488:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     deviceaddress = NAND_DEVICE1;
 489:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 490:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   else
 491:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 492:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     deviceaddress = NAND_DEVICE2;
 493:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 494:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 495:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the NAND controller state */
 496:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY;
 497:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 498:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* NAND raw address calculation */
 499:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   nandaddress = ARRAY_ADDRESS(pAddress, hnand);
 500:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 501:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Page(s) read loop */  
 502:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   while((NumPageToRead != 0U) && (nandaddress < ((hnand->Config.BlockSize) * (hnand->Config.BlockNb
 503:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 504:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* update the buffer size */
 505:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     size = (hnand->Config.PageSize) + ((hnand->Config.PageSize) * numPagesRead);
 506:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 507:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Send read page command sequence */
 508:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_A;
 509:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****    
 510:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Cards with page size <= 512 bytes */
 511:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     if((hnand->Config.PageSize) <= 512U)
 512:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 513:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
 514:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 515:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 516:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 517:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 518:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 519:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
 520:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
ARM GAS  /tmp/ccwUBerI.s 			page 23


 521:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 522:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 523:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 524:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 525:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 526:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 527:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     else /* (hnand->Config.PageSize) > 512 */
 528:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 529:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
 530:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 531:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 532:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 533:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 534:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 535:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 536:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
 537:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 538:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 539:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 540:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 541:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 542:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 543:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 544:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 545:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 546:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA))  = NAND_CMD_AREA_TRUE1;
 547:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 548:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Check if an extra command is needed for reading pages  */
 549:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     if(hnand->Config.ExtraCommandEnable == ENABLE)
 550:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 551:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       /* Get tick */
 552:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       tickstart = HAL_GetTick();
 553:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       
 554:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       /* Read status until NAND is ready */
 555:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       while(HAL_NAND_Read_Status(hnand) != NAND_READY)
 556:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 557:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         if((HAL_GetTick() - tickstart ) > NAND_WRITE_TIMEOUT)
 558:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         {
 559:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****           return HAL_TIMEOUT; 
 560:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         }
 561:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 562:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       
 563:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       /* Go back to read mode */
 564:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = ((uint8_t)0x00);
 565:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 566:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 567:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Get Data into Buffer */    
 568:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     for(; index < size; index++)
 569:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 570:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(uint8_t *)pBuffer++ = *(uint8_t *)deviceaddress;
 571:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 572:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 573:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Increment read pages number */
 574:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     numPagesRead++;
 575:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 576:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Decrement pages to read */
 577:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     NumPageToRead--;
ARM GAS  /tmp/ccwUBerI.s 			page 24


 578:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 579:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Increment the NAND address */
 580:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     nandaddress = (uint32_t)(nandaddress + 1U);
 581:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 582:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 583:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the NAND controller state */
 584:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
 585:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 586:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Process unlocked */
 587:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __HAL_UNLOCK(hnand);
 588:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 589:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   return HAL_OK;
 590:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
 591:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 592:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
 593:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief  Read Page(s) from NAND memory block (16-bits addressing)
 594:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  hnand: pointer to a NAND_HandleTypeDef structure that contains
 595:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *                the configuration information for NAND module.
 596:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  pAddress : pointer to NAND address structure
 597:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  pBuffer : pointer to destination read buffer. pBuffer should be 16bits aligned
 598:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  NumPageToRead : number of pages to read from block 
 599:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @retval HAL status
 600:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
 601:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Read_Page_16b(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAddress, 
 602:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** {   
 603:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __IO uint32_t index  = 0U;
 604:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t tickstart = 0U;
 605:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t deviceaddress = 0U, size = 0U, numPagesRead = 0U, nandaddress = 0U;
 606:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 607:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Process Locked */
 608:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __HAL_LOCK(hnand); 
 609:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 610:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Check the NAND controller state */
 611:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
 612:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 613:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****      return HAL_BUSY;
 614:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 615:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 616:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Identify the device address */
 617:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand->Init.NandBank == FSMC_NAND_BANK2)
 618:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 619:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     deviceaddress = NAND_DEVICE1;
 620:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 621:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   else
 622:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 623:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     deviceaddress = NAND_DEVICE2;
 624:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 625:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 626:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the NAND controller state */ 
 627:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY;
 628:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 629:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* NAND raw address calculation */
 630:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   nandaddress = ARRAY_ADDRESS(pAddress, hnand);
 631:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 632:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Page(s) read loop */  
 633:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   while((NumPageToRead != 0U) && (nandaddress < ((hnand->Config.BlockSize) * (hnand->Config.BlockNb
 634:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
ARM GAS  /tmp/ccwUBerI.s 			page 25


 635:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* update the buffer size */
 636:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     size = (hnand->Config.PageSize) + ((hnand->Config.PageSize) * numPagesRead);
 637:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 638:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Send read page command sequence */
 639:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_A;  
 640:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 641:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Cards with page size <= 512 bytes */
 642:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     if((hnand->Config.PageSize) <= 512U)
 643:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 644:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
 645:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 646:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 647:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 648:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 649:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 650:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
 651:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 652:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 653:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 654:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 655:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 656:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 657:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 658:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     else /* (hnand->Config.PageSize) > 512 */
 659:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 660:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
 661:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 662:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 663:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 664:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 665:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 666:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 667:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
 668:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 669:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 670:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 671:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 672:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 673:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 674:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 675:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 676:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 677:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA))  = NAND_CMD_AREA_TRUE1;
 678:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 679:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     if(hnand->Config.ExtraCommandEnable == ENABLE)
 680:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 681:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       /* Get tick */
 682:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       tickstart = HAL_GetTick();
 683:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       
 684:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       /* Read status until NAND is ready */
 685:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       while(HAL_NAND_Read_Status(hnand) != NAND_READY)
 686:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 687:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         if((HAL_GetTick() - tickstart ) > NAND_WRITE_TIMEOUT)
 688:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         {
 689:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****           return HAL_TIMEOUT; 
 690:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         }
 691:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
ARM GAS  /tmp/ccwUBerI.s 			page 26


 692:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       
 693:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       /* Go back to read mode */
 694:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = ((uint8_t)0x00);
 695:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 696:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 697:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Get Data into Buffer */    
 698:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     for(; index < size; index++)
 699:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 700:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(uint16_t *)pBuffer++ = *(uint16_t *)deviceaddress;
 701:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 702:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 703:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Increment read pages number */
 704:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     numPagesRead++;
 705:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 706:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Decrement pages to read */
 707:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     NumPageToRead--;
 708:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 709:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Increment the NAND address */
 710:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     nandaddress = (uint32_t)(nandaddress + 1U);
 711:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 712:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 713:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the NAND controller state */ 
 714:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
 715:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 716:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Process unlocked */
 717:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __HAL_UNLOCK(hnand);  
 718:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 719:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   return HAL_OK;
 720:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
 721:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 722:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
 723:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief  Write Page(s) to NAND memory block (8-bits addressing)
 724:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  hnand: pointer to a NAND_HandleTypeDef structure that contains
 725:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *                the configuration information for NAND module.
 726:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  pAddress : pointer to NAND address structure
 727:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  pBuffer : pointer to source buffer to write  
 728:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  NumPageToWrite  : number of pages to write to block 
 729:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @retval HAL status
 730:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
 731:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Write_Page_8b(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAddress, 
 732:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** {
 733:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __IO uint32_t index = 0U;
 734:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t tickstart = 0U;
 735:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t deviceaddress = 0U, size = 0U, numPagesWritten = 0U, nandaddress = 0U;
 736:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 737:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Process Locked */
 738:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __HAL_LOCK(hnand);  
 739:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 740:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Check the NAND controller state */
 741:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
 742:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 743:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****      return HAL_BUSY;
 744:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 745:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 746:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Identify the device address */
 747:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand->Init.NandBank == FSMC_NAND_BANK2)
 748:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
ARM GAS  /tmp/ccwUBerI.s 			page 27


 749:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     deviceaddress = NAND_DEVICE1;
 750:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 751:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   else
 752:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 753:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     deviceaddress = NAND_DEVICE2;
 754:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 755:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 756:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the NAND controller state */ 
 757:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY;
 758:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 759:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* NAND raw address calculation */
 760:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   nandaddress = ARRAY_ADDRESS(pAddress, hnand);
 761:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 762:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Page(s) write loop */
 763:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   while((NumPageToWrite != 0U) && (nandaddress < ((hnand->Config.BlockSize) * (hnand->Config.BlockN
 764:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 765:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* update the buffer size */
 766:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     size = hnand->Config.PageSize + ((hnand->Config.PageSize) * numPagesWritten);
 767:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 768:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Send write page command sequence */
 769:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_A;
 770:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 771:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 772:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Cards with page size <= 512 bytes */
 773:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     if((hnand->Config.PageSize) <= 512U)
 774:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 775:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
 776:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 777:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 778:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 779:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 780:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 781:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
 782:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 783:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 784:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 785:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 786:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 787:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 788:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 789:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     else /* (hnand->Config.PageSize) > 512 */
 790:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 791:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
 792:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 793:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 794:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 795:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 796:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 797:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 798:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
 799:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 800:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 801:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 802:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 803:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 804:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 805:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
ARM GAS  /tmp/ccwUBerI.s 			page 28


 806:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 807:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 808:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 809:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Write data to memory */
 810:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     for(; index < size; index++)
 811:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 812:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(__IO uint8_t *)deviceaddress = *(uint8_t *)pBuffer++;
 813:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 814:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****    
 815:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE_TRUE1;
 816:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 817:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Read status until NAND is ready */
 818:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     while(HAL_NAND_Read_Status(hnand) != NAND_READY)
 819:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 820:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       /* Get tick */
 821:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       tickstart = HAL_GetTick();
 822:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       
 823:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       if((HAL_GetTick() - tickstart ) > NAND_WRITE_TIMEOUT)
 824:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 825:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         return HAL_TIMEOUT; 
 826:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 827:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 828:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****  
 829:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Increment written pages number */
 830:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     numPagesWritten++;
 831:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 832:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Decrement pages to write */
 833:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     NumPageToWrite--;
 834:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 835:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Increment the NAND address */
 836:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     nandaddress = (uint32_t)(nandaddress + 1U);
 837:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 838:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 839:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the NAND controller state */ 
 840:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
 841:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 842:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Process unlocked */
 843:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __HAL_UNLOCK(hnand);
 844:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 845:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   return HAL_OK;
 846:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
 847:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 848:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
 849:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief  Write Page(s) to NAND memory block (16-bits addressing)
 850:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  hnand: pointer to a NAND_HandleTypeDef structure that contains
 851:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *                the configuration information for NAND module.
 852:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  pAddress : pointer to NAND address structure
 853:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  pBuffer : pointer to source buffer to write. pBuffer should be 16bits aligned
 854:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  NumPageToWrite  : number of pages to write to block 
 855:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @retval HAL status
 856:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
 857:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Write_Page_16b(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAddress,
 858:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** {
 859:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __IO uint32_t index = 0U;
 860:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t tickstart = 0U;
 861:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t deviceaddress = 0U, size = 0U, numPagesWritten = 0U, nandaddress = 0U;
 862:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
ARM GAS  /tmp/ccwUBerI.s 			page 29


 863:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Process Locked */
 864:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __HAL_LOCK(hnand);  
 865:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 866:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Check the NAND controller state */
 867:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
 868:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 869:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****      return HAL_BUSY;
 870:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 871:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 872:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Identify the device address */
 873:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand->Init.NandBank == FSMC_NAND_BANK2)
 874:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 875:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     deviceaddress = NAND_DEVICE1;
 876:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 877:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   else
 878:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 879:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     deviceaddress = NAND_DEVICE2;
 880:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 881:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 882:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the NAND controller state */ 
 883:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY;
 884:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 885:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* NAND raw address calculation */
 886:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   nandaddress = ARRAY_ADDRESS(pAddress, hnand);
 887:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 888:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Page(s) write loop */
 889:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   while((NumPageToWrite != 0U) && (nandaddress < ((hnand->Config.BlockSize) * (hnand->Config.BlockN
 890:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 891:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* update the buffer size */
 892:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     size = (hnand->Config.PageSize) + ((hnand->Config.PageSize) * numPagesWritten);
 893:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****  
 894:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Send write page command sequence */
 895:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_A;
 896:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 897:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 898:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Cards with page size <= 512 bytes */
 899:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     if((hnand->Config.PageSize) <= 512U)
 900:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 901:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
 902:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 903:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 904:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 905:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 906:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 907:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
 908:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 909:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 910:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 911:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 912:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 913:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 914:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 915:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     else /* (hnand->Config.PageSize) > 512 */
 916:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 917:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
 918:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 919:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
ARM GAS  /tmp/ccwUBerI.s 			page 30


 920:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 921:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 922:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 923:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 924:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
 925:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 926:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 927:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 928:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 929:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 930:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 931:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 932:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 933:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 934:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Write data to memory */
 935:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     for(; index < size; index++)
 936:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 937:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(__IO uint16_t *)deviceaddress = *(uint16_t *)pBuffer++;
 938:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 939:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****    
 940:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE_TRUE1;
 941:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 942:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Read status until NAND is ready */
 943:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     while(HAL_NAND_Read_Status(hnand) != NAND_READY)
 944:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 945:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       /* Get tick */
 946:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       tickstart = HAL_GetTick();
 947:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 948:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       if((HAL_GetTick() - tickstart ) > NAND_WRITE_TIMEOUT)
 949:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 950:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         return HAL_TIMEOUT; 
 951:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       } 
 952:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }   
 953:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****  
 954:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Increment written pages number */
 955:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     numPagesWritten++;
 956:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 957:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Decrement pages to write */
 958:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     NumPageToWrite--;
 959:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 960:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Increment the NAND address */
 961:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     nandaddress = (uint32_t)(nandaddress + 1U);
 962:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 963:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 964:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the NAND controller state */ 
 965:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
 966:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 967:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Process unlocked */
 968:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __HAL_UNLOCK(hnand);
 969:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 970:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   return HAL_OK;
 971:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
 972:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 973:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
 974:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief  Read Spare area(s) from NAND memory (8-bits addressing)
 975:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  hnand: pointer to a NAND_HandleTypeDef structure that contains
 976:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *                the configuration information for NAND module.
ARM GAS  /tmp/ccwUBerI.s 			page 31


 977:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  pAddress : pointer to NAND address structure
 978:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  pBuffer: pointer to source buffer to write  
 979:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  NumSpareAreaToRead: Number of spare area to read  
 980:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @retval HAL status
 981:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** */
 982:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Read_SpareArea_8b(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAddre
 983:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** {
 984:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __IO uint32_t index = 0U;
 985:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t tickstart = 0U;
 986:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t deviceaddress = 0U, size = 0U, numSpareAreaRead = 0U, nandaddress = 0U, columnaddress = 
 987:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 988:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Process Locked */
 989:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __HAL_LOCK(hnand);  
 990:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 991:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Check the NAND controller state */
 992:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
 993:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 994:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****      return HAL_BUSY;
 995:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 996:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 997:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Identify the device address */
 998:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand->Init.NandBank == FSMC_NAND_BANK2)
 999:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
1000:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     deviceaddress = NAND_DEVICE1;
1001:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
1002:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   else
1003:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
1004:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     deviceaddress = NAND_DEVICE2;
1005:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
1006:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1007:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the NAND controller state */
1008:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY;
1009:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1010:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* NAND raw address calculation */
1011:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   nandaddress = ARRAY_ADDRESS(pAddress, hnand);
1012:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1013:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Column in page address */
1014:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   columnaddress = COLUMN_ADDRESS(hnand);
1015:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1016:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Spare area(s) read loop */ 
1017:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   while((NumSpareAreaToRead != 0U) && (nandaddress < ((hnand->Config.BlockSize) * (hnand->Config.Bl
1018:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {     
1019:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* update the buffer size */
1020:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     size = (hnand->Config.SpareAreaSize) + ((hnand->Config.SpareAreaSize) * numSpareAreaRead);
1021:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1022:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Cards with page size <= 512 bytes */
1023:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     if((hnand->Config.PageSize) <= 512U)
1024:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
1025:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       /* Send read spare area command sequence */     
1026:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_C;
1027:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       
1028:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
1029:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
1030:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
1031:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1032:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1033:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
ARM GAS  /tmp/ccwUBerI.s 			page 32


1034:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
1035:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
1036:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
1037:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1038:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1039:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
1040:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
1041:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
1042:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     else /* (hnand->Config.PageSize) > 512 */
1043:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
1044:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       /* Send read spare area command sequence */ 
1045:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_A;
1046:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       
1047:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
1048:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
1049:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_1ST_CYCLE(columnaddress);
1050:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
1051:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1052:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1053:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
1054:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
1055:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
1056:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_1ST_CYCLE(columnaddress);
1057:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
1058:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1059:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1060:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
1061:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
1062:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
1063:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1064:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_TRUE1;
1065:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
1066:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     if(hnand->Config.ExtraCommandEnable == ENABLE)
1067:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
1068:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       /* Get tick */
1069:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       tickstart = HAL_GetTick();
1070:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       
1071:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       /* Read status until NAND is ready */
1072:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       while(HAL_NAND_Read_Status(hnand) != NAND_READY)
1073:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
1074:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         if((HAL_GetTick() - tickstart ) > NAND_WRITE_TIMEOUT)
1075:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         {
1076:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****           return HAL_TIMEOUT; 
1077:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         }
1078:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
1079:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       
1080:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       /* Go back to read mode */
1081:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = ((uint8_t)0x00);
1082:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
1083:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
1084:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Get Data into Buffer */
1085:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     for(; index < size; index++)
1086:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
1087:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(uint8_t *)pBuffer++ = *(uint8_t *)deviceaddress;
1088:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
1089:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
1090:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Increment read spare areas number */
ARM GAS  /tmp/ccwUBerI.s 			page 33


1091:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     numSpareAreaRead++;
1092:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
1093:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Decrement spare areas to read */
1094:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     NumSpareAreaToRead--;
1095:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
1096:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Increment the NAND address */
1097:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     nandaddress = (uint32_t)(nandaddress + 1U);
1098:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
1099:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1100:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the NAND controller state */
1101:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
1102:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1103:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Process unlocked */
1104:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __HAL_UNLOCK(hnand);
1105:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1106:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   return HAL_OK;
1107:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
1108:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1109:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
1110:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief  Read Spare area(s) from NAND memory (16-bits addressing)
1111:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  hnand: pointer to a NAND_HandleTypeDef structure that contains
1112:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *                the configuration information for NAND module.
1113:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  pAddress : pointer to NAND address structure
1114:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  pBuffer: pointer to source buffer to write. pBuffer should be 16bits aligned.
1115:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  NumSpareAreaToRead: Number of spare area to read  
1116:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @retval HAL status
1117:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** */
1118:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Read_SpareArea_16b(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAddr
1119:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** {
1120:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __IO uint32_t index = 0U; 
1121:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t tickstart = 0U;
1122:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t deviceaddress = 0U, size = 0U, numSpareAreaRead = 0U, nandaddress = 0U, columnaddress = 
1123:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1124:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Process Locked */
1125:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __HAL_LOCK(hnand);
1126:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1127:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Check the NAND controller state */
1128:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
1129:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
1130:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****      return HAL_BUSY;
1131:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
1132:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1133:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Identify the device address */
1134:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand->Init.NandBank == FSMC_NAND_BANK2)
1135:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
1136:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     deviceaddress = NAND_DEVICE1;
1137:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
1138:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   else
1139:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
1140:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     deviceaddress = NAND_DEVICE2;
1141:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
1142:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1143:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the NAND controller state */
1144:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY;
1145:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1146:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* NAND raw address calculation */
1147:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   nandaddress = ARRAY_ADDRESS(pAddress, hnand);
ARM GAS  /tmp/ccwUBerI.s 			page 34


1148:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1149:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Column in page address */
1150:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   columnaddress = (uint32_t)(COLUMN_ADDRESS(hnand) * 2U);
1151:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1152:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Spare area(s) read loop */ 
1153:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   while((NumSpareAreaToRead != 0U) && (nandaddress < ((hnand->Config.BlockSize) * (hnand->Config.Bl
1154:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
1155:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* update the buffer size */
1156:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     size = (hnand->Config.SpareAreaSize) + ((hnand->Config.SpareAreaSize) * numSpareAreaRead);
1157:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1158:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Cards with page size <= 512 bytes */
1159:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     if((hnand->Config.PageSize) <= 512U)
1160:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
1161:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       /* Send read spare area command sequence */     
1162:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_C;
1163:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       
1164:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
1165:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
1166:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
1167:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1168:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1169:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
1170:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
1171:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
1172:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
1173:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1174:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1175:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
1176:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
1177:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
1178:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     else /* (hnand->Config.PageSize) > 512 */
1179:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
1180:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       /* Send read spare area command sequence */     
1181:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_A;
1182:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       
1183:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
1184:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
1185:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_1ST_CYCLE(columnaddress);
1186:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
1187:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1188:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1189:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
1190:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
1191:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
1192:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_1ST_CYCLE(columnaddress);
1193:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
1194:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1195:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1196:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
1197:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
1198:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
1199:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1200:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_TRUE1;
1201:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1202:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     if(hnand->Config.ExtraCommandEnable == ENABLE)
1203:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
1204:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       /* Get tick */
ARM GAS  /tmp/ccwUBerI.s 			page 35


1205:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       tickstart = HAL_GetTick();
1206:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       
1207:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       /* Read status until NAND is ready */
1208:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       while(HAL_NAND_Read_Status(hnand) != NAND_READY)
1209:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
1210:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         if((HAL_GetTick() - tickstart ) > NAND_WRITE_TIMEOUT)
1211:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         {
1212:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****           return HAL_TIMEOUT; 
1213:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         }
1214:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
1215:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       
1216:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       /* Go back to read mode */
1217:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = ((uint8_t)0x00);
1218:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
1219:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
1220:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Get Data into Buffer */
1221:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     for(; index < size; index++)
1222:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
1223:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(uint16_t *)pBuffer++ = *(uint16_t *)deviceaddress;
1224:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
1225:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
1226:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Increment read spare areas number */
1227:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     numSpareAreaRead++;
1228:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
1229:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Decrement spare areas to read */
1230:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     NumSpareAreaToRead--;
1231:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
1232:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Increment the NAND address */
1233:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     nandaddress = (uint32_t)(nandaddress + 1U);
1234:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
1235:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1236:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the NAND controller state */
1237:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
1238:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1239:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Process unlocked */
1240:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __HAL_UNLOCK(hnand);     
1241:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1242:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   return HAL_OK;  
1243:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
1244:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1245:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
1246:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief  Write Spare area(s) to NAND memory (8-bits addressing)
1247:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  hnand: pointer to a NAND_HandleTypeDef structure that contains
1248:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *                the configuration information for NAND module.
1249:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  pAddress : pointer to NAND address structure
1250:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  pBuffer : pointer to source buffer to write  
1251:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  NumSpareAreaTowrite  : number of spare areas to write to block
1252:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @retval HAL status
1253:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
1254:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Write_SpareArea_8b(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAddr
1255:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** {
1256:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __IO uint32_t index = 0U;
1257:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t tickstart = 0U;
1258:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t deviceaddress = 0U, size = 0U, numSpareAreaWritten = 0U, nandaddress = 0U, columnaddress
1259:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1260:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Process Locked */
1261:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __HAL_LOCK(hnand); 
ARM GAS  /tmp/ccwUBerI.s 			page 36


1262:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1263:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Check the NAND controller state */
1264:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
1265:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
1266:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****      return HAL_BUSY;
1267:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
1268:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1269:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Identify the device address */
1270:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand->Init.NandBank == FSMC_NAND_BANK2)
1271:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
1272:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     deviceaddress = NAND_DEVICE1;
1273:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
1274:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   else
1275:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
1276:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     deviceaddress = NAND_DEVICE2;
1277:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
1278:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1279:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the FSMC_NAND controller state */
1280:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY;  
1281:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1282:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Page address calculation */
1283:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   nandaddress = ARRAY_ADDRESS(pAddress, hnand); 
1284:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1285:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Column in page address */
1286:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   columnaddress = COLUMN_ADDRESS(hnand);
1287:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1288:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Spare area(s) write loop */
1289:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   while((NumSpareAreaTowrite != 0U) && (nandaddress < ((hnand->Config.BlockSize) * (hnand->Config.B
1290:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
1291:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* update the buffer size */
1292:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     size = (hnand->Config.SpareAreaSize) + ((hnand->Config.SpareAreaSize) * numSpareAreaWritten);
1293:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1294:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Cards with page size <= 512 bytes */
1295:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     if((hnand->Config.PageSize) <= 512U)
1296:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
1297:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       /* Send write Spare area command sequence */
1298:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_C;
1299:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
1300:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       
1301:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
1302:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
1303:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
1304:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1305:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1306:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
1307:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
1308:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
1309:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
1310:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1311:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1312:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
1313:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
1314:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
1315:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     else /* (hnand->Config.PageSize) > 512 */
1316:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
1317:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       /* Send write Spare area command sequence */
1318:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_A;
ARM GAS  /tmp/ccwUBerI.s 			page 37


1319:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
1320:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
1321:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
1322:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
1323:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_1ST_CYCLE(columnaddress);
1324:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
1325:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1326:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1327:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
1328:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
1329:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
1330:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_1ST_CYCLE(columnaddress);
1331:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
1332:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1333:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1334:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
1335:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
1336:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
1337:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1338:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Write data to memory */
1339:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     for(; index < size; index++)
1340:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
1341:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(__IO uint8_t *)deviceaddress = *(uint8_t *)pBuffer++;
1342:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
1343:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****    
1344:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE_TRUE1;
1345:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
1346:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Get tick */
1347:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     tickstart = HAL_GetTick();
1348:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
1349:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Read status until NAND is ready */
1350:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     while(HAL_NAND_Read_Status(hnand) != NAND_READY)
1351:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
1352:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       if((HAL_GetTick() - tickstart ) > NAND_WRITE_TIMEOUT)
1353:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
1354:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         return HAL_TIMEOUT; 
1355:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
1356:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
1357:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1358:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Increment written spare areas number */
1359:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     numSpareAreaWritten++;
1360:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
1361:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Decrement spare areas to write */
1362:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     NumSpareAreaTowrite--;
1363:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
1364:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Increment the NAND address */
1365:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     nandaddress = (uint32_t)(nandaddress + 1U);
1366:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
1367:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1368:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the NAND controller state */
1369:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
1370:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1371:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Process unlocked */
1372:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __HAL_UNLOCK(hnand);
1373:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
1374:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   return HAL_OK;
1375:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
ARM GAS  /tmp/ccwUBerI.s 			page 38


1376:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1377:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
1378:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief  Write Spare area(s) to NAND memory (16-bits addressing)
1379:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  hnand: pointer to a NAND_HandleTypeDef structure that contains
1380:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *                the configuration information for NAND module.
1381:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  pAddress : pointer to NAND address structure
1382:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  pBuffer : pointer to source buffer to write. pBuffer should be 16bits aligned.  
1383:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  NumSpareAreaTowrite  : number of spare areas to write to block
1384:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @retval HAL status
1385:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
1386:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Write_SpareArea_16b(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAdd
1387:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** {
1388:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __IO uint32_t index = 0U;
1389:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t tickstart = 0U;
1390:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t deviceaddress = 0U, size = 0U, numSpareAreaWritten = 0U, nandaddress = 0U, columnaddress
1391:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1392:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Process Locked */
1393:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __HAL_LOCK(hnand); 
1394:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1395:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Check the NAND controller state */
1396:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
1397:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
1398:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****      return HAL_BUSY;
1399:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
1400:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1401:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Identify the device address */
1402:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand->Init.NandBank == FSMC_NAND_BANK2)
1403:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
1404:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     deviceaddress = NAND_DEVICE1;
1405:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
1406:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   else
1407:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
1408:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     deviceaddress = NAND_DEVICE2;
1409:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
1410:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1411:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the FSMC_NAND controller state */
1412:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY;  
1413:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1414:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* NAND raw address calculation */
1415:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   nandaddress = ARRAY_ADDRESS(pAddress, hnand);
1416:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1417:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Column in page address */
1418:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   columnaddress = (uint32_t)(COLUMN_ADDRESS(hnand) * 2U);
1419:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1420:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Spare area(s) write loop */
1421:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   while((NumSpareAreaTowrite != 0U) && (nandaddress < ((hnand->Config.BlockSize) * (hnand->Config.B
1422:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
1423:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* update the buffer size */
1424:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     size = (hnand->Config.SpareAreaSize) + ((hnand->Config.SpareAreaSize) * numSpareAreaWritten);
1425:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1426:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Cards with page size <= 512 bytes */
1427:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     if((hnand->Config.PageSize) <= 512U)
1428:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
1429:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       /* Send write Spare area command sequence */
1430:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_C;
1431:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
1432:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
ARM GAS  /tmp/ccwUBerI.s 			page 39


1433:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
1434:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
1435:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
1436:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1437:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1438:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
1439:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
1440:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
1441:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
1442:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1443:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1444:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
1445:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
1446:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
1447:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     else /* (hnand->Config.PageSize) > 512 */
1448:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
1449:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       /* Send write Spare area command sequence */
1450:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_A;
1451:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
1452:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
1453:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
1454:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
1455:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_1ST_CYCLE(columnaddress);
1456:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
1457:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1458:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1459:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
1460:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
1461:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
1462:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_1ST_CYCLE(columnaddress);
1463:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
1464:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1465:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1466:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
1467:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
1468:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
1469:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1470:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Write data to memory */
1471:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     for(; index < size; index++)
1472:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
1473:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(__IO uint16_t *)deviceaddress = *(uint16_t *)pBuffer++;
1474:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
1475:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****    
1476:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE_TRUE1;
1477:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****    
1478:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Read status until NAND is ready */
1479:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     while(HAL_NAND_Read_Status(hnand) != NAND_READY)
1480:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
1481:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       /* Get tick */
1482:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       tickstart = HAL_GetTick();
1483:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
1484:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       if((HAL_GetTick() - tickstart ) > NAND_WRITE_TIMEOUT)
1485:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
1486:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         return HAL_TIMEOUT; 
1487:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
1488:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
1489:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
ARM GAS  /tmp/ccwUBerI.s 			page 40


1490:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Increment written spare areas number */
1491:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     numSpareAreaWritten++;
1492:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
1493:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Decrement spare areas to write */
1494:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     NumSpareAreaTowrite--;
1495:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
1496:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     /* Increment the NAND address */
1497:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     nandaddress = (uint32_t)(nandaddress + 1U);
1498:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
1499:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1500:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the NAND controller state */
1501:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
1502:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1503:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Process unlocked */
1504:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __HAL_UNLOCK(hnand);
1505:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1506:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   return HAL_OK;  
1507:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
1508:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1509:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
1510:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief  NAND memory Block erase 
1511:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  hnand: pointer to a NAND_HandleTypeDef structure that contains
1512:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *                the configuration information for NAND module.
1513:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  pAddress : pointer to NAND address structure
1514:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @retval HAL status
1515:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
1516:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Erase_Block(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAddress)
1517:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** {
1518:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t deviceaddress = 0U;
1519:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t tickstart = 0U;
1520:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1521:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Process Locked */
1522:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __HAL_LOCK(hnand);
1523:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1524:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Check the NAND controller state */
1525:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
1526:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
1527:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****      return HAL_BUSY;
1528:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
1529:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1530:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Identify the device address */
1531:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand->Init.NandBank == FSMC_NAND_BANK2)
1532:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
1533:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     deviceaddress = NAND_DEVICE1;
1534:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
1535:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   else
1536:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
1537:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     deviceaddress = NAND_DEVICE2;
1538:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
1539:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1540:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the NAND controller state */
1541:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY;  
1542:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1543:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Send Erase block command sequence */
1544:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_ERASE0;
1545:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1546:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(ARRAY_ADDRESS(pAddress,
ARM GAS  /tmp/ccwUBerI.s 			page 41


1547:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(ARRAY_ADDRESS(pAddress,
1548:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(ARRAY_ADDRESS(pAddress,
1549:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
1550:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_ERASE1; 
1551:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1552:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the NAND controller state */
1553:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
1554:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1555:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Get tick */
1556:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   tickstart = HAL_GetTick();
1557:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1558:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Read status until NAND is ready */
1559:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   while(HAL_NAND_Read_Status(hnand) != NAND_READY)
1560:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
1561:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     if((HAL_GetTick() - tickstart ) > NAND_WRITE_TIMEOUT)
1562:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
1563:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       /* Process unlocked */
1564:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       __HAL_UNLOCK(hnand);    
1565:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1566:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       return HAL_TIMEOUT; 
1567:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     } 
1568:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }    
1569:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****  
1570:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Process unlocked */
1571:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __HAL_UNLOCK(hnand);    
1572:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1573:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   return HAL_OK;  
1574:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
1575:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1576:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
1577:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief  NAND memory read status 
1578:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  hnand: pointer to a NAND_HandleTypeDef structure that contains
1579:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *                the configuration information for NAND module.
1580:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @retval NAND status
1581:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
1582:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** uint32_t HAL_NAND_Read_Status(NAND_HandleTypeDef *hnand)
1583:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** {
 685              		.loc 1 1583 0
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 0
 688              		@ frame_needed = 0, uses_anonymous_args = 0
 689              		@ link register save eliminated.
 690              	.LVL45:
1584:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t data = 0U;
1585:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t deviceaddress = 0U;
1586:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1587:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Identify the device address */
1588:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand->Init.NandBank == FSMC_NAND_BANK2)
 691              		.loc 1 1588 0
 692 0000 4368     		ldr	r3, [r0, #4]
 693 0002 102B     		cmp	r3, #16
 694 0004 0FD0     		beq	.L72
1589:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
1590:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     deviceaddress = NAND_DEVICE1;
1591:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
1592:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   else
1593:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
ARM GAS  /tmp/ccwUBerI.s 			page 42


1594:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     deviceaddress = NAND_DEVICE2;
 695              		.loc 1 1594 0
 696 0006 4FF00043 		mov	r3, #-2147483648
 697              	.L67:
 698              	.LVL46:
1595:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   } 
1596:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1597:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Send Read status operation command */
1598:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_STATUS;
 699              		.loc 1 1598 0
 700 000a 43F48032 		orr	r2, r3, #65536
 701 000e 7021     		movs	r1, #112
 702 0010 1170     		strb	r1, [r2]
1599:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1600:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Read status register data */
1601:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   data = *(__IO uint8_t *)deviceaddress;
 703              		.loc 1 1601 0
 704 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 705              	.LVL47:
 706 0014 DBB2     		uxtb	r3, r3
 707              	.LVL48:
1602:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1603:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Return the status */
1604:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if((data & NAND_ERROR) == NAND_ERROR)
 708              		.loc 1 1604 0
 709 0016 13F0010F 		tst	r3, #1
 710 001a 07D1     		bne	.L70
1605:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
1606:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     return NAND_ERROR;
1607:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   } 
1608:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   else if((data & NAND_READY) == NAND_READY)
 711              		.loc 1 1608 0
 712 001c 13F0400F 		tst	r3, #64
 713 0020 06D0     		beq	.L71
1609:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
1610:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     return NAND_READY;
 714              		.loc 1 1610 0
 715 0022 4020     		movs	r0, #64
 716              	.LVL49:
 717 0024 7047     		bx	lr
 718              	.LVL50:
 719              	.L72:
1590:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 720              		.loc 1 1590 0
 721 0026 4FF0E043 		mov	r3, #1879048192
 722 002a EEE7     		b	.L67
 723              	.LVL51:
 724              	.L70:
1606:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   } 
 725              		.loc 1 1606 0
 726 002c 0120     		movs	r0, #1
 727              	.LVL52:
 728 002e 7047     		bx	lr
 729              	.LVL53:
 730              	.L71:
1611:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
1612:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
ARM GAS  /tmp/ccwUBerI.s 			page 43


1613:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   return NAND_BUSY; 
 731              		.loc 1 1613 0
 732 0030 0020     		movs	r0, #0
 733              	.LVL54:
1614:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
 734              		.loc 1 1614 0
 735 0032 7047     		bx	lr
 736              		.cfi_endproc
 737              	.LFE82:
 739              		.section	.text.HAL_NAND_Read_Page_8b,"ax",%progbits
 740              		.align	1
 741              		.global	HAL_NAND_Read_Page_8b
 742              		.syntax unified
 743              		.thumb
 744              		.thumb_func
 745              		.fpu softvfp
 747              	HAL_NAND_Read_Page_8b:
 748              	.LFB73:
 471:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __IO uint32_t index  = 0U;
 749              		.loc 1 471 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 16
 752              		@ frame_needed = 0, uses_anonymous_args = 0
 753              	.LVL55:
 754 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 755              	.LCFI9:
 756              		.cfi_def_cfa_offset 36
 757              		.cfi_offset 4, -36
 758              		.cfi_offset 5, -32
 759              		.cfi_offset 6, -28
 760              		.cfi_offset 7, -24
 761              		.cfi_offset 8, -20
 762              		.cfi_offset 9, -16
 763              		.cfi_offset 10, -12
 764              		.cfi_offset 11, -8
 765              		.cfi_offset 14, -4
 766 0004 85B0     		sub	sp, sp, #20
 767              	.LCFI10:
 768              		.cfi_def_cfa_offset 56
 769 0006 9946     		mov	r9, r3
 472:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t tickstart = 0U;
 770              		.loc 1 472 0
 771 0008 0023     		movs	r3, #0
 772              	.LVL56:
 773 000a 0393     		str	r3, [sp, #12]
 774              	.LVL57:
 477:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 775              		.loc 1 477 0
 776 000c 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 777 0010 012B     		cmp	r3, #1
 778 0012 00F0AB80 		beq	.L88
 779 0016 0746     		mov	r7, r0
 780 0018 1446     		mov	r4, r2
 477:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 781              		.loc 1 477 0 is_stmt 0 discriminator 2
 782 001a 0123     		movs	r3, #1
 783 001c 80F82030 		strb	r3, [r0, #32]
ARM GAS  /tmp/ccwUBerI.s 			page 44


 480:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 784              		.loc 1 480 0 is_stmt 1 discriminator 2
 785 0020 90F82130 		ldrb	r3, [r0, #33]	@ zero_extendqisi2
 786 0024 DBB2     		uxtb	r3, r3
 787 0026 022B     		cmp	r3, #2
 788 0028 00F0A480 		beq	.L89
 486:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 789              		.loc 1 486 0
 790 002c 4368     		ldr	r3, [r0, #4]
 791 002e 102B     		cmp	r3, #16
 792 0030 11D0     		beq	.L93
 492:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 793              		.loc 1 492 0
 794 0032 4FF00046 		mov	r6, #-2147483648
 795              	.L75:
 796              	.LVL58:
 496:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 797              		.loc 1 496 0
 798 0036 0223     		movs	r3, #2
 799 0038 87F82130 		strb	r3, [r7, #33]
 499:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 800              		.loc 1 499 0
 801 003c 0B88     		ldrh	r3, [r1]
 802 003e 8A88     		ldrh	r2, [r1, #4]
 803              	.LVL59:
 804 0040 B1F80280 		ldrh	r8, [r1, #2]
 805 0044 B96B     		ldr	r1, [r7, #56]
 806              	.LVL60:
 807 0046 01FB0828 		mla	r8, r1, r8, r2
 808 004a FA6A     		ldr	r2, [r7, #44]
 809 004c 02FB0838 		mla	r8, r2, r8, r3
 810              	.LVL61:
 474:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 811              		.loc 1 474 0
 812 0050 4FF0000A 		mov	r10, #0
 502:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 813              		.loc 1 502 0
 814 0054 43E0     		b	.L76
 815              	.LVL62:
 816              	.L93:
 488:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 817              		.loc 1 488 0
 818 0056 4FF0E046 		mov	r6, #1879048192
 819 005a ECE7     		b	.L75
 820              	.LVL63:
 821              	.L78:
 521:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 822              		.loc 1 521 0
 823 005c 46F40033 		orr	r3, r6, #131072
 824 0060 0022     		movs	r2, #0
 825 0062 1A70     		strb	r2, [r3]
 522:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 826              		.loc 1 522 0
 827 0064 5FFA88F2 		uxtb	r2, r8
 828 0068 1A70     		strb	r2, [r3]
 523:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 829              		.loc 1 523 0
ARM GAS  /tmp/ccwUBerI.s 			page 45


 830 006a C8F30722 		ubfx	r2, r8, #8, #8
 831 006e 1A70     		strb	r2, [r3]
 524:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 832              		.loc 1 524 0
 833 0070 C8F30742 		ubfx	r2, r8, #16, #8
 834 0074 1A70     		strb	r2, [r3]
 835 0076 5AE0     		b	.L79
 836              	.L77:
 529:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 837              		.loc 1 529 0
 838 0078 FA6A     		ldr	r2, [r7, #44]
 839 007a 3B6B     		ldr	r3, [r7, #48]
 840 007c 03FB02F3 		mul	r3, r3, r2
 841 0080 B3F5803F 		cmp	r3, #65536
 842 0084 0BD2     		bcs	.L80
 531:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 843              		.loc 1 531 0
 844 0086 46F40033 		orr	r3, r6, #131072
 845 008a 0022     		movs	r2, #0
 846 008c 1A70     		strb	r2, [r3]
 532:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 847              		.loc 1 532 0
 848 008e 1A70     		strb	r2, [r3]
 533:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 849              		.loc 1 533 0
 850 0090 5FFA88F2 		uxtb	r2, r8
 851 0094 1A70     		strb	r2, [r3]
 534:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 852              		.loc 1 534 0
 853 0096 C8F30722 		ubfx	r2, r8, #8, #8
 854 009a 1A70     		strb	r2, [r3]
 855 009c 47E0     		b	.L79
 856              	.L80:
 538:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 857              		.loc 1 538 0
 858 009e 46F40033 		orr	r3, r6, #131072
 859 00a2 0022     		movs	r2, #0
 860 00a4 1A70     		strb	r2, [r3]
 539:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 861              		.loc 1 539 0
 862 00a6 1A70     		strb	r2, [r3]
 540:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 863              		.loc 1 540 0
 864 00a8 5FFA88F2 		uxtb	r2, r8
 865 00ac 1A70     		strb	r2, [r3]
 541:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 866              		.loc 1 541 0
 867 00ae C8F30722 		ubfx	r2, r8, #8, #8
 868 00b2 1A70     		strb	r2, [r3]
 542:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 869              		.loc 1 542 0
 870 00b4 C8F30742 		ubfx	r2, r8, #16, #8
 871 00b8 1A70     		strb	r2, [r3]
 872 00ba 38E0     		b	.L79
 873              	.LVL64:
 874              	.L94:
 564:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
ARM GAS  /tmp/ccwUBerI.s 			page 46


 875              		.loc 1 564 0
 876 00bc 0023     		movs	r3, #0
 877 00be 8BF80030 		strb	r3, [fp]
 878 00c2 05E0     		b	.L84
 879              	.LVL65:
 880              	.L85:
 570:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 881              		.loc 1 570 0 discriminator 2
 882 00c4 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 883 00c6 2370     		strb	r3, [r4]
 568:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 884              		.loc 1 568 0 discriminator 2
 885 00c8 039B     		ldr	r3, [sp, #12]
 886 00ca 0133     		adds	r3, r3, #1
 887 00cc 0393     		str	r3, [sp, #12]
 570:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 888              		.loc 1 570 0 discriminator 2
 889 00ce 0134     		adds	r4, r4, #1
 890              	.LVL66:
 891              	.L84:
 568:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 892              		.loc 1 568 0 discriminator 1
 893 00d0 039B     		ldr	r3, [sp, #12]
 894 00d2 9D42     		cmp	r5, r3
 895 00d4 F6D8     		bhi	.L85
 896              	.LVL67:
 577:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 897              		.loc 1 577 0
 898 00d6 09F1FF39 		add	r9, r9, #-1
 899              	.LVL68:
 580:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 900              		.loc 1 580 0
 901 00da 08F10108 		add	r8, r8, #1
 902              	.LVL69:
 903              	.L76:
 502:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 904              		.loc 1 502 0
 905 00de B9F1000F 		cmp	r9, #0
 906 00e2 3CD0     		beq	.L86
 502:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 907              		.loc 1 502 0 is_stmt 0 discriminator 1
 908 00e4 FA6A     		ldr	r2, [r7, #44]
 909 00e6 3B6B     		ldr	r3, [r7, #48]
 910 00e8 03FB02F3 		mul	r3, r3, r2
 911 00ec 9845     		cmp	r8, r3
 912 00ee 36D2     		bcs	.L86
 505:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 913              		.loc 1 505 0 is_stmt 1
 914 00f0 0AF1010A 		add	r10, r10, #1
 915              	.LVL70:
 916 00f4 7D6A     		ldr	r5, [r7, #36]
 917 00f6 05FB0AF5 		mul	r5, r5, r10
 918              	.LVL71:
 508:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****    
 919              		.loc 1 508 0
 920 00fa 46F4803B 		orr	fp, r6, #65536
 921 00fe 0023     		movs	r3, #0
ARM GAS  /tmp/ccwUBerI.s 			page 47


 922 0100 8BF80030 		strb	r3, [fp]
 511:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 923              		.loc 1 511 0
 924 0104 7B6A     		ldr	r3, [r7, #36]
 925 0106 B3F5007F 		cmp	r3, #512
 926 010a B5D8     		bhi	.L77
 513:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 927              		.loc 1 513 0
 928 010c FA6A     		ldr	r2, [r7, #44]
 929 010e 3B6B     		ldr	r3, [r7, #48]
 930 0110 03FB02F3 		mul	r3, r3, r2
 931 0114 B3F5803F 		cmp	r3, #65536
 932 0118 A0D2     		bcs	.L78
 515:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 933              		.loc 1 515 0
 934 011a 46F40033 		orr	r3, r6, #131072
 935 011e 0022     		movs	r2, #0
 936 0120 1A70     		strb	r2, [r3]
 516:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 937              		.loc 1 516 0
 938 0122 5FFA88F2 		uxtb	r2, r8
 939 0126 1A70     		strb	r2, [r3]
 517:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 940              		.loc 1 517 0
 941 0128 C8F30722 		ubfx	r2, r8, #8, #8
 942 012c 1A70     		strb	r2, [r3]
 943              	.L79:
 546:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 944              		.loc 1 546 0
 945 012e 3023     		movs	r3, #48
 946 0130 8BF80030 		strb	r3, [fp]
 549:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 947              		.loc 1 549 0
 948 0134 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
 949 0138 012B     		cmp	r3, #1
 950 013a C9D1     		bne	.L84
 552:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       
 951              		.loc 1 552 0
 952 013c FFF7FEFF 		bl	HAL_GetTick
 953              	.LVL72:
 954 0140 0190     		str	r0, [sp, #4]
 955              	.LVL73:
 956              	.L82:
 555:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 957              		.loc 1 555 0
 958 0142 3846     		mov	r0, r7
 959 0144 FFF7FEFF 		bl	HAL_NAND_Read_Status
 960              	.LVL74:
 961 0148 4028     		cmp	r0, #64
 962 014a B7D0     		beq	.L94
 557:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         {
 963              		.loc 1 557 0
 964 014c FFF7FEFF 		bl	HAL_GetTick
 965              	.LVL75:
 966 0150 019B     		ldr	r3, [sp, #4]
 967 0152 C01A     		subs	r0, r0, r3
 968 0154 B0F57A7F 		cmp	r0, #1000
ARM GAS  /tmp/ccwUBerI.s 			page 48


 969 0158 F3D9     		bls	.L82
 559:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         }
 970              		.loc 1 559 0
 971 015a 0320     		movs	r0, #3
 972 015c 07E0     		b	.L74
 973              	.LVL76:
 974              	.L86:
 584:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 975              		.loc 1 584 0
 976 015e 0123     		movs	r3, #1
 977 0160 87F82130 		strb	r3, [r7, #33]
 587:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 978              		.loc 1 587 0
 979 0164 0020     		movs	r0, #0
 980 0166 87F82000 		strb	r0, [r7, #32]
 589:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
 981              		.loc 1 589 0
 982 016a 00E0     		b	.L74
 983              	.LVL77:
 984              	.L88:
 477:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 985              		.loc 1 477 0
 986 016c 0220     		movs	r0, #2
 987              	.LVL78:
 988              	.L74:
 590:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 989              		.loc 1 590 0
 990 016e 05B0     		add	sp, sp, #20
 991              	.LCFI11:
 992              		.cfi_remember_state
 993              		.cfi_def_cfa_offset 36
 994              		@ sp needed
 995 0170 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 996              	.LVL79:
 997              	.L89:
 998              	.LCFI12:
 999              		.cfi_restore_state
 482:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 1000              		.loc 1 482 0
 1001 0174 0220     		movs	r0, #2
 1002              	.LVL80:
 1003 0176 FAE7     		b	.L74
 1004              		.cfi_endproc
 1005              	.LFE73:
 1007              		.section	.text.HAL_NAND_Read_Page_16b,"ax",%progbits
 1008              		.align	1
 1009              		.global	HAL_NAND_Read_Page_16b
 1010              		.syntax unified
 1011              		.thumb
 1012              		.thumb_func
 1013              		.fpu softvfp
 1015              	HAL_NAND_Read_Page_16b:
 1016              	.LFB74:
 602:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __IO uint32_t index  = 0U;
 1017              		.loc 1 602 0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccwUBerI.s 			page 49


 1020              		@ frame_needed = 0, uses_anonymous_args = 0
 1021              	.LVL81:
 1022 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1023              	.LCFI13:
 1024              		.cfi_def_cfa_offset 36
 1025              		.cfi_offset 4, -36
 1026              		.cfi_offset 5, -32
 1027              		.cfi_offset 6, -28
 1028              		.cfi_offset 7, -24
 1029              		.cfi_offset 8, -20
 1030              		.cfi_offset 9, -16
 1031              		.cfi_offset 10, -12
 1032              		.cfi_offset 11, -8
 1033              		.cfi_offset 14, -4
 1034 0004 85B0     		sub	sp, sp, #20
 1035              	.LCFI14:
 1036              		.cfi_def_cfa_offset 56
 1037 0006 9946     		mov	r9, r3
 603:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t tickstart = 0U;
 1038              		.loc 1 603 0
 1039 0008 0023     		movs	r3, #0
 1040              	.LVL82:
 1041 000a 0393     		str	r3, [sp, #12]
 1042              	.LVL83:
 608:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 1043              		.loc 1 608 0
 1044 000c 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1045 0010 012B     		cmp	r3, #1
 1046 0012 00F0AB80 		beq	.L110
 1047 0016 0746     		mov	r7, r0
 1048 0018 1446     		mov	r4, r2
 608:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 1049              		.loc 1 608 0 is_stmt 0 discriminator 2
 1050 001a 0123     		movs	r3, #1
 1051 001c 80F82030 		strb	r3, [r0, #32]
 611:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 1052              		.loc 1 611 0 is_stmt 1 discriminator 2
 1053 0020 90F82130 		ldrb	r3, [r0, #33]	@ zero_extendqisi2
 1054 0024 DBB2     		uxtb	r3, r3
 1055 0026 022B     		cmp	r3, #2
 1056 0028 00F0A480 		beq	.L111
 617:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 1057              		.loc 1 617 0
 1058 002c 4368     		ldr	r3, [r0, #4]
 1059 002e 102B     		cmp	r3, #16
 1060 0030 11D0     		beq	.L115
 623:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 1061              		.loc 1 623 0
 1062 0032 4FF00046 		mov	r6, #-2147483648
 1063              	.L97:
 1064              	.LVL84:
 627:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 1065              		.loc 1 627 0
 1066 0036 0223     		movs	r3, #2
 1067 0038 87F82130 		strb	r3, [r7, #33]
 630:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 1068              		.loc 1 630 0
ARM GAS  /tmp/ccwUBerI.s 			page 50


 1069 003c 0B88     		ldrh	r3, [r1]
 1070 003e 8A88     		ldrh	r2, [r1, #4]
 1071              	.LVL85:
 1072 0040 B1F80280 		ldrh	r8, [r1, #2]
 1073 0044 B96B     		ldr	r1, [r7, #56]
 1074              	.LVL86:
 1075 0046 01FB0828 		mla	r8, r1, r8, r2
 1076 004a FA6A     		ldr	r2, [r7, #44]
 1077 004c 02FB0838 		mla	r8, r2, r8, r3
 1078              	.LVL87:
 605:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 1079              		.loc 1 605 0
 1080 0050 4FF0000A 		mov	r10, #0
 633:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 1081              		.loc 1 633 0
 1082 0054 43E0     		b	.L98
 1083              	.LVL88:
 1084              	.L115:
 619:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 1085              		.loc 1 619 0
 1086 0056 4FF0E046 		mov	r6, #1879048192
 1087 005a ECE7     		b	.L97
 1088              	.LVL89:
 1089              	.L100:
 652:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1090              		.loc 1 652 0
 1091 005c 46F40033 		orr	r3, r6, #131072
 1092 0060 0022     		movs	r2, #0
 1093 0062 1A70     		strb	r2, [r3]
 653:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1094              		.loc 1 653 0
 1095 0064 5FFA88F2 		uxtb	r2, r8
 1096 0068 1A70     		strb	r2, [r3]
 654:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 1097              		.loc 1 654 0
 1098 006a C8F30722 		ubfx	r2, r8, #8, #8
 1099 006e 1A70     		strb	r2, [r3]
 655:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 1100              		.loc 1 655 0
 1101 0070 C8F30742 		ubfx	r2, r8, #16, #8
 1102 0074 1A70     		strb	r2, [r3]
 1103 0076 5AE0     		b	.L101
 1104              	.L99:
 660:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 1105              		.loc 1 660 0
 1106 0078 FA6A     		ldr	r2, [r7, #44]
 1107 007a 3B6B     		ldr	r3, [r7, #48]
 1108 007c 03FB02F3 		mul	r3, r3, r2
 1109 0080 B3F5803F 		cmp	r3, #65536
 1110 0084 0BD2     		bcs	.L102
 662:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 1111              		.loc 1 662 0
 1112 0086 46F40033 		orr	r3, r6, #131072
 1113 008a 0022     		movs	r2, #0
 1114 008c 1A70     		strb	r2, [r3]
 663:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1115              		.loc 1 663 0
ARM GAS  /tmp/ccwUBerI.s 			page 51


 1116 008e 1A70     		strb	r2, [r3]
 664:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1117              		.loc 1 664 0
 1118 0090 5FFA88F2 		uxtb	r2, r8
 1119 0094 1A70     		strb	r2, [r3]
 665:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 1120              		.loc 1 665 0
 1121 0096 C8F30722 		ubfx	r2, r8, #8, #8
 1122 009a 1A70     		strb	r2, [r3]
 1123 009c 47E0     		b	.L101
 1124              	.L102:
 669:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 1125              		.loc 1 669 0
 1126 009e 46F40033 		orr	r3, r6, #131072
 1127 00a2 0022     		movs	r2, #0
 1128 00a4 1A70     		strb	r2, [r3]
 670:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1129              		.loc 1 670 0
 1130 00a6 1A70     		strb	r2, [r3]
 671:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1131              		.loc 1 671 0
 1132 00a8 5FFA88F2 		uxtb	r2, r8
 1133 00ac 1A70     		strb	r2, [r3]
 672:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 1134              		.loc 1 672 0
 1135 00ae C8F30722 		ubfx	r2, r8, #8, #8
 1136 00b2 1A70     		strb	r2, [r3]
 673:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 1137              		.loc 1 673 0
 1138 00b4 C8F30742 		ubfx	r2, r8, #16, #8
 1139 00b8 1A70     		strb	r2, [r3]
 1140 00ba 38E0     		b	.L101
 1141              	.LVL90:
 1142              	.L116:
 694:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 1143              		.loc 1 694 0
 1144 00bc 0023     		movs	r3, #0
 1145 00be 8BF80030 		strb	r3, [fp]
 1146 00c2 05E0     		b	.L106
 1147              	.LVL91:
 1148              	.L107:
 700:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 1149              		.loc 1 700 0 discriminator 2
 1150 00c4 3388     		ldrh	r3, [r6]
 1151 00c6 2380     		strh	r3, [r4]	@ movhi
 698:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 1152              		.loc 1 698 0 discriminator 2
 1153 00c8 039B     		ldr	r3, [sp, #12]
 1154 00ca 0133     		adds	r3, r3, #1
 1155 00cc 0393     		str	r3, [sp, #12]
 700:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 1156              		.loc 1 700 0 discriminator 2
 1157 00ce 0234     		adds	r4, r4, #2
 1158              	.LVL92:
 1159              	.L106:
 698:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 1160              		.loc 1 698 0 discriminator 1
ARM GAS  /tmp/ccwUBerI.s 			page 52


 1161 00d0 039B     		ldr	r3, [sp, #12]
 1162 00d2 9D42     		cmp	r5, r3
 1163 00d4 F6D8     		bhi	.L107
 1164              	.LVL93:
 707:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 1165              		.loc 1 707 0
 1166 00d6 09F1FF39 		add	r9, r9, #-1
 1167              	.LVL94:
 710:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 1168              		.loc 1 710 0
 1169 00da 08F10108 		add	r8, r8, #1
 1170              	.LVL95:
 1171              	.L98:
 633:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 1172              		.loc 1 633 0
 1173 00de B9F1000F 		cmp	r9, #0
 1174 00e2 3CD0     		beq	.L108
 633:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 1175              		.loc 1 633 0 is_stmt 0 discriminator 1
 1176 00e4 FA6A     		ldr	r2, [r7, #44]
 1177 00e6 3B6B     		ldr	r3, [r7, #48]
 1178 00e8 03FB02F3 		mul	r3, r3, r2
 1179 00ec 9845     		cmp	r8, r3
 1180 00ee 36D2     		bcs	.L108
 636:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 1181              		.loc 1 636 0 is_stmt 1
 1182 00f0 0AF1010A 		add	r10, r10, #1
 1183              	.LVL96:
 1184 00f4 7D6A     		ldr	r5, [r7, #36]
 1185 00f6 05FB0AF5 		mul	r5, r5, r10
 1186              	.LVL97:
 639:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 1187              		.loc 1 639 0
 1188 00fa 46F4803B 		orr	fp, r6, #65536
 1189 00fe 0023     		movs	r3, #0
 1190 0100 8BF80030 		strb	r3, [fp]
 642:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 1191              		.loc 1 642 0
 1192 0104 7B6A     		ldr	r3, [r7, #36]
 1193 0106 B3F5007F 		cmp	r3, #512
 1194 010a B5D8     		bhi	.L99
 644:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 1195              		.loc 1 644 0
 1196 010c FA6A     		ldr	r2, [r7, #44]
 1197 010e 3B6B     		ldr	r3, [r7, #48]
 1198 0110 03FB02F3 		mul	r3, r3, r2
 1199 0114 B3F5803F 		cmp	r3, #65536
 1200 0118 A0D2     		bcs	.L100
 646:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1201              		.loc 1 646 0
 1202 011a 46F40033 		orr	r3, r6, #131072
 1203 011e 0022     		movs	r2, #0
 1204 0120 1A70     		strb	r2, [r3]
 647:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1205              		.loc 1 647 0
 1206 0122 5FFA88F2 		uxtb	r2, r8
 1207 0126 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccwUBerI.s 			page 53


 648:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 1208              		.loc 1 648 0
 1209 0128 C8F30722 		ubfx	r2, r8, #8, #8
 1210 012c 1A70     		strb	r2, [r3]
 1211              	.L101:
 677:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 1212              		.loc 1 677 0
 1213 012e 3023     		movs	r3, #48
 1214 0130 8BF80030 		strb	r3, [fp]
 679:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 1215              		.loc 1 679 0
 1216 0134 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
 1217 0138 012B     		cmp	r3, #1
 1218 013a C9D1     		bne	.L106
 682:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       
 1219              		.loc 1 682 0
 1220 013c FFF7FEFF 		bl	HAL_GetTick
 1221              	.LVL98:
 1222 0140 0190     		str	r0, [sp, #4]
 1223              	.LVL99:
 1224              	.L104:
 685:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 1225              		.loc 1 685 0
 1226 0142 3846     		mov	r0, r7
 1227 0144 FFF7FEFF 		bl	HAL_NAND_Read_Status
 1228              	.LVL100:
 1229 0148 4028     		cmp	r0, #64
 1230 014a B7D0     		beq	.L116
 687:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         {
 1231              		.loc 1 687 0
 1232 014c FFF7FEFF 		bl	HAL_GetTick
 1233              	.LVL101:
 1234 0150 019B     		ldr	r3, [sp, #4]
 1235 0152 C01A     		subs	r0, r0, r3
 1236 0154 B0F57A7F 		cmp	r0, #1000
 1237 0158 F3D9     		bls	.L104
 689:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         }
 1238              		.loc 1 689 0
 1239 015a 0320     		movs	r0, #3
 1240 015c 07E0     		b	.L96
 1241              	.LVL102:
 1242              	.L108:
 714:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 1243              		.loc 1 714 0
 1244 015e 0123     		movs	r3, #1
 1245 0160 87F82130 		strb	r3, [r7, #33]
 717:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 1246              		.loc 1 717 0
 1247 0164 0020     		movs	r0, #0
 1248 0166 87F82000 		strb	r0, [r7, #32]
 719:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
 1249              		.loc 1 719 0
 1250 016a 00E0     		b	.L96
 1251              	.LVL103:
 1252              	.L110:
 608:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 1253              		.loc 1 608 0
ARM GAS  /tmp/ccwUBerI.s 			page 54


 1254 016c 0220     		movs	r0, #2
 1255              	.LVL104:
 1256              	.L96:
 720:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 1257              		.loc 1 720 0
 1258 016e 05B0     		add	sp, sp, #20
 1259              	.LCFI15:
 1260              		.cfi_remember_state
 1261              		.cfi_def_cfa_offset 36
 1262              		@ sp needed
 1263 0170 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1264              	.LVL105:
 1265              	.L111:
 1266              	.LCFI16:
 1267              		.cfi_restore_state
 613:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 1268              		.loc 1 613 0
 1269 0174 0220     		movs	r0, #2
 1270              	.LVL106:
 1271 0176 FAE7     		b	.L96
 1272              		.cfi_endproc
 1273              	.LFE74:
 1275              		.section	.text.HAL_NAND_Write_Page_8b,"ax",%progbits
 1276              		.align	1
 1277              		.global	HAL_NAND_Write_Page_8b
 1278              		.syntax unified
 1279              		.thumb
 1280              		.thumb_func
 1281              		.fpu softvfp
 1283              	HAL_NAND_Write_Page_8b:
 1284              	.LFB75:
 732:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __IO uint32_t index = 0U;
 1285              		.loc 1 732 0
 1286              		.cfi_startproc
 1287              		@ args = 0, pretend = 0, frame = 8
 1288              		@ frame_needed = 0, uses_anonymous_args = 0
 1289              	.LVL107:
 1290 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1291              	.LCFI17:
 1292              		.cfi_def_cfa_offset 32
 1293              		.cfi_offset 4, -32
 1294              		.cfi_offset 5, -28
 1295              		.cfi_offset 6, -24
 1296              		.cfi_offset 7, -20
 1297              		.cfi_offset 8, -16
 1298              		.cfi_offset 9, -12
 1299              		.cfi_offset 10, -8
 1300              		.cfi_offset 14, -4
 1301 0004 82B0     		sub	sp, sp, #8
 1302              	.LCFI18:
 1303              		.cfi_def_cfa_offset 40
 1304 0006 9946     		mov	r9, r3
 733:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t tickstart = 0U;
 1305              		.loc 1 733 0
 1306 0008 0023     		movs	r3, #0
 1307              	.LVL108:
 1308 000a 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccwUBerI.s 			page 55


 1309              	.LVL109:
 738:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 1310              		.loc 1 738 0
 1311 000c 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1312 0010 012B     		cmp	r3, #1
 1313 0012 00F0A380 		beq	.L131
 1314 0016 0646     		mov	r6, r0
 1315 0018 1546     		mov	r5, r2
 738:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 1316              		.loc 1 738 0 is_stmt 0 discriminator 2
 1317 001a 0123     		movs	r3, #1
 1318 001c 80F82030 		strb	r3, [r0, #32]
 741:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 1319              		.loc 1 741 0 is_stmt 1 discriminator 2
 1320 0020 90F82130 		ldrb	r3, [r0, #33]	@ zero_extendqisi2
 1321 0024 DBB2     		uxtb	r3, r3
 1322 0026 022B     		cmp	r3, #2
 1323 0028 00F09C80 		beq	.L132
 747:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 1324              		.loc 1 747 0
 1325 002c 4368     		ldr	r3, [r0, #4]
 1326 002e 102B     		cmp	r3, #16
 1327 0030 3AD0     		beq	.L136
 753:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 1328              		.loc 1 753 0
 1329 0032 4FF00047 		mov	r7, #-2147483648
 1330              	.L119:
 1331              	.LVL110:
 757:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 1332              		.loc 1 757 0
 1333 0036 0223     		movs	r3, #2
 1334 0038 86F82130 		strb	r3, [r6, #33]
 760:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 1335              		.loc 1 760 0
 1336 003c 0B88     		ldrh	r3, [r1]
 1337 003e 8A88     		ldrh	r2, [r1, #4]
 1338              	.LVL111:
 1339 0040 B1F80280 		ldrh	r8, [r1, #2]
 1340 0044 B16B     		ldr	r1, [r6, #56]
 1341              	.LVL112:
 1342 0046 01FB0828 		mla	r8, r1, r8, r2
 1343 004a F26A     		ldr	r2, [r6, #44]
 1344 004c 02FB0838 		mla	r8, r2, r8, r3
 1345              	.LVL113:
 735:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 1346              		.loc 1 735 0
 1347 0050 4FF0000A 		mov	r10, #0
 1348              	.LVL114:
 1349              	.L120:
 763:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 1350              		.loc 1 763 0
 1351 0054 B9F1000F 		cmp	r9, #0
 1352 0058 79D0     		beq	.L129
 763:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 1353              		.loc 1 763 0 is_stmt 0 discriminator 1
 1354 005a F26A     		ldr	r2, [r6, #44]
 1355 005c 336B     		ldr	r3, [r6, #48]
ARM GAS  /tmp/ccwUBerI.s 			page 56


 1356 005e 03FB02F3 		mul	r3, r3, r2
 1357 0062 9845     		cmp	r8, r3
 1358 0064 73D2     		bcs	.L129
 766:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 1359              		.loc 1 766 0 is_stmt 1
 1360 0066 0AF1010A 		add	r10, r10, #1
 1361              	.LVL115:
 1362 006a 726A     		ldr	r2, [r6, #36]
 1363 006c 02FB0AF2 		mul	r2, r2, r10
 1364              	.LVL116:
 769:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 1365              		.loc 1 769 0
 1366 0070 47F48031 		orr	r1, r7, #65536
 1367 0074 0023     		movs	r3, #0
 1368 0076 0B70     		strb	r3, [r1]
 770:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 1369              		.loc 1 770 0
 1370 0078 8023     		movs	r3, #128
 1371 007a 0B70     		strb	r3, [r1]
 773:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 1372              		.loc 1 773 0
 1373 007c 736A     		ldr	r3, [r6, #36]
 1374 007e B3F5007F 		cmp	r3, #512
 1375 0082 22D8     		bhi	.L121
 775:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 1376              		.loc 1 775 0
 1377 0084 F06A     		ldr	r0, [r6, #44]
 1378 0086 336B     		ldr	r3, [r6, #48]
 1379 0088 03FB00F3 		mul	r3, r3, r0
 1380 008c B3F5803F 		cmp	r3, #65536
 1381 0090 0DD2     		bcs	.L122
 777:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1382              		.loc 1 777 0
 1383 0092 47F40033 		orr	r3, r7, #131072
 1384 0096 0020     		movs	r0, #0
 1385 0098 1870     		strb	r0, [r3]
 778:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1386              		.loc 1 778 0
 1387 009a 5FFA88F0 		uxtb	r0, r8
 1388 009e 1870     		strb	r0, [r3]
 779:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 1389              		.loc 1 779 0
 1390 00a0 C8F30720 		ubfx	r0, r8, #8, #8
 1391 00a4 1870     		strb	r0, [r3]
 1392 00a6 38E0     		b	.L125
 1393              	.LVL117:
 1394              	.L136:
 749:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 1395              		.loc 1 749 0
 1396 00a8 4FF0E047 		mov	r7, #1879048192
 1397 00ac C3E7     		b	.L119
 1398              	.LVL118:
 1399              	.L122:
 783:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1400              		.loc 1 783 0
 1401 00ae 47F40033 		orr	r3, r7, #131072
 1402 00b2 0020     		movs	r0, #0
ARM GAS  /tmp/ccwUBerI.s 			page 57


 1403 00b4 1870     		strb	r0, [r3]
 784:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1404              		.loc 1 784 0
 1405 00b6 5FFA88F0 		uxtb	r0, r8
 1406 00ba 1870     		strb	r0, [r3]
 785:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 1407              		.loc 1 785 0
 1408 00bc C8F30720 		ubfx	r0, r8, #8, #8
 1409 00c0 1870     		strb	r0, [r3]
 786:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 1410              		.loc 1 786 0
 1411 00c2 C8F30740 		ubfx	r0, r8, #16, #8
 1412 00c6 1870     		strb	r0, [r3]
 1413 00c8 27E0     		b	.L125
 1414              	.L121:
 791:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 1415              		.loc 1 791 0
 1416 00ca F06A     		ldr	r0, [r6, #44]
 1417 00cc 336B     		ldr	r3, [r6, #48]
 1418 00ce 03FB00F3 		mul	r3, r3, r0
 1419 00d2 B3F5803F 		cmp	r3, #65536
 1420 00d6 0BD2     		bcs	.L124
 793:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 1421              		.loc 1 793 0
 1422 00d8 47F40033 		orr	r3, r7, #131072
 1423 00dc 0020     		movs	r0, #0
 1424 00de 1870     		strb	r0, [r3]
 794:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1425              		.loc 1 794 0
 1426 00e0 1870     		strb	r0, [r3]
 795:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1427              		.loc 1 795 0
 1428 00e2 5FFA88F0 		uxtb	r0, r8
 1429 00e6 1870     		strb	r0, [r3]
 796:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 1430              		.loc 1 796 0
 1431 00e8 C8F30720 		ubfx	r0, r8, #8, #8
 1432 00ec 1870     		strb	r0, [r3]
 1433 00ee 14E0     		b	.L125
 1434              	.L124:
 800:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 1435              		.loc 1 800 0
 1436 00f0 47F40033 		orr	r3, r7, #131072
 1437 00f4 0020     		movs	r0, #0
 1438 00f6 1870     		strb	r0, [r3]
 801:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1439              		.loc 1 801 0
 1440 00f8 1870     		strb	r0, [r3]
 802:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1441              		.loc 1 802 0
 1442 00fa 5FFA88F0 		uxtb	r0, r8
 1443 00fe 1870     		strb	r0, [r3]
 803:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 1444              		.loc 1 803 0
 1445 0100 C8F30720 		ubfx	r0, r8, #8, #8
 1446 0104 1870     		strb	r0, [r3]
 804:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
ARM GAS  /tmp/ccwUBerI.s 			page 58


 1447              		.loc 1 804 0
 1448 0106 C8F30740 		ubfx	r0, r8, #16, #8
 1449 010a 1870     		strb	r0, [r3]
 1450 010c 05E0     		b	.L125
 1451              	.L126:
 1452              	.LVL119:
 812:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 1453              		.loc 1 812 0 discriminator 2
 1454 010e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 1455 0110 3B70     		strb	r3, [r7]
 810:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 1456              		.loc 1 810 0 discriminator 2
 1457 0112 019B     		ldr	r3, [sp, #4]
 1458 0114 0133     		adds	r3, r3, #1
 1459 0116 0193     		str	r3, [sp, #4]
 812:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 1460              		.loc 1 812 0 discriminator 2
 1461 0118 0135     		adds	r5, r5, #1
 1462              	.LVL120:
 1463              	.L125:
 810:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 1464              		.loc 1 810 0 discriminator 1
 1465 011a 019B     		ldr	r3, [sp, #4]
 1466 011c 9A42     		cmp	r2, r3
 1467 011e F6D8     		bhi	.L126
 815:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 1468              		.loc 1 815 0
 1469 0120 1023     		movs	r3, #16
 1470 0122 0B70     		strb	r3, [r1]
 1471              	.LVL121:
 1472              	.L127:
 818:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 1473              		.loc 1 818 0
 1474 0124 3046     		mov	r0, r6
 1475 0126 FFF7FEFF 		bl	HAL_NAND_Read_Status
 1476              	.LVL122:
 1477 012a 4028     		cmp	r0, #64
 1478 012c 0AD0     		beq	.L137
 821:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       
 1479              		.loc 1 821 0
 1480 012e FFF7FEFF 		bl	HAL_GetTick
 1481              	.LVL123:
 1482 0132 0446     		mov	r4, r0
 1483              	.LVL124:
 823:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 1484              		.loc 1 823 0
 1485 0134 FFF7FEFF 		bl	HAL_GetTick
 1486              	.LVL125:
 1487 0138 001B     		subs	r0, r0, r4
 1488 013a B0F57A7F 		cmp	r0, #1000
 1489 013e F1D9     		bls	.L127
 825:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 1490              		.loc 1 825 0
 1491 0140 0320     		movs	r0, #3
 1492 0142 0CE0     		b	.L118
 1493              	.LVL126:
 1494              	.L137:
ARM GAS  /tmp/ccwUBerI.s 			page 59


 833:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 1495              		.loc 1 833 0
 1496 0144 09F1FF39 		add	r9, r9, #-1
 1497              	.LVL127:
 836:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 1498              		.loc 1 836 0
 1499 0148 08F10108 		add	r8, r8, #1
 1500              	.LVL128:
 1501 014c 82E7     		b	.L120
 1502              	.L129:
 840:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 1503              		.loc 1 840 0
 1504 014e 0123     		movs	r3, #1
 1505 0150 86F82130 		strb	r3, [r6, #33]
 843:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 1506              		.loc 1 843 0
 1507 0154 0020     		movs	r0, #0
 1508 0156 86F82000 		strb	r0, [r6, #32]
 845:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
 1509              		.loc 1 845 0
 1510 015a 00E0     		b	.L118
 1511              	.LVL129:
 1512              	.L131:
 738:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 1513              		.loc 1 738 0
 1514 015c 0220     		movs	r0, #2
 1515              	.LVL130:
 1516              	.L118:
 846:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 1517              		.loc 1 846 0
 1518 015e 02B0     		add	sp, sp, #8
 1519              	.LCFI19:
 1520              		.cfi_remember_state
 1521              		.cfi_def_cfa_offset 32
 1522              		@ sp needed
 1523 0160 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1524              	.LVL131:
 1525              	.L132:
 1526              	.LCFI20:
 1527              		.cfi_restore_state
 743:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 1528              		.loc 1 743 0
 1529 0164 0220     		movs	r0, #2
 1530              	.LVL132:
 1531 0166 FAE7     		b	.L118
 1532              		.cfi_endproc
 1533              	.LFE75:
 1535              		.section	.text.HAL_NAND_Write_Page_16b,"ax",%progbits
 1536              		.align	1
 1537              		.global	HAL_NAND_Write_Page_16b
 1538              		.syntax unified
 1539              		.thumb
 1540              		.thumb_func
 1541              		.fpu softvfp
 1543              	HAL_NAND_Write_Page_16b:
 1544              	.LFB76:
 858:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __IO uint32_t index = 0U;
ARM GAS  /tmp/ccwUBerI.s 			page 60


 1545              		.loc 1 858 0
 1546              		.cfi_startproc
 1547              		@ args = 0, pretend = 0, frame = 8
 1548              		@ frame_needed = 0, uses_anonymous_args = 0
 1549              	.LVL133:
 1550 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1551              	.LCFI21:
 1552              		.cfi_def_cfa_offset 32
 1553              		.cfi_offset 4, -32
 1554              		.cfi_offset 5, -28
 1555              		.cfi_offset 6, -24
 1556              		.cfi_offset 7, -20
 1557              		.cfi_offset 8, -16
 1558              		.cfi_offset 9, -12
 1559              		.cfi_offset 10, -8
 1560              		.cfi_offset 14, -4
 1561 0004 82B0     		sub	sp, sp, #8
 1562              	.LCFI22:
 1563              		.cfi_def_cfa_offset 40
 1564 0006 9946     		mov	r9, r3
 859:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t tickstart = 0U;
 1565              		.loc 1 859 0
 1566 0008 0023     		movs	r3, #0
 1567              	.LVL134:
 1568 000a 0193     		str	r3, [sp, #4]
 1569              	.LVL135:
 864:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 1570              		.loc 1 864 0
 1571 000c 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1572 0010 012B     		cmp	r3, #1
 1573 0012 00F0A380 		beq	.L152
 1574 0016 0646     		mov	r6, r0
 1575 0018 1546     		mov	r5, r2
 864:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 1576              		.loc 1 864 0 is_stmt 0 discriminator 2
 1577 001a 0123     		movs	r3, #1
 1578 001c 80F82030 		strb	r3, [r0, #32]
 867:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 1579              		.loc 1 867 0 is_stmt 1 discriminator 2
 1580 0020 90F82130 		ldrb	r3, [r0, #33]	@ zero_extendqisi2
 1581 0024 DBB2     		uxtb	r3, r3
 1582 0026 022B     		cmp	r3, #2
 1583 0028 00F09C80 		beq	.L153
 873:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 1584              		.loc 1 873 0
 1585 002c 4368     		ldr	r3, [r0, #4]
 1586 002e 102B     		cmp	r3, #16
 1587 0030 3AD0     		beq	.L157
 879:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 1588              		.loc 1 879 0
 1589 0032 4FF00047 		mov	r7, #-2147483648
 1590              	.L140:
 1591              	.LVL136:
 883:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 1592              		.loc 1 883 0
 1593 0036 0223     		movs	r3, #2
 1594 0038 86F82130 		strb	r3, [r6, #33]
ARM GAS  /tmp/ccwUBerI.s 			page 61


 886:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 1595              		.loc 1 886 0
 1596 003c 0B88     		ldrh	r3, [r1]
 1597 003e 8A88     		ldrh	r2, [r1, #4]
 1598              	.LVL137:
 1599 0040 B1F80280 		ldrh	r8, [r1, #2]
 1600 0044 B16B     		ldr	r1, [r6, #56]
 1601              	.LVL138:
 1602 0046 01FB0828 		mla	r8, r1, r8, r2
 1603 004a F26A     		ldr	r2, [r6, #44]
 1604 004c 02FB0838 		mla	r8, r2, r8, r3
 1605              	.LVL139:
 861:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 1606              		.loc 1 861 0
 1607 0050 4FF0000A 		mov	r10, #0
 1608              	.LVL140:
 1609              	.L141:
 889:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 1610              		.loc 1 889 0
 1611 0054 B9F1000F 		cmp	r9, #0
 1612 0058 79D0     		beq	.L150
 889:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 1613              		.loc 1 889 0 is_stmt 0 discriminator 1
 1614 005a F26A     		ldr	r2, [r6, #44]
 1615 005c 336B     		ldr	r3, [r6, #48]
 1616 005e 03FB02F3 		mul	r3, r3, r2
 1617 0062 9845     		cmp	r8, r3
 1618 0064 73D2     		bcs	.L150
 892:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****  
 1619              		.loc 1 892 0 is_stmt 1
 1620 0066 0AF1010A 		add	r10, r10, #1
 1621              	.LVL141:
 1622 006a 726A     		ldr	r2, [r6, #36]
 1623 006c 02FB0AF2 		mul	r2, r2, r10
 1624              	.LVL142:
 895:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 1625              		.loc 1 895 0
 1626 0070 47F48031 		orr	r1, r7, #65536
 1627 0074 0023     		movs	r3, #0
 1628 0076 0B70     		strb	r3, [r1]
 896:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 1629              		.loc 1 896 0
 1630 0078 8023     		movs	r3, #128
 1631 007a 0B70     		strb	r3, [r1]
 899:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 1632              		.loc 1 899 0
 1633 007c 736A     		ldr	r3, [r6, #36]
 1634 007e B3F5007F 		cmp	r3, #512
 1635 0082 22D8     		bhi	.L142
 901:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 1636              		.loc 1 901 0
 1637 0084 F06A     		ldr	r0, [r6, #44]
 1638 0086 336B     		ldr	r3, [r6, #48]
 1639 0088 03FB00F3 		mul	r3, r3, r0
 1640 008c B3F5803F 		cmp	r3, #65536
 1641 0090 0DD2     		bcs	.L143
 903:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
ARM GAS  /tmp/ccwUBerI.s 			page 62


 1642              		.loc 1 903 0
 1643 0092 47F40033 		orr	r3, r7, #131072
 1644 0096 0020     		movs	r0, #0
 1645 0098 1870     		strb	r0, [r3]
 904:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1646              		.loc 1 904 0
 1647 009a 5FFA88F0 		uxtb	r0, r8
 1648 009e 1870     		strb	r0, [r3]
 905:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 1649              		.loc 1 905 0
 1650 00a0 C8F30720 		ubfx	r0, r8, #8, #8
 1651 00a4 1870     		strb	r0, [r3]
 1652 00a6 38E0     		b	.L146
 1653              	.LVL143:
 1654              	.L157:
 875:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 1655              		.loc 1 875 0
 1656 00a8 4FF0E047 		mov	r7, #1879048192
 1657 00ac C3E7     		b	.L140
 1658              	.LVL144:
 1659              	.L143:
 909:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1660              		.loc 1 909 0
 1661 00ae 47F40033 		orr	r3, r7, #131072
 1662 00b2 0020     		movs	r0, #0
 1663 00b4 1870     		strb	r0, [r3]
 910:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1664              		.loc 1 910 0
 1665 00b6 5FFA88F0 		uxtb	r0, r8
 1666 00ba 1870     		strb	r0, [r3]
 911:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 1667              		.loc 1 911 0
 1668 00bc C8F30720 		ubfx	r0, r8, #8, #8
 1669 00c0 1870     		strb	r0, [r3]
 912:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 1670              		.loc 1 912 0
 1671 00c2 C8F30740 		ubfx	r0, r8, #16, #8
 1672 00c6 1870     		strb	r0, [r3]
 1673 00c8 27E0     		b	.L146
 1674              	.L142:
 917:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 1675              		.loc 1 917 0
 1676 00ca F06A     		ldr	r0, [r6, #44]
 1677 00cc 336B     		ldr	r3, [r6, #48]
 1678 00ce 03FB00F3 		mul	r3, r3, r0
 1679 00d2 B3F5803F 		cmp	r3, #65536
 1680 00d6 0BD2     		bcs	.L145
 919:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 1681              		.loc 1 919 0
 1682 00d8 47F40033 		orr	r3, r7, #131072
 1683 00dc 0020     		movs	r0, #0
 1684 00de 1870     		strb	r0, [r3]
 920:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1685              		.loc 1 920 0
 1686 00e0 1870     		strb	r0, [r3]
 921:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1687              		.loc 1 921 0
ARM GAS  /tmp/ccwUBerI.s 			page 63


 1688 00e2 5FFA88F0 		uxtb	r0, r8
 1689 00e6 1870     		strb	r0, [r3]
 922:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 1690              		.loc 1 922 0
 1691 00e8 C8F30720 		ubfx	r0, r8, #8, #8
 1692 00ec 1870     		strb	r0, [r3]
 1693 00ee 14E0     		b	.L146
 1694              	.L145:
 926:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 1695              		.loc 1 926 0
 1696 00f0 47F40033 		orr	r3, r7, #131072
 1697 00f4 0020     		movs	r0, #0
 1698 00f6 1870     		strb	r0, [r3]
 927:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1699              		.loc 1 927 0
 1700 00f8 1870     		strb	r0, [r3]
 928:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1701              		.loc 1 928 0
 1702 00fa 5FFA88F0 		uxtb	r0, r8
 1703 00fe 1870     		strb	r0, [r3]
 929:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 1704              		.loc 1 929 0
 1705 0100 C8F30720 		ubfx	r0, r8, #8, #8
 1706 0104 1870     		strb	r0, [r3]
 930:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 1707              		.loc 1 930 0
 1708 0106 C8F30740 		ubfx	r0, r8, #16, #8
 1709 010a 1870     		strb	r0, [r3]
 1710 010c 05E0     		b	.L146
 1711              	.L147:
 1712              	.LVL145:
 937:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 1713              		.loc 1 937 0 discriminator 2
 1714 010e 2B88     		ldrh	r3, [r5]
 1715 0110 3B80     		strh	r3, [r7]	@ movhi
 935:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 1716              		.loc 1 935 0 discriminator 2
 1717 0112 019B     		ldr	r3, [sp, #4]
 1718 0114 0133     		adds	r3, r3, #1
 1719 0116 0193     		str	r3, [sp, #4]
 937:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 1720              		.loc 1 937 0 discriminator 2
 1721 0118 0235     		adds	r5, r5, #2
 1722              	.LVL146:
 1723              	.L146:
 935:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 1724              		.loc 1 935 0 discriminator 1
 1725 011a 019B     		ldr	r3, [sp, #4]
 1726 011c 9A42     		cmp	r2, r3
 1727 011e F6D8     		bhi	.L147
 940:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 1728              		.loc 1 940 0
 1729 0120 1023     		movs	r3, #16
 1730 0122 0B70     		strb	r3, [r1]
 1731              	.LVL147:
 1732              	.L148:
 943:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
ARM GAS  /tmp/ccwUBerI.s 			page 64


 1733              		.loc 1 943 0
 1734 0124 3046     		mov	r0, r6
 1735 0126 FFF7FEFF 		bl	HAL_NAND_Read_Status
 1736              	.LVL148:
 1737 012a 4028     		cmp	r0, #64
 1738 012c 0AD0     		beq	.L158
 946:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 1739              		.loc 1 946 0
 1740 012e FFF7FEFF 		bl	HAL_GetTick
 1741              	.LVL149:
 1742 0132 0446     		mov	r4, r0
 1743              	.LVL150:
 948:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 1744              		.loc 1 948 0
 1745 0134 FFF7FEFF 		bl	HAL_GetTick
 1746              	.LVL151:
 1747 0138 001B     		subs	r0, r0, r4
 1748 013a B0F57A7F 		cmp	r0, #1000
 1749 013e F1D9     		bls	.L148
 950:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       } 
 1750              		.loc 1 950 0
 1751 0140 0320     		movs	r0, #3
 1752 0142 0CE0     		b	.L139
 1753              	.LVL152:
 1754              	.L158:
 958:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 1755              		.loc 1 958 0
 1756 0144 09F1FF39 		add	r9, r9, #-1
 1757              	.LVL153:
 961:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 1758              		.loc 1 961 0
 1759 0148 08F10108 		add	r8, r8, #1
 1760              	.LVL154:
 1761 014c 82E7     		b	.L141
 1762              	.L150:
 965:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 1763              		.loc 1 965 0
 1764 014e 0123     		movs	r3, #1
 1765 0150 86F82130 		strb	r3, [r6, #33]
 968:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 1766              		.loc 1 968 0
 1767 0154 0020     		movs	r0, #0
 1768 0156 86F82000 		strb	r0, [r6, #32]
 970:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
 1769              		.loc 1 970 0
 1770 015a 00E0     		b	.L139
 1771              	.LVL155:
 1772              	.L152:
 864:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 1773              		.loc 1 864 0
 1774 015c 0220     		movs	r0, #2
 1775              	.LVL156:
 1776              	.L139:
 971:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 1777              		.loc 1 971 0
 1778 015e 02B0     		add	sp, sp, #8
 1779              	.LCFI23:
ARM GAS  /tmp/ccwUBerI.s 			page 65


 1780              		.cfi_remember_state
 1781              		.cfi_def_cfa_offset 32
 1782              		@ sp needed
 1783 0160 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1784              	.LVL157:
 1785              	.L153:
 1786              	.LCFI24:
 1787              		.cfi_restore_state
 869:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 1788              		.loc 1 869 0
 1789 0164 0220     		movs	r0, #2
 1790              	.LVL158:
 1791 0166 FAE7     		b	.L139
 1792              		.cfi_endproc
 1793              	.LFE76:
 1795              		.section	.text.HAL_NAND_Read_SpareArea_8b,"ax",%progbits
 1796              		.align	1
 1797              		.global	HAL_NAND_Read_SpareArea_8b
 1798              		.syntax unified
 1799              		.thumb
 1800              		.thumb_func
 1801              		.fpu softvfp
 1803              	HAL_NAND_Read_SpareArea_8b:
 1804              	.LFB77:
 983:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __IO uint32_t index = 0U;
 1805              		.loc 1 983 0
 1806              		.cfi_startproc
 1807              		@ args = 0, pretend = 0, frame = 16
 1808              		@ frame_needed = 0, uses_anonymous_args = 0
 1809              	.LVL159:
 1810 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1811              	.LCFI25:
 1812              		.cfi_def_cfa_offset 36
 1813              		.cfi_offset 4, -36
 1814              		.cfi_offset 5, -32
 1815              		.cfi_offset 6, -28
 1816              		.cfi_offset 7, -24
 1817              		.cfi_offset 8, -20
 1818              		.cfi_offset 9, -16
 1819              		.cfi_offset 10, -12
 1820              		.cfi_offset 11, -8
 1821              		.cfi_offset 14, -4
 1822 0004 85B0     		sub	sp, sp, #20
 1823              	.LCFI26:
 1824              		.cfi_def_cfa_offset 56
 1825 0006 9946     		mov	r9, r3
 984:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t tickstart = 0U;
 1826              		.loc 1 984 0
 1827 0008 0023     		movs	r3, #0
 1828              	.LVL160:
 1829 000a 0393     		str	r3, [sp, #12]
 1830              	.LVL161:
 989:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 1831              		.loc 1 989 0
 1832 000c 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1833 0010 012B     		cmp	r3, #1
 1834 0012 00F0B880 		beq	.L174
ARM GAS  /tmp/ccwUBerI.s 			page 66


 1835 0016 0746     		mov	r7, r0
 1836 0018 1446     		mov	r4, r2
 989:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 1837              		.loc 1 989 0 is_stmt 0 discriminator 2
 1838 001a 0123     		movs	r3, #1
 1839 001c 80F82030 		strb	r3, [r0, #32]
 992:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 1840              		.loc 1 992 0 is_stmt 1 discriminator 2
 1841 0020 90F82130 		ldrb	r3, [r0, #33]	@ zero_extendqisi2
 1842 0024 DBB2     		uxtb	r3, r3
 1843 0026 022B     		cmp	r3, #2
 1844 0028 00F0B180 		beq	.L175
 998:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 1845              		.loc 1 998 0
 1846 002c 4368     		ldr	r3, [r0, #4]
 1847 002e 102B     		cmp	r3, #16
 1848 0030 13D0     		beq	.L179
1004:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 1849              		.loc 1 1004 0
 1850 0032 4FF00046 		mov	r6, #-2147483648
 1851              	.L161:
 1852              	.LVL162:
1008:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 1853              		.loc 1 1008 0
 1854 0036 0223     		movs	r3, #2
 1855 0038 87F82130 		strb	r3, [r7, #33]
1011:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 1856              		.loc 1 1011 0
 1857 003c 0B88     		ldrh	r3, [r1]
 1858 003e 8A88     		ldrh	r2, [r1, #4]
 1859              	.LVL163:
 1860 0040 B1F80280 		ldrh	r8, [r1, #2]
 1861 0044 B96B     		ldr	r1, [r7, #56]
 1862              	.LVL164:
 1863 0046 01FB0828 		mla	r8, r1, r8, r2
 1864 004a FA6A     		ldr	r2, [r7, #44]
 1865 004c 02FB0838 		mla	r8, r2, r8, r3
 1866              	.LVL165:
1014:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 1867              		.loc 1 1014 0
 1868 0050 7B6A     		ldr	r3, [r7, #36]
 1869 0052 0193     		str	r3, [sp, #4]
 1870              	.LVL166:
 986:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 1871              		.loc 1 986 0
 1872 0054 4FF0000A 		mov	r10, #0
1017:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {     
 1873              		.loc 1 1017 0
 1874 0058 4DE0     		b	.L162
 1875              	.LVL167:
 1876              	.L179:
1000:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 1877              		.loc 1 1000 0
 1878 005a 4FF0E046 		mov	r6, #1879048192
 1879 005e EAE7     		b	.L161
 1880              	.LVL168:
 1881              	.L164:
ARM GAS  /tmp/ccwUBerI.s 			page 67


1036:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1882              		.loc 1 1036 0
 1883 0060 46F40033 		orr	r3, r6, #131072
 1884 0064 0022     		movs	r2, #0
 1885 0066 1A70     		strb	r2, [r3]
1037:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1886              		.loc 1 1037 0
 1887 0068 5FFA88F2 		uxtb	r2, r8
 1888 006c 1A70     		strb	r2, [r3]
1038:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 1889              		.loc 1 1038 0
 1890 006e C8F30722 		ubfx	r2, r8, #8, #8
 1891 0072 1A70     		strb	r2, [r3]
1039:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 1892              		.loc 1 1039 0
 1893 0074 C8F30742 		ubfx	r2, r8, #16, #8
 1894 0078 1A70     		strb	r2, [r3]
 1895 007a 63E0     		b	.L165
 1896              	.L163:
1045:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       
 1897              		.loc 1 1045 0
 1898 007c 46F48033 		orr	r3, r6, #65536
 1899 0080 0022     		movs	r2, #0
 1900 0082 1A70     		strb	r2, [r3]
1047:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 1901              		.loc 1 1047 0
 1902 0084 FA6A     		ldr	r2, [r7, #44]
 1903 0086 3B6B     		ldr	r3, [r7, #48]
 1904 0088 03FB02F3 		mul	r3, r3, r2
 1905 008c B3F5803F 		cmp	r3, #65536
 1906 0090 0ED2     		bcs	.L166
1049:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 1907              		.loc 1 1049 0
 1908 0092 46F40033 		orr	r3, r6, #131072
 1909 0096 0199     		ldr	r1, [sp, #4]
 1910 0098 CAB2     		uxtb	r2, r1
 1911 009a 1A70     		strb	r2, [r3]
1050:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1912              		.loc 1 1050 0
 1913 009c C1F30722 		ubfx	r2, r1, #8, #8
 1914 00a0 1A70     		strb	r2, [r3]
1051:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1915              		.loc 1 1051 0
 1916 00a2 5FFA88F2 		uxtb	r2, r8
 1917 00a6 1A70     		strb	r2, [r3]
1052:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 1918              		.loc 1 1052 0
 1919 00a8 C8F30722 		ubfx	r2, r8, #8, #8
 1920 00ac 1A70     		strb	r2, [r3]
 1921 00ae 49E0     		b	.L165
 1922              	.L166:
1056:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 1923              		.loc 1 1056 0
 1924 00b0 46F40033 		orr	r3, r6, #131072
 1925 00b4 0199     		ldr	r1, [sp, #4]
 1926 00b6 CAB2     		uxtb	r2, r1
 1927 00b8 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccwUBerI.s 			page 68


1057:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1928              		.loc 1 1057 0
 1929 00ba C1F30722 		ubfx	r2, r1, #8, #8
 1930 00be 1A70     		strb	r2, [r3]
1058:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1931              		.loc 1 1058 0
 1932 00c0 5FFA88F2 		uxtb	r2, r8
 1933 00c4 1A70     		strb	r2, [r3]
1059:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 1934              		.loc 1 1059 0
 1935 00c6 C8F30722 		ubfx	r2, r8, #8, #8
 1936 00ca 1A70     		strb	r2, [r3]
1060:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 1937              		.loc 1 1060 0
 1938 00cc C8F30742 		ubfx	r2, r8, #16, #8
 1939 00d0 1A70     		strb	r2, [r3]
 1940 00d2 37E0     		b	.L165
 1941              	.LVL169:
 1942              	.L180:
1081:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 1943              		.loc 1 1081 0
 1944 00d4 0023     		movs	r3, #0
 1945 00d6 8BF80030 		strb	r3, [fp]
 1946 00da 05E0     		b	.L170
 1947              	.LVL170:
 1948              	.L171:
1087:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 1949              		.loc 1 1087 0 discriminator 2
 1950 00dc 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 1951 00de 2370     		strb	r3, [r4]
1085:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 1952              		.loc 1 1085 0 discriminator 2
 1953 00e0 039B     		ldr	r3, [sp, #12]
 1954 00e2 0133     		adds	r3, r3, #1
 1955 00e4 0393     		str	r3, [sp, #12]
1087:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 1956              		.loc 1 1087 0 discriminator 2
 1957 00e6 0134     		adds	r4, r4, #1
 1958              	.LVL171:
 1959              	.L170:
1085:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 1960              		.loc 1 1085 0 discriminator 1
 1961 00e8 039B     		ldr	r3, [sp, #12]
 1962 00ea 9D42     		cmp	r5, r3
 1963 00ec F6D8     		bhi	.L171
 1964              	.LVL172:
1094:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 1965              		.loc 1 1094 0
 1966 00ee 09F1FF39 		add	r9, r9, #-1
 1967              	.LVL173:
1097:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 1968              		.loc 1 1097 0
 1969 00f2 08F10108 		add	r8, r8, #1
 1970              	.LVL174:
 1971              	.L162:
1017:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {     
 1972              		.loc 1 1017 0
ARM GAS  /tmp/ccwUBerI.s 			page 69


 1973 00f6 B9F1000F 		cmp	r9, #0
 1974 00fa 3DD0     		beq	.L172
1017:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {     
 1975              		.loc 1 1017 0 is_stmt 0 discriminator 1
 1976 00fc FA6A     		ldr	r2, [r7, #44]
 1977 00fe 3B6B     		ldr	r3, [r7, #48]
 1978 0100 03FB02F3 		mul	r3, r3, r2
 1979 0104 9845     		cmp	r8, r3
 1980 0106 37D2     		bcs	.L172
1020:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 1981              		.loc 1 1020 0 is_stmt 1
 1982 0108 0AF1010A 		add	r10, r10, #1
 1983              	.LVL175:
 1984 010c BD6A     		ldr	r5, [r7, #40]
 1985 010e 05FB0AF5 		mul	r5, r5, r10
 1986              	.LVL176:
1023:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 1987              		.loc 1 1023 0
 1988 0112 7B6A     		ldr	r3, [r7, #36]
 1989 0114 B3F5007F 		cmp	r3, #512
 1990 0118 B0D8     		bhi	.L163
1026:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       
 1991              		.loc 1 1026 0
 1992 011a 46F48033 		orr	r3, r6, #65536
 1993 011e 5022     		movs	r2, #80
 1994 0120 1A70     		strb	r2, [r3]
1028:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 1995              		.loc 1 1028 0
 1996 0122 FA6A     		ldr	r2, [r7, #44]
 1997 0124 3B6B     		ldr	r3, [r7, #48]
 1998 0126 03FB02F3 		mul	r3, r3, r2
 1999 012a B3F5803F 		cmp	r3, #65536
 2000 012e 97D2     		bcs	.L164
1030:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2001              		.loc 1 1030 0
 2002 0130 46F40033 		orr	r3, r6, #131072
 2003 0134 0022     		movs	r2, #0
 2004 0136 1A70     		strb	r2, [r3]
1031:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2005              		.loc 1 1031 0
 2006 0138 5FFA88F2 		uxtb	r2, r8
 2007 013c 1A70     		strb	r2, [r3]
1032:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 2008              		.loc 1 1032 0
 2009 013e C8F30722 		ubfx	r2, r8, #8, #8
 2010 0142 1A70     		strb	r2, [r3]
 2011              	.L165:
1064:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 2012              		.loc 1 1064 0
 2013 0144 46F4803B 		orr	fp, r6, #65536
 2014 0148 3023     		movs	r3, #48
 2015 014a 8BF80030 		strb	r3, [fp]
1066:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 2016              		.loc 1 1066 0
 2017 014e 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
 2018 0152 012B     		cmp	r3, #1
 2019 0154 C8D1     		bne	.L170
ARM GAS  /tmp/ccwUBerI.s 			page 70


1069:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       
 2020              		.loc 1 1069 0
 2021 0156 FFF7FEFF 		bl	HAL_GetTick
 2022              	.LVL177:
 2023 015a 0090     		str	r0, [sp]
 2024              	.LVL178:
 2025              	.L168:
1072:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 2026              		.loc 1 1072 0
 2027 015c 3846     		mov	r0, r7
 2028 015e FFF7FEFF 		bl	HAL_NAND_Read_Status
 2029              	.LVL179:
 2030 0162 4028     		cmp	r0, #64
 2031 0164 B6D0     		beq	.L180
1074:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         {
 2032              		.loc 1 1074 0
 2033 0166 FFF7FEFF 		bl	HAL_GetTick
 2034              	.LVL180:
 2035 016a 009B     		ldr	r3, [sp]
 2036 016c C01A     		subs	r0, r0, r3
 2037 016e B0F57A7F 		cmp	r0, #1000
 2038 0172 F3D9     		bls	.L168
1076:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         }
 2039              		.loc 1 1076 0
 2040 0174 0320     		movs	r0, #3
 2041 0176 07E0     		b	.L160
 2042              	.LVL181:
 2043              	.L172:
1101:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 2044              		.loc 1 1101 0
 2045 0178 0123     		movs	r3, #1
 2046 017a 87F82130 		strb	r3, [r7, #33]
1104:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 2047              		.loc 1 1104 0
 2048 017e 0020     		movs	r0, #0
 2049 0180 87F82000 		strb	r0, [r7, #32]
1106:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
 2050              		.loc 1 1106 0
 2051 0184 00E0     		b	.L160
 2052              	.LVL182:
 2053              	.L174:
 989:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 2054              		.loc 1 989 0
 2055 0186 0220     		movs	r0, #2
 2056              	.LVL183:
 2057              	.L160:
1107:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 2058              		.loc 1 1107 0
 2059 0188 05B0     		add	sp, sp, #20
 2060              	.LCFI27:
 2061              		.cfi_remember_state
 2062              		.cfi_def_cfa_offset 36
 2063              		@ sp needed
 2064 018a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2065              	.LVL184:
 2066              	.L175:
 2067              	.LCFI28:
ARM GAS  /tmp/ccwUBerI.s 			page 71


 2068              		.cfi_restore_state
 994:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 2069              		.loc 1 994 0
 2070 018e 0220     		movs	r0, #2
 2071              	.LVL185:
 2072 0190 FAE7     		b	.L160
 2073              		.cfi_endproc
 2074              	.LFE77:
 2076              		.section	.text.HAL_NAND_Read_SpareArea_16b,"ax",%progbits
 2077              		.align	1
 2078              		.global	HAL_NAND_Read_SpareArea_16b
 2079              		.syntax unified
 2080              		.thumb
 2081              		.thumb_func
 2082              		.fpu softvfp
 2084              	HAL_NAND_Read_SpareArea_16b:
 2085              	.LFB78:
1119:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __IO uint32_t index = 0U; 
 2086              		.loc 1 1119 0
 2087              		.cfi_startproc
 2088              		@ args = 0, pretend = 0, frame = 16
 2089              		@ frame_needed = 0, uses_anonymous_args = 0
 2090              	.LVL186:
 2091 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2092              	.LCFI29:
 2093              		.cfi_def_cfa_offset 36
 2094              		.cfi_offset 4, -36
 2095              		.cfi_offset 5, -32
 2096              		.cfi_offset 6, -28
 2097              		.cfi_offset 7, -24
 2098              		.cfi_offset 8, -20
 2099              		.cfi_offset 9, -16
 2100              		.cfi_offset 10, -12
 2101              		.cfi_offset 11, -8
 2102              		.cfi_offset 14, -4
 2103 0004 85B0     		sub	sp, sp, #20
 2104              	.LCFI30:
 2105              		.cfi_def_cfa_offset 56
 2106 0006 9946     		mov	r9, r3
1120:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t tickstart = 0U;
 2107              		.loc 1 1120 0
 2108 0008 0023     		movs	r3, #0
 2109              	.LVL187:
 2110 000a 0393     		str	r3, [sp, #12]
 2111              	.LVL188:
1125:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 2112              		.loc 1 1125 0
 2113 000c 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2114 0010 012B     		cmp	r3, #1
 2115 0012 00F0B980 		beq	.L196
 2116 0016 0746     		mov	r7, r0
 2117 0018 1446     		mov	r4, r2
1125:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 2118              		.loc 1 1125 0 is_stmt 0 discriminator 2
 2119 001a 0123     		movs	r3, #1
 2120 001c 80F82030 		strb	r3, [r0, #32]
1128:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
ARM GAS  /tmp/ccwUBerI.s 			page 72


 2121              		.loc 1 1128 0 is_stmt 1 discriminator 2
 2122 0020 90F82130 		ldrb	r3, [r0, #33]	@ zero_extendqisi2
 2123 0024 DBB2     		uxtb	r3, r3
 2124 0026 022B     		cmp	r3, #2
 2125 0028 00F0B280 		beq	.L197
1134:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 2126              		.loc 1 1134 0
 2127 002c 4368     		ldr	r3, [r0, #4]
 2128 002e 102B     		cmp	r3, #16
 2129 0030 14D0     		beq	.L201
1140:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 2130              		.loc 1 1140 0
 2131 0032 4FF00046 		mov	r6, #-2147483648
 2132              	.L183:
 2133              	.LVL189:
1144:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 2134              		.loc 1 1144 0
 2135 0036 0223     		movs	r3, #2
 2136 0038 87F82130 		strb	r3, [r7, #33]
1147:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 2137              		.loc 1 1147 0
 2138 003c 0B88     		ldrh	r3, [r1]
 2139 003e 8A88     		ldrh	r2, [r1, #4]
 2140              	.LVL190:
 2141 0040 B1F80280 		ldrh	r8, [r1, #2]
 2142 0044 B96B     		ldr	r1, [r7, #56]
 2143              	.LVL191:
 2144 0046 01FB0828 		mla	r8, r1, r8, r2
 2145 004a FA6A     		ldr	r2, [r7, #44]
 2146 004c 02FB0838 		mla	r8, r2, r8, r3
 2147              	.LVL192:
1150:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 2148              		.loc 1 1150 0
 2149 0050 7B6A     		ldr	r3, [r7, #36]
 2150 0052 5B00     		lsls	r3, r3, #1
 2151 0054 0193     		str	r3, [sp, #4]
 2152              	.LVL193:
1122:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 2153              		.loc 1 1122 0
 2154 0056 4FF0000A 		mov	r10, #0
1153:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 2155              		.loc 1 1153 0
 2156 005a 4DE0     		b	.L184
 2157              	.LVL194:
 2158              	.L201:
1136:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 2159              		.loc 1 1136 0
 2160 005c 4FF0E046 		mov	r6, #1879048192
 2161 0060 E9E7     		b	.L183
 2162              	.LVL195:
 2163              	.L186:
1172:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2164              		.loc 1 1172 0
 2165 0062 46F40033 		orr	r3, r6, #131072
 2166 0066 0022     		movs	r2, #0
 2167 0068 1A70     		strb	r2, [r3]
1173:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
ARM GAS  /tmp/ccwUBerI.s 			page 73


 2168              		.loc 1 1173 0
 2169 006a 5FFA88F2 		uxtb	r2, r8
 2170 006e 1A70     		strb	r2, [r3]
1174:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 2171              		.loc 1 1174 0
 2172 0070 C8F30722 		ubfx	r2, r8, #8, #8
 2173 0074 1A70     		strb	r2, [r3]
1175:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 2174              		.loc 1 1175 0
 2175 0076 C8F30742 		ubfx	r2, r8, #16, #8
 2176 007a 1A70     		strb	r2, [r3]
 2177 007c 63E0     		b	.L187
 2178              	.L185:
1181:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       
 2179              		.loc 1 1181 0
 2180 007e 46F48033 		orr	r3, r6, #65536
 2181 0082 0022     		movs	r2, #0
 2182 0084 1A70     		strb	r2, [r3]
1183:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 2183              		.loc 1 1183 0
 2184 0086 FA6A     		ldr	r2, [r7, #44]
 2185 0088 3B6B     		ldr	r3, [r7, #48]
 2186 008a 03FB02F3 		mul	r3, r3, r2
 2187 008e B3F5803F 		cmp	r3, #65536
 2188 0092 0ED2     		bcs	.L188
1185:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 2189              		.loc 1 1185 0
 2190 0094 46F40033 		orr	r3, r6, #131072
 2191 0098 0199     		ldr	r1, [sp, #4]
 2192 009a CAB2     		uxtb	r2, r1
 2193 009c 1A70     		strb	r2, [r3]
1186:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2194              		.loc 1 1186 0
 2195 009e C1F30722 		ubfx	r2, r1, #8, #8
 2196 00a2 1A70     		strb	r2, [r3]
1187:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2197              		.loc 1 1187 0
 2198 00a4 5FFA88F2 		uxtb	r2, r8
 2199 00a8 1A70     		strb	r2, [r3]
1188:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 2200              		.loc 1 1188 0
 2201 00aa C8F30722 		ubfx	r2, r8, #8, #8
 2202 00ae 1A70     		strb	r2, [r3]
 2203 00b0 49E0     		b	.L187
 2204              	.L188:
1192:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 2205              		.loc 1 1192 0
 2206 00b2 46F40033 		orr	r3, r6, #131072
 2207 00b6 0199     		ldr	r1, [sp, #4]
 2208 00b8 CAB2     		uxtb	r2, r1
 2209 00ba 1A70     		strb	r2, [r3]
1193:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2210              		.loc 1 1193 0
 2211 00bc C1F30722 		ubfx	r2, r1, #8, #8
 2212 00c0 1A70     		strb	r2, [r3]
1194:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2213              		.loc 1 1194 0
ARM GAS  /tmp/ccwUBerI.s 			page 74


 2214 00c2 5FFA88F2 		uxtb	r2, r8
 2215 00c6 1A70     		strb	r2, [r3]
1195:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 2216              		.loc 1 1195 0
 2217 00c8 C8F30722 		ubfx	r2, r8, #8, #8
 2218 00cc 1A70     		strb	r2, [r3]
1196:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 2219              		.loc 1 1196 0
 2220 00ce C8F30742 		ubfx	r2, r8, #16, #8
 2221 00d2 1A70     		strb	r2, [r3]
 2222 00d4 37E0     		b	.L187
 2223              	.LVL196:
 2224              	.L202:
1217:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 2225              		.loc 1 1217 0
 2226 00d6 0023     		movs	r3, #0
 2227 00d8 8BF80030 		strb	r3, [fp]
 2228 00dc 05E0     		b	.L192
 2229              	.LVL197:
 2230              	.L193:
1223:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 2231              		.loc 1 1223 0 discriminator 2
 2232 00de 3388     		ldrh	r3, [r6]
 2233 00e0 2380     		strh	r3, [r4]	@ movhi
1221:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 2234              		.loc 1 1221 0 discriminator 2
 2235 00e2 039B     		ldr	r3, [sp, #12]
 2236 00e4 0133     		adds	r3, r3, #1
 2237 00e6 0393     		str	r3, [sp, #12]
1223:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 2238              		.loc 1 1223 0 discriminator 2
 2239 00e8 0234     		adds	r4, r4, #2
 2240              	.LVL198:
 2241              	.L192:
1221:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 2242              		.loc 1 1221 0 discriminator 1
 2243 00ea 039B     		ldr	r3, [sp, #12]
 2244 00ec 9D42     		cmp	r5, r3
 2245 00ee F6D8     		bhi	.L193
 2246              	.LVL199:
1230:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 2247              		.loc 1 1230 0
 2248 00f0 09F1FF39 		add	r9, r9, #-1
 2249              	.LVL200:
1233:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 2250              		.loc 1 1233 0
 2251 00f4 08F10108 		add	r8, r8, #1
 2252              	.LVL201:
 2253              	.L184:
1153:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 2254              		.loc 1 1153 0
 2255 00f8 B9F1000F 		cmp	r9, #0
 2256 00fc 3DD0     		beq	.L194
1153:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 2257              		.loc 1 1153 0 is_stmt 0 discriminator 1
 2258 00fe FA6A     		ldr	r2, [r7, #44]
 2259 0100 3B6B     		ldr	r3, [r7, #48]
ARM GAS  /tmp/ccwUBerI.s 			page 75


 2260 0102 03FB02F3 		mul	r3, r3, r2
 2261 0106 9845     		cmp	r8, r3
 2262 0108 37D2     		bcs	.L194
1156:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 2263              		.loc 1 1156 0 is_stmt 1
 2264 010a 0AF1010A 		add	r10, r10, #1
 2265              	.LVL202:
 2266 010e BD6A     		ldr	r5, [r7, #40]
 2267 0110 05FB0AF5 		mul	r5, r5, r10
 2268              	.LVL203:
1159:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 2269              		.loc 1 1159 0
 2270 0114 7B6A     		ldr	r3, [r7, #36]
 2271 0116 B3F5007F 		cmp	r3, #512
 2272 011a B0D8     		bhi	.L185
1162:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       
 2273              		.loc 1 1162 0
 2274 011c 46F48033 		orr	r3, r6, #65536
 2275 0120 5022     		movs	r2, #80
 2276 0122 1A70     		strb	r2, [r3]
1164:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 2277              		.loc 1 1164 0
 2278 0124 FA6A     		ldr	r2, [r7, #44]
 2279 0126 3B6B     		ldr	r3, [r7, #48]
 2280 0128 03FB02F3 		mul	r3, r3, r2
 2281 012c B3F5803F 		cmp	r3, #65536
 2282 0130 97D2     		bcs	.L186
1166:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2283              		.loc 1 1166 0
 2284 0132 46F40033 		orr	r3, r6, #131072
 2285 0136 0022     		movs	r2, #0
 2286 0138 1A70     		strb	r2, [r3]
1167:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2287              		.loc 1 1167 0
 2288 013a 5FFA88F2 		uxtb	r2, r8
 2289 013e 1A70     		strb	r2, [r3]
1168:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 2290              		.loc 1 1168 0
 2291 0140 C8F30722 		ubfx	r2, r8, #8, #8
 2292 0144 1A70     		strb	r2, [r3]
 2293              	.L187:
1200:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 2294              		.loc 1 1200 0
 2295 0146 46F4803B 		orr	fp, r6, #65536
 2296 014a 3023     		movs	r3, #48
 2297 014c 8BF80030 		strb	r3, [fp]
1202:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 2298              		.loc 1 1202 0
 2299 0150 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
 2300 0154 012B     		cmp	r3, #1
 2301 0156 C8D1     		bne	.L192
1205:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       
 2302              		.loc 1 1205 0
 2303 0158 FFF7FEFF 		bl	HAL_GetTick
 2304              	.LVL204:
 2305 015c 0090     		str	r0, [sp]
 2306              	.LVL205:
ARM GAS  /tmp/ccwUBerI.s 			page 76


 2307              	.L190:
1208:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 2308              		.loc 1 1208 0
 2309 015e 3846     		mov	r0, r7
 2310 0160 FFF7FEFF 		bl	HAL_NAND_Read_Status
 2311              	.LVL206:
 2312 0164 4028     		cmp	r0, #64
 2313 0166 B6D0     		beq	.L202
1210:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         {
 2314              		.loc 1 1210 0
 2315 0168 FFF7FEFF 		bl	HAL_GetTick
 2316              	.LVL207:
 2317 016c 009B     		ldr	r3, [sp]
 2318 016e C01A     		subs	r0, r0, r3
 2319 0170 B0F57A7F 		cmp	r0, #1000
 2320 0174 F3D9     		bls	.L190
1212:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         }
 2321              		.loc 1 1212 0
 2322 0176 0320     		movs	r0, #3
 2323 0178 07E0     		b	.L182
 2324              	.LVL208:
 2325              	.L194:
1237:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 2326              		.loc 1 1237 0
 2327 017a 0123     		movs	r3, #1
 2328 017c 87F82130 		strb	r3, [r7, #33]
1240:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 2329              		.loc 1 1240 0
 2330 0180 0020     		movs	r0, #0
 2331 0182 87F82000 		strb	r0, [r7, #32]
1242:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
 2332              		.loc 1 1242 0
 2333 0186 00E0     		b	.L182
 2334              	.LVL209:
 2335              	.L196:
1125:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 2336              		.loc 1 1125 0
 2337 0188 0220     		movs	r0, #2
 2338              	.LVL210:
 2339              	.L182:
1243:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 2340              		.loc 1 1243 0
 2341 018a 05B0     		add	sp, sp, #20
 2342              	.LCFI31:
 2343              		.cfi_remember_state
 2344              		.cfi_def_cfa_offset 36
 2345              		@ sp needed
 2346 018c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2347              	.LVL211:
 2348              	.L197:
 2349              	.LCFI32:
 2350              		.cfi_restore_state
1130:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 2351              		.loc 1 1130 0
 2352 0190 0220     		movs	r0, #2
 2353              	.LVL212:
 2354 0192 FAE7     		b	.L182
ARM GAS  /tmp/ccwUBerI.s 			page 77


 2355              		.cfi_endproc
 2356              	.LFE78:
 2358              		.section	.text.HAL_NAND_Write_SpareArea_8b,"ax",%progbits
 2359              		.align	1
 2360              		.global	HAL_NAND_Write_SpareArea_8b
 2361              		.syntax unified
 2362              		.thumb
 2363              		.thumb_func
 2364              		.fpu softvfp
 2366              	HAL_NAND_Write_SpareArea_8b:
 2367              	.LFB79:
1255:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __IO uint32_t index = 0U;
 2368              		.loc 1 1255 0
 2369              		.cfi_startproc
 2370              		@ args = 0, pretend = 0, frame = 8
 2371              		@ frame_needed = 0, uses_anonymous_args = 0
 2372              	.LVL213:
 2373 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2374              	.LCFI33:
 2375              		.cfi_def_cfa_offset 36
 2376              		.cfi_offset 4, -36
 2377              		.cfi_offset 5, -32
 2378              		.cfi_offset 6, -28
 2379              		.cfi_offset 7, -24
 2380              		.cfi_offset 8, -20
 2381              		.cfi_offset 9, -16
 2382              		.cfi_offset 10, -12
 2383              		.cfi_offset 11, -8
 2384              		.cfi_offset 14, -4
 2385 0004 83B0     		sub	sp, sp, #12
 2386              	.LCFI34:
 2387              		.cfi_def_cfa_offset 48
 2388 0006 9846     		mov	r8, r3
1256:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t tickstart = 0U;
 2389              		.loc 1 1256 0
 2390 0008 0023     		movs	r3, #0
 2391              	.LVL214:
 2392 000a 0193     		str	r3, [sp, #4]
 2393              	.LVL215:
1261:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 2394              		.loc 1 1261 0
 2395 000c 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2396 0010 012B     		cmp	r3, #1
 2397 0012 00F0AF80 		beq	.L217
 2398 0016 0546     		mov	r5, r0
 2399 0018 1446     		mov	r4, r2
1261:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 2400              		.loc 1 1261 0 is_stmt 0 discriminator 2
 2401 001a 0123     		movs	r3, #1
 2402 001c 80F82030 		strb	r3, [r0, #32]
1264:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 2403              		.loc 1 1264 0 is_stmt 1 discriminator 2
 2404 0020 90F82130 		ldrb	r3, [r0, #33]	@ zero_extendqisi2
 2405 0024 DBB2     		uxtb	r3, r3
 2406 0026 022B     		cmp	r3, #2
 2407 0028 00F0A880 		beq	.L218
1270:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
ARM GAS  /tmp/ccwUBerI.s 			page 78


 2408              		.loc 1 1270 0
 2409 002c 4368     		ldr	r3, [r0, #4]
 2410 002e 102B     		cmp	r3, #16
 2411 0030 3BD0     		beq	.L222
1276:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 2412              		.loc 1 1276 0
 2413 0032 4FF00046 		mov	r6, #-2147483648
 2414              	.L205:
 2415              	.LVL216:
1280:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 2416              		.loc 1 1280 0
 2417 0036 0223     		movs	r3, #2
 2418 0038 85F82130 		strb	r3, [r5, #33]
1283:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 2419              		.loc 1 1283 0
 2420 003c 0B88     		ldrh	r3, [r1]
 2421 003e 8A88     		ldrh	r2, [r1, #4]
 2422              	.LVL217:
 2423 0040 4F88     		ldrh	r7, [r1, #2]
 2424 0042 A96B     		ldr	r1, [r5, #56]
 2425              	.LVL218:
 2426 0044 01FB0727 		mla	r7, r1, r7, r2
 2427 0048 EA6A     		ldr	r2, [r5, #44]
 2428 004a 02FB0737 		mla	r7, r2, r7, r3
 2429              	.LVL219:
1286:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 2430              		.loc 1 1286 0
 2431 004e D5F824A0 		ldr	r10, [r5, #36]
 2432              	.LVL220:
1258:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 2433              		.loc 1 1258 0
 2434 0052 4FF00009 		mov	r9, #0
 2435              	.LVL221:
 2436              	.L206:
1289:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 2437              		.loc 1 1289 0
 2438 0056 B8F1000F 		cmp	r8, #0
 2439 005a 00F08480 		beq	.L215
1289:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 2440              		.loc 1 1289 0 is_stmt 0 discriminator 1
 2441 005e EA6A     		ldr	r2, [r5, #44]
 2442 0060 2B6B     		ldr	r3, [r5, #48]
 2443 0062 03FB02F3 		mul	r3, r3, r2
 2444 0066 9F42     		cmp	r7, r3
 2445 0068 7DD2     		bcs	.L215
1292:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 2446              		.loc 1 1292 0 is_stmt 1
 2447 006a 09F10109 		add	r9, r9, #1
 2448              	.LVL222:
 2449 006e AA6A     		ldr	r2, [r5, #40]
 2450 0070 02FB09F2 		mul	r2, r2, r9
 2451              	.LVL223:
1295:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 2452              		.loc 1 1295 0
 2453 0074 6B6A     		ldr	r3, [r5, #36]
 2454 0076 B3F5007F 		cmp	r3, #512
 2455 007a 26D8     		bhi	.L207
ARM GAS  /tmp/ccwUBerI.s 			page 79


1298:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 2456              		.loc 1 1298 0
 2457 007c 46F48033 		orr	r3, r6, #65536
 2458 0080 5021     		movs	r1, #80
 2459 0082 1970     		strb	r1, [r3]
1299:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       
 2460              		.loc 1 1299 0
 2461 0084 8021     		movs	r1, #128
 2462 0086 1970     		strb	r1, [r3]
1301:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 2463              		.loc 1 1301 0
 2464 0088 E96A     		ldr	r1, [r5, #44]
 2465 008a 2B6B     		ldr	r3, [r5, #48]
 2466 008c 03FB01F3 		mul	r3, r3, r1
 2467 0090 B3F5803F 		cmp	r3, #65536
 2468 0094 0CD2     		bcs	.L208
1303:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2469              		.loc 1 1303 0
 2470 0096 46F40033 		orr	r3, r6, #131072
 2471 009a 0021     		movs	r1, #0
 2472 009c 1970     		strb	r1, [r3]
1304:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2473              		.loc 1 1304 0
 2474 009e F9B2     		uxtb	r1, r7
 2475 00a0 1970     		strb	r1, [r3]
1305:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 2476              		.loc 1 1305 0
 2477 00a2 C7F30721 		ubfx	r1, r7, #8, #8
 2478 00a6 1970     		strb	r1, [r3]
 2479 00a8 41E0     		b	.L211
 2480              	.LVL224:
 2481              	.L222:
1272:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 2482              		.loc 1 1272 0
 2483 00aa 4FF0E046 		mov	r6, #1879048192
 2484 00ae C2E7     		b	.L205
 2485              	.LVL225:
 2486              	.L208:
1309:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2487              		.loc 1 1309 0
 2488 00b0 46F40033 		orr	r3, r6, #131072
 2489 00b4 0021     		movs	r1, #0
 2490 00b6 1970     		strb	r1, [r3]
1310:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2491              		.loc 1 1310 0
 2492 00b8 F9B2     		uxtb	r1, r7
 2493 00ba 1970     		strb	r1, [r3]
1311:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 2494              		.loc 1 1311 0
 2495 00bc C7F30721 		ubfx	r1, r7, #8, #8
 2496 00c0 1970     		strb	r1, [r3]
1312:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 2497              		.loc 1 1312 0
 2498 00c2 C7F30741 		ubfx	r1, r7, #16, #8
 2499 00c6 1970     		strb	r1, [r3]
 2500 00c8 31E0     		b	.L211
 2501              	.L207:
ARM GAS  /tmp/ccwUBerI.s 			page 80


1318:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 2502              		.loc 1 1318 0
 2503 00ca 46F48033 		orr	r3, r6, #65536
 2504 00ce 0021     		movs	r1, #0
 2505 00d0 1970     		strb	r1, [r3]
1319:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 2506              		.loc 1 1319 0
 2507 00d2 8021     		movs	r1, #128
 2508 00d4 1970     		strb	r1, [r3]
1321:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 2509              		.loc 1 1321 0
 2510 00d6 E96A     		ldr	r1, [r5, #44]
 2511 00d8 2B6B     		ldr	r3, [r5, #48]
 2512 00da 03FB01F3 		mul	r3, r3, r1
 2513 00de B3F5803F 		cmp	r3, #65536
 2514 00e2 0DD2     		bcs	.L210
1323:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 2515              		.loc 1 1323 0
 2516 00e4 46F40033 		orr	r3, r6, #131072
 2517 00e8 5FFA8AF1 		uxtb	r1, r10
 2518 00ec 1970     		strb	r1, [r3]
1324:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2519              		.loc 1 1324 0
 2520 00ee CAF30721 		ubfx	r1, r10, #8, #8
 2521 00f2 1970     		strb	r1, [r3]
1325:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2522              		.loc 1 1325 0
 2523 00f4 F9B2     		uxtb	r1, r7
 2524 00f6 1970     		strb	r1, [r3]
1326:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 2525              		.loc 1 1326 0
 2526 00f8 C7F30721 		ubfx	r1, r7, #8, #8
 2527 00fc 1970     		strb	r1, [r3]
 2528 00fe 16E0     		b	.L211
 2529              	.L210:
1330:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 2530              		.loc 1 1330 0
 2531 0100 46F40033 		orr	r3, r6, #131072
 2532 0104 5FFA8AF1 		uxtb	r1, r10
 2533 0108 1970     		strb	r1, [r3]
1331:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2534              		.loc 1 1331 0
 2535 010a CAF30721 		ubfx	r1, r10, #8, #8
 2536 010e 1970     		strb	r1, [r3]
1332:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2537              		.loc 1 1332 0
 2538 0110 F9B2     		uxtb	r1, r7
 2539 0112 1970     		strb	r1, [r3]
1333:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 2540              		.loc 1 1333 0
 2541 0114 C7F30721 		ubfx	r1, r7, #8, #8
 2542 0118 1970     		strb	r1, [r3]
1334:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 2543              		.loc 1 1334 0
 2544 011a C7F30741 		ubfx	r1, r7, #16, #8
 2545 011e 1970     		strb	r1, [r3]
 2546 0120 05E0     		b	.L211
ARM GAS  /tmp/ccwUBerI.s 			page 81


 2547              	.L212:
 2548              	.LVL226:
1341:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 2549              		.loc 1 1341 0 discriminator 2
 2550 0122 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2551 0124 3370     		strb	r3, [r6]
1339:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 2552              		.loc 1 1339 0 discriminator 2
 2553 0126 019B     		ldr	r3, [sp, #4]
 2554 0128 0133     		adds	r3, r3, #1
 2555 012a 0193     		str	r3, [sp, #4]
1341:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 2556              		.loc 1 1341 0 discriminator 2
 2557 012c 0134     		adds	r4, r4, #1
 2558              	.LVL227:
 2559              	.L211:
1339:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 2560              		.loc 1 1339 0 discriminator 1
 2561 012e 019B     		ldr	r3, [sp, #4]
 2562 0130 9A42     		cmp	r2, r3
 2563 0132 F6D8     		bhi	.L212
1344:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 2564              		.loc 1 1344 0
 2565 0134 46F48033 		orr	r3, r6, #65536
 2566 0138 1022     		movs	r2, #16
 2567              	.LVL228:
 2568 013a 1A70     		strb	r2, [r3]
1347:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 2569              		.loc 1 1347 0
 2570 013c FFF7FEFF 		bl	HAL_GetTick
 2571              	.LVL229:
 2572 0140 8346     		mov	fp, r0
 2573              	.LVL230:
 2574              	.L213:
1350:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 2575              		.loc 1 1350 0
 2576 0142 2846     		mov	r0, r5
 2577 0144 FFF7FEFF 		bl	HAL_NAND_Read_Status
 2578              	.LVL231:
 2579 0148 4028     		cmp	r0, #64
 2580 014a 08D0     		beq	.L223
1352:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 2581              		.loc 1 1352 0
 2582 014c FFF7FEFF 		bl	HAL_GetTick
 2583              	.LVL232:
 2584 0150 A0EB0B00 		sub	r0, r0, fp
 2585 0154 B0F57A7F 		cmp	r0, #1000
 2586 0158 F3D9     		bls	.L213
1354:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 2587              		.loc 1 1354 0
 2588 015a 0320     		movs	r0, #3
 2589 015c 0BE0     		b	.L204
 2590              	.L223:
 2591              	.LVL233:
1362:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 2592              		.loc 1 1362 0
 2593 015e 08F1FF38 		add	r8, r8, #-1
ARM GAS  /tmp/ccwUBerI.s 			page 82


 2594              	.LVL234:
1365:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 2595              		.loc 1 1365 0
 2596 0162 0137     		adds	r7, r7, #1
 2597              	.LVL235:
 2598 0164 77E7     		b	.L206
 2599              	.LVL236:
 2600              	.L215:
1369:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 2601              		.loc 1 1369 0
 2602 0166 0123     		movs	r3, #1
 2603 0168 85F82130 		strb	r3, [r5, #33]
1372:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 2604              		.loc 1 1372 0
 2605 016c 0020     		movs	r0, #0
 2606 016e 85F82000 		strb	r0, [r5, #32]
1374:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
 2607              		.loc 1 1374 0
 2608 0172 00E0     		b	.L204
 2609              	.LVL237:
 2610              	.L217:
1261:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 2611              		.loc 1 1261 0
 2612 0174 0220     		movs	r0, #2
 2613              	.LVL238:
 2614              	.L204:
1375:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 2615              		.loc 1 1375 0
 2616 0176 03B0     		add	sp, sp, #12
 2617              	.LCFI35:
 2618              		.cfi_remember_state
 2619              		.cfi_def_cfa_offset 36
 2620              		@ sp needed
 2621 0178 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2622              	.LVL239:
 2623              	.L218:
 2624              	.LCFI36:
 2625              		.cfi_restore_state
1266:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 2626              		.loc 1 1266 0
 2627 017c 0220     		movs	r0, #2
 2628              	.LVL240:
 2629 017e FAE7     		b	.L204
 2630              		.cfi_endproc
 2631              	.LFE79:
 2633              		.section	.text.HAL_NAND_Write_SpareArea_16b,"ax",%progbits
 2634              		.align	1
 2635              		.global	HAL_NAND_Write_SpareArea_16b
 2636              		.syntax unified
 2637              		.thumb
 2638              		.thumb_func
 2639              		.fpu softvfp
 2641              	HAL_NAND_Write_SpareArea_16b:
 2642              	.LFB80:
1387:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   __IO uint32_t index = 0U;
 2643              		.loc 1 1387 0
 2644              		.cfi_startproc
ARM GAS  /tmp/ccwUBerI.s 			page 83


 2645              		@ args = 0, pretend = 0, frame = 8
 2646              		@ frame_needed = 0, uses_anonymous_args = 0
 2647              	.LVL241:
 2648 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2649              	.LCFI37:
 2650              		.cfi_def_cfa_offset 36
 2651              		.cfi_offset 4, -36
 2652              		.cfi_offset 5, -32
 2653              		.cfi_offset 6, -28
 2654              		.cfi_offset 7, -24
 2655              		.cfi_offset 8, -20
 2656              		.cfi_offset 9, -16
 2657              		.cfi_offset 10, -12
 2658              		.cfi_offset 11, -8
 2659              		.cfi_offset 14, -4
 2660 0004 83B0     		sub	sp, sp, #12
 2661              	.LCFI38:
 2662              		.cfi_def_cfa_offset 48
 2663 0006 9946     		mov	r9, r3
1388:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t tickstart = 0U;
 2664              		.loc 1 1388 0
 2665 0008 0023     		movs	r3, #0
 2666              	.LVL242:
 2667 000a 0193     		str	r3, [sp, #4]
 2668              	.LVL243:
1393:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 2669              		.loc 1 1393 0
 2670 000c 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2671 0010 012B     		cmp	r3, #1
 2672 0012 00F0B680 		beq	.L238
 2673 0016 0646     		mov	r6, r0
 2674 0018 1546     		mov	r5, r2
1393:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 2675              		.loc 1 1393 0 is_stmt 0 discriminator 2
 2676 001a 0123     		movs	r3, #1
 2677 001c 80F82030 		strb	r3, [r0, #32]
1396:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 2678              		.loc 1 1396 0 is_stmt 1 discriminator 2
 2679 0020 90F82130 		ldrb	r3, [r0, #33]	@ zero_extendqisi2
 2680 0024 DBB2     		uxtb	r3, r3
 2681 0026 022B     		cmp	r3, #2
 2682 0028 00F0AF80 		beq	.L239
1402:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 2683              		.loc 1 1402 0
 2684 002c 4368     		ldr	r3, [r0, #4]
 2685 002e 102B     		cmp	r3, #16
 2686 0030 3FD0     		beq	.L243
1408:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 2687              		.loc 1 1408 0
 2688 0032 4FF00047 		mov	r7, #-2147483648
 2689              	.L226:
 2690              	.LVL244:
1412:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 2691              		.loc 1 1412 0
 2692 0036 0223     		movs	r3, #2
 2693 0038 86F82130 		strb	r3, [r6, #33]
1415:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
ARM GAS  /tmp/ccwUBerI.s 			page 84


 2694              		.loc 1 1415 0
 2695 003c 0B88     		ldrh	r3, [r1]
 2696 003e 8A88     		ldrh	r2, [r1, #4]
 2697              	.LVL245:
 2698 0040 B1F80280 		ldrh	r8, [r1, #2]
 2699 0044 B16B     		ldr	r1, [r6, #56]
 2700              	.LVL246:
 2701 0046 01FB0828 		mla	r8, r1, r8, r2
 2702 004a F26A     		ldr	r2, [r6, #44]
 2703 004c 02FB0838 		mla	r8, r2, r8, r3
 2704              	.LVL247:
1418:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 2705              		.loc 1 1418 0
 2706 0050 736A     		ldr	r3, [r6, #36]
 2707 0052 4FEA430B 		lsl	fp, r3, #1
 2708              	.LVL248:
1390:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 2709              		.loc 1 1390 0
 2710 0056 4FF0000A 		mov	r10, #0
 2711              	.LVL249:
 2712              	.L227:
1421:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 2713              		.loc 1 1421 0
 2714 005a B9F1000F 		cmp	r9, #0
 2715 005e 00F08980 		beq	.L236
1421:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 2716              		.loc 1 1421 0 is_stmt 0 discriminator 1
 2717 0062 F26A     		ldr	r2, [r6, #44]
 2718 0064 336B     		ldr	r3, [r6, #48]
 2719 0066 03FB02F3 		mul	r3, r3, r2
 2720 006a 9845     		cmp	r8, r3
 2721 006c 80F08280 		bcs	.L236
1424:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 2722              		.loc 1 1424 0 is_stmt 1
 2723 0070 0AF1010A 		add	r10, r10, #1
 2724              	.LVL250:
 2725 0074 B26A     		ldr	r2, [r6, #40]
 2726 0076 02FB0AF2 		mul	r2, r2, r10
 2727              	.LVL251:
1427:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 2728              		.loc 1 1427 0
 2729 007a 736A     		ldr	r3, [r6, #36]
 2730 007c B3F5007F 		cmp	r3, #512
 2731 0080 28D8     		bhi	.L228
1430:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 2732              		.loc 1 1430 0
 2733 0082 47F48033 		orr	r3, r7, #65536
 2734 0086 5021     		movs	r1, #80
 2735 0088 1970     		strb	r1, [r3]
1431:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 2736              		.loc 1 1431 0
 2737 008a 8021     		movs	r1, #128
 2738 008c 1970     		strb	r1, [r3]
1433:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 2739              		.loc 1 1433 0
 2740 008e F16A     		ldr	r1, [r6, #44]
 2741 0090 336B     		ldr	r3, [r6, #48]
ARM GAS  /tmp/ccwUBerI.s 			page 85


 2742 0092 03FB01F3 		mul	r3, r3, r1
 2743 0096 B3F5803F 		cmp	r3, #65536
 2744 009a 0DD2     		bcs	.L229
1435:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2745              		.loc 1 1435 0
 2746 009c 47F40033 		orr	r3, r7, #131072
 2747 00a0 0021     		movs	r1, #0
 2748 00a2 1970     		strb	r1, [r3]
1436:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2749              		.loc 1 1436 0
 2750 00a4 5FFA88F1 		uxtb	r1, r8
 2751 00a8 1970     		strb	r1, [r3]
1437:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 2752              		.loc 1 1437 0
 2753 00aa C8F30721 		ubfx	r1, r8, #8, #8
 2754 00ae 1970     		strb	r1, [r3]
 2755 00b0 44E0     		b	.L232
 2756              	.LVL252:
 2757              	.L243:
1404:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 2758              		.loc 1 1404 0
 2759 00b2 4FF0E047 		mov	r7, #1879048192
 2760 00b6 BEE7     		b	.L226
 2761              	.LVL253:
 2762              	.L229:
1441:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2763              		.loc 1 1441 0
 2764 00b8 47F40033 		orr	r3, r7, #131072
 2765 00bc 0021     		movs	r1, #0
 2766 00be 1970     		strb	r1, [r3]
1442:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2767              		.loc 1 1442 0
 2768 00c0 5FFA88F1 		uxtb	r1, r8
 2769 00c4 1970     		strb	r1, [r3]
1443:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 2770              		.loc 1 1443 0
 2771 00c6 C8F30721 		ubfx	r1, r8, #8, #8
 2772 00ca 1970     		strb	r1, [r3]
1444:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 2773              		.loc 1 1444 0
 2774 00cc C8F30741 		ubfx	r1, r8, #16, #8
 2775 00d0 1970     		strb	r1, [r3]
 2776 00d2 33E0     		b	.L232
 2777              	.L228:
1450:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 2778              		.loc 1 1450 0
 2779 00d4 47F48033 		orr	r3, r7, #65536
 2780 00d8 0021     		movs	r1, #0
 2781 00da 1970     		strb	r1, [r3]
1451:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 2782              		.loc 1 1451 0
 2783 00dc 8021     		movs	r1, #128
 2784 00de 1970     		strb	r1, [r3]
1453:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 2785              		.loc 1 1453 0
 2786 00e0 F16A     		ldr	r1, [r6, #44]
 2787 00e2 336B     		ldr	r3, [r6, #48]
ARM GAS  /tmp/ccwUBerI.s 			page 86


 2788 00e4 03FB01F3 		mul	r3, r3, r1
 2789 00e8 B3F5803F 		cmp	r3, #65536
 2790 00ec 0ED2     		bcs	.L231
1455:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 2791              		.loc 1 1455 0
 2792 00ee 47F40033 		orr	r3, r7, #131072
 2793 00f2 5FFA8BF1 		uxtb	r1, fp
 2794 00f6 1970     		strb	r1, [r3]
1456:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2795              		.loc 1 1456 0
 2796 00f8 CBF30721 		ubfx	r1, fp, #8, #8
 2797 00fc 1970     		strb	r1, [r3]
1457:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2798              		.loc 1 1457 0
 2799 00fe 5FFA88F1 		uxtb	r1, r8
 2800 0102 1970     		strb	r1, [r3]
1458:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 2801              		.loc 1 1458 0
 2802 0104 C8F30721 		ubfx	r1, r8, #8, #8
 2803 0108 1970     		strb	r1, [r3]
 2804 010a 17E0     		b	.L232
 2805              	.L231:
1462:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 2806              		.loc 1 1462 0
 2807 010c 47F40033 		orr	r3, r7, #131072
 2808 0110 5FFA8BF1 		uxtb	r1, fp
 2809 0114 1970     		strb	r1, [r3]
1463:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2810              		.loc 1 1463 0
 2811 0116 CBF30721 		ubfx	r1, fp, #8, #8
 2812 011a 1970     		strb	r1, [r3]
1464:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2813              		.loc 1 1464 0
 2814 011c 5FFA88F1 		uxtb	r1, r8
 2815 0120 1970     		strb	r1, [r3]
1465:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 2816              		.loc 1 1465 0
 2817 0122 C8F30721 		ubfx	r1, r8, #8, #8
 2818 0126 1970     		strb	r1, [r3]
1466:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 2819              		.loc 1 1466 0
 2820 0128 C8F30741 		ubfx	r1, r8, #16, #8
 2821 012c 1970     		strb	r1, [r3]
 2822 012e 05E0     		b	.L232
 2823              	.L233:
 2824              	.LVL254:
1473:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 2825              		.loc 1 1473 0 discriminator 2
 2826 0130 2B88     		ldrh	r3, [r5]
 2827 0132 3B80     		strh	r3, [r7]	@ movhi
1471:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 2828              		.loc 1 1471 0 discriminator 2
 2829 0134 019B     		ldr	r3, [sp, #4]
 2830 0136 0133     		adds	r3, r3, #1
 2831 0138 0193     		str	r3, [sp, #4]
1473:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
 2832              		.loc 1 1473 0 discriminator 2
ARM GAS  /tmp/ccwUBerI.s 			page 87


 2833 013a 0235     		adds	r5, r5, #2
 2834              	.LVL255:
 2835              	.L232:
1471:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 2836              		.loc 1 1471 0 discriminator 1
 2837 013c 019B     		ldr	r3, [sp, #4]
 2838 013e 9A42     		cmp	r2, r3
 2839 0140 F6D8     		bhi	.L233
1476:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****    
 2840              		.loc 1 1476 0
 2841 0142 47F48033 		orr	r3, r7, #65536
 2842 0146 1022     		movs	r2, #16
 2843              	.LVL256:
 2844 0148 1A70     		strb	r2, [r3]
 2845              	.L234:
1479:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 2846              		.loc 1 1479 0
 2847 014a 3046     		mov	r0, r6
 2848 014c FFF7FEFF 		bl	HAL_NAND_Read_Status
 2849              	.LVL257:
 2850 0150 4028     		cmp	r0, #64
 2851 0152 0AD0     		beq	.L244
1482:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 2852              		.loc 1 1482 0
 2853 0154 FFF7FEFF 		bl	HAL_GetTick
 2854              	.LVL258:
 2855 0158 0446     		mov	r4, r0
 2856              	.LVL259:
1484:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
 2857              		.loc 1 1484 0
 2858 015a FFF7FEFF 		bl	HAL_GetTick
 2859              	.LVL260:
 2860 015e 001B     		subs	r0, r0, r4
 2861 0160 B0F57A7F 		cmp	r0, #1000
 2862 0164 F1D9     		bls	.L234
1486:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
 2863              		.loc 1 1486 0
 2864 0166 0320     		movs	r0, #3
 2865 0168 0CE0     		b	.L225
 2866              	.LVL261:
 2867              	.L244:
1494:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 2868              		.loc 1 1494 0
 2869 016a 09F1FF39 		add	r9, r9, #-1
 2870              	.LVL262:
1497:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 2871              		.loc 1 1497 0
 2872 016e 08F10108 		add	r8, r8, #1
 2873              	.LVL263:
 2874 0172 72E7     		b	.L227
 2875              	.L236:
1501:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 2876              		.loc 1 1501 0
 2877 0174 0123     		movs	r3, #1
 2878 0176 86F82130 		strb	r3, [r6, #33]
1504:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 2879              		.loc 1 1504 0
ARM GAS  /tmp/ccwUBerI.s 			page 88


 2880 017a 0020     		movs	r0, #0
 2881 017c 86F82000 		strb	r0, [r6, #32]
1506:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
 2882              		.loc 1 1506 0
 2883 0180 00E0     		b	.L225
 2884              	.LVL264:
 2885              	.L238:
1393:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 2886              		.loc 1 1393 0
 2887 0182 0220     		movs	r0, #2
 2888              	.LVL265:
 2889              	.L225:
1507:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 2890              		.loc 1 1507 0
 2891 0184 03B0     		add	sp, sp, #12
 2892              	.LCFI39:
 2893              		.cfi_remember_state
 2894              		.cfi_def_cfa_offset 36
 2895              		@ sp needed
 2896 0186 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2897              	.LVL266:
 2898              	.L239:
 2899              	.LCFI40:
 2900              		.cfi_restore_state
1398:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 2901              		.loc 1 1398 0
 2902 018a 0220     		movs	r0, #2
 2903              	.LVL267:
 2904 018c FAE7     		b	.L225
 2905              		.cfi_endproc
 2906              	.LFE80:
 2908              		.section	.text.HAL_NAND_Erase_Block,"ax",%progbits
 2909              		.align	1
 2910              		.global	HAL_NAND_Erase_Block
 2911              		.syntax unified
 2912              		.thumb
 2913              		.thumb_func
 2914              		.fpu softvfp
 2916              	HAL_NAND_Erase_Block:
 2917              	.LFB81:
1517:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t deviceaddress = 0U;
 2918              		.loc 1 1517 0
 2919              		.cfi_startproc
 2920              		@ args = 0, pretend = 0, frame = 0
 2921              		@ frame_needed = 0, uses_anonymous_args = 0
 2922              	.LVL268:
 2923 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2924              	.LCFI41:
 2925              		.cfi_def_cfa_offset 24
 2926              		.cfi_offset 3, -24
 2927              		.cfi_offset 4, -20
 2928              		.cfi_offset 5, -16
 2929              		.cfi_offset 6, -12
 2930              		.cfi_offset 7, -8
 2931              		.cfi_offset 14, -4
 2932              	.LVL269:
1522:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
ARM GAS  /tmp/ccwUBerI.s 			page 89


 2933              		.loc 1 1522 0
 2934 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2935 0006 012B     		cmp	r3, #1
 2936 0008 58D0     		beq	.L250
1522:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 2937              		.loc 1 1522 0 is_stmt 0 discriminator 2
 2938 000a 0123     		movs	r3, #1
 2939 000c 80F82030 		strb	r3, [r0, #32]
1525:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 2940              		.loc 1 1525 0 is_stmt 1 discriminator 2
 2941 0010 90F82130 		ldrb	r3, [r0, #33]	@ zero_extendqisi2
 2942 0014 DBB2     		uxtb	r3, r3
 2943 0016 022B     		cmp	r3, #2
 2944 0018 52D0     		beq	.L251
1531:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 2945              		.loc 1 1531 0
 2946 001a 4368     		ldr	r3, [r0, #4]
 2947 001c 102B     		cmp	r3, #16
 2948 001e 46D0     		beq	.L254
1537:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 2949              		.loc 1 1537 0
 2950 0020 4FF00042 		mov	r2, #-2147483648
 2951              	.L247:
 2952 0024 0446     		mov	r4, r0
 2953              	.LVL270:
1541:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 2954              		.loc 1 1541 0
 2955 0026 0223     		movs	r3, #2
 2956 0028 80F82130 		strb	r3, [r0, #33]
1544:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 2957              		.loc 1 1544 0
 2958 002c 42F48030 		orr	r0, r2, #65536
 2959              	.LVL271:
 2960 0030 6023     		movs	r3, #96
 2961 0032 0370     		strb	r3, [r0]
1546:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(ARRAY_ADDRESS(pAddress,
 2962              		.loc 1 1546 0
 2963 0034 42F40032 		orr	r2, r2, #131072
 2964              	.LVL272:
 2965 0038 0E88     		ldrh	r6, [r1]
 2966 003a 8B88     		ldrh	r3, [r1, #4]
 2967 003c 4D88     		ldrh	r5, [r1, #2]
 2968 003e A76B     		ldr	r7, [r4, #56]
 2969 0040 07FB0535 		mla	r5, r7, r5, r3
 2970 0044 E36A     		ldr	r3, [r4, #44]
 2971 0046 05FB0363 		mla	r3, r5, r3, r6
 2972 004a DBB2     		uxtb	r3, r3
 2973 004c 1370     		strb	r3, [r2]
1547:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(ARRAY_ADDRESS(pAddress,
 2974              		.loc 1 1547 0
 2975 004e 0D88     		ldrh	r5, [r1]
 2976 0050 8E88     		ldrh	r6, [r1, #4]
 2977 0052 4B88     		ldrh	r3, [r1, #2]
 2978 0054 A76B     		ldr	r7, [r4, #56]
 2979 0056 07FB0363 		mla	r3, r7, r3, r6
 2980 005a E66A     		ldr	r6, [r4, #44]
 2981 005c 06FB0353 		mla	r3, r6, r3, r5
ARM GAS  /tmp/ccwUBerI.s 			page 90


 2982 0060 C3F30723 		ubfx	r3, r3, #8, #8
 2983 0064 1370     		strb	r3, [r2]
1548:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
 2984              		.loc 1 1548 0
 2985 0066 0D88     		ldrh	r5, [r1]
 2986 0068 8E88     		ldrh	r6, [r1, #4]
 2987 006a 4B88     		ldrh	r3, [r1, #2]
 2988 006c A16B     		ldr	r1, [r4, #56]
 2989              	.LVL273:
 2990 006e 01FB0363 		mla	r3, r1, r3, r6
 2991 0072 E16A     		ldr	r1, [r4, #44]
 2992 0074 01FB0353 		mla	r3, r1, r3, r5
 2993 0078 C3F30743 		ubfx	r3, r3, #16, #8
 2994 007c 1370     		strb	r3, [r2]
1550:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 2995              		.loc 1 1550 0
 2996 007e D023     		movs	r3, #208
 2997 0080 0370     		strb	r3, [r0]
1553:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 2998              		.loc 1 1553 0
 2999 0082 0123     		movs	r3, #1
 3000 0084 84F82130 		strb	r3, [r4, #33]
1556:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 3001              		.loc 1 1556 0
 3002 0088 FFF7FEFF 		bl	HAL_GetTick
 3003              	.LVL274:
 3004 008c 0546     		mov	r5, r0
 3005              	.LVL275:
 3006              	.L248:
1559:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
 3007              		.loc 1 1559 0
 3008 008e 2046     		mov	r0, r4
 3009 0090 FFF7FEFF 		bl	HAL_NAND_Read_Status
 3010              	.LVL276:
 3011 0094 4028     		cmp	r0, #64
 3012 0096 0DD0     		beq	.L255
1561:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
 3013              		.loc 1 1561 0
 3014 0098 FFF7FEFF 		bl	HAL_GetTick
 3015              	.LVL277:
 3016 009c 401B     		subs	r0, r0, r5
 3017 009e B0F57A7F 		cmp	r0, #1000
 3018 00a2 F4D9     		bls	.L248
1564:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 3019              		.loc 1 1564 0
 3020 00a4 0023     		movs	r3, #0
 3021 00a6 84F82030 		strb	r3, [r4, #32]
1566:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     } 
 3022              		.loc 1 1566 0
 3023 00aa 0320     		movs	r0, #3
 3024 00ac F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3025              	.LVL278:
 3026              	.L254:
1533:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 3027              		.loc 1 1533 0
 3028 00ae 4FF0E042 		mov	r2, #1879048192
 3029 00b2 B7E7     		b	.L247
ARM GAS  /tmp/ccwUBerI.s 			page 91


 3030              	.LVL279:
 3031              	.L255:
1571:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 3032              		.loc 1 1571 0
 3033 00b4 0020     		movs	r0, #0
 3034 00b6 84F82000 		strb	r0, [r4, #32]
1573:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
 3035              		.loc 1 1573 0
 3036 00ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3037              	.LVL280:
 3038              	.L250:
1522:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 3039              		.loc 1 1522 0
 3040 00bc 0220     		movs	r0, #2
 3041              	.LVL281:
 3042 00be F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3043              	.LVL282:
 3044              	.L251:
1527:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
 3045              		.loc 1 1527 0
 3046 00c0 0220     		movs	r0, #2
 3047              	.LVL283:
1574:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 3048              		.loc 1 1574 0
 3049 00c2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3050              		.cfi_endproc
 3051              	.LFE81:
 3053              		.section	.text.HAL_NAND_Address_Inc,"ax",%progbits
 3054              		.align	1
 3055              		.global	HAL_NAND_Address_Inc
 3056              		.syntax unified
 3057              		.thumb
 3058              		.thumb_func
 3059              		.fpu softvfp
 3061              	HAL_NAND_Address_Inc:
 3062              	.LFB83:
1615:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1616:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
1617:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief  Increment the NAND memory address
1618:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  hnand: pointer to a NAND_HandleTypeDef structure that contains
1619:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *                the configuration information for NAND module.
1620:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param pAddress: pointer to NAND address structure
1621:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @retval The new status of the increment address operation. It can be:
1622:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *           - NAND_VALID_ADDRESS: When the new address is valid address
1623:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *           - NAND_INVALID_ADDRESS: When the new address is invalid address
1624:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
1625:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** uint32_t HAL_NAND_Address_Inc(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAddress)
1626:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** {
 3063              		.loc 1 1626 0
 3064              		.cfi_startproc
 3065              		@ args = 0, pretend = 0, frame = 0
 3066              		@ frame_needed = 0, uses_anonymous_args = 0
 3067              		@ link register save eliminated.
 3068              	.LVL284:
1627:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t status = NAND_VALID_ADDRESS;
1628:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****  
1629:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Increment page address */
ARM GAS  /tmp/ccwUBerI.s 			page 92


1630:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   pAddress->Page++;
 3069              		.loc 1 1630 0
 3070 0000 0B88     		ldrh	r3, [r1]
 3071 0002 0133     		adds	r3, r3, #1
 3072 0004 9BB2     		uxth	r3, r3
 3073 0006 0B80     		strh	r3, [r1]	@ movhi
1631:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1632:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Check NAND address is valid */
1633:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(pAddress->Page == hnand->Config.BlockSize)
 3074              		.loc 1 1633 0
 3075 0008 C26A     		ldr	r2, [r0, #44]
 3076 000a 9342     		cmp	r3, r2
 3077 000c 02D0     		beq	.L261
1627:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   uint32_t status = NAND_VALID_ADDRESS;
 3078              		.loc 1 1627 0
 3079 000e 4FF48070 		mov	r0, #256
 3080              	.LVL285:
 3081 0012 7047     		bx	lr
 3082              	.LVL286:
 3083              	.L261:
1634:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
1635:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     pAddress->Page = 0U;
 3084              		.loc 1 1635 0
 3085 0014 0023     		movs	r3, #0
 3086 0016 0B80     		strh	r3, [r1]	@ movhi
1636:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     pAddress->Block++;
 3087              		.loc 1 1636 0
 3088 0018 8B88     		ldrh	r3, [r1, #4]
 3089 001a 0133     		adds	r3, r3, #1
 3090 001c 9BB2     		uxth	r3, r3
 3091 001e 8B80     		strh	r3, [r1, #4]	@ movhi
1637:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
1638:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     if(pAddress->Block == hnand->Config.PlaneSize)
 3092              		.loc 1 1638 0
 3093 0020 826B     		ldr	r2, [r0, #56]
 3094 0022 9342     		cmp	r3, r2
 3095 0024 02D0     		beq	.L262
1627:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****  
 3096              		.loc 1 1627 0
 3097 0026 4FF48070 		mov	r0, #256
 3098              	.LVL287:
 3099 002a 7047     		bx	lr
 3100              	.LVL288:
 3101              	.L262:
1639:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     {
1640:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       pAddress->Block = 0U;
 3102              		.loc 1 1640 0
 3103 002c 0023     		movs	r3, #0
 3104 002e 8B80     		strh	r3, [r1, #4]	@ movhi
1641:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       pAddress->Plane++;
 3105              		.loc 1 1641 0
 3106 0030 4B88     		ldrh	r3, [r1, #2]
 3107 0032 0133     		adds	r3, r3, #1
 3108 0034 9BB2     		uxth	r3, r3
 3109 0036 4B80     		strh	r3, [r1, #2]	@ movhi
1642:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1643:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       if(pAddress->Plane == (hnand->Config.PlaneNbr))
ARM GAS  /tmp/ccwUBerI.s 			page 93


 3110              		.loc 1 1643 0
 3111 0038 426B     		ldr	r2, [r0, #52]
 3112 003a 9342     		cmp	r3, r2
 3113 003c 02D0     		beq	.L260
1627:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****  
 3114              		.loc 1 1627 0
 3115 003e 4FF48070 		mov	r0, #256
 3116              	.LVL289:
 3117 0042 7047     		bx	lr
 3118              	.LVL290:
 3119              	.L260:
1644:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       {
1645:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****         status = NAND_INVALID_ADDRESS;
 3120              		.loc 1 1645 0
 3121 0044 4FF40070 		mov	r0, #512
 3122              	.LVL291:
1646:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****       }
1647:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     }
1648:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   } 
1649:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1650:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   return (status);
1651:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
 3123              		.loc 1 1651 0
 3124 0048 7047     		bx	lr
 3125              		.cfi_endproc
 3126              	.LFE83:
 3128              		.section	.text.HAL_NAND_ECC_Enable,"ax",%progbits
 3129              		.align	1
 3130              		.global	HAL_NAND_ECC_Enable
 3131              		.syntax unified
 3132              		.thumb
 3133              		.thumb_func
 3134              		.fpu softvfp
 3136              	HAL_NAND_ECC_Enable:
 3137              	.LFB84:
1652:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
1653:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @}
1654:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
1655:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1656:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /** @defgroup NAND_Exported_Functions_Group3 Peripheral Control functions 
1657:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****  *  @brief   management functions 
1658:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****  *
1659:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** @verbatim   
1660:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   ==============================================================================
1661:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****                          ##### NAND Control functions #####
1662:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   ==============================================================================  
1663:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   [..]
1664:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     This subsection provides a set of functions allowing to control dynamically
1665:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     the NAND interface.
1666:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1667:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** @endverbatim
1668:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @{
1669:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */ 
1670:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1671:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
1672:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
1673:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief  Enables dynamically NAND ECC feature.
ARM GAS  /tmp/ccwUBerI.s 			page 94


1674:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  hnand: pointer to a NAND_HandleTypeDef structure that contains
1675:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *                the configuration information for NAND module.
1676:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @retval HAL status
1677:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */    
1678:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** HAL_StatusTypeDef  HAL_NAND_ECC_Enable(NAND_HandleTypeDef *hnand)
1679:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** {
 3138              		.loc 1 1679 0
 3139              		.cfi_startproc
 3140              		@ args = 0, pretend = 0, frame = 0
 3141              		@ frame_needed = 0, uses_anonymous_args = 0
 3142              	.LVL292:
1680:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Check the NAND controller state */
1681:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
 3143              		.loc 1 1681 0
 3144 0000 90F82130 		ldrb	r3, [r0, #33]	@ zero_extendqisi2
 3145 0004 DBB2     		uxtb	r3, r3
 3146 0006 022B     		cmp	r3, #2
 3147 0008 01D1     		bne	.L270
1682:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
1683:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****      return HAL_BUSY;
 3148              		.loc 1 1683 0
 3149 000a 0220     		movs	r0, #2
 3150              	.LVL293:
 3151 000c 7047     		bx	lr
 3152              	.LVL294:
 3153              	.L270:
1679:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Check the NAND controller state */
 3154              		.loc 1 1679 0
 3155 000e 10B5     		push	{r4, lr}
 3156              	.LCFI42:
 3157              		.cfi_def_cfa_offset 8
 3158              		.cfi_offset 4, -8
 3159              		.cfi_offset 14, -4
 3160 0010 0446     		mov	r4, r0
1684:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
1685:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1686:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the NAND state */
1687:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY;
 3161              		.loc 1 1687 0
 3162 0012 0223     		movs	r3, #2
 3163 0014 80F82130 		strb	r3, [r0, #33]
1688:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****    
1689:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Enable ECC feature */
1690:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   FSMC_NAND_ECC_Enable(hnand->Instance, hnand->Init.NandBank);
 3164              		.loc 1 1690 0
 3165 0018 4168     		ldr	r1, [r0, #4]
 3166 001a 0068     		ldr	r0, [r0]
 3167              	.LVL295:
 3168 001c FFF7FEFF 		bl	FSMC_NAND_ECC_Enable
 3169              	.LVL296:
1691:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1692:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the NAND state */
1693:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
 3170              		.loc 1 1693 0
 3171 0020 0123     		movs	r3, #1
 3172 0022 84F82130 		strb	r3, [r4, #33]
1694:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
ARM GAS  /tmp/ccwUBerI.s 			page 95


1695:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   return HAL_OK;
 3173              		.loc 1 1695 0
 3174 0026 0020     		movs	r0, #0
 3175 0028 10BD     		pop	{r4, pc}
 3176              		.cfi_endproc
 3177              	.LFE84:
 3179              		.section	.text.HAL_NAND_ECC_Disable,"ax",%progbits
 3180              		.align	1
 3181              		.global	HAL_NAND_ECC_Disable
 3182              		.syntax unified
 3183              		.thumb
 3184              		.thumb_func
 3185              		.fpu softvfp
 3187              	HAL_NAND_ECC_Disable:
 3188              	.LFB85:
1696:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
1697:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1698:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
1699:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief  Disables dynamically FSMC_NAND ECC feature.
1700:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  hnand: pointer to a NAND_HandleTypeDef structure that contains
1701:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *                the configuration information for NAND module.
1702:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @retval HAL status
1703:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */  
1704:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** HAL_StatusTypeDef  HAL_NAND_ECC_Disable(NAND_HandleTypeDef *hnand)
1705:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** {
 3189              		.loc 1 1705 0
 3190              		.cfi_startproc
 3191              		@ args = 0, pretend = 0, frame = 0
 3192              		@ frame_needed = 0, uses_anonymous_args = 0
 3193              	.LVL297:
1706:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Check the NAND controller state */
1707:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
 3194              		.loc 1 1707 0
 3195 0000 90F82130 		ldrb	r3, [r0, #33]	@ zero_extendqisi2
 3196 0004 DBB2     		uxtb	r3, r3
 3197 0006 022B     		cmp	r3, #2
 3198 0008 01D1     		bne	.L278
1708:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
1709:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****      return HAL_BUSY;
 3199              		.loc 1 1709 0
 3200 000a 0220     		movs	r0, #2
 3201              	.LVL298:
 3202 000c 7047     		bx	lr
 3203              	.LVL299:
 3204              	.L278:
1705:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Check the NAND controller state */
 3205              		.loc 1 1705 0
 3206 000e 10B5     		push	{r4, lr}
 3207              	.LCFI43:
 3208              		.cfi_def_cfa_offset 8
 3209              		.cfi_offset 4, -8
 3210              		.cfi_offset 14, -4
 3211 0010 0446     		mov	r4, r0
1710:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
1711:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1712:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the NAND state */
1713:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY;
ARM GAS  /tmp/ccwUBerI.s 			page 96


 3212              		.loc 1 1713 0
 3213 0012 0223     		movs	r3, #2
 3214 0014 80F82130 		strb	r3, [r0, #33]
1714:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
1715:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Disable ECC feature */
1716:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   FSMC_NAND_ECC_Disable(hnand->Instance, hnand->Init.NandBank);
 3215              		.loc 1 1716 0
 3216 0018 4168     		ldr	r1, [r0, #4]
 3217 001a 0068     		ldr	r0, [r0]
 3218              	.LVL300:
 3219 001c FFF7FEFF 		bl	FSMC_NAND_ECC_Disable
 3220              	.LVL301:
1717:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1718:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the NAND state */
1719:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
 3221              		.loc 1 1719 0
 3222 0020 0123     		movs	r3, #1
 3223 0022 84F82130 		strb	r3, [r4, #33]
1720:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1721:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   return HAL_OK;  
 3224              		.loc 1 1721 0
 3225 0026 0020     		movs	r0, #0
 3226 0028 10BD     		pop	{r4, pc}
 3227              		.cfi_endproc
 3228              	.LFE85:
 3230              		.section	.text.HAL_NAND_GetECC,"ax",%progbits
 3231              		.align	1
 3232              		.global	HAL_NAND_GetECC
 3233              		.syntax unified
 3234              		.thumb
 3235              		.thumb_func
 3236              		.fpu softvfp
 3238              	HAL_NAND_GetECC:
 3239              	.LFB86:
1722:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
1723:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1724:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
1725:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief  Disables dynamically NAND ECC feature.
1726:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  hnand: pointer to a NAND_HandleTypeDef structure that contains
1727:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *                the configuration information for NAND module.
1728:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  ECCval: pointer to ECC value 
1729:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  Timeout: maximum timeout to wait    
1730:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @retval HAL status
1731:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
1732:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** HAL_StatusTypeDef  HAL_NAND_GetECC(NAND_HandleTypeDef *hnand, uint32_t *ECCval, uint32_t Timeout)
1733:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** {
 3240              		.loc 1 1733 0
 3241              		.cfi_startproc
 3242              		@ args = 0, pretend = 0, frame = 0
 3243              		@ frame_needed = 0, uses_anonymous_args = 0
 3244              	.LVL302:
 3245 0000 10B5     		push	{r4, lr}
 3246              	.LCFI44:
 3247              		.cfi_def_cfa_offset 8
 3248              		.cfi_offset 4, -8
 3249              		.cfi_offset 14, -4
 3250              	.LVL303:
ARM GAS  /tmp/ccwUBerI.s 			page 97


1734:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   HAL_StatusTypeDef status = HAL_OK;
1735:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1736:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Check the NAND controller state */
1737:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
 3251              		.loc 1 1737 0
 3252 0002 90F82140 		ldrb	r4, [r0, #33]	@ zero_extendqisi2
 3253 0006 E4B2     		uxtb	r4, r4
 3254 0008 022C     		cmp	r4, #2
 3255 000a 01D1     		bne	.L283
1738:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   {
1739:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****      return HAL_BUSY;
 3256              		.loc 1 1739 0
 3257 000c 0220     		movs	r0, #2
 3258              	.LVL304:
1740:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   }
1741:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1742:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the NAND state */
1743:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY;  
1744:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****    
1745:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Get NAND ECC value */
1746:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   status = FSMC_NAND_GetECC(hnand->Instance, ECCval, hnand->Init.NandBank, Timeout);
1747:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1748:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   /* Update the NAND state */
1749:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
1750:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1751:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   return status;  
1752:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
 3259              		.loc 1 1752 0
 3260 000e 10BD     		pop	{r4, pc}
 3261              	.LVL305:
 3262              	.L283:
 3263 0010 1346     		mov	r3, r2
 3264 0012 0446     		mov	r4, r0
1743:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****    
 3265              		.loc 1 1743 0
 3266 0014 0222     		movs	r2, #2
 3267              	.LVL306:
 3268 0016 80F82120 		strb	r2, [r0, #33]
1746:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
 3269              		.loc 1 1746 0
 3270 001a 4268     		ldr	r2, [r0, #4]
 3271 001c 0068     		ldr	r0, [r0]
 3272              	.LVL307:
 3273 001e FFF7FEFF 		bl	FSMC_NAND_GetECC
 3274              	.LVL308:
1749:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
 3275              		.loc 1 1749 0
 3276 0022 0123     		movs	r3, #1
 3277 0024 84F82130 		strb	r3, [r4, #33]
1751:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
 3278              		.loc 1 1751 0
 3279 0028 10BD     		pop	{r4, pc}
 3280              		.cfi_endproc
 3281              	.LFE86:
 3283              		.section	.text.HAL_NAND_GetState,"ax",%progbits
 3284              		.align	1
 3285              		.global	HAL_NAND_GetState
ARM GAS  /tmp/ccwUBerI.s 			page 98


 3286              		.syntax unified
 3287              		.thumb
 3288              		.thumb_func
 3289              		.fpu softvfp
 3291              	HAL_NAND_GetState:
 3292              	.LFB87:
1753:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1754:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
1755:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @}
1756:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
1757:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1758:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     
1759:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /** @defgroup NAND_Exported_Functions_Group4 Peripheral State functions 
1760:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****  *  @brief   Peripheral State functions 
1761:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****  *
1762:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** @verbatim   
1763:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   ==============================================================================
1764:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****                          ##### NAND State functions #####
1765:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   ==============================================================================  
1766:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   [..]
1767:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     This subsection permits to get in run-time the status of the NAND controller 
1768:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****     and the data flow.
1769:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** 
1770:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** @endverbatim
1771:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @{
1772:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
1773:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   
1774:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** /**
1775:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @brief  return the NAND state
1776:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @param  hnand: pointer to a NAND_HandleTypeDef structure that contains
1777:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   *                the configuration information for NAND module.
1778:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   * @retval HAL state
1779:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   */
1780:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** HAL_NAND_StateTypeDef HAL_NAND_GetState(NAND_HandleTypeDef *hnand)
1781:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** {
 3293              		.loc 1 1781 0
 3294              		.cfi_startproc
 3295              		@ args = 0, pretend = 0, frame = 0
 3296              		@ frame_needed = 0, uses_anonymous_args = 0
 3297              		@ link register save eliminated.
 3298              	.LVL309:
1782:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c ****   return hnand->State;
 3299              		.loc 1 1782 0
 3300 0000 90F82100 		ldrb	r0, [r0, #33]	@ zero_extendqisi2
 3301              	.LVL310:
1783:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_nand.c **** }
 3302              		.loc 1 1783 0
 3303 0004 7047     		bx	lr
 3304              		.cfi_endproc
 3305              	.LFE87:
 3307              		.text
 3308              	.Letext0:
 3309              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 3310              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 3311              		.file 4 "Libraries/CMSIS/Include/core_cm3.h"
 3312              		.file 5 "Libraries/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 3313              		.file 6 "Libraries/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
ARM GAS  /tmp/ccwUBerI.s 			page 99


 3314              		.file 7 "Libraries/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 3315              		.file 8 "/usr/include/newlib/sys/lock.h"
 3316              		.file 9 "/usr/include/newlib/sys/_types.h"
 3317              		.file 10 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 3318              		.file 11 "/usr/include/newlib/sys/reent.h"
 3319              		.file 12 "Libraries/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 3320              		.file 13 "Libraries/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_fsmc.h"
 3321              		.file 14 "Libraries/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_nand.h"
 3322              		.file 15 "Libraries/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/ccwUBerI.s 			page 100


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_nand.c
     /tmp/ccwUBerI.s:16     .text.HAL_NAND_MspInit:0000000000000000 $t
     /tmp/ccwUBerI.s:23     .text.HAL_NAND_MspInit:0000000000000000 HAL_NAND_MspInit
     /tmp/ccwUBerI.s:37     .text.HAL_NAND_Init:0000000000000000 $t
     /tmp/ccwUBerI.s:44     .text.HAL_NAND_Init:0000000000000000 HAL_NAND_Init
     /tmp/ccwUBerI.s:133    .text.HAL_NAND_MspDeInit:0000000000000000 $t
     /tmp/ccwUBerI.s:140    .text.HAL_NAND_MspDeInit:0000000000000000 HAL_NAND_MspDeInit
     /tmp/ccwUBerI.s:153    .text.HAL_NAND_DeInit:0000000000000000 $t
     /tmp/ccwUBerI.s:160    .text.HAL_NAND_DeInit:0000000000000000 HAL_NAND_DeInit
     /tmp/ccwUBerI.s:193    .text.HAL_NAND_ITCallback:0000000000000000 $t
     /tmp/ccwUBerI.s:200    .text.HAL_NAND_ITCallback:0000000000000000 HAL_NAND_ITCallback
     /tmp/ccwUBerI.s:213    .text.HAL_NAND_IRQHandler:0000000000000000 $t
     /tmp/ccwUBerI.s:220    .text.HAL_NAND_IRQHandler:0000000000000000 HAL_NAND_IRQHandler
     /tmp/ccwUBerI.s:408    .text.HAL_NAND_Read_ID:0000000000000000 $t
     /tmp/ccwUBerI.s:415    .text.HAL_NAND_Read_ID:0000000000000000 HAL_NAND_Read_ID
     /tmp/ccwUBerI.s:558    .text.HAL_NAND_Reset:0000000000000000 $t
     /tmp/ccwUBerI.s:565    .text.HAL_NAND_Reset:0000000000000000 HAL_NAND_Reset
     /tmp/ccwUBerI.s:632    .text.HAL_NAND_ConfigDevice:0000000000000000 $t
     /tmp/ccwUBerI.s:639    .text.HAL_NAND_ConfigDevice:0000000000000000 HAL_NAND_ConfigDevice
     /tmp/ccwUBerI.s:676    .text.HAL_NAND_Read_Status:0000000000000000 $t
     /tmp/ccwUBerI.s:683    .text.HAL_NAND_Read_Status:0000000000000000 HAL_NAND_Read_Status
     /tmp/ccwUBerI.s:740    .text.HAL_NAND_Read_Page_8b:0000000000000000 $t
     /tmp/ccwUBerI.s:747    .text.HAL_NAND_Read_Page_8b:0000000000000000 HAL_NAND_Read_Page_8b
     /tmp/ccwUBerI.s:1008   .text.HAL_NAND_Read_Page_16b:0000000000000000 $t
     /tmp/ccwUBerI.s:1015   .text.HAL_NAND_Read_Page_16b:0000000000000000 HAL_NAND_Read_Page_16b
     /tmp/ccwUBerI.s:1276   .text.HAL_NAND_Write_Page_8b:0000000000000000 $t
     /tmp/ccwUBerI.s:1283   .text.HAL_NAND_Write_Page_8b:0000000000000000 HAL_NAND_Write_Page_8b
     /tmp/ccwUBerI.s:1536   .text.HAL_NAND_Write_Page_16b:0000000000000000 $t
     /tmp/ccwUBerI.s:1543   .text.HAL_NAND_Write_Page_16b:0000000000000000 HAL_NAND_Write_Page_16b
     /tmp/ccwUBerI.s:1796   .text.HAL_NAND_Read_SpareArea_8b:0000000000000000 $t
     /tmp/ccwUBerI.s:1803   .text.HAL_NAND_Read_SpareArea_8b:0000000000000000 HAL_NAND_Read_SpareArea_8b
     /tmp/ccwUBerI.s:2077   .text.HAL_NAND_Read_SpareArea_16b:0000000000000000 $t
     /tmp/ccwUBerI.s:2084   .text.HAL_NAND_Read_SpareArea_16b:0000000000000000 HAL_NAND_Read_SpareArea_16b
     /tmp/ccwUBerI.s:2359   .text.HAL_NAND_Write_SpareArea_8b:0000000000000000 $t
     /tmp/ccwUBerI.s:2366   .text.HAL_NAND_Write_SpareArea_8b:0000000000000000 HAL_NAND_Write_SpareArea_8b
     /tmp/ccwUBerI.s:2634   .text.HAL_NAND_Write_SpareArea_16b:0000000000000000 $t
     /tmp/ccwUBerI.s:2641   .text.HAL_NAND_Write_SpareArea_16b:0000000000000000 HAL_NAND_Write_SpareArea_16b
     /tmp/ccwUBerI.s:2909   .text.HAL_NAND_Erase_Block:0000000000000000 $t
     /tmp/ccwUBerI.s:2916   .text.HAL_NAND_Erase_Block:0000000000000000 HAL_NAND_Erase_Block
     /tmp/ccwUBerI.s:3054   .text.HAL_NAND_Address_Inc:0000000000000000 $t
     /tmp/ccwUBerI.s:3061   .text.HAL_NAND_Address_Inc:0000000000000000 HAL_NAND_Address_Inc
     /tmp/ccwUBerI.s:3129   .text.HAL_NAND_ECC_Enable:0000000000000000 $t
     /tmp/ccwUBerI.s:3136   .text.HAL_NAND_ECC_Enable:0000000000000000 HAL_NAND_ECC_Enable
     /tmp/ccwUBerI.s:3180   .text.HAL_NAND_ECC_Disable:0000000000000000 $t
     /tmp/ccwUBerI.s:3187   .text.HAL_NAND_ECC_Disable:0000000000000000 HAL_NAND_ECC_Disable
     /tmp/ccwUBerI.s:3231   .text.HAL_NAND_GetECC:0000000000000000 $t
     /tmp/ccwUBerI.s:3238   .text.HAL_NAND_GetECC:0000000000000000 HAL_NAND_GetECC
     /tmp/ccwUBerI.s:3284   .text.HAL_NAND_GetState:0000000000000000 $t
     /tmp/ccwUBerI.s:3291   .text.HAL_NAND_GetState:0000000000000000 HAL_NAND_GetState
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
FSMC_NAND_Init
FSMC_NAND_CommonSpace_Timing_Init
FSMC_NAND_AttributeSpace_Timing_Init
FSMC_NAND_DeInit
ARM GAS  /tmp/ccwUBerI.s 			page 101


HAL_GetTick
FSMC_NAND_ECC_Enable
FSMC_NAND_ECC_Disable
FSMC_NAND_GetECC
