ARM GAS  /tmp/ccubOfsv.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_hal_can.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_CAN_ConfigFilter,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_CAN_ConfigFilter
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_CAN_ConfigFilter:
  24              	.LFB65:
  25              		.file 1 "Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c"
   1:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
   2:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ******************************************************************************
   3:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @file    stm32f1xx_hal_can.c
   4:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @author  MCD Application Team
   5:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @version V1.1.1
   6:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @date    12-May-2017
   7:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief   CAN HAL module driver.
   8:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *          This file provides firmware functions to manage the following 
   9:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *          functionalities of the Controller Area Network (CAN) peripheral:           
  10:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           + Initialization and de-initialization functions 
  11:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           + IO operation functions
  12:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           + Peripheral Control functions
  13:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           + Peripheral State and Error functions
  14:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
  15:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   @verbatim
  16:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
  17:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                         ##### How to use this driver #####
  18:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
  19:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]            
  20:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Enable the CAN controller interface clock using 
  21:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           __HAL_RCC_CAN1_CLK_ENABLE() for CAN1 and __HAL_RCC_CAN2_CLK_ENABLE() for CAN2
  22:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       -@- In case you are using CAN2 only, you have to enable the CAN1 clock.
  23:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        
  24:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) CAN pins configuration
  25:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (++) Enable the clock for the CAN GPIOs using the following function:
  26:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              __HAL_RCC_GPIOx_CLK_ENABLE();   
  27:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (++) Connect and configure the involved CAN pins using the 
  28:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****               following function HAL_GPIO_Init(); 
  29:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****               
  30:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Initialize and configure the CAN using HAL_CAN_Init() function.   
  31:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  
  32:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Transmit the desired CAN frame using HAL_CAN_Transmit() function.
  33:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /tmp/ccubOfsv.s 			page 2


  34:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Or transmit the desired CAN frame using HAL_CAN_Transmit_IT() function.
  35:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****            
  36:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Receive a CAN frame using HAL_CAN_Receive() function.
  37:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  38:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Or receive a CAN frame using HAL_CAN_Receive_IT() function.
  39:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  40:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      *** Polling mode IO operation ***
  41:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      =================================
  42:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      [..]    
  43:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        (+) Start the CAN peripheral transmission and wait the end of this operation 
  44:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****            using HAL_CAN_Transmit(), at this stage user can specify the value of timeout
  45:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****            according to his end application
  46:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        (+) Start the CAN peripheral reception and wait the end of this operation 
  47:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****            using HAL_CAN_Receive(), at this stage user can specify the value of timeout
  48:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****            according to his end application 
  49:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        
  50:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      *** Interrupt mode IO operation ***    
  51:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ===================================
  52:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      [..]    
  53:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        (+) Start the CAN peripheral transmission using HAL_CAN_Transmit_IT()
  54:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        (+) Start the CAN peripheral reception using HAL_CAN_Receive_IT()         
  55:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        (+) Use HAL_CAN_IRQHandler() called under the used CAN Interrupt subroutine
  56:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        (+) At CAN end of transmission HAL_CAN_TxCpltCallback() function is executed and user can 
  57:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             add his own code by customization of function pointer HAL_CAN_TxCpltCallback 
  58:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        (+) In case of CAN Error, HAL_CAN_ErrorCallback() function is executed and user can 
  59:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             add his own code by customization of function pointer HAL_CAN_ErrorCallback
  60:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  
  61:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      *** CAN HAL driver macros list ***
  62:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ============================================= 
  63:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      [..]
  64:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        Below the list of most used macros in CAN HAL driver.
  65:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        
  66:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) __HAL_CAN_ENABLE_IT: Enable the specified CAN interrupts
  67:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) __HAL_CAN_DISABLE_IT: Disable the specified CAN interrupts
  68:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) __HAL_CAN_GET_IT_SOURCE: Check if the specified CAN interrupt source is enabled or disabl
  69:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) __HAL_CAN_CLEAR_FLAG: Clear the CAN's pending flags
  70:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) __HAL_CAN_GET_FLAG: Get the selected CAN's flag status
  71:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       
  72:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      [..] 
  73:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (@) You can refer to the CAN HAL driver header file for more useful macros 
  74:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                 
  75:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   @endverbatim
  76:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****            
  77:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ******************************************************************************
  78:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @attention
  79:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
  80:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  81:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
  82:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * Redistribution and use in source and binary forms, with or without modification,
  83:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * are permitted provided that the following conditions are met:
  84:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  85:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *      this list of conditions and the following disclaimer.
  86:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  87:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *      this list of conditions and the following disclaimer in the documentation
  88:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *      and/or other materials provided with the distribution.
  89:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  90:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *      may be used to endorse or promote products derived from this software
ARM GAS  /tmp/ccubOfsv.s 			page 3


  91:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *      without specific prior written permission.
  92:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
  93:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  94:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  95:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  96:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  97:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  98:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  99:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 100:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 101:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 102:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 103:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
 104:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ******************************************************************************
 105:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 106:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 107:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Includes ------------------------------------------------------------------*/
 108:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #include "stm32f1xx_hal.h"
 109:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 110:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @addtogroup STM32F1xx_HAL_Driver
 111:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 112:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 113:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 114:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN CAN
 115:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief CAN driver modules
 116:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 117:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 118:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 119:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #ifdef HAL_CAN_MODULE_ENABLED  
 120:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 121:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if defined(STM32F103x6) || defined(STM32F103xB) || defined(STM32F103xE) || \
 122:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     defined(STM32F103xG) || defined(STM32F105xC) || defined(STM32F107xC)
 123:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 124:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 125:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Private typedef -----------------------------------------------------------*/
 126:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Private define ------------------------------------------------------------*/
 127:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Private_Constants CAN Private Constants
 128:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 129:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 130:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #define CAN_TIMEOUT_VALUE  10U
 131:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 132:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
 133:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 134:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Private macro -------------------------------------------------------------*/
 135:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Private variables ---------------------------------------------------------*/
 136:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Private function prototypes -----------------------------------------------*/
 137:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Private_Functions CAN Private Functions
 138:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 139:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 140:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** static HAL_StatusTypeDef CAN_Receive_IT(CAN_HandleTypeDef* hcan, uint8_t FIFONumber);
 141:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** static HAL_StatusTypeDef CAN_Transmit_IT(CAN_HandleTypeDef* hcan);
 142:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 143:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
 144:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 145:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 146:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Exported functions --------------------------------------------------------*/
 147:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Exported_Functions CAN Exported Functions
ARM GAS  /tmp/ccubOfsv.s 			page 4


 148:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 149:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 150:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 151:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group1 Initialization and de-initialization functions 
 152:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *  @brief    Initialization and Configuration functions 
 153:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *
 154:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @verbatim    
 155:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
 156:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****               ##### Initialization and de-initialization functions #####
 157:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
 158:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]  This section provides functions allowing to:
 159:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) Initialize and configure the CAN. 
 160:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) De-initialize the CAN. 
 161:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****          
 162:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @endverbatim
 163:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 164:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 165:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 166:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 167:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 168:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         parameters in the CAN_InitStruct.
 169:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 170:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 171:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
 172:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 173:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Init(CAN_HandleTypeDef* hcan)
 174:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 175:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t status = CAN_INITSTATUS_FAILED;  /* Default init status */
 176:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart = 0U;
 177:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tmp_mcr = 0U;
 178:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 179:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check CAN handle */
 180:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(hcan == NULL)
 181:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 182:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      return HAL_ERROR;
 183:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 184:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 185:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
 186:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 187:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TTCM));
 188:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ABOM));
 189:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AWUM));
 190:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.NART));
 191:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.RFLM));
 192:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TXFP));
 193:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
 194:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SJW));
 195:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.BS1));
 196:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.BS2));
 197:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
 198:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 199:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(hcan->State == HAL_CAN_STATE_RESET)
 200:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 201:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Allocate lock resource and initialize it */
 202:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Lock = HAL_UNLOCKED;
 203:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Init the low level hardware */
 204:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     HAL_CAN_MspInit(hcan);
ARM GAS  /tmp/ccubOfsv.s 			page 5


 205:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 206:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 207:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Initialize the CAN state*/
 208:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_BUSY;
 209:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 210:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Exit from sleep mode */
 211:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 212:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 213:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Request initialisation */
 214:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 215:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 216:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get timeout */
 217:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tickstart = HAL_GetTick();   
 218:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 219:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Wait the acknowledge */
 220:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   while(HAL_IS_BIT_CLR(hcan->Instance->MSR, CAN_MSR_INAK))
 221:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 222:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if((HAL_GetTick()-tickstart) > CAN_TIMEOUT_VALUE)
 223:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 224:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->State= HAL_CAN_STATE_TIMEOUT;
 225:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Process unlocked */
 226:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       __HAL_UNLOCK(hcan);
 227:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       return HAL_TIMEOUT;
 228:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 229:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 230:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 231:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check acknowledge */
 232:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((hcan->Instance->MSR & CAN_MSR_INAK) == CAN_MSR_INAK)
 233:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 234:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set the time triggered communication mode */
 235:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (hcan->Init.TTCM == ENABLE)
 236:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 237:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(tmp_mcr, CAN_MCR_TTCM);
 238:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 239:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 240:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 241:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       CLEAR_BIT(tmp_mcr, CAN_MCR_TTCM);
 242:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 243:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 244:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set the automatic bus-off management */
 245:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (hcan->Init.ABOM == ENABLE)
 246:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 247:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(tmp_mcr, CAN_MCR_ABOM);
 248:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 249:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 250:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 251:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       CLEAR_BIT(tmp_mcr, CAN_MCR_ABOM);
 252:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 253:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 254:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set the automatic wake-up mode */
 255:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (hcan->Init.AWUM == ENABLE)
 256:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 257:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(tmp_mcr, CAN_MCR_AWUM);
 258:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 259:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 260:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 261:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       CLEAR_BIT(tmp_mcr, CAN_MCR_AWUM);
ARM GAS  /tmp/ccubOfsv.s 			page 6


 262:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 263:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set the no automatic retransmission */
 264:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (hcan->Init.NART == ENABLE)
 265:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 266:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(tmp_mcr, CAN_MCR_NART);
 267:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 268:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 269:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 270:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       CLEAR_BIT(tmp_mcr, CAN_MCR_NART);
 271:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 272:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 273:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set the receive FIFO locked mode */
 274:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (hcan->Init.RFLM == ENABLE)
 275:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 276:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(tmp_mcr, CAN_MCR_RFLM);
 277:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 278:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 279:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 280:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       CLEAR_BIT(tmp_mcr, CAN_MCR_RFLM);
 281:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 282:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set the transmit FIFO priority */
 283:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (hcan->Init.TXFP == ENABLE)
 284:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 285:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(tmp_mcr, CAN_MCR_TXFP);
 286:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 287:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 288:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 289:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       CLEAR_BIT(tmp_mcr, CAN_MCR_TXFP);
 290:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 291:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 292:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update register MCR */
 293:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     MODIFY_REG(hcan->Instance->MCR,
 294:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                CAN_MCR_TTCM |
 295:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                CAN_MCR_ABOM |
 296:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                CAN_MCR_AWUM |
 297:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                CAN_MCR_NART |
 298:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                CAN_MCR_RFLM |
 299:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                CAN_MCR_TXFP,
 300:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                tmp_mcr);
 301:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 302:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set the bit timing register */
 303:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     WRITE_REG(hcan->Instance->BTR, (uint32_t)(hcan->Init.Mode           |
 304:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                               hcan->Init.SJW            |
 305:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                               hcan->Init.BS1            |
 306:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                               hcan->Init.BS2            |
 307:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                               (hcan->Init.Prescaler - 1U)));
 308:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 309:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Request leave initialisation */
 310:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 311:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 312:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Get timeout */
 313:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tickstart = HAL_GetTick();   
 314:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    
 315:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Wait the acknowledge */
 316:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     while(HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK))
 317:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 318:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if((HAL_GetTick()-tickstart) > CAN_TIMEOUT_VALUE)
ARM GAS  /tmp/ccubOfsv.s 			page 7


 319:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 320:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State= HAL_CAN_STATE_TIMEOUT;
 321:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 322:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Process unlocked */
 323:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         __HAL_UNLOCK(hcan);
 324:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 325:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         return HAL_TIMEOUT;
 326:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 327:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 328:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 329:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check acknowledged */
 330:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if(HAL_IS_BIT_CLR(hcan->Instance->MSR, CAN_MSR_INAK))
 331:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 332:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       status = CAN_INITSTATUS_SUCCESS;
 333:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 334:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 335:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  
 336:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(status == CAN_INITSTATUS_SUCCESS)
 337:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 338:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set CAN error code to none */
 339:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 340:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 341:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Initialize the CAN state */
 342:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_READY;
 343:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 344:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
 345:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_OK;
 346:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 347:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 348:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 349:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Initialize the CAN state */
 350:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_ERROR;
 351:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 352:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
 353:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
 354:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 355:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 356:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 357:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 358:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 359:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         parameters in the CAN_FilterInitStruct.
 360:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 361:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
 362:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  sFilterConfig: pointer to a CAN_FilterConfTypeDef structure that
 363:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         contains the filter configuration information.
 364:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
 365:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 366:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ConfigFilter(CAN_HandleTypeDef* hcan, CAN_FilterConfTypeDef* sFilterConfi
 367:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
  26              		.loc 1 367 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  32 0000 F0B4     		push	{r4, r5, r6, r7}
  33              	.LCFI0:
ARM GAS  /tmp/ccubOfsv.s 			page 8


  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 7, -4
  39              	.LVL1:
 368:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t filternbrbitpos = 0U;
 369:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 370:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 371:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 372:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 373:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
 374:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_FILTER_NUMBER(sFilterConfig->FilterNumber));
 375:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 376:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 377:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
 378:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(sFilterConfig->FilterActivation));
 379:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_BANKNUMBER(sFilterConfig->BankNumber));
 380:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 381:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   filternbrbitpos = (1U) << sFilterConfig->FilterNumber;
  40              		.loc 1 381 0
  41 0002 4B69     		ldr	r3, [r1, #20]
  42 0004 0122     		movs	r2, #1
  43 0006 9A40     		lsls	r2, r2, r3
  44              	.LVL2:
 382:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 383:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Initialisation mode for the filter */
 384:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Select the start slave bank */
 385:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   MODIFY_REG(hcan->Instance->FMR                         ,
  45              		.loc 1 385 0
  46 0008 0468     		ldr	r4, [r0]
  47 000a D4F80032 		ldr	r3, [r4, #512]
  48 000e 23F47C53 		bic	r3, r3, #16128
  49 0012 4D6A     		ldr	r5, [r1, #36]
  50 0014 43EA0523 		orr	r3, r3, r5, lsl #8
  51 0018 43F00103 		orr	r3, r3, #1
  52 001c C4F80032 		str	r3, [r4, #512]
 386:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              CAN_FMR_CAN2SB                              ,
 387:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              CAN_FMR_FINIT                              |
 388:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              (uint32_t)(sFilterConfig->BankNumber << 8U)   );
 389:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 390:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Filter Deactivation */
 391:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->FA1R, filternbrbitpos);
  53              		.loc 1 391 0
  54 0020 0568     		ldr	r5, [r0]
  55 0022 D5F81C42 		ldr	r4, [r5, #540]
  56 0026 D343     		mvns	r3, r2
  57 0028 1C40     		ands	r4, r4, r3
  58 002a C5F81C42 		str	r4, [r5, #540]
 392:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 393:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Filter Scale */
 394:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (sFilterConfig->FilterScale == CAN_FILTERSCALE_16BIT)
  59              		.loc 1 394 0
  60 002e CC69     		ldr	r4, [r1, #28]
  61 0030 C4B9     		cbnz	r4, .L2
 395:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 396:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* 16-bit scale for the filter */
ARM GAS  /tmp/ccubOfsv.s 			page 9


 397:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->FS1R, filternbrbitpos);
  62              		.loc 1 397 0
  63 0032 0568     		ldr	r5, [r0]
  64 0034 D5F80C42 		ldr	r4, [r5, #524]
  65 0038 1C40     		ands	r4, r4, r3
  66 003a C5F80C42 		str	r4, [r5, #524]
 398:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 399:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* First 16-bit identifier and First 16-bit mask */
 400:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Or First 16-bit identifier and Second 16-bit identifier */
 401:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sFilterRegister[sFilterConfig->FilterNumber].FR1 = 
  67              		.loc 1 401 0
  68 003e 0668     		ldr	r6, [r0]
  69 0040 4C69     		ldr	r4, [r1, #20]
 402:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
  70              		.loc 1 402 0
  71 0042 CF68     		ldr	r7, [r1, #12]
 403:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
  72              		.loc 1 403 0
  73 0044 8D88     		ldrh	r5, [r1, #4]
 402:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
  74              		.loc 1 402 0
  75 0046 45EA0745 		orr	r5, r5, r7, lsl #16
 401:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
  76              		.loc 1 401 0
  77 004a 4834     		adds	r4, r4, #72
  78 004c 46F83450 		str	r5, [r6, r4, lsl #3]
 404:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 405:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Second 16-bit identifier and Second 16-bit mask */
 406:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 407:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sFilterRegister[sFilterConfig->FilterNumber].FR2 = 
  79              		.loc 1 407 0
  80 0050 0468     		ldr	r4, [r0]
  81 0052 4E69     		ldr	r6, [r1, #20]
 408:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
  82              		.loc 1 408 0
  83 0054 8F68     		ldr	r7, [r1, #8]
 409:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
  84              		.loc 1 409 0
  85 0056 0D88     		ldrh	r5, [r1]
 408:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
  86              		.loc 1 408 0
  87 0058 45EA0745 		orr	r5, r5, r7, lsl #16
 407:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
  88              		.loc 1 407 0
  89 005c 4836     		adds	r6, r6, #72
  90 005e 04EBC604 		add	r4, r4, r6, lsl #3
  91 0062 6560     		str	r5, [r4, #4]
  92              	.L2:
 410:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 411:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 412:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (sFilterConfig->FilterScale == CAN_FILTERSCALE_32BIT)
  93              		.loc 1 412 0
  94 0064 CC69     		ldr	r4, [r1, #28]
  95 0066 012C     		cmp	r4, #1
  96 0068 1ED0     		beq	.L10
  97              	.L3:
 413:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
ARM GAS  /tmp/ccubOfsv.s 			page 10


 414:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* 32-bit scale for the filter */
 415:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->FS1R, filternbrbitpos);
 416:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 417:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sFilterRegister[sFilterConfig->FilterNumber].FR1 = 
 418:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 419:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 420:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* 32-bit mask or Second 32-bit identifier */
 421:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sFilterRegister[sFilterConfig->FilterNumber].FR2 = 
 422:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 423:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 424:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 425:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 426:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Filter Mode */
 427:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (sFilterConfig->FilterMode == CAN_FILTERMODE_IDMASK)
  98              		.loc 1 427 0
  99 006a 8C69     		ldr	r4, [r1, #24]
 100 006c 002C     		cmp	r4, #0
 101 006e 35D1     		bne	.L4
 428:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 429:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*Id/Mask mode for the filter*/
 430:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->FM1R, filternbrbitpos);
 102              		.loc 1 430 0
 103 0070 0568     		ldr	r5, [r0]
 104 0072 D5F80442 		ldr	r4, [r5, #516]
 105 0076 1C40     		ands	r4, r4, r3
 106 0078 C5F80442 		str	r4, [r5, #516]
 107              	.L5:
 431:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 432:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 433:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 434:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*Identifier list mode for the filter*/
 435:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->FM1R, filternbrbitpos);
 436:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 437:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 438:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Filter FIFO assignment */
 439:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (sFilterConfig->FilterFIFOAssignment == CAN_FILTER_FIFO0)
 108              		.loc 1 439 0
 109 007c 0C69     		ldr	r4, [r1, #16]
 110 007e 002C     		cmp	r4, #0
 111 0080 33D1     		bne	.L6
 440:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 441:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* FIFO 0 assignation for the filter */
 442:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->FFA1R, filternbrbitpos);
 112              		.loc 1 442 0
 113 0082 0468     		ldr	r4, [r0]
 114 0084 D4F81452 		ldr	r5, [r4, #532]
 115 0088 2B40     		ands	r3, r3, r5
 116 008a C4F81432 		str	r3, [r4, #532]
 117              	.L7:
 443:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 444:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 445:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 446:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* FIFO 1 assignation for the filter */
 447:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->FFA1R, filternbrbitpos);
 448:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 449:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 450:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Filter activation */
ARM GAS  /tmp/ccubOfsv.s 			page 11


 451:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (sFilterConfig->FilterActivation == ENABLE)
 118              		.loc 1 451 0
 119 008e 0B6A     		ldr	r3, [r1, #32]
 120 0090 012B     		cmp	r3, #1
 121 0092 31D0     		beq	.L11
 122              	.LVL3:
 123              	.L8:
 452:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 453:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->FA1R, filternbrbitpos);
 454:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 455:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 456:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Leave the initialisation mode for the filter */
 457:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->FMR, ((uint32_t)CAN_FMR_FINIT));
 124              		.loc 1 457 0
 125 0094 0268     		ldr	r2, [r0]
 126 0096 D2F80032 		ldr	r3, [r2, #512]
 127 009a 23F00103 		bic	r3, r3, #1
 128 009e C2F80032 		str	r3, [r2, #512]
 458:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 459:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return function status */
 460:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
 461:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 129              		.loc 1 461 0
 130 00a2 0020     		movs	r0, #0
 131              	.LVL4:
 132 00a4 F0BC     		pop	{r4, r5, r6, r7}
 133              	.LCFI1:
 134              		.cfi_remember_state
 135              		.cfi_restore 7
 136              		.cfi_restore 6
 137              		.cfi_restore 5
 138              		.cfi_restore 4
 139              		.cfi_def_cfa_offset 0
 140 00a6 7047     		bx	lr
 141              	.LVL5:
 142              	.L10:
 143              	.LCFI2:
 144              		.cfi_restore_state
 415:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 145              		.loc 1 415 0
 146 00a8 0568     		ldr	r5, [r0]
 147 00aa D5F80C42 		ldr	r4, [r5, #524]
 148 00ae 1443     		orrs	r4, r4, r2
 149 00b0 C5F80C42 		str	r4, [r5, #524]
 417:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 150              		.loc 1 417 0
 151 00b4 0668     		ldr	r6, [r0]
 152 00b6 4C69     		ldr	r4, [r1, #20]
 418:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 153              		.loc 1 418 0
 154 00b8 0F68     		ldr	r7, [r1]
 419:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* 32-bit mask or Second 32-bit identifier */
 155              		.loc 1 419 0
 156 00ba 8D88     		ldrh	r5, [r1, #4]
 418:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 157              		.loc 1 418 0
 158 00bc 45EA0745 		orr	r5, r5, r7, lsl #16
ARM GAS  /tmp/ccubOfsv.s 			page 12


 417:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 159              		.loc 1 417 0
 160 00c0 4834     		adds	r4, r4, #72
 161 00c2 46F83450 		str	r5, [r6, r4, lsl #3]
 421:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 162              		.loc 1 421 0
 163 00c6 0468     		ldr	r4, [r0]
 164 00c8 4E69     		ldr	r6, [r1, #20]
 422:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 165              		.loc 1 422 0
 166 00ca 8F68     		ldr	r7, [r1, #8]
 423:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 167              		.loc 1 423 0
 168 00cc 8D89     		ldrh	r5, [r1, #12]
 422:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 169              		.loc 1 422 0
 170 00ce 45EA0745 		orr	r5, r5, r7, lsl #16
 421:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 171              		.loc 1 421 0
 172 00d2 4836     		adds	r6, r6, #72
 173 00d4 04EBC604 		add	r4, r4, r6, lsl #3
 174 00d8 6560     		str	r5, [r4, #4]
 175 00da C6E7     		b	.L3
 176              	.L4:
 435:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 177              		.loc 1 435 0
 178 00dc 0568     		ldr	r5, [r0]
 179 00de D5F80442 		ldr	r4, [r5, #516]
 180 00e2 1443     		orrs	r4, r4, r2
 181 00e4 C5F80442 		str	r4, [r5, #516]
 182 00e8 C8E7     		b	.L5
 183              	.L6:
 447:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 184              		.loc 1 447 0
 185 00ea 0468     		ldr	r4, [r0]
 186 00ec D4F81432 		ldr	r3, [r4, #532]
 187 00f0 1343     		orrs	r3, r3, r2
 188 00f2 C4F81432 		str	r3, [r4, #532]
 189 00f6 CAE7     		b	.L7
 190              	.L11:
 453:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 191              		.loc 1 453 0
 192 00f8 0368     		ldr	r3, [r0]
 193 00fa D3F81C12 		ldr	r1, [r3, #540]
 194              	.LVL6:
 195 00fe 0A43     		orrs	r2, r2, r1
 196              	.LVL7:
 197 0100 C3F81C22 		str	r2, [r3, #540]
 198 0104 C6E7     		b	.L8
 199              		.cfi_endproc
 200              	.LFE65:
 202              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
 203              		.align	1
 204              		.weak	HAL_CAN_MspInit
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
ARM GAS  /tmp/ccubOfsv.s 			page 13


 208              		.fpu softvfp
 210              	HAL_CAN_MspInit:
 211              	.LFB67:
 462:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 463:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 464:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Deinitializes the CANx peripheral registers to their default reset values. 
 465:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 466:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 467:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
 468:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 469:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeInit(CAN_HandleTypeDef* hcan)
 470:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 471:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check CAN handle */
 472:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(hcan == NULL)
 473:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 474:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      return HAL_ERROR;
 475:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 476:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 477:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
 478:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 479:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 480:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
 481:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_BUSY;
 482:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 483:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* DeInit the low level hardware */
 484:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_MspDeInit(hcan);
 485:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 486:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
 487:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_RESET;
 488:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 489:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Release Lock */
 490:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_UNLOCK(hcan);
 491:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 492:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return function status */
 493:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
 494:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 495:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 496:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 497:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Initializes the CAN MSP.
 498:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 499:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 500:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
 501:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 502:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_MspInit(CAN_HandleTypeDef* hcan)
 503:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 212              		.loc 1 503 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              		@ link register save eliminated.
 217              	.LVL8:
 218 0000 7047     		bx	lr
 219              		.cfi_endproc
 220              	.LFE67:
 222              		.section	.text.HAL_CAN_Init,"ax",%progbits
 223              		.align	1
 224              		.global	HAL_CAN_Init
ARM GAS  /tmp/ccubOfsv.s 			page 14


 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu softvfp
 230              	HAL_CAN_Init:
 231              	.LFB64:
 174:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t status = CAN_INITSTATUS_FAILED;  /* Default init status */
 232              		.loc 1 174 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              	.LVL9:
 180:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 237              		.loc 1 180 0
 238 0000 0028     		cmp	r0, #0
 239 0002 00F09C80 		beq	.L33
 174:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t status = CAN_INITSTATUS_FAILED;  /* Default init status */
 240              		.loc 1 174 0
 241 0006 38B5     		push	{r3, r4, r5, lr}
 242              	.LCFI3:
 243              		.cfi_def_cfa_offset 16
 244              		.cfi_offset 3, -16
 245              		.cfi_offset 4, -12
 246              		.cfi_offset 5, -8
 247              		.cfi_offset 14, -4
 248 0008 0446     		mov	r4, r0
 199:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 249              		.loc 1 199 0
 250 000a 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 251 000e 03B3     		cbz	r3, .L41
 252              	.LVL10:
 253              	.L15:
 208:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 254              		.loc 1 208 0
 255 0010 0223     		movs	r3, #2
 256 0012 84F83C30 		strb	r3, [r4, #60]
 211:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 257              		.loc 1 211 0
 258 0016 2268     		ldr	r2, [r4]
 259 0018 1368     		ldr	r3, [r2]
 260 001a 23F00203 		bic	r3, r3, #2
 261 001e 1360     		str	r3, [r2]
 214:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 262              		.loc 1 214 0
 263 0020 2268     		ldr	r2, [r4]
 264 0022 1368     		ldr	r3, [r2]
 265 0024 43F00103 		orr	r3, r3, #1
 266 0028 1360     		str	r3, [r2]
 217:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 267              		.loc 1 217 0
 268 002a FFF7FEFF 		bl	HAL_GetTick
 269              	.LVL11:
 270 002e 0546     		mov	r5, r0
 271              	.LVL12:
 272              	.L16:
 220:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 273              		.loc 1 220 0
ARM GAS  /tmp/ccubOfsv.s 			page 15


 274 0030 2368     		ldr	r3, [r4]
 275 0032 5A68     		ldr	r2, [r3, #4]
 276 0034 12F0010F 		tst	r2, #1
 277 0038 10D1     		bne	.L42
 222:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 278              		.loc 1 222 0
 279 003a FFF7FEFF 		bl	HAL_GetTick
 280              	.LVL13:
 281 003e 401B     		subs	r0, r0, r5
 282 0040 0A28     		cmp	r0, #10
 283 0042 F5D9     		bls	.L16
 224:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Process unlocked */
 284              		.loc 1 224 0
 285 0044 0320     		movs	r0, #3
 286 0046 84F83C00 		strb	r0, [r4, #60]
 226:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       return HAL_TIMEOUT;
 287              		.loc 1 226 0
 288 004a 0023     		movs	r3, #0
 289 004c 84F83D30 		strb	r3, [r4, #61]
 227:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 290              		.loc 1 227 0
 291 0050 38BD     		pop	{r3, r4, r5, pc}
 292              	.LVL14:
 293              	.L41:
 202:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Init the low level hardware */
 294              		.loc 1 202 0
 295 0052 80F83D30 		strb	r3, [r0, #61]
 204:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 296              		.loc 1 204 0
 297 0056 FFF7FEFF 		bl	HAL_CAN_MspInit
 298              	.LVL15:
 299 005a D9E7     		b	.L15
 300              	.LVL16:
 301              	.L42:
 232:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 302              		.loc 1 232 0
 303 005c 5A68     		ldr	r2, [r3, #4]
 304 005e 12F0010F 		tst	r2, #1
 305 0062 5DD0     		beq	.L34
 235:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 306              		.loc 1 235 0
 307 0064 A269     		ldr	r2, [r4, #24]
 308 0066 012A     		cmp	r2, #1
 309 0068 43D0     		beq	.L43
 241:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 310              		.loc 1 241 0
 311 006a 0022     		movs	r2, #0
 312              	.L19:
 313              	.LVL17:
 245:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 314              		.loc 1 245 0
 315 006c E169     		ldr	r1, [r4, #28]
 316 006e 0129     		cmp	r1, #1
 317 0070 41D0     		beq	.L44
 251:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 318              		.loc 1 251 0
 319 0072 22F04002 		bic	r2, r2, #64
ARM GAS  /tmp/ccubOfsv.s 			page 16


 320              	.LVL18:
 321              	.L21:
 255:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 322              		.loc 1 255 0
 323 0076 216A     		ldr	r1, [r4, #32]
 324 0078 0129     		cmp	r1, #1
 325 007a 3FD0     		beq	.L45
 261:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 326              		.loc 1 261 0
 327 007c 22F02002 		bic	r2, r2, #32
 328              	.LVL19:
 329              	.L23:
 264:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 330              		.loc 1 264 0
 331 0080 616A     		ldr	r1, [r4, #36]
 332 0082 0129     		cmp	r1, #1
 333 0084 3DD0     		beq	.L46
 270:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 334              		.loc 1 270 0
 335 0086 22F01002 		bic	r2, r2, #16
 336              	.LVL20:
 337              	.L25:
 274:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 338              		.loc 1 274 0
 339 008a A16A     		ldr	r1, [r4, #40]
 340 008c 0129     		cmp	r1, #1
 341 008e 3BD0     		beq	.L47
 280:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 342              		.loc 1 280 0
 343 0090 22F00802 		bic	r2, r2, #8
 344              	.LVL21:
 345              	.L27:
 283:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 346              		.loc 1 283 0
 347 0094 E16A     		ldr	r1, [r4, #44]
 348 0096 0129     		cmp	r1, #1
 349 0098 39D0     		beq	.L48
 289:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 350              		.loc 1 289 0
 351 009a 22F00402 		bic	r2, r2, #4
 352              	.LVL22:
 353              	.L29:
 293:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                CAN_MCR_TTCM |
 354              		.loc 1 293 0
 355 009e 1968     		ldr	r1, [r3]
 356 00a0 21F0FC01 		bic	r1, r1, #252
 357 00a4 0A43     		orrs	r2, r2, r1
 358              	.LVL23:
 359 00a6 1A60     		str	r2, [r3]
 303:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                               hcan->Init.SJW            |
 360              		.loc 1 303 0
 361 00a8 2168     		ldr	r1, [r4]
 362 00aa A368     		ldr	r3, [r4, #8]
 363 00ac E268     		ldr	r2, [r4, #12]
 364 00ae 1343     		orrs	r3, r3, r2
 365 00b0 2269     		ldr	r2, [r4, #16]
 366 00b2 1343     		orrs	r3, r3, r2
ARM GAS  /tmp/ccubOfsv.s 			page 17


 367 00b4 6269     		ldr	r2, [r4, #20]
 368 00b6 1343     		orrs	r3, r3, r2
 369 00b8 6268     		ldr	r2, [r4, #4]
 370 00ba 013A     		subs	r2, r2, #1
 371 00bc 1343     		orrs	r3, r3, r2
 372 00be CB61     		str	r3, [r1, #28]
 310:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 373              		.loc 1 310 0
 374 00c0 2268     		ldr	r2, [r4]
 375 00c2 1368     		ldr	r3, [r2]
 376 00c4 23F00103 		bic	r3, r3, #1
 377 00c8 1360     		str	r3, [r2]
 313:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    
 378              		.loc 1 313 0
 379 00ca FFF7FEFF 		bl	HAL_GetTick
 380              	.LVL24:
 381 00ce 0546     		mov	r5, r0
 382              	.LVL25:
 383              	.L30:
 316:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 384              		.loc 1 316 0
 385 00d0 2368     		ldr	r3, [r4]
 386 00d2 5A68     		ldr	r2, [r3, #4]
 387 00d4 12F0010F 		tst	r2, #1
 388 00d8 1CD0     		beq	.L49
 318:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 389              		.loc 1 318 0
 390 00da FFF7FEFF 		bl	HAL_GetTick
 391              	.LVL26:
 392 00de 401B     		subs	r0, r0, r5
 393 00e0 0A28     		cmp	r0, #10
 394 00e2 F5D9     		bls	.L30
 320:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 395              		.loc 1 320 0
 396 00e4 0320     		movs	r0, #3
 397 00e6 84F83C00 		strb	r0, [r4, #60]
 323:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 398              		.loc 1 323 0
 399 00ea 0023     		movs	r3, #0
 400 00ec 84F83D30 		strb	r3, [r4, #61]
 325:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 401              		.loc 1 325 0
 402 00f0 38BD     		pop	{r3, r4, r5, pc}
 403              	.LVL27:
 404              	.L43:
 237:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 405              		.loc 1 237 0
 406 00f2 8022     		movs	r2, #128
 407 00f4 BAE7     		b	.L19
 408              	.LVL28:
 409              	.L44:
 247:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 410              		.loc 1 247 0
 411 00f6 42F04002 		orr	r2, r2, #64
 412              	.LVL29:
 413 00fa BCE7     		b	.L21
 414              	.L45:
ARM GAS  /tmp/ccubOfsv.s 			page 18


 257:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 415              		.loc 1 257 0
 416 00fc 42F02002 		orr	r2, r2, #32
 417              	.LVL30:
 418 0100 BEE7     		b	.L23
 419              	.L46:
 266:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 420              		.loc 1 266 0
 421 0102 42F01002 		orr	r2, r2, #16
 422              	.LVL31:
 423 0106 C0E7     		b	.L25
 424              	.L47:
 276:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 425              		.loc 1 276 0
 426 0108 42F00802 		orr	r2, r2, #8
 427              	.LVL32:
 428 010c C2E7     		b	.L27
 429              	.L48:
 285:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 430              		.loc 1 285 0
 431 010e 42F00402 		orr	r2, r2, #4
 432              	.LVL33:
 433 0112 C4E7     		b	.L29
 434              	.LVL34:
 435              	.L49:
 330:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 436              		.loc 1 330 0
 437 0114 5B68     		ldr	r3, [r3, #4]
 438 0116 13F0010F 		tst	r3, #1
 439 011a 08D0     		beq	.L36
 175:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart = 0U;
 440              		.loc 1 175 0
 441 011c 0023     		movs	r3, #0
 442 011e 00E0     		b	.L18
 443              	.LVL35:
 444              	.L34:
 445 0120 0023     		movs	r3, #0
 446              	.LVL36:
 447              	.L18:
 336:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 448              		.loc 1 336 0
 449 0122 33B9     		cbnz	r3, .L50
 350:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 450              		.loc 1 350 0
 451 0124 0423     		movs	r3, #4
 452              	.LVL37:
 453 0126 84F83C30 		strb	r3, [r4, #60]
 353:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 454              		.loc 1 353 0
 455 012a 0120     		movs	r0, #1
 456 012c 38BD     		pop	{r3, r4, r5, pc}
 457              	.LVL38:
 458              	.L36:
 332:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 459              		.loc 1 332 0
 460 012e 0123     		movs	r3, #1
 461 0130 F7E7     		b	.L18
ARM GAS  /tmp/ccubOfsv.s 			page 19


 462              	.LVL39:
 463              	.L50:
 339:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 464              		.loc 1 339 0
 465 0132 0020     		movs	r0, #0
 466 0134 2064     		str	r0, [r4, #64]
 342:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 467              		.loc 1 342 0
 468 0136 0123     		movs	r3, #1
 469              	.LVL40:
 470 0138 84F83C30 		strb	r3, [r4, #60]
 345:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 471              		.loc 1 345 0
 472 013c 38BD     		pop	{r3, r4, r5, pc}
 473              	.LVL41:
 474              	.L33:
 475              	.LCFI4:
 476              		.cfi_def_cfa_offset 0
 477              		.cfi_restore 3
 478              		.cfi_restore 4
 479              		.cfi_restore 5
 480              		.cfi_restore 14
 182:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 481              		.loc 1 182 0
 482 013e 0120     		movs	r0, #1
 483              	.LVL42:
 484 0140 7047     		bx	lr
 485              		.cfi_endproc
 486              	.LFE64:
 488              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 489              		.align	1
 490              		.weak	HAL_CAN_MspDeInit
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
 494              		.fpu softvfp
 496              	HAL_CAN_MspDeInit:
 497              	.LFB68:
 504:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 505:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 506:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 507:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_MspInit can be implemented in the user file
 508:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */ 
 509:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 510:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 511:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 512:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  DeInitializes the CAN MSP.
 513:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 514:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 515:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
 516:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 517:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_MspDeInit(CAN_HandleTypeDef* hcan)
 518:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 498              		.loc 1 518 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccubOfsv.s 			page 20


 502              		@ link register save eliminated.
 503              	.LVL43:
 504 0000 7047     		bx	lr
 505              		.cfi_endproc
 506              	.LFE68:
 508              		.section	.text.HAL_CAN_DeInit,"ax",%progbits
 509              		.align	1
 510              		.global	HAL_CAN_DeInit
 511              		.syntax unified
 512              		.thumb
 513              		.thumb_func
 514              		.fpu softvfp
 516              	HAL_CAN_DeInit:
 517              	.LFB66:
 470:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check CAN handle */
 518              		.loc 1 470 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522              	.LVL44:
 472:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 523              		.loc 1 472 0
 524 0000 60B1     		cbz	r0, .L54
 470:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check CAN handle */
 525              		.loc 1 470 0
 526 0002 10B5     		push	{r4, lr}
 527              	.LCFI5:
 528              		.cfi_def_cfa_offset 8
 529              		.cfi_offset 4, -8
 530              		.cfi_offset 14, -4
 531 0004 0446     		mov	r4, r0
 481:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 532              		.loc 1 481 0
 533 0006 0223     		movs	r3, #2
 534 0008 80F83C30 		strb	r3, [r0, #60]
 484:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 535              		.loc 1 484 0
 536 000c FFF7FEFF 		bl	HAL_CAN_MspDeInit
 537              	.LVL45:
 487:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 538              		.loc 1 487 0
 539 0010 0020     		movs	r0, #0
 540 0012 84F83C00 		strb	r0, [r4, #60]
 490:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 541              		.loc 1 490 0
 542 0016 84F83D00 		strb	r0, [r4, #61]
 493:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 543              		.loc 1 493 0
 544 001a 10BD     		pop	{r4, pc}
 545              	.LVL46:
 546              	.L54:
 547              	.LCFI6:
 548              		.cfi_def_cfa_offset 0
 549              		.cfi_restore 4
 550              		.cfi_restore 14
 474:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 551              		.loc 1 474 0
ARM GAS  /tmp/ccubOfsv.s 			page 21


 552 001c 0120     		movs	r0, #1
 553              	.LVL47:
 554 001e 7047     		bx	lr
 555              		.cfi_endproc
 556              	.LFE66:
 558              		.section	.text.HAL_CAN_Transmit,"ax",%progbits
 559              		.align	1
 560              		.global	HAL_CAN_Transmit
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
 564              		.fpu softvfp
 566              	HAL_CAN_Transmit:
 567              	.LFB69:
 519:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 520:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 521:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 522:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_MspDeInit can be implemented in the user file
 523:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */ 
 524:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 525:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 526:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 527:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
 528:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 529:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 530:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group2 Input and Output operation functions
 531:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *  @brief    I/O operation functions 
 532:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
 533:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @verbatim   
 534:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
 535:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                       ##### IO operation functions #####
 536:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
 537:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]  This section provides functions allowing to:
 538:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) Transmit a CAN frame message.
 539:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) Receive a CAN frame message.
 540:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) Enter CAN peripheral in sleep mode. 
 541:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) Wake up the CAN peripheral from sleep mode.
 542:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                
 543:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @endverbatim
 544:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 545:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 546:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 547:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 548:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Initiates and transmits a CAN frame message.
 549:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 550:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 551:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  Timeout: Specify Timeout value   
 552:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
 553:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 554:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Transmit(CAN_HandleTypeDef* hcan, uint32_t Timeout)
 555:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 568              		.loc 1 555 0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 0
 571              		@ frame_needed = 0, uses_anonymous_args = 0
 572              	.LVL48:
 573 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  /tmp/ccubOfsv.s 			page 22


 574              	.LCFI7:
 575              		.cfi_def_cfa_offset 24
 576              		.cfi_offset 3, -24
 577              		.cfi_offset 4, -20
 578              		.cfi_offset 5, -16
 579              		.cfi_offset 6, -12
 580              		.cfi_offset 7, -8
 581              		.cfi_offset 14, -4
 582              	.LVL49:
 556:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t transmitmailbox = CAN_TXSTATUS_NOMAILBOX;
 557:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart = 0U;
 558:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 559:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
 560:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_IDTYPE(hcan->pTxMsg->IDE));
 561:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_RTR(hcan->pTxMsg->RTR));
 562:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_DLC(hcan->pTxMsg->DLC));
 563:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 564:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(((hcan->Instance->TSR&CAN_TSR_TME0) == CAN_TSR_TME0) || \
 583              		.loc 1 564 0
 584 0002 0368     		ldr	r3, [r0]
 585 0004 9A68     		ldr	r2, [r3, #8]
 586 0006 12F0806F 		tst	r2, #67108864
 587 000a 08D1     		bne	.L60
 565:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
 588              		.loc 1 565 0 discriminator 1
 589 000c 9A68     		ldr	r2, [r3, #8]
 564:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
 590              		.loc 1 564 0 discriminator 1
 591 000e 12F0006F 		tst	r2, #134217728
 592 0012 04D1     		bne	.L60
 566:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME2) == CAN_TSR_TME2))
 593              		.loc 1 566 0
 594 0014 9A68     		ldr	r2, [r3, #8]
 565:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
 595              		.loc 1 565 0
 596 0016 12F0805F 		tst	r2, #268435456
 597 001a 00F0EC80 		beq	.L61
 598              	.L60:
 567:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 568:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Process locked */
 569:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_LOCK(hcan);
 599              		.loc 1 569 0
 600 001e 90F83D20 		ldrb	r2, [r0, #61]	@ zero_extendqisi2
 601 0022 012A     		cmp	r2, #1
 602 0024 00F0EC80 		beq	.L86
 603              		.loc 1 569 0 is_stmt 0 discriminator 2
 604 0028 0122     		movs	r2, #1
 605 002a 80F83D20 		strb	r2, [r0, #61]
 570:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 571:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Change CAN state */
 572:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
 606              		.loc 1 572 0 is_stmt 1 discriminator 2
 607 002e 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 608 0032 D2B2     		uxtb	r2, r2
 609 0034 322A     		cmp	r2, #50
 610 0036 14D0     		beq	.L64
 611 0038 622A     		cmp	r2, #98
ARM GAS  /tmp/ccubOfsv.s 			page 23


 612 003a 16D0     		beq	.L65
 613 003c 222A     		cmp	r2, #34
 614 003e 03D0     		beq	.L92
 573:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 574:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
 575:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
 576:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 577:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX1):
 578:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
 579:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 580:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 581:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
 582:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 583:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 584:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX;
 615              		.loc 1 584 0
 616 0040 1222     		movs	r2, #18
 617 0042 80F83C20 		strb	r2, [r0, #60]
 585:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 618              		.loc 1 585 0
 619 0046 02E0     		b	.L67
 620              	.L92:
 575:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 621              		.loc 1 575 0
 622 0048 4222     		movs	r2, #66
 623 004a 80F83C20 		strb	r2, [r0, #60]
 624              	.L67:
 586:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 587:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 588:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Select one empty transmit mailbox */
 589:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (HAL_IS_BIT_SET(hcan->Instance->TSR, CAN_TSR_TME0))
 625              		.loc 1 589 0
 626 004e 9A68     		ldr	r2, [r3, #8]
 627 0050 12F0806F 		tst	r2, #67108864
 628 0054 0DD1     		bne	.L87
 590:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 591:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_0;
 592:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 593:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else if (HAL_IS_BIT_SET(hcan->Instance->TSR, CAN_TSR_TME1))
 629              		.loc 1 593 0
 630 0056 9A68     		ldr	r2, [r3, #8]
 631 0058 12F0006F 		tst	r2, #134217728
 632 005c 61D0     		beq	.L88
 594:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 595:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_1;
 633              		.loc 1 595 0
 634 005e 0125     		movs	r5, #1
 635 0060 08E0     		b	.L68
 636              	.L64:
 578:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 637              		.loc 1 578 0
 638 0062 5222     		movs	r2, #82
 639 0064 80F83C20 		strb	r2, [r0, #60]
 579:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 640              		.loc 1 579 0
 641 0068 F1E7     		b	.L67
 642              	.L65:
ARM GAS  /tmp/ccubOfsv.s 			page 24


 581:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 643              		.loc 1 581 0
 644 006a 7222     		movs	r2, #114
 645 006c 80F83C20 		strb	r2, [r0, #60]
 582:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 646              		.loc 1 582 0
 647 0070 EDE7     		b	.L67
 648              	.L87:
 591:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 649              		.loc 1 591 0
 650 0072 0025     		movs	r5, #0
 651              	.L68:
 652              	.LVL50:
 596:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 597:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 598:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 599:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_2;
 600:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 601:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 602:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set up the Id */
 603:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TIR &= CAN_TI0R_TXRQ;
 653              		.loc 1 603 0
 654 0074 05F11802 		add	r2, r5, #24
 655 0078 1201     		lsls	r2, r2, #4
 656 007a 9C58     		ldr	r4, [r3, r2]
 657 007c 04F00104 		and	r4, r4, #1
 658 0080 9C50     		str	r4, [r3, r2]
 604:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (hcan->pTxMsg->IDE == CAN_ID_STD)
 659              		.loc 1 604 0
 660 0082 026B     		ldr	r2, [r0, #48]
 661 0084 9368     		ldr	r3, [r2, #8]
 662 0086 002B     		cmp	r3, #0
 663 0088 4DD1     		bne	.L69
 605:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 606:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       assert_param(IS_CAN_STDID(hcan->pTxMsg->StdId));  
 607:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TIR |= ((hcan->pTxMsg->StdId << CAN_TI0R_STID_Pos
 664              		.loc 1 607 0
 665 008a 0668     		ldr	r6, [r0]
 666 008c 05F11803 		add	r3, r5, #24
 667 0090 1B01     		lsls	r3, r3, #4
 668 0092 F458     		ldr	r4, [r6, r3]
 669 0094 1768     		ldr	r7, [r2]
 608:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 670              		.loc 1 608 0
 671 0096 D268     		ldr	r2, [r2, #12]
 607:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 672              		.loc 1 607 0
 673 0098 42EA4752 		orr	r2, r2, r7, lsl #21
 674 009c 2243     		orrs	r2, r2, r4
 675 009e F250     		str	r2, [r6, r3]
 676              	.L70:
 677 00a0 0E46     		mov	r6, r1
 678 00a2 0446     		mov	r4, r0
 609:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 610:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 611:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 612:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       assert_param(IS_CAN_EXTID(hcan->pTxMsg->ExtId));
ARM GAS  /tmp/ccubOfsv.s 			page 25


 613:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TIR |= ((hcan->pTxMsg->ExtId << CAN_TI0R_EXID_Pos
 614:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->IDE |
 615:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 616:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 617:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 618:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set up the DLC */
 619:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->pTxMsg->DLC &= (uint8_t)0x0000000F;
 679              		.loc 1 619 0
 680 00a4 026B     		ldr	r2, [r0, #48]
 681 00a6 1369     		ldr	r3, [r2, #16]
 682 00a8 03F00F03 		and	r3, r3, #15
 683 00ac 1361     		str	r3, [r2, #16]
 620:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TDTR &= 0xFFFFFFF0U;
 684              		.loc 1 620 0
 685 00ae 0368     		ldr	r3, [r0]
 686 00b0 05F11801 		add	r1, r5, #24
 687              	.LVL51:
 688 00b4 0901     		lsls	r1, r1, #4
 689 00b6 0B44     		add	r3, r3, r1
 690 00b8 5A68     		ldr	r2, [r3, #4]
 691 00ba 22F00F02 		bic	r2, r2, #15
 692 00be 5A60     		str	r2, [r3, #4]
 621:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TDTR |= hcan->pTxMsg->DLC;
 693              		.loc 1 621 0
 694 00c0 0368     		ldr	r3, [r0]
 695 00c2 0B44     		add	r3, r3, r1
 696 00c4 5A68     		ldr	r2, [r3, #4]
 697 00c6 006B     		ldr	r0, [r0, #48]
 698              	.LVL52:
 699 00c8 0069     		ldr	r0, [r0, #16]
 700 00ca 0243     		orrs	r2, r2, r0
 701 00cc 5A60     		str	r2, [r3, #4]
 622:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 623:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set up the data field */
 624:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDLR, ((uint32_t)hcan->pTxMsg->Data[3] <<
 702              		.loc 1 624 0
 703 00ce 2268     		ldr	r2, [r4]
 704 00d0 206B     		ldr	r0, [r4, #48]
 705 00d2 C77D     		ldrb	r7, [r0, #23]	@ zero_extendqisi2
 706 00d4 837D     		ldrb	r3, [r0, #22]	@ zero_extendqisi2
 707 00d6 1B04     		lsls	r3, r3, #16
 708 00d8 43EA0763 		orr	r3, r3, r7, lsl #24
 709 00dc 477D     		ldrb	r7, [r0, #21]	@ zero_extendqisi2
 710 00de 43EA0723 		orr	r3, r3, r7, lsl #8
 711 00e2 007D     		ldrb	r0, [r0, #20]	@ zero_extendqisi2
 712 00e4 0343     		orrs	r3, r3, r0
 713 00e6 2F01     		lsls	r7, r5, #4
 714 00e8 3A44     		add	r2, r2, r7
 715 00ea C2F88831 		str	r3, [r2, #392]
 625:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[2] <<
 626:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[1] <<
 627:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[0] <<
 628:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDHR, ((uint32_t)hcan->pTxMsg->Data[7] <<
 716              		.loc 1 628 0
 717 00ee 2268     		ldr	r2, [r4]
 718 00f0 206B     		ldr	r0, [r4, #48]
 719 00f2 90F81BE0 		ldrb	lr, [r0, #27]	@ zero_extendqisi2
ARM GAS  /tmp/ccubOfsv.s 			page 26


 720 00f6 837E     		ldrb	r3, [r0, #26]	@ zero_extendqisi2
 721 00f8 1B04     		lsls	r3, r3, #16
 722 00fa 43EA0E63 		orr	r3, r3, lr, lsl #24
 723 00fe 90F819E0 		ldrb	lr, [r0, #25]	@ zero_extendqisi2
 724 0102 43EA0E23 		orr	r3, r3, lr, lsl #8
 725 0106 007E     		ldrb	r0, [r0, #24]	@ zero_extendqisi2
 726 0108 0343     		orrs	r3, r3, r0
 727 010a 3A44     		add	r2, r2, r7
 728 010c C2F88C31 		str	r3, [r2, #396]
 629:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[6] <<
 630:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[5] <<
 631:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[4] <<
 632:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Request transmission */
 633:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TIR, CAN_TI0R_TXRQ);
 729              		.loc 1 633 0
 730 0110 2268     		ldr	r2, [r4]
 731 0112 5358     		ldr	r3, [r2, r1]
 732 0114 43F00103 		orr	r3, r3, #1
 733 0118 5350     		str	r3, [r2, r1]
 634:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 635:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Get tick */
 636:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tickstart = HAL_GetTick();
 734              		.loc 1 636 0
 735 011a FFF7FEFF 		bl	HAL_GetTick
 736              	.LVL53:
 737 011e 0746     		mov	r7, r0
 738              	.LVL54:
 637:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 638:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check End of transmission flag */
 639:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     while(!(__HAL_CAN_TRANSMIT_STATUS(hcan, transmitmailbox)))
 739              		.loc 1 639 0
 740 0120 3BE0     		b	.L72
 741              	.LVL55:
 742              	.L88:
 599:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 743              		.loc 1 599 0
 744 0122 0225     		movs	r5, #2
 745 0124 A6E7     		b	.L68
 746              	.LVL56:
 747              	.L69:
 613:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->IDE |
 748              		.loc 1 613 0
 749 0126 0768     		ldr	r7, [r0]
 750 0128 05F11804 		add	r4, r5, #24
 751 012c 2401     		lsls	r4, r4, #4
 752 012e 57F804E0 		ldr	lr, [r7, r4]
 753 0132 5668     		ldr	r6, [r2, #4]
 754 0134 43EAC603 		orr	r3, r3, r6, lsl #3
 615:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 755              		.loc 1 615 0
 756 0138 D268     		ldr	r2, [r2, #12]
 614:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 757              		.loc 1 614 0
 758 013a 1343     		orrs	r3, r3, r2
 613:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->IDE |
 759              		.loc 1 613 0
 760 013c 43EA0E03 		orr	r3, r3, lr
ARM GAS  /tmp/ccubOfsv.s 			page 27


 761 0140 3B51     		str	r3, [r7, r4]
 762 0142 ADE7     		b	.L70
 763              	.LVL57:
 764              	.L96:
 640:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 641:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check for the Timeout */
 642:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if(Timeout != HAL_MAX_DELAY)
 643:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 644:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 765              		.loc 1 644 0
 766 0144 26B1     		cbz	r6, .L73
 767              		.loc 1 644 0 is_stmt 0 discriminator 1
 768 0146 FFF7FEFF 		bl	HAL_GetTick
 769              	.LVL58:
 770 014a C01B     		subs	r0, r0, r7
 771 014c 8642     		cmp	r6, r0
 772 014e 24D2     		bcs	.L72
 773              	.L73:
 645:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 646:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_TIMEOUT;
 774              		.loc 1 646 0 is_stmt 1
 775 0150 0323     		movs	r3, #3
 776 0152 84F83C30 		strb	r3, [r4, #60]
 647:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 648:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Cancel transmission */
 649:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           __HAL_CAN_CANCEL_TRANSMIT(hcan, transmitmailbox);
 777              		.loc 1 649 0
 778 0156 3DB9     		cbnz	r5, .L74
 779              		.loc 1 649 0 is_stmt 0 discriminator 1
 780 0158 2368     		ldr	r3, [r4]
 781 015a 8022     		movs	r2, #128
 782 015c 9A60     		str	r2, [r3, #8]
 783              	.L75:
 650:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 651:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Process unlocked */
 652:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           __HAL_UNLOCK(hcan);
 784              		.loc 1 652 0 is_stmt 1
 785 015e 0023     		movs	r3, #0
 786 0160 84F83D30 		strb	r3, [r4, #61]
 653:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           return HAL_TIMEOUT;
 787              		.loc 1 653 0
 788 0164 0320     		movs	r0, #3
 789 0166 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 790              	.LVL59:
 791              	.L74:
 649:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 792              		.loc 1 649 0 discriminator 2
 793 0168 012D     		cmp	r5, #1
 794 016a 04D0     		beq	.L93
 649:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 795              		.loc 1 649 0 is_stmt 0 discriminator 4
 796 016c 2368     		ldr	r3, [r4]
 797 016e 4FF40002 		mov	r2, #8388608
 798 0172 9A60     		str	r2, [r3, #8]
 799 0174 F3E7     		b	.L75
 800              	.L93:
 649:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /tmp/ccubOfsv.s 			page 28


 801              		.loc 1 649 0 discriminator 3
 802 0176 2368     		ldr	r3, [r4]
 803 0178 4FF40042 		mov	r2, #32768
 804 017c 9A60     		str	r2, [r3, #8]
 805 017e EEE7     		b	.L75
 806              	.L77:
 639:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 807              		.loc 1 639 0 is_stmt 1 discriminator 2
 808 0180 012D     		cmp	r5, #1
 809 0182 14D0     		beq	.L94
 639:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 810              		.loc 1 639 0 is_stmt 0 discriminator 5
 811 0184 2368     		ldr	r3, [r4]
 812 0186 9A68     		ldr	r2, [r3, #8]
 813 0188 1E4B     		ldr	r3, .L98
 814 018a 9343     		bics	r3, r3, r2
 815 018c 14BF     		ite	ne
 816 018e 0123     		movne	r3, #1
 817 0190 0023     		moveq	r3, #0
 818              	.L78:
 639:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 819              		.loc 1 639 0 discriminator 8
 820 0192 A3B1     		cbz	r3, .L95
 642:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 821              		.loc 1 642 0 is_stmt 1
 822 0194 B6F1FF3F 		cmp	r6, #-1
 823 0198 D4D1     		bne	.L96
 824              	.L72:
 639:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 825              		.loc 1 639 0
 826 019a 002D     		cmp	r5, #0
 827 019c F0D1     		bne	.L77
 639:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 828              		.loc 1 639 0 is_stmt 0 discriminator 1
 829 019e 2368     		ldr	r3, [r4]
 830 01a0 9A68     		ldr	r2, [r3, #8]
 831 01a2 194B     		ldr	r3, .L98+4
 832 01a4 9343     		bics	r3, r3, r2
 833 01a6 14BF     		ite	ne
 834 01a8 0123     		movne	r3, #1
 835 01aa 0023     		moveq	r3, #0
 836 01ac F1E7     		b	.L78
 837              	.L94:
 639:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 838              		.loc 1 639 0 discriminator 4
 839 01ae 2368     		ldr	r3, [r4]
 840 01b0 9A68     		ldr	r2, [r3, #8]
 841 01b2 164B     		ldr	r3, .L98+8
 842 01b4 9343     		bics	r3, r3, r2
 843 01b6 14BF     		ite	ne
 844 01b8 0123     		movne	r3, #1
 845 01ba 0023     		moveq	r3, #0
 846 01bc E9E7     		b	.L78
 847              	.L95:
 654:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 655:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 656:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
ARM GAS  /tmp/ccubOfsv.s 			page 29


 657:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Change CAN state */
 658:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
 848              		.loc 1 658 0 is_stmt 1
 849 01be 94F83C30 		ldrb	r3, [r4, #60]	@ zero_extendqisi2
 850 01c2 DBB2     		uxtb	r3, r3
 851 01c4 522B     		cmp	r3, #82
 852 01c6 0ED0     		beq	.L82
 853 01c8 722B     		cmp	r3, #114
 854 01ca 10D0     		beq	.L83
 855 01cc 422B     		cmp	r3, #66
 856 01ce 03D0     		beq	.L97
 659:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 660:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
 661:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_RX0;
 662:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 663:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
 664:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_RX1;
 665:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 666:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 667:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
 668:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 669:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_TX */
 670:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_READY;
 857              		.loc 1 670 0
 858 01d0 0123     		movs	r3, #1
 859 01d2 84F83C30 		strb	r3, [r4, #60]
 671:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 860              		.loc 1 671 0
 861 01d6 02E0     		b	.L85
 862              	.L97:
 661:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 863              		.loc 1 661 0
 864 01d8 2223     		movs	r3, #34
 865 01da 84F83C30 		strb	r3, [r4, #60]
 866              	.L85:
 672:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 673:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 674:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Process unlocked */
 675:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_UNLOCK(hcan);
 867              		.loc 1 675 0
 868 01de 0020     		movs	r0, #0
 869 01e0 84F83D00 		strb	r0, [r4, #61]
 676:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 677:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
 678:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_OK;
 870              		.loc 1 678 0
 871 01e4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 872              	.LVL60:
 873              	.L82:
 664:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 874              		.loc 1 664 0
 875 01e6 3223     		movs	r3, #50
 876 01e8 84F83C30 		strb	r3, [r4, #60]
 665:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 877              		.loc 1 665 0
 878 01ec F7E7     		b	.L85
 879              	.L83:
ARM GAS  /tmp/ccubOfsv.s 			page 30


 667:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 880              		.loc 1 667 0
 881 01ee 6223     		movs	r3, #98
 882 01f0 84F83C30 		strb	r3, [r4, #60]
 668:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_TX */
 883              		.loc 1 668 0
 884 01f4 F3E7     		b	.L85
 885              	.LVL61:
 886              	.L61:
 679:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 680:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 681:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 682:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Change CAN state */
 683:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_ERROR;
 887              		.loc 1 683 0
 888 01f6 0423     		movs	r3, #4
 889 01f8 80F83C30 		strb	r3, [r0, #60]
 684:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 685:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
 686:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
 890              		.loc 1 686 0
 891 01fc 0120     		movs	r0, #1
 892              	.LVL62:
 893 01fe F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 894              	.LVL63:
 895              	.L86:
 569:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 896              		.loc 1 569 0
 897 0200 0220     		movs	r0, #2
 898              	.LVL64:
 687:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 688:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 899              		.loc 1 688 0
 900 0202 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 901              	.L99:
 902              		.align	2
 903              	.L98:
 904 0204 00000110 		.word	268500992
 905 0208 01000004 		.word	67108865
 906 020c 00010008 		.word	134217984
 907              		.cfi_endproc
 908              	.LFE69:
 910              		.section	.text.HAL_CAN_Transmit_IT,"ax",%progbits
 911              		.align	1
 912              		.global	HAL_CAN_Transmit_IT
 913              		.syntax unified
 914              		.thumb
 915              		.thumb_func
 916              		.fpu softvfp
 918              	HAL_CAN_Transmit_IT:
 919              	.LFB70:
 689:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 690:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 691:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Initiates and transmits a CAN frame message.
 692:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 693:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 694:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
ARM GAS  /tmp/ccubOfsv.s 			page 31


 695:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 696:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Transmit_IT(CAN_HandleTypeDef* hcan)
 697:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 920              		.loc 1 697 0
 921              		.cfi_startproc
 922              		@ args = 0, pretend = 0, frame = 0
 923              		@ frame_needed = 0, uses_anonymous_args = 0
 924              		@ link register save eliminated.
 925              	.LVL65:
 698:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t transmitmailbox = CAN_TXSTATUS_NOMAILBOX;
 699:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 700:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
 701:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_IDTYPE(hcan->pTxMsg->IDE));
 702:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_RTR(hcan->pTxMsg->RTR));
 703:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_DLC(hcan->pTxMsg->DLC));
 704:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 705:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(((hcan->Instance->TSR&CAN_TSR_TME0) == CAN_TSR_TME0) || \
 926              		.loc 1 705 0
 927 0000 0268     		ldr	r2, [r0]
 928 0002 9368     		ldr	r3, [r2, #8]
 929 0004 13F0806F 		tst	r3, #67108864
 930 0008 08D1     		bne	.L101
 706:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
 931              		.loc 1 706 0 discriminator 1
 932 000a 9368     		ldr	r3, [r2, #8]
 705:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
 933              		.loc 1 705 0 discriminator 1
 934 000c 13F0006F 		tst	r3, #134217728
 935 0010 04D1     		bne	.L101
 707:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME2) == CAN_TSR_TME2))
 936              		.loc 1 707 0
 937 0012 9368     		ldr	r3, [r2, #8]
 706:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
 938              		.loc 1 706 0
 939 0014 13F0805F 		tst	r3, #268435456
 940 0018 00F09A80 		beq	.L102
 941              	.L101:
 708:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 709:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Process Locked */
 710:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_LOCK(hcan);
 942              		.loc 1 710 0
 943 001c 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 944 0020 012B     		cmp	r3, #1
 945 0022 00F09A80 		beq	.L112
 697:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t transmitmailbox = CAN_TXSTATUS_NOMAILBOX;
 946              		.loc 1 697 0 discriminator 2
 947 0026 F0B4     		push	{r4, r5, r6, r7}
 948              	.LCFI8:
 949              		.cfi_def_cfa_offset 16
 950              		.cfi_offset 4, -16
 951              		.cfi_offset 5, -12
 952              		.cfi_offset 6, -8
 953              		.cfi_offset 7, -4
 954              		.loc 1 710 0 discriminator 2
 955 0028 0123     		movs	r3, #1
 956 002a 80F83D30 		strb	r3, [r0, #61]
 711:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
ARM GAS  /tmp/ccubOfsv.s 			page 32


 712:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Select one empty transmit mailbox */
 713:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if(HAL_IS_BIT_SET(hcan->Instance->TSR, CAN_TSR_TME0))
 957              		.loc 1 713 0 discriminator 2
 958 002e 9368     		ldr	r3, [r2, #8]
 959 0030 13F0806F 		tst	r3, #67108864
 960 0034 05D1     		bne	.L113
 714:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 715:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_0;
 716:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 717:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else if(HAL_IS_BIT_SET(hcan->Instance->TSR, CAN_TSR_TME1))
 961              		.loc 1 717 0
 962 0036 9368     		ldr	r3, [r2, #8]
 963 0038 13F0006F 		tst	r3, #134217728
 964 003c 59D0     		beq	.L114
 718:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 719:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_1;
 965              		.loc 1 719 0
 966 003e 0123     		movs	r3, #1
 967 0040 00E0     		b	.L104
 968              	.L113:
 715:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 969              		.loc 1 715 0
 970 0042 0023     		movs	r3, #0
 971              	.L104:
 972              	.LVL66:
 720:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 721:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 722:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 723:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_2;
 724:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 725:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 726:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set up the Id */
 727:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TIR &= CAN_TI0R_TXRQ;
 973              		.loc 1 727 0
 974 0044 03F11801 		add	r1, r3, #24
 975 0048 0901     		lsls	r1, r1, #4
 976 004a 5458     		ldr	r4, [r2, r1]
 977 004c 04F00104 		and	r4, r4, #1
 978 0050 5450     		str	r4, [r2, r1]
 728:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if(hcan->pTxMsg->IDE == CAN_ID_STD)
 979              		.loc 1 728 0
 980 0052 016B     		ldr	r1, [r0, #48]
 981 0054 8A68     		ldr	r2, [r1, #8]
 982 0056 002A     		cmp	r2, #0
 983 0058 4DD1     		bne	.L105
 729:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 730:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       assert_param(IS_CAN_STDID(hcan->pTxMsg->StdId));
 731:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TIR |= ((hcan->pTxMsg->StdId << CAN_TI0R_STID_Pos
 984              		.loc 1 731 0
 985 005a 0568     		ldr	r5, [r0]
 986 005c 03F11802 		add	r2, r3, #24
 987 0060 1201     		lsls	r2, r2, #4
 988 0062 AC58     		ldr	r4, [r5, r2]
 989 0064 0E68     		ldr	r6, [r1]
 732:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 990              		.loc 1 732 0
 991 0066 C968     		ldr	r1, [r1, #12]
ARM GAS  /tmp/ccubOfsv.s 			page 33


 731:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 992              		.loc 1 731 0
 993 0068 41EA4651 		orr	r1, r1, r6, lsl #21
 994 006c 2143     		orrs	r1, r1, r4
 995 006e A950     		str	r1, [r5, r2]
 996              	.L106:
 733:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 734:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 735:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 736:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       assert_param(IS_CAN_EXTID(hcan->pTxMsg->ExtId));
 737:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TIR |= ((hcan->pTxMsg->ExtId << CAN_TI0R_EXID_Pos
 738:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->IDE |
 739:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 740:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 741:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 742:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set up the DLC */
 743:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->pTxMsg->DLC &= (uint8_t)0x0000000FU;
 997              		.loc 1 743 0
 998 0070 016B     		ldr	r1, [r0, #48]
 999 0072 0A69     		ldr	r2, [r1, #16]
 1000 0074 02F00F02 		and	r2, r2, #15
 1001 0078 0A61     		str	r2, [r1, #16]
 744:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TDTR &= 0xFFFFFFF0U;
 1002              		.loc 1 744 0
 1003 007a 0468     		ldr	r4, [r0]
 1004 007c 03F11802 		add	r2, r3, #24
 1005 0080 1101     		lsls	r1, r2, #4
 1006 0082 6218     		adds	r2, r4, r1
 1007 0084 5468     		ldr	r4, [r2, #4]
 1008 0086 24F00F04 		bic	r4, r4, #15
 1009 008a 5460     		str	r4, [r2, #4]
 745:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TDTR |= hcan->pTxMsg->DLC;
 1010              		.loc 1 745 0
 1011 008c 0268     		ldr	r2, [r0]
 1012 008e 0A44     		add	r2, r2, r1
 1013 0090 5168     		ldr	r1, [r2, #4]
 1014 0092 046B     		ldr	r4, [r0, #48]
 1015 0094 2469     		ldr	r4, [r4, #16]
 1016 0096 2143     		orrs	r1, r1, r4
 1017 0098 5160     		str	r1, [r2, #4]
 746:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 747:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set up the data field */
 748:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDLR, ((uint32_t)hcan->pTxMsg->Data[3U] <
 1018              		.loc 1 748 0
 1019 009a 0468     		ldr	r4, [r0]
 1020 009c 016B     		ldr	r1, [r0, #48]
 1021 009e CD7D     		ldrb	r5, [r1, #23]	@ zero_extendqisi2
 1022 00a0 8A7D     		ldrb	r2, [r1, #22]	@ zero_extendqisi2
 1023 00a2 1204     		lsls	r2, r2, #16
 1024 00a4 42EA0562 		orr	r2, r2, r5, lsl #24
 1025 00a8 4D7D     		ldrb	r5, [r1, #21]	@ zero_extendqisi2
 1026 00aa 42EA0522 		orr	r2, r2, r5, lsl #8
 1027 00ae 097D     		ldrb	r1, [r1, #20]	@ zero_extendqisi2
 1028 00b0 0A43     		orrs	r2, r2, r1
 1029 00b2 1D01     		lsls	r5, r3, #4
 1030 00b4 2C44     		add	r4, r4, r5
 1031 00b6 C4F88821 		str	r2, [r4, #392]
ARM GAS  /tmp/ccubOfsv.s 			page 34


 749:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[2U] <
 750:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[1U] <
 751:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[0U] <
 752:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDHR, ((uint32_t)hcan->pTxMsg->Data[7U] <
 1032              		.loc 1 752 0
 1033 00ba 0168     		ldr	r1, [r0]
 1034 00bc 046B     		ldr	r4, [r0, #48]
 1035 00be E67E     		ldrb	r6, [r4, #27]	@ zero_extendqisi2
 1036 00c0 A27E     		ldrb	r2, [r4, #26]	@ zero_extendqisi2
 1037 00c2 1204     		lsls	r2, r2, #16
 1038 00c4 42EA0662 		orr	r2, r2, r6, lsl #24
 1039 00c8 667E     		ldrb	r6, [r4, #25]	@ zero_extendqisi2
 1040 00ca 42EA0622 		orr	r2, r2, r6, lsl #8
 1041 00ce 247E     		ldrb	r4, [r4, #24]	@ zero_extendqisi2
 1042 00d0 2243     		orrs	r2, r2, r4
 1043 00d2 2944     		add	r1, r1, r5
 1044 00d4 C1F88C21 		str	r2, [r1, #396]
 753:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[6U] <
 754:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[5U] <
 755:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[4U] <
 756:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 757:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Change CAN state */
 758:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
 1045              		.loc 1 758 0
 1046 00d8 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 1047 00dc D2B2     		uxtb	r2, r2
 1048 00de 322A     		cmp	r2, #50
 1049 00e0 2ED0     		beq	.L108
 1050 00e2 622A     		cmp	r2, #98
 1051 00e4 30D0     		beq	.L109
 1052 00e6 222A     		cmp	r2, #34
 1053 00e8 12D0     		beq	.L120
 759:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 760:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
 761:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
 762:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 763:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX1):
 764:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
 765:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 766:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 767:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
 768:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 769:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 770:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX;
 1054              		.loc 1 770 0
 1055 00ea 1222     		movs	r2, #18
 1056 00ec 80F83C20 		strb	r2, [r0, #60]
 771:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 1057              		.loc 1 771 0
 1058 00f0 11E0     		b	.L111
 1059              	.LVL67:
 1060              	.L114:
 723:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1061              		.loc 1 723 0
 1062 00f2 0223     		movs	r3, #2
 1063 00f4 A6E7     		b	.L104
 1064              	.LVL68:
ARM GAS  /tmp/ccubOfsv.s 			page 35


 1065              	.L105:
 737:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->IDE |
 1066              		.loc 1 737 0
 1067 00f6 0668     		ldr	r6, [r0]
 1068 00f8 03F11804 		add	r4, r3, #24
 1069 00fc 2401     		lsls	r4, r4, #4
 1070 00fe 3559     		ldr	r5, [r6, r4]
 1071 0100 4F68     		ldr	r7, [r1, #4]
 1072 0102 42EAC702 		orr	r2, r2, r7, lsl #3
 739:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1073              		.loc 1 739 0
 1074 0106 C968     		ldr	r1, [r1, #12]
 738:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 1075              		.loc 1 738 0
 1076 0108 0A43     		orrs	r2, r2, r1
 737:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->IDE |
 1077              		.loc 1 737 0
 1078 010a 2A43     		orrs	r2, r2, r5
 1079 010c 3251     		str	r2, [r6, r4]
 1080 010e AFE7     		b	.L106
 1081              	.L120:
 761:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 1082              		.loc 1 761 0
 1083 0110 4222     		movs	r2, #66
 1084 0112 80F83C20 		strb	r2, [r0, #60]
 1085              	.L111:
 772:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 773:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 774:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set CAN error code to none */
 775:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 1086              		.loc 1 775 0
 1087 0116 0022     		movs	r2, #0
 1088 0118 0264     		str	r2, [r0, #64]
 776:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 777:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Process Unlocked */
 778:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_UNLOCK(hcan);
 1089              		.loc 1 778 0
 1090 011a 80F83D20 		strb	r2, [r0, #61]
 779:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 780:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Request transmission */
 781:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TIR |= CAN_TI0R_TXRQ;
 1091              		.loc 1 781 0
 1092 011e 0468     		ldr	r4, [r0]
 1093 0120 1833     		adds	r3, r3, #24
 1094              	.LVL69:
 1095 0122 1B01     		lsls	r3, r3, #4
 1096              	.LVL70:
 1097 0124 E158     		ldr	r1, [r4, r3]
 1098 0126 41F00101 		orr	r1, r1, #1
 1099 012a E150     		str	r1, [r4, r3]
 782:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 783:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Enable interrupts: */
 784:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Enable Error warning Interrupt */
 785:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Enable Error passive Interrupt */
 786:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Enable Bus-off Interrupt */
 787:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Enable Last error code Interrupt */
 788:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Enable Error Interrupt */
ARM GAS  /tmp/ccubOfsv.s 			page 36


 789:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Enable Transmit mailbox empty Interrupt */
 790:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, CAN_IT_EWG |
 1100              		.loc 1 790 0
 1101 012c 0168     		ldr	r1, [r0]
 1102 012e 4B69     		ldr	r3, [r1, #20]
 1103 0130 43F40F43 		orr	r3, r3, #36608
 1104 0134 43F00103 		orr	r3, r3, #1
 1105 0138 4B61     		str	r3, [r1, #20]
 791:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                               CAN_IT_EPV |
 792:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                               CAN_IT_BOF |
 793:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                               CAN_IT_LEC |
 794:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                               CAN_IT_ERR |
 795:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                               CAN_IT_TME  );
 796:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 797:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 798:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 799:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Change CAN state */
 800:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_ERROR;
 801:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 802:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
 803:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
 804:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 805:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 806:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
 1106              		.loc 1 806 0
 1107 013a 1046     		mov	r0, r2
 1108              	.LVL71:
 807:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 1109              		.loc 1 807 0
 1110 013c F0BC     		pop	{r4, r5, r6, r7}
 1111              	.LCFI9:
 1112              		.cfi_remember_state
 1113              		.cfi_restore 7
 1114              		.cfi_restore 6
 1115              		.cfi_restore 5
 1116              		.cfi_restore 4
 1117              		.cfi_def_cfa_offset 0
 1118 013e 7047     		bx	lr
 1119              	.LVL72:
 1120              	.L108:
 1121              	.LCFI10:
 1122              		.cfi_restore_state
 764:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 1123              		.loc 1 764 0
 1124 0140 5222     		movs	r2, #82
 1125 0142 80F83C20 		strb	r2, [r0, #60]
 765:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 1126              		.loc 1 765 0
 1127 0146 E6E7     		b	.L111
 1128              	.L109:
 767:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 1129              		.loc 1 767 0
 1130 0148 7222     		movs	r2, #114
 1131 014a 80F83C20 		strb	r2, [r0, #60]
 768:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 1132              		.loc 1 768 0
 1133 014e E2E7     		b	.L111
ARM GAS  /tmp/ccubOfsv.s 			page 37


 1134              	.LVL73:
 1135              	.L102:
 1136              	.LCFI11:
 1137              		.cfi_def_cfa_offset 0
 1138              		.cfi_restore 4
 1139              		.cfi_restore 5
 1140              		.cfi_restore 6
 1141              		.cfi_restore 7
 800:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1142              		.loc 1 800 0
 1143 0150 0423     		movs	r3, #4
 1144 0152 80F83C30 		strb	r3, [r0, #60]
 803:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1145              		.loc 1 803 0
 1146 0156 0120     		movs	r0, #1
 1147              	.LVL74:
 1148 0158 7047     		bx	lr
 1149              	.LVL75:
 1150              	.L112:
 710:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 1151              		.loc 1 710 0
 1152 015a 0220     		movs	r0, #2
 1153              	.LVL76:
 1154 015c 7047     		bx	lr
 1155              		.cfi_endproc
 1156              	.LFE70:
 1158              		.section	.text.HAL_CAN_Receive,"ax",%progbits
 1159              		.align	1
 1160              		.global	HAL_CAN_Receive
 1161              		.syntax unified
 1162              		.thumb
 1163              		.thumb_func
 1164              		.fpu softvfp
 1166              	HAL_CAN_Receive:
 1167              	.LFB71:
 808:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 809:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 810:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Receives a correct CAN frame.
 811:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 812:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 813:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  FIFONumber: FIFO Number value
 814:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  Timeout: Specify Timeout value 
 815:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
 816:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 817:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Receive(CAN_HandleTypeDef* hcan, uint8_t FIFONumber, uint32_t Timeout)
 818:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 1168              		.loc 1 818 0
 1169              		.cfi_startproc
 1170              		@ args = 0, pretend = 0, frame = 0
 1171              		@ frame_needed = 0, uses_anonymous_args = 0
 1172              	.LVL77:
 1173 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1174              	.LCFI12:
 1175              		.cfi_def_cfa_offset 24
 1176              		.cfi_offset 3, -24
 1177              		.cfi_offset 4, -20
 1178              		.cfi_offset 5, -16
ARM GAS  /tmp/ccubOfsv.s 			page 38


 1179              		.cfi_offset 6, -12
 1180              		.cfi_offset 7, -8
 1181              		.cfi_offset 14, -4
 1182              	.LVL78:
 819:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart = 0U;
 820:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   CanRxMsgTypeDef* pRxMsg = NULL;
 821:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 822:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
 823:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 824:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 825:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check if CAN state is not busy for RX FIFO0 */
 826:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((FIFONumber == CAN_FIFO0) && ((hcan->State == HAL_CAN_STATE_BUSY_RX0) ||         \
 1183              		.loc 1 826 0
 1184 0002 0D46     		mov	r5, r1
 1185 0004 B9B9     		cbnz	r1, .L122
 1186              		.loc 1 826 0 is_stmt 0 discriminator 1
 1187 0006 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1188 000a DBB2     		uxtb	r3, r3
 1189 000c 222B     		cmp	r3, #34
 1190 000e 00F02F81 		beq	.L157
 827:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1191              		.loc 1 827 0 is_stmt 1 discriminator 2
 1192 0012 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1193 0016 DBB2     		uxtb	r3, r3
 826:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1194              		.loc 1 826 0 discriminator 2
 1195 0018 422B     		cmp	r3, #66
 1196 001a 00F02B81 		beq	.L158
 828:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1197              		.loc 1 828 0
 1198 001e 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1199 0022 DBB2     		uxtb	r3, r3
 827:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1200              		.loc 1 827 0
 1201 0024 622B     		cmp	r3, #98
 1202 0026 00F02781 		beq	.L159
 829:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1203              		.loc 1 829 0
 1204 002a 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1205 002e DBB2     		uxtb	r3, r3
 828:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1206              		.loc 1 828 0
 1207 0030 722B     		cmp	r3, #114
 1208 0032 00F02381 		beq	.L160
 1209              	.L122:
 830:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 831:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_BUSY;
 832:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 833:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 834:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check if CAN state is not busy for RX FIFO1 */
 835:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((FIFONumber == CAN_FIFO1) && ((hcan->State == HAL_CAN_STATE_BUSY_RX1) ||         \
 1210              		.loc 1 835 0
 1211 0036 012D     		cmp	r5, #1
 1212 0038 15D0     		beq	.L171
 1213              	.L124:
 836:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 837:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
ARM GAS  /tmp/ccubOfsv.s 			page 39


 838:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 839:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 840:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_BUSY;
 841:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 842:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 843:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Process locked */
 844:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_LOCK(hcan);
 1214              		.loc 1 844 0
 1215 003a 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1216 003e 012B     		cmp	r3, #1
 1217 0040 00F02481 		beq	.L165
 1218              		.loc 1 844 0 is_stmt 0 discriminator 2
 1219 0044 0123     		movs	r3, #1
 1220 0046 80F83D30 		strb	r3, [r0, #61]
 845:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 846:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
 847:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (FIFONumber == CAN_FIFO0)
 1221              		.loc 1 847 0 is_stmt 1 discriminator 2
 1222 004a B5BB     		cbnz	r5, .L125
 848:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 849:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
 1223              		.loc 1 849 0
 1224 004c 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1225 0050 DBB2     		uxtb	r3, r3
 1226 0052 322B     		cmp	r3, #50
 1227 0054 29D0     		beq	.L127
 1228 0056 522B     		cmp	r3, #82
 1229 0058 2BD0     		beq	.L128
 1230 005a 122B     		cmp	r3, #18
 1231 005c 1CD0     		beq	.L172
 850:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 851:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX):
 852:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
 853:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 854:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX1):
 855:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
 856:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 857:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
 858:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
 859:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 860:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 861:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0;
 1232              		.loc 1 861 0
 1233 005e 2223     		movs	r3, #34
 1234 0060 80F83C30 		strb	r3, [r0, #60]
 862:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1235              		.loc 1 862 0
 1236 0064 1BE0     		b	.L130
 1237              	.L171:
 835:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 1238              		.loc 1 835 0 discriminator 1
 1239 0066 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1240 006a DBB2     		uxtb	r3, r3
 1241 006c 322B     		cmp	r3, #50
 1242 006e 00F00781 		beq	.L161
 836:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1243              		.loc 1 836 0 discriminator 2
ARM GAS  /tmp/ccubOfsv.s 			page 40


 1244 0072 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1245 0076 DBB2     		uxtb	r3, r3
 835:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 1246              		.loc 1 835 0 discriminator 2
 1247 0078 522B     		cmp	r3, #82
 1248 007a 00F00381 		beq	.L162
 837:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1249              		.loc 1 837 0
 1250 007e 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1251 0082 DBB2     		uxtb	r3, r3
 836:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1252              		.loc 1 836 0
 1253 0084 622B     		cmp	r3, #98
 1254 0086 00F0FF80 		beq	.L163
 838:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1255              		.loc 1 838 0
 1256 008a 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1257 008e DBB2     		uxtb	r3, r3
 837:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1258              		.loc 1 837 0
 1259 0090 722B     		cmp	r3, #114
 1260 0092 D2D1     		bne	.L124
 840:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1261              		.loc 1 840 0
 1262 0094 0220     		movs	r0, #2
 1263              	.LVL79:
 1264 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1265              	.LVL80:
 1266              	.L172:
 852:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1267              		.loc 1 852 0
 1268 0098 4223     		movs	r3, #66
 1269 009a 80F83C30 		strb	r3, [r0, #60]
 1270              	.L130:
 1271 009e 1646     		mov	r6, r2
 1272 00a0 0446     		mov	r4, r0
 863:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 864:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 865:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 866:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 867:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
 868:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 869:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX):
 870:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
 871:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 872:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
 873:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
 874:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 875:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
 876:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
 877:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 878:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 879:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX1;
 880:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 881:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 882:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 883:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get tick */ 
ARM GAS  /tmp/ccubOfsv.s 			page 41


 884:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tickstart = HAL_GetTick();
 1273              		.loc 1 884 0
 1274 00a2 FFF7FEFF 		bl	HAL_GetTick
 1275              	.LVL81:
 1276 00a6 0746     		mov	r7, r0
 1277              	.LVL82:
 885:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 886:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check pending message */
 887:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   while(__HAL_CAN_MSG_PENDING(hcan, FIFONumber) == 0U)
 1278              		.loc 1 887 0
 1279 00a8 38E0     		b	.L136
 1280              	.LVL83:
 1281              	.L127:
 855:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1282              		.loc 1 855 0
 1283 00aa 6223     		movs	r3, #98
 1284 00ac 80F83C30 		strb	r3, [r0, #60]
 856:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
 1285              		.loc 1 856 0
 1286 00b0 F5E7     		b	.L130
 1287              	.L128:
 858:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1288              		.loc 1 858 0
 1289 00b2 7223     		movs	r3, #114
 1290 00b4 80F83C30 		strb	r3, [r0, #60]
 859:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 1291              		.loc 1 859 0
 1292 00b8 F1E7     		b	.L130
 1293              	.L125:
 867:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1294              		.loc 1 867 0
 1295 00ba 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1296 00be DBB2     		uxtb	r3, r3
 1297 00c0 222B     		cmp	r3, #34
 1298 00c2 0BD0     		beq	.L132
 1299 00c4 422B     		cmp	r3, #66
 1300 00c6 0DD0     		beq	.L133
 1301 00c8 122B     		cmp	r3, #18
 1302 00ca 03D0     		beq	.L173
 879:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1303              		.loc 1 879 0
 1304 00cc 3223     		movs	r3, #50
 1305 00ce 80F83C30 		strb	r3, [r0, #60]
 880:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1306              		.loc 1 880 0
 1307 00d2 E4E7     		b	.L130
 1308              	.L173:
 870:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1309              		.loc 1 870 0
 1310 00d4 5223     		movs	r3, #82
 1311 00d6 80F83C30 		strb	r3, [r0, #60]
 871:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
 1312              		.loc 1 871 0
 1313 00da E0E7     		b	.L130
 1314              	.L132:
 873:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1315              		.loc 1 873 0
ARM GAS  /tmp/ccubOfsv.s 			page 42


 1316 00dc 6223     		movs	r3, #98
 1317 00de 80F83C30 		strb	r3, [r0, #60]
 874:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
 1318              		.loc 1 874 0
 1319 00e2 DCE7     		b	.L130
 1320              	.L133:
 876:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1321              		.loc 1 876 0
 1322 00e4 7223     		movs	r3, #114
 1323 00e6 80F83C30 		strb	r3, [r0, #60]
 877:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 1324              		.loc 1 877 0
 1325 00ea D8E7     		b	.L130
 1326              	.LVL84:
 1327              	.L175:
 888:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 889:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check for the Timeout */
 890:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if(Timeout != HAL_MAX_DELAY)
 891:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 892:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 1328              		.loc 1 892 0
 1329 00ec 26B1     		cbz	r6, .L137
 1330              		.loc 1 892 0 is_stmt 0 discriminator 1
 1331 00ee FFF7FEFF 		bl	HAL_GetTick
 1332              	.LVL85:
 1333 00f2 C01B     		subs	r0, r0, r7
 1334 00f4 8642     		cmp	r6, r0
 1335 00f6 11D2     		bcs	.L136
 1336              	.L137:
 893:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 894:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_TIMEOUT;
 1337              		.loc 1 894 0 is_stmt 1
 1338 00f8 0320     		movs	r0, #3
 1339 00fa 84F83C00 		strb	r0, [r4, #60]
 895:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Process unlocked */
 896:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         __HAL_UNLOCK(hcan);
 1340              		.loc 1 896 0
 1341 00fe 0023     		movs	r3, #0
 1342 0100 84F83D30 		strb	r3, [r4, #61]
 897:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         return HAL_TIMEOUT;
 1343              		.loc 1 897 0
 1344 0104 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1345              	.LVL86:
 1346              	.L138:
 887:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1347              		.loc 1 887 0 discriminator 2
 1348 0106 2368     		ldr	r3, [r4]
 1349 0108 1B69     		ldr	r3, [r3, #16]
 1350 010a 13F0030F 		tst	r3, #3
 1351 010e 0CBF     		ite	eq
 1352 0110 0123     		moveq	r3, #1
 1353 0112 0023     		movne	r3, #0
 1354              	.L139:
 887:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1355              		.loc 1 887 0 is_stmt 0 discriminator 4
 1356 0114 63B1     		cbz	r3, .L174
 890:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
ARM GAS  /tmp/ccubOfsv.s 			page 43


 1357              		.loc 1 890 0 is_stmt 1
 1358 0116 B6F1FF3F 		cmp	r6, #-1
 1359 011a E7D1     		bne	.L175
 1360              	.L136:
 887:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1361              		.loc 1 887 0
 1362 011c 002D     		cmp	r5, #0
 1363 011e F2D1     		bne	.L138
 887:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1364              		.loc 1 887 0 is_stmt 0 discriminator 1
 1365 0120 2368     		ldr	r3, [r4]
 1366 0122 DB68     		ldr	r3, [r3, #12]
 1367 0124 13F0030F 		tst	r3, #3
 1368 0128 0CBF     		ite	eq
 1369 012a 0123     		moveq	r3, #1
 1370 012c 0023     		movne	r3, #0
 1371 012e F1E7     		b	.L139
 1372              	.L174:
 898:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 899:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 900:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 901:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 902:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Set RxMsg pointer */
 903:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(FIFONumber == CAN_FIFO0)
 1373              		.loc 1 903 0 is_stmt 1
 1374 0130 002D     		cmp	r5, #0
 1375 0132 67D1     		bne	.L141
 904:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 905:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pRxMsg = hcan->pRxMsg;
 1376              		.loc 1 905 0
 1377 0134 636B     		ldr	r3, [r4, #52]
 1378              	.LVL87:
 1379              	.L142:
 906:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 907:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 908:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 909:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pRxMsg = hcan->pRx1Msg;
 910:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 911:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 912:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the Id */
 913:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->IDE = (uint8_t)CAN_ID_EXT & hcan->Instance->sFIFOMailBox[FIFONumber].RIR;
 1380              		.loc 1 913 0
 1381 0136 2168     		ldr	r1, [r4]
 1382 0138 05F11B02 		add	r2, r5, #27
 1383 013c 1201     		lsls	r2, r2, #4
 1384 013e 8A58     		ldr	r2, [r1, r2]
 1385 0140 02F00402 		and	r2, r2, #4
 1386 0144 9A60     		str	r2, [r3, #8]
 914:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (pRxMsg->IDE == CAN_ID_STD)
 1387              		.loc 1 914 0
 1388 0146 002A     		cmp	r2, #0
 1389 0148 5ED1     		bne	.L143
 915:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 916:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pRxMsg->StdId = 0x000007FFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RIR >> 21U);
 1390              		.loc 1 916 0
 1391 014a 2168     		ldr	r1, [r4]
 1392 014c 05F11B02 		add	r2, r5, #27
ARM GAS  /tmp/ccubOfsv.s 			page 44


 1393 0150 1201     		lsls	r2, r2, #4
 1394 0152 8A58     		ldr	r2, [r1, r2]
 1395 0154 520D     		lsrs	r2, r2, #21
 1396 0156 1A60     		str	r2, [r3]
 1397              	.L144:
 917:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 918:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 919:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 920:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pRxMsg->ExtId = 0x1FFFFFFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RIR >> 3U);
 921:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 922:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 923:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->RTR = (uint8_t)CAN_RTR_REMOTE & hcan->Instance->sFIFOMailBox[FIFONumber].RIR;
 1398              		.loc 1 923 0
 1399 0158 2168     		ldr	r1, [r4]
 1400 015a 05F11B02 		add	r2, r5, #27
 1401 015e 1201     		lsls	r2, r2, #4
 1402 0160 8958     		ldr	r1, [r1, r2]
 1403 0162 01F00201 		and	r1, r1, #2
 1404 0166 D960     		str	r1, [r3, #12]
 924:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the DLC */
 925:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->DLC = (uint8_t)0x0FU & hcan->Instance->sFIFOMailBox[FIFONumber].RDTR;
 1405              		.loc 1 925 0
 1406 0168 2168     		ldr	r1, [r4]
 1407 016a 1144     		add	r1, r1, r2
 1408 016c 4968     		ldr	r1, [r1, #4]
 1409 016e 01F00F01 		and	r1, r1, #15
 1410 0172 1961     		str	r1, [r3, #16]
 926:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the FMI */
 927:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->FMI = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDTR >> 8U);
 1411              		.loc 1 927 0
 1412 0174 2168     		ldr	r1, [r4]
 1413 0176 0A44     		add	r2, r2, r1
 1414 0178 5268     		ldr	r2, [r2, #4]
 1415 017a C2F30722 		ubfx	r2, r2, #8, #8
 1416 017e DA61     		str	r2, [r3, #28]
 928:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the FIFONumber */
 929:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->FIFONumber = FIFONumber;
 1417              		.loc 1 929 0
 1418 0180 1D62     		str	r5, [r3, #32]
 930:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the data field */
 931:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[0] = (uint8_t)0xFFU & hcan->Instance->sFIFOMailBox[FIFONumber].RDLR;
 1419              		.loc 1 931 0
 1420 0182 2168     		ldr	r1, [r4]
 1421 0184 2A01     		lsls	r2, r5, #4
 1422 0186 1144     		add	r1, r1, r2
 1423 0188 D1F8B811 		ldr	r1, [r1, #440]
 1424 018c 1975     		strb	r1, [r3, #20]
 932:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[1] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDLR >> 8U);
 1425              		.loc 1 932 0
 1426 018e 2168     		ldr	r1, [r4]
 1427 0190 1144     		add	r1, r1, r2
 1428 0192 D1F8B811 		ldr	r1, [r1, #440]
 1429 0196 090A     		lsrs	r1, r1, #8
 1430 0198 5975     		strb	r1, [r3, #21]
 933:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[2] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDLR >> 16U);
 1431              		.loc 1 933 0
 1432 019a 2168     		ldr	r1, [r4]
ARM GAS  /tmp/ccubOfsv.s 			page 45


 1433 019c 1144     		add	r1, r1, r2
 1434 019e D1F8B811 		ldr	r1, [r1, #440]
 1435 01a2 090C     		lsrs	r1, r1, #16
 1436 01a4 9975     		strb	r1, [r3, #22]
 934:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[3] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDLR >> 24U);
 1437              		.loc 1 934 0
 1438 01a6 2168     		ldr	r1, [r4]
 1439 01a8 1144     		add	r1, r1, r2
 1440 01aa D1F8B811 		ldr	r1, [r1, #440]
 1441 01ae 090E     		lsrs	r1, r1, #24
 1442 01b0 D975     		strb	r1, [r3, #23]
 935:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[4] = (uint8_t)0xFFU & hcan->Instance->sFIFOMailBox[FIFONumber].RDHR;
 1443              		.loc 1 935 0
 1444 01b2 2168     		ldr	r1, [r4]
 1445 01b4 1144     		add	r1, r1, r2
 1446 01b6 D1F8BC11 		ldr	r1, [r1, #444]
 1447 01ba 1976     		strb	r1, [r3, #24]
 936:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[5] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDHR >> 8U);
 1448              		.loc 1 936 0
 1449 01bc 2168     		ldr	r1, [r4]
 1450 01be 1144     		add	r1, r1, r2
 1451 01c0 D1F8BC11 		ldr	r1, [r1, #444]
 1452 01c4 090A     		lsrs	r1, r1, #8
 1453 01c6 5976     		strb	r1, [r3, #25]
 937:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[6] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDHR >> 16U);
 1454              		.loc 1 937 0
 1455 01c8 2168     		ldr	r1, [r4]
 1456 01ca 1144     		add	r1, r1, r2
 1457 01cc D1F8BC11 		ldr	r1, [r1, #444]
 1458 01d0 090C     		lsrs	r1, r1, #16
 1459 01d2 9976     		strb	r1, [r3, #26]
 938:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[7] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDHR >> 24U);
 1460              		.loc 1 938 0
 1461 01d4 2168     		ldr	r1, [r4]
 1462 01d6 0A44     		add	r2, r2, r1
 1463 01d8 D2F8BC21 		ldr	r2, [r2, #444]
 1464 01dc 120E     		lsrs	r2, r2, #24
 1465 01de DA76     		strb	r2, [r3, #27]
 939:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 940:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Release the FIFO */
 941:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(FIFONumber == CAN_FIFO0)
 1466              		.loc 1 941 0
 1467 01e0 D5B9     		cbnz	r5, .L145
 942:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 943:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Release FIFO0 */
 944:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_FIFO_RELEASE(hcan, CAN_FIFO0);
 1468              		.loc 1 944 0
 1469 01e2 2368     		ldr	r3, [r4]
 1470              	.LVL88:
 1471 01e4 2022     		movs	r2, #32
 1472 01e6 DA60     		str	r2, [r3, #12]
 1473              	.L146:
 945:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 946:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 947:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 948:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Release FIFO1 */
 949:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_FIFO_RELEASE(hcan, CAN_FIFO1);
ARM GAS  /tmp/ccubOfsv.s 			page 46


 950:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 951:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 952:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
 953:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (FIFONumber == CAN_FIFO0)
 1474              		.loc 1 953 0
 1475 01e8 4DBB     		cbnz	r5, .L147
 954:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 955:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
 1476              		.loc 1 955 0
 1477 01ea 94F83C30 		ldrb	r3, [r4, #60]	@ zero_extendqisi2
 1478 01ee DBB2     		uxtb	r3, r3
 1479 01f0 622B     		cmp	r3, #98
 1480 01f2 1CD0     		beq	.L149
 1481 01f4 722B     		cmp	r3, #114
 1482 01f6 1ED0     		beq	.L150
 1483 01f8 422B     		cmp	r3, #66
 1484 01fa 11D0     		beq	.L176
 956:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 957:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
 958:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX;
 959:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 960:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 961:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX1;
 962:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 963:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 964:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
 965:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 966:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX0 */
 967:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_READY;
 1485              		.loc 1 967 0
 1486 01fc 0123     		movs	r3, #1
 1487 01fe 84F83C30 		strb	r3, [r4, #60]
 968:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1488              		.loc 1 968 0
 1489 0202 10E0     		b	.L152
 1490              	.LVL89:
 1491              	.L141:
 909:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1492              		.loc 1 909 0
 1493 0204 A36B     		ldr	r3, [r4, #56]
 1494              	.LVL90:
 1495 0206 96E7     		b	.L142
 1496              	.L143:
 920:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1497              		.loc 1 920 0
 1498 0208 2168     		ldr	r1, [r4]
 1499 020a 05F11B02 		add	r2, r5, #27
 1500 020e 1201     		lsls	r2, r2, #4
 1501 0210 8A58     		ldr	r2, [r1, r2]
 1502 0212 D208     		lsrs	r2, r2, #3
 1503 0214 5A60     		str	r2, [r3, #4]
 1504 0216 9FE7     		b	.L144
 1505              	.L145:
 949:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1506              		.loc 1 949 0
 1507 0218 2368     		ldr	r3, [r4]
 1508              	.LVL91:
ARM GAS  /tmp/ccubOfsv.s 			page 47


 1509 021a 2022     		movs	r2, #32
 1510 021c 1A61     		str	r2, [r3, #16]
 1511 021e E3E7     		b	.L146
 1512              	.L176:
 958:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1513              		.loc 1 958 0
 1514 0220 1223     		movs	r3, #18
 1515 0222 84F83C30 		strb	r3, [r4, #60]
 1516              	.L152:
 969:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 970:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 971:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 972:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 973:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
 974:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 975:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
 976:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX;
 977:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 978:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 979:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0;
 980:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 981:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 982:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
 983:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 984:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX1 */
 985:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_READY;
 986:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 987:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 988:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 989:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 990:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Process unlocked */
 991:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_UNLOCK(hcan);
 1517              		.loc 1 991 0
 1518 0226 0020     		movs	r0, #0
 1519 0228 84F83D00 		strb	r0, [r4, #61]
 992:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 993:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return function status */
 994:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
 1520              		.loc 1 994 0
 1521 022c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1522              	.LVL92:
 1523              	.L149:
 961:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1524              		.loc 1 961 0
 1525 022e 3223     		movs	r3, #50
 1526 0230 84F83C30 		strb	r3, [r4, #60]
 962:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 1527              		.loc 1 962 0
 1528 0234 F7E7     		b	.L152
 1529              	.L150:
 964:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1530              		.loc 1 964 0
 1531 0236 5223     		movs	r3, #82
 1532 0238 84F83C30 		strb	r3, [r4, #60]
 965:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX0 */
 1533              		.loc 1 965 0
 1534 023c F3E7     		b	.L152
ARM GAS  /tmp/ccubOfsv.s 			page 48


 1535              	.L147:
 973:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1536              		.loc 1 973 0
 1537 023e 94F83C30 		ldrb	r3, [r4, #60]	@ zero_extendqisi2
 1538 0242 DBB2     		uxtb	r3, r3
 1539 0244 622B     		cmp	r3, #98
 1540 0246 0BD0     		beq	.L154
 1541 0248 722B     		cmp	r3, #114
 1542 024a 0DD0     		beq	.L155
 1543 024c 522B     		cmp	r3, #82
 1544 024e 03D0     		beq	.L177
 985:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1545              		.loc 1 985 0
 1546 0250 0123     		movs	r3, #1
 1547 0252 84F83C30 		strb	r3, [r4, #60]
 986:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1548              		.loc 1 986 0
 1549 0256 E6E7     		b	.L152
 1550              	.L177:
 976:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1551              		.loc 1 976 0
 1552 0258 1223     		movs	r3, #18
 1553 025a 84F83C30 		strb	r3, [r4, #60]
 977:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 1554              		.loc 1 977 0
 1555 025e E2E7     		b	.L152
 1556              	.L154:
 979:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1557              		.loc 1 979 0
 1558 0260 2223     		movs	r3, #34
 1559 0262 84F83C30 		strb	r3, [r4, #60]
 980:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 1560              		.loc 1 980 0
 1561 0266 DEE7     		b	.L152
 1562              	.L155:
 982:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1563              		.loc 1 982 0
 1564 0268 4223     		movs	r3, #66
 1565 026a 84F83C30 		strb	r3, [r4, #60]
 983:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX1 */
 1566              		.loc 1 983 0
 1567 026e DAE7     		b	.L152
 1568              	.LVL93:
 1569              	.L157:
 831:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1570              		.loc 1 831 0
 1571 0270 0220     		movs	r0, #2
 1572              	.LVL94:
 1573 0272 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1574              	.LVL95:
 1575              	.L158:
 1576 0274 0220     		movs	r0, #2
 1577              	.LVL96:
 1578 0276 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1579              	.LVL97:
 1580              	.L159:
 1581 0278 0220     		movs	r0, #2
ARM GAS  /tmp/ccubOfsv.s 			page 49


 1582              	.LVL98:
 1583 027a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1584              	.LVL99:
 1585              	.L160:
 1586 027c 0220     		movs	r0, #2
 1587              	.LVL100:
 1588 027e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1589              	.LVL101:
 1590              	.L161:
 840:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1591              		.loc 1 840 0
 1592 0280 0220     		movs	r0, #2
 1593              	.LVL102:
 1594 0282 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1595              	.LVL103:
 1596              	.L162:
 1597 0284 0220     		movs	r0, #2
 1598              	.LVL104:
 1599 0286 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1600              	.LVL105:
 1601              	.L163:
 1602 0288 0220     		movs	r0, #2
 1603              	.LVL106:
 1604 028a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1605              	.LVL107:
 1606              	.L165:
 844:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1607              		.loc 1 844 0
 1608 028c 0220     		movs	r0, #2
 1609              	.LVL108:
 995:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 1610              		.loc 1 995 0
 1611 028e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1612              		.cfi_endproc
 1613              	.LFE71:
 1615              		.section	.text.HAL_CAN_Receive_IT,"ax",%progbits
 1616              		.align	1
 1617              		.global	HAL_CAN_Receive_IT
 1618              		.syntax unified
 1619              		.thumb
 1620              		.thumb_func
 1621              		.fpu softvfp
 1623              	HAL_CAN_Receive_IT:
 1624              	.LFB72:
 996:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 997:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 998:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Receives a correct CAN frame.
 999:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1000:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
1001:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  FIFONumber: Specify the FIFO number    
1002:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
1003:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1004:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Receive_IT(CAN_HandleTypeDef* hcan, uint8_t FIFONumber)
1005:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 1625              		.loc 1 1005 0
 1626              		.cfi_startproc
 1627              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccubOfsv.s 			page 50


 1628              		@ frame_needed = 0, uses_anonymous_args = 0
 1629              		@ link register save eliminated.
 1630              	.LVL109:
1006:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
1007:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
1008:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1009:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check if CAN state is not busy for RX FIFO0 */
1010:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((FIFONumber == CAN_FIFO0) && ((hcan->State == HAL_CAN_STATE_BUSY_RX0) ||         \
 1631              		.loc 1 1010 0
 1632 0000 0B46     		mov	r3, r1
 1633 0002 99B9     		cbnz	r1, .L179
 1634              		.loc 1 1010 0 is_stmt 0 discriminator 1
 1635 0004 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 1636 0008 D2B2     		uxtb	r2, r2
 1637 000a 222A     		cmp	r2, #34
 1638 000c 7CD0     		beq	.L193
1011:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1639              		.loc 1 1011 0 is_stmt 1 discriminator 2
 1640 000e 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 1641 0012 D2B2     		uxtb	r2, r2
1010:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1642              		.loc 1 1010 0 discriminator 2
 1643 0014 422A     		cmp	r2, #66
 1644 0016 79D0     		beq	.L194
1012:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1645              		.loc 1 1012 0
 1646 0018 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 1647 001c D2B2     		uxtb	r2, r2
1011:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1648              		.loc 1 1011 0
 1649 001e 622A     		cmp	r2, #98
 1650 0020 76D0     		beq	.L195
1013:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1651              		.loc 1 1013 0
 1652 0022 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 1653 0026 D2B2     		uxtb	r2, r2
1012:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1654              		.loc 1 1012 0
 1655 0028 722A     		cmp	r2, #114
 1656 002a 73D0     		beq	.L196
 1657              	.L179:
1014:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1015:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_BUSY;
1016:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1017:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1018:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check if CAN state is not busy for RX FIFO1 */
1019:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((FIFONumber == CAN_FIFO1) && ((hcan->State == HAL_CAN_STATE_BUSY_RX1) ||         \
 1658              		.loc 1 1019 0
 1659 002c 012B     		cmp	r3, #1
 1660 002e 16D0     		beq	.L208
 1661              	.L181:
1020:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
1021:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
1022:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
1023:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1024:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_BUSY;
1025:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
ARM GAS  /tmp/ccubOfsv.s 			page 51


1026:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1027:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Process locked */
1028:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_LOCK(hcan);
 1662              		.loc 1 1028 0
 1663 0030 90F83D20 		ldrb	r2, [r0, #61]	@ zero_extendqisi2
 1664 0034 012A     		cmp	r2, #1
 1665 0036 75D0     		beq	.L201
1005:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
 1666              		.loc 1 1005 0 discriminator 2
 1667 0038 10B4     		push	{r4}
 1668              	.LCFI13:
 1669              		.cfi_def_cfa_offset 4
 1670              		.cfi_offset 4, -4
 1671              		.loc 1 1028 0 discriminator 2
 1672 003a 0122     		movs	r2, #1
 1673 003c 80F83D20 		strb	r2, [r0, #61]
1029:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1030:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
1031:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(FIFONumber == CAN_FIFO0)
 1674              		.loc 1 1031 0 discriminator 2
 1675 0040 002B     		cmp	r3, #0
 1676 0042 41D1     		bne	.L182
1032:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1033:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
 1677              		.loc 1 1033 0
 1678 0044 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 1679 0048 D2B2     		uxtb	r2, r2
 1680 004a 322A     		cmp	r2, #50
 1681 004c 34D0     		beq	.L184
 1682 004e 522A     		cmp	r2, #82
 1683 0050 36D0     		beq	.L185
 1684 0052 122A     		cmp	r2, #18
 1685 0054 19D0     		beq	.L209
1034:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1035:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX):
1036:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
1037:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1038:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX1):
1039:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
1040:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1041:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
1042:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
1043:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1044:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
1045:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0;
 1686              		.loc 1 1045 0
 1687 0056 2222     		movs	r2, #34
 1688 0058 80F83C20 		strb	r2, [r0, #60]
1046:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1689              		.loc 1 1046 0
 1690 005c 18E0     		b	.L187
 1691              	.L208:
 1692              	.LCFI14:
 1693              		.cfi_def_cfa_offset 0
 1694              		.cfi_restore 4
1019:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 1695              		.loc 1 1019 0 discriminator 1
ARM GAS  /tmp/ccubOfsv.s 			page 52


 1696 005e 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 1697 0062 D2B2     		uxtb	r2, r2
 1698 0064 322A     		cmp	r2, #50
 1699 0066 57D0     		beq	.L197
1020:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1700              		.loc 1 1020 0 discriminator 2
 1701 0068 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 1702 006c D2B2     		uxtb	r2, r2
1019:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 1703              		.loc 1 1019 0 discriminator 2
 1704 006e 522A     		cmp	r2, #82
 1705 0070 54D0     		beq	.L198
1021:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1706              		.loc 1 1021 0
 1707 0072 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 1708 0076 D2B2     		uxtb	r2, r2
1020:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1709              		.loc 1 1020 0
 1710 0078 622A     		cmp	r2, #98
 1711 007a 51D0     		beq	.L199
1022:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1712              		.loc 1 1022 0
 1713 007c 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 1714 0080 D2B2     		uxtb	r2, r2
1021:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1715              		.loc 1 1021 0
 1716 0082 722A     		cmp	r2, #114
 1717 0084 D4D1     		bne	.L181
1024:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1718              		.loc 1 1024 0
 1719 0086 0220     		movs	r0, #2
 1720              	.LVL110:
 1721 0088 7047     		bx	lr
 1722              	.LVL111:
 1723              	.L209:
 1724              	.LCFI15:
 1725              		.cfi_def_cfa_offset 4
 1726              		.cfi_offset 4, -4
1036:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1727              		.loc 1 1036 0
 1728 008a 4222     		movs	r2, #66
 1729 008c 80F83C20 		strb	r2, [r0, #60]
 1730              	.L187:
1047:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1048:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1049:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
1050:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1051:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
1052:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1053:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX):
1054:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
1055:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1056:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
1057:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
1058:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1059:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
1060:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
ARM GAS  /tmp/ccubOfsv.s 			page 53


1061:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1062:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
1063:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX1;
1064:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1065:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1066:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1067:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Set CAN error code to none */
1068:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 1731              		.loc 1 1068 0
 1732 0090 0021     		movs	r1, #0
 1733              	.LVL112:
 1734 0092 0164     		str	r1, [r0, #64]
1069:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1070:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1071:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Enable interrupts: */
1072:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /*  - Enable Error warning Interrupt */
1073:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /*  - Enable Error passive Interrupt */
1074:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /*  - Enable Bus-off Interrupt */
1075:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /*  - Enable Last error code Interrupt */
1076:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /*  - Enable Error Interrupt */
1077:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /*  - Enable Transmit mailbox empty Interrupt */
1078:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_CAN_ENABLE_IT(hcan, CAN_IT_EWG |
 1735              		.loc 1 1078 0
 1736 0094 0468     		ldr	r4, [r0]
 1737 0096 6269     		ldr	r2, [r4, #20]
 1738 0098 42F40F42 		orr	r2, r2, #36608
 1739 009c 42F00102 		orr	r2, r2, #1
 1740 00a0 6261     		str	r2, [r4, #20]
1079:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                             CAN_IT_EPV |
1080:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                             CAN_IT_BOF |
1081:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                             CAN_IT_LEC |
1082:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                             CAN_IT_ERR |
1083:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                             CAN_IT_TME  );
1084:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1085:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    /* Process unlocked */
1086:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    __HAL_UNLOCK(hcan);
 1741              		.loc 1 1086 0
 1742 00a2 80F83D10 		strb	r1, [r0, #61]
1087:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1088:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(FIFONumber == CAN_FIFO0)
 1743              		.loc 1 1088 0
 1744 00a6 43B3     		cbz	r3, .L210
1089:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1090:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Enable FIFO 0 overrun and message pending Interrupt */
1091:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, CAN_IT_FOV0 | CAN_IT_FMP0);
1092:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1093:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
1094:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1095:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Enable FIFO 1 overrun and message pending Interrupt */
1096:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, CAN_IT_FOV1 | CAN_IT_FMP1);
 1745              		.loc 1 1096 0
 1746 00a8 0268     		ldr	r2, [r0]
 1747 00aa 5369     		ldr	r3, [r2, #20]
 1748 00ac 43F05003 		orr	r3, r3, #80
 1749 00b0 5361     		str	r3, [r2, #20]
1097:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1098:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /tmp/ccubOfsv.s 			page 54


1099:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return function status */
1100:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
 1750              		.loc 1 1100 0
 1751 00b2 0020     		movs	r0, #0
 1752              	.LVL113:
 1753              	.L180:
1101:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 1754              		.loc 1 1101 0
 1755 00b4 10BC     		pop	{r4}
 1756              	.LCFI16:
 1757              		.cfi_remember_state
 1758              		.cfi_restore 4
 1759              		.cfi_def_cfa_offset 0
 1760 00b6 7047     		bx	lr
 1761              	.LVL114:
 1762              	.L184:
 1763              	.LCFI17:
 1764              		.cfi_restore_state
1039:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1765              		.loc 1 1039 0
 1766 00b8 6222     		movs	r2, #98
 1767 00ba 80F83C20 		strb	r2, [r0, #60]
1040:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
 1768              		.loc 1 1040 0
 1769 00be E7E7     		b	.L187
 1770              	.L185:
1042:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1771              		.loc 1 1042 0
 1772 00c0 7222     		movs	r2, #114
 1773 00c2 80F83C20 		strb	r2, [r0, #60]
1043:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 1774              		.loc 1 1043 0
 1775 00c6 E3E7     		b	.L187
 1776              	.L182:
1051:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1777              		.loc 1 1051 0
 1778 00c8 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 1779 00cc D2B2     		uxtb	r2, r2
 1780 00ce 222A     		cmp	r2, #34
 1781 00d0 0BD0     		beq	.L189
 1782 00d2 422A     		cmp	r2, #66
 1783 00d4 0DD0     		beq	.L190
 1784 00d6 122A     		cmp	r2, #18
 1785 00d8 03D0     		beq	.L211
1063:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1786              		.loc 1 1063 0
 1787 00da 3222     		movs	r2, #50
 1788 00dc 80F83C20 		strb	r2, [r0, #60]
1064:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1789              		.loc 1 1064 0
 1790 00e0 D6E7     		b	.L187
 1791              	.L211:
1054:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1792              		.loc 1 1054 0
 1793 00e2 5222     		movs	r2, #82
 1794 00e4 80F83C20 		strb	r2, [r0, #60]
1055:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
ARM GAS  /tmp/ccubOfsv.s 			page 55


 1795              		.loc 1 1055 0
 1796 00e8 D2E7     		b	.L187
 1797              	.L189:
1057:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1798              		.loc 1 1057 0
 1799 00ea 6222     		movs	r2, #98
 1800 00ec 80F83C20 		strb	r2, [r0, #60]
1058:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
 1801              		.loc 1 1058 0
 1802 00f0 CEE7     		b	.L187
 1803              	.L190:
1060:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1804              		.loc 1 1060 0
 1805 00f2 7222     		movs	r2, #114
 1806 00f4 80F83C20 		strb	r2, [r0, #60]
1061:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 1807              		.loc 1 1061 0
 1808 00f8 CAE7     		b	.L187
 1809              	.LVL115:
 1810              	.L210:
1091:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1811              		.loc 1 1091 0
 1812 00fa 0268     		ldr	r2, [r0]
 1813 00fc 5369     		ldr	r3, [r2, #20]
 1814 00fe 43F00A03 		orr	r3, r3, #10
 1815 0102 5361     		str	r3, [r2, #20]
1100:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 1816              		.loc 1 1100 0
 1817 0104 0846     		mov	r0, r1
 1818              	.LVL116:
 1819 0106 D5E7     		b	.L180
 1820              	.LVL117:
 1821              	.L193:
 1822              	.LCFI18:
 1823              		.cfi_def_cfa_offset 0
 1824              		.cfi_restore 4
1015:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1825              		.loc 1 1015 0
 1826 0108 0220     		movs	r0, #2
 1827              	.LVL118:
 1828 010a 7047     		bx	lr
 1829              	.LVL119:
 1830              	.L194:
 1831 010c 0220     		movs	r0, #2
 1832              	.LVL120:
 1833 010e 7047     		bx	lr
 1834              	.LVL121:
 1835              	.L195:
 1836 0110 0220     		movs	r0, #2
 1837              	.LVL122:
 1838 0112 7047     		bx	lr
 1839              	.LVL123:
 1840              	.L196:
 1841 0114 0220     		movs	r0, #2
 1842              	.LVL124:
 1843 0116 7047     		bx	lr
 1844              	.LVL125:
ARM GAS  /tmp/ccubOfsv.s 			page 56


 1845              	.L197:
1024:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1846              		.loc 1 1024 0
 1847 0118 0220     		movs	r0, #2
 1848              	.LVL126:
 1849 011a 7047     		bx	lr
 1850              	.LVL127:
 1851              	.L198:
 1852 011c 0220     		movs	r0, #2
 1853              	.LVL128:
 1854 011e 7047     		bx	lr
 1855              	.LVL129:
 1856              	.L199:
 1857 0120 0220     		movs	r0, #2
 1858              	.LVL130:
 1859 0122 7047     		bx	lr
 1860              	.LVL131:
 1861              	.L201:
1028:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1862              		.loc 1 1028 0
 1863 0124 0220     		movs	r0, #2
 1864              	.LVL132:
 1865 0126 7047     		bx	lr
 1866              		.cfi_endproc
 1867              	.LFE72:
 1869              		.section	.text.HAL_CAN_Sleep,"ax",%progbits
 1870              		.align	1
 1871              		.global	HAL_CAN_Sleep
 1872              		.syntax unified
 1873              		.thumb
 1874              		.thumb_func
 1875              		.fpu softvfp
 1877              	HAL_CAN_Sleep:
 1878              	.LFB73:
1102:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1103:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1104:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Enters the Sleep (low power) mode.
1105:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1106:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1107:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status.
1108:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1109:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Sleep(CAN_HandleTypeDef* hcan)
1110:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 1879              		.loc 1 1110 0
 1880              		.cfi_startproc
 1881              		@ args = 0, pretend = 0, frame = 0
 1882              		@ frame_needed = 0, uses_anonymous_args = 0
 1883              	.LVL133:
 1884 0000 38B5     		push	{r3, r4, r5, lr}
 1885              	.LCFI19:
 1886              		.cfi_def_cfa_offset 16
 1887              		.cfi_offset 3, -16
 1888              		.cfi_offset 4, -12
 1889              		.cfi_offset 5, -8
 1890              		.cfi_offset 14, -4
 1891              	.LVL134:
1111:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart = 0U;
ARM GAS  /tmp/ccubOfsv.s 			page 57


1112:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    
1113:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Process locked */
1114:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_LOCK(hcan);
 1892              		.loc 1 1114 0
 1893 0002 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1894 0006 012B     		cmp	r3, #1
 1895 0008 3BD0     		beq	.L218
 1896              		.loc 1 1114 0 is_stmt 0 discriminator 2
 1897 000a 0123     		movs	r3, #1
 1898 000c 80F83D30 		strb	r3, [r0, #61]
1115:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1116:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
1117:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_BUSY; 
 1899              		.loc 1 1117 0 is_stmt 1 discriminator 2
 1900 0010 0223     		movs	r3, #2
 1901 0012 80F83C30 		strb	r3, [r0, #60]
1118:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
1119:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Request Sleep mode */
1120:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   MODIFY_REG(hcan->Instance->MCR,
 1902              		.loc 1 1120 0 discriminator 2
 1903 0016 0268     		ldr	r2, [r0]
 1904 0018 1368     		ldr	r3, [r2]
 1905 001a 23F00303 		bic	r3, r3, #3
 1906 001e 43F00203 		orr	r3, r3, #2
 1907 0022 1360     		str	r3, [r2]
1121:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              CAN_MCR_INRQ       ,
1122:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              CAN_MCR_SLEEP       );
1123:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1124:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Sleep mode status */
1125:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (HAL_IS_BIT_CLR(hcan->Instance->MSR, CAN_MSR_SLAK) ||
 1908              		.loc 1 1125 0 discriminator 2
 1909 0024 0368     		ldr	r3, [r0]
 1910 0026 5A68     		ldr	r2, [r3, #4]
 1911 0028 12F0020F 		tst	r2, #2
 1912 002c 03D0     		beq	.L214
1126:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK)   )
 1913              		.loc 1 1126 0 discriminator 1
 1914 002e 5B68     		ldr	r3, [r3, #4]
1125:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK)   )
 1915              		.loc 1 1125 0 discriminator 1
 1916 0030 13F0010F 		tst	r3, #1
 1917 0034 04D0     		beq	.L215
 1918              	.L214:
1127:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1128:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Process unlocked */
1129:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_UNLOCK(hcan);
 1919              		.loc 1 1129 0
 1920 0036 0023     		movs	r3, #0
 1921 0038 80F83D30 		strb	r3, [r0, #61]
1130:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1131:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
1132:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
 1922              		.loc 1 1132 0
 1923 003c 0120     		movs	r0, #1
 1924              	.LVL135:
 1925 003e 38BD     		pop	{r3, r4, r5, pc}
 1926              	.LVL136:
ARM GAS  /tmp/ccubOfsv.s 			page 58


 1927              	.L215:
 1928 0040 0446     		mov	r4, r0
1133:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1134:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1135:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get tick */
1136:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tickstart = HAL_GetTick();
 1929              		.loc 1 1136 0
 1930 0042 FFF7FEFF 		bl	HAL_GetTick
 1931              	.LVL137:
 1932 0046 0546     		mov	r5, r0
 1933              	.LVL138:
1137:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1138:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Wait the acknowledge */
1139:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   while (HAL_IS_BIT_CLR(hcan->Instance->MSR, CAN_MSR_SLAK) ||
 1934              		.loc 1 1139 0
 1935 0048 04E0     		b	.L216
 1936              	.LVL139:
 1937              	.L217:
1140:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****          HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK))
1141:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1142:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if((HAL_GetTick()-tickstart) > CAN_TIMEOUT_VALUE)
 1938              		.loc 1 1142 0
 1939 004a FFF7FEFF 		bl	HAL_GetTick
 1940              	.LVL140:
 1941 004e 401B     		subs	r0, r0, r5
 1942 0050 0A28     		cmp	r0, #10
 1943 0052 0FD8     		bhi	.L220
 1944              	.L216:
1139:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****          HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK))
 1945              		.loc 1 1139 0
 1946 0054 2368     		ldr	r3, [r4]
 1947 0056 5A68     		ldr	r2, [r3, #4]
 1948 0058 12F0020F 		tst	r2, #2
 1949 005c F5D0     		beq	.L217
1140:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****          HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK))
 1950              		.loc 1 1140 0 discriminator 1
 1951 005e 5B68     		ldr	r3, [r3, #4]
1139:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****          HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK))
 1952              		.loc 1 1139 0 discriminator 1
 1953 0060 13F0010F 		tst	r3, #1
 1954 0064 F1D1     		bne	.L217
1143:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1144:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_TIMEOUT;
1145:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1146:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Process unlocked */
1147:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       __HAL_UNLOCK(hcan);
1148:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1149:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       return HAL_TIMEOUT;
1150:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1151:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1152:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1153:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
1154:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_READY;
 1955              		.loc 1 1154 0
 1956 0066 0123     		movs	r3, #1
 1957 0068 84F83C30 		strb	r3, [r4, #60]
1155:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
ARM GAS  /tmp/ccubOfsv.s 			page 59


1156:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Process unlocked */
1157:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_UNLOCK(hcan);
 1958              		.loc 1 1157 0
 1959 006c 0020     		movs	r0, #0
 1960 006e 84F83D00 		strb	r0, [r4, #61]
1158:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1159:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return function status */
1160:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
 1961              		.loc 1 1160 0
 1962 0072 38BD     		pop	{r3, r4, r5, pc}
 1963              	.LVL141:
 1964              	.L220:
1144:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1965              		.loc 1 1144 0
 1966 0074 0320     		movs	r0, #3
 1967 0076 84F83C00 		strb	r0, [r4, #60]
1147:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1968              		.loc 1 1147 0
 1969 007a 0023     		movs	r3, #0
 1970 007c 84F83D30 		strb	r3, [r4, #61]
1149:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1971              		.loc 1 1149 0
 1972 0080 38BD     		pop	{r3, r4, r5, pc}
 1973              	.LVL142:
 1974              	.L218:
1114:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 1975              		.loc 1 1114 0
 1976 0082 0220     		movs	r0, #2
 1977              	.LVL143:
1161:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 1978              		.loc 1 1161 0
 1979 0084 38BD     		pop	{r3, r4, r5, pc}
 1980              		.cfi_endproc
 1981              	.LFE73:
 1983              		.section	.text.HAL_CAN_WakeUp,"ax",%progbits
 1984              		.align	1
 1985              		.global	HAL_CAN_WakeUp
 1986              		.syntax unified
 1987              		.thumb
 1988              		.thumb_func
 1989              		.fpu softvfp
 1991              	HAL_CAN_WakeUp:
 1992              	.LFB74:
1162:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1163:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1164:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Wakes up the CAN peripheral from sleep mode, after that the CAN peripheral
1165:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         is in the normal mode.
1166:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1167:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1168:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status.
1169:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1170:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_WakeUp(CAN_HandleTypeDef* hcan)
1171:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 1993              		.loc 1 1171 0
 1994              		.cfi_startproc
 1995              		@ args = 0, pretend = 0, frame = 0
 1996              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccubOfsv.s 			page 60


 1997              	.LVL144:
 1998 0000 38B5     		push	{r3, r4, r5, lr}
 1999              	.LCFI20:
 2000              		.cfi_def_cfa_offset 16
 2001              		.cfi_offset 3, -16
 2002              		.cfi_offset 4, -12
 2003              		.cfi_offset 5, -8
 2004              		.cfi_offset 14, -4
 2005              	.LVL145:
1172:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart = 0U;
1173:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
1174:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Process locked */
1175:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_LOCK(hcan);
 2006              		.loc 1 1175 0
 2007 0002 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 2008 0006 012B     		cmp	r3, #1
 2009 0008 01D1     		bne	.L228
 2010 000a 0220     		movs	r0, #2
 2011              	.LVL146:
1176:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1177:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
1178:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_BUSY;  
1179:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  
1180:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Wake up request */
1181:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
1182:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
1183:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get timeout */
1184:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tickstart = HAL_GetTick();   
1185:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1186:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Sleep mode status */
1187:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   while((hcan->Instance->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)
1188:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1189:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if((HAL_GetTick()-tickstart) > CAN_TIMEOUT_VALUE)
1190:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1191:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->State= HAL_CAN_STATE_TIMEOUT;
1192:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Process unlocked */
1193:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       __HAL_UNLOCK(hcan);
1194:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       return HAL_TIMEOUT;
1195:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1196:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1197:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_SLAK))
1198:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1199:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Process unlocked */
1200:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_UNLOCK(hcan);
1201:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1202:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
1203:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
1204:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1205:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1206:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
1207:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_READY; 
1208:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1209:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Process unlocked */
1210:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_UNLOCK(hcan);
1211:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1212:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return function status */
1213:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
ARM GAS  /tmp/ccubOfsv.s 			page 61


1214:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 2012              		.loc 1 1214 0
 2013 000c 38BD     		pop	{r3, r4, r5, pc}
 2014              	.LVL147:
 2015              	.L228:
 2016 000e 0446     		mov	r4, r0
1175:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 2017              		.loc 1 1175 0 discriminator 2
 2018 0010 0123     		movs	r3, #1
 2019 0012 80F83D30 		strb	r3, [r0, #61]
1178:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  
 2020              		.loc 1 1178 0 discriminator 2
 2021 0016 0223     		movs	r3, #2
 2022 0018 80F83C30 		strb	r3, [r0, #60]
1181:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 2023              		.loc 1 1181 0 discriminator 2
 2024 001c 0268     		ldr	r2, [r0]
 2025 001e 1368     		ldr	r3, [r2]
 2026 0020 23F00203 		bic	r3, r3, #2
 2027 0024 1360     		str	r3, [r2]
1184:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 2028              		.loc 1 1184 0 discriminator 2
 2029 0026 FFF7FEFF 		bl	HAL_GetTick
 2030              	.LVL148:
 2031 002a 0546     		mov	r5, r0
 2032              	.LVL149:
 2033              	.L223:
1187:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2034              		.loc 1 1187 0
 2035 002c 2368     		ldr	r3, [r4]
 2036 002e 5A68     		ldr	r2, [r3, #4]
 2037 0030 12F0020F 		tst	r2, #2
 2038 0034 0BD0     		beq	.L229
1189:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2039              		.loc 1 1189 0
 2040 0036 FFF7FEFF 		bl	HAL_GetTick
 2041              	.LVL150:
 2042 003a 401B     		subs	r0, r0, r5
 2043 003c 0A28     		cmp	r0, #10
 2044 003e F5D9     		bls	.L223
1191:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Process unlocked */
 2045              		.loc 1 1191 0
 2046 0040 0320     		movs	r0, #3
 2047 0042 84F83C00 		strb	r0, [r4, #60]
1193:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       return HAL_TIMEOUT;
 2048              		.loc 1 1193 0
 2049 0046 0023     		movs	r3, #0
 2050 0048 84F83D30 		strb	r3, [r4, #61]
1194:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2051              		.loc 1 1194 0
 2052 004c 38BD     		pop	{r3, r4, r5, pc}
 2053              	.LVL151:
 2054              	.L229:
1197:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2055              		.loc 1 1197 0
 2056 004e 5B68     		ldr	r3, [r3, #4]
 2057 0050 13F0020F 		tst	r3, #2
ARM GAS  /tmp/ccubOfsv.s 			page 62


 2058 0054 06D1     		bne	.L230
1207:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 2059              		.loc 1 1207 0
 2060 0056 0123     		movs	r3, #1
 2061 0058 84F83C30 		strb	r3, [r4, #60]
1210:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 2062              		.loc 1 1210 0
 2063 005c 0020     		movs	r0, #0
 2064 005e 84F83D00 		strb	r0, [r4, #61]
1213:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 2065              		.loc 1 1213 0
 2066 0062 38BD     		pop	{r3, r4, r5, pc}
 2067              	.LVL152:
 2068              	.L230:
1200:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2069              		.loc 1 1200 0
 2070 0064 0023     		movs	r3, #0
 2071 0066 84F83D30 		strb	r3, [r4, #61]
1203:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2072              		.loc 1 1203 0
 2073 006a 0120     		movs	r0, #1
 2074 006c 38BD     		pop	{r3, r4, r5, pc}
 2075              		.cfi_endproc
 2076              	.LFE74:
 2078              		.section	.text.HAL_CAN_TxCpltCallback,"ax",%progbits
 2079              		.align	1
 2080              		.weak	HAL_CAN_TxCpltCallback
 2081              		.syntax unified
 2082              		.thumb
 2083              		.thumb_func
 2084              		.fpu softvfp
 2086              	HAL_CAN_TxCpltCallback:
 2087              	.LFB76:
1215:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1216:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1217:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Handles CAN interrupt request  
1218:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1219:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1220:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
1221:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1222:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** void HAL_CAN_IRQHandler(CAN_HandleTypeDef* hcan)
1223:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1224:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tmp1 = 0U, tmp2 = 0U, tmp3 = 0U;
1225:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
1226:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1227:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Overrun flag for FIFO0 */
1228:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp1 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_FOV0);
1229:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FOV0);
1230:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((tmp1 != 0U) && tmp2)
1231:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1232:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set CAN error code to FOV0 error */
1233:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     errorcode |= HAL_CAN_ERROR_FOV0;
1234:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1235:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Clear FIFO0 Overrun Flag */
1236:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV0);
1237:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1238:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /tmp/ccubOfsv.s 			page 63


1239:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Overrun flag for FIFO1 */
1240:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp1 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_FOV1);
1241:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FOV1);
1242:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((tmp1 != 0U) && tmp2)
1243:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1244:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set CAN error code to FOV1 error */
1245:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     errorcode |= HAL_CAN_ERROR_FOV1;
1246:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1247:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Clear FIFO1 Overrun Flag */
1248:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV1);
1249:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1250:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1251:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check End of transmission flag */
1252:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_TME))
1253:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1254:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check Transmit request completion status */
1255:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tmp1 = __HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_0);
1256:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tmp2 = __HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_1);
1257:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tmp3 = __HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_2);
1258:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if(tmp1 || tmp2 || tmp3)  
1259:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1260:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       tmp1 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK0);
1261:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       tmp2 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK1);
1262:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       tmp3 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK2);
1263:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check Transmit success */
1264:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if((tmp1) || (tmp2) || (tmp3))
1265:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1266:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Call transmit function */
1267:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         CAN_Transmit_IT(hcan);
1268:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1269:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       else /* Transmit failure */
1270:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1271:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Set CAN error code to TXFAIL error */
1272:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_TXFAIL;
1273:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1274:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1275:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Clear transmission status flags (RQCPx and TXOKx) */
1276:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_RQCP0  | CAN_TSR_RQCP1  | CAN_TSR_RQCP2 | \
1277:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    CAN_FLAG_TXOK0 | CAN_FLAG_TXOK1 | CAN_FLAG_TXOK2);
1278:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1279:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1280:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1281:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp1 = __HAL_CAN_MSG_PENDING(hcan, CAN_FIFO0);
1282:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FMP0);
1283:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check End of reception flag for FIFO0 */
1284:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((tmp1 != 0U) && tmp2)
1285:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1286:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Call receive function */
1287:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CAN_Receive_IT(hcan, CAN_FIFO0);
1288:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1289:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1290:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp1 = __HAL_CAN_MSG_PENDING(hcan, CAN_FIFO1);
1291:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FMP1);
1292:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check End of reception flag for FIFO1 */
1293:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((tmp1 != 0U) && tmp2)
1294:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1295:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Call receive function */
ARM GAS  /tmp/ccubOfsv.s 			page 64


1296:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CAN_Receive_IT(hcan, CAN_FIFO1);
1297:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1298:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1299:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Set error code in handle */
1300:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->ErrorCode |= errorcode;
1301:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1302:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp1 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_EWG);
1303:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_EWG);
1304:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp3 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR);
1305:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Error Warning Flag */
1306:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(tmp1 && tmp2 && tmp3)
1307:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1308:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set CAN error code to EWG error */
1309:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_EWG;
1310:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* No need for clear of Error Warning Flag as read-only */
1311:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1312:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1313:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp1 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_EPV);
1314:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_EPV);
1315:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp3 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR); 
1316:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Error Passive Flag */
1317:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(tmp1 && tmp2 && tmp3)
1318:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1319:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set CAN error code to EPV error */
1320:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_EPV;
1321:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* No need for clear of Error Passive Flag as read-only */ 
1322:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1323:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1324:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp1 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_BOF);
1325:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_BOF);
1326:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp3 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR);  
1327:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Bus-Off Flag */
1328:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(tmp1 && tmp2 && tmp3)
1329:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1330:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set CAN error code to BOF error */
1331:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_BOF;
1332:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* No need for clear of Bus-Off Flag as read-only */
1333:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1334:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1335:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp1 = HAL_IS_BIT_CLR(hcan->Instance->ESR, CAN_ESR_LEC);
1336:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_LEC);
1337:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp3 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR);
1338:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Last error code Flag */
1339:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((!tmp1) && tmp2 && tmp3)
1340:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1341:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tmp1 = (hcan->Instance->ESR & CAN_ESR_LEC);
1342:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(tmp1)
1343:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1344:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_0):
1345:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Set CAN error code to STF error */
1346:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_STF;
1347:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
1348:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_1):
1349:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Set CAN error code to FOR error */
1350:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_FOR;
1351:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
1352:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
ARM GAS  /tmp/ccubOfsv.s 			page 65


1353:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Set CAN error code to ACK error */
1354:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_ACK;
1355:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
1356:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_2):
1357:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Set CAN error code to BR error */
1358:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_BR;
1359:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
1360:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
1361:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Set CAN error code to BD error */
1362:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_BD;
1363:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
1364:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
1365:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Set CAN error code to CRC error */
1366:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_CRC;
1367:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
1368:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default:
1369:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
1370:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1371:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1372:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Clear Last error code Flag */ 
1373:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->ESR, CAN_ESR_LEC);
1374:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1375:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1376:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Call the Error call Back in case of Errors */
1377:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(hcan->ErrorCode != HAL_CAN_ERROR_NONE)
1378:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1379:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Clear ERRI Flag */ 
1380:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->MSR = CAN_MSR_ERRI; 
1381:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set the CAN state ready to be able to start again the process */
1382:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_READY;
1383:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1384:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Disable interrupts: */
1385:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Error warning Interrupt */
1386:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Error passive Interrupt */
1387:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Bus-off Interrupt */
1388:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Last error code Interrupt */
1389:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Error Interrupt */
1390:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable FIFO 0 message pending Interrupt */
1391:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable FIFO 0 Overrun Interrupt */
1392:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable FIFO 1 message pending Interrupt */
1393:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable FIFO 1 Overrun Interrupt */
1394:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Transmit mailbox empty Interrupt */
1395:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, CAN_IT_EWG |
1396:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_EPV |
1397:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_BOF |
1398:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_LEC |
1399:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_ERR |
1400:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_FMP0|
1401:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_FOV0|
1402:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_FMP1|
1403:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_FOV1|
1404:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_TME  );
1405:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1406:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Call Error callback function */
1407:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     HAL_CAN_ErrorCallback(hcan);
1408:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }  
1409:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
ARM GAS  /tmp/ccubOfsv.s 			page 66


1410:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1411:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1412:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Transmission  complete callback in non blocking mode 
1413:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1414:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1415:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
1416:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1417:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_TxCpltCallback(CAN_HandleTypeDef* hcan)
1418:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 2088              		.loc 1 1418 0
 2089              		.cfi_startproc
 2090              		@ args = 0, pretend = 0, frame = 0
 2091              		@ frame_needed = 0, uses_anonymous_args = 0
 2092              		@ link register save eliminated.
 2093              	.LVL153:
 2094 0000 7047     		bx	lr
 2095              		.cfi_endproc
 2096              	.LFE76:
 2098              		.section	.text.CAN_Transmit_IT,"ax",%progbits
 2099              		.align	1
 2100              		.syntax unified
 2101              		.thumb
 2102              		.thumb_func
 2103              		.fpu softvfp
 2105              	CAN_Transmit_IT:
 2106              	.LFB81:
1419:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
1420:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
1421:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1422:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_TxCpltCallback can be implemented in the user file
1423:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
1424:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1425:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1426:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1427:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Transmission  complete callback in non blocking mode 
1428:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1429:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1430:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
1431:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1432:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_RxCpltCallback(CAN_HandleTypeDef* hcan)
1433:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1434:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
1435:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
1436:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1437:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_RxCpltCallback can be implemented in the user file
1438:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
1439:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1440:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1441:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1442:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Error CAN callback.
1443:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1444:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1445:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
1446:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1447:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_ErrorCallback(CAN_HandleTypeDef *hcan)
1448:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1449:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/ccubOfsv.s 			page 67


1450:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
1451:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1452:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_ErrorCallback can be implemented in the user file
1453:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
1454:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1455:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1456:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1457:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
1458:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1459:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1460:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group3 Peripheral State and Error functions
1461:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *  @brief   CAN Peripheral State functions 
1462:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
1463:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @verbatim   
1464:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
1465:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             ##### Peripheral State and Error functions #####
1466:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
1467:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]
1468:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     This subsection provides functions allowing to :
1469:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) Check the CAN state.
1470:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) Check CAN Errors detected during interrupt process
1471:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****          
1472:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @endverbatim
1473:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
1474:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1475:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1476:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1477:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  return the CAN state
1478:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1479:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1480:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL state
1481:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1482:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_CAN_StateTypeDef HAL_CAN_GetState(CAN_HandleTypeDef* hcan)
1483:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1484:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return CAN state */
1485:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return hcan->State;
1486:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1487:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1488:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1489:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Return the CAN error code
1490:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1491:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1492:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval CAN Error Code
1493:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1494:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** uint32_t HAL_CAN_GetError(CAN_HandleTypeDef *hcan)
1495:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1496:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return hcan->ErrorCode;
1497:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1498:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1499:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1500:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
1501:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1502:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1503:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1504:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
1505:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1506:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /tmp/ccubOfsv.s 			page 68


1507:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @addtogroup CAN_Private_Functions
1508:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
1509:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1510:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1511:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Initiates and transmits a CAN frame message.
1512:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1513:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
1514:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
1515:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1516:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** static HAL_StatusTypeDef CAN_Transmit_IT(CAN_HandleTypeDef* hcan)
1517:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 2107              		.loc 1 1517 0
 2108              		.cfi_startproc
 2109              		@ args = 0, pretend = 0, frame = 0
 2110              		@ frame_needed = 0, uses_anonymous_args = 0
 2111              	.LVL154:
 2112              		.loc 1 1517 0
 2113 0000 08B5     		push	{r3, lr}
 2114              	.LCFI21:
 2115              		.cfi_def_cfa_offset 8
 2116              		.cfi_offset 3, -8
 2117              		.cfi_offset 14, -4
1518:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Disable Transmit mailbox empty Interrupt */
1519:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_CAN_DISABLE_IT(hcan, CAN_IT_TME);
 2118              		.loc 1 1519 0
 2119 0002 0268     		ldr	r2, [r0]
 2120 0004 5369     		ldr	r3, [r2, #20]
 2121 0006 23F00103 		bic	r3, r3, #1
 2122 000a 5361     		str	r3, [r2, #20]
1520:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1521:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(hcan->State == HAL_CAN_STATE_BUSY_TX)
 2123              		.loc 1 1521 0
 2124 000c 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2125 0010 DBB2     		uxtb	r3, r3
 2126 0012 122B     		cmp	r3, #18
 2127 0014 0CD0     		beq	.L241
 2128              	.L233:
1522:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {   
1523:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Disable interrupts: */
1524:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Error warning Interrupt */
1525:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Error passive Interrupt */
1526:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Bus-off Interrupt */
1527:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Last error code Interrupt */
1528:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Error Interrupt */
1529:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, CAN_IT_EWG |
1530:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_EPV |
1531:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_BOF |
1532:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_LEC |
1533:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_ERR);
1534:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1535:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1536:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
1537:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   switch(hcan->State)
 2129              		.loc 1 1537 0
 2130 0016 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2131 001a DBB2     		uxtb	r3, r3
 2132 001c 522B     		cmp	r3, #82
ARM GAS  /tmp/ccubOfsv.s 			page 69


 2133 001e 14D0     		beq	.L235
 2134 0020 722B     		cmp	r3, #114
 2135 0022 16D0     		beq	.L236
 2136 0024 422B     		cmp	r3, #66
 2137 0026 09D0     		beq	.L242
1538:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1539:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     case(HAL_CAN_STATE_BUSY_TX_RX0):
1540:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_BUSY_RX0;
1541:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       break;
1542:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     case(HAL_CAN_STATE_BUSY_TX_RX1):
1543:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_BUSY_RX1;
1544:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       break;
1545:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
1546:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
1547:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       break;
1548:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     default: /* HAL_CAN_STATE_BUSY_TX */
1549:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_READY;
 2138              		.loc 1 1549 0
 2139 0028 0123     		movs	r3, #1
 2140 002a 80F83C30 		strb	r3, [r0, #60]
1550:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       break;
 2141              		.loc 1 1550 0
 2142 002e 08E0     		b	.L238
 2143              	.L241:
1529:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_EPV |
 2144              		.loc 1 1529 0
 2145 0030 0268     		ldr	r2, [r0]
 2146 0032 5369     		ldr	r3, [r2, #20]
 2147 0034 23F40F43 		bic	r3, r3, #36608
 2148 0038 5361     		str	r3, [r2, #20]
 2149 003a ECE7     		b	.L233
 2150              	.L242:
1540:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       break;
 2151              		.loc 1 1540 0
 2152 003c 2223     		movs	r3, #34
 2153 003e 80F83C30 		strb	r3, [r0, #60]
 2154              	.L238:
1551:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1552:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1553:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Transmission complete callback */ 
1554:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_TxCpltCallback(hcan);
 2155              		.loc 1 1554 0
 2156 0042 FFF7FEFF 		bl	HAL_CAN_TxCpltCallback
 2157              	.LVL155:
1555:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1556:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
1557:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 2158              		.loc 1 1557 0
 2159 0046 0020     		movs	r0, #0
 2160 0048 08BD     		pop	{r3, pc}
 2161              	.LVL156:
 2162              	.L235:
1543:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       break;
 2163              		.loc 1 1543 0
 2164 004a 3223     		movs	r3, #50
 2165 004c 80F83C30 		strb	r3, [r0, #60]
1544:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
ARM GAS  /tmp/ccubOfsv.s 			page 70


 2166              		.loc 1 1544 0
 2167 0050 F7E7     		b	.L238
 2168              	.L236:
1546:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       break;
 2169              		.loc 1 1546 0
 2170 0052 6223     		movs	r3, #98
 2171 0054 80F83C30 		strb	r3, [r0, #60]
1547:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     default: /* HAL_CAN_STATE_BUSY_TX */
 2172              		.loc 1 1547 0
 2173 0058 F3E7     		b	.L238
 2174              		.cfi_endproc
 2175              	.LFE81:
 2177              		.section	.text.HAL_CAN_RxCpltCallback,"ax",%progbits
 2178              		.align	1
 2179              		.weak	HAL_CAN_RxCpltCallback
 2180              		.syntax unified
 2181              		.thumb
 2182              		.thumb_func
 2183              		.fpu softvfp
 2185              	HAL_CAN_RxCpltCallback:
 2186              	.LFB77:
1433:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 2187              		.loc 1 1433 0
 2188              		.cfi_startproc
 2189              		@ args = 0, pretend = 0, frame = 0
 2190              		@ frame_needed = 0, uses_anonymous_args = 0
 2191              		@ link register save eliminated.
 2192              	.LVL157:
 2193 0000 7047     		bx	lr
 2194              		.cfi_endproc
 2195              	.LFE77:
 2197              		.section	.text.CAN_Receive_IT,"ax",%progbits
 2198              		.align	1
 2199              		.syntax unified
 2200              		.thumb
 2201              		.thumb_func
 2202              		.fpu softvfp
 2204              	CAN_Receive_IT:
 2205              	.LFB82:
1558:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1559:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1560:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Receives a correct CAN frame.
1561:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan:       Pointer to a CAN_HandleTypeDef structure that contains
1562:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
1563:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  FIFONumber: Specify the FIFO number    
1564:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
1565:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
1566:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1567:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** static HAL_StatusTypeDef CAN_Receive_IT(CAN_HandleTypeDef* hcan, uint8_t FIFONumber)
1568:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 2206              		.loc 1 1568 0
 2207              		.cfi_startproc
 2208              		@ args = 0, pretend = 0, frame = 0
 2209              		@ frame_needed = 0, uses_anonymous_args = 0
 2210              	.LVL158:
 2211              		.loc 1 1568 0
 2212 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccubOfsv.s 			page 71


 2213              	.LCFI22:
 2214              		.cfi_def_cfa_offset 8
 2215              		.cfi_offset 4, -8
 2216              		.cfi_offset 14, -4
 2217              	.LVL159:
1569:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tmp1 = 0U;
1570:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   CanRxMsgTypeDef* pRxMsg = NULL;
1571:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1572:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Set RxMsg pointer */
1573:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(FIFONumber == CAN_FIFO0)
 2218              		.loc 1 1573 0
 2219 0002 0C46     		mov	r4, r1
 2220 0004 0029     		cmp	r1, #0
 2221 0006 74D1     		bne	.L245
1574:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1575:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pRxMsg = hcan->pRxMsg;
 2222              		.loc 1 1575 0
 2223 0008 436B     		ldr	r3, [r0, #52]
 2224              	.LVL160:
 2225              	.L246:
1576:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1577:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
1578:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1579:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pRxMsg = hcan->pRx1Msg;
1580:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1581:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1582:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the Id */
1583:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->IDE = (uint8_t)0x04U & hcan->Instance->sFIFOMailBox[FIFONumber].RIR;
 2226              		.loc 1 1583 0
 2227 000a 0168     		ldr	r1, [r0]
 2228              	.LVL161:
 2229 000c 04F11B02 		add	r2, r4, #27
 2230 0010 1201     		lsls	r2, r2, #4
 2231 0012 8A58     		ldr	r2, [r1, r2]
 2232 0014 02F00402 		and	r2, r2, #4
 2233 0018 9A60     		str	r2, [r3, #8]
1584:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (pRxMsg->IDE == CAN_ID_STD)
 2234              		.loc 1 1584 0
 2235 001a 002A     		cmp	r2, #0
 2236 001c 6BD1     		bne	.L247
1585:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1586:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pRxMsg->StdId = 0x000007FFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RIR >> 21U);
 2237              		.loc 1 1586 0
 2238 001e 0168     		ldr	r1, [r0]
 2239 0020 04F11B02 		add	r2, r4, #27
 2240 0024 1201     		lsls	r2, r2, #4
 2241 0026 8A58     		ldr	r2, [r1, r2]
 2242 0028 520D     		lsrs	r2, r2, #21
 2243 002a 1A60     		str	r2, [r3]
 2244              	.L248:
1587:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1588:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
1589:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1590:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pRxMsg->ExtId = 0x1FFFFFFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RIR >> 3U);
1591:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1592:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1593:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->RTR = (uint8_t)0x02U & hcan->Instance->sFIFOMailBox[FIFONumber].RIR;
ARM GAS  /tmp/ccubOfsv.s 			page 72


 2245              		.loc 1 1593 0
 2246 002c 0168     		ldr	r1, [r0]
 2247 002e 04F11B02 		add	r2, r4, #27
 2248 0032 1201     		lsls	r2, r2, #4
 2249 0034 8958     		ldr	r1, [r1, r2]
 2250 0036 01F00201 		and	r1, r1, #2
 2251 003a D960     		str	r1, [r3, #12]
1594:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the DLC */
1595:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->DLC = (uint8_t)0x0FU & hcan->Instance->sFIFOMailBox[FIFONumber].RDTR;
 2252              		.loc 1 1595 0
 2253 003c 0168     		ldr	r1, [r0]
 2254 003e 1144     		add	r1, r1, r2
 2255 0040 4968     		ldr	r1, [r1, #4]
 2256 0042 01F00F01 		and	r1, r1, #15
 2257 0046 1961     		str	r1, [r3, #16]
1596:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the FIFONumber */
1597:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->FIFONumber = FIFONumber;
 2258              		.loc 1 1597 0
 2259 0048 1C62     		str	r4, [r3, #32]
1598:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the FMI */
1599:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->FMI = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDTR >> 8U);
 2260              		.loc 1 1599 0
 2261 004a 0168     		ldr	r1, [r0]
 2262 004c 0A44     		add	r2, r2, r1
 2263 004e 5268     		ldr	r2, [r2, #4]
 2264 0050 C2F30722 		ubfx	r2, r2, #8, #8
 2265 0054 DA61     		str	r2, [r3, #28]
1600:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the data field */
1601:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[0] = (uint8_t)0xFFU & hcan->Instance->sFIFOMailBox[FIFONumber].RDLR;
 2266              		.loc 1 1601 0
 2267 0056 0168     		ldr	r1, [r0]
 2268 0058 2201     		lsls	r2, r4, #4
 2269 005a 1144     		add	r1, r1, r2
 2270 005c D1F8B811 		ldr	r1, [r1, #440]
 2271 0060 1975     		strb	r1, [r3, #20]
1602:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[1] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDLR >> 8U);
 2272              		.loc 1 1602 0
 2273 0062 0168     		ldr	r1, [r0]
 2274 0064 1144     		add	r1, r1, r2
 2275 0066 D1F8B811 		ldr	r1, [r1, #440]
 2276 006a 090A     		lsrs	r1, r1, #8
 2277 006c 5975     		strb	r1, [r3, #21]
1603:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[2] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDLR >> 16U);
 2278              		.loc 1 1603 0
 2279 006e 0168     		ldr	r1, [r0]
 2280 0070 1144     		add	r1, r1, r2
 2281 0072 D1F8B811 		ldr	r1, [r1, #440]
 2282 0076 090C     		lsrs	r1, r1, #16
 2283 0078 9975     		strb	r1, [r3, #22]
1604:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[3] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDLR >> 24U);
 2284              		.loc 1 1604 0
 2285 007a 0168     		ldr	r1, [r0]
 2286 007c 1144     		add	r1, r1, r2
 2287 007e D1F8B811 		ldr	r1, [r1, #440]
 2288 0082 090E     		lsrs	r1, r1, #24
 2289 0084 D975     		strb	r1, [r3, #23]
1605:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[4] = (uint8_t)0xFFU & hcan->Instance->sFIFOMailBox[FIFONumber].RDHR;
ARM GAS  /tmp/ccubOfsv.s 			page 73


 2290              		.loc 1 1605 0
 2291 0086 0168     		ldr	r1, [r0]
 2292 0088 1144     		add	r1, r1, r2
 2293 008a D1F8BC11 		ldr	r1, [r1, #444]
 2294 008e 1976     		strb	r1, [r3, #24]
1606:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[5] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDHR >> 8U);
 2295              		.loc 1 1606 0
 2296 0090 0168     		ldr	r1, [r0]
 2297 0092 1144     		add	r1, r1, r2
 2298 0094 D1F8BC11 		ldr	r1, [r1, #444]
 2299 0098 090A     		lsrs	r1, r1, #8
 2300 009a 5976     		strb	r1, [r3, #25]
1607:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[6] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDHR >> 16U);
 2301              		.loc 1 1607 0
 2302 009c 0168     		ldr	r1, [r0]
 2303 009e 1144     		add	r1, r1, r2
 2304 00a0 D1F8BC11 		ldr	r1, [r1, #444]
 2305 00a4 090C     		lsrs	r1, r1, #16
 2306 00a6 9976     		strb	r1, [r3, #26]
1608:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[7] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDHR >> 24U);
 2307              		.loc 1 1608 0
 2308 00a8 0168     		ldr	r1, [r0]
 2309 00aa 0A44     		add	r2, r2, r1
 2310 00ac D2F8BC21 		ldr	r2, [r2, #444]
 2311 00b0 120E     		lsrs	r2, r2, #24
 2312 00b2 DA76     		strb	r2, [r3, #27]
1609:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Release the FIFO */
1610:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Release FIFO0 */
1611:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (FIFONumber == CAN_FIFO0)
 2313              		.loc 1 1611 0
 2314 00b4 3CBB     		cbnz	r4, .L249
1612:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1613:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_FIFO_RELEASE(hcan, CAN_FIFO0);
 2315              		.loc 1 1613 0
 2316 00b6 0368     		ldr	r3, [r0]
 2317              	.LVL162:
 2318 00b8 2022     		movs	r2, #32
 2319 00ba DA60     		str	r2, [r3, #12]
1614:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
1615:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Disable FIFO 0 overrun and message pending Interrupt */
1616:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, CAN_IT_FOV0 | CAN_IT_FMP0);
 2320              		.loc 1 1616 0
 2321 00bc 0268     		ldr	r2, [r0]
 2322 00be 5369     		ldr	r3, [r2, #20]
 2323 00c0 23F00A03 		bic	r3, r3, #10
 2324 00c4 5361     		str	r3, [r2, #20]
 2325              	.L250:
1617:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1618:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Release FIFO1 */
1619:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
1620:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1621:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_FIFO_RELEASE(hcan, CAN_FIFO1);
1622:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
1623:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Disable FIFO 1 overrun and message pending Interrupt */
1624:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, CAN_IT_FOV1 | CAN_IT_FMP1);
1625:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1626:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /tmp/ccubOfsv.s 			page 74


1627:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp1 = hcan->State;
 2326              		.loc 1 1627 0
 2327 00c6 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2328 00ca DBB2     		uxtb	r3, r3
 2329              	.LVL163:
1628:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((tmp1 == HAL_CAN_STATE_BUSY_RX0) || (tmp1 == HAL_CAN_STATE_BUSY_RX1))
 2330              		.loc 1 1628 0
 2331 00cc 222B     		cmp	r3, #34
 2332 00ce 23D0     		beq	.L251
 2333              		.loc 1 1628 0 is_stmt 0 discriminator 1
 2334 00d0 322B     		cmp	r3, #50
 2335 00d2 21D0     		beq	.L251
 2336              	.LVL164:
 2337              	.L252:
1629:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1630:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Disable interrupts: */
1631:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Error warning Interrupt */
1632:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Error passive Interrupt */
1633:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Bus-off Interrupt */
1634:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Last error code Interrupt */
1635:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Error Interrupt */
1636:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, CAN_IT_EWG |
1637:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_EPV |
1638:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_BOF |
1639:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_LEC |
1640:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_ERR);
1641:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1642:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1643:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
1644:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (FIFONumber == CAN_FIFO0)
 2338              		.loc 1 1644 0 is_stmt 1
 2339 00d4 002C     		cmp	r4, #0
 2340 00d6 34D1     		bne	.L253
1645:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1646:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
 2341              		.loc 1 1646 0
 2342 00d8 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2343 00dc DBB2     		uxtb	r3, r3
 2344 00de 622B     		cmp	r3, #98
 2345 00e0 27D0     		beq	.L255
 2346 00e2 722B     		cmp	r3, #114
 2347 00e4 29D0     		beq	.L256
 2348 00e6 422B     		cmp	r3, #66
 2349 00e8 1CD0     		beq	.L266
1647:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1648:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
1649:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX;
1650:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1651:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
1652:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX1;
1653:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1654:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
1655:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
1656:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1657:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX0 */
1658:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_READY;
 2350              		.loc 1 1658 0
ARM GAS  /tmp/ccubOfsv.s 			page 75


 2351 00ea 0123     		movs	r3, #1
 2352 00ec 80F83C30 		strb	r3, [r0, #60]
1659:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 2353              		.loc 1 1659 0
 2354 00f0 1BE0     		b	.L258
 2355              	.LVL165:
 2356              	.L245:
1579:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2357              		.loc 1 1579 0
 2358 00f2 836B     		ldr	r3, [r0, #56]
 2359              	.LVL166:
 2360 00f4 89E7     		b	.L246
 2361              	.LVL167:
 2362              	.L247:
1590:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2363              		.loc 1 1590 0
 2364 00f6 0168     		ldr	r1, [r0]
 2365 00f8 04F11B02 		add	r2, r4, #27
 2366 00fc 1201     		lsls	r2, r2, #4
 2367 00fe 8A58     		ldr	r2, [r1, r2]
 2368 0100 D208     		lsrs	r2, r2, #3
 2369 0102 5A60     		str	r2, [r3, #4]
 2370 0104 92E7     		b	.L248
 2371              	.L249:
1621:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 2372              		.loc 1 1621 0
 2373 0106 0368     		ldr	r3, [r0]
 2374              	.LVL168:
 2375 0108 2022     		movs	r2, #32
 2376 010a 1A61     		str	r2, [r3, #16]
1624:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2377              		.loc 1 1624 0
 2378 010c 0268     		ldr	r2, [r0]
 2379 010e 5369     		ldr	r3, [r2, #20]
 2380 0110 23F05003 		bic	r3, r3, #80
 2381 0114 5361     		str	r3, [r2, #20]
 2382 0116 D6E7     		b	.L250
 2383              	.LVL169:
 2384              	.L251:
1636:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_EPV |
 2385              		.loc 1 1636 0
 2386 0118 0268     		ldr	r2, [r0]
 2387 011a 5369     		ldr	r3, [r2, #20]
 2388              	.LVL170:
 2389 011c 23F40F43 		bic	r3, r3, #36608
 2390 0120 5361     		str	r3, [r2, #20]
 2391 0122 D7E7     		b	.L252
 2392              	.L266:
1649:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 2393              		.loc 1 1649 0
 2394 0124 1223     		movs	r3, #18
 2395 0126 80F83C30 		strb	r3, [r0, #60]
 2396              	.L258:
1660:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1661:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1662:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
1663:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
ARM GAS  /tmp/ccubOfsv.s 			page 76


1664:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
1665:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1666:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
1667:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX;
1668:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1669:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
1670:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0;
1671:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1672:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
1673:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
1674:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1675:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX1 */
1676:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_READY;
1677:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1678:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1679:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1680:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1681:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Receive complete callback */ 
1682:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_RxCpltCallback(hcan);
 2397              		.loc 1 1682 0
 2398 012a FFF7FEFF 		bl	HAL_CAN_RxCpltCallback
 2399              	.LVL171:
1683:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1684:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return function status */
1685:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
1686:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 2400              		.loc 1 1686 0
 2401 012e 0020     		movs	r0, #0
 2402 0130 10BD     		pop	{r4, pc}
 2403              	.LVL172:
 2404              	.L255:
1652:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 2405              		.loc 1 1652 0
 2406 0132 3223     		movs	r3, #50
 2407 0134 80F83C30 		strb	r3, [r0, #60]
1653:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 2408              		.loc 1 1653 0
 2409 0138 F7E7     		b	.L258
 2410              	.L256:
1655:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 2411              		.loc 1 1655 0
 2412 013a 5223     		movs	r3, #82
 2413 013c 80F83C30 		strb	r3, [r0, #60]
1656:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX0 */
 2414              		.loc 1 1656 0
 2415 0140 F3E7     		b	.L258
 2416              	.L253:
1664:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2417              		.loc 1 1664 0
 2418 0142 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2419 0146 DBB2     		uxtb	r3, r3
 2420 0148 622B     		cmp	r3, #98
 2421 014a 0BD0     		beq	.L260
 2422 014c 722B     		cmp	r3, #114
 2423 014e 0DD0     		beq	.L261
 2424 0150 522B     		cmp	r3, #82
 2425 0152 03D0     		beq	.L267
ARM GAS  /tmp/ccubOfsv.s 			page 77


1676:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 2426              		.loc 1 1676 0
 2427 0154 0123     		movs	r3, #1
 2428 0156 80F83C30 		strb	r3, [r0, #60]
1677:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2429              		.loc 1 1677 0
 2430 015a E6E7     		b	.L258
 2431              	.L267:
1667:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 2432              		.loc 1 1667 0
 2433 015c 1223     		movs	r3, #18
 2434 015e 80F83C30 		strb	r3, [r0, #60]
1668:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 2435              		.loc 1 1668 0
 2436 0162 E2E7     		b	.L258
 2437              	.L260:
1670:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 2438              		.loc 1 1670 0
 2439 0164 2223     		movs	r3, #34
 2440 0166 80F83C30 		strb	r3, [r0, #60]
1671:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 2441              		.loc 1 1671 0
 2442 016a DEE7     		b	.L258
 2443              	.L261:
1673:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 2444              		.loc 1 1673 0
 2445 016c 4223     		movs	r3, #66
 2446 016e 80F83C30 		strb	r3, [r0, #60]
1674:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX1 */
 2447              		.loc 1 1674 0
 2448 0172 DAE7     		b	.L258
 2449              		.cfi_endproc
 2450              	.LFE82:
 2452              		.section	.text.HAL_CAN_ErrorCallback,"ax",%progbits
 2453              		.align	1
 2454              		.weak	HAL_CAN_ErrorCallback
 2455              		.syntax unified
 2456              		.thumb
 2457              		.thumb_func
 2458              		.fpu softvfp
 2460              	HAL_CAN_ErrorCallback:
 2461              	.LFB78:
1448:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 2462              		.loc 1 1448 0
 2463              		.cfi_startproc
 2464              		@ args = 0, pretend = 0, frame = 0
 2465              		@ frame_needed = 0, uses_anonymous_args = 0
 2466              		@ link register save eliminated.
 2467              	.LVL173:
 2468 0000 7047     		bx	lr
 2469              		.cfi_endproc
 2470              	.LFE78:
 2472              		.section	.text.HAL_CAN_IRQHandler,"ax",%progbits
 2473              		.align	1
 2474              		.global	HAL_CAN_IRQHandler
 2475              		.syntax unified
 2476              		.thumb
ARM GAS  /tmp/ccubOfsv.s 			page 78


 2477              		.thumb_func
 2478              		.fpu softvfp
 2480              	HAL_CAN_IRQHandler:
 2481              	.LFB75:
1223:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tmp1 = 0U, tmp2 = 0U, tmp3 = 0U;
 2482              		.loc 1 1223 0
 2483              		.cfi_startproc
 2484              		@ args = 0, pretend = 0, frame = 0
 2485              		@ frame_needed = 0, uses_anonymous_args = 0
 2486              	.LVL174:
1223:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tmp1 = 0U, tmp2 = 0U, tmp3 = 0U;
 2487              		.loc 1 1223 0
 2488 0000 70B5     		push	{r4, r5, r6, lr}
 2489              	.LCFI23:
 2490              		.cfi_def_cfa_offset 16
 2491              		.cfi_offset 4, -16
 2492              		.cfi_offset 5, -12
 2493              		.cfi_offset 6, -8
 2494              		.cfi_offset 14, -4
 2495 0002 0446     		mov	r4, r0
 2496              	.LVL175:
1228:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FOV0);
 2497              		.loc 1 1228 0
 2498 0004 0268     		ldr	r2, [r0]
 2499 0006 D168     		ldr	r1, [r2, #12]
 2500              	.LVL176:
1229:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((tmp1 != 0U) && tmp2)
 2501              		.loc 1 1229 0
 2502 0008 5369     		ldr	r3, [r2, #20]
 2503              	.LVL177:
1230:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2504              		.loc 1 1230 0
 2505 000a 11F0100F 		tst	r1, #16
 2506 000e 09D0     		beq	.L292
 2507 0010 03F00803 		and	r3, r3, #8
 2508              	.LVL178:
1230:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2509              		.loc 1 1230 0 is_stmt 0 discriminator 1
 2510 0014 002B     		cmp	r3, #0
 2511 0016 00F0A680 		beq	.L293
 2512              	.LVL179:
1236:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2513              		.loc 1 1236 0 is_stmt 1
 2514 001a 1023     		movs	r3, #16
 2515              	.LVL180:
 2516 001c D360     		str	r3, [r2, #12]
1233:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2517              		.loc 1 1233 0
 2518 001e 4FF40075 		mov	r5, #512
 2519 0022 00E0     		b	.L270
 2520              	.LVL181:
 2521              	.L292:
1225:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2522              		.loc 1 1225 0
 2523 0024 0025     		movs	r5, #0
 2524              	.LVL182:
 2525              	.L270:
ARM GAS  /tmp/ccubOfsv.s 			page 79


1240:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FOV1);
 2526              		.loc 1 1240 0
 2527 0026 2268     		ldr	r2, [r4]
 2528 0028 1169     		ldr	r1, [r2, #16]
 2529              	.LVL183:
1241:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((tmp1 != 0U) && tmp2)
 2530              		.loc 1 1241 0
 2531 002a 5369     		ldr	r3, [r2, #20]
 2532 002c 03F04003 		and	r3, r3, #64
 2533              	.LVL184:
1242:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2534              		.loc 1 1242 0
 2535 0030 11F0100F 		tst	r1, #16
 2536 0034 04D0     		beq	.L271
1242:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2537              		.loc 1 1242 0 is_stmt 0 discriminator 1
 2538 0036 1BB1     		cbz	r3, .L271
1245:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2539              		.loc 1 1245 0 is_stmt 1
 2540 0038 45F48065 		orr	r5, r5, #1024
 2541              	.LVL185:
1248:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2542              		.loc 1 1248 0
 2543 003c 1023     		movs	r3, #16
 2544              	.LVL186:
 2545 003e 1361     		str	r3, [r2, #16]
 2546              	.L271:
1252:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2547              		.loc 1 1252 0
 2548 0040 2368     		ldr	r3, [r4]
 2549 0042 5A69     		ldr	r2, [r3, #20]
 2550 0044 12F0010F 		tst	r2, #1
 2551 0048 28D0     		beq	.L272
1255:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tmp2 = __HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_1);
 2552              		.loc 1 1255 0
 2553 004a 9E68     		ldr	r6, [r3, #8]
 2554              	.LVL187:
1256:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tmp3 = __HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_2);
 2555              		.loc 1 1256 0
 2556 004c 9968     		ldr	r1, [r3, #8]
 2557 004e 674A     		ldr	r2, .L299
 2558 0050 0A40     		ands	r2, r2, r1
 2559              	.LVL188:
1257:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if(tmp1 || tmp2 || tmp3)  
 2560              		.loc 1 1257 0
 2561 0052 9968     		ldr	r1, [r3, #8]
 2562 0054 21F06F41 		bic	r1, r1, #-285212672
 2563 0058 21F47E01 		bic	r1, r1, #16646144
 2564 005c 090C     		lsrs	r1, r1, #16
 2565 005e 0904     		lsls	r1, r1, #16
 2566              	.LVL189:
1258:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2567              		.loc 1 1258 0
 2568 0060 6348     		ldr	r0, .L299+4
 2569              	.LVL190:
 2570 0062 B043     		bics	r0, r0, r6
 2571 0064 05D0     		beq	.L273
ARM GAS  /tmp/ccubOfsv.s 			page 80


1258:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2572              		.loc 1 1258 0 is_stmt 0 discriminator 1
 2573 0066 6148     		ldr	r0, .L299
 2574 0068 8242     		cmp	r2, r0
 2575 006a 02D0     		beq	.L273
1258:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2576              		.loc 1 1258 0 discriminator 2
 2577 006c 614A     		ldr	r2, .L299+8
 2578              	.LVL191:
 2579 006e 9142     		cmp	r1, r2
 2580 0070 14D1     		bne	.L272
 2581              	.L273:
1260:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       tmp2 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK1);
 2582              		.loc 1 1260 0 is_stmt 1
 2583 0072 9968     		ldr	r1, [r3, #8]
 2584              	.LVL192:
1261:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       tmp3 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK2);
 2585              		.loc 1 1261 0
 2586 0074 9A68     		ldr	r2, [r3, #8]
 2587 0076 02F40072 		and	r2, r2, #512
 2588              	.LVL193:
1262:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check Transmit success */
 2589              		.loc 1 1262 0
 2590 007a 9B68     		ldr	r3, [r3, #8]
 2591 007c 03F00103 		and	r3, r3, #1
 2592              	.LVL194:
1264:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2593              		.loc 1 1264 0
 2594 0080 11F0020F 		tst	r1, #2
 2595 0084 02D1     		bne	.L274
1264:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2596              		.loc 1 1264 0 is_stmt 0 discriminator 1
 2597 0086 0AB9     		cbnz	r2, .L274
1264:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2598              		.loc 1 1264 0 discriminator 2
 2599 0088 002B     		cmp	r3, #0
 2600 008a 6ED0     		beq	.L275
 2601              	.L274:
1267:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 2602              		.loc 1 1267 0 is_stmt 1
 2603 008c 2046     		mov	r0, r4
 2604 008e FFF7FEFF 		bl	CAN_Transmit_IT
 2605              	.LVL195:
 2606              	.L276:
1276:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    CAN_FLAG_TXOK0 | CAN_FLAG_TXOK1 | CAN_FLAG_TXOK2);
 2607              		.loc 1 1276 0
 2608 0092 2268     		ldr	r2, [r4]
 2609 0094 9168     		ldr	r1, [r2, #8]
 2610 0096 584B     		ldr	r3, .L299+12
 2611 0098 0B43     		orrs	r3, r3, r1
 2612 009a 9360     		str	r3, [r2, #8]
 2613              	.L272:
1281:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FMP0);
 2614              		.loc 1 1281 0
 2615 009c 2368     		ldr	r3, [r4]
 2616 009e DA68     		ldr	r2, [r3, #12]
 2617              	.LVL196:
ARM GAS  /tmp/ccubOfsv.s 			page 81


1282:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check End of reception flag for FIFO0 */
 2618              		.loc 1 1282 0
 2619 00a0 5B69     		ldr	r3, [r3, #20]
 2620 00a2 03F00203 		and	r3, r3, #2
 2621              	.LVL197:
1284:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2622              		.loc 1 1284 0
 2623 00a6 12F0030F 		tst	r2, #3
 2624 00aa 01D0     		beq	.L277
1284:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2625              		.loc 1 1284 0 is_stmt 0 discriminator 1
 2626 00ac 002B     		cmp	r3, #0
 2627 00ae 5FD1     		bne	.L295
 2628              	.LVL198:
 2629              	.L277:
1290:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FMP1);
 2630              		.loc 1 1290 0 is_stmt 1
 2631 00b0 2368     		ldr	r3, [r4]
 2632 00b2 1A69     		ldr	r2, [r3, #16]
 2633              	.LVL199:
1291:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check End of reception flag for FIFO1 */
 2634              		.loc 1 1291 0
 2635 00b4 5B69     		ldr	r3, [r3, #20]
 2636 00b6 03F01003 		and	r3, r3, #16
 2637              	.LVL200:
1293:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2638              		.loc 1 1293 0
 2639 00ba 12F0030F 		tst	r2, #3
 2640 00be 01D0     		beq	.L278
1293:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2641              		.loc 1 1293 0 is_stmt 0 discriminator 1
 2642 00c0 002B     		cmp	r3, #0
 2643 00c2 5AD1     		bne	.L296
 2644              	.LVL201:
 2645              	.L278:
1300:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2646              		.loc 1 1300 0 is_stmt 1
 2647 00c4 236C     		ldr	r3, [r4, #64]
 2648 00c6 1D43     		orrs	r5, r5, r3
 2649              	.LVL202:
 2650 00c8 2564     		str	r5, [r4, #64]
1302:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_EWG);
 2651              		.loc 1 1302 0
 2652 00ca 2368     		ldr	r3, [r4]
 2653 00cc 9869     		ldr	r0, [r3, #24]
 2654              	.LVL203:
1303:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp3 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR);
 2655              		.loc 1 1303 0
 2656 00ce 5A69     		ldr	r2, [r3, #20]
 2657 00d0 02F48072 		and	r2, r2, #256
 2658              	.LVL204:
1304:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Error Warning Flag */
 2659              		.loc 1 1304 0
 2660 00d4 5969     		ldr	r1, [r3, #20]
 2661 00d6 01F40041 		and	r1, r1, #32768
 2662              	.LVL205:
1306:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
ARM GAS  /tmp/ccubOfsv.s 			page 82


 2663              		.loc 1 1306 0
 2664 00da 10F0010F 		tst	r0, #1
 2665 00de 05D0     		beq	.L279
1306:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2666              		.loc 1 1306 0 is_stmt 0 discriminator 1
 2667 00e0 22B1     		cbz	r2, .L279
1306:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2668              		.loc 1 1306 0 discriminator 2
 2669 00e2 19B1     		cbz	r1, .L279
1309:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* No need for clear of Error Warning Flag as read-only */
 2670              		.loc 1 1309 0 is_stmt 1
 2671 00e4 226C     		ldr	r2, [r4, #64]
 2672              	.LVL206:
 2673 00e6 42F00102 		orr	r2, r2, #1
 2674 00ea 2264     		str	r2, [r4, #64]
 2675              	.L279:
1313:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_EPV);
 2676              		.loc 1 1313 0
 2677 00ec 9869     		ldr	r0, [r3, #24]
 2678              	.LVL207:
1314:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp3 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR); 
 2679              		.loc 1 1314 0
 2680 00ee 5A69     		ldr	r2, [r3, #20]
 2681 00f0 02F40072 		and	r2, r2, #512
 2682              	.LVL208:
1315:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Error Passive Flag */
 2683              		.loc 1 1315 0
 2684 00f4 5969     		ldr	r1, [r3, #20]
 2685              	.LVL209:
 2686 00f6 01F40041 		and	r1, r1, #32768
 2687              	.LVL210:
1317:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2688              		.loc 1 1317 0
 2689 00fa 10F0020F 		tst	r0, #2
 2690 00fe 05D0     		beq	.L280
1317:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2691              		.loc 1 1317 0 is_stmt 0 discriminator 1
 2692 0100 22B1     		cbz	r2, .L280
1317:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2693              		.loc 1 1317 0 discriminator 2
 2694 0102 19B1     		cbz	r1, .L280
1320:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* No need for clear of Error Passive Flag as read-only */ 
 2695              		.loc 1 1320 0 is_stmt 1
 2696 0104 226C     		ldr	r2, [r4, #64]
 2697              	.LVL211:
 2698 0106 42F00202 		orr	r2, r2, #2
 2699 010a 2264     		str	r2, [r4, #64]
 2700              	.L280:
1324:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_BOF);
 2701              		.loc 1 1324 0
 2702 010c 9869     		ldr	r0, [r3, #24]
 2703              	.LVL212:
1325:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp3 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR);  
 2704              		.loc 1 1325 0
 2705 010e 5A69     		ldr	r2, [r3, #20]
 2706 0110 02F48062 		and	r2, r2, #1024
 2707              	.LVL213:
ARM GAS  /tmp/ccubOfsv.s 			page 83


1326:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Bus-Off Flag */
 2708              		.loc 1 1326 0
 2709 0114 5969     		ldr	r1, [r3, #20]
 2710              	.LVL214:
 2711 0116 01F40041 		and	r1, r1, #32768
 2712              	.LVL215:
1328:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2713              		.loc 1 1328 0
 2714 011a 10F0040F 		tst	r0, #4
 2715 011e 05D0     		beq	.L281
1328:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2716              		.loc 1 1328 0 is_stmt 0 discriminator 1
 2717 0120 22B1     		cbz	r2, .L281
1328:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2718              		.loc 1 1328 0 discriminator 2
 2719 0122 19B1     		cbz	r1, .L281
1331:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* No need for clear of Bus-Off Flag as read-only */
 2720              		.loc 1 1331 0 is_stmt 1
 2721 0124 226C     		ldr	r2, [r4, #64]
 2722              	.LVL216:
 2723 0126 42F00402 		orr	r2, r2, #4
 2724 012a 2264     		str	r2, [r4, #64]
 2725              	.L281:
1335:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_LEC);
 2726              		.loc 1 1335 0
 2727 012c 9869     		ldr	r0, [r3, #24]
 2728              	.LVL217:
1336:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp3 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR);
 2729              		.loc 1 1336 0
 2730 012e 5A69     		ldr	r2, [r3, #20]
 2731 0130 02F40062 		and	r2, r2, #2048
 2732              	.LVL218:
1337:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Last error code Flag */
 2733              		.loc 1 1337 0
 2734 0134 5969     		ldr	r1, [r3, #20]
 2735              	.LVL219:
 2736 0136 01F40041 		and	r1, r1, #32768
 2737              	.LVL220:
1339:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2738              		.loc 1 1339 0
 2739 013a 10F0700F 		tst	r0, #112
 2740 013e 32D0     		beq	.L282
1339:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2741              		.loc 1 1339 0 is_stmt 0 discriminator 1
 2742 0140 8AB3     		cbz	r2, .L282
1339:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2743              		.loc 1 1339 0 discriminator 2
 2744 0142 81B3     		cbz	r1, .L282
1341:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(tmp1)
 2745              		.loc 1 1341 0 is_stmt 1
 2746 0144 9A69     		ldr	r2, [r3, #24]
 2747              	.LVL221:
 2748 0146 02F07002 		and	r2, r2, #112
 2749              	.LVL222:
1342:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2750              		.loc 1 1342 0
 2751 014a 302A     		cmp	r2, #48
ARM GAS  /tmp/ccubOfsv.s 			page 84


 2752 014c 2ED0     		beq	.L284
 2753 014e 19D9     		bls	.L297
 2754 0150 502A     		cmp	r2, #80
 2755 0152 30D0     		beq	.L288
 2756 0154 602A     		cmp	r2, #96
 2757 0156 33D0     		beq	.L289
 2758 0158 402A     		cmp	r2, #64
 2759 015a 20D1     		bne	.L283
1358:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 2760              		.loc 1 1358 0
 2761 015c 226C     		ldr	r2, [r4, #64]
 2762              	.LVL223:
 2763 015e 42F04002 		orr	r2, r2, #64
 2764 0162 2264     		str	r2, [r4, #64]
1359:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
 2765              		.loc 1 1359 0
 2766 0164 1BE0     		b	.L283
 2767              	.LVL224:
 2768              	.L293:
1225:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2769              		.loc 1 1225 0
 2770 0166 0025     		movs	r5, #0
 2771 0168 5DE7     		b	.L270
 2772              	.LVL225:
 2773              	.L275:
1272:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 2774              		.loc 1 1272 0
 2775 016a 45F40065 		orr	r5, r5, #2048
 2776              	.LVL226:
 2777 016e 90E7     		b	.L276
 2778              	.LVL227:
 2779              	.L295:
1287:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2780              		.loc 1 1287 0
 2781 0170 0021     		movs	r1, #0
 2782 0172 2046     		mov	r0, r4
 2783 0174 FFF7FEFF 		bl	CAN_Receive_IT
 2784              	.LVL228:
 2785 0178 9AE7     		b	.L277
 2786              	.LVL229:
 2787              	.L296:
1296:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2788              		.loc 1 1296 0
 2789 017a 0121     		movs	r1, #1
 2790 017c 2046     		mov	r0, r4
 2791 017e FFF7FEFF 		bl	CAN_Receive_IT
 2792              	.LVL230:
 2793 0182 9FE7     		b	.L278
 2794              	.LVL231:
 2795              	.L297:
1342:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2796              		.loc 1 1342 0
 2797 0184 102A     		cmp	r2, #16
 2798 0186 06D0     		beq	.L286
 2799 0188 202A     		cmp	r2, #32
 2800 018a 08D1     		bne	.L283
1350:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
ARM GAS  /tmp/ccubOfsv.s 			page 85


 2801              		.loc 1 1350 0
 2802 018c 226C     		ldr	r2, [r4, #64]
 2803              	.LVL232:
 2804 018e 42F01002 		orr	r2, r2, #16
 2805 0192 2264     		str	r2, [r4, #64]
1351:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
 2806              		.loc 1 1351 0
 2807 0194 03E0     		b	.L283
 2808              	.LVL233:
 2809              	.L286:
1346:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 2810              		.loc 1 1346 0
 2811 0196 226C     		ldr	r2, [r4, #64]
 2812              	.LVL234:
 2813 0198 42F00802 		orr	r2, r2, #8
 2814 019c 2264     		str	r2, [r4, #64]
 2815              	.L283:
1373:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2816              		.loc 1 1373 0
 2817 019e 9A69     		ldr	r2, [r3, #24]
 2818 01a0 22F07002 		bic	r2, r2, #112
 2819 01a4 9A61     		str	r2, [r3, #24]
 2820              	.L282:
1377:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2821              		.loc 1 1377 0
 2822 01a6 236C     		ldr	r3, [r4, #64]
 2823 01a8 7BB9     		cbnz	r3, .L298
 2824              	.LVL235:
 2825              	.L269:
 2826 01aa 70BD     		pop	{r4, r5, r6, pc}
 2827              	.LVL236:
 2828              	.L284:
1354:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 2829              		.loc 1 1354 0
 2830 01ac 226C     		ldr	r2, [r4, #64]
 2831              	.LVL237:
 2832 01ae 42F02002 		orr	r2, r2, #32
 2833 01b2 2264     		str	r2, [r4, #64]
1355:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_2):
 2834              		.loc 1 1355 0
 2835 01b4 F3E7     		b	.L283
 2836              	.LVL238:
 2837              	.L288:
1362:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 2838              		.loc 1 1362 0
 2839 01b6 226C     		ldr	r2, [r4, #64]
 2840              	.LVL239:
 2841 01b8 42F08002 		orr	r2, r2, #128
 2842 01bc 2264     		str	r2, [r4, #64]
1363:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
 2843              		.loc 1 1363 0
 2844 01be EEE7     		b	.L283
 2845              	.LVL240:
 2846              	.L289:
1366:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 2847              		.loc 1 1366 0
 2848 01c0 226C     		ldr	r2, [r4, #64]
ARM GAS  /tmp/ccubOfsv.s 			page 86


 2849              	.LVL241:
 2850 01c2 42F48072 		orr	r2, r2, #256
 2851 01c6 2264     		str	r2, [r4, #64]
1367:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default:
 2852              		.loc 1 1367 0
 2853 01c8 E9E7     		b	.L283
 2854              	.L298:
1380:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set the CAN state ready to be able to start again the process */
 2855              		.loc 1 1380 0
 2856 01ca 2368     		ldr	r3, [r4]
 2857 01cc 0422     		movs	r2, #4
 2858 01ce 5A60     		str	r2, [r3, #4]
1382:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2859              		.loc 1 1382 0
 2860 01d0 0123     		movs	r3, #1
 2861 01d2 84F83C30 		strb	r3, [r4, #60]
1395:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_EPV |
 2862              		.loc 1 1395 0
 2863 01d6 2268     		ldr	r2, [r4]
 2864 01d8 5369     		ldr	r3, [r2, #20]
 2865 01da 23F40F43 		bic	r3, r3, #36608
 2866 01de 23F05B03 		bic	r3, r3, #91
 2867 01e2 5361     		str	r3, [r2, #20]
1407:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }  
 2868              		.loc 1 1407 0
 2869 01e4 2046     		mov	r0, r4
 2870 01e6 FFF7FEFF 		bl	HAL_CAN_ErrorCallback
 2871              	.LVL242:
1409:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2872              		.loc 1 1409 0
 2873 01ea DEE7     		b	.L269
 2874              	.L300:
 2875              		.align	2
 2876              	.L299:
 2877 01ec 00010008 		.word	134217984
 2878 01f0 01000004 		.word	67108865
 2879 01f4 00000110 		.word	268500992
 2880 01f8 09050100 		.word	66825
 2881              		.cfi_endproc
 2882              	.LFE75:
 2884              		.section	.text.HAL_CAN_GetState,"ax",%progbits
 2885              		.align	1
 2886              		.global	HAL_CAN_GetState
 2887              		.syntax unified
 2888              		.thumb
 2889              		.thumb_func
 2890              		.fpu softvfp
 2892              	HAL_CAN_GetState:
 2893              	.LFB79:
1483:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return CAN state */
 2894              		.loc 1 1483 0
 2895              		.cfi_startproc
 2896              		@ args = 0, pretend = 0, frame = 0
 2897              		@ frame_needed = 0, uses_anonymous_args = 0
 2898              		@ link register save eliminated.
 2899              	.LVL243:
1485:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
ARM GAS  /tmp/ccubOfsv.s 			page 87


 2900              		.loc 1 1485 0
 2901 0000 90F83C00 		ldrb	r0, [r0, #60]	@ zero_extendqisi2
 2902              	.LVL244:
1486:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2903              		.loc 1 1486 0
 2904 0004 7047     		bx	lr
 2905              		.cfi_endproc
 2906              	.LFE79:
 2908              		.section	.text.HAL_CAN_GetError,"ax",%progbits
 2909              		.align	1
 2910              		.global	HAL_CAN_GetError
 2911              		.syntax unified
 2912              		.thumb
 2913              		.thumb_func
 2914              		.fpu softvfp
 2916              	HAL_CAN_GetError:
 2917              	.LFB80:
1495:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return hcan->ErrorCode;
 2918              		.loc 1 1495 0
 2919              		.cfi_startproc
 2920              		@ args = 0, pretend = 0, frame = 0
 2921              		@ frame_needed = 0, uses_anonymous_args = 0
 2922              		@ link register save eliminated.
 2923              	.LVL245:
1496:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 2924              		.loc 1 1496 0
 2925 0000 006C     		ldr	r0, [r0, #64]
 2926              	.LVL246:
1497:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2927              		.loc 1 1497 0
 2928 0002 7047     		bx	lr
 2929              		.cfi_endproc
 2930              	.LFE80:
 2932              		.text
 2933              	.Letext0:
 2934              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2935              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2936              		.file 4 "Libraries/CMSIS/Include/core_cm3.h"
 2937              		.file 5 "Libraries/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 2938              		.file 6 "Libraries/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 2939              		.file 7 "Libraries/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2940              		.file 8 "/usr/include/newlib/sys/lock.h"
 2941              		.file 9 "/usr/include/newlib/sys/_types.h"
 2942              		.file 10 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 2943              		.file 11 "/usr/include/newlib/sys/reent.h"
 2944              		.file 12 "Libraries/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2945              		.file 13 "Libraries/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 2946              		.file 14 "Libraries/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can_ex.h"
 2947              		.file 15 "Libraries/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/ccubOfsv.s 			page 88


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_can.c
     /tmp/ccubOfsv.s:16     .text.HAL_CAN_ConfigFilter:0000000000000000 $t
     /tmp/ccubOfsv.s:23     .text.HAL_CAN_ConfigFilter:0000000000000000 HAL_CAN_ConfigFilter
     /tmp/ccubOfsv.s:203    .text.HAL_CAN_MspInit:0000000000000000 $t
     /tmp/ccubOfsv.s:210    .text.HAL_CAN_MspInit:0000000000000000 HAL_CAN_MspInit
     /tmp/ccubOfsv.s:223    .text.HAL_CAN_Init:0000000000000000 $t
     /tmp/ccubOfsv.s:230    .text.HAL_CAN_Init:0000000000000000 HAL_CAN_Init
     /tmp/ccubOfsv.s:489    .text.HAL_CAN_MspDeInit:0000000000000000 $t
     /tmp/ccubOfsv.s:496    .text.HAL_CAN_MspDeInit:0000000000000000 HAL_CAN_MspDeInit
     /tmp/ccubOfsv.s:509    .text.HAL_CAN_DeInit:0000000000000000 $t
     /tmp/ccubOfsv.s:516    .text.HAL_CAN_DeInit:0000000000000000 HAL_CAN_DeInit
     /tmp/ccubOfsv.s:559    .text.HAL_CAN_Transmit:0000000000000000 $t
     /tmp/ccubOfsv.s:566    .text.HAL_CAN_Transmit:0000000000000000 HAL_CAN_Transmit
     /tmp/ccubOfsv.s:904    .text.HAL_CAN_Transmit:0000000000000204 $d
     /tmp/ccubOfsv.s:911    .text.HAL_CAN_Transmit_IT:0000000000000000 $t
     /tmp/ccubOfsv.s:918    .text.HAL_CAN_Transmit_IT:0000000000000000 HAL_CAN_Transmit_IT
     /tmp/ccubOfsv.s:1159   .text.HAL_CAN_Receive:0000000000000000 $t
     /tmp/ccubOfsv.s:1166   .text.HAL_CAN_Receive:0000000000000000 HAL_CAN_Receive
     /tmp/ccubOfsv.s:1616   .text.HAL_CAN_Receive_IT:0000000000000000 $t
     /tmp/ccubOfsv.s:1623   .text.HAL_CAN_Receive_IT:0000000000000000 HAL_CAN_Receive_IT
     /tmp/ccubOfsv.s:1870   .text.HAL_CAN_Sleep:0000000000000000 $t
     /tmp/ccubOfsv.s:1877   .text.HAL_CAN_Sleep:0000000000000000 HAL_CAN_Sleep
     /tmp/ccubOfsv.s:1984   .text.HAL_CAN_WakeUp:0000000000000000 $t
     /tmp/ccubOfsv.s:1991   .text.HAL_CAN_WakeUp:0000000000000000 HAL_CAN_WakeUp
     /tmp/ccubOfsv.s:2079   .text.HAL_CAN_TxCpltCallback:0000000000000000 $t
     /tmp/ccubOfsv.s:2086   .text.HAL_CAN_TxCpltCallback:0000000000000000 HAL_CAN_TxCpltCallback
     /tmp/ccubOfsv.s:2099   .text.CAN_Transmit_IT:0000000000000000 $t
     /tmp/ccubOfsv.s:2105   .text.CAN_Transmit_IT:0000000000000000 CAN_Transmit_IT
     /tmp/ccubOfsv.s:2178   .text.HAL_CAN_RxCpltCallback:0000000000000000 $t
     /tmp/ccubOfsv.s:2185   .text.HAL_CAN_RxCpltCallback:0000000000000000 HAL_CAN_RxCpltCallback
     /tmp/ccubOfsv.s:2198   .text.CAN_Receive_IT:0000000000000000 $t
     /tmp/ccubOfsv.s:2204   .text.CAN_Receive_IT:0000000000000000 CAN_Receive_IT
     /tmp/ccubOfsv.s:2453   .text.HAL_CAN_ErrorCallback:0000000000000000 $t
     /tmp/ccubOfsv.s:2460   .text.HAL_CAN_ErrorCallback:0000000000000000 HAL_CAN_ErrorCallback
     /tmp/ccubOfsv.s:2473   .text.HAL_CAN_IRQHandler:0000000000000000 $t
     /tmp/ccubOfsv.s:2480   .text.HAL_CAN_IRQHandler:0000000000000000 HAL_CAN_IRQHandler
     /tmp/ccubOfsv.s:2877   .text.HAL_CAN_IRQHandler:00000000000001ec $d
     /tmp/ccubOfsv.s:2885   .text.HAL_CAN_GetState:0000000000000000 $t
     /tmp/ccubOfsv.s:2892   .text.HAL_CAN_GetState:0000000000000000 HAL_CAN_GetState
     /tmp/ccubOfsv.s:2909   .text.HAL_CAN_GetError:0000000000000000 $t
     /tmp/ccubOfsv.s:2916   .text.HAL_CAN_GetError:0000000000000000 HAL_CAN_GetError
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
