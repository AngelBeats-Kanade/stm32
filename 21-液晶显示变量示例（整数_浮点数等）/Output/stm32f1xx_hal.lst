ARM GAS  /tmp/ccWSCsX3.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_hal.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_MspInit,"ax",%progbits
  16              		.align	1
  17              		.weak	HAL_MspInit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_MspInit:
  24              	.LFB66:
  25              		.file 1 "Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c"
   1:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
   2:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
   3:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @file    stm32f1xx_hal.c
   4:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @author  MCD Application Team
   5:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @version V1.1.1
   6:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @date    12-May-2017
   7:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief   HAL module driver.
   8:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *          This is the common part of the HAL initialization
   9:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  10:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   @verbatim
  11:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ==============================================================================
  12:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                      ##### How to use this driver #####
  13:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ==============================================================================
  14:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]
  15:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  16:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  17:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]
  18:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     The HAL contains two APIs' categories: 
  19:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****          (+) Common HAL APIs
  20:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****          (+) Services HAL APIs
  21:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  22:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   @endverbatim
  23:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
  24:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @attention
  25:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  26:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  27:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  28:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Redistribution and use in source and binary forms, with or without modification,
  29:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * are permitted provided that the following conditions are met:
  30:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  31:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      this list of conditions and the following disclaimer.
  32:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  33:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      this list of conditions and the following disclaimer in the documentation
ARM GAS  /tmp/ccWSCsX3.s 			page 2


  34:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      and/or other materials provided with the distribution.
  35:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  36:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      may be used to endorse or promote products derived from this software
  37:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      without specific prior written permission.
  38:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  39:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  40:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  41:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  42:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  43:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  44:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  45:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  46:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  47:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  48:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  49:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  50:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
  51:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  52:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  53:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  54:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #include "stm32f1xx_hal.h"
  55:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  56:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @addtogroup STM32F1xx_HAL_Driver
  57:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  58:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  59:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  60:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL HAL
  61:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief HAL module driver.
  62:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  63:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  64:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  65:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  66:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  67:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  68:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private define ------------------------------------------------------------*/
  69:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  70:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Private_Constants HAL Private Constants
  71:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  72:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  73:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  74:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  * @brief STM32F1xx HAL Driver version number V1.1.1
  75:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
  76:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  77:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_SUB1   (0x01U) /*!< [23:16] sub1 version */
  78:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_SUB2   (0x01U) /*!< [15:8]  sub2 version */
  79:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */
  80:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION         ((__STM32F1xx_HAL_VERSION_MAIN << 24)\
  81:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_SUB1 << 16)\
  82:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_SUB2 << 8 )\
  83:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_RC))
  84:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  85:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define IDCODE_DEVID_MASK    0x00000FFFU
  86:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  87:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  88:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
  89:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  90:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
ARM GAS  /tmp/ccWSCsX3.s 			page 3


  91:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  92:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  93:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  94:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Private_Variables HAL Private Variables
  95:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  96:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  97:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __IO uint32_t uwTick;
  98:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  99:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
 100:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 101:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
 102:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Exported functions ---------------------------------------------------------*/
 103:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 104:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 105:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 106:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 107:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 108:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
 109:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  *  @brief    Initialization and de-initialization functions
 110:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  *
 111:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @verbatim
 112:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 113:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****               ##### Initialization and de-initialization functions #####
 114:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 115:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    [..]  This section provides functions allowing to:
 116:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock 
 117:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           configuration. It initializes the source of time base also when timeout 
 118:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           is needed and the backup domain when enabled.
 119:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) de-Initializes common part of the HAL.
 120:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated 
 121:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           Tick interrupt priority. 
 122:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) Systick timer is used by default as source of time base, but user 
 123:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 124:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 125:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 126:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              handled in milliseconds basis.
 127:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 128:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 129:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 130:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 131:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 132:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 133:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 134:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             ISR process will be blocked. 
 135:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak  
 136:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 137:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @endverbatim
 138:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 139:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 140:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 141:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 142:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first 
 143:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 144:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         HAL function), it performs the following:
 145:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Configure the Flash prefetch.
 146:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
 147:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
ARM GAS  /tmp/ccWSCsX3.s 			page 4


 148:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 149:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Set NVIC Group Priority to 4.
 150:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file 
 151:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           "stm32f1xx_hal_msp.c" to do the global low level hardware initialization 
 152:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *            
 153:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 154:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 155:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         to have correct HAL operation.
 156:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 157:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 158:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 159:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 160:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure Flash prefetch */
 161:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 162:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if defined(STM32F101x6) || defined(STM32F101xB) || defined(STM32F101xE) || defined(STM32F101xG) ||
 163:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F102x6) || defined(STM32F102xB) || \
 164:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F103x6) || defined(STM32F103xB) || defined(STM32F103xE) || defined(STM32F103xG) ||
 165:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F105xC) || defined(STM32F107xC)
 166:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 167:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Prefetch buffer is not available on value line devices */
 168:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 169:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 170:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif /* PREFETCH_ENABLE */
 171:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 172:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Set Interrupt Group Priority */
 173:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 174:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 175:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is MSI) */
 176:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 177:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 178:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Init the low level hardware */
 179:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_MspInit();
 180:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 181:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 182:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 183:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 184:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 185:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 186:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function de-Initializes common part of the HAL and stops the source
 187:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        of time base.
 188:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is optional.
 189:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 190:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 191:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 192:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 193:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Reset of all peripherals */
 194:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 195:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 196:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 197:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 198:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 199:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 200:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if defined(STM32F105xC) || defined(STM32F107xC)
 201:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 202:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 203:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 204:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   
ARM GAS  /tmp/ccWSCsX3.s 			page 5


 205:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* De-Init the low level hardware */
 206:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_MspDeInit();
 207:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     
 208:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 209:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 210:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 211:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 212:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 213:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Initializes the MSP.
 214:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 215:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 216:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_MspInit(void)
 217:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
  26              		.loc 1 217 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 7047     		bx	lr
  32              		.cfi_endproc
  33              	.LFE66:
  35              		.section	.text.HAL_MspDeInit,"ax",%progbits
  36              		.align	1
  37              		.weak	HAL_MspDeInit
  38              		.syntax unified
  39              		.thumb
  40              		.thumb_func
  41              		.fpu softvfp
  43              	HAL_MspDeInit:
  44              	.LFB67:
 218:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 219:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 220:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
 221:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 222:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 223:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 224:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  DeInitializes the MSP.
 225:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 226:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 227:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_MspDeInit(void)
 228:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
  45              		.loc 1 228 0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49              		@ link register save eliminated.
  50 0000 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE67:
  54              		.section	.text.HAL_DeInit,"ax",%progbits
  55              		.align	1
  56              		.global	HAL_DeInit
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu softvfp
  62              	HAL_DeInit:
ARM GAS  /tmp/ccWSCsX3.s 			page 6


  63              	.LFB65:
 192:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Reset of all peripherals */
  64              		.loc 1 192 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
 192:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Reset of all peripherals */
  68              		.loc 1 192 0
  69 0000 10B5     		push	{r4, lr}
  70              	.LCFI0:
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 4, -8
  73              		.cfi_offset 14, -4
 194:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  74              		.loc 1 194 0
  75 0002 064B     		ldr	r3, .L5
  76 0004 4FF0FF32 		mov	r2, #-1
  77 0008 DA60     		str	r2, [r3, #12]
 195:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  78              		.loc 1 195 0
  79 000a 0024     		movs	r4, #0
  80 000c 1C61     		str	r4, [r3, #16]
 197:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  81              		.loc 1 197 0
  82 000e DA60     		str	r2, [r3, #12]
 198:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  83              		.loc 1 198 0
  84 0010 DC60     		str	r4, [r3, #12]
 206:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     
  85              		.loc 1 206 0
  86 0012 FFF7FEFF 		bl	HAL_MspDeInit
  87              	.LVL0:
 210:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  88              		.loc 1 210 0
  89 0016 2046     		mov	r0, r4
  90 0018 10BD     		pop	{r4, pc}
  91              	.L6:
  92 001a 00BF     		.align	2
  93              	.L5:
  94 001c 00100240 		.word	1073876992
  95              		.cfi_endproc
  96              	.LFE65:
  98              		.section	.text.HAL_InitTick,"ax",%progbits
  99              		.align	1
 100              		.weak	HAL_InitTick
 101              		.syntax unified
 102              		.thumb
 103              		.thumb_func
 104              		.fpu softvfp
 106              	HAL_InitTick:
 107              	.LFB68:
 229:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 230:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 231:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
 232:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 233:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 234:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
ARM GAS  /tmp/ccWSCsX3.s 			page 7


 235:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function configures the source of the time base. 
 236:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 237:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        Tick interrupt priority.
 238:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 239:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig(). 
 240:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 241:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 242:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 243:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       The the SysTick interrupt must have higher priority (numerically lower) 
 244:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 245:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 246:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementation  in user file.
 247:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param TickPriority: Tick interrupt priority.
 248:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 249:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 250:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 251:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 108              		.loc 1 251 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112              	.LVL1:
 113 0000 10B5     		push	{r4, lr}
 114              	.LCFI1:
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 4, -8
 117              		.cfi_offset 14, -4
 118 0002 0446     		mov	r4, r0
 252:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
 253:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_SYSTICK_Config(SystemCoreClock/1000U);
 119              		.loc 1 253 0
 120 0004 074B     		ldr	r3, .L9
 121 0006 1868     		ldr	r0, [r3]
 122              	.LVL2:
 123 0008 074B     		ldr	r3, .L9+4
 124 000a A3FB0030 		umull	r3, r0, r3, r0
 125 000e 8009     		lsrs	r0, r0, #6
 126 0010 FFF7FEFF 		bl	HAL_SYSTICK_Config
 127              	.LVL3:
 254:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 255:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /*Configure the SysTick IRQ priority */
 256:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority ,0U);
 128              		.loc 1 256 0
 129 0014 0022     		movs	r2, #0
 130 0016 2146     		mov	r1, r4
 131 0018 4FF0FF30 		mov	r0, #-1
 132 001c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 133              	.LVL4:
 257:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 258:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 259:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 260:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 134              		.loc 1 260 0
 135 0020 0020     		movs	r0, #0
 136 0022 10BD     		pop	{r4, pc}
 137              	.LVL5:
 138              	.L10:
ARM GAS  /tmp/ccWSCsX3.s 			page 8


 139              		.align	2
 140              	.L9:
 141 0024 00000000 		.word	SystemCoreClock
 142 0028 D34D6210 		.word	274877907
 143              		.cfi_endproc
 144              	.LFE68:
 146              		.section	.text.HAL_Init,"ax",%progbits
 147              		.align	1
 148              		.global	HAL_Init
 149              		.syntax unified
 150              		.thumb
 151              		.thumb_func
 152              		.fpu softvfp
 154              	HAL_Init:
 155              	.LFB64:
 159:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure Flash prefetch */
 156              		.loc 1 159 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160 0000 08B5     		push	{r3, lr}
 161              	.LCFI2:
 162              		.cfi_def_cfa_offset 8
 163              		.cfi_offset 3, -8
 164              		.cfi_offset 14, -4
 168:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 165              		.loc 1 168 0
 166 0002 074A     		ldr	r2, .L13
 167 0004 1368     		ldr	r3, [r2]
 168 0006 43F01003 		orr	r3, r3, #16
 169 000a 1360     		str	r3, [r2]
 173:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 170              		.loc 1 173 0
 171 000c 0320     		movs	r0, #3
 172 000e FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 173              	.LVL6:
 176:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 174              		.loc 1 176 0
 175 0012 0F20     		movs	r0, #15
 176 0014 FFF7FEFF 		bl	HAL_InitTick
 177              	.LVL7:
 179:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 178              		.loc 1 179 0
 179 0018 FFF7FEFF 		bl	HAL_MspInit
 180              	.LVL8:
 183:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 181              		.loc 1 183 0
 182 001c 0020     		movs	r0, #0
 183 001e 08BD     		pop	{r3, pc}
 184              	.L14:
 185              		.align	2
 186              	.L13:
 187 0020 00200240 		.word	1073881088
 188              		.cfi_endproc
 189              	.LFE64:
 191              		.section	.text.HAL_IncTick,"ax",%progbits
 192              		.align	1
ARM GAS  /tmp/ccWSCsX3.s 			page 9


 193              		.weak	HAL_IncTick
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu softvfp
 199              	HAL_IncTick:
 200              	.LFB69:
 261:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 262:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 263:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
 264:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 265:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 266:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 267:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *  @brief    HAL Control functions
 268:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
 269:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @verbatim
 270:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 271:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                       ##### HAL Control functions #####
 272:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 273:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]  This section provides functions allowing to:
 274:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Provide a tick value in millisecond
 275:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Provide a blocking delay in millisecond
 276:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Suspend the time base source interrupt
 277:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Resume the time base source interrupt
 278:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the HAL API driver version
 279:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the device identifier
 280:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the device revision identifier
 281:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 282:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 283:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 284:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 285:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @endverbatim
 286:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 287:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 288:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 289:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 290:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 291:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        used as application time base.
 292:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 293:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       in Systick ISR.
 294:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 295:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      implementations in user file.
 296:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 297:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 298:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_IncTick(void)
 299:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 201              		.loc 1 299 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              		@ link register save eliminated.
 300:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uwTick++;
 206              		.loc 1 300 0
 207 0000 024A     		ldr	r2, .L16
 208 0002 1368     		ldr	r3, [r2]
 209 0004 0133     		adds	r3, r3, #1
 210 0006 1360     		str	r3, [r2]
ARM GAS  /tmp/ccWSCsX3.s 			page 10


 211 0008 7047     		bx	lr
 212              	.L17:
 213 000a 00BF     		.align	2
 214              	.L16:
 215 000c 00000000 		.word	uwTick
 216              		.cfi_endproc
 217              	.LFE69:
 219              		.section	.text.HAL_GetTick,"ax",%progbits
 220              		.align	1
 221              		.weak	HAL_GetTick
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 225              		.fpu softvfp
 227              	HAL_GetTick:
 228              	.LFB70:
 301:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 302:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 303:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 304:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Provides a tick value in millisecond.
 305:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note  This function is declared as __weak  to be overwritten  in case of other 
 306:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 307:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval tick value
 308:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 309:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 310:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 229              		.loc 1 310 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 311:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return uwTick;
 234              		.loc 1 311 0
 235 0000 014B     		ldr	r3, .L19
 236 0002 1868     		ldr	r0, [r3]
 312:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 237              		.loc 1 312 0
 238 0004 7047     		bx	lr
 239              	.L20:
 240 0006 00BF     		.align	2
 241              	.L19:
 242 0008 00000000 		.word	uwTick
 243              		.cfi_endproc
 244              	.LFE70:
 246              		.section	.text.HAL_Delay,"ax",%progbits
 247              		.align	1
 248              		.weak	HAL_Delay
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 252              		.fpu softvfp
 254              	HAL_Delay:
 255              	.LFB71:
 313:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 314:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 315:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based 
 316:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        on variable incremented.
ARM GAS  /tmp/ccWSCsX3.s 			page 11


 317:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 318:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 319:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is incremented.
 320:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 321:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 322:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param Delay: specifies the delay time length, in milliseconds.
 323:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 324:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 325:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_Delay(__IO uint32_t Delay)
 326:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 256              		.loc 1 326 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 8
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              	.LVL9:
 261 0000 30B5     		push	{r4, r5, lr}
 262              	.LCFI3:
 263              		.cfi_def_cfa_offset 12
 264              		.cfi_offset 4, -12
 265              		.cfi_offset 5, -8
 266              		.cfi_offset 14, -4
 267 0002 83B0     		sub	sp, sp, #12
 268              	.LCFI4:
 269              		.cfi_def_cfa_offset 24
 270 0004 0190     		str	r0, [sp, #4]
 327:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 271              		.loc 1 327 0
 272 0006 FFF7FEFF 		bl	HAL_GetTick
 273              	.LVL10:
 274 000a 0546     		mov	r5, r0
 275              	.LVL11:
 328:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uint32_t wait = Delay;
 276              		.loc 1 328 0
 277 000c 019C     		ldr	r4, [sp, #4]
 278              	.LVL12:
 329:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   
 330:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Add a period to guarantee minimum wait */
 331:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 279              		.loc 1 331 0
 280 000e B4F1FF3F 		cmp	r4, #-1
 281 0012 00D0     		beq	.L23
 332:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 333:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****      wait++;
 282              		.loc 1 333 0
 283 0014 0134     		adds	r4, r4, #1
 284              	.LVL13:
 285              	.L23:
 334:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 335:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   
 336:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 286              		.loc 1 336 0 discriminator 1
 287 0016 FFF7FEFF 		bl	HAL_GetTick
 288              	.LVL14:
 289 001a 401B     		subs	r0, r0, r5
 290 001c A042     		cmp	r0, r4
 291 001e FAD3     		bcc	.L23
 337:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
ARM GAS  /tmp/ccWSCsX3.s 			page 12


 338:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 339:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 292              		.loc 1 339 0
 293 0020 03B0     		add	sp, sp, #12
 294              	.LCFI5:
 295              		.cfi_def_cfa_offset 12
 296              		@ sp needed
 297 0022 30BD     		pop	{r4, r5, pc}
 298              		.cfi_endproc
 299              	.LFE71:
 301              		.section	.text.HAL_SuspendTick,"ax",%progbits
 302              		.align	1
 303              		.weak	HAL_SuspendTick
 304              		.syntax unified
 305              		.thumb
 306              		.thumb_func
 307              		.fpu softvfp
 309              	HAL_SuspendTick:
 310              	.LFB72:
 340:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 341:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 342:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Suspend Tick increment.
 343:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 344:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 345:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment 
 346:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is suspended.
 347:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 348:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 349:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 350:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 351:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_SuspendTick(void)
 352:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 311              		.loc 1 352 0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 0
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315              		@ link register save eliminated.
 353:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Disable SysTick Interrupt */
 354:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 316              		.loc 1 354 0
 317 0000 024A     		ldr	r2, .L26
 318 0002 1368     		ldr	r3, [r2]
 319 0004 23F00203 		bic	r3, r3, #2
 320 0008 1360     		str	r3, [r2]
 321 000a 7047     		bx	lr
 322              	.L27:
 323              		.align	2
 324              	.L26:
 325 000c 10E000E0 		.word	-536813552
 326              		.cfi_endproc
 327              	.LFE72:
 329              		.section	.text.HAL_ResumeTick,"ax",%progbits
 330              		.align	1
 331              		.weak	HAL_ResumeTick
 332              		.syntax unified
 333              		.thumb
 334              		.thumb_func
ARM GAS  /tmp/ccWSCsX3.s 			page 13


 335              		.fpu softvfp
 337              	HAL_ResumeTick:
 338              	.LFB73:
 355:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 356:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 357:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 358:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Resume Tick increment.
 359:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 360:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 361:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment 
 362:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is resumed.
 363:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 364:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 365:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 366:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 367:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_ResumeTick(void)
 368:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 339              		.loc 1 368 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 0, uses_anonymous_args = 0
 343              		@ link register save eliminated.
 369:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Enable SysTick Interrupt */
 370:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 344              		.loc 1 370 0
 345 0000 024A     		ldr	r2, .L29
 346 0002 1368     		ldr	r3, [r2]
 347 0004 43F00203 		orr	r3, r3, #2
 348 0008 1360     		str	r3, [r2]
 349 000a 7047     		bx	lr
 350              	.L30:
 351              		.align	2
 352              	.L29:
 353 000c 10E000E0 		.word	-536813552
 354              		.cfi_endproc
 355              	.LFE73:
 357              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 358              		.align	1
 359              		.global	HAL_GetHalVersion
 360              		.syntax unified
 361              		.thumb
 362              		.thumb_func
 363              		.fpu softvfp
 365              	HAL_GetHalVersion:
 366              	.LFB74:
 371:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 372:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 373:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 374:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns the HAL revision
 375:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 376:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 377:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 378:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 367              		.loc 1 378 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccWSCsX3.s 			page 14


 371              		@ link register save eliminated.
 379:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  return __STM32F1xx_HAL_VERSION;
 380:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 372              		.loc 1 380 0
 373 0000 0048     		ldr	r0, .L32
 374 0002 7047     		bx	lr
 375              	.L33:
 376              		.align	2
 377              	.L32:
 378 0004 00010101 		.word	16843008
 379              		.cfi_endproc
 380              	.LFE74:
 382              		.section	.text.HAL_GetREVID,"ax",%progbits
 383              		.align	1
 384              		.global	HAL_GetREVID
 385              		.syntax unified
 386              		.thumb
 387              		.thumb_func
 388              		.fpu softvfp
 390              	HAL_GetREVID:
 391              	.LFB75:
 381:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 382:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 383:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Returns the device revision identifier.
 384:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 385:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 386:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 387:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 388:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 389:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 390:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 391:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device revision identifier
 392:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 393:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetREVID(void)
 394:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 392              		.loc 1 394 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396              		@ link register save eliminated.
 395:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return((DBGMCU->IDCODE) >> DBGMCU_IDCODE_REV_ID_Pos);
 397              		.loc 1 395 0
 398 0000 014B     		ldr	r3, .L35
 399 0002 1868     		ldr	r0, [r3]
 396:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 400              		.loc 1 396 0
 401 0004 000C     		lsrs	r0, r0, #16
 402 0006 7047     		bx	lr
 403              	.L36:
 404              		.align	2
 405              	.L35:
 406 0008 002004E0 		.word	-536600576
 407              		.cfi_endproc
 408              	.LFE75:
 410              		.section	.text.HAL_GetDEVID,"ax",%progbits
 411              		.align	1
 412              		.global	HAL_GetDEVID
ARM GAS  /tmp/ccWSCsX3.s 			page 15


 413              		.syntax unified
 414              		.thumb
 415              		.thumb_func
 416              		.fpu softvfp
 418              	HAL_GetDEVID:
 419              	.LFB76:
 397:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 398:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 399:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns the device identifier.
 400:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 401:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 402:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 403:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 404:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 405:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 406:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 407:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 408:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 409:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetDEVID(void)
 410:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 420              		.loc 1 410 0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 0
 423              		@ frame_needed = 0, uses_anonymous_args = 0
 424              		@ link register save eliminated.
 411:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 425              		.loc 1 411 0
 426 0000 024B     		ldr	r3, .L38
 427 0002 1868     		ldr	r0, [r3]
 412:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 428              		.loc 1 412 0
 429 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 430 0008 7047     		bx	lr
 431              	.L39:
 432 000a 00BF     		.align	2
 433              	.L38:
 434 000c 002004E0 		.word	-536600576
 435              		.cfi_endproc
 436              	.LFE76:
 438              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 439              		.align	1
 440              		.global	HAL_DBGMCU_EnableDBGSleepMode
 441              		.syntax unified
 442              		.thumb
 443              		.thumb_func
 444              		.fpu softvfp
 446              	HAL_DBGMCU_EnableDBGSleepMode:
 447              	.LFB77:
 413:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 414:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 415:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 416:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 417:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 418:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 419:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 448              		.loc 1 419 0
 449              		.cfi_startproc
ARM GAS  /tmp/ccWSCsX3.s 			page 16


 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452              		@ link register save eliminated.
 420:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 453              		.loc 1 420 0
 454 0000 024A     		ldr	r2, .L41
 455 0002 5368     		ldr	r3, [r2, #4]
 456 0004 43F00103 		orr	r3, r3, #1
 457 0008 5360     		str	r3, [r2, #4]
 458 000a 7047     		bx	lr
 459              	.L42:
 460              		.align	2
 461              	.L41:
 462 000c 002004E0 		.word	-536600576
 463              		.cfi_endproc
 464              	.LFE77:
 466              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 467              		.align	1
 468              		.global	HAL_DBGMCU_DisableDBGSleepMode
 469              		.syntax unified
 470              		.thumb
 471              		.thumb_func
 472              		.fpu softvfp
 474              	HAL_DBGMCU_DisableDBGSleepMode:
 475              	.LFB78:
 421:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 422:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 423:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 424:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 425:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 426:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 427:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 428:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 429:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 430:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 431:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 432:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 433:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 434:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 435:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 476              		.loc 1 435 0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 0
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 480              		@ link register save eliminated.
 436:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 481              		.loc 1 436 0
 482 0000 024A     		ldr	r2, .L44
 483 0002 5368     		ldr	r3, [r2, #4]
 484 0004 23F00103 		bic	r3, r3, #1
 485 0008 5360     		str	r3, [r2, #4]
 486 000a 7047     		bx	lr
 487              	.L45:
 488              		.align	2
 489              	.L44:
 490 000c 002004E0 		.word	-536600576
 491              		.cfi_endproc
ARM GAS  /tmp/ccWSCsX3.s 			page 17


 492              	.LFE78:
 494              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 495              		.align	1
 496              		.global	HAL_DBGMCU_EnableDBGStopMode
 497              		.syntax unified
 498              		.thumb
 499              		.thumb_func
 500              		.fpu softvfp
 502              	HAL_DBGMCU_EnableDBGStopMode:
 503              	.LFB79:
 437:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 438:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 439:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 440:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 441:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 442:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 443:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 444:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 445:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 446:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 447:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 448:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On all STM32F1 devices:
 449:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       If the system tick timer interrupt is enabled during the Stop mode 
 450:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug (DBG_STOP bit set in the DBGMCU_CR register ), it will wakeup
 451:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       the system from Stop mode.
 452:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Workaround: To debug the Stop mode, disable the system tick timer 
 453:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       interrupt.
 454:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 455:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On all STM32F1 devices:
 456:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       If the system tick timer interrupt is enabled during the Stop mode  
 457:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug (DBG_STOP bit set in the DBGMCU_CR register ), it will wakeup
 458:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       the system from Stop mode.
 459:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Workaround: To debug the Stop mode, disable the system tick timer
 460:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       interrupt.
 461:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 462:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 463:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 464:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 465:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 504              		.loc 1 465 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 466:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 509              		.loc 1 466 0
 510 0000 024A     		ldr	r2, .L47
 511 0002 5368     		ldr	r3, [r2, #4]
 512 0004 43F00203 		orr	r3, r3, #2
 513 0008 5360     		str	r3, [r2, #4]
 514 000a 7047     		bx	lr
 515              	.L48:
 516              		.align	2
 517              	.L47:
 518 000c 002004E0 		.word	-536600576
 519              		.cfi_endproc
 520              	.LFE79:
ARM GAS  /tmp/ccWSCsX3.s 			page 18


 522              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 523              		.align	1
 524              		.global	HAL_DBGMCU_DisableDBGStopMode
 525              		.syntax unified
 526              		.thumb
 527              		.thumb_func
 528              		.fpu softvfp
 530              	HAL_DBGMCU_DisableDBGStopMode:
 531              	.LFB80:
 467:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 468:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 469:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 470:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 471:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 472:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 473:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 474:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 475:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 476:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 477:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 478:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 479:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 480:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 481:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 532              		.loc 1 481 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              		@ link register save eliminated.
 482:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 537              		.loc 1 482 0
 538 0000 024A     		ldr	r2, .L50
 539 0002 5368     		ldr	r3, [r2, #4]
 540 0004 23F00203 		bic	r3, r3, #2
 541 0008 5360     		str	r3, [r2, #4]
 542 000a 7047     		bx	lr
 543              	.L51:
 544              		.align	2
 545              	.L50:
 546 000c 002004E0 		.word	-536600576
 547              		.cfi_endproc
 548              	.LFE80:
 550              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 551              		.align	1
 552              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 553              		.syntax unified
 554              		.thumb
 555              		.thumb_func
 556              		.fpu softvfp
 558              	HAL_DBGMCU_EnableDBGStandbyMode:
 559              	.LFB81:
 483:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 484:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 485:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 486:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 487:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 488:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
ARM GAS  /tmp/ccWSCsX3.s 			page 19


 489:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 490:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 491:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 492:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 493:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 494:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 495:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 496:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 497:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 560              		.loc 1 497 0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 0
 563              		@ frame_needed = 0, uses_anonymous_args = 0
 564              		@ link register save eliminated.
 498:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 565              		.loc 1 498 0
 566 0000 024A     		ldr	r2, .L53
 567 0002 5368     		ldr	r3, [r2, #4]
 568 0004 43F00403 		orr	r3, r3, #4
 569 0008 5360     		str	r3, [r2, #4]
 570 000a 7047     		bx	lr
 571              	.L54:
 572              		.align	2
 573              	.L53:
 574 000c 002004E0 		.word	-536600576
 575              		.cfi_endproc
 576              	.LFE81:
 578              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 579              		.align	1
 580              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 581              		.syntax unified
 582              		.thumb
 583              		.thumb_func
 584              		.fpu softvfp
 586              	HAL_DBGMCU_DisableDBGStandbyMode:
 587              	.LFB82:
 499:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 500:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 501:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 502:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 503:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 504:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 505:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 506:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 507:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 508:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 509:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 510:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 511:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 512:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 513:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 588              		.loc 1 513 0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 0
 591              		@ frame_needed = 0, uses_anonymous_args = 0
 592              		@ link register save eliminated.
 514:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
ARM GAS  /tmp/ccWSCsX3.s 			page 20


 593              		.loc 1 514 0
 594 0000 024A     		ldr	r2, .L56
 595 0002 5368     		ldr	r3, [r2, #4]
 596 0004 23F00403 		bic	r3, r3, #4
 597 0008 5360     		str	r3, [r2, #4]
 598 000a 7047     		bx	lr
 599              	.L57:
 600              		.align	2
 601              	.L56:
 602 000c 002004E0 		.word	-536600576
 603              		.cfi_endproc
 604              	.LFE82:
 606              		.section	.text.HAL_GetUID,"ax",%progbits
 607              		.align	1
 608              		.global	HAL_GetUID
 609              		.syntax unified
 610              		.thumb
 611              		.thumb_func
 612              		.fpu softvfp
 614              	HAL_GetUID:
 615              	.LFB83:
 515:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 516:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 517:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 518:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Return the unique device identifier (UID based on 96 bits)
 519:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param UID: pointer to 3 words array.
 520:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 521:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 522:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_GetUID(uint32_t *UID)
 523:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 616              		.loc 1 523 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 0
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 620              		@ link register save eliminated.
 621              	.LVL15:
 524:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   UID[0] = (uint32_t)(READ_REG(*((uint32_t *)UID_BASE)));
 622              		.loc 1 524 0
 623 0000 044B     		ldr	r3, .L59
 624 0002 1B68     		ldr	r3, [r3]
 625 0004 0360     		str	r3, [r0]
 525:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   UID[1] = (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 626              		.loc 1 525 0
 627 0006 044B     		ldr	r3, .L59+4
 628 0008 1B68     		ldr	r3, [r3]
 629 000a 4360     		str	r3, [r0, #4]
 526:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   UID[2] = (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 630              		.loc 1 526 0
 631 000c 034B     		ldr	r3, .L59+8
 632 000e 1B68     		ldr	r3, [r3]
 633 0010 8360     		str	r3, [r0, #8]
 634 0012 7047     		bx	lr
 635              	.L60:
 636              		.align	2
 637              	.L59:
 638 0014 E8F7FF1F 		.word	536868840
 639 0018 ECF7FF1F 		.word	536868844
ARM GAS  /tmp/ccWSCsX3.s 			page 21


 640 001c F0F7FF1F 		.word	536868848
 641              		.cfi_endproc
 642              	.LFE83:
 644              		.comm	uwTick,4,4
 645              		.text
 646              	.Letext0:
 647              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 648              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 649              		.file 4 "Libraries/CMSIS/Include/core_cm3.h"
 650              		.file 5 "Libraries/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 651              		.file 6 "Libraries/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 652              		.file 7 "/usr/include/newlib/sys/lock.h"
 653              		.file 8 "/usr/include/newlib/sys/_types.h"
 654              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 655              		.file 10 "/usr/include/newlib/sys/reent.h"
 656              		.file 11 "Libraries/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 657              		.file 12 "Libraries/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/ccWSCsX3.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal.c
     /tmp/ccWSCsX3.s:16     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccWSCsX3.s:23     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccWSCsX3.s:36     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccWSCsX3.s:43     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccWSCsX3.s:55     .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccWSCsX3.s:62     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccWSCsX3.s:94     .text.HAL_DeInit:000000000000001c $d
     /tmp/ccWSCsX3.s:99     .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccWSCsX3.s:106    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccWSCsX3.s:141    .text.HAL_InitTick:0000000000000024 $d
     /tmp/ccWSCsX3.s:147    .text.HAL_Init:0000000000000000 $t
     /tmp/ccWSCsX3.s:154    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccWSCsX3.s:187    .text.HAL_Init:0000000000000020 $d
     /tmp/ccWSCsX3.s:192    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccWSCsX3.s:199    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccWSCsX3.s:215    .text.HAL_IncTick:000000000000000c $d
                            *COM*:0000000000000004 uwTick
     /tmp/ccWSCsX3.s:220    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccWSCsX3.s:227    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccWSCsX3.s:242    .text.HAL_GetTick:0000000000000008 $d
     /tmp/ccWSCsX3.s:247    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccWSCsX3.s:254    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccWSCsX3.s:302    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccWSCsX3.s:309    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccWSCsX3.s:325    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/ccWSCsX3.s:330    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccWSCsX3.s:337    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccWSCsX3.s:353    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/ccWSCsX3.s:358    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccWSCsX3.s:365    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccWSCsX3.s:378    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/ccWSCsX3.s:383    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccWSCsX3.s:390    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccWSCsX3.s:406    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/ccWSCsX3.s:411    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccWSCsX3.s:418    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccWSCsX3.s:434    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/ccWSCsX3.s:439    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/ccWSCsX3.s:446    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/ccWSCsX3.s:462    .text.HAL_DBGMCU_EnableDBGSleepMode:000000000000000c $d
     /tmp/ccWSCsX3.s:467    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/ccWSCsX3.s:474    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/ccWSCsX3.s:490    .text.HAL_DBGMCU_DisableDBGSleepMode:000000000000000c $d
     /tmp/ccWSCsX3.s:495    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccWSCsX3.s:502    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccWSCsX3.s:518    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/ccWSCsX3.s:523    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccWSCsX3.s:530    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccWSCsX3.s:546    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/ccWSCsX3.s:551    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccWSCsX3.s:558    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccWSCsX3.s:574    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/ccWSCsX3.s:579    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/ccWSCsX3.s:586    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccWSCsX3.s:602    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
ARM GAS  /tmp/ccWSCsX3.s 			page 23


     /tmp/ccWSCsX3.s:607    .text.HAL_GetUID:0000000000000000 $t
     /tmp/ccWSCsX3.s:614    .text.HAL_GetUID:0000000000000000 HAL_GetUID
     /tmp/ccWSCsX3.s:638    .text.HAL_GetUID:0000000000000014 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
