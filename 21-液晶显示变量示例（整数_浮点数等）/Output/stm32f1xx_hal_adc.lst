ARM GAS  /tmp/ccAQ3Ecv.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_hal_adc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
  16              		.align	1
  17              		.weak	HAL_ADC_MspInit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_ADC_MspInit:
  24              	.LFB66:
  25              		.file 1 "Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c"
   1:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
   2:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ******************************************************************************
   3:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @file    stm32f1xx_hal_adc.c
   4:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @author  MCD Application Team
   5:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @version V1.1.1
   6:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @date    12-May-2017
   7:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following 
   8:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          functionalities of the Analog to Digital Convertor (ADC)
   9:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          peripheral:
  10:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *           + Initialization and de-initialization functions
  11:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *             ++ Initialization and Configuration of ADC
  12:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *           + Operation functions
  13:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *             ++ Start, stop, get result of conversions of regular
  14:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *                group, using 3 possible modes: polling, interruption or DMA.
  15:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *           + Control functions
  16:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *             ++ Channels configuration on regular group
  17:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *             ++ Channels configuration on injected group
  18:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *             ++ Analog Watchdog configuration
  19:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *           + State functions
  20:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *             ++ ADC state machine management
  21:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *             ++ Interrupts and flags management
  22:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          Other functions (extended functions) are available in file 
  23:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          "stm32f1xx_hal_adc_ex.c".
  24:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *
  25:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   @verbatim
  26:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ==============================================================================
  27:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                      ##### ADC peripheral features #####
  28:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ==============================================================================
  29:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   [..]
  30:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) 12-bit resolution
  31:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  32:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion, end of injected
  33:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       conversion, and in case of analog watchdog or overrun events.
ARM GAS  /tmp/ccAQ3Ecv.s 			page 2


  34:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  35:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Single and continuous conversion modes.
  36:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  37:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  38:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  39:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  40:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  41:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Programmable sampling time (channel wise)
  42:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  43:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) ADC conversion of regular group and injected group.
  44:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  45:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) External trigger (timer or EXTI) 
  46:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       for both regular and injected groups.
  47:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  48:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
  49:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  50:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Multimode Dual mode (available on devices with 2 ADCs or more).
  51:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  52:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Configurable DMA data storage in Multimode Dual mode (available on devices
  53:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       with 2 DCs or more).
  54:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  55:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Configurable delay between conversions in Dual interleaved mode (available 
  56:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       on devices with 2 DCs or more).
  57:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  58:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) ADC calibration
  59:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  60:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) ADC supply requirements: 2.4 V to 3.6 V at full speed and down to 1.8 V at 
  61:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       slower speed.
  62:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  63:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to 
  64:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       Vdda or to an external voltage reference).
  65:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  66:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  67:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                      ##### How to use this driver #####
  68:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ==============================================================================
  69:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]
  70:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  71:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  72:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      ============================================================
  73:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      [..]
  74:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  75:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Enable the ADC interface
  76:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (++) As prerequisite, ADC clock must be configured at RCC top level.
  77:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****            Caution: On STM32F1, ADC clock frequency max is 14MHz (refer
  78:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                     to device datasheet).
  79:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                     Therefore, ADC clock prescaler must be configured in 
  80:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                     function of ADC clock source frequency to remain below
  81:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                     this maximum frequency.
  82:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) One clock setting is mandatory:
  83:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ADC clock (core clock, also possibly conversion clock).
  84:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              (+++) Example:
  85:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
  86:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                    other device clock parameters configuration:
  87:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) RCC_PeriphCLKInitTypeDef  PeriphClkInit;
  88:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) __ADC1_CLK_ENABLE();
  89:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
  90:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
ARM GAS  /tmp/ccAQ3Ecv.s 			page 3


  91:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
  92:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  93:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) ADC pins configuration
  94:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
  95:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
  96:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
  97:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_GPIO_Init()
  98:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  99:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 100:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Configure the NVIC for ADC
 101:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 102:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler() 
 103:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               into the function of corresponding ADC interruption vector 
 104:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               ADCx_IRQHandler().
 105:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 106:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 107:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
 108:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_DMA_Init().
 109:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Configure the NVIC for DMA
 110:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 111:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler() 
 112:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               into the function of corresponding DMA interruption vector 
 113:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 114:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 115:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      *** Configuration of ADC, groups regular/injected, channels parameters ***
 116:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      ==========================================================================
 117:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      [..]
 118:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 119:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 120:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 121:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         using function HAL_ADC_Init().
 122:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 123:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number, 
 124:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 125:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
 126:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 127:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, configure the injected group parameters (conversion trigger, 
 128:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         sequencer, ..., of injected group)
 129:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         and the channels for injected group parameters (channel number, 
 130:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         channel rank into sequencer, ..., into injected group)
 131:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         using function HAL_ADCEx_InjectedConfigChannel().
 132:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 133:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
 134:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         monitored, thresholds, ...)
 135:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 136:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 137:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, for devices with several ADC instances: configure the 
 138:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         multimode parameters
 139:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         using function HAL_ADCEx_MultiModeConfigChannel().
 140:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 141:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      *** Execution of ADC conversions ***
 142:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      ====================================
 143:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      [..]
 144:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 145:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, perform an automatic ADC calibration to improve the
 146:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         conversion accuracy
 147:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         using function HAL_ADCEx_Calibration_Start().
ARM GAS  /tmp/ccAQ3Ecv.s 			page 4


 148:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 149:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 150:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         transfer by DMA.
 151:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 152:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) ADC conversion by polling:
 153:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 154:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Start()
 155:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Wait for ADC conversion completion 
 156:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
 157:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (or for injected group: HAL_ADCEx_InjectedPollForConversion() )
 158:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Retrieve conversion results 
 159:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 160:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (or for injected group: HAL_ADCEx_InjectedGetValue() )
 161:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral 
 162:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Stop()
 163:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 164:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) ADC conversion by interruption: 
 165:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 166:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 167:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 168:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 169:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (this function must be implemented in user program)
 170:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (or for injected group: HAL_ADCEx_InjectedConvCpltCallback() )
 171:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Retrieve conversion results 
 172:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 173:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (or for injected group: HAL_ADCEx_InjectedGetValue() )
 174:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral 
 175:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 176:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 177:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 178:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 179:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 180:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 181:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 182:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (these functions must be implemented in user program)
 183:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 184:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 destination variable address.
 185:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral 
 186:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 187:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 188:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) For devices with several ADCs: ADC multimode conversion 
 189:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              with transfer by DMA:
 190:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Activate the ADC peripheral (slave) and start conversions
 191:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Start()
 192:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Activate the ADC peripheral (master) and start conversions
 193:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADCEx_MultiModeStart_DMA()
 194:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 195:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 196:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (these functions must be implemented in user program)
 197:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 198:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 destination variable address.
 199:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral (master)
 200:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADCEx_MultiModeStop_DMA()
 201:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral (slave)
 202:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 203:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 204:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      [..]
ARM GAS  /tmp/ccAQ3Ecv.s 			page 5


 205:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 206:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 207:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 208:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 209:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 210:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 211:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+@) HAL_ADCEx_InjectedConvCpltCallback()
 212:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 213:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      *** Deinitialization of ADC ***
 214:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      ============================================================
 215:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      [..]
 216:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 217:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Disable the ADC interface
 218:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 219:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) Hard reset of ADC peripherals
 220:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              using macro __ADCx_FORCE_RESET(), __ADCx_RELEASE_RESET().
 221:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) ADC clock disable
 222:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 223:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              (+++) Example:
 224:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 225:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                    other device clock parameters configuration:
 226:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC
 227:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection = RCC_ADCPLLCLK2_OFF
 228:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit)
 229:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 230:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) ADC pins configuration
 231:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
 232:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 233:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 234:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 235:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Disable the NVIC for ADC
 236:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 237:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 238:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 239:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Deinitialize the DMA
 240:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_DMA_Init().
 241:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Disable the NVIC for DMA
 242:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 243:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 244:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]
 245:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 246:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     @endverbatim
 247:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ******************************************************************************
 248:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @attention
 249:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *
 250:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 251:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *
 252:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * Redistribution and use in source and binary forms, with or without modification,
 253:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * are permitted provided that the following conditions are met:
 254:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 255:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *      this list of conditions and the following disclaimer.
 256:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 257:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *      this list of conditions and the following disclaimer in the documentation
 258:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *      and/or other materials provided with the distribution.
 259:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 260:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *      may be used to endorse or promote products derived from this software
 261:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *      without specific prior written permission.
ARM GAS  /tmp/ccAQ3Ecv.s 			page 6


 262:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *
 263:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 264:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 265:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 266:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 267:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 268:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 269:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 270:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 271:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 272:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 273:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *
 274:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ******************************************************************************  
 275:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 276:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 277:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 278:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #include "stm32f1xx_hal.h"
 279:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 280:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @addtogroup STM32F1xx_HAL_Driver
 281:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
 282:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 283:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 284:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC ADC
 285:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief ADC HAL module driver
 286:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
 287:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 288:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 289:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 290:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 291:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 292:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 293:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Private_Constants ADC Private Constants
 294:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
 295:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 296:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 297:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Timeout values for ADC enable and disable settling time.                 */
 298:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Values defined to be higher than worst cases: low clocks freq,           */
 299:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* maximum prescaler.                                                       */
 300:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Ex of profile low frequency : Clock source at 0.1 MHz, ADC clock         */
 301:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* prescaler 4, sampling time 12.5 ADC clock cycles, resolution 12 bits.    */
 302:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Unit: ms                                                                 */
 303:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   #define ADC_ENABLE_TIMEOUT              2U
 304:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   #define ADC_DISABLE_TIMEOUT             2U
 305:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 306:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Delay for ADC stabilization time.                                        */
 307:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Maximum delay is 1us (refer to device datasheet, parameter tSTAB).       */
 308:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Unit: us                                                                 */
 309:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   #define ADC_STAB_DELAY_US               1U
 310:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 311:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Delay for temperature sensor stabilization time.                         */
 312:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Maximum delay is 10us (refer to device datasheet, parameter tSTART).     */
 313:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Unit: us                                                                 */
 314:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   #define ADC_TEMPSENSOR_DELAY_US         10U
 315:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 316:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 317:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
 318:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
ARM GAS  /tmp/ccAQ3Ecv.s 			page 7


 319:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 320:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 321:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 322:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 323:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
 324:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
 325:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 326:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 327:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
 328:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 329:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 330:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 331:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 332:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 333:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
 334:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 335:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 336:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization/de-initialization functions 
 337:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief    Initialization and Configuration functions
 338:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *
 339:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @verbatim    
 340:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================
 341:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 342:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================
 343:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 344:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Initialize and configure the ADC. 
 345:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) De-initialize the ADC.
 346:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 347:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @endverbatim
 348:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
 349:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 350:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 351:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 352:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Initializes the ADC peripheral and regular group according to  
 353:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 354:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 355:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         (clock source APB2).
 356:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         See commented example code below that can be copied and uncommented 
 357:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         into HAL_ADC_MspInit().
 358:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 359:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 360:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 361:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef  
 362:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC  
 363:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 364:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         before HAL_ADC_Init().
 365:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 366:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         For parameters constraints, see comments of structure 
 367:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         "ADC_InitTypeDef".
 368:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire 
 369:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments 
 370:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 371:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
 372:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
 373:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 374:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
 375:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
ARM GAS  /tmp/ccAQ3Ecv.s 			page 8


 376:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 377:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tmp_cr1 = 0U;
 378:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tmp_cr2 = 0U;
 379:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tmp_sqr1 = 0U;
 380:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 381:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check ADC handle */
 382:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(hadc == NULL)
 383:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 384:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     return HAL_ERROR;
 385:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 386:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 387:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 388:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 389:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 390:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 391:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 392:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 393:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 394:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 395:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 396:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 397:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 398:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if(hadc->Init.DiscontinuousConvMode != DISABLE)
 399:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 400:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_DISCONT_NUMBER(hadc->Init.NbrOfDiscConversion));
 401:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 402:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 403:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 404:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* As prerequisite, into HAL_ADC_MspInit(), ADC clock must be configured    */
 405:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* at RCC top level.                                                        */
 406:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Refer to header of this file for more details on clock enabling          */
 407:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* procedure.                                                               */
 408:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 409:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Actions performed only if ADC is coming from state reset:                */
 410:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* - Initialization of ADC MSP                                              */
 411:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
 412:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 413:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Initialize ADC error code */
 414:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 415:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 416:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Allocate lock resource and initialize it */
 417:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 418:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 419:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Init the low level hardware */
 420:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 421:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 422:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 423:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 424:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Disable ADC peripheral */
 425:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Note: In case of ADC already enabled, precaution to not launch an        */
 426:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*       unwanted conversion while modifying register CR2 by writing 1 to   */
 427:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*       bit ADON.                                                          */
 428:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
 429:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 430:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 431:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 432:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* correctly completed.                                                     */
ARM GAS  /tmp/ccAQ3Ecv.s 			page 9


 433:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL) &&
 434:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (tmp_hal_status == HAL_OK)                                  )
 435:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 436:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state */
 437:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 438:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 439:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 440:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 441:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC parameters */
 442:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 443:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 444:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - data alignment                                                      */
 445:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - external trigger to start conversion                                */
 446:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - external trigger polarity (always set to 1, because needed for all  */
 447:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*    triggers: external trigger of SW start)                             */
 448:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - continuous conversion mode                                          */
 449:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Note: External trigger polarity (ADC_CR2_EXTTRIG) is set into          */
 450:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       HAL_ADC_Start_xxx functions because if set in this function,     */
 451:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       a conversion on injected group would start a conversion also on  */
 452:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       regular group after ADC enabling.                                */
 453:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tmp_cr2 |= (hadc->Init.DataAlign                               |
 454:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CFGR_EXTSEL(hadc, hadc->Init.ExternalTrigConv) |
 455:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CR2_CONTINUOUS(hadc->Init.ContinuousConvMode)   );
 456:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 457:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 458:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - scan mode                                                           */
 459:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - discontinuous mode disable/enable                                   */
 460:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - discontinuous mode number of conversions                            */
 461:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tmp_cr1 |= (ADC_CR1_SCAN_SET(hadc->Init.ScanConvMode));
 462:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 463:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable discontinuous mode only if continuous mode is disabled */
 464:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Note: If parameter "Init.ScanConvMode" is set to disable, parameter    */
 465:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       discontinuous is set anyway, but will have no effect on ADC HW.  */
 466:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 467:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 468:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (hadc->Init.ContinuousConvMode == DISABLE)
 469:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 470:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Enable the selected ADC regular discontinuous mode */
 471:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set the number of channels to be converted in discontinuous mode */
 472:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(tmp_cr1, ADC_CR1_DISCEN                                            |
 473:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                          ADC_CR1_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion)  );
 474:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 475:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       else
 476:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 477:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* ADC regular group settings continuous and sequencer discontinuous*/
 478:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* cannot be enabled simultaneously.                                */
 479:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 480:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Update ADC state machine to error */
 481:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 482:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 483:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set ADC error code to ADC IP internal error */
 484:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 485:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 486:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 487:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 488:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Update ADC configuration register CR1 with previous settings */
 489:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CR1,
ARM GAS  /tmp/ccAQ3Ecv.s 			page 10


 490:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR1_SCAN    |
 491:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR1_DISCEN  |
 492:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR1_DISCNUM    ,
 493:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  tmp_cr1             );
 494:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 495:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Update ADC configuration register CR2 with previous settings */
 496:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CR2,
 497:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR2_ALIGN   |
 498:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR2_EXTSEL  |
 499:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR2_EXTTRIG |
 500:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR2_CONT       ,
 501:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  tmp_cr2             );
 502:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 503:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 504:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 505:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 506:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 507:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*   Note: Scan mode is present by hardware on this device and, if        */
 508:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*   disabled, discards automatically nb of conversions. Anyway, nb of    */
 509:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*   conversions is forced to 0x00 for alignment over all STM32 devices.  */
 510:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 511:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*   parameter "NbrOfConversion"                                          */
 512:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (ADC_CR1_SCAN_SET(hadc->Init.ScanConvMode) == ADC_SCAN_ENABLE)
 513:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 514:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       tmp_sqr1 = ADC_SQR1_L_SHIFT(hadc->Init.NbrOfConversion);
 515:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 516:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 517:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SQR1,
 518:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR1_L          ,
 519:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                tmp_sqr1             );
 520:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 521:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Check back that ADC registers have effectively been configured to      */
 522:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* ensure of no potential problem of ADC core IP clocking.                */
 523:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Check through register CR2 (excluding bits set in other functions:     */
 524:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* execution control bits (ADON, JSWSTART, SWSTART), regular group bits   */
 525:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* (DMA), injected group bits (JEXTTRIG and JEXTSEL), channel internal    */
 526:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* measurement path bit (TSVREFE).                                        */
 527:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR2, ~(ADC_CR2_ADON | ADC_CR2_DMA |
 528:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                         ADC_CR2_SWSTART | ADC_CR2_JSWSTART |
 529:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                         ADC_CR2_JEXTTRIG | ADC_CR2_JEXTSEL |
 530:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                         ADC_CR2_TSVREFE                     ))
 531:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          == tmp_cr2)
 532:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 533:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC error code to none */
 534:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 535:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 536:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set the ADC state */
 537:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 538:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 539:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
 540:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 541:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
 542:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 543:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Update ADC state machine to error */
 544:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 545:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 546:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_ERROR_INTERNAL);
ARM GAS  /tmp/ccAQ3Ecv.s 			page 11


 547:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 548:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC error code to ADC IP internal error */
 549:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 550:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 551:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
 552:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 553:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 554:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 555:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
 556:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 557:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Update ADC state machine to error */
 558:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 559:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 560:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 561:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 562:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 563:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
 564:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
 565:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 566:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 567:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 568:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
 569:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         values, with deinitialization of the ADC MSP.
 570:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         If needed, the example code can be copied and uncommented into
 571:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         function HAL_ADC_MspDeInit().
 572:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
 573:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
 574:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 575:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef* hadc)
 576:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 577:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 578:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 579:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check ADC handle */
 580:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(hadc == NULL)
 581:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 582:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      return HAL_ERROR;
 583:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 584:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 585:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 586:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 587:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 588:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Set ADC state */
 589:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 590:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 591:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 592:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Disable ADC peripheral */
 593:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
 594:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 595:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 596:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 597:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* correctly completed.                                                     */
 598:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 599:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 600:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* ========== Reset ADC registers ========== */
 601:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 602:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 603:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
ARM GAS  /tmp/ccAQ3Ecv.s 			page 12


 604:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 605:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SR */
 606:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD | ADC_FLAG_JEOC | ADC_FLAG_EOC |
 607:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                 ADC_FLAG_JSTRT | ADC_FLAG_STRT));
 608:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                          
 609:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register CR1 */
 610:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CR1, (ADC_CR1_AWDEN   | ADC_CR1_JAWDEN | ADC_CR1_DISCNUM | 
 611:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR1_JDISCEN | ADC_CR1_DISCEN | ADC_CR1_JAUTO   | 
 612:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR1_AWDSGL  | ADC_CR1_SCAN   | ADC_CR1_JEOCIE  |   
 613:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR1_AWDIE   | ADC_CR1_EOCIE  | ADC_CR1_AWDCH    ));
 614:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 615:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register CR2 */
 616:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CR2, (ADC_CR2_TSVREFE | ADC_CR2_SWSTART | ADC_CR2_JSWSTART | 
 617:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR2_EXTTRIG | ADC_CR2_EXTSEL  | ADC_CR2_JEXTTRIG |  
 618:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR2_JEXTSEL | ADC_CR2_ALIGN   | ADC_CR2_DMA      |        
 619:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR2_RSTCAL  | ADC_CR2_CAL     | ADC_CR2_CONT     |         
 620:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR2_ADON                                          ));
 621:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 622:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SMPR1 */
 623:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SMPR1, (ADC_SMPR1_SMP17 | ADC_SMPR1_SMP16 | ADC_SMPR1_SMP15 | 
 624:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR1_SMP14 | ADC_SMPR1_SMP13 | ADC_SMPR1_SMP12 | 
 625:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR1_SMP11 | ADC_SMPR1_SMP10                    ));
 626:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 627:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SMPR2 */
 628:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SMPR2, (ADC_SMPR2_SMP9 | ADC_SMPR2_SMP8 | ADC_SMPR2_SMP7 | 
 629:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR2_SMP6 | ADC_SMPR2_SMP5 | ADC_SMPR2_SMP4 | 
 630:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR2_SMP3 | ADC_SMPR2_SMP2 | ADC_SMPR2_SMP1 | 
 631:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR2_SMP0                                    ));
 632:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 633:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JOFR1 */
 634:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JOFR1, ADC_JOFR1_JOFFSET1);
 635:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JOFR2 */
 636:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JOFR2, ADC_JOFR2_JOFFSET2);
 637:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JOFR3 */
 638:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JOFR3, ADC_JOFR3_JOFFSET3);
 639:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JOFR4 */
 640:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JOFR4, ADC_JOFR4_JOFFSET4);
 641:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 642:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register HTR */
 643:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->HTR, ADC_HTR_HT);
 644:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register LTR */
 645:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->LTR, ADC_LTR_LT);
 646:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 647:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SQR1 */
 648:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L    |
 649:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR1_SQ16 | ADC_SQR1_SQ15 | 
 650:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR1_SQ14 | ADC_SQR1_SQ13  );
 651:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 652:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SQR1 */
 653:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L    |
 654:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR1_SQ16 | ADC_SQR1_SQ15 | 
 655:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR1_SQ14 | ADC_SQR1_SQ13  );
 656:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 657:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SQR2 */
 658:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SQR2, ADC_SQR2_SQ12 | ADC_SQR2_SQ11 | ADC_SQR2_SQ10 | 
 659:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR2_SQ9  | ADC_SQR2_SQ8  | ADC_SQR2_SQ7   );
 660:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
ARM GAS  /tmp/ccAQ3Ecv.s 			page 13


 661:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SQR3 */
 662:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SQR3, ADC_SQR3_SQ6 | ADC_SQR3_SQ5 | ADC_SQR3_SQ4 | 
 663:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR3_SQ3 | ADC_SQR3_SQ2 | ADC_SQR3_SQ1  );
 664:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 665:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JSQR */
 666:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JSQR, ADC_JSQR_JL |
 667:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_JSQR_JSQ4 | ADC_JSQR_JSQ3 | 
 668:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_JSQR_JSQ2 | ADC_JSQR_JSQ1  );
 669:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 670:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JSQR */
 671:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JSQR, ADC_JSQR_JL |
 672:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_JSQR_JSQ4 | ADC_JSQR_JSQ3 | 
 673:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_JSQR_JSQ2 | ADC_JSQR_JSQ1  );
 674:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 675:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register DR */
 676:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* bits in access mode read only, no direct reset applicable*/
 677:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 678:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset registers JDR1, JDR2, JDR3, JDR4 */
 679:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* bits in access mode read only, no direct reset applicable*/
 680:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 681:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* ========== Hard reset ADC peripheral ========== */
 682:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Performs a global reset of the entire ADC peripheral: ADC state is     */
 683:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* forced to a similar state after device power-on.                       */
 684:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* If needed, copy-paste and uncomment the following reset code into      */
 685:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* function "void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)":              */
 686:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*                                                                        */
 687:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  __HAL_RCC_ADC1_FORCE_RESET()                                          */
 688:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  __HAL_RCC_ADC1_RELEASE_RESET()                                        */
 689:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 690:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* DeInit the low level hardware */
 691:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     HAL_ADC_MspDeInit(hadc);
 692:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 693:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC error code to none */
 694:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 695:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 696:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state */
 697:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     hadc->State = HAL_ADC_STATE_RESET; 
 698:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 699:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 700:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 701:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process unlocked */
 702:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 703:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 704:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
 705:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
 706:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 707:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 708:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 709:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Initializes the ADC MSP.
 710:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
 711:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
 712:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 713:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
 714:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
  26              		.loc 1 714 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccAQ3Ecv.s 			page 14


  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  32 0000 7047     		bx	lr
  33              		.cfi_endproc
  34              	.LFE66:
  36              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
  37              		.align	1
  38              		.weak	HAL_ADC_MspDeInit
  39              		.syntax unified
  40              		.thumb
  41              		.thumb_func
  42              		.fpu softvfp
  44              	HAL_ADC_MspDeInit:
  45              	.LFB67:
 715:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 716:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   UNUSED(hadc);
 717:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 718:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
 719:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    */ 
 720:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 721:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 722:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 723:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  DeInitializes the ADC MSP.
 724:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
 725:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
 726:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 727:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
 728:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
  46              		.loc 1 728 0
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 0
  49              		@ frame_needed = 0, uses_anonymous_args = 0
  50              		@ link register save eliminated.
  51              	.LVL1:
  52 0000 7047     		bx	lr
  53              		.cfi_endproc
  54              	.LFE67:
  56              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
  57              		.align	1
  58              		.global	HAL_ADC_PollForConversion
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  62              		.fpu softvfp
  64              	HAL_ADC_PollForConversion:
  65              	.LFB70:
 729:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 730:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   UNUSED(hadc);
 731:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 732:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
 733:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    */ 
 734:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 735:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 736:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 737:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
 738:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
ARM GAS  /tmp/ccAQ3Ecv.s 			page 15


 739:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 740:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 IO operation functions
 741:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  *  @brief    Input and Output operation functions
 742:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  *
 743:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @verbatim   
 744:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================
 745:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       ##### IO operation functions #####
 746:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================
 747:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 748:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Start conversion of regular group.
 749:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Stop conversion of regular group.
 750:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
 751:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Poll for conversion event.
 752:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Get result of regular channel conversion.
 753:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
 754:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
 755:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Handle ADC interrupt request
 756:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
 757:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
 758:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @endverbatim
 759:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
 760:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 761:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 762:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 763:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Enables ADC, starts conversion of regular group.
 764:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Interruptions enabled in this function: None.
 765:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
 766:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
 767:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 768:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
 769:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 770:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 771:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 772:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 773:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 774:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 775:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
 776:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
 777:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    
 778:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Enable the ADC peripheral */
 779:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_Enable(hadc);
 780:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 781:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
 782:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 783:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 784:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state                                                          */
 785:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
 786:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* - Set state bitfield related to regular operation                      */
 787:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 788:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC,
 789:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
 790:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 791:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set group injected state (from auto-injection) and multimode state     */
 792:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* for all cases of multimode: independent mode, multimode ADC master     */
 793:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* or multimode ADC slave (for devices with several ADCs):                */
 794:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
 795:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
ARM GAS  /tmp/ccAQ3Ecv.s 			page 16


 796:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state (ADC independent or master) */
 797:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 798:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 799:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If conversions on group regular are also triggering group injected,  */
 800:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* update ADC state.                                                    */
 801:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 802:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 803:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 804:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 805:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 806:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
 807:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 808:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state (ADC slave) */
 809:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 810:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 811:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If conversions on group regular are also triggering group injected,  */
 812:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* update ADC state.                                                    */
 813:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (ADC_MULTIMODE_AUTO_INJECTED(hadc))
 814:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 815:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 816:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 817:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 818:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 819:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
 820:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 821:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 822:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
 823:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 824:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 825:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
 826:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 827:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Reset ADC all error code fields */
 828:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 829:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 830:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 831:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Process unlocked */
 832:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 833:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 834:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 835:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 836:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Clear regular group conversion flag */
 837:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 838:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC);
 839:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 840:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable conversion of regular group.                                    */
 841:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* If software start has been selected, conversion starts immediately.    */
 842:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* If external trigger has been selected, conversion will start at next   */
 843:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* trigger event.                                                         */
 844:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Case of multimode enabled:                                             */ 
 845:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - if ADC is slave, ADC is enabled only (conversion is not started).   */
 846:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - if ADC is master, ADC is enabled and conversion is started.         */
 847:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* If ADC is master, ADC is enabled and conversion is started.            */
 848:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Note: Alternate trigger for single conversion could be to force an     */
 849:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       additional set of bit ADON "hadc->Instance->CR2 |= ADC_CR2_ADON;"*/
 850:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (ADC_IS_SOFTWARE_START_REGULAR(hadc)      &&
 851:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 852:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
ARM GAS  /tmp/ccAQ3Ecv.s 			page 17


 853:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Start ADC conversion on regular group with SW start */
 854:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->Instance->CR2, (ADC_CR2_SWSTART | ADC_CR2_EXTTRIG));
 855:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 856:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
 857:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 858:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Start ADC conversion on regular group with external trigger */
 859:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_EXTTRIG);
 860:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 861:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 862:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
 863:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 864:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Process unlocked */
 865:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 866:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 867:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 868:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
 869:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
 870:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 871:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 872:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 873:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in 
 874:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC peripheral.
 875:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential 
 876:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
 877:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
 878:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
 879:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status.
 880:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 881:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
 882:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 883:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 884:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 885:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 886:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 887:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      
 888:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
 889:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
 890:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 891:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 892:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Disable ADC peripheral */
 893:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
 894:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 895:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
 896:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 897:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 898:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state */
 899:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 900:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 901:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
 902:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 903:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 904:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process unlocked */
 905:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 906:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 907:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
 908:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
 909:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
ARM GAS  /tmp/ccAQ3Ecv.s 			page 18


 910:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 911:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 912:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
 913:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured 
 914:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         in DMA mode.
 915:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
 916:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         performed on each conversion.
 917:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   On STM32F1 devices, limitation in case of sequencer enabled
 918:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         (several ranks selected): polling cannot be done on each 
 919:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         conversion inside the sequence. In this case, polling is replaced by
 920:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         wait for maximum conversion time.
 921:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
 922:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  Timeout: Timeout value in millisecond.
 923:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
 924:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 925:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
 926:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
  66              		.loc 1 926 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 8
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70              	.LVL2:
  71              		.loc 1 926 0
  72 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 20
  75              		.cfi_offset 4, -20
  76              		.cfi_offset 5, -16
  77              		.cfi_offset 6, -12
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 83B0     		sub	sp, sp, #12
  81              	.LCFI1:
  82              		.cfi_def_cfa_offset 32
  83 0004 0546     		mov	r5, r0
  84 0006 0C46     		mov	r4, r1
  85              	.LVL3:
 927:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tickstart = 0U;
 928:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 929:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Variables for polling in case of scan mode enabled and polling for each  */
 930:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* conversion.                                                              */
 931:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __IO uint32_t Conversion_Timeout_CPU_cycles = 0U;
  86              		.loc 1 931 0
  87 0008 0023     		movs	r3, #0
  88 000a 0193     		str	r3, [sp, #4]
  89              	.LVL4:
 932:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles_max = 0U;
 933:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  
 934:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 935:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 936:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 937:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Get tick count */
 938:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tickstart = HAL_GetTick();
  90              		.loc 1 938 0
  91 000c FFF7FEFF 		bl	HAL_GetTick
  92              	.LVL5:
 939:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
ARM GAS  /tmp/ccAQ3Ecv.s 			page 19


 940:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Verification that ADC configuration is compliant with polling for        */
 941:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* each conversion:                                                         */
 942:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Particular case is ADC configured in DMA mode                            */
 943:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA))
  93              		.loc 1 943 0
  94 0010 2B68     		ldr	r3, [r5]
  95 0012 9A68     		ldr	r2, [r3, #8]
  96 0014 12F4807F 		tst	r2, #256
  97 0018 23D1     		bne	.L28
  98 001a 0646     		mov	r6, r0
 944:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 945:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Update ADC state machine to error */
 946:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 947:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 948:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Process unlocked */
 949:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 950:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 951:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     return HAL_ERROR;
 952:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 953:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 954:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Polling for end of conversion: differentiation if single/sequence        */
 955:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* conversion.                                                              */
 956:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*  - If single conversion for regular group (Scan mode disabled or enabled */
 957:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    with NbrOfConversion =1), flag EOC is used to determine the           */
 958:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    conversion completion.                                                */
 959:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*  - If sequence conversion for regular group (scan mode enabled and       */
 960:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    NbrOfConversion >=2), flag EOC is set only at the end of the          */
 961:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    sequence.                                                             */
 962:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    To poll for each conversion, the maximum conversion time is computed  */
 963:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    from ADC conversion time (selected sampling time + conversion time of */
 964:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    12.5 ADC clock cycles) and APB2/ADC clock prescalers (depending on    */
 965:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    settings, conversion time range can be from 28 to 32256 CPU cycles).  */
 966:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    As flag EOC is not set after each conversion, no timeout status can   */
 967:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    be set.                                                               */
 968:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_SCAN) &&
  99              		.loc 1 968 0
 100 001c 5A68     		ldr	r2, [r3, #4]
 101 001e 12F4807F 		tst	r2, #256
 102 0022 03D1     		bne	.L6
 969:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L)    )
 103              		.loc 1 969 0 discriminator 1
 104 0024 DB6A     		ldr	r3, [r3, #44]
 968:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L)    )
 105              		.loc 1 968 0 discriminator 1
 106 0026 13F4700F 		tst	r3, #15728640
 107 002a 24D0     		beq	.L8
 108              	.L6:
 970:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 971:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Wait until End of Conversion flag is raised */
 972:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     while(HAL_IS_BIT_CLR(hadc->Instance->SR, ADC_FLAG_EOC))
 973:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 974:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Check if timeout is disabled (set to infinite wait) */
 975:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if(Timeout != HAL_MAX_DELAY)
 976:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 977:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 978:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
 979:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* Update ADC state machine to timeout */
ARM GAS  /tmp/ccAQ3Ecv.s 			page 20


 980:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 981:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           
 982:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* Process unlocked */
 983:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 984:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           
 985:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           return HAL_TIMEOUT;
 986:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
 987:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 988:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 989:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 990:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
 991:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 992:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Replace polling by wait for maximum conversion time */
 993:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - Computation of CPU clock cycles corresponding to ADC clock cycles   */
 994:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*    and ADC maximum conversion cycles on all channels.                  */
 995:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - Wait for the expected ADC clock cycles delay                        */
 996:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     Conversion_Timeout_CPU_cycles_max = ((SystemCoreClock
 997:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                           / HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC))
 109              		.loc 1 997 0
 110 002c 4B4B     		ldr	r3, .L30
 111 002e 1F68     		ldr	r7, [r3]
 112 0030 0220     		movs	r0, #2
 113              	.LVL6:
 114 0032 FFF7FEFF 		bl	HAL_RCCEx_GetPeriphCLKFreq
 115              	.LVL7:
 116 0036 B7FBF0F7 		udiv	r7, r7, r0
 998:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                          * ADC_CONVCYCLES_MAX_RANGE(hadc)                 );
 117              		.loc 1 998 0
 118 003a 2B68     		ldr	r3, [r5]
 119 003c 1969     		ldr	r1, [r3, #16]
 120 003e 484A     		ldr	r2, .L30+4
 121 0040 1142     		tst	r1, r2
 122 0042 2FD1     		bne	.L12
 123              		.loc 1 998 0 is_stmt 0 discriminator 1
 124 0044 D968     		ldr	r1, [r3, #12]
 125 0046 02F15C42 		add	r2, r2, #-603979776
 126 004a 1142     		tst	r1, r2
 127 004c 2AD1     		bne	.L12
 128              		.loc 1 998 0 discriminator 3
 129 004e 1969     		ldr	r1, [r3, #16]
 130 0050 444A     		ldr	r2, .L30+8
 131 0052 1142     		tst	r1, r2
 132 0054 39D1     		bne	.L19
 133              		.loc 1 998 0 discriminator 5
 134 0056 DA68     		ldr	r2, [r3, #12]
 135 0058 434B     		ldr	r3, .L30+12
 136 005a 1A42     		tst	r2, r3
 137 005c 37D0     		beq	.L20
 138              		.loc 1 998 0
 139 005e 2920     		movs	r0, #41
 140 0060 3AE0     		b	.L13
 141              	.LVL8:
 142              	.L28:
 946:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 143              		.loc 1 946 0 is_stmt 1
 144 0062 AB6A     		ldr	r3, [r5, #40]
 145 0064 43F02003 		orr	r3, r3, #32
ARM GAS  /tmp/ccAQ3Ecv.s 			page 21


 146 0068 AB62     		str	r3, [r5, #40]
 949:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 147              		.loc 1 949 0
 148 006a 0023     		movs	r3, #0
 149 006c 85F82430 		strb	r3, [r5, #36]
 951:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 150              		.loc 1 951 0
 151 0070 0120     		movs	r0, #1
 152              	.LVL9:
 153              	.L5:
 999:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1000:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     while(Conversion_Timeout_CPU_cycles < Conversion_Timeout_CPU_cycles_max)
1001:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1002:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Check if timeout is disabled (set to infinite wait) */
1003:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if(Timeout != HAL_MAX_DELAY)
1004:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1005:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
1006:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
1007:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* Update ADC state machine to timeout */
1008:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
1009:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           
1010:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* Process unlocked */
1011:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
1012:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           
1013:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           return HAL_TIMEOUT;
1014:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
1015:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1016:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       Conversion_Timeout_CPU_cycles ++;
1017:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1018:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1019:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1020:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Clear regular group conversion flag */
1021:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
1022:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1023:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Update ADC state machine */
1024:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
1025:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1026:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
1027:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1028:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Note: On STM32F1 devices, in case of sequencer enabled                   */
1029:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*       (several ranks selected), end of conversion flag is raised         */
1030:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*       at the end of the sequence.                                        */
1031:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
1032:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)   )
1033:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {   
1034:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state */
1035:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
1036:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1037:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1038:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     { 
1039:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1040:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1041:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1042:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1043:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return ADC state */
1044:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return HAL_OK;
1045:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
ARM GAS  /tmp/ccAQ3Ecv.s 			page 22


 154              		.loc 1 1045 0
 155 0072 03B0     		add	sp, sp, #12
 156              	.LCFI2:
 157              		.cfi_remember_state
 158              		.cfi_def_cfa_offset 20
 159              		@ sp needed
 160 0074 F0BD     		pop	{r4, r5, r6, r7, pc}
 161              	.LVL10:
 162              	.L8:
 163              	.LCFI3:
 164              		.cfi_restore_state
 972:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 165              		.loc 1 972 0
 166 0076 2B68     		ldr	r3, [r5]
 167 0078 1B68     		ldr	r3, [r3]
 168 007a 13F0020F 		tst	r3, #2
 169 007e 48D1     		bne	.L11
 975:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 170              		.loc 1 975 0
 171 0080 B4F1FF3F 		cmp	r4, #-1
 172 0084 F7D0     		beq	.L8
 977:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
 173              		.loc 1 977 0
 174 0086 24B1     		cbz	r4, .L9
 977:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
 175              		.loc 1 977 0 is_stmt 0 discriminator 1
 176 0088 FFF7FEFF 		bl	HAL_GetTick
 177              	.LVL11:
 178 008c 801B     		subs	r0, r0, r6
 179 008e 8442     		cmp	r4, r0
 180 0090 F1D2     		bcs	.L8
 181              	.L9:
 980:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           
 182              		.loc 1 980 0 is_stmt 1
 183 0092 AB6A     		ldr	r3, [r5, #40]
 184 0094 43F00403 		orr	r3, r3, #4
 185 0098 AB62     		str	r3, [r5, #40]
 983:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           
 186              		.loc 1 983 0
 187 009a 0023     		movs	r3, #0
 188 009c 85F82430 		strb	r3, [r5, #36]
 985:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
 189              		.loc 1 985 0
 190 00a0 0320     		movs	r0, #3
 191 00a2 E6E7     		b	.L5
 192              	.L12:
 998:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 193              		.loc 1 998 0 discriminator 4
 194 00a4 1969     		ldr	r1, [r3, #16]
 195 00a6 2F4A     		ldr	r2, .L30+8
 196 00a8 1142     		tst	r1, r2
 197 00aa 04D1     		bne	.L14
 998:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 198              		.loc 1 998 0 is_stmt 0 discriminator 11
 199 00ac D968     		ldr	r1, [r3, #12]
 200 00ae 02F16E42 		add	r2, r2, #-301989888
 201 00b2 1142     		tst	r1, r2
ARM GAS  /tmp/ccAQ3Ecv.s 			page 23


 202 00b4 0DD0     		beq	.L21
 203              	.L14:
 998:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 204              		.loc 1 998 0 discriminator 14
 205 00b6 1969     		ldr	r1, [r3, #16]
 206 00b8 2C4A     		ldr	r2, .L30+16
 207 00ba 0A40     		ands	r2, r2, r1
 208 00bc 5AB9     		cbnz	r2, .L22
 998:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 209              		.loc 1 998 0 discriminator 15
 210 00be DA68     		ldr	r2, [r3, #12]
 211 00c0 2A4B     		ldr	r3, .L30+16
 212 00c2 1340     		ands	r3, r3, r2
 213 00c4 5BB1     		cbz	r3, .L23
 998:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 214              		.loc 1 998 0
 215 00c6 FC20     		movs	r0, #252
 216 00c8 06E0     		b	.L13
 217              	.L19:
 218 00ca 2920     		movs	r0, #41
 219 00cc 04E0     		b	.L13
 220              	.L20:
 221 00ce 1420     		movs	r0, #20
 222 00d0 02E0     		b	.L13
 223              	.L21:
 224 00d2 5420     		movs	r0, #84
 225 00d4 00E0     		b	.L13
 226              	.L22:
 227 00d6 FC20     		movs	r0, #252
 228              	.L13:
 996:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                           / HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC))
 229              		.loc 1 996 0 is_stmt 1
 230 00d8 07FB00F7 		mul	r7, r7, r0
 231              	.LVL12:
1000:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 232              		.loc 1 1000 0
 233 00dc 04E0     		b	.L15
 234              	.LVL13:
 235              	.L23:
 998:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 236              		.loc 1 998 0
 237 00de 5420     		movs	r0, #84
 238 00e0 FAE7     		b	.L13
 239              	.LVL14:
 240              	.L16:
1016:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 241              		.loc 1 1016 0
 242 00e2 019B     		ldr	r3, [sp, #4]
 243 00e4 0133     		adds	r3, r3, #1
 244 00e6 0193     		str	r3, [sp, #4]
 245              	.L15:
1000:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 246              		.loc 1 1000 0
 247 00e8 019B     		ldr	r3, [sp, #4]
 248 00ea 9F42     		cmp	r7, r3
 249 00ec 11D9     		bls	.L11
1003:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
ARM GAS  /tmp/ccAQ3Ecv.s 			page 24


 250              		.loc 1 1003 0
 251 00ee B4F1FF3F 		cmp	r4, #-1
 252 00f2 F6D0     		beq	.L16
1005:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
 253              		.loc 1 1005 0
 254 00f4 24B1     		cbz	r4, .L17
1005:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
 255              		.loc 1 1005 0 is_stmt 0 discriminator 1
 256 00f6 FFF7FEFF 		bl	HAL_GetTick
 257              	.LVL15:
 258 00fa 801B     		subs	r0, r0, r6
 259 00fc 8442     		cmp	r4, r0
 260 00fe F0D2     		bcs	.L16
 261              	.L17:
1008:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           
 262              		.loc 1 1008 0 is_stmt 1
 263 0100 AB6A     		ldr	r3, [r5, #40]
 264 0102 43F00403 		orr	r3, r3, #4
 265 0106 AB62     		str	r3, [r5, #40]
1011:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           
 266              		.loc 1 1011 0
 267 0108 0023     		movs	r3, #0
 268 010a 85F82430 		strb	r3, [r5, #36]
1013:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
 269              		.loc 1 1013 0
 270 010e 0320     		movs	r0, #3
 271 0110 AFE7     		b	.L5
 272              	.LVL16:
 273              	.L11:
1021:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 274              		.loc 1 1021 0
 275 0112 2B68     		ldr	r3, [r5]
 276 0114 6FF01202 		mvn	r2, #18
 277 0118 1A60     		str	r2, [r3]
1024:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 278              		.loc 1 1024 0
 279 011a AB6A     		ldr	r3, [r5, #40]
 280 011c 43F40073 		orr	r3, r3, #512
 281 0120 AB62     		str	r3, [r5, #40]
1031:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)   )
 282              		.loc 1 1031 0
 283 0122 2B68     		ldr	r3, [r5]
 284 0124 9B68     		ldr	r3, [r3, #8]
 285 0126 03F46023 		and	r3, r3, #917504
 286 012a B3F5602F 		cmp	r3, #917504
 287 012e 01D0     		beq	.L29
1044:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 288              		.loc 1 1044 0
 289 0130 0020     		movs	r0, #0
 290 0132 9EE7     		b	.L5
 291              	.L29:
1032:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {   
 292              		.loc 1 1032 0 discriminator 1
 293 0134 EB68     		ldr	r3, [r5, #12]
1031:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)   )
 294              		.loc 1 1031 0 discriminator 1
 295 0136 6BB9     		cbnz	r3, .L25
ARM GAS  /tmp/ccAQ3Ecv.s 			page 25


1035:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 296              		.loc 1 1035 0
 297 0138 AB6A     		ldr	r3, [r5, #40]
 298 013a 23F48073 		bic	r3, r3, #256
 299 013e AB62     		str	r3, [r5, #40]
1037:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     { 
 300              		.loc 1 1037 0
 301 0140 AB6A     		ldr	r3, [r5, #40]
 302 0142 13F4805F 		tst	r3, #4096
 303 0146 07D1     		bne	.L26
1039:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 304              		.loc 1 1039 0
 305 0148 AB6A     		ldr	r3, [r5, #40]
 306 014a 43F00103 		orr	r3, r3, #1
 307 014e AB62     		str	r3, [r5, #40]
1044:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 308              		.loc 1 1044 0
 309 0150 0020     		movs	r0, #0
 310 0152 8EE7     		b	.L5
 311              	.L25:
 312 0154 0020     		movs	r0, #0
 313 0156 8CE7     		b	.L5
 314              	.L26:
 315 0158 0020     		movs	r0, #0
 316 015a 8AE7     		b	.L5
 317              	.L31:
 318              		.align	2
 319              	.L30:
 320 015c 00000000 		.word	SystemCoreClock
 321 0160 24499224 		.word	613566756
 322 0164 92244912 		.word	306783378
 323 0168 92244900 		.word	4793490
 324 016c 49922400 		.word	2396745
 325              		.cfi_endproc
 326              	.LFE70:
 328              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 329              		.align	1
 330              		.global	HAL_ADC_PollForEvent
 331              		.syntax unified
 332              		.thumb
 333              		.thumb_func
 334              		.fpu softvfp
 336              	HAL_ADC_PollForEvent:
 337              	.LFB71:
1046:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1047:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1048:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Poll for conversion event.
1049:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1050:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  EventType: the ADC event type.
1051:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          This parameter can be one of the following values:
1052:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *            @arg ADC_AWD_EVENT: ADC Analog watchdog event.
1053:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  Timeout: Timeout value in millisecond.
1054:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
1055:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1056:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef* hadc, uint32_t EventType, uint32_t Timeou
1057:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 338              		.loc 1 1057 0
ARM GAS  /tmp/ccAQ3Ecv.s 			page 26


 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              	.LVL17:
 343 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 344              	.LCFI4:
 345              		.cfi_def_cfa_offset 24
 346              		.cfi_offset 3, -24
 347              		.cfi_offset 4, -20
 348              		.cfi_offset 5, -16
 349              		.cfi_offset 6, -12
 350              		.cfi_offset 7, -8
 351              		.cfi_offset 14, -4
 352 0002 0446     		mov	r4, r0
 353 0004 0E46     		mov	r6, r1
 354 0006 1546     		mov	r5, r2
 355              	.LVL18:
1058:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tickstart = 0U; 
1059:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1060:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1061:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1062:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
1063:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1064:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Get tick count */
1065:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tickstart = HAL_GetTick();
 356              		.loc 1 1065 0
 357 0008 FFF7FEFF 		bl	HAL_GetTick
 358              	.LVL19:
 359 000c 0746     		mov	r7, r0
 360              	.LVL20:
 361              	.L34:
1066:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1067:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check selected event flag */
1068:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   while(__HAL_ADC_GET_FLAG(hadc, EventType) == RESET)
 362              		.loc 1 1068 0
 363 000e 2368     		ldr	r3, [r4]
 364 0010 1A68     		ldr	r2, [r3]
 365 0012 36EA0202 		bics	r2, r6, r2
 366 0016 11D0     		beq	.L39
1069:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1070:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1071:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 367              		.loc 1 1071 0
 368 0018 B5F1FF3F 		cmp	r5, #-1
 369 001c F7D0     		beq	.L34
1072:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1073:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 370              		.loc 1 1073 0
 371 001e 25B1     		cbz	r5, .L35
 372              		.loc 1 1073 0 is_stmt 0 discriminator 1
 373 0020 FFF7FEFF 		bl	HAL_GetTick
 374              	.LVL21:
 375 0024 C01B     		subs	r0, r0, r7
 376 0026 8542     		cmp	r5, r0
 377 0028 F1D2     		bcs	.L34
 378              	.L35:
1074:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
ARM GAS  /tmp/ccAQ3Ecv.s 			page 27


1075:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Update ADC state machine to timeout */
1076:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 379              		.loc 1 1076 0 is_stmt 1
 380 002a A36A     		ldr	r3, [r4, #40]
 381 002c 43F00403 		orr	r3, r3, #4
 382 0030 A362     		str	r3, [r4, #40]
1077:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
1078:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Process unlocked */
1079:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 383              		.loc 1 1079 0
 384 0032 0023     		movs	r3, #0
 385 0034 84F82430 		strb	r3, [r4, #36]
1080:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
1081:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         return HAL_TIMEOUT;
 386              		.loc 1 1081 0
 387 0038 0320     		movs	r0, #3
 388 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 389              	.LVL22:
 390              	.L39:
1082:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1083:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1084:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1085:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1086:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Analog watchdog (level out of window) event */
1087:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Set ADC state */
1088:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 391              		.loc 1 1088 0
 392 003c A26A     		ldr	r2, [r4, #40]
 393 003e 42F48032 		orr	r2, r2, #65536
 394 0042 A262     		str	r2, [r4, #40]
1089:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1090:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Clear ADC analog watchdog flag */
1091:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
 395              		.loc 1 1091 0
 396 0044 6FF00102 		mvn	r2, #1
 397 0048 1A60     		str	r2, [r3]
1092:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1093:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return ADC state */
1094:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return HAL_OK;
 398              		.loc 1 1094 0
 399 004a 0020     		movs	r0, #0
1095:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 400              		.loc 1 1095 0
 401 004c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 402              		.cfi_endproc
 403              	.LFE71:
 405              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 406              		.align	1
 407              		.global	HAL_ADC_GetValue
 408              		.syntax unified
 409              		.thumb
 410              		.thumb_func
 411              		.fpu softvfp
 413              	HAL_ADC_GetValue:
 414              	.LFB76:
1096:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1097:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
ARM GAS  /tmp/ccAQ3Ecv.s 			page 28


1098:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Enables ADC, starts conversion of regular group with interruption.
1099:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Interruptions enabled in this function:
1100:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          - EOC (end of conversion of regular group)
1101:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1102:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1103:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
1104:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1105:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef* hadc)
1106:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1107:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1108:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1109:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1110:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1111:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1112:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
1113:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
1114:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1115:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Enable the ADC peripheral */
1116:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_Enable(hadc);
1117:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1118:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
1119:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1120:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1121:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state                                                          */
1122:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
1123:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* - Set state bitfield related to regular operation                      */
1124:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
1125:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_ADC
1126:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
1127:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1128:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set group injected state (from auto-injection) and multimode state     */
1129:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* for all cases of multimode: independent mode, multimode ADC master     */
1130:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* or multimode ADC slave (for devices with several ADCs):                */
1131:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
1132:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1133:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state (ADC independent or master) */
1134:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1135:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1136:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If conversions on group regular are also triggering group injected,  */
1137:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* update ADC state.                                                    */
1138:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
1139:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1140:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
1141:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1142:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1143:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1144:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1145:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state (ADC slave) */
1146:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1147:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1148:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If conversions on group regular are also triggering group injected,  */
1149:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* update ADC state.                                                    */
1150:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (ADC_MULTIMODE_AUTO_INJECTED(hadc))
1151:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1152:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1153:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1154:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
ARM GAS  /tmp/ccAQ3Ecv.s 			page 29


1155:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1156:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
1157:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1158:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1159:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
1160:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
1161:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1162:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1163:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1164:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Reset ADC all error code fields */
1165:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1166:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1167:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1168:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Process unlocked */
1169:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
1170:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
1171:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
1172:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1173:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
1174:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
1175:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC);
1176:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1177:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable end of conversion interrupt for regular group */
1178:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
1179:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1180:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable conversion of regular group.                                    */
1181:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* If software start has been selected, conversion starts immediately.    */
1182:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* If external trigger has been selected, conversion will start at next   */
1183:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* trigger event.                                                         */
1184:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Case of multimode enabled:                                             */ 
1185:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - if ADC is slave, ADC is enabled only (conversion is not started).   */
1186:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - if ADC is master, ADC is enabled and conversion is started.         */
1187:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (ADC_IS_SOFTWARE_START_REGULAR(hadc)      &&
1188:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
1189:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1190:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Start ADC conversion on regular group with SW start */
1191:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->Instance->CR2, (ADC_CR2_SWSTART | ADC_CR2_EXTTRIG));
1192:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1193:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1194:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1195:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Start ADC conversion on regular group with external trigger */
1196:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_EXTTRIG);
1197:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1198:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1199:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
1200:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1201:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Process unlocked */
1202:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
1203:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1204:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1205:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
1206:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
1207:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1208:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1209:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1210:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in 
1211:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         case of auto_injection mode), disable interrution of 
ARM GAS  /tmp/ccAQ3Ecv.s 			page 30


1212:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
1213:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1214:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
1215:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1216:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef* hadc)
1217:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1218:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1219:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1220:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1221:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1222:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      
1223:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
1224:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
1225:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1226:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
1227:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Disable ADC peripheral */
1228:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
1229:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1230:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
1231:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1232:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1233:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Disable ADC end of conversion interrupt for regular group */
1234:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
1235:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1236:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state */
1237:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
1238:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1239:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
1240:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1241:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1242:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process unlocked */
1243:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1244:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1245:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
1246:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
1247:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1248:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1249:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1250:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Enables ADC, starts conversion of regular group and transfers result
1251:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         through DMA.
1252:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Interruptions enabled in this function:
1253:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          - DMA transfer complete
1254:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          - DMA half transfer
1255:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1256:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   For devices with several ADCs: This function is for single-ADC mode 
1257:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         only. For multimode, use the dedicated MultimodeStart function.
1258:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   On STM32F1 devices, only ADC1 and ADC3 (ADC availability depending
1259:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         on devices) have DMA capability.
1260:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         ADC2 converted data can be transferred in dual ADC mode using DMA
1261:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         of ADC1 (ADC master in multimode).
1262:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         In case of using ADC1 with DMA on a device featuring 2 ADC
1263:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         instances: ADC1 conversion register DR contains ADC1 conversion 
1264:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         result (ADC1 register DR bits 0 to 11) and, additionally, ADC2 last
1265:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         conversion result (ADC1 register DR bits 16 to 27). Therefore, to
1266:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         have DMA transferring the conversion results of ADC1 only, DMA must
1267:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         be configured to transfer size: half word.
1268:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
ARM GAS  /tmp/ccAQ3Ecv.s 			page 31


1269:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  pData: The destination Buffer address.
1270:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  Length: The length of data to be transferred from ADC peripheral to memory.
1271:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
1272:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1273:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length)
1274:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1275:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1276:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1277:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1278:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_DMA_CAPABILITY_INSTANCE(hadc->Instance));
1279:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1280:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Verification if multimode is disabled (for devices with several ADC)     */
1281:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* If multimode is enabled, dedicated function multimode conversion         */
1282:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* start DMA must be used.                                                  */
1283:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(ADC_MULTIMODE_IS_ENABLE(hadc) == RESET)
1284:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1285:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Process locked */
1286:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_LOCK(hadc);
1287:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1288:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable the ADC peripheral */
1289:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1290:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1291:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1292:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1293:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1294:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state                                                        */
1295:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1296:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1297:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1298:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1299:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1300:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1301:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set group injected state (from auto-injection) and multimode state     */
1302:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* for all cases of multimode: independent mode, multimode ADC master     */
1303:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* or multimode ADC slave (for devices with several ADCs):                */
1304:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
1305:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1306:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state (ADC independent or master) */
1307:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1308:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1309:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If conversions on group regular are also triggering group injected,  */
1310:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* update ADC state.                                                    */
1311:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
1312:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1313:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
1314:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1315:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1316:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1317:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1318:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state (ADC slave) */
1319:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1320:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1321:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If conversions on group regular are also triggering group injected,  */
1322:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* update ADC state.                                                    */
1323:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (ADC_MULTIMODE_AUTO_INJECTED(hadc))
1324:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1325:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
ARM GAS  /tmp/ccAQ3Ecv.s 			page 32


1326:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1327:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1328:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1329:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* State machine update: Check if an injected conversion is ongoing */
1330:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1331:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1332:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Reset ADC error code fields related to conversions on group regular */
1333:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
1334:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1335:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       else
1336:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1337:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Reset ADC all error code fields */
1338:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
1339:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1340:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1341:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Process unlocked */
1342:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1343:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1344:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1345:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1346:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set the DMA transfer complete callback */
1347:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
1348:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1349:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set the DMA half transfer complete callback */
1350:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
1351:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1352:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set the DMA error callback */
1353:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
1354:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1355:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1356:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC   */
1357:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* start (in case of SW start):                                         */
1358:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1359:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Clear regular group conversion flag and overrun flag */
1360:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC           */
1361:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* operations)                                                          */
1362:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC);
1363:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1364:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Enable ADC DMA mode */
1365:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_DMA);
1366:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1367:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Start the DMA channel */
1368:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
1369:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1370:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1371:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1372:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1373:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* trigger event.                                                       */
1374:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (ADC_IS_SOFTWARE_START_REGULAR(hadc))
1375:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1376:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Start ADC conversion on regular group with SW start */
1377:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->Instance->CR2, (ADC_CR2_SWSTART | ADC_CR2_EXTTRIG));
1378:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1379:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       else
1380:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1381:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Start ADC conversion on regular group with external trigger */
1382:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->Instance->CR2, ADC_CR2_EXTTRIG);
ARM GAS  /tmp/ccAQ3Ecv.s 			page 33


1383:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1384:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1385:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1386:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1387:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Process unlocked */
1388:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1389:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1390:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1391:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
1392:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1393:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
1394:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1395:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1396:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
1397:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
1398:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1399:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1400:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1401:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in 
1402:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable 
1403:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         ADC peripheral.
1404:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential 
1405:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1406:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1407:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   For devices with several ADCs: This function is for single-ADC mode 
1408:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         only. For multimode, use the dedicated MultimodeStop function.
1409:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   On STM32F1 devices, only ADC1 and ADC3 (ADC availability depending
1410:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         on devices) have DMA capability.
1411:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1412:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status.
1413:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1414:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef* hadc)
1415:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1416:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1417:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1418:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1419:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_DMA_CAPABILITY_INSTANCE(hadc->Instance));
1420:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      
1421:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
1422:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
1423:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1424:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
1425:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Disable ADC peripheral */
1426:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
1427:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1428:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
1429:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1430:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1431:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Disable ADC DMA mode */
1432:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CR2, ADC_CR2_DMA);
1433:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1434:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
1435:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* DMA transfer is on going)                                              */
1436:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
1437:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1438:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Check if DMA channel effectively disabled */
1439:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
ARM GAS  /tmp/ccAQ3Ecv.s 			page 34


1440:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1441:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state */
1442:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1443:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1444:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1445:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1446:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1447:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1448:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Update ADC state machine to error */
1449:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1450:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1451:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1452:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1453:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process unlocked */
1454:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1455:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1456:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
1457:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
1458:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1459:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1460:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1461:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
1462:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   Reading register DR automatically clears ADC flag EOC
1463:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         (ADC group regular end of unitary conversion).
1464:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   This function does not clear ADC flag EOS 
1465:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         (ADC group regular end of sequence conversion).
1466:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Occurrence of flag EOS rising:
1467:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
1468:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *            to flag EOC.
1469:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          - If sequencer is composed of several ranks, during the scan
1470:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
1471:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *            both flags EOC and EOS are raised.
1472:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         To clear this flag, either use function: 
1473:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
1474:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         model polling: @ref HAL_ADC_PollForConversion() 
1475:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
1476:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1477:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval ADC group regular conversion data
1478:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1479:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
1480:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 415              		.loc 1 1480 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 419              		@ link register save eliminated.
 420              	.LVL23:
1481:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1482:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1483:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1484:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
1485:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*       cleared by hardware when reading register DR.                      */
1486:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1487:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return ADC converted value */ 
1488:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return hadc->Instance->DR;
 421              		.loc 1 1488 0
 422 0000 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccAQ3Ecv.s 			page 35


 423 0002 D86C     		ldr	r0, [r3, #76]
 424              	.LVL24:
1489:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 425              		.loc 1 1489 0
 426 0004 7047     		bx	lr
 427              		.cfi_endproc
 428              	.LFE76:
 430              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 431              		.align	1
 432              		.weak	HAL_ADC_ConvCpltCallback
 433              		.syntax unified
 434              		.thumb
 435              		.thumb_func
 436              		.fpu softvfp
 438              	HAL_ADC_ConvCpltCallback:
 439              	.LFB78:
1490:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1491:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1492:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Handles ADC interrupt request  
1493:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1494:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
1495:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1496:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef* hadc)
1497:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1498:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1499:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1500:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
1501:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
1502:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1503:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1504:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* ========== Check End of Conversion flag for regular group ========== */
1505:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(__HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOC))
1506:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1507:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC) )
1508:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1509:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Update state machine on conversion status if not in error state */
1510:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
1511:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1512:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set ADC state */
1513:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
1514:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1515:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1516:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Determine whether any further conversion upcoming on group regular   */
1517:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* by external trigger, continuous mode or scan sequence on going.      */
1518:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Note: On STM32F1 devices, in case of sequencer enabled               */
1519:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /*       (several ranks selected), end of conversion flag is raised     */
1520:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /*       at the end of the sequence.                                    */
1521:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
1522:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (hadc->Init.ContinuousConvMode == DISABLE)   )
1523:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1524:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Disable ADC end of conversion interrupt on group regular */
1525:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
1526:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
1527:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set ADC state */
1528:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
1529:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
1530:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
ARM GAS  /tmp/ccAQ3Ecv.s 			page 36


1531:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
1532:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1533:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
1534:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1535:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1536:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Conversion complete callback */
1537:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       HAL_ADC_ConvCpltCallback(hadc);
1538:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1539:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Clear regular group conversion flag */
1540:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
1541:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1542:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1543:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1544:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* ========== Check End of Conversion flag for injected group ========== */
1545:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(__HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOC))
1546:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1547:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOC))
1548:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1549:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Update state machine on conversion status if not in error state */
1550:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
1551:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1552:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set ADC state */
1553:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
1554:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1555:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1556:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Determine whether any further conversion upcoming on group injected  */
1557:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* by external trigger, scan sequence on going or by automatic injected */
1558:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* conversion from group regular (same conditions as group regular      */
1559:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* interruption disabling above).                                       */
1560:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Note: On STM32F1 devices, in case of sequencer enabled               */
1561:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /*       (several ranks selected), end of conversion flag is raised     */
1562:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /*       at the end of the sequence.                                    */
1563:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                     || 
1564:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&     
1565:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (ADC_IS_SOFTWARE_START_REGULAR(hadc)        &&
1566:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (hadc->Init.ContinuousConvMode == DISABLE)   )        )   )
1567:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1568:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Disable ADC end of conversion interrupt on group injected */
1569:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1570:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
1571:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set ADC state */
1572:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
1573:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1574:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
1575:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         { 
1576:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1577:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
1578:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1579:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1580:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Conversion complete callback */ 
1581:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       HAL_ADCEx_InjectedConvCpltCallback(hadc);
1582:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1583:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Clear injected group conversion flag */
1584:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JSTRT | ADC_FLAG_JEOC));
1585:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1586:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1587:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    
ARM GAS  /tmp/ccAQ3Ecv.s 			page 37


1588:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* ========== Check Analog watchdog flags ========== */
1589:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(__HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD))
1590:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1591:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD))
1592:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1593:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state */
1594:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
1595:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1596:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Level out of window callback */ 
1597:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       HAL_ADC_LevelOutOfWindowCallback(hadc);
1598:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1599:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Clear the ADC analog watchdog flag */
1600:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
1601:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1602:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1603:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1604:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1605:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1606:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1607:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Conversion complete callback in non blocking mode 
1608:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1609:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
1610:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1611:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
1612:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 440              		.loc 1 1612 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444              		@ link register save eliminated.
 445              	.LVL25:
 446 0000 7047     		bx	lr
 447              		.cfi_endproc
 448              	.LFE78:
 450              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 451              		.align	1
 452              		.global	ADC_DMAConvCplt
 453              		.syntax unified
 454              		.thumb
 455              		.thumb_func
 456              		.fpu softvfp
 458              	ADC_DMAConvCplt:
 459              	.LFB88:
1613:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1614:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   UNUSED(hadc);
1615:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1616:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
1617:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    */
1618:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1619:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1620:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1621:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non blocking mode 
1622:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1623:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
1624:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1625:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
1626:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
ARM GAS  /tmp/ccAQ3Ecv.s 			page 38


1627:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1628:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   UNUSED(hadc);
1629:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1630:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
1631:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1632:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1633:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1634:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1635:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Analog watchdog callback in non blocking mode. 
1636:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1637:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
1638:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1639:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef* hadc)
1640:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1641:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1642:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   UNUSED(hadc);
1643:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1644:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             function HAL_ADC_LevelOutOfWindowCallback must be implemented in the user file.
1645:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1646:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1647:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1648:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1649:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  ADC error callback in non blocking mode
1650:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *        (ADC conversion with interruption or transfer by DMA)
1651:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1652:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
1653:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1654:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
1655:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1656:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1657:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   UNUSED(hadc);
1658:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1659:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
1660:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1661:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1662:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1663:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1664:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1665:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
1666:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1667:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1668:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
1669:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  *  @brief    Peripheral Control functions
1670:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  *
1671:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @verbatim   
1672:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================
1673:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ##### Peripheral Control functions #####
1674:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================  
1675:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1676:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Configure channels on regular group
1677:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Configure the analog watchdog
1678:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1679:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @endverbatim
1680:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
1681:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1682:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1683:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
ARM GAS  /tmp/ccAQ3Ecv.s 			page 39


1684:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Configures the the selected channel to be linked to the regular
1685:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         group.
1686:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
1687:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Vbat/VrefInt/TempSensor.
1688:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         These internal paths can be be disabled using function 
1689:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         HAL_ADC_DeInit().
1690:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
1691:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         This function initializes channel into regular group, following  
1692:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters 
1693:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         of structure "ADC_ChannelConfTypeDef" on the fly, without reseting 
1694:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         the ADC.
1695:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
1696:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         For parameters constraints, see comments of structure 
1697:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         "ADC_ChannelConfTypeDef".
1698:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1699:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  sConfig: Structure of ADC channel for regular group.
1700:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
1701:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1702:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
1703:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** { 
1704:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1705:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0U;
1706:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1707:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1708:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1709:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(sConfig->Channel));
1710:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
1711:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
1712:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1713:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
1714:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
1715:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1716:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1717:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Regular sequence configuration */
1718:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* For Rank 1 to 6 */
1719:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (sConfig->Rank < 7U)
1720:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1721:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SQR3                        ,
1722:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank)    ,
1723:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR3_RK(sConfig->Channel, sConfig->Rank) );
1724:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1725:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* For Rank 7 to 12 */
1726:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else if (sConfig->Rank < 13U)
1727:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1728:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SQR2                        ,
1729:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank)    ,
1730:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR2_RK(sConfig->Channel, sConfig->Rank) );
1731:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1732:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* For Rank 13 to 16 */
1733:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
1734:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1735:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SQR1                        ,
1736:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank)   ,
1737:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR1_RK(sConfig->Channel, sConfig->Rank) );
1738:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1739:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1740:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
ARM GAS  /tmp/ccAQ3Ecv.s 			page 40


1741:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Channel sampling time configuration */
1742:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* For channels 10 to 17 */
1743:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (sConfig->Channel >= ADC_CHANNEL_10)
1744:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1745:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SMPR1                             ,
1746:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel)      ,
1747:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel) );
1748:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1749:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else /* For channels 0 to 9 */
1750:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1751:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SMPR2                             ,
1752:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel)       ,
1753:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel) );
1754:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1755:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1756:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* If ADC1 Channel_16 or Channel_17 is selected, enable Temperature sensor  */
1757:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* and VREFINT measurement path.                                            */
1758:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) ||
1759:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (sConfig->Channel == ADC_CHANNEL_VREFINT)      )
1760:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1761:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* For STM32F1 devices with several ADC: Only ADC1 can access internal    */
1762:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* measurement channels (VrefInt/TempSensor). If these channels are       */
1763:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* intended to be set on other ADC instances, an error is reported.       */
1764:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (hadc->Instance == ADC1)
1765:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1766:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CR2, ADC_CR2_TSVREFE) == RESET)
1767:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1768:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->Instance->CR2, ADC_CR2_TSVREFE);
1769:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
1770:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
1771:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
1772:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* Delay for temperature sensor stabilization time */
1773:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* Compute number of CPU cycles to wait for */
1774:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
1775:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           while(wait_loop_index != 0U)
1776:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           {
1777:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             wait_loop_index--;
1778:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           }
1779:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
1780:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1781:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1782:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1783:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1784:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Update ADC state machine to error */
1785:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1786:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1787:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
1788:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1789:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1790:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1791:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process unlocked */
1792:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1793:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1794:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
1795:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
1796:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1797:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
ARM GAS  /tmp/ccAQ3Ecv.s 			page 41


1798:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1799:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Configures the analog watchdog.
1800:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   Analog watchdog thresholds can be modified while ADC conversion
1801:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         is on going.
1802:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         In this case, some constraints must be taken into account:
1803:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         the programmed threshold values are effective from the next
1804:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         ADC EOC (end of unitary conversion).
1805:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Considering that registers write delay may happen due to
1806:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         bus activity, this might cause an uncertainty on the
1807:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         effective timing of the new programmed threshold values.
1808:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1809:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  AnalogWDGConfig: Structure of ADC analog watchdog configuration
1810:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
1811:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1812:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef* hadc, ADC_AnalogWDGConfTypeDef* Analog
1813:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1814:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1815:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1816:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
1817:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
1818:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(AnalogWDGConfig->HighThreshold));
1819:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(AnalogWDGConfig->LowThreshold));
1820:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1821:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if((AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)     ||
1822:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
1823:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REGINJEC)  )
1824:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1825:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
1826:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1827:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1828:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
1829:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
1830:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1831:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Analog watchdog configuration */
1832:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1833:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Configure ADC Analog watchdog interrupt */
1834:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(AnalogWDGConfig->ITMode == ENABLE)
1835:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1836:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable the ADC Analog watchdog interrupt */
1837:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_AWD);
1838:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1839:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
1840:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1841:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Disable the ADC Analog watchdog interrupt */
1842:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_AWD);
1843:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1844:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1845:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Configuration of analog watchdog:                                        */
1846:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*  - Set the analog watchdog enable mode: regular and/or injected groups,  */
1847:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    one or all channels.                                                  */
1848:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*  - Set the Analog watchdog channel (is not used if watchdog              */
1849:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    mode "all channels": ADC_CFGR_AWD1SGL=0).                             */
1850:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   MODIFY_REG(hadc->Instance->CR1            ,
1851:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ADC_CR1_AWDSGL |
1852:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ADC_CR1_JAWDEN |
1853:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ADC_CR1_AWDEN  |
1854:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ADC_CR1_AWDCH                  ,
ARM GAS  /tmp/ccAQ3Ecv.s 			page 42


1855:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              AnalogWDGConfig->WatchdogMode |
1856:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              AnalogWDGConfig->Channel        );
1857:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1858:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Set the high threshold */
1859:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   WRITE_REG(hadc->Instance->HTR, AnalogWDGConfig->HighThreshold);
1860:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1861:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Set the low threshold */
1862:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   WRITE_REG(hadc->Instance->LTR, AnalogWDGConfig->LowThreshold);
1863:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1864:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process unlocked */
1865:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1866:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1867:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
1868:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return HAL_OK;
1869:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1870:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1871:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1872:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1873:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
1874:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1875:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1876:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1877:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
1878:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  *  @brief    Peripheral State functions
1879:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  *
1880:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @verbatim
1881:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================
1882:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             ##### Peripheral State and Errors functions #####
1883:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================  
1884:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]
1885:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     This subsection provides functions to get in run-time the status of the  
1886:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     peripheral.
1887:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Check the ADC state
1888:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Check the ADC error code
1889:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1890:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @endverbatim
1891:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
1892:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1893:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1894:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1895:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  return the ADC state
1896:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1897:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL state
1898:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1899:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef* hadc)
1900:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1901:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return ADC state */
1902:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return hadc->State;
1903:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1904:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1905:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1906:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Return the ADC error code
1907:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1908:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval ADC Error Code
1909:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1910:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
1911:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
ARM GAS  /tmp/ccAQ3Ecv.s 			page 43


1912:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return hadc->ErrorCode;
1913:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1914:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1915:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1916:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
1917:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1918:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1919:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1920:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
1921:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1922:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1923:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
1924:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
1925:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1926:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1927:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1928:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Enable the selected ADC.
1929:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
1930:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
1931:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1932:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status.
1933:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1934:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef* hadc)
1935:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1936:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tickstart = 0U;
1937:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0U;
1938:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1939:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
1940:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
1941:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
1942:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* causes: ADC clock not running, ...).                                     */
1943:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (ADC_IS_ENABLE(hadc) == RESET)
1944:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1945:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable the Peripheral */
1946:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
1947:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1948:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Delay for ADC stabilization time */
1949:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
1950:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     wait_loop_index = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
1951:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     while(wait_loop_index != 0U)
1952:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1953:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       wait_loop_index--;
1954:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1955:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1956:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Get tick count */
1957:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tickstart = HAL_GetTick();
1958:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1959:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Wait for ADC effectively enabled */
1960:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     while(ADC_IS_ENABLE(hadc) == RESET)
1961:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1962:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
1963:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1964:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Update ADC state machine to error */
1965:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
1966:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1967:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set ADC error code to ADC IP internal error */
1968:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
ARM GAS  /tmp/ccAQ3Ecv.s 			page 44


1969:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
1970:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Process unlocked */
1971:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
1972:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1973:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         return HAL_ERROR;
1974:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1975:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1976:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1977:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    
1978:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return HAL status */
1979:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return HAL_OK;
1980:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1981:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1982:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1983:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Stop ADC conversion and disable the selected ADC
1984:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
1985:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         stopped to disable the ADC.
1986:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1987:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status.
1988:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1989:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef ADC_ConversionStop_Disable(ADC_HandleTypeDef* hadc)
1990:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1991:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tickstart = 0U;
1992:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1993:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Verification if ADC is not already disabled */
1994:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (ADC_IS_ENABLE(hadc) != RESET)
1995:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1996:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Disable the ADC peripheral */
1997:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_DISABLE(hadc);
1998:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      
1999:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Get tick count */
2000:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tickstart = HAL_GetTick();
2001:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
2002:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Wait for ADC effectively disabled */
2003:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     while(ADC_IS_ENABLE(hadc) != RESET)
2004:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
2005:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
2006:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
2007:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Update ADC state machine to error */
2008:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2009:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
2010:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set ADC error code to ADC IP internal error */
2011:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2012:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
2013:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         return HAL_ERROR;
2014:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
2015:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
2016:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
2017:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2018:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return HAL status */
2019:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return HAL_OK;
2020:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
2021:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2022:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
2023:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  DMA transfer complete callback. 
2024:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hdma: pointer to DMA handle.
2025:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
ARM GAS  /tmp/ccAQ3Ecv.s 			page 45


2026:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
2027:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
2028:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 460              		.loc 1 2028 0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464              	.LVL26:
 465              		.loc 1 2028 0
 466 0000 08B5     		push	{r3, lr}
 467              	.LCFI5:
 468              		.cfi_def_cfa_offset 8
 469              		.cfi_offset 3, -8
 470              		.cfi_offset 14, -4
2029:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2030:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 471              		.loc 1 2030 0
 472 0002 436A     		ldr	r3, [r0, #36]
 473              	.LVL27:
2031:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  
2032:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
2033:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 474              		.loc 1 2033 0
 475 0004 9A6A     		ldr	r2, [r3, #40]
 476 0006 12F0500F 		tst	r2, #80
 477 000a 1ED1     		bne	.L43
2034:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
2035:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Update ADC state machine */
2036:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 478              		.loc 1 2036 0
 479 000c 9A6A     		ldr	r2, [r3, #40]
 480 000e 42F40072 		orr	r2, r2, #512
 481 0012 9A62     		str	r2, [r3, #40]
2037:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
2038:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
2039:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going.        */
2040:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Note: On STM32F1 devices, in case of sequencer enabled                 */
2041:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       (several ranks selected), end of conversion flag is raised       */
2042:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       at the end of the sequence.                                      */
2043:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
 482              		.loc 1 2043 0
 483 0014 1A68     		ldr	r2, [r3]
 484 0016 9268     		ldr	r2, [r2, #8]
 485 0018 02F46022 		and	r2, r2, #917504
 486 001c B2F5602F 		cmp	r2, #917504
 487 0020 03D0     		beq	.L47
 488              	.L44:
2044:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)   )
2045:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
2046:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state */
2047:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
2048:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
2049:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
2050:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
2051:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2052:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
2053:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
ARM GAS  /tmp/ccAQ3Ecv.s 			page 46


2054:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
2055:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Conversion complete callback */
2056:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc); 
 489              		.loc 1 2056 0
 490 0022 1846     		mov	r0, r3
 491              	.LVL28:
 492 0024 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 493              	.LVL29:
 494 0028 08BD     		pop	{r3, pc}
 495              	.LVL30:
 496              	.L47:
2044:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)   )
 497              		.loc 1 2044 0 discriminator 1
 498 002a DA68     		ldr	r2, [r3, #12]
2043:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)   )
 499              		.loc 1 2043 0 discriminator 1
 500 002c 002A     		cmp	r2, #0
 501 002e F8D1     		bne	.L44
2047:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 502              		.loc 1 2047 0
 503 0030 9A6A     		ldr	r2, [r3, #40]
 504 0032 22F48072 		bic	r2, r2, #256
 505 0036 9A62     		str	r2, [r3, #40]
2049:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 506              		.loc 1 2049 0
 507 0038 9A6A     		ldr	r2, [r3, #40]
 508 003a 12F4805F 		tst	r2, #4096
 509 003e F0D1     		bne	.L44
2051:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 510              		.loc 1 2051 0
 511 0040 9A6A     		ldr	r2, [r3, #40]
 512 0042 42F00102 		orr	r2, r2, #1
 513 0046 9A62     		str	r2, [r3, #40]
 514 0048 EBE7     		b	.L44
 515              	.L43:
2057:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
2058:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
2059:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
2060:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Call DMA error callback */
2061:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     hadc->DMA_Handle->XferErrorCallback(hdma);
 516              		.loc 1 2061 0
 517 004a 1B6A     		ldr	r3, [r3, #32]
 518              	.LVL31:
 519 004c 1B6B     		ldr	r3, [r3, #48]
 520 004e 9847     		blx	r3
 521              	.LVL32:
 522 0050 08BD     		pop	{r3, pc}
 523              		.cfi_endproc
 524              	.LFE88:
 526              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 527              		.align	1
 528              		.weak	HAL_ADC_ConvHalfCpltCallback
 529              		.syntax unified
 530              		.thumb
 531              		.thumb_func
 532              		.fpu softvfp
 534              	HAL_ADC_ConvHalfCpltCallback:
ARM GAS  /tmp/ccAQ3Ecv.s 			page 47


 535              	.LFB79:
1626:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 536              		.loc 1 1626 0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 0
 539              		@ frame_needed = 0, uses_anonymous_args = 0
 540              		@ link register save eliminated.
 541              	.LVL33:
 542 0000 7047     		bx	lr
 543              		.cfi_endproc
 544              	.LFE79:
 546              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 547              		.align	1
 548              		.global	ADC_DMAHalfConvCplt
 549              		.syntax unified
 550              		.thumb
 551              		.thumb_func
 552              		.fpu softvfp
 554              	ADC_DMAHalfConvCplt:
 555              	.LFB89:
2062:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
2063:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
2064:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2065:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
2066:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  DMA half transfer complete callback. 
2067:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hdma: pointer to DMA handle.
2068:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
2069:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
2070:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)   
2071:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 556              		.loc 1 2071 0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 0, uses_anonymous_args = 0
 560              	.LVL34:
 561              		.loc 1 2071 0
 562 0000 08B5     		push	{r3, lr}
 563              	.LCFI6:
 564              		.cfi_def_cfa_offset 8
 565              		.cfi_offset 3, -8
 566              		.cfi_offset 14, -4
 567              	.LVL35:
2072:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2073:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2074:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2075:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Half conversion callback */
2076:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc); 
 568              		.loc 1 2076 0
 569 0002 406A     		ldr	r0, [r0, #36]
 570              	.LVL36:
 571 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 572              	.LVL37:
 573 0008 08BD     		pop	{r3, pc}
 574              		.cfi_endproc
 575              	.LFE89:
 577              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 578              		.align	1
ARM GAS  /tmp/ccAQ3Ecv.s 			page 48


 579              		.weak	HAL_ADC_LevelOutOfWindowCallback
 580              		.syntax unified
 581              		.thumb
 582              		.thumb_func
 583              		.fpu softvfp
 585              	HAL_ADC_LevelOutOfWindowCallback:
 586              	.LFB80:
1640:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 587              		.loc 1 1640 0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 0
 590              		@ frame_needed = 0, uses_anonymous_args = 0
 591              		@ link register save eliminated.
 592              	.LVL38:
 593 0000 7047     		bx	lr
 594              		.cfi_endproc
 595              	.LFE80:
 597              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 598              		.align	1
 599              		.global	HAL_ADC_IRQHandler
 600              		.syntax unified
 601              		.thumb
 602              		.thumb_func
 603              		.fpu softvfp
 605              	HAL_ADC_IRQHandler:
 606              	.LFB77:
1497:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 607              		.loc 1 1497 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 0
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611              	.LVL39:
1497:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 612              		.loc 1 1497 0
 613 0000 10B5     		push	{r4, lr}
 614              	.LCFI7:
 615              		.cfi_def_cfa_offset 8
 616              		.cfi_offset 4, -8
 617              		.cfi_offset 14, -4
 618 0002 0446     		mov	r4, r0
1505:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 619              		.loc 1 1505 0
 620 0004 0368     		ldr	r3, [r0]
 621 0006 5A68     		ldr	r2, [r3, #4]
 622 0008 12F0200F 		tst	r2, #32
 623 000c 18D0     		beq	.L53
1507:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 624              		.loc 1 1507 0
 625 000e 1A68     		ldr	r2, [r3]
 626 0010 12F0020F 		tst	r2, #2
 627 0014 14D0     		beq	.L53
1510:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 628              		.loc 1 1510 0
 629 0016 826A     		ldr	r2, [r0, #40]
 630 0018 12F0100F 		tst	r2, #16
 631 001c 03D1     		bne	.L54
1513:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
ARM GAS  /tmp/ccAQ3Ecv.s 			page 49


 632              		.loc 1 1513 0
 633 001e 826A     		ldr	r2, [r0, #40]
 634 0020 42F40072 		orr	r2, r2, #512
 635 0024 8262     		str	r2, [r0, #40]
 636              	.L54:
1521:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (hadc->Init.ContinuousConvMode == DISABLE)   )
 637              		.loc 1 1521 0
 638 0026 9A68     		ldr	r2, [r3, #8]
 639 0028 02F46022 		and	r2, r2, #917504
 640 002c B2F5602F 		cmp	r2, #917504
 641 0030 38D0     		beq	.L62
 642              	.L55:
1537:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 643              		.loc 1 1537 0
 644 0032 2046     		mov	r0, r4
 645              	.LVL40:
 646 0034 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 647              	.LVL41:
1540:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 648              		.loc 1 1540 0
 649 0038 2368     		ldr	r3, [r4]
 650 003a 6FF01202 		mvn	r2, #18
 651 003e 1A60     		str	r2, [r3]
 652              	.L53:
1545:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 653              		.loc 1 1545 0
 654 0040 2368     		ldr	r3, [r4]
 655 0042 5A68     		ldr	r2, [r3, #4]
 656 0044 12F0800F 		tst	r2, #128
 657 0048 22D0     		beq	.L56
1547:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 658              		.loc 1 1547 0
 659 004a 1A68     		ldr	r2, [r3]
 660 004c 12F0040F 		tst	r2, #4
 661 0050 1ED0     		beq	.L56
1550:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 662              		.loc 1 1550 0
 663 0052 A26A     		ldr	r2, [r4, #40]
 664 0054 12F0100F 		tst	r2, #16
 665 0058 03D1     		bne	.L57
1553:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 666              		.loc 1 1553 0
 667 005a A26A     		ldr	r2, [r4, #40]
 668 005c 42F40052 		orr	r2, r2, #8192
 669 0060 A262     		str	r2, [r4, #40]
 670              	.L57:
1563:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&     
 671              		.loc 1 1563 0
 672 0062 9A68     		ldr	r2, [r3, #8]
 673 0064 02F4E042 		and	r2, r2, #28672
 674 0068 B2F5E04F 		cmp	r2, #28672
 675 006c 31D0     		beq	.L58
1564:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (ADC_IS_SOFTWARE_START_REGULAR(hadc)        &&
 676              		.loc 1 1564 0 discriminator 1
 677 006e 5A68     		ldr	r2, [r3, #4]
1563:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&     
 678              		.loc 1 1563 0 discriminator 1
ARM GAS  /tmp/ccAQ3Ecv.s 			page 50


 679 0070 12F4806F 		tst	r2, #1024
 680 0074 05D1     		bne	.L59
1565:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (hadc->Init.ContinuousConvMode == DISABLE)   )        )   )
 681              		.loc 1 1565 0
 682 0076 9A68     		ldr	r2, [r3, #8]
 683 0078 02F46022 		and	r2, r2, #917504
1564:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (ADC_IS_SOFTWARE_START_REGULAR(hadc)        &&
 684              		.loc 1 1564 0
 685 007c B2F5602F 		cmp	r2, #917504
 686 0080 24D0     		beq	.L63
 687              	.L59:
1581:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 688              		.loc 1 1581 0
 689 0082 2046     		mov	r0, r4
 690 0084 FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
 691              	.LVL42:
1584:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 692              		.loc 1 1584 0
 693 0088 2368     		ldr	r3, [r4]
 694 008a 6FF00C02 		mvn	r2, #12
 695 008e 1A60     		str	r2, [r3]
 696              	.L56:
1589:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 697              		.loc 1 1589 0
 698 0090 2368     		ldr	r3, [r4]
 699 0092 5A68     		ldr	r2, [r3, #4]
 700 0094 12F0400F 		tst	r2, #64
 701 0098 03D0     		beq	.L52
1591:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 702              		.loc 1 1591 0
 703 009a 1B68     		ldr	r3, [r3]
 704 009c 13F0010F 		tst	r3, #1
 705 00a0 28D1     		bne	.L64
 706              	.L52:
 707 00a2 10BD     		pop	{r4, pc}
 708              	.LVL43:
 709              	.L62:
1522:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 710              		.loc 1 1522 0 discriminator 1
 711 00a4 E268     		ldr	r2, [r4, #12]
1521:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (hadc->Init.ContinuousConvMode == DISABLE)   )
 712              		.loc 1 1521 0 discriminator 1
 713 00a6 002A     		cmp	r2, #0
 714 00a8 C3D1     		bne	.L55
1525:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 715              		.loc 1 1525 0
 716 00aa 5A68     		ldr	r2, [r3, #4]
 717 00ac 22F02002 		bic	r2, r2, #32
 718 00b0 5A60     		str	r2, [r3, #4]
1528:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 719              		.loc 1 1528 0
 720 00b2 A36A     		ldr	r3, [r4, #40]
 721 00b4 23F48073 		bic	r3, r3, #256
 722 00b8 A362     		str	r3, [r4, #40]
1530:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
 723              		.loc 1 1530 0
 724 00ba A36A     		ldr	r3, [r4, #40]
ARM GAS  /tmp/ccAQ3Ecv.s 			page 51


 725 00bc 13F4805F 		tst	r3, #4096
 726 00c0 B7D1     		bne	.L55
1532:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
 727              		.loc 1 1532 0
 728 00c2 A36A     		ldr	r3, [r4, #40]
 729 00c4 43F00103 		orr	r3, r3, #1
 730 00c8 A362     		str	r3, [r4, #40]
 731 00ca B2E7     		b	.L55
 732              	.LVL44:
 733              	.L63:
1566:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 734              		.loc 1 1566 0
 735 00cc E268     		ldr	r2, [r4, #12]
1565:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (hadc->Init.ContinuousConvMode == DISABLE)   )        )   )
 736              		.loc 1 1565 0
 737 00ce 002A     		cmp	r2, #0
 738 00d0 D7D1     		bne	.L59
 739              	.L58:
1569:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 740              		.loc 1 1569 0
 741 00d2 5A68     		ldr	r2, [r3, #4]
 742 00d4 22F08002 		bic	r2, r2, #128
 743 00d8 5A60     		str	r2, [r3, #4]
1572:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 744              		.loc 1 1572 0
 745 00da A36A     		ldr	r3, [r4, #40]
 746 00dc 23F48053 		bic	r3, r3, #4096
 747 00e0 A362     		str	r3, [r4, #40]
1574:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         { 
 748              		.loc 1 1574 0
 749 00e2 A36A     		ldr	r3, [r4, #40]
 750 00e4 13F4807F 		tst	r3, #256
 751 00e8 CBD1     		bne	.L59
1576:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
 752              		.loc 1 1576 0
 753 00ea A36A     		ldr	r3, [r4, #40]
 754 00ec 43F00103 		orr	r3, r3, #1
 755 00f0 A362     		str	r3, [r4, #40]
 756 00f2 C6E7     		b	.L59
 757              	.L64:
1594:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 758              		.loc 1 1594 0
 759 00f4 A36A     		ldr	r3, [r4, #40]
 760 00f6 43F48033 		orr	r3, r3, #65536
 761 00fa A362     		str	r3, [r4, #40]
1597:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 762              		.loc 1 1597 0
 763 00fc 2046     		mov	r0, r4
 764 00fe FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 765              	.LVL45:
1600:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 766              		.loc 1 1600 0
 767 0102 2368     		ldr	r3, [r4]
 768 0104 6FF00102 		mvn	r2, #1
 769 0108 1A60     		str	r2, [r3]
1604:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 770              		.loc 1 1604 0
ARM GAS  /tmp/ccAQ3Ecv.s 			page 52


 771 010a CAE7     		b	.L52
 772              		.cfi_endproc
 773              	.LFE77:
 775              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 776              		.align	1
 777              		.weak	HAL_ADC_ErrorCallback
 778              		.syntax unified
 779              		.thumb
 780              		.thumb_func
 781              		.fpu softvfp
 783              	HAL_ADC_ErrorCallback:
 784              	.LFB81:
1655:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 785              		.loc 1 1655 0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 0
 788              		@ frame_needed = 0, uses_anonymous_args = 0
 789              		@ link register save eliminated.
 790              	.LVL46:
 791 0000 7047     		bx	lr
 792              		.cfi_endproc
 793              	.LFE81:
 795              		.section	.text.ADC_DMAError,"ax",%progbits
 796              		.align	1
 797              		.global	ADC_DMAError
 798              		.syntax unified
 799              		.thumb
 800              		.thumb_func
 801              		.fpu softvfp
 803              	ADC_DMAError:
 804              	.LFB90:
2077:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
2078:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2079:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
2080:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  DMA error callback 
2081:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hdma: pointer to DMA handle.
2082:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
2083:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
2084:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** void ADC_DMAError(DMA_HandleTypeDef *hdma)   
2085:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 805              		.loc 1 2085 0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 0
 808              		@ frame_needed = 0, uses_anonymous_args = 0
 809              	.LVL47:
 810              		.loc 1 2085 0
 811 0000 08B5     		push	{r3, lr}
 812              	.LCFI8:
 813              		.cfi_def_cfa_offset 8
 814              		.cfi_offset 3, -8
 815              		.cfi_offset 14, -4
2086:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2087:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 816              		.loc 1 2087 0
 817 0002 406A     		ldr	r0, [r0, #36]
 818              	.LVL48:
2088:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
ARM GAS  /tmp/ccAQ3Ecv.s 			page 53


2089:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Set ADC state */
2090:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 819              		.loc 1 2090 0
 820 0004 836A     		ldr	r3, [r0, #40]
 821 0006 43F04003 		orr	r3, r3, #64
 822 000a 8362     		str	r3, [r0, #40]
2091:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2092:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Set ADC error code to DMA error */
2093:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
 823              		.loc 1 2093 0
 824 000c C36A     		ldr	r3, [r0, #44]
 825 000e 43F00403 		orr	r3, r3, #4
 826 0012 C362     		str	r3, [r0, #44]
2094:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2095:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Error callback */
2096:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc); 
 827              		.loc 1 2096 0
 828 0014 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 829              	.LVL49:
 830 0018 08BD     		pop	{r3, pc}
 831              		.cfi_endproc
 832              	.LFE90:
 834              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 835              		.align	1
 836              		.global	HAL_ADC_ConfigChannel
 837              		.syntax unified
 838              		.thumb
 839              		.thumb_func
 840              		.fpu softvfp
 842              	HAL_ADC_ConfigChannel:
 843              	.LFB82:
1703:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 844              		.loc 1 1703 0
 845              		.cfi_startproc
 846              		@ args = 0, pretend = 0, frame = 8
 847              		@ frame_needed = 0, uses_anonymous_args = 0
 848              		@ link register save eliminated.
 849              	.LVL50:
 850 0000 30B4     		push	{r4, r5}
 851              	.LCFI9:
 852              		.cfi_def_cfa_offset 8
 853              		.cfi_offset 4, -8
 854              		.cfi_offset 5, -4
 855 0002 82B0     		sub	sp, sp, #8
 856              	.LCFI10:
 857              		.cfi_def_cfa_offset 16
 858              	.LVL51:
1705:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 859              		.loc 1 1705 0
 860 0004 0023     		movs	r3, #0
 861 0006 0193     		str	r3, [sp, #4]
1714:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 862              		.loc 1 1714 0
 863 0008 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 864 000c 012B     		cmp	r3, #1
 865 000e 00F08B80 		beq	.L79
 866 0012 0246     		mov	r2, r0
ARM GAS  /tmp/ccAQ3Ecv.s 			page 54


1714:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 867              		.loc 1 1714 0 is_stmt 0 discriminator 2
 868 0014 0123     		movs	r3, #1
 869 0016 80F82430 		strb	r3, [r0, #36]
1719:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 870              		.loc 1 1719 0 is_stmt 1 discriminator 2
 871 001a 4B68     		ldr	r3, [r1, #4]
 872 001c 062B     		cmp	r3, #6
 873 001e 29D8     		bhi	.L70
1721:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank)    ,
 874              		.loc 1 1721 0
 875 0020 0568     		ldr	r5, [r0]
 876 0022 686B     		ldr	r0, [r5, #52]
 877              	.LVL52:
 878 0024 03EB8303 		add	r3, r3, r3, lsl #2
 879 0028 053B     		subs	r3, r3, #5
 880 002a 1F24     		movs	r4, #31
 881 002c 9C40     		lsls	r4, r4, r3
 882 002e 20EA0400 		bic	r0, r0, r4
 883 0032 0C68     		ldr	r4, [r1]
 884 0034 04FA03F3 		lsl	r3, r4, r3
 885 0038 0343     		orrs	r3, r3, r0
 886 003a 6B63     		str	r3, [r5, #52]
 887              	.L71:
1743:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 888              		.loc 1 1743 0
 889 003c 0B68     		ldr	r3, [r1]
 890 003e 092B     		cmp	r3, #9
 891 0040 38D9     		bls	.L73
1745:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel)      ,
 892              		.loc 1 1745 0
 893 0042 1568     		ldr	r5, [r2]
 894 0044 E868     		ldr	r0, [r5, #12]
 895 0046 03EB4303 		add	r3, r3, r3, lsl #1
 896 004a 1E3B     		subs	r3, r3, #30
 897 004c 0724     		movs	r4, #7
 898 004e 9C40     		lsls	r4, r4, r3
 899 0050 20EA0400 		bic	r0, r0, r4
 900 0054 8C68     		ldr	r4, [r1, #8]
 901 0056 04FA03F3 		lsl	r3, r4, r3
 902 005a 0343     		orrs	r3, r3, r0
 903 005c EB60     		str	r3, [r5, #12]
 904              	.L74:
1758:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (sConfig->Channel == ADC_CHANNEL_VREFINT)      )
 905              		.loc 1 1758 0
 906 005e 0B68     		ldr	r3, [r1]
 907 0060 103B     		subs	r3, r3, #16
 908 0062 012B     		cmp	r3, #1
 909 0064 34D9     		bls	.L84
1704:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0U;
 910              		.loc 1 1704 0
 911 0066 0020     		movs	r0, #0
 912              	.LVL53:
 913              	.L75:
1792:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 914              		.loc 1 1792 0
 915 0068 0023     		movs	r3, #0
ARM GAS  /tmp/ccAQ3Ecv.s 			page 55


 916 006a 82F82430 		strb	r3, [r2, #36]
 917              	.LVL54:
 918              	.L69:
1796:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 919              		.loc 1 1796 0
 920 006e 02B0     		add	sp, sp, #8
 921              	.LCFI11:
 922              		.cfi_remember_state
 923              		.cfi_def_cfa_offset 8
 924              		@ sp needed
 925 0070 30BC     		pop	{r4, r5}
 926              	.LCFI12:
 927              		.cfi_restore 5
 928              		.cfi_restore 4
 929              		.cfi_def_cfa_offset 0
 930 0072 7047     		bx	lr
 931              	.LVL55:
 932              	.L70:
 933              	.LCFI13:
 934              		.cfi_restore_state
1726:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 935              		.loc 1 1726 0
 936 0074 0C2B     		cmp	r3, #12
 937 0076 0ED8     		bhi	.L72
1728:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank)    ,
 938              		.loc 1 1728 0
 939 0078 0568     		ldr	r5, [r0]
 940 007a 286B     		ldr	r0, [r5, #48]
 941              	.LVL56:
 942 007c 03EB8303 		add	r3, r3, r3, lsl #2
 943 0080 233B     		subs	r3, r3, #35
 944 0082 1F24     		movs	r4, #31
 945 0084 9C40     		lsls	r4, r4, r3
 946 0086 20EA0400 		bic	r0, r0, r4
 947 008a 0C68     		ldr	r4, [r1]
 948 008c 04FA03F3 		lsl	r3, r4, r3
 949 0090 0343     		orrs	r3, r3, r0
 950 0092 2B63     		str	r3, [r5, #48]
 951 0094 D2E7     		b	.L71
 952              	.LVL57:
 953              	.L72:
1735:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank)   ,
 954              		.loc 1 1735 0
 955 0096 0568     		ldr	r5, [r0]
 956 0098 E86A     		ldr	r0, [r5, #44]
 957              	.LVL58:
 958 009a 03EB8303 		add	r3, r3, r3, lsl #2
 959 009e 413B     		subs	r3, r3, #65
 960 00a0 1F24     		movs	r4, #31
 961 00a2 9C40     		lsls	r4, r4, r3
 962 00a4 20EA0400 		bic	r0, r0, r4
 963 00a8 0C68     		ldr	r4, [r1]
 964 00aa 04FA03F3 		lsl	r3, r4, r3
 965 00ae 0343     		orrs	r3, r3, r0
 966 00b0 EB62     		str	r3, [r5, #44]
 967 00b2 C3E7     		b	.L71
 968              	.L73:
ARM GAS  /tmp/ccAQ3Ecv.s 			page 56


1751:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel)       ,
 969              		.loc 1 1751 0
 970 00b4 1568     		ldr	r5, [r2]
 971 00b6 2869     		ldr	r0, [r5, #16]
 972 00b8 03EB4303 		add	r3, r3, r3, lsl #1
 973 00bc 0724     		movs	r4, #7
 974 00be 9C40     		lsls	r4, r4, r3
 975 00c0 20EA0400 		bic	r0, r0, r4
 976 00c4 8C68     		ldr	r4, [r1, #8]
 977 00c6 04FA03F3 		lsl	r3, r4, r3
 978 00ca 0343     		orrs	r3, r3, r0
 979 00cc 2B61     		str	r3, [r5, #16]
 980 00ce C6E7     		b	.L74
 981              	.L84:
1764:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 982              		.loc 1 1764 0
 983 00d0 1368     		ldr	r3, [r2]
 984 00d2 1648     		ldr	r0, .L87
 985 00d4 8342     		cmp	r3, r0
 986 00d6 05D0     		beq	.L85
1785:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 987              		.loc 1 1785 0
 988 00d8 936A     		ldr	r3, [r2, #40]
 989 00da 43F02003 		orr	r3, r3, #32
 990 00de 9362     		str	r3, [r2, #40]
 991              	.LVL59:
1787:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 992              		.loc 1 1787 0
 993 00e0 0120     		movs	r0, #1
 994 00e2 C1E7     		b	.L75
 995              	.LVL60:
 996              	.L85:
1766:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 997              		.loc 1 1766 0
 998 00e4 9868     		ldr	r0, [r3, #8]
 999 00e6 10F4000F 		tst	r0, #8388608
 1000 00ea 1BD1     		bne	.L81
1768:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 1001              		.loc 1 1768 0
 1002 00ec 9868     		ldr	r0, [r3, #8]
 1003 00ee 40F40000 		orr	r0, r0, #8388608
 1004 00f2 9860     		str	r0, [r3, #8]
1770:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
 1005              		.loc 1 1770 0
 1006 00f4 0B68     		ldr	r3, [r1]
 1007 00f6 102B     		cmp	r3, #16
 1008 00f8 01D0     		beq	.L86
1704:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0U;
 1009              		.loc 1 1704 0
 1010 00fa 0020     		movs	r0, #0
 1011 00fc B4E7     		b	.L75
 1012              	.L86:
1774:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           while(wait_loop_index != 0U)
 1013              		.loc 1 1774 0
 1014 00fe 0C4B     		ldr	r3, .L87+4
 1015 0100 1B68     		ldr	r3, [r3]
 1016 0102 0C49     		ldr	r1, .L87+8
ARM GAS  /tmp/ccAQ3Ecv.s 			page 57


 1017              	.LVL61:
 1018 0104 A1FB0313 		umull	r1, r3, r1, r3
 1019 0108 9B0C     		lsrs	r3, r3, #18
 1020 010a 03EB8303 		add	r3, r3, r3, lsl #2
 1021 010e 5900     		lsls	r1, r3, #1
 1022 0110 0191     		str	r1, [sp, #4]
1775:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           {
 1023              		.loc 1 1775 0
 1024 0112 02E0     		b	.L77
 1025              	.L78:
1777:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           }
 1026              		.loc 1 1777 0
 1027 0114 019B     		ldr	r3, [sp, #4]
 1028 0116 013B     		subs	r3, r3, #1
 1029 0118 0193     		str	r3, [sp, #4]
 1030              	.L77:
1775:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           {
 1031              		.loc 1 1775 0
 1032 011a 019B     		ldr	r3, [sp, #4]
 1033 011c 002B     		cmp	r3, #0
 1034 011e F9D1     		bne	.L78
1704:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0U;
 1035              		.loc 1 1704 0
 1036 0120 0020     		movs	r0, #0
 1037 0122 A1E7     		b	.L75
 1038              	.LVL62:
 1039              	.L81:
 1040 0124 0020     		movs	r0, #0
 1041 0126 9FE7     		b	.L75
 1042              	.LVL63:
 1043              	.L79:
1714:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1044              		.loc 1 1714 0
 1045 0128 0220     		movs	r0, #2
 1046              	.LVL64:
 1047 012a A0E7     		b	.L69
 1048              	.L88:
 1049              		.align	2
 1050              	.L87:
 1051 012c 00240140 		.word	1073816576
 1052 0130 00000000 		.word	SystemCoreClock
 1053 0134 83DE1B43 		.word	1125899907
 1054              		.cfi_endproc
 1055              	.LFE82:
 1057              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 1058              		.align	1
 1059              		.global	HAL_ADC_AnalogWDGConfig
 1060              		.syntax unified
 1061              		.thumb
 1062              		.thumb_func
 1063              		.fpu softvfp
 1065              	HAL_ADC_AnalogWDGConfig:
 1066              	.LFB83:
1813:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 1067              		.loc 1 1813 0
 1068              		.cfi_startproc
 1069              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccAQ3Ecv.s 			page 58


 1070              		@ frame_needed = 0, uses_anonymous_args = 0
 1071              		@ link register save eliminated.
 1072              	.LVL65:
1829:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1073              		.loc 1 1829 0
 1074 0000 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 1075 0004 012B     		cmp	r3, #1
 1076 0006 26D0     		beq	.L93
1813:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 1077              		.loc 1 1813 0 discriminator 2
 1078 0008 30B4     		push	{r4, r5}
 1079              	.LCFI14:
 1080              		.cfi_def_cfa_offset 8
 1081              		.cfi_offset 4, -8
 1082              		.cfi_offset 5, -4
1829:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1083              		.loc 1 1829 0 discriminator 2
 1084 000a 0123     		movs	r3, #1
 1085 000c 80F82430 		strb	r3, [r0, #36]
1834:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1086              		.loc 1 1834 0 discriminator 2
 1087 0010 8B68     		ldr	r3, [r1, #8]
 1088 0012 012B     		cmp	r3, #1
 1089 0014 19D0     		beq	.L98
1842:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 1090              		.loc 1 1842 0
 1091 0016 0268     		ldr	r2, [r0]
 1092 0018 5368     		ldr	r3, [r2, #4]
 1093 001a 23F04003 		bic	r3, r3, #64
 1094 001e 5360     		str	r3, [r2, #4]
 1095              	.L92:
1850:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ADC_CR1_AWDSGL |
 1096              		.loc 1 1850 0
 1097 0020 0468     		ldr	r4, [r0]
 1098 0022 6268     		ldr	r2, [r4, #4]
 1099 0024 0D4B     		ldr	r3, .L99
 1100 0026 1340     		ands	r3, r3, r2
 1101 0028 0A68     		ldr	r2, [r1]
 1102 002a 4D68     		ldr	r5, [r1, #4]
 1103 002c 2A43     		orrs	r2, r2, r5
 1104 002e 1343     		orrs	r3, r3, r2
 1105 0030 6360     		str	r3, [r4, #4]
1859:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1106              		.loc 1 1859 0
 1107 0032 0368     		ldr	r3, [r0]
 1108 0034 CA68     		ldr	r2, [r1, #12]
 1109 0036 5A62     		str	r2, [r3, #36]
1862:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1110              		.loc 1 1862 0
 1111 0038 0368     		ldr	r3, [r0]
 1112 003a 0A69     		ldr	r2, [r1, #16]
 1113 003c 9A62     		str	r2, [r3, #40]
1865:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1114              		.loc 1 1865 0
 1115 003e 0023     		movs	r3, #0
 1116 0040 80F82430 		strb	r3, [r0, #36]
1868:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
ARM GAS  /tmp/ccAQ3Ecv.s 			page 59


 1117              		.loc 1 1868 0
 1118 0044 1846     		mov	r0, r3
 1119              	.LVL66:
1869:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1120              		.loc 1 1869 0
 1121 0046 30BC     		pop	{r4, r5}
 1122              	.LCFI15:
 1123              		.cfi_remember_state
 1124              		.cfi_restore 5
 1125              		.cfi_restore 4
 1126              		.cfi_def_cfa_offset 0
 1127 0048 7047     		bx	lr
 1128              	.LVL67:
 1129              	.L98:
 1130              	.LCFI16:
 1131              		.cfi_restore_state
1837:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 1132              		.loc 1 1837 0
 1133 004a 0268     		ldr	r2, [r0]
 1134 004c 5368     		ldr	r3, [r2, #4]
 1135 004e 43F04003 		orr	r3, r3, #64
 1136 0052 5360     		str	r3, [r2, #4]
 1137 0054 E4E7     		b	.L92
 1138              	.L93:
 1139              	.LCFI17:
 1140              		.cfi_def_cfa_offset 0
 1141              		.cfi_restore 4
 1142              		.cfi_restore 5
1829:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1143              		.loc 1 1829 0
 1144 0056 0220     		movs	r0, #2
 1145              	.LVL68:
 1146 0058 7047     		bx	lr
 1147              	.L100:
 1148 005a 00BF     		.align	2
 1149              	.L99:
 1150 005c E0FD3FFF 		.word	-12583456
 1151              		.cfi_endproc
 1152              	.LFE83:
 1154              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 1155              		.align	1
 1156              		.global	HAL_ADC_GetState
 1157              		.syntax unified
 1158              		.thumb
 1159              		.thumb_func
 1160              		.fpu softvfp
 1162              	HAL_ADC_GetState:
 1163              	.LFB84:
1900:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return ADC state */
 1164              		.loc 1 1900 0
 1165              		.cfi_startproc
 1166              		@ args = 0, pretend = 0, frame = 0
 1167              		@ frame_needed = 0, uses_anonymous_args = 0
 1168              		@ link register save eliminated.
 1169              	.LVL69:
1902:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 1170              		.loc 1 1902 0
ARM GAS  /tmp/ccAQ3Ecv.s 			page 60


 1171 0000 806A     		ldr	r0, [r0, #40]
 1172              	.LVL70:
1903:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1173              		.loc 1 1903 0
 1174 0002 7047     		bx	lr
 1175              		.cfi_endproc
 1176              	.LFE84:
 1178              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 1179              		.align	1
 1180              		.global	HAL_ADC_GetError
 1181              		.syntax unified
 1182              		.thumb
 1183              		.thumb_func
 1184              		.fpu softvfp
 1186              	HAL_ADC_GetError:
 1187              	.LFB85:
1911:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return hadc->ErrorCode;
 1188              		.loc 1 1911 0
 1189              		.cfi_startproc
 1190              		@ args = 0, pretend = 0, frame = 0
 1191              		@ frame_needed = 0, uses_anonymous_args = 0
 1192              		@ link register save eliminated.
 1193              	.LVL71:
1912:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 1194              		.loc 1 1912 0
 1195 0000 C06A     		ldr	r0, [r0, #44]
 1196              	.LVL72:
1913:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1197              		.loc 1 1913 0
 1198 0002 7047     		bx	lr
 1199              		.cfi_endproc
 1200              	.LFE85:
 1202              		.section	.text.ADC_Enable,"ax",%progbits
 1203              		.align	1
 1204              		.global	ADC_Enable
 1205              		.syntax unified
 1206              		.thumb
 1207              		.thumb_func
 1208              		.fpu softvfp
 1210              	ADC_Enable:
 1211              	.LFB86:
1935:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tickstart = 0U;
 1212              		.loc 1 1935 0
 1213              		.cfi_startproc
 1214              		@ args = 0, pretend = 0, frame = 8
 1215              		@ frame_needed = 0, uses_anonymous_args = 0
 1216              	.LVL73:
 1217 0000 30B5     		push	{r4, r5, lr}
 1218              	.LCFI18:
 1219              		.cfi_def_cfa_offset 12
 1220              		.cfi_offset 4, -12
 1221              		.cfi_offset 5, -8
 1222              		.cfi_offset 14, -4
 1223 0002 83B0     		sub	sp, sp, #12
 1224              	.LCFI19:
 1225              		.cfi_def_cfa_offset 24
 1226              	.LVL74:
ARM GAS  /tmp/ccAQ3Ecv.s 			page 61


1937:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1227              		.loc 1 1937 0
 1228 0004 0023     		movs	r3, #0
 1229 0006 0193     		str	r3, [sp, #4]
1943:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1230              		.loc 1 1943 0
 1231 0008 0368     		ldr	r3, [r0]
 1232 000a 9A68     		ldr	r2, [r3, #8]
 1233 000c 12F0010F 		tst	r2, #1
 1234 0010 2ED1     		bne	.L109
1946:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1235              		.loc 1 1946 0
 1236 0012 9A68     		ldr	r2, [r3, #8]
 1237 0014 42F00102 		orr	r2, r2, #1
 1238 0018 9A60     		str	r2, [r3, #8]
1950:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     while(wait_loop_index != 0U)
 1239              		.loc 1 1950 0
 1240 001a 174B     		ldr	r3, .L112
 1241 001c 1B68     		ldr	r3, [r3]
 1242 001e 174A     		ldr	r2, .L112+4
 1243 0020 A2FB0323 		umull	r2, r3, r2, r3
 1244 0024 9B0C     		lsrs	r3, r3, #18
 1245 0026 0193     		str	r3, [sp, #4]
1951:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1246              		.loc 1 1951 0
 1247 0028 02E0     		b	.L105
 1248              	.L106:
1953:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1249              		.loc 1 1953 0
 1250 002a 019B     		ldr	r3, [sp, #4]
 1251 002c 013B     		subs	r3, r3, #1
 1252 002e 0193     		str	r3, [sp, #4]
 1253              	.L105:
1951:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1254              		.loc 1 1951 0
 1255 0030 019B     		ldr	r3, [sp, #4]
 1256 0032 002B     		cmp	r3, #0
 1257 0034 F9D1     		bne	.L106
 1258 0036 0446     		mov	r4, r0
1957:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1259              		.loc 1 1957 0
 1260 0038 FFF7FEFF 		bl	HAL_GetTick
 1261              	.LVL75:
 1262 003c 0546     		mov	r5, r0
 1263              	.LVL76:
 1264              	.L107:
1960:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1265              		.loc 1 1960 0
 1266 003e 2368     		ldr	r3, [r4]
 1267 0040 9B68     		ldr	r3, [r3, #8]
 1268 0042 13F0010F 		tst	r3, #1
 1269 0046 11D1     		bne	.L111
1962:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1270              		.loc 1 1962 0
 1271 0048 FFF7FEFF 		bl	HAL_GetTick
 1272              	.LVL77:
 1273 004c 401B     		subs	r0, r0, r5
ARM GAS  /tmp/ccAQ3Ecv.s 			page 62


 1274 004e 0228     		cmp	r0, #2
 1275 0050 F5D9     		bls	.L107
1965:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1276              		.loc 1 1965 0
 1277 0052 A36A     		ldr	r3, [r4, #40]
 1278 0054 43F01003 		orr	r3, r3, #16
 1279 0058 A362     		str	r3, [r4, #40]
1968:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 1280              		.loc 1 1968 0
 1281 005a E36A     		ldr	r3, [r4, #44]
 1282 005c 43F00103 		orr	r3, r3, #1
 1283 0060 E362     		str	r3, [r4, #44]
1971:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1284              		.loc 1 1971 0
 1285 0062 0023     		movs	r3, #0
 1286 0064 84F82430 		strb	r3, [r4, #36]
1973:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1287              		.loc 1 1973 0
 1288 0068 0120     		movs	r0, #1
 1289 006a 02E0     		b	.L104
 1290              	.L111:
1979:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 1291              		.loc 1 1979 0
 1292 006c 0020     		movs	r0, #0
 1293 006e 00E0     		b	.L104
 1294              	.LVL78:
 1295              	.L109:
 1296 0070 0020     		movs	r0, #0
 1297              	.LVL79:
 1298              	.L104:
1980:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1299              		.loc 1 1980 0
 1300 0072 03B0     		add	sp, sp, #12
 1301              	.LCFI20:
 1302              		.cfi_def_cfa_offset 12
 1303              		@ sp needed
 1304 0074 30BD     		pop	{r4, r5, pc}
 1305              	.L113:
 1306 0076 00BF     		.align	2
 1307              	.L112:
 1308 0078 00000000 		.word	SystemCoreClock
 1309 007c 83DE1B43 		.word	1125899907
 1310              		.cfi_endproc
 1311              	.LFE86:
 1313              		.section	.text.HAL_ADC_Start,"ax",%progbits
 1314              		.align	1
 1315              		.global	HAL_ADC_Start
 1316              		.syntax unified
 1317              		.thumb
 1318              		.thumb_func
 1319              		.fpu softvfp
 1321              	HAL_ADC_Start:
 1322              	.LFB68:
 769:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1323              		.loc 1 769 0
 1324              		.cfi_startproc
 1325              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccAQ3Ecv.s 			page 63


 1326              		@ frame_needed = 0, uses_anonymous_args = 0
 1327              	.LVL80:
 776:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    
 1328              		.loc 1 776 0
 1329 0000 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 1330 0004 012B     		cmp	r3, #1
 1331 0006 02D1     		bne	.L129
 1332 0008 0223     		movs	r3, #2
 870:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1333              		.loc 1 870 0
 1334 000a 1846     		mov	r0, r3
 1335              	.LVL81:
 1336 000c 7047     		bx	lr
 1337              	.LVL82:
 1338              	.L129:
 769:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1339              		.loc 1 769 0 discriminator 2
 1340 000e 10B5     		push	{r4, lr}
 1341              	.LCFI21:
 1342              		.cfi_def_cfa_offset 8
 1343              		.cfi_offset 4, -8
 1344              		.cfi_offset 14, -4
 1345 0010 0446     		mov	r4, r0
 776:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    
 1346              		.loc 1 776 0 discriminator 2
 1347 0012 0123     		movs	r3, #1
 1348 0014 80F82430 		strb	r3, [r0, #36]
 779:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1349              		.loc 1 779 0 discriminator 2
 1350 0018 FFF7FEFF 		bl	ADC_Enable
 1351              	.LVL83:
 782:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1352              		.loc 1 782 0 discriminator 2
 1353 001c 0346     		mov	r3, r0
 1354 001e 0028     		cmp	r0, #0
 1355 0020 5BD1     		bne	.L116
 787:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC,
 1356              		.loc 1 787 0
 1357 0022 A26A     		ldr	r2, [r4, #40]
 1358 0024 22F44072 		bic	r2, r2, #768
 1359 0028 22F00102 		bic	r2, r2, #1
 1360 002c 42F48072 		orr	r2, r2, #256
 1361 0030 A262     		str	r2, [r4, #40]
 794:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1362              		.loc 1 794 0
 1363 0032 2268     		ldr	r2, [r4]
 1364 0034 2B49     		ldr	r1, .L133
 1365 0036 8A42     		cmp	r2, r1
 1366 0038 27D0     		beq	.L130
 1367              	.L117:
 797:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1368              		.loc 1 797 0
 1369 003a A16A     		ldr	r1, [r4, #40]
 1370 003c 21F48011 		bic	r1, r1, #1048576
 1371 0040 A162     		str	r1, [r4, #40]
 801:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1372              		.loc 1 801 0
ARM GAS  /tmp/ccAQ3Ecv.s 			page 64


 1373 0042 5168     		ldr	r1, [r2, #4]
 1374 0044 11F4806F 		tst	r1, #1024
 1375 0048 05D0     		beq	.L119
 803:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1376              		.loc 1 803 0
 1377 004a A16A     		ldr	r1, [r4, #40]
 1378 004c 21F44051 		bic	r1, r1, #12288
 1379 0050 41F48051 		orr	r1, r1, #4096
 1380 0054 A162     		str	r1, [r4, #40]
 1381              	.L119:
 820:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1382              		.loc 1 820 0
 1383 0056 A16A     		ldr	r1, [r4, #40]
 1384 0058 11F4805F 		tst	r1, #4096
 1385 005c 2BD0     		beq	.L120
 823:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1386              		.loc 1 823 0
 1387 005e E16A     		ldr	r1, [r4, #44]
 1388 0060 21F00601 		bic	r1, r1, #6
 1389 0064 E162     		str	r1, [r4, #44]
 1390              	.L121:
 834:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1391              		.loc 1 834 0
 1392 0066 0021     		movs	r1, #0
 1393 0068 84F82410 		strb	r1, [r4, #36]
 838:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1394              		.loc 1 838 0
 1395 006c 6FF00201 		mvn	r1, #2
 1396 0070 1160     		str	r1, [r2]
 850:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 1397              		.loc 1 850 0
 1398 0072 2268     		ldr	r2, [r4]
 1399 0074 9168     		ldr	r1, [r2, #8]
 1400 0076 01F46021 		and	r1, r1, #917504
 1401 007a B1F5602F 		cmp	r1, #917504
 1402 007e 1DD0     		beq	.L131
 1403              	.L122:
 859:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1404              		.loc 1 859 0
 1405 0080 9168     		ldr	r1, [r2, #8]
 1406 0082 41F48011 		orr	r1, r1, #1048576
 1407 0086 9160     		str	r1, [r2, #8]
 1408 0088 2AE0     		b	.L115
 1409              	.L130:
 794:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1410              		.loc 1 794 0 discriminator 1
 1411 008a A1F58061 		sub	r1, r1, #1024
 1412 008e 4968     		ldr	r1, [r1, #4]
 1413 0090 11F4702F 		tst	r1, #983040
 1414 0094 D1D0     		beq	.L117
 809:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1415              		.loc 1 809 0
 1416 0096 A16A     		ldr	r1, [r4, #40]
 1417 0098 41F48011 		orr	r1, r1, #1048576
 1418 009c A162     		str	r1, [r4, #40]
 813:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1419              		.loc 1 813 0
ARM GAS  /tmp/ccAQ3Ecv.s 			page 65


 1420 009e 1249     		ldr	r1, .L133+4
 1421 00a0 4968     		ldr	r1, [r1, #4]
 1422 00a2 11F4806F 		tst	r1, #1024
 1423 00a6 D6D0     		beq	.L119
 815:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1424              		.loc 1 815 0
 1425 00a8 A16A     		ldr	r1, [r4, #40]
 1426 00aa 21F44051 		bic	r1, r1, #12288
 1427 00ae 41F48051 		orr	r1, r1, #4096
 1428 00b2 A162     		str	r1, [r4, #40]
 1429 00b4 CFE7     		b	.L119
 1430              	.L120:
 828:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1431              		.loc 1 828 0
 1432 00b6 0021     		movs	r1, #0
 1433 00b8 E162     		str	r1, [r4, #44]
 1434 00ba D4E7     		b	.L121
 1435              	.L131:
 850:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 1436              		.loc 1 850 0 discriminator 1
 1437 00bc 0949     		ldr	r1, .L133
 1438 00be 8A42     		cmp	r2, r1
 1439 00c0 04D0     		beq	.L132
 1440              	.L123:
 854:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1441              		.loc 1 854 0
 1442 00c2 9168     		ldr	r1, [r2, #8]
 1443 00c4 41F4A001 		orr	r1, r1, #5242880
 1444 00c8 9160     		str	r1, [r2, #8]
 1445 00ca 09E0     		b	.L115
 1446              	.L132:
 851:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1447              		.loc 1 851 0 discriminator 2
 1448 00cc A1F58061 		sub	r1, r1, #1024
 1449 00d0 4968     		ldr	r1, [r1, #4]
 850:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 1450              		.loc 1 850 0 discriminator 2
 1451 00d2 11F4702F 		tst	r1, #983040
 1452 00d6 D3D1     		bne	.L122
 1453 00d8 F3E7     		b	.L123
 1454              	.L116:
 865:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 1455              		.loc 1 865 0
 1456 00da 0022     		movs	r2, #0
 1457 00dc 84F82420 		strb	r2, [r4, #36]
 1458              	.L115:
 870:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1459              		.loc 1 870 0
 1460 00e0 1846     		mov	r0, r3
 1461              	.LVL84:
 1462 00e2 10BD     		pop	{r4, pc}
 1463              	.LVL85:
 1464              	.L134:
 1465              		.align	2
 1466              	.L133:
 1467 00e4 00280140 		.word	1073817600
 1468 00e8 00240140 		.word	1073816576
ARM GAS  /tmp/ccAQ3Ecv.s 			page 66


 1469              		.cfi_endproc
 1470              	.LFE68:
 1472              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 1473              		.align	1
 1474              		.global	HAL_ADC_Start_IT
 1475              		.syntax unified
 1476              		.thumb
 1477              		.thumb_func
 1478              		.fpu softvfp
 1480              	HAL_ADC_Start_IT:
 1481              	.LFB72:
1106:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1482              		.loc 1 1106 0
 1483              		.cfi_startproc
 1484              		@ args = 0, pretend = 0, frame = 0
 1485              		@ frame_needed = 0, uses_anonymous_args = 0
 1486              	.LVL86:
1113:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1487              		.loc 1 1113 0
 1488 0000 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 1489 0004 012B     		cmp	r3, #1
 1490 0006 02D1     		bne	.L150
 1491 0008 0223     		movs	r3, #2
1207:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1492              		.loc 1 1207 0
 1493 000a 1846     		mov	r0, r3
 1494              	.LVL87:
 1495 000c 7047     		bx	lr
 1496              	.LVL88:
 1497              	.L150:
1106:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1498              		.loc 1 1106 0 discriminator 2
 1499 000e 10B5     		push	{r4, lr}
 1500              	.LCFI22:
 1501              		.cfi_def_cfa_offset 8
 1502              		.cfi_offset 4, -8
 1503              		.cfi_offset 14, -4
 1504 0010 0446     		mov	r4, r0
1113:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1505              		.loc 1 1113 0 discriminator 2
 1506 0012 0123     		movs	r3, #1
 1507 0014 80F82430 		strb	r3, [r0, #36]
1116:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1508              		.loc 1 1116 0 discriminator 2
 1509 0018 FFF7FEFF 		bl	ADC_Enable
 1510              	.LVL89:
1119:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1511              		.loc 1 1119 0 discriminator 2
 1512 001c 0346     		mov	r3, r0
 1513 001e 0028     		cmp	r0, #0
 1514 0020 60D1     		bne	.L137
1124:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_ADC
 1515              		.loc 1 1124 0
 1516 0022 A26A     		ldr	r2, [r4, #40]
 1517 0024 22F47062 		bic	r2, r2, #3840
 1518 0028 22F00102 		bic	r2, r2, #1
 1519 002c 42F48072 		orr	r2, r2, #256
ARM GAS  /tmp/ccAQ3Ecv.s 			page 67


 1520 0030 A262     		str	r2, [r4, #40]
1131:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1521              		.loc 1 1131 0
 1522 0032 2268     		ldr	r2, [r4]
 1523 0034 2E49     		ldr	r1, .L154
 1524 0036 8A42     		cmp	r2, r1
 1525 0038 2CD0     		beq	.L151
 1526              	.L138:
1134:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1527              		.loc 1 1134 0
 1528 003a A16A     		ldr	r1, [r4, #40]
 1529 003c 21F48011 		bic	r1, r1, #1048576
 1530 0040 A162     		str	r1, [r4, #40]
1138:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1531              		.loc 1 1138 0
 1532 0042 5168     		ldr	r1, [r2, #4]
 1533 0044 11F4806F 		tst	r1, #1024
 1534 0048 05D0     		beq	.L140
1140:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1535              		.loc 1 1140 0
 1536 004a A16A     		ldr	r1, [r4, #40]
 1537 004c 21F44051 		bic	r1, r1, #12288
 1538 0050 41F48051 		orr	r1, r1, #4096
 1539 0054 A162     		str	r1, [r4, #40]
 1540              	.L140:
1157:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1541              		.loc 1 1157 0
 1542 0056 A16A     		ldr	r1, [r4, #40]
 1543 0058 11F4805F 		tst	r1, #4096
 1544 005c 30D0     		beq	.L141
1160:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1545              		.loc 1 1160 0
 1546 005e E16A     		ldr	r1, [r4, #44]
 1547 0060 21F00601 		bic	r1, r1, #6
 1548 0064 E162     		str	r1, [r4, #44]
 1549              	.L142:
1171:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1550              		.loc 1 1171 0
 1551 0066 0021     		movs	r1, #0
 1552 0068 84F82410 		strb	r1, [r4, #36]
1175:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1553              		.loc 1 1175 0
 1554 006c 6FF00201 		mvn	r1, #2
 1555 0070 1160     		str	r1, [r2]
1178:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1556              		.loc 1 1178 0
 1557 0072 2168     		ldr	r1, [r4]
 1558 0074 4A68     		ldr	r2, [r1, #4]
 1559 0076 42F02002 		orr	r2, r2, #32
 1560 007a 4A60     		str	r2, [r1, #4]
1187:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 1561              		.loc 1 1187 0
 1562 007c 2268     		ldr	r2, [r4]
 1563 007e 9168     		ldr	r1, [r2, #8]
 1564 0080 01F46021 		and	r1, r1, #917504
 1565 0084 B1F5602F 		cmp	r1, #917504
 1566 0088 1DD0     		beq	.L152
ARM GAS  /tmp/ccAQ3Ecv.s 			page 68


 1567              	.L143:
1196:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1568              		.loc 1 1196 0
 1569 008a 9168     		ldr	r1, [r2, #8]
 1570 008c 41F48011 		orr	r1, r1, #1048576
 1571 0090 9160     		str	r1, [r2, #8]
 1572 0092 2AE0     		b	.L136
 1573              	.L151:
1131:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1574              		.loc 1 1131 0 discriminator 1
 1575 0094 A1F58061 		sub	r1, r1, #1024
 1576 0098 4968     		ldr	r1, [r1, #4]
 1577 009a 11F4702F 		tst	r1, #983040
 1578 009e CCD0     		beq	.L138
1146:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1579              		.loc 1 1146 0
 1580 00a0 A16A     		ldr	r1, [r4, #40]
 1581 00a2 41F48011 		orr	r1, r1, #1048576
 1582 00a6 A162     		str	r1, [r4, #40]
1150:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1583              		.loc 1 1150 0
 1584 00a8 1249     		ldr	r1, .L154+4
 1585 00aa 4968     		ldr	r1, [r1, #4]
 1586 00ac 11F4806F 		tst	r1, #1024
 1587 00b0 D1D0     		beq	.L140
1152:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1588              		.loc 1 1152 0
 1589 00b2 A16A     		ldr	r1, [r4, #40]
 1590 00b4 21F44051 		bic	r1, r1, #12288
 1591 00b8 41F48051 		orr	r1, r1, #4096
 1592 00bc A162     		str	r1, [r4, #40]
 1593 00be CAE7     		b	.L140
 1594              	.L141:
1165:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1595              		.loc 1 1165 0
 1596 00c0 0021     		movs	r1, #0
 1597 00c2 E162     		str	r1, [r4, #44]
 1598 00c4 CFE7     		b	.L142
 1599              	.L152:
1187:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 1600              		.loc 1 1187 0 discriminator 1
 1601 00c6 0A49     		ldr	r1, .L154
 1602 00c8 8A42     		cmp	r2, r1
 1603 00ca 04D0     		beq	.L153
 1604              	.L144:
1191:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1605              		.loc 1 1191 0
 1606 00cc 9168     		ldr	r1, [r2, #8]
 1607 00ce 41F4A001 		orr	r1, r1, #5242880
 1608 00d2 9160     		str	r1, [r2, #8]
 1609 00d4 09E0     		b	.L136
 1610              	.L153:
1188:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1611              		.loc 1 1188 0 discriminator 2
 1612 00d6 A1F58061 		sub	r1, r1, #1024
 1613 00da 4968     		ldr	r1, [r1, #4]
1187:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
ARM GAS  /tmp/ccAQ3Ecv.s 			page 69


 1614              		.loc 1 1187 0 discriminator 2
 1615 00dc 11F4702F 		tst	r1, #983040
 1616 00e0 D3D1     		bne	.L143
 1617 00e2 F3E7     		b	.L144
 1618              	.L137:
1202:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 1619              		.loc 1 1202 0
 1620 00e4 0022     		movs	r2, #0
 1621 00e6 84F82420 		strb	r2, [r4, #36]
 1622              	.L136:
1207:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1623              		.loc 1 1207 0
 1624 00ea 1846     		mov	r0, r3
 1625              	.LVL90:
 1626 00ec 10BD     		pop	{r4, pc}
 1627              	.LVL91:
 1628              	.L155:
 1629 00ee 00BF     		.align	2
 1630              	.L154:
 1631 00f0 00280140 		.word	1073817600
 1632 00f4 00240140 		.word	1073816576
 1633              		.cfi_endproc
 1634              	.LFE72:
 1636              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 1637              		.align	1
 1638              		.global	HAL_ADC_Start_DMA
 1639              		.syntax unified
 1640              		.thumb
 1641              		.thumb_func
 1642              		.fpu softvfp
 1644              	HAL_ADC_Start_DMA:
 1645              	.LFB74:
1274:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1646              		.loc 1 1274 0
 1647              		.cfi_startproc
 1648              		@ args = 0, pretend = 0, frame = 0
 1649              		@ frame_needed = 0, uses_anonymous_args = 0
 1650              	.LVL92:
 1651 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1652              	.LCFI23:
 1653              		.cfi_def_cfa_offset 24
 1654              		.cfi_offset 3, -24
 1655              		.cfi_offset 4, -20
 1656              		.cfi_offset 5, -16
 1657              		.cfi_offset 6, -12
 1658              		.cfi_offset 7, -8
 1659              		.cfi_offset 14, -4
 1660              	.LVL93:
1283:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1661              		.loc 1 1283 0
 1662 0002 0468     		ldr	r4, [r0]
 1663 0004 454D     		ldr	r5, .L173
 1664 0006 AC42     		cmp	r4, r5
 1665 0008 0AD0     		beq	.L157
1283:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1666              		.loc 1 1283 0 is_stmt 0 discriminator 1
 1667 000a 05F58065 		add	r5, r5, #1024
ARM GAS  /tmp/ccAQ3Ecv.s 			page 70


 1668 000e AC42     		cmp	r4, r5
 1669 0010 06D0     		beq	.L157
 1670              	.L158:
1286:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1671              		.loc 1 1286 0 is_stmt 1
 1672 0012 90F82440 		ldrb	r4, [r0, #36]	@ zero_extendqisi2
 1673 0016 012C     		cmp	r4, #1
 1674 0018 09D1     		bne	.L170
 1675 001a 0225     		movs	r5, #2
 1676              	.LVL94:
 1677              	.L159:
1398:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1678              		.loc 1 1398 0
 1679 001c 2846     		mov	r0, r5
 1680 001e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1681              	.LVL95:
 1682              	.L157:
1283:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1683              		.loc 1 1283 0 discriminator 3
 1684 0020 3E4B     		ldr	r3, .L173
 1685 0022 5B68     		ldr	r3, [r3, #4]
 1686 0024 13F4702F 		tst	r3, #983040
 1687 0028 F3D0     		beq	.L158
1393:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 1688              		.loc 1 1393 0
 1689 002a 0125     		movs	r5, #1
 1690 002c F6E7     		b	.L159
 1691              	.L170:
 1692 002e 1746     		mov	r7, r2
 1693 0030 0E46     		mov	r6, r1
 1694 0032 0446     		mov	r4, r0
1286:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1695              		.loc 1 1286 0 discriminator 2
 1696 0034 0123     		movs	r3, #1
 1697 0036 80F82430 		strb	r3, [r0, #36]
1289:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1698              		.loc 1 1289 0 discriminator 2
 1699 003a FFF7FEFF 		bl	ADC_Enable
 1700              	.LVL96:
1292:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1701              		.loc 1 1292 0 discriminator 2
 1702 003e 0546     		mov	r5, r0
 1703 0040 0028     		cmp	r0, #0
 1704 0042 67D1     		bne	.L160
1297:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 1705              		.loc 1 1297 0
 1706 0044 A36A     		ldr	r3, [r4, #40]
 1707 0046 23F47063 		bic	r3, r3, #3840
 1708 004a 23F00103 		bic	r3, r3, #1
 1709 004e 43F48073 		orr	r3, r3, #256
 1710 0052 A362     		str	r3, [r4, #40]
1304:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1711              		.loc 1 1304 0
 1712 0054 2268     		ldr	r2, [r4]
 1713 0056 324B     		ldr	r3, .L173+4
 1714 0058 9A42     		cmp	r2, r3
 1715 005a 3DD0     		beq	.L171
ARM GAS  /tmp/ccAQ3Ecv.s 			page 71


 1716              	.L161:
1307:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1717              		.loc 1 1307 0
 1718 005c A36A     		ldr	r3, [r4, #40]
 1719 005e 23F48013 		bic	r3, r3, #1048576
 1720 0062 A362     		str	r3, [r4, #40]
1311:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1721              		.loc 1 1311 0
 1722 0064 5368     		ldr	r3, [r2, #4]
 1723 0066 13F4806F 		tst	r3, #1024
 1724 006a 05D0     		beq	.L163
1313:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1725              		.loc 1 1313 0
 1726 006c A36A     		ldr	r3, [r4, #40]
 1727 006e 23F44053 		bic	r3, r3, #12288
 1728 0072 43F48053 		orr	r3, r3, #4096
 1729 0076 A362     		str	r3, [r4, #40]
 1730              	.L163:
1330:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1731              		.loc 1 1330 0
 1732 0078 A36A     		ldr	r3, [r4, #40]
 1733 007a 13F4805F 		tst	r3, #4096
 1734 007e 41D0     		beq	.L164
1333:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1735              		.loc 1 1333 0
 1736 0080 E36A     		ldr	r3, [r4, #44]
 1737 0082 23F00603 		bic	r3, r3, #6
 1738 0086 E362     		str	r3, [r4, #44]
 1739              	.L165:
1344:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1740              		.loc 1 1344 0
 1741 0088 0023     		movs	r3, #0
 1742 008a 84F82430 		strb	r3, [r4, #36]
1347:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1743              		.loc 1 1347 0
 1744 008e 236A     		ldr	r3, [r4, #32]
 1745 0090 244A     		ldr	r2, .L173+8
 1746 0092 9A62     		str	r2, [r3, #40]
1350:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1747              		.loc 1 1350 0
 1748 0094 236A     		ldr	r3, [r4, #32]
 1749 0096 244A     		ldr	r2, .L173+12
 1750 0098 DA62     		str	r2, [r3, #44]
1353:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1751              		.loc 1 1353 0
 1752 009a 236A     		ldr	r3, [r4, #32]
 1753 009c 234A     		ldr	r2, .L173+16
 1754 009e 1A63     		str	r2, [r3, #48]
1362:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1755              		.loc 1 1362 0
 1756 00a0 2368     		ldr	r3, [r4]
 1757 00a2 6FF00202 		mvn	r2, #2
 1758 00a6 1A60     		str	r2, [r3]
1365:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1759              		.loc 1 1365 0
 1760 00a8 2268     		ldr	r2, [r4]
 1761 00aa 9368     		ldr	r3, [r2, #8]
ARM GAS  /tmp/ccAQ3Ecv.s 			page 72


 1762 00ac 43F48073 		orr	r3, r3, #256
 1763 00b0 9360     		str	r3, [r2, #8]
1368:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1764              		.loc 1 1368 0
 1765 00b2 2168     		ldr	r1, [r4]
 1766 00b4 3B46     		mov	r3, r7
 1767 00b6 3246     		mov	r2, r6
 1768 00b8 4C31     		adds	r1, r1, #76
 1769 00ba 206A     		ldr	r0, [r4, #32]
 1770              	.LVL97:
 1771 00bc FFF7FEFF 		bl	HAL_DMA_Start_IT
 1772              	.LVL98:
1374:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1773              		.loc 1 1374 0
 1774 00c0 2268     		ldr	r2, [r4]
 1775 00c2 9368     		ldr	r3, [r2, #8]
 1776 00c4 03F46023 		and	r3, r3, #917504
 1777 00c8 B3F5602F 		cmp	r3, #917504
 1778 00cc 1DD0     		beq	.L172
1382:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1779              		.loc 1 1382 0
 1780 00ce 9368     		ldr	r3, [r2, #8]
 1781 00d0 43F48013 		orr	r3, r3, #1048576
 1782 00d4 9360     		str	r3, [r2, #8]
 1783 00d6 A1E7     		b	.L159
 1784              	.LVL99:
 1785              	.L171:
1304:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1786              		.loc 1 1304 0 discriminator 1
 1787 00d8 A3F58063 		sub	r3, r3, #1024
 1788 00dc 5B68     		ldr	r3, [r3, #4]
 1789 00de 13F4702F 		tst	r3, #983040
 1790 00e2 BBD0     		beq	.L161
1319:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1791              		.loc 1 1319 0
 1792 00e4 A36A     		ldr	r3, [r4, #40]
 1793 00e6 43F48013 		orr	r3, r3, #1048576
 1794 00ea A362     		str	r3, [r4, #40]
1323:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1795              		.loc 1 1323 0
 1796 00ec 0B4B     		ldr	r3, .L173
 1797 00ee 5B68     		ldr	r3, [r3, #4]
 1798 00f0 13F4806F 		tst	r3, #1024
 1799 00f4 C0D0     		beq	.L163
1325:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1800              		.loc 1 1325 0
 1801 00f6 A36A     		ldr	r3, [r4, #40]
 1802 00f8 23F44053 		bic	r3, r3, #12288
 1803 00fc 43F48053 		orr	r3, r3, #4096
 1804 0100 A362     		str	r3, [r4, #40]
 1805 0102 B9E7     		b	.L163
 1806              	.L164:
1338:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1807              		.loc 1 1338 0
 1808 0104 0023     		movs	r3, #0
 1809 0106 E362     		str	r3, [r4, #44]
 1810 0108 BEE7     		b	.L165
ARM GAS  /tmp/ccAQ3Ecv.s 			page 73


 1811              	.LVL100:
 1812              	.L172:
1377:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1813              		.loc 1 1377 0
 1814 010a 9368     		ldr	r3, [r2, #8]
 1815 010c 43F4A003 		orr	r3, r3, #5242880
 1816 0110 9360     		str	r3, [r2, #8]
 1817 0112 83E7     		b	.L159
 1818              	.LVL101:
 1819              	.L160:
1388:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1820              		.loc 1 1388 0
 1821 0114 0023     		movs	r3, #0
 1822 0116 84F82430 		strb	r3, [r4, #36]
 1823 011a 7FE7     		b	.L159
 1824              	.L174:
 1825              		.align	2
 1826              	.L173:
 1827 011c 00240140 		.word	1073816576
 1828 0120 00280140 		.word	1073817600
 1829 0124 00000000 		.word	ADC_DMAConvCplt
 1830 0128 00000000 		.word	ADC_DMAHalfConvCplt
 1831 012c 00000000 		.word	ADC_DMAError
 1832              		.cfi_endproc
 1833              	.LFE74:
 1835              		.section	.text.ADC_ConversionStop_Disable,"ax",%progbits
 1836              		.align	1
 1837              		.global	ADC_ConversionStop_Disable
 1838              		.syntax unified
 1839              		.thumb
 1840              		.thumb_func
 1841              		.fpu softvfp
 1843              	ADC_ConversionStop_Disable:
 1844              	.LFB87:
1990:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tickstart = 0U;
 1845              		.loc 1 1990 0
 1846              		.cfi_startproc
 1847              		@ args = 0, pretend = 0, frame = 0
 1848              		@ frame_needed = 0, uses_anonymous_args = 0
 1849              	.LVL102:
 1850 0000 38B5     		push	{r3, r4, r5, lr}
 1851              	.LCFI24:
 1852              		.cfi_def_cfa_offset 16
 1853              		.cfi_offset 3, -16
 1854              		.cfi_offset 4, -12
 1855              		.cfi_offset 5, -8
 1856              		.cfi_offset 14, -4
 1857              	.LVL103:
1994:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1858              		.loc 1 1994 0
 1859 0002 0368     		ldr	r3, [r0]
 1860 0004 9A68     		ldr	r2, [r3, #8]
 1861 0006 12F0010F 		tst	r2, #1
 1862 000a 01D1     		bne	.L181
2019:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 1863              		.loc 1 2019 0
 1864 000c 0020     		movs	r0, #0
ARM GAS  /tmp/ccAQ3Ecv.s 			page 74


 1865              	.LVL104:
2020:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1866              		.loc 1 2020 0
 1867 000e 38BD     		pop	{r3, r4, r5, pc}
 1868              	.LVL105:
 1869              	.L181:
 1870 0010 0446     		mov	r4, r0
1997:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      
 1871              		.loc 1 1997 0
 1872 0012 9A68     		ldr	r2, [r3, #8]
 1873 0014 22F00102 		bic	r2, r2, #1
 1874 0018 9A60     		str	r2, [r3, #8]
2000:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1875              		.loc 1 2000 0
 1876 001a FFF7FEFF 		bl	HAL_GetTick
 1877              	.LVL106:
 1878 001e 0546     		mov	r5, r0
 1879              	.LVL107:
 1880              	.L177:
2003:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1881              		.loc 1 2003 0
 1882 0020 2368     		ldr	r3, [r4]
 1883 0022 9B68     		ldr	r3, [r3, #8]
 1884 0024 13F0010F 		tst	r3, #1
 1885 0028 0ED0     		beq	.L182
2005:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1886              		.loc 1 2005 0
 1887 002a FFF7FEFF 		bl	HAL_GetTick
 1888              	.LVL108:
 1889 002e 401B     		subs	r0, r0, r5
 1890 0030 0228     		cmp	r0, #2
 1891 0032 F5D9     		bls	.L177
2008:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 1892              		.loc 1 2008 0
 1893 0034 A36A     		ldr	r3, [r4, #40]
 1894 0036 43F01003 		orr	r3, r3, #16
 1895 003a A362     		str	r3, [r4, #40]
2011:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 1896              		.loc 1 2011 0
 1897 003c E36A     		ldr	r3, [r4, #44]
 1898 003e 43F00103 		orr	r3, r3, #1
 1899 0042 E362     		str	r3, [r4, #44]
2013:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1900              		.loc 1 2013 0
 1901 0044 0120     		movs	r0, #1
 1902 0046 38BD     		pop	{r3, r4, r5, pc}
 1903              	.LVL109:
 1904              	.L182:
2019:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 1905              		.loc 1 2019 0
 1906 0048 0020     		movs	r0, #0
 1907 004a 38BD     		pop	{r3, r4, r5, pc}
 1908              		.cfi_endproc
 1909              	.LFE87:
 1911              		.section	.text.HAL_ADC_Init,"ax",%progbits
 1912              		.align	1
 1913              		.global	HAL_ADC_Init
ARM GAS  /tmp/ccAQ3Ecv.s 			page 75


 1914              		.syntax unified
 1915              		.thumb
 1916              		.thumb_func
 1917              		.fpu softvfp
 1919              	HAL_ADC_Init:
 1920              	.LFB64:
 375:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1921              		.loc 1 375 0
 1922              		.cfi_startproc
 1923              		@ args = 0, pretend = 0, frame = 0
 1924              		@ frame_needed = 0, uses_anonymous_args = 0
 1925              	.LVL110:
 382:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1926              		.loc 1 382 0
 1927 0000 0028     		cmp	r0, #0
 1928 0002 00F08A80 		beq	.L195
 375:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1929              		.loc 1 375 0
 1930 0006 70B5     		push	{r4, r5, r6, lr}
 1931              	.LCFI25:
 1932              		.cfi_def_cfa_offset 16
 1933              		.cfi_offset 4, -16
 1934              		.cfi_offset 5, -12
 1935              		.cfi_offset 6, -8
 1936              		.cfi_offset 14, -4
 1937 0008 0446     		mov	r4, r0
 411:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1938              		.loc 1 411 0
 1939 000a 836A     		ldr	r3, [r0, #40]
 1940 000c 002B     		cmp	r3, #0
 1941 000e 4DD0     		beq	.L202
 1942              	.LVL111:
 1943              	.L185:
 428:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1944              		.loc 1 428 0
 1945 0010 2046     		mov	r0, r4
 1946 0012 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 1947              	.LVL112:
 433:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (tmp_hal_status == HAL_OK)                                  )
 1948              		.loc 1 433 0
 1949 0016 A36A     		ldr	r3, [r4, #40]
 1950 0018 13F01003 		ands	r3, r3, #16
 1951 001c 77D1     		bne	.L186
 433:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (tmp_hal_status == HAL_OK)                                  )
 1952              		.loc 1 433 0 is_stmt 0 discriminator 1
 1953 001e 0028     		cmp	r0, #0
 1954 0020 75D1     		bne	.L186
 437:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 1955              		.loc 1 437 0 is_stmt 1
 1956 0022 A26A     		ldr	r2, [r4, #40]
 1957 0024 22F48852 		bic	r2, r2, #4352
 1958 0028 22F00202 		bic	r2, r2, #2
 1959 002c 42F00202 		orr	r2, r2, #2
 1960 0030 A262     		str	r2, [r4, #40]
 453:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CFGR_EXTSEL(hadc, hadc->Init.ExternalTrigConv) |
 1961              		.loc 1 453 0
 1962 0032 6568     		ldr	r5, [r4, #4]
ARM GAS  /tmp/ccAQ3Ecv.s 			page 76


 454:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CR2_CONTINUOUS(hadc->Init.ContinuousConvMode)   );
 1963              		.loc 1 454 0
 1964 0034 2168     		ldr	r1, [r4]
 1965 0036 3A4A     		ldr	r2, .L207
 1966 0038 9142     		cmp	r1, r2
 1967 003a 3DD0     		beq	.L203
 454:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CR2_CONTINUOUS(hadc->Init.ContinuousConvMode)   );
 1968              		.loc 1 454 0 is_stmt 0 discriminator 2
 1969 003c E269     		ldr	r2, [r4, #28]
 1970              	.L188:
 453:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CFGR_EXTSEL(hadc, hadc->Init.ExternalTrigConv) |
 1971              		.loc 1 453 0 is_stmt 1
 1972 003e 2A43     		orrs	r2, r2, r5
 455:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1973              		.loc 1 455 0
 1974 0040 E668     		ldr	r6, [r4, #12]
 454:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CR2_CONTINUOUS(hadc->Init.ContinuousConvMode)   );
 1975              		.loc 1 454 0
 1976 0042 42EA4602 		orr	r2, r2, r6, lsl #1
 1977              	.LVL113:
 461:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1978              		.loc 1 461 0
 1979 0046 A568     		ldr	r5, [r4, #8]
 1980 0048 B5F5807F 		cmp	r5, #256
 1981 004c 3ED0     		beq	.L196
 461:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1982              		.loc 1 461 0 is_stmt 0 discriminator 2
 1983 004e 012D     		cmp	r5, #1
 1984 0050 39D0     		beq	.L204
 1985              	.L189:
 1986              	.LVL114:
 466:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1987              		.loc 1 466 0 is_stmt 1 discriminator 6
 1988 0052 6569     		ldr	r5, [r4, #20]
 1989 0054 012D     		cmp	r5, #1
 1990 0056 3CD0     		beq	.L205
 1991              	.L190:
 489:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR1_SCAN    |
 1992              		.loc 1 489 0
 1993 0058 4D68     		ldr	r5, [r1, #4]
 1994 005a 25F46945 		bic	r5, r5, #59648
 1995 005e 2B43     		orrs	r3, r3, r5
 1996              	.LVL115:
 1997 0060 4B60     		str	r3, [r1, #4]
 496:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR2_ALIGN   |
 1998              		.loc 1 496 0
 1999 0062 2168     		ldr	r1, [r4]
 2000 0064 8D68     		ldr	r5, [r1, #8]
 2001 0066 2F4B     		ldr	r3, .L207+4
 2002 0068 2B40     		ands	r3, r3, r5
 2003 006a 1343     		orrs	r3, r3, r2
 2004 006c 8B60     		str	r3, [r1, #8]
 512:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 2005              		.loc 1 512 0
 2006 006e A368     		ldr	r3, [r4, #8]
 2007 0070 B3F5807F 		cmp	r3, #256
 2008 0074 3ED0     		beq	.L192
ARM GAS  /tmp/ccAQ3Ecv.s 			page 77


 512:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 2009              		.loc 1 512 0 is_stmt 0 discriminator 1
 2010 0076 012B     		cmp	r3, #1
 2011 0078 3CD0     		beq	.L192
 379:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2012              		.loc 1 379 0 is_stmt 1
 2013 007a 0023     		movs	r3, #0
 2014              	.LVL116:
 2015              	.L193:
 517:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR1_L          ,
 2016              		.loc 1 517 0
 2017 007c 2568     		ldr	r5, [r4]
 2018 007e E96A     		ldr	r1, [r5, #44]
 2019 0080 21F47001 		bic	r1, r1, #15728640
 2020 0084 0B43     		orrs	r3, r3, r1
 2021              	.LVL117:
 2022 0086 EB62     		str	r3, [r5, #44]
 527:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                         ADC_CR2_SWSTART | ADC_CR2_JSWSTART |
 2023              		.loc 1 527 0
 2024 0088 2368     		ldr	r3, [r4]
 2025 008a 9968     		ldr	r1, [r3, #8]
 2026 008c 264B     		ldr	r3, .L207+8
 2027 008e 0B40     		ands	r3, r3, r1
 2028 0090 9A42     		cmp	r2, r3
 2029 0092 33D0     		beq	.L206
 544:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 2030              		.loc 1 544 0
 2031 0094 A36A     		ldr	r3, [r4, #40]
 2032 0096 23F01203 		bic	r3, r3, #18
 2033 009a 43F01003 		orr	r3, r3, #16
 2034 009e A362     		str	r3, [r4, #40]
 549:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 2035              		.loc 1 549 0
 2036 00a0 E36A     		ldr	r3, [r4, #44]
 2037 00a2 43F00103 		orr	r3, r3, #1
 2038 00a6 E362     		str	r3, [r4, #44]
 2039              	.LVL118:
 551:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 2040              		.loc 1 551 0
 2041 00a8 0120     		movs	r0, #1
 2042 00aa 70BD     		pop	{r4, r5, r6, pc}
 2043              	.LVL119:
 2044              	.L202:
 414:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2045              		.loc 1 414 0
 2046 00ac C362     		str	r3, [r0, #44]
 417:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2047              		.loc 1 417 0
 2048 00ae 80F82430 		strb	r3, [r0, #36]
 420:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 2049              		.loc 1 420 0
 2050 00b2 FFF7FEFF 		bl	HAL_ADC_MspInit
 2051              	.LVL120:
 2052 00b6 ABE7     		b	.L185
 2053              	.LVL121:
 2054              	.L203:
 454:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CR2_CONTINUOUS(hadc->Init.ContinuousConvMode)   );
ARM GAS  /tmp/ccAQ3Ecv.s 			page 78


 2055              		.loc 1 454 0 discriminator 1
 2056 00b8 E269     		ldr	r2, [r4, #28]
 2057 00ba B2F5402F 		cmp	r2, #786432
 2058 00be BED1     		bne	.L188
 454:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CR2_CONTINUOUS(hadc->Init.ContinuousConvMode)   );
 2059              		.loc 1 454 0 is_stmt 0
 2060 00c0 4FF40022 		mov	r2, #524288
 2061 00c4 BBE7     		b	.L188
 2062              	.LVL122:
 2063              	.L204:
 461:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2064              		.loc 1 461 0 is_stmt 1
 2065 00c6 4FF48073 		mov	r3, #256
 2066 00ca C2E7     		b	.L189
 2067              	.L196:
 2068 00cc 4FF48073 		mov	r3, #256
 2069 00d0 BFE7     		b	.L189
 2070              	.LVL123:
 2071              	.L205:
 468:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 2072              		.loc 1 468 0
 2073 00d2 36B9     		cbnz	r6, .L191
 472:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                          ADC_CR1_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion)  );
 2074              		.loc 1 472 0
 2075 00d4 A569     		ldr	r5, [r4, #24]
 2076 00d6 013D     		subs	r5, r5, #1
 2077 00d8 43EA4533 		orr	r3, r3, r5, lsl #13
 2078              	.LVL124:
 2079 00dc 43F40063 		orr	r3, r3, #2048
 2080              	.LVL125:
 2081 00e0 BAE7     		b	.L190
 2082              	.L191:
 481:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 2083              		.loc 1 481 0
 2084 00e2 A56A     		ldr	r5, [r4, #40]
 2085 00e4 45F02005 		orr	r5, r5, #32
 2086 00e8 A562     		str	r5, [r4, #40]
 484:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 2087              		.loc 1 484 0
 2088 00ea E56A     		ldr	r5, [r4, #44]
 2089 00ec 45F00105 		orr	r5, r5, #1
 2090 00f0 E562     		str	r5, [r4, #44]
 2091 00f2 B1E7     		b	.L190
 2092              	.LVL126:
 2093              	.L192:
 514:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 2094              		.loc 1 514 0
 2095 00f4 2369     		ldr	r3, [r4, #16]
 2096 00f6 013B     		subs	r3, r3, #1
 2097 00f8 1B05     		lsls	r3, r3, #20
 2098              	.LVL127:
 2099 00fa BFE7     		b	.L193
 2100              	.LVL128:
 2101              	.L206:
 534:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 2102              		.loc 1 534 0
 2103 00fc 0023     		movs	r3, #0
ARM GAS  /tmp/ccAQ3Ecv.s 			page 79


 2104 00fe E362     		str	r3, [r4, #44]
 537:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 2105              		.loc 1 537 0
 2106 0100 A36A     		ldr	r3, [r4, #40]
 2107 0102 23F00303 		bic	r3, r3, #3
 2108 0106 43F00103 		orr	r3, r3, #1
 2109 010a A362     		str	r3, [r4, #40]
 2110 010c 70BD     		pop	{r4, r5, r6, pc}
 2111              	.LVL129:
 2112              	.L186:
 558:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 2113              		.loc 1 558 0
 2114 010e A36A     		ldr	r3, [r4, #40]
 2115 0110 43F01003 		orr	r3, r3, #16
 2116 0114 A362     		str	r3, [r4, #40]
 2117              	.LVL130:
 560:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 2118              		.loc 1 560 0
 2119 0116 0120     		movs	r0, #1
 2120 0118 70BD     		pop	{r4, r5, r6, pc}
 2121              	.LVL131:
 2122              	.L195:
 2123              	.LCFI26:
 2124              		.cfi_def_cfa_offset 0
 2125              		.cfi_restore 4
 2126              		.cfi_restore 5
 2127              		.cfi_restore 6
 2128              		.cfi_restore 14
 384:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 2129              		.loc 1 384 0
 2130 011a 0120     		movs	r0, #1
 2131              	.LVL132:
 2132 011c 7047     		bx	lr
 2133              	.L208:
 2134 011e 00BF     		.align	2
 2135              	.L207:
 2136 0120 003C0140 		.word	1073822720
 2137 0124 FDF7E1FF 		.word	-1968131
 2138 0128 FE0E1FFF 		.word	-14741762
 2139              		.cfi_endproc
 2140              	.LFE64:
 2142              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 2143              		.align	1
 2144              		.global	HAL_ADC_DeInit
 2145              		.syntax unified
 2146              		.thumb
 2147              		.thumb_func
 2148              		.fpu softvfp
 2150              	HAL_ADC_DeInit:
 2151              	.LFB65:
 576:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2152              		.loc 1 576 0
 2153              		.cfi_startproc
 2154              		@ args = 0, pretend = 0, frame = 0
 2155              		@ frame_needed = 0, uses_anonymous_args = 0
 2156              	.LVL133:
 2157 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/ccAQ3Ecv.s 			page 80


 2158              	.LCFI27:
 2159              		.cfi_def_cfa_offset 16
 2160              		.cfi_offset 3, -16
 2161              		.cfi_offset 4, -12
 2162              		.cfi_offset 5, -8
 2163              		.cfi_offset 14, -4
 2164              	.LVL134:
 580:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 2165              		.loc 1 580 0
 2166 0002 0028     		cmp	r0, #0
 2167 0004 74D0     		beq	.L212
 2168 0006 0446     		mov	r4, r0
 589:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2169              		.loc 1 589 0
 2170 0008 836A     		ldr	r3, [r0, #40]
 2171 000a 43F00203 		orr	r3, r3, #2
 2172 000e 8362     		str	r3, [r0, #40]
 593:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2173              		.loc 1 593 0
 2174 0010 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 2175              	.LVL135:
 598:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 2176              		.loc 1 598 0
 2177 0014 0546     		mov	r5, r0
 2178 0016 20B1     		cbz	r0, .L214
 2179              	.LVL136:
 2180              	.L211:
 702:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2181              		.loc 1 702 0
 2182 0018 0023     		movs	r3, #0
 2183 001a 84F82430 		strb	r3, [r4, #36]
 2184              	.LVL137:
 2185              	.L210:
 706:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 2186              		.loc 1 706 0
 2187 001e 2846     		mov	r0, r5
 2188 0020 38BD     		pop	{r3, r4, r5, pc}
 2189              	.LVL138:
 2190              	.L214:
 606:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                 ADC_FLAG_JSTRT | ADC_FLAG_STRT));
 2191              		.loc 1 606 0
 2192 0022 2368     		ldr	r3, [r4]
 2193 0024 6FF01F02 		mvn	r2, #31
 2194 0028 1A60     		str	r2, [r3]
 610:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR1_JDISCEN | ADC_CR1_DISCEN | ADC_CR1_JAUTO   | 
 2195              		.loc 1 610 0
 2196 002a 2268     		ldr	r2, [r4]
 2197 002c 5168     		ldr	r1, [r2, #4]
 2198 002e 314B     		ldr	r3, .L215
 2199 0030 0B40     		ands	r3, r3, r1
 2200 0032 5360     		str	r3, [r2, #4]
 616:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR2_EXTTRIG | ADC_CR2_EXTSEL  | ADC_CR2_JEXTTRIG |  
 2201              		.loc 1 616 0
 2202 0034 2268     		ldr	r2, [r4]
 2203 0036 9168     		ldr	r1, [r2, #8]
 2204 0038 2F4B     		ldr	r3, .L215+4
 2205 003a 0B40     		ands	r3, r3, r1
ARM GAS  /tmp/ccAQ3Ecv.s 			page 81


 2206 003c 9360     		str	r3, [r2, #8]
 623:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR1_SMP14 | ADC_SMPR1_SMP13 | ADC_SMPR1_SMP12 | 
 2207              		.loc 1 623 0
 2208 003e 2268     		ldr	r2, [r4]
 2209 0040 D368     		ldr	r3, [r2, #12]
 2210 0042 03F07F43 		and	r3, r3, #-16777216
 2211 0046 D360     		str	r3, [r2, #12]
 628:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR2_SMP6 | ADC_SMPR2_SMP5 | ADC_SMPR2_SMP4 | 
 2212              		.loc 1 628 0
 2213 0048 2268     		ldr	r2, [r4]
 2214 004a 1369     		ldr	r3, [r2, #16]
 2215 004c 03F04043 		and	r3, r3, #-1073741824
 2216 0050 1361     		str	r3, [r2, #16]
 634:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JOFR2 */
 2217              		.loc 1 634 0
 2218 0052 2268     		ldr	r2, [r4]
 2219 0054 5369     		ldr	r3, [r2, #20]
 2220 0056 23F47F63 		bic	r3, r3, #4080
 2221 005a 23F00F03 		bic	r3, r3, #15
 2222 005e 5361     		str	r3, [r2, #20]
 636:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JOFR3 */
 2223              		.loc 1 636 0
 2224 0060 2268     		ldr	r2, [r4]
 2225 0062 9369     		ldr	r3, [r2, #24]
 2226 0064 23F47F63 		bic	r3, r3, #4080
 2227 0068 23F00F03 		bic	r3, r3, #15
 2228 006c 9361     		str	r3, [r2, #24]
 638:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JOFR4 */
 2229              		.loc 1 638 0
 2230 006e 2268     		ldr	r2, [r4]
 2231 0070 D369     		ldr	r3, [r2, #28]
 2232 0072 23F47F63 		bic	r3, r3, #4080
 2233 0076 23F00F03 		bic	r3, r3, #15
 2234 007a D361     		str	r3, [r2, #28]
 640:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2235              		.loc 1 640 0
 2236 007c 2268     		ldr	r2, [r4]
 2237 007e 136A     		ldr	r3, [r2, #32]
 2238 0080 23F47F63 		bic	r3, r3, #4080
 2239 0084 23F00F03 		bic	r3, r3, #15
 2240 0088 1362     		str	r3, [r2, #32]
 643:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register LTR */
 2241              		.loc 1 643 0
 2242 008a 2268     		ldr	r2, [r4]
 2243 008c 536A     		ldr	r3, [r2, #36]
 2244 008e 23F47F63 		bic	r3, r3, #4080
 2245 0092 23F00F03 		bic	r3, r3, #15
 2246 0096 5362     		str	r3, [r2, #36]
 645:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2247              		.loc 1 645 0
 2248 0098 2268     		ldr	r2, [r4]
 2249 009a 936A     		ldr	r3, [r2, #40]
 2250 009c 23F47F63 		bic	r3, r3, #4080
 2251 00a0 23F00F03 		bic	r3, r3, #15
 2252 00a4 9362     		str	r3, [r2, #40]
 648:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR1_SQ16 | ADC_SQR1_SQ15 | 
 2253              		.loc 1 648 0
ARM GAS  /tmp/ccAQ3Ecv.s 			page 82


 2254 00a6 2268     		ldr	r2, [r4]
 2255 00a8 D36A     		ldr	r3, [r2, #44]
 2256 00aa 03F07F43 		and	r3, r3, #-16777216
 2257 00ae D362     		str	r3, [r2, #44]
 653:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR1_SQ16 | ADC_SQR1_SQ15 | 
 2258              		.loc 1 653 0
 2259 00b0 2268     		ldr	r2, [r4]
 2260 00b2 D36A     		ldr	r3, [r2, #44]
 2261 00b4 03F07F43 		and	r3, r3, #-16777216
 2262 00b8 D362     		str	r3, [r2, #44]
 658:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR2_SQ9  | ADC_SQR2_SQ8  | ADC_SQR2_SQ7   );
 2263              		.loc 1 658 0
 2264 00ba 2268     		ldr	r2, [r4]
 2265 00bc 136B     		ldr	r3, [r2, #48]
 2266 00be 03F04043 		and	r3, r3, #-1073741824
 2267 00c2 1363     		str	r3, [r2, #48]
 662:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR3_SQ3 | ADC_SQR3_SQ2 | ADC_SQR3_SQ1  );
 2268              		.loc 1 662 0
 2269 00c4 2268     		ldr	r2, [r4]
 2270 00c6 536B     		ldr	r3, [r2, #52]
 2271 00c8 03F04043 		and	r3, r3, #-1073741824
 2272 00cc 5363     		str	r3, [r2, #52]
 666:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_JSQR_JSQ4 | ADC_JSQR_JSQ3 | 
 2273              		.loc 1 666 0
 2274 00ce 2268     		ldr	r2, [r4]
 2275 00d0 936B     		ldr	r3, [r2, #56]
 2276 00d2 9B0D     		lsrs	r3, r3, #22
 2277 00d4 9B05     		lsls	r3, r3, #22
 2278 00d6 9363     		str	r3, [r2, #56]
 671:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_JSQR_JSQ4 | ADC_JSQR_JSQ3 | 
 2279              		.loc 1 671 0
 2280 00d8 2268     		ldr	r2, [r4]
 2281 00da 936B     		ldr	r3, [r2, #56]
 2282 00dc 9B0D     		lsrs	r3, r3, #22
 2283 00de 9B05     		lsls	r3, r3, #22
 2284 00e0 9363     		str	r3, [r2, #56]
 691:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2285              		.loc 1 691 0
 2286 00e2 2046     		mov	r0, r4
 2287              	.LVL139:
 2288 00e4 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 2289              	.LVL140:
 694:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2290              		.loc 1 694 0
 2291 00e8 0023     		movs	r3, #0
 2292 00ea E362     		str	r3, [r4, #44]
 697:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2293              		.loc 1 697 0
 2294 00ec A362     		str	r3, [r4, #40]
 2295 00ee 93E7     		b	.L211
 2296              	.LVL141:
 2297              	.L212:
 582:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 2298              		.loc 1 582 0
 2299 00f0 0125     		movs	r5, #1
 2300 00f2 94E7     		b	.L210
 2301              	.L216:
ARM GAS  /tmp/ccAQ3Ecv.s 			page 83


 2302              		.align	2
 2303              	.L215:
 2304 00f4 00003FFF 		.word	-12648448
 2305 00f8 F00601FF 		.word	-16709904
 2306              		.cfi_endproc
 2307              	.LFE65:
 2309              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 2310              		.align	1
 2311              		.global	HAL_ADC_Stop
 2312              		.syntax unified
 2313              		.thumb
 2314              		.thumb_func
 2315              		.fpu softvfp
 2317              	HAL_ADC_Stop:
 2318              	.LFB69:
 882:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2319              		.loc 1 882 0
 2320              		.cfi_startproc
 2321              		@ args = 0, pretend = 0, frame = 0
 2322              		@ frame_needed = 0, uses_anonymous_args = 0
 2323              	.LVL142:
 889:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2324              		.loc 1 889 0
 2325 0000 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 2326 0004 012B     		cmp	r3, #1
 2327 0006 02D1     		bne	.L225
 2328 0008 0223     		movs	r3, #2
 909:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 2329              		.loc 1 909 0
 2330 000a 1846     		mov	r0, r3
 2331              	.LVL143:
 2332 000c 7047     		bx	lr
 2333              	.LVL144:
 2334              	.L225:
 882:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2335              		.loc 1 882 0 discriminator 2
 2336 000e 10B5     		push	{r4, lr}
 2337              	.LCFI28:
 2338              		.cfi_def_cfa_offset 8
 2339              		.cfi_offset 4, -8
 2340              		.cfi_offset 14, -4
 2341 0010 0446     		mov	r4, r0
 889:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2342              		.loc 1 889 0 discriminator 2
 2343 0012 0123     		movs	r3, #1
 2344 0014 80F82430 		strb	r3, [r0, #36]
 893:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2345              		.loc 1 893 0 discriminator 2
 2346 0018 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 2347              	.LVL145:
 896:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 2348              		.loc 1 896 0 discriminator 2
 2349 001c 0346     		mov	r3, r0
 2350 001e 38B9     		cbnz	r0, .L219
 899:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 2351              		.loc 1 899 0
 2352 0020 A26A     		ldr	r2, [r4, #40]
ARM GAS  /tmp/ccAQ3Ecv.s 			page 84


 2353 0022 22F48852 		bic	r2, r2, #4352
 2354 0026 22F00102 		bic	r2, r2, #1
 2355 002a 42F00102 		orr	r2, r2, #1
 2356 002e A262     		str	r2, [r4, #40]
 2357              	.L219:
 905:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2358              		.loc 1 905 0
 2359 0030 0022     		movs	r2, #0
 2360 0032 84F82420 		strb	r2, [r4, #36]
 909:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 2361              		.loc 1 909 0
 2362 0036 1846     		mov	r0, r3
 2363              	.LVL146:
 2364 0038 10BD     		pop	{r4, pc}
 2365              		.cfi_endproc
 2366              	.LFE69:
 2368              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 2369              		.align	1
 2370              		.global	HAL_ADC_Stop_IT
 2371              		.syntax unified
 2372              		.thumb
 2373              		.thumb_func
 2374              		.fpu softvfp
 2376              	HAL_ADC_Stop_IT:
 2377              	.LFB73:
1217:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2378              		.loc 1 1217 0
 2379              		.cfi_startproc
 2380              		@ args = 0, pretend = 0, frame = 0
 2381              		@ frame_needed = 0, uses_anonymous_args = 0
 2382              	.LVL147:
1224:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2383              		.loc 1 1224 0
 2384 0000 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 2385 0004 012B     		cmp	r3, #1
 2386 0006 02D1     		bne	.L234
 2387 0008 0223     		movs	r3, #2
1247:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 2388              		.loc 1 1247 0
 2389 000a 1846     		mov	r0, r3
 2390              	.LVL148:
 2391 000c 7047     		bx	lr
 2392              	.LVL149:
 2393              	.L234:
1217:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2394              		.loc 1 1217 0 discriminator 2
 2395 000e 10B5     		push	{r4, lr}
 2396              	.LCFI29:
 2397              		.cfi_def_cfa_offset 8
 2398              		.cfi_offset 4, -8
 2399              		.cfi_offset 14, -4
 2400 0010 0446     		mov	r4, r0
1224:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2401              		.loc 1 1224 0 discriminator 2
 2402 0012 0123     		movs	r3, #1
 2403 0014 80F82430 		strb	r3, [r0, #36]
1228:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
ARM GAS  /tmp/ccAQ3Ecv.s 			page 85


 2404              		.loc 1 1228 0 discriminator 2
 2405 0018 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 2406              	.LVL150:
1231:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 2407              		.loc 1 1231 0 discriminator 2
 2408 001c 0346     		mov	r3, r0
 2409 001e 60B9     		cbnz	r0, .L228
1234:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2410              		.loc 1 1234 0
 2411 0020 2168     		ldr	r1, [r4]
 2412 0022 4A68     		ldr	r2, [r1, #4]
 2413 0024 22F02002 		bic	r2, r2, #32
 2414 0028 4A60     		str	r2, [r1, #4]
1237:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 2415              		.loc 1 1237 0
 2416 002a A26A     		ldr	r2, [r4, #40]
 2417 002c 22F48852 		bic	r2, r2, #4352
 2418 0030 22F00102 		bic	r2, r2, #1
 2419 0034 42F00102 		orr	r2, r2, #1
 2420 0038 A262     		str	r2, [r4, #40]
 2421              	.L228:
1243:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2422              		.loc 1 1243 0
 2423 003a 0022     		movs	r2, #0
 2424 003c 84F82420 		strb	r2, [r4, #36]
1247:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 2425              		.loc 1 1247 0
 2426 0040 1846     		mov	r0, r3
 2427              	.LVL151:
 2428 0042 10BD     		pop	{r4, pc}
 2429              		.cfi_endproc
 2430              	.LFE73:
 2432              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 2433              		.align	1
 2434              		.global	HAL_ADC_Stop_DMA
 2435              		.syntax unified
 2436              		.thumb
 2437              		.thumb_func
 2438              		.fpu softvfp
 2440              	HAL_ADC_Stop_DMA:
 2441              	.LFB75:
1415:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2442              		.loc 1 1415 0
 2443              		.cfi_startproc
 2444              		@ args = 0, pretend = 0, frame = 0
 2445              		@ frame_needed = 0, uses_anonymous_args = 0
 2446              	.LVL152:
1422:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2447              		.loc 1 1422 0
 2448 0000 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 2449 0004 012B     		cmp	r3, #1
 2450 0006 02D1     		bne	.L244
 2451 0008 0223     		movs	r3, #2
1458:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 2452              		.loc 1 1458 0
 2453 000a 1846     		mov	r0, r3
 2454              	.LVL153:
ARM GAS  /tmp/ccAQ3Ecv.s 			page 86


 2455 000c 7047     		bx	lr
 2456              	.LVL154:
 2457              	.L244:
1415:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2458              		.loc 1 1415 0 discriminator 2
 2459 000e 10B5     		push	{r4, lr}
 2460              	.LCFI30:
 2461              		.cfi_def_cfa_offset 8
 2462              		.cfi_offset 4, -8
 2463              		.cfi_offset 14, -4
 2464 0010 0446     		mov	r4, r0
1422:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2465              		.loc 1 1422 0 discriminator 2
 2466 0012 0123     		movs	r3, #1
 2467 0014 80F82430 		strb	r3, [r0, #36]
1426:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2468              		.loc 1 1426 0 discriminator 2
 2469 0018 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 2470              	.LVL155:
1429:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 2471              		.loc 1 1429 0 discriminator 2
 2472 001c 0346     		mov	r3, r0
 2473 001e 20B1     		cbz	r0, .L245
 2474              	.L237:
 2475              	.LVL156:
1454:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2476              		.loc 1 1454 0
 2477 0020 0022     		movs	r2, #0
 2478 0022 84F82420 		strb	r2, [r4, #36]
1458:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 2479              		.loc 1 1458 0
 2480 0026 1846     		mov	r0, r3
 2481 0028 10BD     		pop	{r4, pc}
 2482              	.LVL157:
 2483              	.L245:
1432:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2484              		.loc 1 1432 0
 2485 002a 2268     		ldr	r2, [r4]
 2486 002c 9368     		ldr	r3, [r2, #8]
 2487 002e 23F48073 		bic	r3, r3, #256
 2488 0032 9360     		str	r3, [r2, #8]
1436:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2489              		.loc 1 1436 0
 2490 0034 206A     		ldr	r0, [r4, #32]
 2491              	.LVL158:
 2492 0036 FFF7FEFF 		bl	HAL_DMA_Abort
 2493              	.LVL159:
1439:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 2494              		.loc 1 1439 0
 2495 003a 0346     		mov	r3, r0
 2496 003c 40B9     		cbnz	r0, .L238
1442:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 2497              		.loc 1 1442 0
 2498 003e A26A     		ldr	r2, [r4, #40]
 2499 0040 22F48852 		bic	r2, r2, #4352
 2500 0044 22F00102 		bic	r2, r2, #1
 2501 0048 42F00102 		orr	r2, r2, #1
ARM GAS  /tmp/ccAQ3Ecv.s 			page 87


 2502 004c A262     		str	r2, [r4, #40]
 2503 004e E7E7     		b	.L237
 2504              	.L238:
1449:Libraries/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 2505              		.loc 1 1449 0
 2506 0050 A26A     		ldr	r2, [r4, #40]
 2507 0052 42F04002 		orr	r2, r2, #64
 2508 0056 A262     		str	r2, [r4, #40]
 2509 0058 E2E7     		b	.L237
 2510              		.cfi_endproc
 2511              	.LFE75:
 2513              		.text
 2514              	.Letext0:
 2515              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2516              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2517              		.file 4 "Libraries/CMSIS/Include/core_cm3.h"
 2518              		.file 5 "Libraries/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 2519              		.file 6 "Libraries/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 2520              		.file 7 "Libraries/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2521              		.file 8 "/usr/include/newlib/sys/lock.h"
 2522              		.file 9 "/usr/include/newlib/sys/_types.h"
 2523              		.file 10 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 2524              		.file 11 "/usr/include/newlib/sys/reent.h"
 2525              		.file 12 "Libraries/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2526              		.file 13 "Libraries/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2527              		.file 14 "Libraries/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 2528              		.file 15 "Libraries/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2529              		.file 16 "Libraries/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc_ex.h"
 2530              		.file 17 "Libraries/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
ARM GAS  /tmp/ccAQ3Ecv.s 			page 88


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_adc.c
     /tmp/ccAQ3Ecv.s:16     .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccAQ3Ecv.s:23     .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccAQ3Ecv.s:37     .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccAQ3Ecv.s:44     .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccAQ3Ecv.s:57     .text.HAL_ADC_PollForConversion:0000000000000000 $t
     /tmp/ccAQ3Ecv.s:64     .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
     /tmp/ccAQ3Ecv.s:320    .text.HAL_ADC_PollForConversion:000000000000015c $d
     /tmp/ccAQ3Ecv.s:329    .text.HAL_ADC_PollForEvent:0000000000000000 $t
     /tmp/ccAQ3Ecv.s:336    .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
     /tmp/ccAQ3Ecv.s:406    .text.HAL_ADC_GetValue:0000000000000000 $t
     /tmp/ccAQ3Ecv.s:413    .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
     /tmp/ccAQ3Ecv.s:431    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccAQ3Ecv.s:438    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccAQ3Ecv.s:451    .text.ADC_DMAConvCplt:0000000000000000 $t
     /tmp/ccAQ3Ecv.s:458    .text.ADC_DMAConvCplt:0000000000000000 ADC_DMAConvCplt
     /tmp/ccAQ3Ecv.s:527    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/ccAQ3Ecv.s:534    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/ccAQ3Ecv.s:547    .text.ADC_DMAHalfConvCplt:0000000000000000 $t
     /tmp/ccAQ3Ecv.s:554    .text.ADC_DMAHalfConvCplt:0000000000000000 ADC_DMAHalfConvCplt
     /tmp/ccAQ3Ecv.s:578    .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 $t
     /tmp/ccAQ3Ecv.s:585    .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 HAL_ADC_LevelOutOfWindowCallback
     /tmp/ccAQ3Ecv.s:598    .text.HAL_ADC_IRQHandler:0000000000000000 $t
     /tmp/ccAQ3Ecv.s:605    .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
     /tmp/ccAQ3Ecv.s:776    .text.HAL_ADC_ErrorCallback:0000000000000000 $t
     /tmp/ccAQ3Ecv.s:783    .text.HAL_ADC_ErrorCallback:0000000000000000 HAL_ADC_ErrorCallback
     /tmp/ccAQ3Ecv.s:796    .text.ADC_DMAError:0000000000000000 $t
     /tmp/ccAQ3Ecv.s:803    .text.ADC_DMAError:0000000000000000 ADC_DMAError
     /tmp/ccAQ3Ecv.s:835    .text.HAL_ADC_ConfigChannel:0000000000000000 $t
     /tmp/ccAQ3Ecv.s:842    .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
     /tmp/ccAQ3Ecv.s:1051   .text.HAL_ADC_ConfigChannel:000000000000012c $d
     /tmp/ccAQ3Ecv.s:1058   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
     /tmp/ccAQ3Ecv.s:1065   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
     /tmp/ccAQ3Ecv.s:1150   .text.HAL_ADC_AnalogWDGConfig:000000000000005c $d
     /tmp/ccAQ3Ecv.s:1155   .text.HAL_ADC_GetState:0000000000000000 $t
     /tmp/ccAQ3Ecv.s:1162   .text.HAL_ADC_GetState:0000000000000000 HAL_ADC_GetState
     /tmp/ccAQ3Ecv.s:1179   .text.HAL_ADC_GetError:0000000000000000 $t
     /tmp/ccAQ3Ecv.s:1186   .text.HAL_ADC_GetError:0000000000000000 HAL_ADC_GetError
     /tmp/ccAQ3Ecv.s:1203   .text.ADC_Enable:0000000000000000 $t
     /tmp/ccAQ3Ecv.s:1210   .text.ADC_Enable:0000000000000000 ADC_Enable
     /tmp/ccAQ3Ecv.s:1308   .text.ADC_Enable:0000000000000078 $d
     /tmp/ccAQ3Ecv.s:1314   .text.HAL_ADC_Start:0000000000000000 $t
     /tmp/ccAQ3Ecv.s:1321   .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
     /tmp/ccAQ3Ecv.s:1467   .text.HAL_ADC_Start:00000000000000e4 $d
     /tmp/ccAQ3Ecv.s:1473   .text.HAL_ADC_Start_IT:0000000000000000 $t
     /tmp/ccAQ3Ecv.s:1480   .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
     /tmp/ccAQ3Ecv.s:1631   .text.HAL_ADC_Start_IT:00000000000000f0 $d
     /tmp/ccAQ3Ecv.s:1637   .text.HAL_ADC_Start_DMA:0000000000000000 $t
     /tmp/ccAQ3Ecv.s:1644   .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
     /tmp/ccAQ3Ecv.s:1827   .text.HAL_ADC_Start_DMA:000000000000011c $d
     /tmp/ccAQ3Ecv.s:1836   .text.ADC_ConversionStop_Disable:0000000000000000 $t
     /tmp/ccAQ3Ecv.s:1843   .text.ADC_ConversionStop_Disable:0000000000000000 ADC_ConversionStop_Disable
     /tmp/ccAQ3Ecv.s:1912   .text.HAL_ADC_Init:0000000000000000 $t
     /tmp/ccAQ3Ecv.s:1919   .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
     /tmp/ccAQ3Ecv.s:2136   .text.HAL_ADC_Init:0000000000000120 $d
     /tmp/ccAQ3Ecv.s:2143   .text.HAL_ADC_DeInit:0000000000000000 $t
ARM GAS  /tmp/ccAQ3Ecv.s 			page 89


     /tmp/ccAQ3Ecv.s:2150   .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
     /tmp/ccAQ3Ecv.s:2304   .text.HAL_ADC_DeInit:00000000000000f4 $d
     /tmp/ccAQ3Ecv.s:2310   .text.HAL_ADC_Stop:0000000000000000 $t
     /tmp/ccAQ3Ecv.s:2317   .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
     /tmp/ccAQ3Ecv.s:2369   .text.HAL_ADC_Stop_IT:0000000000000000 $t
     /tmp/ccAQ3Ecv.s:2376   .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
     /tmp/ccAQ3Ecv.s:2433   .text.HAL_ADC_Stop_DMA:0000000000000000 $t
     /tmp/ccAQ3Ecv.s:2440   .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_RCCEx_GetPeriphCLKFreq
SystemCoreClock
HAL_ADCEx_InjectedConvCpltCallback
HAL_DMA_Start_IT
HAL_DMA_Abort
