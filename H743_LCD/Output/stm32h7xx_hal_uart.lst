ARM GAS  /tmp/ccmyImrL.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_uart.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	UART_EndTxTransfer:
  24              	.LFB187:
  25              		.file 1 "Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c"
   1:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
   2:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ******************************************************************************
   3:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @file    stm32h7xx_hal_uart.c
   4:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @author  MCD Application Team
   5:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           + IO operation functions
  10:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
  12:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
  13:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   @verbatim
  14:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
  15:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
  17:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   [..]
  18:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  20:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) UART pins configuration:
  24:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) UART interrupts handling:
  31:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
  33:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
ARM GAS  /tmp/ccmyImrL.s 			page 2


  34:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                 inside the transmit and receive processes.
  35:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  36:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  37:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  38:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  39:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  40:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  41:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  42:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  43:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  44:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Prescaler value , Hardware
  45:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  46:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  47:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  48:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  49:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  50:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  51:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         the HAL_UART_Init() API.
  52:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  53:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  54:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  55:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  56:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  57:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  58:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  59:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  60:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  61:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  62:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  63:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  64:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  65:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
  66:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  67:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  68:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  69:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  70:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ##### Callback registration #####
  71:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ==================================
  72:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  73:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
  74:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  75:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  76:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  77:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
  78:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  79:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  80:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  81:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  82:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  83:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  84:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  85:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  86:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  87:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  88:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
  89:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
  90:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
ARM GAS  /tmp/ccmyImrL.s 			page 3


  91:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  92:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  93:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  94:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     and a pointer to the user callback function.
  95:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  96:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
  97:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  98:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     weak (surcharged) function.
  99:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 100:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     and the Callback ID.
 101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This function allows to reset following callbacks:
 102:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 103:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 104:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 106:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 107:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 108:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 109:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 110:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 111:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 112:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 113:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 114:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 115:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 116:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
 117:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 118:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 119:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 120:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 121:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 122:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 123:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 124:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 125:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 126:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
 127:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 128:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 129:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 130:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 131:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 132:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 133:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 134:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 135:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
 136:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 137:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     not defined, the callback registration feature is not available
 138:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 139:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 140:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 141:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   @endverbatim
 142:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ******************************************************************************
 143:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @attention
 144:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
 145:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 146:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * All rights reserved.</center></h2>
 147:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
ARM GAS  /tmp/ccmyImrL.s 			page 4


 148:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 149:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 150:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 151:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 152:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
 153:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ******************************************************************************
 154:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 155:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 156:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 157:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #include "stm32h7xx_hal.h"
 158:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 159:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @addtogroup STM32H7xx_HAL_Driver
 160:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 161:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 162:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 163:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART UART
 164:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief HAL UART module driver
 165:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 166:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 167:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 168:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 169:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 170:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 171:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 172:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 173:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 174:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 175:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 176:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8| \
 177:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                       USART_CR1_FIFOEN ))                      /*!< UART or USART C
 178:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 179:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT| \
 180:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                       USART_CR3_TXFTCFG | USART_CR3_RXFTCFG ))  /*!< UART or USART 
 181:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 182:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define LPUART_BRR_MIN  0x00000300U  /* LPUART BRR minimum authorized value */
 183:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define LPUART_BRR_MAX  0x000FFFFFU  /* LPUART BRR maximum authorized value */
 184:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 185:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 186:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 187:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 188:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 189:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
 190:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 191:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 192:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 193:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 194:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 195:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 196:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 197:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 198:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 199:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 200:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 201:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 202:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 203:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 204:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/ccmyImrL.s 			page 5


 205:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 206:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 207:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 208:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 209:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 210:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 211:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 212:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 213:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 214:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 215:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 216:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 217:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 218:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 219:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 220:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
 221:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 222:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 223:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 224:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 225:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 226:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 227:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 228:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 229:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 230:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 231:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
 232:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @verbatim
 233:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** ===============================================================================
 234:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 235:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
 236:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
 237:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 238:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     in asynchronous mode.
 239:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 240:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Baud Rate
 241:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Word Length
 242:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Stop Bit
 243:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 244:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 245:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Hardware flow control
 246:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Receiver/transmitter modes
 247:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Over Sampling Method
 248:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) One-Bit Sampling Method
 249:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 250:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 251:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) data logical level inversion
 252:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) RX and TX pins swap
 253:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) RX overrun detection disabling
 254:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) DMA disabling on RX error
 255:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) MSB first on communication line
 256:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) auto Baud rate detection
 257:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
 258:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 259:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 260:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 261:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     are available in reference manual).
ARM GAS  /tmp/ccmyImrL.s 			page 6


 262:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 263:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @endverbatim
 264:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 265:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 266:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 267:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   following table.
 268:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 269:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   Table 1. UART frame format.
 270:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 271:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 272:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 273:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 274:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 275:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 276:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 277:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 278:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 279:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 280:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 281:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 282:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 283:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 284:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 285:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 286:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 287:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 288:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 289:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 290:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 291:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 292:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
 293:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 294:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 295:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 296:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 297:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 298:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart == NULL)
 299:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 300:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 301:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 302:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 303:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 304:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 305:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Check the parameters */
 306:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 307:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 308:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
 309:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 310:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Check the parameters */
 311:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 312:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 313:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 314:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 315:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 316:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 317:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 318:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  /tmp/ccmyImrL.s 			page 7


 319:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 320:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 321:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 322:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 323:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 324:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 325:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 326:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 327:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware */
 328:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->MspInitCallback(huart);
 329:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
 330:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 331:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 332:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 333:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 334:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 335:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 336:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 337:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 338:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 339:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 340:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 341:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 342:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 343:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 344:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 345:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 346:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 347:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 348:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 349:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 350:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 351:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 352:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 353:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 354:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 355:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 356:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 357:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 358:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 359:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 360:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 361:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 362:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 363:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 364:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 365:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
 366:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 367:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 368:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 369:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 370:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 371:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart == NULL)
 372:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 373:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 374:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 375:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  /tmp/ccmyImrL.s 			page 8


 376:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check UART instance */
 377:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 378:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 379:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 380:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 381:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 382:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 383:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 384:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 385:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 386:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 387:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 388:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 389:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 390:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 391:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 392:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware */
 393:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->MspInitCallback(huart);
 394:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
 395:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 396:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 397:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 398:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 399:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 400:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 401:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 402:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 403:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 404:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 405:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 406:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 407:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 408:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 409:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 410:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 411:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 412:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 413:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 414:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 415:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 416:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 417:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 418:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 419:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 420:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 421:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 422:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 423:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 424:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 425:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 426:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 427:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 428:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 429:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 430:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 431:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 432:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
ARM GAS  /tmp/ccmyImrL.s 			page 9


 433:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 434:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart             UART handle.
 435:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 436:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 437:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 438:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 439:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 440:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 441:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 442:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 443:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 444:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart == NULL)
 445:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 446:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 447:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 448:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 449:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the LIN UART instance */
 450:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 451:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the Break detection length parameter */
 452:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 453:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 454:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 455:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 456:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 457:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 458:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 459:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 460:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 461:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 462:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 463:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 464:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 465:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 466:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 467:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 468:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 469:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 470:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 471:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 472:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 473:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 474:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 475:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 476:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 477:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 478:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware */
 479:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->MspInitCallback(huart);
 480:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
 481:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 482:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 483:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 484:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 485:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 486:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 487:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 488:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 489:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  /tmp/ccmyImrL.s 			page 10


 490:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 491:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 492:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 493:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 494:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 495:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 496:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 497:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 498:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 499:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 500:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 501:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 502:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 503:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 504:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 505:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 506:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 507:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 508:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 509:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 510:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 511:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 512:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 513:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 514:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 515:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 516:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 517:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 518:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 519:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 520:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 521:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 522:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 523:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart        UART handle.
 524:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 525:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 526:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 527:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 528:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 529:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 530:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 531:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 532:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 533:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 534:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 535:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 536:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 537:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 538:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 539:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 540:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 541:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart == NULL)
 542:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 543:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 544:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 545:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 546:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the wake up method parameter */
ARM GAS  /tmp/ccmyImrL.s 			page 11


 547:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 548:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 549:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 550:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 551:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 552:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 553:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 554:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 555:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 556:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 557:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 558:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 559:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 560:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 561:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 562:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware */
 563:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->MspInitCallback(huart);
 564:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
 565:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 566:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 567:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 568:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 569:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 570:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 571:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 572:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 573:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 574:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 575:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 576:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 577:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 578:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 579:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 580:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 581:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 582:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 583:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 584:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 585:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 586:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 587:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 588:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 589:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 590:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 591:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 592:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 593:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 594:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 595:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 596:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 597:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 598:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 599:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 600:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 601:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 602:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 603:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
ARM GAS  /tmp/ccmyImrL.s 			page 12


 604:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 605:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 606:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 607:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 608:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 609:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
 610:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 611:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 612:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 613:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 614:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 615:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart == NULL)
 616:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 617:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 618:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 619:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 620:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the parameters */
 621:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 622:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 623:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 624:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 625:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 626:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 627:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 628:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 629:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 630:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 631:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 632:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 633:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 634:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 635:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 636:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DeInit the low level hardware */
 637:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 638:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
 639:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DeInit the low level hardware */
 640:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 641:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 642:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 643:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 644:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 645:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 646:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 647:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 648:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 649:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 650:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 651:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 652:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 653:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 654:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
 655:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
 656:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 657:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 658:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 659:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 660:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
ARM GAS  /tmp/ccmyImrL.s 			page 13


 661:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 662:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 663:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 664:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
 665:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 666:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 667:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 668:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 669:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
 670:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
 671:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 672:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 673:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 674:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 675:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
 676:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 677:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 678:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 679:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
 680:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 681:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 682:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 683:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 684:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Register a User UART Callback
 685:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 686:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart uart handle
 687:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 688:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This parameter can be one of the following values:
 689:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 690:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 691:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 692:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 693:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 694:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 695:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 696:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 697:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 698:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 699:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 700:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 701:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 702:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 703:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 704:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 705:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 706:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 707:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 708:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 709:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 710:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (pCallback == NULL)
 711:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 712:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 713:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 714:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 715:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 716:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 717:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
ARM GAS  /tmp/ccmyImrL.s 			page 14


 718:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 719:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 720:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 721:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (CallbackID)
 722:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 723:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 724:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 725:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 726:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 727:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 728:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 729:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 730:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 731:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 732:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 733:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 734:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 735:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 736:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 737:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 738:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 739:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 740:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 741:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 742:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 743:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 744:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 745:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 746:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 747:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 748:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 749:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 750:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 751:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 752:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 753:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 754:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 755:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 756:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 757:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 758:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 759:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 760:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxFifoFullCallback = pCallback;
 761:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 762:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 763:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 764:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxFifoEmptyCallback = pCallback;
 765:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 766:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 767:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 768:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 769:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 770:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 771:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 772:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 773:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 774:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  /tmp/ccmyImrL.s 			page 15


 775:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default :
 776:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 777:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 778:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         status =  HAL_ERROR;
 779:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 780:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 781:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 782:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 783:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 784:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (CallbackID)
 785:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 786:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 787:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 788:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 789:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 790:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 791:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 792:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 793:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 794:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default :
 795:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 796:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 797:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         status =  HAL_ERROR;
 798:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 799:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 800:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 801:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
 802:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 803:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 804:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 805:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     status =  HAL_ERROR;
 806:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 807:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 808:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 809:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 810:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return status;
 811:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 812:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 813:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 814:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 815:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 816:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart uart handle
 817:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 818:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This parameter can be one of the following values:
 819:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 820:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 821:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 822:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 823:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 824:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 825:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 826:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 827:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 828:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 829:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 830:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 831:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
ARM GAS  /tmp/ccmyImrL.s 			page 16


 832:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 833:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 834:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 835:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 836:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 837:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 838:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 839:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 840:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 841:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 842:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (CallbackID)
 843:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 844:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 845:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 846:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 847:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 848:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 849:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 850:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 851:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 852:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 853:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 854:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 855:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 856:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 857:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 858:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 859:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 860:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 862:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 863:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 864:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 865:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 866:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 867:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 868:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 869:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 870:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 871:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 872:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 873:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 874:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 875:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 876:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 877:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 878:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 879:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 880:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 881:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxFifoFullCallback = HAL_UARTEx_RxFifoFullCallback;             /* Legacy weak RxFif
 882:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 883:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 884:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 885:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxFifoEmptyCallback = HAL_UARTEx_TxFifoEmptyCallback;           /* Legacy weak TxFif
 886:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 887:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 888:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
ARM GAS  /tmp/ccmyImrL.s 			page 17


 889:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 890:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 891:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 892:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 893:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 894:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 895:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 896:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default :
 897:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 898:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 899:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         status =  HAL_ERROR;
 900:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 901:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 902:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 903:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 904:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 905:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (CallbackID)
 906:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 907:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 908:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 909:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 910:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 911:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 912:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 913:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 914:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 915:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default :
 916:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 917:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 918:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         status =  HAL_ERROR;
 919:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 920:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 921:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
 923:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 924:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 925:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 926:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     status =  HAL_ERROR;
 927:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 928:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 929:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 930:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 931:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return status;
 932:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 933:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 934:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 935:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 936:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
 937:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 938:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 939:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 940:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 941:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
 942:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @verbatim
 943:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
 944:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                       ##### IO operation functions #####
 945:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
ARM GAS  /tmp/ccmyImrL.s 			page 18


 946:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 947:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     and Half duplex data transfers.
 948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 949:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) There are two mode of transfer:
 950:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 951:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            after finishing transfer.
 953:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 954:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            The end of the data processing will be indicated through the
 956:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 957:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            using DMA mode.
 958:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 959:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 960:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 961:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 962:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Blocking mode API's are :
 963:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 964:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Receive()
 965:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 966:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 967:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 968:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 969:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 970:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 971:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 972:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 973:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 974:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 975:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 976:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 977:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 978:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 979:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 980:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 981:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 982:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 983:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 984:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 985:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 986:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Abort()
 987:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
 988:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
 989:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
 990:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
 991:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
 992:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 993:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 994:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
 995:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
 996:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
 997:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 998:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 999:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         Errors are handled as follows :
1000:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1001:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
1002:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
ARM GAS  /tmp/ccmyImrL.s 			page 19


1003:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1004:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1005:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1006:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1007:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1008:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1009:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1010:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1011:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1012:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @endverbatim
1013:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
1014:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1015:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1016:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1017:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1018:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1019:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1020:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         of u16 provided through pData.
1021:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note When FIFO mode is enabled, writing a data in the TDR register adds one
1022:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *       data to the TXFIFO. Write operations to the TDR register are performed
1023:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *       when TXFNF flag is set. From hardware perspective, TXFNF flag and
1024:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *       TXE are mapped on the same bit-field.
1025:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart   UART handle.
1026:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1027:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be sent.
1028:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Timeout Timeout duration.
1029:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1030:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1031:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1032:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1033:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint8_t  *pdata8bits;
1034:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t *pdata16bits;
1035:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t tickstart;
1036:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1037:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1038:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1039:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1040:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1041:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1042:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return  HAL_ERROR;
1043:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1044:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1045:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_LOCK(huart);
1046:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1047:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1048:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1049:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1050:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1051:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     tickstart = HAL_GetTick();
1052:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1053:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferSize  = Size;
1054:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = Size;
1055:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1056:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1057:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1058:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1059:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata8bits  = NULL;
ARM GAS  /tmp/ccmyImrL.s 			page 20


1060:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1061:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1062:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
1063:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1064:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata8bits  = pData;
1065:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata16bits = NULL;
1066:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1067:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1068:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
1069:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1070:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1071:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1072:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         return HAL_TIMEOUT;
1073:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1074:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (pdata8bits == NULL)
1075:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1076:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
1077:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pdata16bits++;
1078:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1079:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1080:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1081:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
1082:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pdata8bits++;
1083:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1084:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxXferCount--;
1085:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1086:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1087:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
1088:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1089:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_TIMEOUT;
1090:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1091:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1092:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1093:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1094:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1095:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1096:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1097:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_OK;
1098:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1099:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1100:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
1102:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1103:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1104:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1106:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1107:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1108:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1109:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         of u16 available through pData.
1110:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note When FIFO mode is enabled, the RXFNE flag is set as long as the RXFIFO
1111:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *       is not empty. Read operations from the RDR register are performed when
1112:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *       RXFNE flag is set. From hardware perspective, RXFNE flag and
1113:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *       RXNE are mapped on the same bit-field.
1114:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart   UART handle.
1115:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1116:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be received.
ARM GAS  /tmp/ccmyImrL.s 			page 21


1117:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Timeout Timeout duration.
1118:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1119:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1120:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1121:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1122:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint8_t  *pdata8bits;
1123:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t *pdata16bits;
1124:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t uhMask;
1125:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t tickstart;
1126:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1127:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1128:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1129:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1130:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1131:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1132:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return  HAL_ERROR;
1133:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1134:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1135:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_LOCK(huart);
1136:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1137:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1138:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1139:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1140:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1141:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     tickstart = HAL_GetTick();
1142:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1143:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferSize  = Size;
1144:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = Size;
1145:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1146:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1147:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1148:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
1149:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1150:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1151:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1152:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1153:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata8bits  = NULL;
1154:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1155:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1156:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
1157:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1158:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata8bits  = pData;
1159:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata16bits = NULL;
1160:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1161:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1162:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* as long as data have to be received */
1163:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
1164:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1165:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
1166:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1167:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         return HAL_TIMEOUT;
1168:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1169:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (pdata8bits == NULL)
1170:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1171:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
1172:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pdata16bits++;
1173:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
ARM GAS  /tmp/ccmyImrL.s 			page 22


1174:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1175:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1176:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1177:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pdata8bits++;
1178:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1179:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxXferCount--;
1180:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1181:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1182:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1183:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1184:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1185:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1186:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1187:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_OK;
1188:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1189:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1190:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1191:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
1192:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1193:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1194:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1195:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1196:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1197:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1198:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1199:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         of u16 provided through pData.
1200:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
1201:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1202:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1203:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1204:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1205:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1206:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1207:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1208:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1209:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1210:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1211:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1212:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_ERROR;
1213:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1214:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1215:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_LOCK(huart);
1216:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1217:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1218:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferSize  = Size;
1219:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = Size;
1220:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxISR       = NULL;
1221:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1222:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1223:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1224:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1225:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Configure Tx interrupt processing */
1226:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1227:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1228:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1229:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1230:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
ARM GAS  /tmp/ccmyImrL.s 			page 23


1231:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT_FIFOEN;
1232:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1233:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1234:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1235:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT_FIFOEN;
1236:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1237:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1238:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1239:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1240:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the TX FIFO threshold interrupt */
1241:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1242:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1243:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
1244:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1245:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1246:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1247:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1248:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT;
1249:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1250:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1251:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1252:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT;
1253:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1254:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1255:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1256:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1257:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the Transmit Data Register Empty interrupt */
1258:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
1259:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1260:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1261:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_OK;
1262:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1263:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1264:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1265:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
1266:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1267:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1268:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1269:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1270:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1271:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1272:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1273:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         of u16 available through pData.
1274:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
1275:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1276:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1277:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1278:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1279:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1280:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1281:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1282:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1283:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1284:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1285:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1286:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_ERROR;
1287:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
ARM GAS  /tmp/ccmyImrL.s 			page 24


1288:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1289:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_LOCK(huart);
1290:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1291:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pRxBuffPtr  = pData;
1292:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferSize  = Size;
1293:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = Size;
1294:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxISR       = NULL;
1295:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1296:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1297:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1298:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1299:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1300:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1301:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1302:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1303:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1304:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1305:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Configure Rx interrupt processing*/
1306:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
1307:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1308:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1309:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1310:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1311:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT_FIFOEN;
1312:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1313:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1314:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1315:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT_FIFOEN;
1316:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1317:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1318:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1319:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1320:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the UART Parity Error interrupt and RX FIFO Threshold interrupt */
1321:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1322:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
1323:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1324:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
1325:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1326:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1327:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1328:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1329:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT;
1330:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1331:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1332:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1333:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT;
1334:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1335:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1336:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1337:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1338:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
1339:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
1340:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1341:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1342:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_OK;
1343:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1344:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
ARM GAS  /tmp/ccmyImrL.s 			page 25


1345:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1346:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
1347:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1348:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1349:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1350:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1351:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1352:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1353:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1354:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         of u16 provided through pData.
1355:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
1356:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1357:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1358:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1359:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1360:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1361:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1362:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1363:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1364:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1365:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1366:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1367:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_ERROR;
1368:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1369:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1370:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_LOCK(huart);
1371:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1372:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1373:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferSize  = Size;
1374:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = Size;
1375:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1376:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1377:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1378:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1379:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1380:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1381:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1382:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1383:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1384:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1385:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1386:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1387:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the DMA error callback */
1388:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
1389:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1390:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the DMA abort callback */
1391:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1392:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1393:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the UART transmit DMA channel */
1394:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->
1395:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1396:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Set error code to DMA */
1397:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
1398:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1399:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         __HAL_UNLOCK(huart);
1400:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1401:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Restore huart->gState to ready */
ARM GAS  /tmp/ccmyImrL.s 			page 26


1402:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1403:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1404:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         return HAL_ERROR;
1405:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1406:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1407:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1408:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
1409:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1410:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1411:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1412:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1413:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     in the UART CR3 register */
1414:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1415:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1416:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_OK;
1417:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1418:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1419:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1420:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
1421:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1422:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1423:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1424:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1425:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1426:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1427:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the parity bit (MSB position).
1428:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1429:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1430:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         of u16 available through pData.
1431:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
1432:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1433:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1434:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1435:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1436:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1437:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1438:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1439:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1440:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1441:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1442:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1443:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_ERROR;
1444:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1445:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1446:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_LOCK(huart);
1447:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1448:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1449:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferSize = Size;
1450:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1451:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1452:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1453:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1454:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1455:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1456:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1457:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1458:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  /tmp/ccmyImrL.s 			page 27


1459:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1460:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1461:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1462:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the DMA error callback */
1463:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferErrorCallback = UART_DMAError;
1464:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1465:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the DMA abort callback */
1466:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1467:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1468:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the DMA channel */
1469:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuff
1470:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1471:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Set error code to DMA */
1472:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
1473:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1474:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         __HAL_UNLOCK(huart);
1475:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1476:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Restore huart->gState to ready */
1477:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1478:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1479:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         return HAL_ERROR;
1480:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1481:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1482:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1483:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1484:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1485:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1486:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1487:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1488:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1489:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1490:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1491:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     in the UART CR3 register */
1492:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1493:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1494:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_OK;
1495:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1496:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1497:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1498:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
1499:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1500:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1501:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1502:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1503:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1504:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
1505:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1506:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1507:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1508:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1509:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1510:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1511:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1512:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
1513:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1514:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1515:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
ARM GAS  /tmp/ccmyImrL.s 			page 28


1516:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1517:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1518:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1519:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1520:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1521:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1522:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1523:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1524:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1525:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1526:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1527:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1528:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1529:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1530:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1531:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1532:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1533:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
1534:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1535:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1536:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1537:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1538:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
1539:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1540:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1541:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1542:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1543:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
1544:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1545:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
1546:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1547:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1548:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1549:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1550:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
1551:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1552:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1553:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1554:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1555:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1556:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1557:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1558:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1559:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1560:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1561:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1562:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1563:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1564:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1565:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
1566:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1567:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1568:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1569:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1570:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
1571:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1572:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
ARM GAS  /tmp/ccmyImrL.s 			page 29


1573:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1574:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1575:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1576:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1577:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1578:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1579:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1580:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1581:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1582:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1583:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1584:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1585:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1586:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1587:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1588:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1589:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1590:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1591:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1592:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1593:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1594:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1595:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1596:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1597:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
1598:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Set error code to DMA */
1599:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1600:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1601:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
1602:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
1603:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1604:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1605:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1606:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1607:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1608:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1609:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1610:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1611:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1612:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1613:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1614:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1615:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1616:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1617:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1618:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1619:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1620:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1621:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
1622:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Set error code to DMA */
1623:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1624:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1625:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
1626:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
1627:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1628:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1629:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  /tmp/ccmyImrL.s 			page 30


1630:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1631:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1632:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1633:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
1634:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1635:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1636:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1637:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1638:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
1639:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1640:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
1641:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1642:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1643:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1644:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
1645:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1646:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1647:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1648:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1649:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1650:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
1651:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFN
1652:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
1653:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1654:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1655:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1656:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1657:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1658:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1659:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1660:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1661:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1662:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1663:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1664:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1665:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1666:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1667:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1668:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1669:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
1670:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Set error code to DMA */
1671:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1672:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1673:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
1674:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
1675:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1676:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1677:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1678:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1679:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1680:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1681:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1682:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1683:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1684:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1685:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1686:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
ARM GAS  /tmp/ccmyImrL.s 			page 31


1687:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1688:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1689:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1690:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1691:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1692:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1693:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1694:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
1695:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Set error code to DMA */
1696:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1697:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1698:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
1699:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
1700:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1701:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1702:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1703:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1704:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1705:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
1706:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
1707:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1708:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1709:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1710:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1711:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1712:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1713:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1714:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1715:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1716:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1717:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Discard the received data */
1718:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1719:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1720:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1721:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1722:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1723:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1724:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1725:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1726:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
1727:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1728:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1729:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1730:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1731:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
1732:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1733:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
1734:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1735:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1736:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1737:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
1738:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1739:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1740:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1741:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1742:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1743:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
ARM GAS  /tmp/ccmyImrL.s 			page 32


1744:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
1745:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1746:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1747:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1748:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1749:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1750:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1751:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1752:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1753:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1754:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1755:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1756:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1757:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1758:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1759:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1760:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1761:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1762:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
1763:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Set error code to DMA */
1764:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1765:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1766:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
1767:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
1768:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1769:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1770:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1771:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1772:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset Tx transfer counter */
1773:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
1774:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1775:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1776:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1777:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1778:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1779:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1780:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1781:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1782:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1783:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1784:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
1785:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1786:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1787:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1788:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1789:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
1790:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1791:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
1792:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1793:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1794:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1795:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
1796:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1797:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1798:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1799:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1800:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
ARM GAS  /tmp/ccmyImrL.s 			page 33


1801:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
1802:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
1803:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
1804:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1805:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1806:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1807:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1808:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1809:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1810:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1811:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1812:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1813:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1814:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1815:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1816:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1817:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1818:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1819:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1820:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
1821:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Set error code to DMA */
1822:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1823:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1824:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
1825:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
1826:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1827:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1828:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1829:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1830:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset Rx transfer counter */
1831:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
1832:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1833:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1834:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1835:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1836:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Discard the received data */
1837:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1838:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1839:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1840:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1841:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1842:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
1843:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1844:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1845:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1846:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1847:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
1848:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1849:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
1850:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1851:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1852:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1853:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
1854:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1855:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1856:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1857:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccmyImrL.s 			page 34


1858:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1859:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1860:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1862:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1863:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable interrupts */
1864:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_TCIE | USART_CR1_RXNEIE_RXFNEIE | USA
1865:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
1866:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1867:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1868:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      before any call to DMA Abort functions */
1869:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1870:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->hdmatx != NULL)
1871:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1872:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1873:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        Otherwise, set it to NULL */
1874:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1875:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1876:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1877:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1878:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
1879:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1880:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1881:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1882:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1883:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1884:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->hdmarx != NULL)
1885:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1886:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1887:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        Otherwise, set it to NULL */
1888:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1889:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1890:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1891:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1892:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
1893:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1894:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1895:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1896:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1897:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1898:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1899:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1900:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1901:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1902:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1903:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1904:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1905:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1906:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1907:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1908:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1909:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1910:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Abort DMA TX */
1911:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1912:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1913:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1914:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
ARM GAS  /tmp/ccmyImrL.s 			page 35


1915:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1916:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1917:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         abortcplt = 0U;
1918:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1919:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1920:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1921:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1923:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1924:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1925:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1926:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1927:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1928:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1929:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1930:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1931:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1932:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1933:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Abort DMA RX */
1934:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1935:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1936:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1937:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         abortcplt = 1U;
1938:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1939:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1940:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1941:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         abortcplt = 0U;
1942:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1943:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1944:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1945:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1946:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1947:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (abortcplt == 1U)
1948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1949:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1950:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = 0U;
1951:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = 0U;
1952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1953:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear ISR function pointers */
1954:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxISR = NULL;
1955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxISR = NULL;
1956:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1957:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Reset errorCode */
1958:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1959:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1960:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1961:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1962:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1963:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
1964:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1965:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1966:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1967:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1968:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1969:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Discard the received data */
1970:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1971:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  /tmp/ccmyImrL.s 			page 36


1972:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1973:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1974:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1975:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1976:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1977:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1978:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call registered Abort complete callback */
1979:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
1980:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
1981:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
1982:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1983:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1984:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1985:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1986:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
1987:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1988:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1989:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1990:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1991:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
1992:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1993:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
1994:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1995:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1996:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1997:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
1998:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1999:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2000:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2001:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2002:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2003:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2004:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2005:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable interrupts */
2006:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
2007:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
2008:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2009:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2010:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
2011:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2012:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2013:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2014:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2015:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
2016:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2017:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2018:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2019:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
2020:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2021:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Abort DMA TX */
2022:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
2023:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2024:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2025:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
2026:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2027:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2028:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
ARM GAS  /tmp/ccmyImrL.s 			page 37


2029:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2030:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Reset Tx transfer counter */
2031:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxXferCount = 0U;
2032:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2033:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Clear TxISR function pointers */
2034:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxISR = NULL;
2035:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2036:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2037:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2038:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2039:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2040:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2041:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2042:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2043:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2044:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2045:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
2046:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2047:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2048:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2049:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
2050:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2051:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Reset Tx transfer counter */
2052:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = 0U;
2053:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2054:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear TxISR function pointers */
2055:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxISR = NULL;
2056:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2057:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2058:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
2059:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2060:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
2061:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2062:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2063:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2064:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
2065:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2066:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2067:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2068:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2069:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2070:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2071:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2072:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
2073:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2074:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2075:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2076:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
2077:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2078:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2079:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2080:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2081:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2082:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2083:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
2084:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2085:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
ARM GAS  /tmp/ccmyImrL.s 			page 38


2086:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2087:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
2088:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2089:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2090:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2091:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2092:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2093:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2094:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2095:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2096:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
2097:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
2098:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2099:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2100:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2102:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2103:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2104:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2106:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2107:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2108:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2109:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
2110:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2111:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Abort DMA RX */
2112:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2113:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2114:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2115:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
2116:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2117:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2118:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
2119:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2120:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Reset Rx transfer counter */
2121:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxXferCount = 0U;
2122:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2123:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Clear RxISR function pointer */
2124:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
2125:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2126:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2127:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
2128:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2129:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Discard the received data */
2130:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2131:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2132:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2133:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2134:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2135:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2136:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2137:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2138:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2139:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2140:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2141:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
2142:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccmyImrL.s 			page 39


2143:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2144:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2145:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
2146:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2147:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Reset Rx transfer counter */
2148:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = 0U;
2149:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2150:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear RxISR function pointer */
2151:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
2152:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2153:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2154:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
2155:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2156:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2157:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2158:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2159:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2160:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2161:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2162:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2163:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2164:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2165:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
2166:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2167:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2168:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2169:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
2170:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2171:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2172:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2173:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2174:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
2175:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2176:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2177:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2178:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2179:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
2180:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
2181:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
2182:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2183:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t errorflags;
2184:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t errorcode;
2185:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2186:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* If no error occurs */
2187:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | 
2188:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (errorflags == 0U)
2189:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2190:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2191:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2192:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2193:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != 0U)))
2194:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2195:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (huart->RxISR != NULL)
2196:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2197:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxISR(huart);
2198:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2199:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return;
ARM GAS  /tmp/ccmyImrL.s 			page 40


2200:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2201:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2202:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2203:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* If some errors occur */
2204:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((errorflags != 0U)
2205:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
2206:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
2207:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2208:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2209:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
2210:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2211:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
2212:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2213:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
2214:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2215:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2216:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2217:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2218:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2219:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
2220:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2221:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
2222:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2223:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2224:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2225:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2226:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2227:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
2228:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2229:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
2230:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2231:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2232:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2233:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
2234:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
2235:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
2236:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2237:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
2238:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2239:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
2240:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2241:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2242:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART Receiver Timeout interrupt occurred ---------------------------------*/
2243:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
2244:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2245:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
2246:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2247:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_RTO;
2248:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2249:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2250:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call UART Error Call back function if need be ----------------------------*/
2251:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
2252:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2253:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* UART in mode Receiver --------------------------------------------------*/
2254:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2255:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2256:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != 0U)))
ARM GAS  /tmp/ccmyImrL.s 			page 41


2257:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2258:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (huart->RxISR != NULL)
2259:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
2260:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->RxISR(huart);
2261:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
2262:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2263:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2264:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* If Error is to be considered as blocking :
2265:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           - Receiver Timeout error in Reception
2266:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           - Overrun error in Reception
2267:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           - any error occurs in DMA mode reception
2268:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       */
2269:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       errorcode = huart->ErrorCode;
2270:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
2271:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
2272:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2273:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2274:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2275:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2276:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         UART_EndRxTransfer(huart);
2277:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2278:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2279:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2280:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
2281:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2282:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2283:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2284:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           if (huart->hdmarx != NULL)
2285:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           {
2286:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2287:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2288:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
2289:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2290:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /* Abort DMA RX */
2291:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2292:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             {
2293:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2294:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
2295:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
2296:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           }
2297:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           else
2298:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           {
2299:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /* Call user error callback */
2300:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2301:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /*Call registered error callback*/
2302:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             huart->ErrorCallback(huart);
2303:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2304:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /*Call legacy weak error callback*/
2305:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
2306:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2307:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2308:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           }
2309:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
2310:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         else
2311:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
2312:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Call user error callback */
2313:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
ARM GAS  /tmp/ccmyImrL.s 			page 42


2314:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call registered error callback*/
2315:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCallback(huart);
2316:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2317:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call legacy weak error callback*/
2318:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
2319:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2320:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
2321:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2322:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
2323:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2324:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2325:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            Error is notified to user through user error callback */
2326:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2327:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call registered error callback*/
2328:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCallback(huart);
2329:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2330:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call legacy weak error callback*/
2331:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
2332:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2333:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
2334:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2335:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2336:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
2337:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2338:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   } /* End if some error occurs */
2339:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2340:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2341:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
2342:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2343:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
2344:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2345:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2346:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2347:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2348:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2349:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2350:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->WakeupCallback(huart);
2351:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2352:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2353:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
2354:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2355:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
2356:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2357:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2358:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2359:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
2360:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
2361:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != 0U)))
2362:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2363:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->TxISR != NULL)
2364:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2365:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxISR(huart);
2366:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2367:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
2368:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2369:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2370:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
ARM GAS  /tmp/ccmyImrL.s 			page 43


2371:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
2372:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2373:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
2374:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
2375:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2376:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2377:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* UART TX Fifo Empty occurred ----------------------------------------------*/
2378:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
2379:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2380:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2381:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call registered Tx Fifo Empty Callback */
2382:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxFifoEmptyCallback(huart);
2383:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2384:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call legacy weak Tx Fifo Empty Callback */
2385:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UARTEx_TxFifoEmptyCallback(huart);
2386:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2387:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
2388:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2389:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2390:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* UART RX Fifo Full occurred ----------------------------------------------*/
2391:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
2392:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2393:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2394:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call registered Rx Fifo Full Callback */
2395:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxFifoFullCallback(huart);
2396:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2397:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call legacy weak Rx Fifo Full Callback */
2398:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UARTEx_RxFifoFullCallback(huart);
2399:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2400:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
2401:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2402:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2403:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2404:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2405:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2406:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
2407:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2408:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2409:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2410:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2411:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2412:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2413:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2414:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2415:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2416:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2417:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2418:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2419:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2420:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2421:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2422:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2423:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2424:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2425:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2426:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2427:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
ARM GAS  /tmp/ccmyImrL.s 			page 44


2428:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2429:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2430:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2431:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2432:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2433:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2434:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2435:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2436:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2437:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2438:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2439:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2440:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2441:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2442:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2443:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2444:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2445:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2446:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2447:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2448:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2449:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2450:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2451:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2452:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2453:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2454:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2455:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2456:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2457:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2458:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2459:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2460:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2461:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2462:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2463:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2464:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2465:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  UART error callback.
2466:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2467:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2468:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2469:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2470:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2471:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2472:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2473:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2474:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2475:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2476:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2477:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2478:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2479:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2480:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2481:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2482:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2483:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2484:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
ARM GAS  /tmp/ccmyImrL.s 			page 45


2485:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2486:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2487:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2488:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2489:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2490:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2491:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2492:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2493:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2494:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2495:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2496:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2497:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2498:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2499:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2500:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2501:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2502:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2503:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2504:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2505:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2506:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2507:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2508:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2509:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2510:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2511:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2512:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2513:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2514:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2515:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2516:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2517:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2518:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2519:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2520:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2521:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2522:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2523:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2524:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2525:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
2526:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2527:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2528:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2529:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  @brief   UART control functions
2530:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
2531:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @verbatim
2532:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
2533:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2534:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
2535:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
2536:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2537:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_UART_ReceiverTimeout_Config() API allows to configure the receiver timeout value on th
2538:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_UART_EnableReceiverTimeout() API enables the receiver timeout feature
2539:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_UART_DisableReceiverTimeout() API disables the receiver timeout feature
2540:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2541:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
ARM GAS  /tmp/ccmyImrL.s 			page 46


2542:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2543:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2544:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2545:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2546:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2547:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2548:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2549:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @endverbatim
2550:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
2551:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2552:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2553:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2554:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Update on the fly the receiver timeout value in RTOR register.
2555:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2556:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2557:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  TimeoutValue receiver timeout value in number of baud blocks. The timeout
2558:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *                     value must be less or equal to 0x0FFFFFFFF.
2559:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2560:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2561:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** void HAL_UART_ReceiverTimeout_Config(UART_HandleTypeDef *huart, uint32_t TimeoutValue)
2562:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2563:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
2564:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2565:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_RECEIVER_TIMEOUT_VALUE(TimeoutValue));
2566:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->RTOR, USART_RTOR_RTO, TimeoutValue);
2567:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2568:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2569:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2570:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2571:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Enable the UART receiver timeout feature.
2572:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2573:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2574:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2575:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2576:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_EnableReceiverTimeout(UART_HandleTypeDef *huart)
2577:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2578:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
2579:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2580:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
2581:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2582:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Process Locked */
2583:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_LOCK(huart);
2584:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2585:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
2586:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2587:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the USART RTOEN bit */
2588:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
2589:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2590:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2591:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2592:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Process Unlocked */
2593:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UNLOCK(huart);
2594:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2595:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_OK;
2596:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2597:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
2598:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
ARM GAS  /tmp/ccmyImrL.s 			page 47


2599:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_BUSY;
2600:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2601:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2602:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
2603:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2604:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
2605:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2606:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2607:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2608:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2609:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Disable the UART receiver timeout feature.
2610:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2611:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2612:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2613:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2614:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DisableReceiverTimeout(UART_HandleTypeDef *huart)
2615:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2616:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
2617:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2618:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
2619:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2620:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Process Locked */
2621:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_LOCK(huart);
2622:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2623:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
2624:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2625:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Clear the USART RTOEN bit */
2626:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
2627:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2628:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2629:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2630:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Process Unlocked */
2631:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UNLOCK(huart);
2632:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2633:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_OK;
2634:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2635:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
2636:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2637:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_BUSY;
2638:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2639:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2640:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
2641:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2642:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
2643:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2644:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2645:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2646:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2647:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2648:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2649:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2650:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2651:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2652:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2653:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2654:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
2655:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  /tmp/ccmyImrL.s 			page 48


2656:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2657:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2658:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2659:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
2660:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2661:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2662:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2663:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2664:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2665:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2666:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2667:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2668:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
2669:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2670:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2671:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2672:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2673:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2674:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
2675:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2676:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2677:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2678:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2679:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
2680:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2681:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2682:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2683:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2684:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2685:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2686:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2687:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2688:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2689:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
2690:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2691:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2692:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2693:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2694:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
2695:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2696:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2697:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2698:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2699:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2700:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2701:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2702:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2703:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2704:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
2705:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2706:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2707:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear TE and RE bits */
2708:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2709:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2710:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2711:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
2712:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  /tmp/ccmyImrL.s 			page 49


2713:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2714:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2715:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2716:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2717:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
2718:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2719:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2720:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2721:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2722:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2723:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status.
2724:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2725:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2726:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2727:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
2728:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2729:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2730:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear TE and RE bits */
2731:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2732:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2733:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2734:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
2735:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2736:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2737:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2738:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2739:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2740:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
2741:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2742:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2743:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2744:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2745:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Transmit break characters.
2746:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2747:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2748:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2749:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2750:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2751:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the parameters */
2752:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2753:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2754:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
2755:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2756:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2757:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2758:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Send break characters */
2759:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
2760:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2761:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2762:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2763:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2764:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2765:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
2766:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2767:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2768:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2769:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
ARM GAS  /tmp/ccmyImrL.s 			page 50


2770:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2771:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2772:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2773:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  @brief   UART Peripheral State functions
2774:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
2775:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @verbatim
2776:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ==============================================================================
2777:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2778:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ==============================================================================
2779:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
2780:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This subsection provides functions allowing to :
2781:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (+) Return the UART handle state.
2782:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (+) Return the UART handle error code
2783:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2784:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @endverbatim
2785:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
2786:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2787:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2788:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2789:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Return the UART handle state.
2790:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2791:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *               the configuration information for the specified UART.
2792:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL state
2793:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2794:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2795:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2796:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t temp1;
2797:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t temp2;
2798:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   temp1 = huart->gState;
2799:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   temp2 = huart->RxState;
2800:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2801:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2802:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2803:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2804:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2805:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2806:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2807:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *               the configuration information for the specified UART.
2808:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval UART Error Code
2809:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2810:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2811:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2812:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return huart->ErrorCode;
2813:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2814:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2815:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
2816:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2817:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2818:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2819:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
2820:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2821:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2822:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2823:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
2824:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2825:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2826:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
ARM GAS  /tmp/ccmyImrL.s 			page 51


2827:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2828:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2829:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval none
2830:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2831:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2832:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2833:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2834:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Init the UART Callback settings */
2835:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2836:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2837:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2838:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2839:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2840:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2841:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2842:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2843:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
2844:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxFifoFullCallback        = HAL_UARTEx_RxFifoFullCallback;      /* Legacy weak RxFifoFullC
2845:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxFifoEmptyCallback       = HAL_UARTEx_TxFifoEmptyCallback;     /* Legacy weak TxFifoEmpty
2846:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2847:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2848:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2849:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2850:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2851:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2852:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
2853:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2854:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2855:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2856:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2857:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t tmpreg;
2858:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t brrtemp;
2859:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource;
2860:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t usartdiv                   = 0x00000000U;
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2862:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
2863:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   PLL2_ClocksTypeDef pll2_clocks;
2864:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   PLL3_ClocksTypeDef pll3_clocks;
2865:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t pclk;
2866:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2867:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the parameters */
2868:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2869:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2870:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
2871:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2872:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
2873:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2874:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
2875:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2876:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2877:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2878:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2879:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2880:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2881:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2882:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2883:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
ARM GAS  /tmp/ccmyImrL.s 			page 52


2884:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
2885:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2886:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2887:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2888:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
2889:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
2890:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
2891:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
2892:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
2893:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
2894:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->FifoMode;
2895:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
2896:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2897:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2898:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2899:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * to huart->Init.StopBits value */
2900:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
2901:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2902:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2903:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Configure
2904:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
2905:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
2906:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
2907:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
2908:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
2909:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2910:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
2911:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2912:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     tmpreg |= huart->Init.OneBitSampling;
2913:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2914:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
2915:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2916:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*-------------------------- USART PRESC Configuration -----------------------*/
2917:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Configure
2918:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
2919:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
2920:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2921:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
2923:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2924:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check LPUART instance */
2925:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
2926:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2927:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Retrieve frequency clock */
2928:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (clocksource)
2929:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2930:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_D3PCLK1:
2931:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         lpuart_ker_ck_pres = (HAL_RCCEx_GetD3PCLK1Freq() / UART_GET_DIV_FACTOR(huart->Init.ClockPre
2932:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
2933:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL2:
2934:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
2935:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         lpuart_ker_ck_pres = (pll2_clocks.PLL2_Q_Frequency / UART_GET_DIV_FACTOR(huart->Init.ClockP
2936:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
2937:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL3:
2938:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
2939:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         lpuart_ker_ck_pres = (pll3_clocks.PLL3_Q_Frequency / UART_GET_DIV_FACTOR(huart->Init.ClockP
2940:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
ARM GAS  /tmp/ccmyImrL.s 			page 53


2941:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2942:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
2943:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
2944:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           lpuart_ker_ck_pres = ((uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U)) / UART
2945:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
2946:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         else
2947:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
2948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           lpuart_ker_ck_pres = ((uint32_t) HSI_VALUE / UART_GET_DIV_FACTOR(huart->Init.ClockPrescal
2949:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
2950:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
2951:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_CSI:
2952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         lpuart_ker_ck_pres = ((uint32_t)CSI_VALUE / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler)
2953:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
2954:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         lpuart_ker_ck_pres = ((uint32_t)LSE_VALUE / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler)
2956:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
2957:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default:
2958:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
2959:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
2960:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2961:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2962:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* if proper clock source reported */
2963:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (lpuart_ker_ck_pres != 0U)
2964:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2965:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
2966:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
2967:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
2968:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2969:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
2970:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2971:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
2972:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2973:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         switch (clocksource)
2974:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
2975:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           case UART_CLOCKSOURCE_D3PCLK1:
2976:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             pclk = HAL_RCCEx_GetD3PCLK1Freq();
2977:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPres
2978:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
2979:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           case UART_CLOCKSOURCE_PLL2:
2980:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
2981:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(pll2_clocks.PLL2_Q_Frequency, huart->Init.BaudRat
2982:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
2983:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           case UART_CLOCKSOURCE_PLL3:
2984:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
2985:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(pll3_clocks.PLL3_Q_Frequency, huart->Init.BaudRat
2986:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
2987:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           case UART_CLOCKSOURCE_HSI:
2988:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
2989:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             {
2990:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****               usartdiv = (uint32_t)(UART_DIV_LPUART((uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVI
2991:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
2992:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             else
2993:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             {
2994:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****               usartdiv = (uint32_t)(UART_DIV_LPUART(HSI_VALUE, huart->Init.BaudRate, huart->Init.Cl
2995:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
2996:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
2997:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           case UART_CLOCKSOURCE_CSI:
ARM GAS  /tmp/ccmyImrL.s 			page 54


2998:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(CSI_VALUE, huart->Init.BaudRate, huart->Init.Cloc
2999:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
3000:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           case UART_CLOCKSOURCE_LSE:
3001:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate, huart->Init.Cloc
3002:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
3003:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           default:
3004:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             ret = HAL_ERROR;
3005:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
3006:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3007:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3008:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* It is forbidden to write values lower than 0x300 in the LPUART_BRR register */
3009:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
3010:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3011:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
3012:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3013:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         else
3014:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3015:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           ret = HAL_ERROR;
3016:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3017:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       } /*   if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) || (lpuart_ker_ck_pres > (4096
3018:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     } /* if (lpuart_ker_ck_pres != 0) */
3019:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3020:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
3021:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
3022:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3023:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (clocksource)
3024:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3025:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_D2PCLK1:
3026:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
3027:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPresc
3028:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3029:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_D2PCLK2:
3030:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
3031:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPresc
3032:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3033:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL2:
3034:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
3035:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pll2_clocks.PLL2_Q_Frequency, huart->Init.BaudRate
3036:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3037:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL3:
3038:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
3039:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pll3_clocks.PLL3_Q_Frequency, huart->Init.BaudRate
3040:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3041:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3042:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
3043:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3044:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           usartdiv = (uint16_t)(UART_DIV_SAMPLING8((HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U
3045:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3046:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         else
3047:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3048:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate, huart->Init.Clo
3049:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3050:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3051:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_CSI:
3052:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(CSI_VALUE, huart->Init.BaudRate, huart->Init.Clock
3053:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3054:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
ARM GAS  /tmp/ccmyImrL.s 			page 55


3055:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8((uint32_t)LSE_VALUE, huart->Init.BaudRate, huart->
3056:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3057:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default:
3058:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
3059:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3060:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3061:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3062:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3063:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
3064:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3065:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
3066:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
3067:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
3068:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3069:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
3070:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3071:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       ret = HAL_ERROR;
3072:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3073:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3074:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
3075:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3076:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (clocksource)
3077:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3078:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_D2PCLK1:
3079:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
3080:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPres
3081:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3082:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_D2PCLK2:
3083:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
3084:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPres
3085:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3086:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL2:
3087:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
3088:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pll2_clocks.PLL2_Q_Frequency, huart->Init.BaudRat
3089:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3090:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL3:
3091:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
3092:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pll3_clocks.PLL3_Q_Frequency, huart->Init.BaudRat
3093:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3094:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3095:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
3096:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3097:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           usartdiv = (uint16_t)(UART_DIV_SAMPLING16((HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3
3098:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3099:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         else
3100:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate, huart->Init.Cl
3102:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3103:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3104:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_CSI:
3105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(CSI_VALUE, huart->Init.BaudRate, huart->Init.Cloc
3106:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3107:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3108:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16((uint32_t)LSE_VALUE, huart->Init.BaudRate, huart-
3109:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3110:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default:
3111:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
ARM GAS  /tmp/ccmyImrL.s 			page 56


3112:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3113:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3114:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3115:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3116:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
3117:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3118:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->Instance->BRR = usartdiv;
3119:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3120:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
3121:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3122:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       ret = HAL_ERROR;
3123:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3124:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3125:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3126:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Initialize the number of data to process during RX/TX ISR execution */
3127:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->NbTxDataToProcess = 1;
3128:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
3129:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3130:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear ISR function pointers */
3131:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxISR = NULL;
3132:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxISR = NULL;
3133:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3134:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return ret;
3135:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3136:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3137:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3138:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
3139:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
3140:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3141:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3142:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
3143:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
3144:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
3145:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
3146:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3147:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
3148:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
3149:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3150:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
3151:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
3152:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3153:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3154:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
3155:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
3156:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3157:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
3158:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
3159:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3160:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3161:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure data inversion */
3162:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
3163:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3164:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
3165:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
3166:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3167:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3168:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
ARM GAS  /tmp/ccmyImrL.s 			page 57


3169:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
3170:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3171:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
3172:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
3173:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3174:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3175:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3176:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
3177:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3178:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
3179:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
3180:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3181:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3182:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3183:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
3184:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3185:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
3186:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
3187:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3188:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3189:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3190:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
3191:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3192:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
3193:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
3194:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
3195:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
3196:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
3197:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3198:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
3199:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
3200:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3201:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3202:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3203:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3204:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
3205:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3206:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
3207:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
3208:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3209:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3210:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3211:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3212:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Check the UART Idle State.
3213:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
3214:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
3215:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3216:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3217:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
3218:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t tickstart;
3219:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3220:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
3221:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3222:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3223:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
3224:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   tickstart = HAL_GetTick();
3225:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  /tmp/ccmyImrL.s 			page 58


3226:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
3227:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
3228:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3229:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3230:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3231:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3232:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Timeout occurred */
3233:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_TIMEOUT;
3234:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3235:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3236:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3237:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3238:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
3239:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3240:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Wait until REACK flag is set */
3241:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3242:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3243:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Timeout occurred */
3244:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_TIMEOUT;
3245:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3246:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3247:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3248:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Initialize the UART State */
3249:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3250:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3251:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3252:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3253:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3254:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
3255:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3256:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3257:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3258:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
3259:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart     UART handle.
3260:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3261:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Status    Flag status (SET or RESET)
3262:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Tickstart Tick start value
3263:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Timeout   Timeout duration
3264:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
3265:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3266:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3267:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                               uint32_t Tickstart, uint32_t Timeout)
3268:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
3269:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Wait until flag is set */
3270:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
3271:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3272:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Check for the Timeout */
3273:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
3274:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3275:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
3276:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3277:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
3278:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEI
3279:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3280:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3281:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
3282:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccmyImrL.s 			page 59


3283:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3284:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         __HAL_UNLOCK(huart);
3285:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3286:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         return HAL_TIMEOUT;
3287:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3288:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3289:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
3290:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3291:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
3292:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3293:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Clear Receiver Timeout flag*/
3294:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
3295:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           
3296:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for
3297:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TX
3298:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3299:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3300:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->gState = HAL_UART_STATE_READY;
3301:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
3302:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
3303:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           
3304:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Process Unlocked */
3305:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           __HAL_UNLOCK(huart);
3306:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           
3307:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
3308:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3309:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3310:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3311:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3312:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
3313:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3314:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3315:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3316:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3317:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3318:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
3319:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3320:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3321:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3322:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
  26              		.loc 1 3322 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
3323:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable TXEIE, TCIE, TXFT interrupts */
3324:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
  32              		.loc 1 3324 0
  33 0000 0268     		ldr	r2, [r0]
  34 0002 1368     		ldr	r3, [r2]
  35 0004 23F0C003 		bic	r3, r3, #192
  36 0008 1360     		str	r3, [r2]
3325:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_TXFTIE));
  37              		.loc 1 3325 0
  38 000a 0268     		ldr	r2, [r0]
  39 000c 9368     		ldr	r3, [r2, #8]
ARM GAS  /tmp/ccmyImrL.s 			page 60


  40 000e 23F40003 		bic	r3, r3, #8388608
  41 0012 9360     		str	r3, [r2, #8]
3326:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3327:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3328:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  42              		.loc 1 3328 0
  43 0014 2023     		movs	r3, #32
  44 0016 C0F88030 		str	r3, [r0, #128]
  45 001a 7047     		bx	lr
  46              		.cfi_endproc
  47              	.LFE187:
  49              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  50              		.align	1
  51              		.syntax unified
  52              		.thumb
  53              		.thumb_func
  54              		.fpu fpv5-d16
  56              	UART_EndRxTransfer:
  57              	.LFB188:
3329:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3330:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3331:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3332:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3333:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3334:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
3335:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3336:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3337:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3338:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
  58              		.loc 1 3338 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  63              	.LVL1:
3339:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3340:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
  64              		.loc 1 3340 0
  65 0000 0268     		ldr	r2, [r0]
  66 0002 1368     		ldr	r3, [r2]
  67 0004 23F49073 		bic	r3, r3, #288
  68 0008 1360     		str	r3, [r2]
3341:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
  69              		.loc 1 3341 0
  70 000a 0268     		ldr	r2, [r0]
  71 000c 9168     		ldr	r1, [r2, #8]
  72 000e 044B     		ldr	r3, .L3
  73 0010 0B40     		ands	r3, r3, r1
  74 0012 9360     		str	r3, [r2, #8]
3342:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3343:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3344:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  75              		.loc 1 3344 0
  76 0014 2023     		movs	r3, #32
  77 0016 C0F88430 		str	r3, [r0, #132]
3345:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3346:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset RxIsr function pointer */
ARM GAS  /tmp/ccmyImrL.s 			page 61


3347:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxISR = NULL;
  78              		.loc 1 3347 0
  79 001a 0023     		movs	r3, #0
  80 001c C366     		str	r3, [r0, #108]
  81 001e 7047     		bx	lr
  82              	.L4:
  83              		.align	2
  84              	.L3:
  85 0020 FEFFFFEF 		.word	-268435458
  86              		.cfi_endproc
  87              	.LFE188:
  89              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
  90              		.align	1
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  94              		.fpu fpv5-d16
  96              	UART_TxISR_8BIT:
  97              	.LFB199:
3348:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3349:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3350:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3351:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3352:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3353:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param hdma DMA handle.
3354:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3355:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3356:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3357:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
3358:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3359:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3360:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DMA Normal mode */
3361:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
3362:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3363:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = 0U;
3364:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3365:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3366:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        in the UART CR3 register */
3367:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
3368:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3369:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3370:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3371:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3372:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DMA Circular mode */
3373:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
3374:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3375:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3376:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3377:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3378:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3379:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3380:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3381:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3382:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3383:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3384:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3385:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
ARM GAS  /tmp/ccmyImrL.s 			page 62


3386:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3387:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param hdma DMA handle.
3388:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3389:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3390:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3391:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
3392:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3393:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3394:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3395:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3396:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3397:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3398:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3399:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
3400:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3401:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3402:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3403:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3404:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3405:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param hdma DMA handle.
3406:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3407:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3408:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3409:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
3410:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3411:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3412:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DMA Normal mode */
3413:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
3414:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3415:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = 0U;
3416:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3417:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3418:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3419:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3420:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3421:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3422:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        in the UART CR3 register */
3423:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3424:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3425:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3426:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
3427:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3428:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3429:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3430:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call registered Rx complete callback*/
3431:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxCpltCallback(huart);
3432:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3433:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call legacy weak Rx complete callback*/
3434:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
3435:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3436:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3437:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3438:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3439:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3440:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param hdma DMA handle.
3441:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3442:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
ARM GAS  /tmp/ccmyImrL.s 			page 63


3443:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3444:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
3445:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3446:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3447:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3448:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call registered Rx Half complete callback*/
3449:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxHalfCpltCallback(huart);
3450:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3451:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call legacy weak Rx Half complete callback*/
3452:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
3453:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3454:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3455:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3456:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3457:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3458:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param hdma DMA handle.
3459:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3460:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3461:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3462:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
3463:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3464:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3465:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
3466:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
3467:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3468:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3469:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
3470:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3471:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3472:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = 0U;
3473:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_EndTxTransfer(huart);
3474:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3475:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3476:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3477:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
3478:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
3479:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3480:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = 0U;
3481:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_EndRxTransfer(huart);
3482:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3483:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3484:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
3485:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3486:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3487:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call registered error callback*/
3488:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCallback(huart);
3489:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3490:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call legacy weak error callback*/
3491:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3492:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3493:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3494:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3495:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3496:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3497:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3498:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  hdma DMA handle.
3499:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
ARM GAS  /tmp/ccmyImrL.s 			page 64


3500:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3501:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3502:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
3503:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3504:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
3505:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
3506:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3507:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3508:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call registered error callback*/
3509:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCallback(huart);
3510:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3511:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call legacy weak error callback*/
3512:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3513:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3514:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3515:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3516:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3517:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3518:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3519:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3520:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3521:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  hdma DMA handle.
3522:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3523:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3524:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3525:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
3526:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3527:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3528:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
3529:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3530:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3531:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->hdmarx != NULL)
3532:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3533:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
3534:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3535:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return;
3536:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3537:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3538:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3539:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3540:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
3541:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
3542:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3543:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset errorCode */
3544:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3545:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3546:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3547:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3548:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3549:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3550:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
3551:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3552:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3553:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3554:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3555:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3556:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccmyImrL.s 			page 65


3557:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3558:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3559:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call user Abort complete callback */
3560:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3561:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call registered Abort complete callback */
3562:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3563:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3564:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3565:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3566:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3567:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3568:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3569:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3570:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3571:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3572:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3573:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3574:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3575:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  hdma DMA handle.
3576:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3577:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3578:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3579:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
3580:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3581:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3582:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
3583:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3584:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3585:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->hdmatx != NULL)
3586:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3587:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
3588:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3589:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return;
3590:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3591:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3592:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3593:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3594:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
3595:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
3596:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3597:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset errorCode */
3598:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3599:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3600:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3601:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3602:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3603:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Discard the received data */
3604:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3605:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3606:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3607:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3608:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3609:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3610:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call user Abort complete callback */
3611:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3612:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call registered Abort complete callback */
3613:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
ARM GAS  /tmp/ccmyImrL.s 			page 66


3614:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3615:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3616:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3617:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3618:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3619:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3620:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3621:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3622:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3623:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3624:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3625:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3626:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  hdma DMA handle.
3627:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3628:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3629:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3630:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
3631:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3632:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3633:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
3634:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3635:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3636:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
3637:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3638:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3639:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3640:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3641:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3642:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3643:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3644:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call user Abort complete callback */
3645:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3646:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3647:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3648:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3649:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3650:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
3651:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3652:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3653:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3654:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3655:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3656:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3657:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3658:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3659:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  hdma DMA handle.
3660:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3661:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3662:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3663:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
3664:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3665:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3666:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
3667:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3668:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3669:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3670:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  /tmp/ccmyImrL.s 			page 67


3671:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Discard the received data */
3672:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3673:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3674:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3675:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3676:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3677:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call user Abort complete callback */
3678:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3679:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3680:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3681:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3682:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3683:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
3684:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3685:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3686:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3687:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3688:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length .
3689:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3690:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3691:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
3692:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3693:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3694:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
3695:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
  98              		.loc 1 3695 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.LVL2:
3696:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3697:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 104              		.loc 1 3697 0
 105 0000 D0F88030 		ldr	r3, [r0, #128]
 106 0004 212B     		cmp	r3, #33
 107 0006 00D0     		beq	.L8
 108              	.L5:
 109 0008 7047     		bx	lr
 110              	.L8:
3698:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3699:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 111              		.loc 1 3699 0
 112 000a B0F85630 		ldrh	r3, [r0, #86]
 113 000e 9BB2     		uxth	r3, r3
 114 0010 73B1     		cbz	r3, .L9
3700:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3701:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3702:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
3703:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3704:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3705:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3706:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3707:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
3708:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3709:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
 115              		.loc 1 3709 0
ARM GAS  /tmp/ccmyImrL.s 			page 68


 116 0012 0368     		ldr	r3, [r0]
 117 0014 026D     		ldr	r2, [r0, #80]
 118 0016 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 119 0018 9A62     		str	r2, [r3, #40]
3710:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pTxBuffPtr++;
 120              		.loc 1 3710 0
 121 001a 036D     		ldr	r3, [r0, #80]
 122 001c 0133     		adds	r3, r3, #1
 123 001e 0365     		str	r3, [r0, #80]
3711:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxXferCount--;
 124              		.loc 1 3711 0
 125 0020 B0F85630 		ldrh	r3, [r0, #86]
 126 0024 9BB2     		uxth	r3, r3
 127 0026 013B     		subs	r3, r3, #1
 128 0028 9BB2     		uxth	r3, r3
 129 002a A0F85630 		strh	r3, [r0, #86]	@ movhi
3712:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3713:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3714:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 130              		.loc 1 3714 0
 131 002e EBE7     		b	.L5
 132              	.L9:
3702:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 133              		.loc 1 3702 0
 134 0030 0268     		ldr	r2, [r0]
 135 0032 1368     		ldr	r3, [r2]
 136 0034 23F08003 		bic	r3, r3, #128
 137 0038 1360     		str	r3, [r2]
3705:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 138              		.loc 1 3705 0
 139 003a 0268     		ldr	r2, [r0]
 140 003c 1368     		ldr	r3, [r2]
 141 003e 43F04003 		orr	r3, r3, #64
 142 0042 1360     		str	r3, [r2]
 143 0044 7047     		bx	lr
 144              		.cfi_endproc
 145              	.LFE199:
 147              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 148              		.align	1
 149              		.syntax unified
 150              		.thumb
 151              		.thumb_func
 152              		.fpu fpv5-d16
 154              	UART_TxISR_16BIT:
 155              	.LFB200:
3715:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3716:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3717:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length.
3718:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3719:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3720:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
3721:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3722:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3723:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
3724:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 156              		.loc 1 3724 0
 157              		.cfi_startproc
ARM GAS  /tmp/ccmyImrL.s 			page 69


 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              		@ link register save eliminated.
 161              	.LVL3:
3725:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t *tmp;
3726:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3727:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3728:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 162              		.loc 1 3728 0
 163 0000 D0F88030 		ldr	r3, [r0, #128]
 164 0004 212B     		cmp	r3, #33
 165 0006 00D0     		beq	.L13
 166              	.L10:
 167 0008 7047     		bx	lr
 168              	.L13:
3729:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3730:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 169              		.loc 1 3730 0
 170 000a B0F85630 		ldrh	r3, [r0, #86]
 171 000e 9BB2     		uxth	r3, r3
 172 0010 83B1     		cbz	r3, .L14
3731:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3732:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3733:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
3734:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3735:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3736:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3737:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3738:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
3739:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3740:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
 173              		.loc 1 3740 0
 174 0012 036D     		ldr	r3, [r0, #80]
 175              	.LVL4:
3741:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 176              		.loc 1 3741 0
 177 0014 0268     		ldr	r2, [r0]
 178 0016 1B88     		ldrh	r3, [r3]
 179              	.LVL5:
 180 0018 C3F30803 		ubfx	r3, r3, #0, #9
 181 001c 9362     		str	r3, [r2, #40]
 182              	.LVL6:
3742:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 183              		.loc 1 3742 0
 184 001e 036D     		ldr	r3, [r0, #80]
 185 0020 0233     		adds	r3, r3, #2
 186 0022 0365     		str	r3, [r0, #80]
3743:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxXferCount--;
 187              		.loc 1 3743 0
 188 0024 B0F85630 		ldrh	r3, [r0, #86]
 189 0028 9BB2     		uxth	r3, r3
 190 002a 013B     		subs	r3, r3, #1
 191 002c 9BB2     		uxth	r3, r3
 192 002e A0F85630 		strh	r3, [r0, #86]	@ movhi
3744:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3745:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3746:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
ARM GAS  /tmp/ccmyImrL.s 			page 70


 193              		.loc 1 3746 0
 194 0032 E9E7     		b	.L10
 195              	.L14:
3733:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 196              		.loc 1 3733 0
 197 0034 0268     		ldr	r2, [r0]
 198 0036 1368     		ldr	r3, [r2]
 199 0038 23F08003 		bic	r3, r3, #128
 200 003c 1360     		str	r3, [r2]
3736:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 201              		.loc 1 3736 0
 202 003e 0268     		ldr	r2, [r0]
 203 0040 1368     		ldr	r3, [r2]
 204 0042 43F04003 		orr	r3, r3, #64
 205 0046 1360     		str	r3, [r2]
 206 0048 7047     		bx	lr
 207              		.cfi_endproc
 208              	.LFE200:
 210              		.section	.text.UART_TxISR_8BIT_FIFOEN,"ax",%progbits
 211              		.align	1
 212              		.syntax unified
 213              		.thumb
 214              		.thumb_func
 215              		.fpu fpv5-d16
 217              	UART_TxISR_8BIT_FIFOEN:
 218              	.LFB201:
3747:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3748:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3749:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length and FIFO mode is enabled.
3750:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3751:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3752:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
3753:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3754:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3755:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
3756:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 219              		.loc 1 3756 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              		@ link register save eliminated.
 224              	.LVL7:
3757:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  nb_tx_data;
3758:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3759:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3760:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 225              		.loc 1 3760 0
 226 0000 D0F88030 		ldr	r3, [r0, #128]
 227 0004 212B     		cmp	r3, #33
 228 0006 00D0     		beq	.L21
 229              	.L15:
 230 0008 7047     		bx	lr
 231              	.L21:
3761:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3762:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 232              		.loc 1 3762 0
 233 000a B0F86A30 		ldrh	r3, [r0, #106]
ARM GAS  /tmp/ccmyImrL.s 			page 71


 234              	.LVL8:
 235 000e 0CE0     		b	.L17
 236              	.L22:
3763:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3764:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
3765:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3766:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
3767:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 237              		.loc 1 3767 0
 238 0010 0268     		ldr	r2, [r0]
 239 0012 9368     		ldr	r3, [r2, #8]
 240              	.LVL9:
 241 0014 23F40003 		bic	r3, r3, #8388608
 242 0018 9360     		str	r3, [r2, #8]
3768:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3769:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3770:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 243              		.loc 1 3770 0
 244 001a 0268     		ldr	r2, [r0]
 245 001c 1368     		ldr	r3, [r2]
 246 001e 43F04003 		orr	r3, r3, #64
 247 0022 1360     		str	r3, [r2]
3771:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3772:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break; /* force exit loop */
 248              		.loc 1 3772 0
 249 0024 7047     		bx	lr
 250              	.LVL10:
 251              	.L19:
3762:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 252              		.loc 1 3762 0 discriminator 2
 253 0026 013B     		subs	r3, r3, #1
 254              	.LVL11:
 255 0028 9BB2     		uxth	r3, r3
 256              	.LVL12:
 257              	.L17:
3762:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 258              		.loc 1 3762 0 is_stmt 0 discriminator 1
 259 002a 002B     		cmp	r3, #0
 260 002c ECD0     		beq	.L15
3764:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 261              		.loc 1 3764 0 is_stmt 1
 262 002e B0F85620 		ldrh	r2, [r0, #86]
 263 0032 92B2     		uxth	r2, r2
 264 0034 002A     		cmp	r2, #0
 265 0036 EBD0     		beq	.L22
3773:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3774:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
 266              		.loc 1 3774 0
 267 0038 0268     		ldr	r2, [r0]
 268 003a D169     		ldr	r1, [r2, #28]
 269 003c 11F0800F 		tst	r1, #128
 270 0040 F1D0     		beq	.L19
3775:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3776:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
 271              		.loc 1 3776 0
 272 0042 016D     		ldr	r1, [r0, #80]
 273 0044 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
ARM GAS  /tmp/ccmyImrL.s 			page 72


 274 0046 9162     		str	r1, [r2, #40]
3777:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->pTxBuffPtr++;
 275              		.loc 1 3777 0
 276 0048 026D     		ldr	r2, [r0, #80]
 277 004a 0132     		adds	r2, r2, #1
 278 004c 0265     		str	r2, [r0, #80]
3778:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxXferCount--;
 279              		.loc 1 3778 0
 280 004e B0F85620 		ldrh	r2, [r0, #86]
 281 0052 92B2     		uxth	r2, r2
 282 0054 013A     		subs	r2, r2, #1
 283 0056 92B2     		uxth	r2, r2
 284 0058 A0F85620 		strh	r2, [r0, #86]	@ movhi
 285 005c E3E7     		b	.L19
 286              		.cfi_endproc
 287              	.LFE201:
 289              		.section	.text.UART_TxISR_16BIT_FIFOEN,"ax",%progbits
 290              		.align	1
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu fpv5-d16
 296              	UART_TxISR_16BIT_FIFOEN:
 297              	.LFB202:
3779:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3780:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
3781:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3782:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Nothing to do */
3783:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3784:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3785:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3786:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3787:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3788:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3789:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length and FIFO mode is enabled.
3790:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3791:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3792:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
3793:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3794:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3795:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
3796:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 298              		.loc 1 3796 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 303              	.LVL13:
3797:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t *tmp;
3798:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  nb_tx_data;
3799:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3800:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3801:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 304              		.loc 1 3801 0
 305 0000 D0F88030 		ldr	r3, [r0, #128]
 306 0004 212B     		cmp	r3, #33
 307 0006 00D0     		beq	.L29
ARM GAS  /tmp/ccmyImrL.s 			page 73


 308              	.L23:
 309 0008 7047     		bx	lr
 310              	.L29:
3802:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3803:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 311              		.loc 1 3803 0
 312 000a B0F86A30 		ldrh	r3, [r0, #106]
 313              	.LVL14:
 314 000e 0CE0     		b	.L25
 315              	.L30:
3804:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3805:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
3806:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3807:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
3808:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 316              		.loc 1 3808 0
 317 0010 0268     		ldr	r2, [r0]
 318 0012 9368     		ldr	r3, [r2, #8]
 319              	.LVL15:
 320 0014 23F40003 		bic	r3, r3, #8388608
 321 0018 9360     		str	r3, [r2, #8]
3809:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3810:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3811:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 322              		.loc 1 3811 0
 323 001a 0268     		ldr	r2, [r0]
 324 001c 1368     		ldr	r3, [r2]
 325 001e 43F04003 		orr	r3, r3, #64
 326 0022 1360     		str	r3, [r2]
3812:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3813:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break; /* force exit loop */
 327              		.loc 1 3813 0
 328 0024 7047     		bx	lr
 329              	.LVL16:
 330              	.L27:
3803:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 331              		.loc 1 3803 0 discriminator 2
 332 0026 013B     		subs	r3, r3, #1
 333              	.LVL17:
 334 0028 9BB2     		uxth	r3, r3
 335              	.LVL18:
 336              	.L25:
3803:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 337              		.loc 1 3803 0 is_stmt 0 discriminator 1
 338 002a 002B     		cmp	r3, #0
 339 002c ECD0     		beq	.L23
3805:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 340              		.loc 1 3805 0 is_stmt 1
 341 002e B0F85620 		ldrh	r2, [r0, #86]
 342 0032 92B2     		uxth	r2, r2
 343 0034 002A     		cmp	r2, #0
 344 0036 EBD0     		beq	.L30
3814:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3815:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
 345              		.loc 1 3815 0
 346 0038 0268     		ldr	r2, [r0]
 347 003a D169     		ldr	r1, [r2, #28]
ARM GAS  /tmp/ccmyImrL.s 			page 74


 348 003c 11F0800F 		tst	r1, #128
 349 0040 F1D0     		beq	.L27
3816:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3817:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         tmp = (uint16_t *) huart->pTxBuffPtr;
 350              		.loc 1 3817 0
 351 0042 016D     		ldr	r1, [r0, #80]
 352              	.LVL19:
3818:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 353              		.loc 1 3818 0
 354 0044 0988     		ldrh	r1, [r1]
 355              	.LVL20:
 356 0046 C1F30801 		ubfx	r1, r1, #0, #9
 357 004a 9162     		str	r1, [r2, #40]
 358              	.LVL21:
3819:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 359              		.loc 1 3819 0
 360 004c 026D     		ldr	r2, [r0, #80]
 361 004e 0232     		adds	r2, r2, #2
 362 0050 0265     		str	r2, [r0, #80]
3820:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxXferCount--;
 363              		.loc 1 3820 0
 364 0052 B0F85620 		ldrh	r2, [r0, #86]
 365 0056 92B2     		uxth	r2, r2
 366 0058 013A     		subs	r2, r2, #1
 367 005a 92B2     		uxth	r2, r2
 368 005c A0F85620 		strh	r2, [r0, #86]	@ movhi
 369 0060 E1E7     		b	.L27
 370              		.cfi_endproc
 371              	.LFE202:
 373              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 374              		.align	1
 375              		.weak	HAL_UART_MspInit
 376              		.syntax unified
 377              		.thumb
 378              		.thumb_func
 379              		.fpu fpv5-d16
 381              	HAL_UART_MspInit:
 382              	.LFB146:
 658:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 383              		.loc 1 658 0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 0
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387              		@ link register save eliminated.
 388              	.LVL22:
 389 0000 7047     		bx	lr
 390              		.cfi_endproc
 391              	.LFE146:
 393              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 394              		.align	1
 395              		.weak	HAL_UART_MspDeInit
 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 399              		.fpu fpv5-d16
 401              	HAL_UART_MspDeInit:
 402              	.LFB147:
ARM GAS  /tmp/ccmyImrL.s 			page 75


 673:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 403              		.loc 1 673 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              		@ link register save eliminated.
 408              	.LVL23:
 409 0000 7047     		bx	lr
 410              		.cfi_endproc
 411              	.LFE147:
 413              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 414              		.align	1
 415              		.global	HAL_UART_DeInit
 416              		.syntax unified
 417              		.thumb
 418              		.thumb_func
 419              		.fpu fpv5-d16
 421              	HAL_UART_DeInit:
 422              	.LFB145:
 613:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 423              		.loc 1 613 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              	.LVL24:
 615:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 428              		.loc 1 615 0
 429 0000 E0B1     		cbz	r0, .L35
 613:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 430              		.loc 1 613 0
 431 0002 38B5     		push	{r3, r4, r5, lr}
 432              	.LCFI0:
 433              		.cfi_def_cfa_offset 16
 434              		.cfi_offset 3, -16
 435              		.cfi_offset 4, -12
 436              		.cfi_offset 5, -8
 437              		.cfi_offset 14, -4
 438 0004 0446     		mov	r4, r0
 623:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 439              		.loc 1 623 0
 440 0006 2423     		movs	r3, #36
 441 0008 C0F88030 		str	r3, [r0, #128]
 625:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 442              		.loc 1 625 0
 443 000c 0268     		ldr	r2, [r0]
 444 000e 1368     		ldr	r3, [r2]
 445 0010 23F00103 		bic	r3, r3, #1
 446 0014 1360     		str	r3, [r2]
 627:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 447              		.loc 1 627 0
 448 0016 0368     		ldr	r3, [r0]
 449 0018 0025     		movs	r5, #0
 450 001a 1D60     		str	r5, [r3]
 628:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 451              		.loc 1 628 0
 452 001c 0368     		ldr	r3, [r0]
 453 001e 5D60     		str	r5, [r3, #4]
ARM GAS  /tmp/ccmyImrL.s 			page 76


 629:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 454              		.loc 1 629 0
 455 0020 0368     		ldr	r3, [r0]
 456 0022 9D60     		str	r5, [r3, #8]
 640:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 457              		.loc 1 640 0
 458 0024 FFF7FEFF 		bl	HAL_UART_MspDeInit
 459              	.LVL25:
 643:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 460              		.loc 1 643 0
 461 0028 C4F88850 		str	r5, [r4, #136]
 644:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 462              		.loc 1 644 0
 463 002c C4F88050 		str	r5, [r4, #128]
 645:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 464              		.loc 1 645 0
 465 0030 C4F88450 		str	r5, [r4, #132]
 647:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 466              		.loc 1 647 0
 467 0034 84F87C50 		strb	r5, [r4, #124]
 649:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 468              		.loc 1 649 0
 469 0038 2846     		mov	r0, r5
 470 003a 38BD     		pop	{r3, r4, r5, pc}
 471              	.LVL26:
 472              	.L35:
 473              	.LCFI1:
 474              		.cfi_def_cfa_offset 0
 475              		.cfi_restore 3
 476              		.cfi_restore 4
 477              		.cfi_restore 5
 478              		.cfi_restore 14
 617:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 479              		.loc 1 617 0
 480 003c 0120     		movs	r0, #1
 481              	.LVL27:
 482 003e 7047     		bx	lr
 483              		.cfi_endproc
 484              	.LFE145:
 486              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 487              		.align	1
 488              		.global	HAL_UART_Transmit_IT
 489              		.syntax unified
 490              		.thumb
 491              		.thumb_func
 492              		.fpu fpv5-d16
 494              	HAL_UART_Transmit_IT:
 495              	.LFB150:
1206:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 496              		.loc 1 1206 0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 0
 499              		@ frame_needed = 0, uses_anonymous_args = 0
 500              		@ link register save eliminated.
 501              	.LVL28:
1208:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 502              		.loc 1 1208 0
ARM GAS  /tmp/ccmyImrL.s 			page 77


 503 0000 D0F88030 		ldr	r3, [r0, #128]
 504 0004 202B     		cmp	r3, #32
 505 0006 01D0     		beq	.L50
1265:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 506              		.loc 1 1265 0
 507 0008 0220     		movs	r0, #2
 508              	.LVL29:
 509 000a 7047     		bx	lr
 510              	.LVL30:
 511              	.L50:
1210:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 512              		.loc 1 1210 0
 513 000c 002A     		cmp	r2, #0
 514 000e 18BF     		it	ne
 515 0010 0029     		cmpne	r1, #0
 516 0012 42D0     		beq	.L48
1215:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 517              		.loc 1 1215 0
 518 0014 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 519 0018 012B     		cmp	r3, #1
 520 001a 40D0     		beq	.L49
1215:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 521              		.loc 1 1215 0 is_stmt 0 discriminator 2
 522 001c 0123     		movs	r3, #1
 523 001e 80F87C30 		strb	r3, [r0, #124]
1217:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferSize  = Size;
 524              		.loc 1 1217 0 is_stmt 1 discriminator 2
 525 0022 0165     		str	r1, [r0, #80]
1218:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = Size;
 526              		.loc 1 1218 0 discriminator 2
 527 0024 A0F85420 		strh	r2, [r0, #84]	@ movhi
1219:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxISR       = NULL;
 528              		.loc 1 1219 0 discriminator 2
 529 0028 A0F85620 		strh	r2, [r0, #86]	@ movhi
1220:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 530              		.loc 1 1220 0 discriminator 2
 531 002c 0023     		movs	r3, #0
 532 002e 0367     		str	r3, [r0, #112]
1222:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 533              		.loc 1 1222 0 discriminator 2
 534 0030 C0F88830 		str	r3, [r0, #136]
1223:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 535              		.loc 1 1223 0 discriminator 2
 536 0034 2123     		movs	r3, #33
 537 0036 C0F88030 		str	r3, [r0, #128]
1226:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 538              		.loc 1 1226 0 discriminator 2
 539 003a 436E     		ldr	r3, [r0, #100]
 540 003c B3F1005F 		cmp	r3, #536870912
 541 0040 0FD0     		beq	.L51
1246:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 542              		.loc 1 1246 0
 543 0042 8368     		ldr	r3, [r0, #8]
 544 0044 B3F5805F 		cmp	r3, #4096
 545 0048 21D0     		beq	.L52
 546              	.L45:
1252:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
ARM GAS  /tmp/ccmyImrL.s 			page 78


 547              		.loc 1 1252 0
 548 004a 164B     		ldr	r3, .L54
 549 004c 0367     		str	r3, [r0, #112]
 550              	.L46:
1255:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 551              		.loc 1 1255 0
 552 004e 0023     		movs	r3, #0
 553 0050 80F87C30 		strb	r3, [r0, #124]
1258:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 554              		.loc 1 1258 0
 555 0054 0168     		ldr	r1, [r0]
 556              	.LVL31:
 557 0056 0A68     		ldr	r2, [r1]
 558              	.LVL32:
 559 0058 42F08002 		orr	r2, r2, #128
 560 005c 0A60     		str	r2, [r1]
 561              	.LVL33:
1261:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 562              		.loc 1 1261 0
 563 005e 1846     		mov	r0, r3
 564              	.LVL34:
 565 0060 7047     		bx	lr
 566              	.LVL35:
 567              	.L51:
1229:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 568              		.loc 1 1229 0
 569 0062 8368     		ldr	r3, [r0, #8]
 570 0064 B3F5805F 		cmp	r3, #4096
 571 0068 0BD0     		beq	.L53
 572              	.L43:
1235:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 573              		.loc 1 1235 0
 574 006a 0F4B     		ldr	r3, .L54+4
 575 006c 0367     		str	r3, [r0, #112]
 576              	.L44:
1238:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 577              		.loc 1 1238 0
 578 006e 0023     		movs	r3, #0
 579 0070 80F87C30 		strb	r3, [r0, #124]
1241:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 580              		.loc 1 1241 0
 581 0074 0168     		ldr	r1, [r0]
 582              	.LVL36:
 583 0076 8A68     		ldr	r2, [r1, #8]
 584              	.LVL37:
 585 0078 42F40002 		orr	r2, r2, #8388608
 586 007c 8A60     		str	r2, [r1, #8]
 587              	.LVL38:
1261:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 588              		.loc 1 1261 0
 589 007e 1846     		mov	r0, r3
 590              	.LVL39:
 591 0080 7047     		bx	lr
 592              	.LVL40:
 593              	.L53:
1229:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 594              		.loc 1 1229 0 discriminator 1
ARM GAS  /tmp/ccmyImrL.s 			page 79


 595 0082 0369     		ldr	r3, [r0, #16]
 596 0084 002B     		cmp	r3, #0
 597 0086 F0D1     		bne	.L43
1231:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 598              		.loc 1 1231 0
 599 0088 084B     		ldr	r3, .L54+8
 600 008a 0367     		str	r3, [r0, #112]
 601 008c EFE7     		b	.L44
 602              	.L52:
1246:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 603              		.loc 1 1246 0 discriminator 1
 604 008e 0369     		ldr	r3, [r0, #16]
 605 0090 002B     		cmp	r3, #0
 606 0092 DAD1     		bne	.L45
1248:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 607              		.loc 1 1248 0
 608 0094 064B     		ldr	r3, .L54+12
 609 0096 0367     		str	r3, [r0, #112]
 610 0098 D9E7     		b	.L46
 611              	.L48:
1212:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 612              		.loc 1 1212 0
 613 009a 0120     		movs	r0, #1
 614              	.LVL41:
 615 009c 7047     		bx	lr
 616              	.LVL42:
 617              	.L49:
1215:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 618              		.loc 1 1215 0
 619 009e 0220     		movs	r0, #2
 620              	.LVL43:
1267:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 621              		.loc 1 1267 0
 622 00a0 7047     		bx	lr
 623              	.L55:
 624 00a2 00BF     		.align	2
 625              	.L54:
 626 00a4 00000000 		.word	UART_TxISR_8BIT
 627 00a8 00000000 		.word	UART_TxISR_8BIT_FIFOEN
 628 00ac 00000000 		.word	UART_TxISR_16BIT_FIFOEN
 629 00b0 00000000 		.word	UART_TxISR_16BIT
 630              		.cfi_endproc
 631              	.LFE150:
 633              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 634              		.align	1
 635              		.global	HAL_UART_Receive_IT
 636              		.syntax unified
 637              		.thumb
 638              		.thumb_func
 639              		.fpu fpv5-d16
 641              	HAL_UART_Receive_IT:
 642              	.LFB151:
1280:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 643              		.loc 1 1280 0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccmyImrL.s 			page 80


 647              		@ link register save eliminated.
 648              	.LVL44:
1282:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 649              		.loc 1 1282 0
 650 0000 D0F88430 		ldr	r3, [r0, #132]
 651 0004 202B     		cmp	r3, #32
 652 0006 01D0     		beq	.L73
1346:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 653              		.loc 1 1346 0
 654 0008 0220     		movs	r0, #2
 655              	.LVL45:
 656 000a 7047     		bx	lr
 657              	.LVL46:
 658              	.L73:
1284:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 659              		.loc 1 1284 0
 660 000c 002A     		cmp	r2, #0
 661 000e 18BF     		it	ne
 662 0010 0029     		cmpne	r1, #0
 663 0012 7BD0     		beq	.L71
1289:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 664              		.loc 1 1289 0
 665 0014 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 666 0018 012B     		cmp	r3, #1
 667 001a 79D0     		beq	.L72
1289:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 668              		.loc 1 1289 0 is_stmt 0 discriminator 2
 669 001c 0123     		movs	r3, #1
 670 001e 80F87C30 		strb	r3, [r0, #124]
1291:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferSize  = Size;
 671              		.loc 1 1291 0 is_stmt 1 discriminator 2
 672 0022 8165     		str	r1, [r0, #88]
1292:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = Size;
 673              		.loc 1 1292 0 discriminator 2
 674 0024 A0F85C20 		strh	r2, [r0, #92]	@ movhi
1293:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxISR       = NULL;
 675              		.loc 1 1293 0 discriminator 2
 676 0028 A0F85E20 		strh	r2, [r0, #94]	@ movhi
1294:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 677              		.loc 1 1294 0 discriminator 2
 678 002c 0023     		movs	r3, #0
 679 002e C366     		str	r3, [r0, #108]
1297:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 680              		.loc 1 1297 0 discriminator 2
 681 0030 8368     		ldr	r3, [r0, #8]
 682 0032 B3F5805F 		cmp	r3, #4096
 683 0036 06D0     		beq	.L74
 684 0038 A3B9     		cbnz	r3, .L61
1297:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 685              		.loc 1 1297 0 is_stmt 0 discriminator 5
 686 003a 0369     		ldr	r3, [r0, #16]
 687 003c 73B9     		cbnz	r3, .L62
1297:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 688              		.loc 1 1297 0 discriminator 7
 689 003e FF23     		movs	r3, #255
 690 0040 A0F86030 		strh	r3, [r0, #96]	@ movhi
 691 0044 14E0     		b	.L60
ARM GAS  /tmp/ccmyImrL.s 			page 81


 692              	.L74:
1297:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 693              		.loc 1 1297 0 discriminator 1
 694 0046 0369     		ldr	r3, [r0, #16]
 695 0048 23B9     		cbnz	r3, .L59
1297:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 696              		.loc 1 1297 0 discriminator 3
 697 004a 40F2FF13 		movw	r3, #511
 698 004e A0F86030 		strh	r3, [r0, #96]	@ movhi
 699 0052 0DE0     		b	.L60
 700              	.L59:
1297:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 701              		.loc 1 1297 0 discriminator 4
 702 0054 FF23     		movs	r3, #255
 703 0056 A0F86030 		strh	r3, [r0, #96]	@ movhi
 704 005a 09E0     		b	.L60
 705              	.L62:
1297:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 706              		.loc 1 1297 0 discriminator 8
 707 005c 7F23     		movs	r3, #127
 708 005e A0F86030 		strh	r3, [r0, #96]	@ movhi
 709 0062 05E0     		b	.L60
 710              	.L61:
1297:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 711              		.loc 1 1297 0 discriminator 6
 712 0064 B3F1805F 		cmp	r3, #268435456
 713 0068 21D0     		beq	.L75
1297:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 714              		.loc 1 1297 0 discriminator 10
 715 006a 0023     		movs	r3, #0
 716 006c A0F86030 		strh	r3, [r0, #96]	@ movhi
 717              	.L60:
1299:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 718              		.loc 1 1299 0 is_stmt 1
 719 0070 0023     		movs	r3, #0
 720 0072 C0F88830 		str	r3, [r0, #136]
1300:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 721              		.loc 1 1300 0
 722 0076 2223     		movs	r3, #34
 723 0078 C0F88430 		str	r3, [r0, #132]
1303:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 724              		.loc 1 1303 0
 725 007c 0168     		ldr	r1, [r0]
 726              	.LVL47:
 727 007e 8B68     		ldr	r3, [r1, #8]
 728 0080 43F00103 		orr	r3, r3, #1
 729 0084 8B60     		str	r3, [r1, #8]
 730              	.LVL48:
1306:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 731              		.loc 1 1306 0
 732 0086 436E     		ldr	r3, [r0, #100]
 733 0088 B3F1005F 		cmp	r3, #536870912
 734 008c 19D0     		beq	.L76
 735              	.L65:
1327:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 736              		.loc 1 1327 0
 737 008e 8368     		ldr	r3, [r0, #8]
ARM GAS  /tmp/ccmyImrL.s 			page 82


 738 0090 B3F5805F 		cmp	r3, #4096
 739 0094 34D0     		beq	.L77
 740              	.L68:
1333:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 741              		.loc 1 1333 0
 742 0096 1F4B     		ldr	r3, .L79
 743 0098 C366     		str	r3, [r0, #108]
 744              	.L69:
1336:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 745              		.loc 1 1336 0
 746 009a 0023     		movs	r3, #0
 747 009c 80F87C30 		strb	r3, [r0, #124]
1339:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 748              		.loc 1 1339 0
 749 00a0 0168     		ldr	r1, [r0]
 750 00a2 0A68     		ldr	r2, [r1]
 751              	.LVL49:
 752 00a4 42F49072 		orr	r2, r2, #288
 753 00a8 0A60     		str	r2, [r1]
1342:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 754              		.loc 1 1342 0
 755 00aa 1846     		mov	r0, r3
 756              	.LVL50:
 757 00ac 7047     		bx	lr
 758              	.LVL51:
 759              	.L75:
1297:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 760              		.loc 1 1297 0 discriminator 9
 761 00ae 0369     		ldr	r3, [r0, #16]
 762 00b0 1BB9     		cbnz	r3, .L64
1297:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 763              		.loc 1 1297 0 is_stmt 0 discriminator 11
 764 00b2 7F23     		movs	r3, #127
 765 00b4 A0F86030 		strh	r3, [r0, #96]	@ movhi
 766 00b8 DAE7     		b	.L60
 767              	.L64:
1297:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 768              		.loc 1 1297 0 discriminator 12
 769 00ba 3F23     		movs	r3, #63
 770 00bc A0F86030 		strh	r3, [r0, #96]	@ movhi
 771 00c0 D6E7     		b	.L60
 772              	.LVL52:
 773              	.L76:
1306:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 774              		.loc 1 1306 0 is_stmt 1 discriminator 1
 775 00c2 B0F86830 		ldrh	r3, [r0, #104]
 776 00c6 9A42     		cmp	r2, r3
 777 00c8 E1D3     		bcc	.L65
1309:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 778              		.loc 1 1309 0
 779 00ca 8368     		ldr	r3, [r0, #8]
 780 00cc B3F5805F 		cmp	r3, #4096
 781 00d0 10D0     		beq	.L78
 782              	.L66:
1315:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 783              		.loc 1 1315 0
 784 00d2 114B     		ldr	r3, .L79+4
ARM GAS  /tmp/ccmyImrL.s 			page 83


 785 00d4 C366     		str	r3, [r0, #108]
 786              	.L67:
1318:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 787              		.loc 1 1318 0
 788 00d6 0023     		movs	r3, #0
 789 00d8 80F87C30 		strb	r3, [r0, #124]
1321:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 790              		.loc 1 1321 0
 791 00dc 0168     		ldr	r1, [r0]
 792 00de 0A68     		ldr	r2, [r1]
 793              	.LVL53:
 794 00e0 42F48072 		orr	r2, r2, #256
 795 00e4 0A60     		str	r2, [r1]
1322:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 796              		.loc 1 1322 0
 797 00e6 0168     		ldr	r1, [r0]
 798 00e8 8A68     		ldr	r2, [r1, #8]
 799 00ea 42F08052 		orr	r2, r2, #268435456
 800 00ee 8A60     		str	r2, [r1, #8]
1342:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 801              		.loc 1 1342 0
 802 00f0 1846     		mov	r0, r3
 803              	.LVL54:
1322:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 804              		.loc 1 1322 0
 805 00f2 7047     		bx	lr
 806              	.LVL55:
 807              	.L78:
1309:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 808              		.loc 1 1309 0 discriminator 1
 809 00f4 0369     		ldr	r3, [r0, #16]
 810 00f6 002B     		cmp	r3, #0
 811 00f8 EBD1     		bne	.L66
1311:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 812              		.loc 1 1311 0
 813 00fa 084B     		ldr	r3, .L79+8
 814 00fc C366     		str	r3, [r0, #108]
 815 00fe EAE7     		b	.L67
 816              	.L77:
1327:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 817              		.loc 1 1327 0 discriminator 1
 818 0100 0369     		ldr	r3, [r0, #16]
 819 0102 002B     		cmp	r3, #0
 820 0104 C7D1     		bne	.L68
1329:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 821              		.loc 1 1329 0
 822 0106 064B     		ldr	r3, .L79+12
 823 0108 C366     		str	r3, [r0, #108]
 824 010a C6E7     		b	.L69
 825              	.LVL56:
 826              	.L71:
1286:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 827              		.loc 1 1286 0
 828 010c 0120     		movs	r0, #1
 829              	.LVL57:
 830 010e 7047     		bx	lr
 831              	.LVL58:
ARM GAS  /tmp/ccmyImrL.s 			page 84


 832              	.L72:
1289:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 833              		.loc 1 1289 0
 834 0110 0220     		movs	r0, #2
 835              	.LVL59:
1348:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 836              		.loc 1 1348 0
 837 0112 7047     		bx	lr
 838              	.L80:
 839              		.align	2
 840              	.L79:
 841 0114 00000000 		.word	UART_RxISR_8BIT
 842 0118 00000000 		.word	UART_RxISR_8BIT_FIFOEN
 843 011c 00000000 		.word	UART_RxISR_16BIT_FIFOEN
 844 0120 00000000 		.word	UART_RxISR_16BIT
 845              		.cfi_endproc
 846              	.LFE151:
 848              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 849              		.align	1
 850              		.global	HAL_UART_Transmit_DMA
 851              		.syntax unified
 852              		.thumb
 853              		.thumb_func
 854              		.fpu fpv5-d16
 856              	HAL_UART_Transmit_DMA:
 857              	.LFB152:
1361:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 858              		.loc 1 1361 0
 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 0
 861              		@ frame_needed = 0, uses_anonymous_args = 0
 862              	.LVL60:
 863 0000 10B5     		push	{r4, lr}
 864              	.LCFI2:
 865              		.cfi_def_cfa_offset 8
 866              		.cfi_offset 4, -8
 867              		.cfi_offset 14, -4
1363:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 868              		.loc 1 1363 0
 869 0002 D0F88040 		ldr	r4, [r0, #128]
 870 0006 202C     		cmp	r4, #32
 871 0008 01D0     		beq	.L88
1420:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 872              		.loc 1 1420 0
 873 000a 0220     		movs	r0, #2
 874              	.LVL61:
 875 000c 10BD     		pop	{r4, pc}
 876              	.LVL62:
 877              	.L88:
1365:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 878              		.loc 1 1365 0
 879 000e 002A     		cmp	r2, #0
 880 0010 18BF     		it	ne
 881 0012 0029     		cmpne	r1, #0
 882 0014 3ED0     		beq	.L85
1370:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 883              		.loc 1 1370 0
ARM GAS  /tmp/ccmyImrL.s 			page 85


 884 0016 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 885 001a 012B     		cmp	r3, #1
 886 001c 3CD0     		beq	.L86
 887 001e 1346     		mov	r3, r2
 888 0020 0446     		mov	r4, r0
1370:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 889              		.loc 1 1370 0 is_stmt 0 discriminator 2
 890 0022 0122     		movs	r2, #1
 891              	.LVL63:
 892 0024 80F87C20 		strb	r2, [r0, #124]
1372:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferSize  = Size;
 893              		.loc 1 1372 0 is_stmt 1 discriminator 2
 894 0028 0165     		str	r1, [r0, #80]
1373:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = Size;
 895              		.loc 1 1373 0 discriminator 2
 896 002a A0F85430 		strh	r3, [r0, #84]	@ movhi
1374:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 897              		.loc 1 1374 0 discriminator 2
 898 002e A0F85630 		strh	r3, [r0, #86]	@ movhi
1376:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 899              		.loc 1 1376 0 discriminator 2
 900 0032 0022     		movs	r2, #0
 901 0034 C0F88820 		str	r2, [r0, #136]
1377:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 902              		.loc 1 1377 0 discriminator 2
 903 0038 2122     		movs	r2, #33
 904 003a C0F88020 		str	r2, [r0, #128]
1379:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 905              		.loc 1 1379 0 discriminator 2
 906 003e 426F     		ldr	r2, [r0, #116]
 907 0040 8AB1     		cbz	r2, .L83
1382:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 908              		.loc 1 1382 0
 909 0042 1649     		ldr	r1, .L90
 910              	.LVL64:
 911 0044 D163     		str	r1, [r2, #60]
 912              	.LVL65:
1385:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 913              		.loc 1 1385 0
 914 0046 426F     		ldr	r2, [r0, #116]
 915 0048 1549     		ldr	r1, .L90+4
 916 004a 1164     		str	r1, [r2, #64]
1388:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 917              		.loc 1 1388 0
 918 004c 426F     		ldr	r2, [r0, #116]
 919 004e 1549     		ldr	r1, .L90+8
 920 0050 D164     		str	r1, [r2, #76]
1391:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 921              		.loc 1 1391 0
 922 0052 426F     		ldr	r2, [r0, #116]
 923 0054 0021     		movs	r1, #0
 924 0056 1165     		str	r1, [r2, #80]
1394:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 925              		.loc 1 1394 0
 926 0058 0268     		ldr	r2, [r0]
 927 005a 2832     		adds	r2, r2, #40
 928 005c 016D     		ldr	r1, [r0, #80]
ARM GAS  /tmp/ccmyImrL.s 			page 86


 929 005e 406F     		ldr	r0, [r0, #116]
 930              	.LVL66:
 931 0060 FFF7FEFF 		bl	HAL_DMA_Start_IT
 932              	.LVL67:
 933 0064 58B9     		cbnz	r0, .L89
 934              	.L83:
1408:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 935              		.loc 1 1408 0
 936 0066 2368     		ldr	r3, [r4]
 937 0068 4022     		movs	r2, #64
 938 006a 1A62     		str	r2, [r3, #32]
1410:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 939              		.loc 1 1410 0
 940 006c 0020     		movs	r0, #0
 941 006e 84F87C00 		strb	r0, [r4, #124]
1414:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 942              		.loc 1 1414 0
 943 0072 2268     		ldr	r2, [r4]
 944 0074 9368     		ldr	r3, [r2, #8]
 945 0076 43F08003 		orr	r3, r3, #128
 946 007a 9360     		str	r3, [r2, #8]
1416:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 947              		.loc 1 1416 0
 948 007c 10BD     		pop	{r4, pc}
 949              	.LVL68:
 950              	.L89:
1397:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 951              		.loc 1 1397 0
 952 007e 1023     		movs	r3, #16
 953 0080 C4F88830 		str	r3, [r4, #136]
1399:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 954              		.loc 1 1399 0
 955 0084 0023     		movs	r3, #0
 956 0086 84F87C30 		strb	r3, [r4, #124]
1402:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 957              		.loc 1 1402 0
 958 008a 2023     		movs	r3, #32
 959 008c C4F88030 		str	r3, [r4, #128]
1404:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 960              		.loc 1 1404 0
 961 0090 0120     		movs	r0, #1
 962 0092 10BD     		pop	{r4, pc}
 963              	.LVL69:
 964              	.L85:
1367:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 965              		.loc 1 1367 0
 966 0094 0120     		movs	r0, #1
 967              	.LVL70:
 968 0096 10BD     		pop	{r4, pc}
 969              	.LVL71:
 970              	.L86:
1370:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 971              		.loc 1 1370 0
 972 0098 0220     		movs	r0, #2
 973              	.LVL72:
1422:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 974              		.loc 1 1422 0
ARM GAS  /tmp/ccmyImrL.s 			page 87


 975 009a 10BD     		pop	{r4, pc}
 976              	.L91:
 977              		.align	2
 978              	.L90:
 979 009c 00000000 		.word	UART_DMATransmitCplt
 980 00a0 00000000 		.word	UART_DMATxHalfCplt
 981 00a4 00000000 		.word	UART_DMAError
 982              		.cfi_endproc
 983              	.LFE152:
 985              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 986              		.align	1
 987              		.global	HAL_UART_Receive_DMA
 988              		.syntax unified
 989              		.thumb
 990              		.thumb_func
 991              		.fpu fpv5-d16
 993              	HAL_UART_Receive_DMA:
 994              	.LFB153:
1437:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 995              		.loc 1 1437 0
 996              		.cfi_startproc
 997              		@ args = 0, pretend = 0, frame = 0
 998              		@ frame_needed = 0, uses_anonymous_args = 0
 999              	.LVL73:
 1000 0000 10B5     		push	{r4, lr}
 1001              	.LCFI3:
 1002              		.cfi_def_cfa_offset 8
 1003              		.cfi_offset 4, -8
 1004              		.cfi_offset 14, -4
1439:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1005              		.loc 1 1439 0
 1006 0002 D0F88440 		ldr	r4, [r0, #132]
 1007 0006 202C     		cmp	r4, #32
 1008 0008 01D0     		beq	.L99
1498:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1009              		.loc 1 1498 0
 1010 000a 0220     		movs	r0, #2
 1011              	.LVL74:
 1012 000c 10BD     		pop	{r4, pc}
 1013              	.LVL75:
 1014              	.L99:
1441:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1015              		.loc 1 1441 0
 1016 000e 002A     		cmp	r2, #0
 1017 0010 18BF     		it	ne
 1018 0012 0029     		cmpne	r1, #0
 1019 0014 43D0     		beq	.L96
1446:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1020              		.loc 1 1446 0
 1021 0016 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 1022 001a 012B     		cmp	r3, #1
 1023 001c 41D0     		beq	.L97
 1024 001e 1346     		mov	r3, r2
 1025 0020 0446     		mov	r4, r0
1446:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1026              		.loc 1 1446 0 is_stmt 0 discriminator 2
 1027 0022 0122     		movs	r2, #1
ARM GAS  /tmp/ccmyImrL.s 			page 88


 1028              	.LVL76:
 1029 0024 80F87C20 		strb	r2, [r0, #124]
1448:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferSize = Size;
 1030              		.loc 1 1448 0 is_stmt 1 discriminator 2
 1031 0028 8165     		str	r1, [r0, #88]
1449:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1032              		.loc 1 1449 0 discriminator 2
 1033 002a A0F85C30 		strh	r3, [r0, #92]	@ movhi
1451:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1034              		.loc 1 1451 0 discriminator 2
 1035 002e 0022     		movs	r2, #0
 1036 0030 C0F88820 		str	r2, [r0, #136]
1452:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1037              		.loc 1 1452 0 discriminator 2
 1038 0034 2222     		movs	r2, #34
 1039 0036 C0F88420 		str	r2, [r0, #132]
1454:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1040              		.loc 1 1454 0 discriminator 2
 1041 003a 826F     		ldr	r2, [r0, #120]
 1042 003c 8AB1     		cbz	r2, .L94
1457:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1043              		.loc 1 1457 0
 1044 003e 1A49     		ldr	r1, .L101
 1045              	.LVL77:
 1046 0040 D163     		str	r1, [r2, #60]
 1047              	.LVL78:
1460:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1048              		.loc 1 1460 0
 1049 0042 826F     		ldr	r2, [r0, #120]
 1050 0044 1949     		ldr	r1, .L101+4
 1051 0046 1164     		str	r1, [r2, #64]
1463:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1052              		.loc 1 1463 0
 1053 0048 826F     		ldr	r2, [r0, #120]
 1054 004a 1949     		ldr	r1, .L101+8
 1055 004c D164     		str	r1, [r2, #76]
1466:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1056              		.loc 1 1466 0
 1057 004e 826F     		ldr	r2, [r0, #120]
 1058 0050 0021     		movs	r1, #0
 1059 0052 1165     		str	r1, [r2, #80]
1469:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 1060              		.loc 1 1469 0
 1061 0054 0168     		ldr	r1, [r0]
 1062 0056 826D     		ldr	r2, [r0, #88]
 1063 0058 2431     		adds	r1, r1, #36
 1064 005a 806F     		ldr	r0, [r0, #120]
 1065              	.LVL79:
 1066 005c FFF7FEFF 		bl	HAL_DMA_Start_IT
 1067              	.LVL80:
 1068 0060 90B9     		cbnz	r0, .L100
 1069              	.L94:
1482:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1070              		.loc 1 1482 0
 1071 0062 0020     		movs	r0, #0
 1072 0064 84F87C00 		strb	r0, [r4, #124]
1485:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  /tmp/ccmyImrL.s 			page 89


 1073              		.loc 1 1485 0
 1074 0068 2268     		ldr	r2, [r4]
 1075 006a 1368     		ldr	r3, [r2]
 1076 006c 43F48073 		orr	r3, r3, #256
 1077 0070 1360     		str	r3, [r2]
1488:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1078              		.loc 1 1488 0
 1079 0072 2268     		ldr	r2, [r4]
 1080 0074 9368     		ldr	r3, [r2, #8]
 1081 0076 43F00103 		orr	r3, r3, #1
 1082 007a 9360     		str	r3, [r2, #8]
1492:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1083              		.loc 1 1492 0
 1084 007c 2268     		ldr	r2, [r4]
 1085 007e 9368     		ldr	r3, [r2, #8]
 1086 0080 43F04003 		orr	r3, r3, #64
 1087 0084 9360     		str	r3, [r2, #8]
1494:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1088              		.loc 1 1494 0
 1089 0086 10BD     		pop	{r4, pc}
 1090              	.LVL81:
 1091              	.L100:
1472:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1092              		.loc 1 1472 0
 1093 0088 1023     		movs	r3, #16
 1094 008a C4F88830 		str	r3, [r4, #136]
1474:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1095              		.loc 1 1474 0
 1096 008e 0023     		movs	r3, #0
 1097 0090 84F87C30 		strb	r3, [r4, #124]
1477:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1098              		.loc 1 1477 0
 1099 0094 2023     		movs	r3, #32
 1100 0096 C4F88030 		str	r3, [r4, #128]
1479:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 1101              		.loc 1 1479 0
 1102 009a 0120     		movs	r0, #1
 1103 009c 10BD     		pop	{r4, pc}
 1104              	.LVL82:
 1105              	.L96:
1443:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 1106              		.loc 1 1443 0
 1107 009e 0120     		movs	r0, #1
 1108              	.LVL83:
 1109 00a0 10BD     		pop	{r4, pc}
 1110              	.LVL84:
 1111              	.L97:
1446:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1112              		.loc 1 1446 0
 1113 00a2 0220     		movs	r0, #2
 1114              	.LVL85:
1500:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1115              		.loc 1 1500 0
 1116 00a4 10BD     		pop	{r4, pc}
 1117              	.L102:
 1118 00a6 00BF     		.align	2
 1119              	.L101:
ARM GAS  /tmp/ccmyImrL.s 			page 90


 1120 00a8 00000000 		.word	UART_DMAReceiveCplt
 1121 00ac 00000000 		.word	UART_DMARxHalfCplt
 1122 00b0 00000000 		.word	UART_DMAError
 1123              		.cfi_endproc
 1124              	.LFE153:
 1126              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1127              		.align	1
 1128              		.global	HAL_UART_DMAPause
 1129              		.syntax unified
 1130              		.thumb
 1131              		.thumb_func
 1132              		.fpu fpv5-d16
 1134              	HAL_UART_DMAPause:
 1135              	.LFB154:
1508:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 1136              		.loc 1 1508 0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 0
 1139              		@ frame_needed = 0, uses_anonymous_args = 0
 1140              		@ link register save eliminated.
 1141              	.LVL86:
1509:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1142              		.loc 1 1509 0
 1143 0000 D0F88010 		ldr	r1, [r0, #128]
 1144              	.LVL87:
1510:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1145              		.loc 1 1510 0
 1146 0004 D0F88420 		ldr	r2, [r0, #132]
 1147              	.LVL88:
1512:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1148              		.loc 1 1512 0
 1149 0008 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 1150 000c 012B     		cmp	r3, #1
 1151 000e 2CD0     		beq	.L107
1508:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 1152              		.loc 1 1508 0 discriminator 2
 1153 0010 10B4     		push	{r4}
 1154              	.LCFI4:
 1155              		.cfi_def_cfa_offset 4
 1156              		.cfi_offset 4, -4
1512:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1157              		.loc 1 1512 0 discriminator 2
 1158 0012 0123     		movs	r3, #1
 1159 0014 80F87C30 		strb	r3, [r0, #124]
1514:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1160              		.loc 1 1514 0 discriminator 2
 1161 0018 0368     		ldr	r3, [r0]
 1162 001a 9C68     		ldr	r4, [r3, #8]
 1163 001c 14F0800F 		tst	r4, #128
 1164 0020 01D0     		beq	.L105
1514:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1165              		.loc 1 1514 0 is_stmt 0 discriminator 1
 1166 0022 2129     		cmp	r1, #33
 1167 0024 0DD0     		beq	.L112
 1168              	.LVL89:
 1169              	.L105:
1520:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
ARM GAS  /tmp/ccmyImrL.s 			page 91


 1170              		.loc 1 1520 0 is_stmt 1
 1171 0026 0368     		ldr	r3, [r0]
 1172 0028 9968     		ldr	r1, [r3, #8]
 1173 002a 11F0400F 		tst	r1, #64
 1174 002e 01D0     		beq	.L106
1520:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1175              		.loc 1 1520 0 is_stmt 0 discriminator 1
 1176 0030 222A     		cmp	r2, #34
 1177 0032 0BD0     		beq	.L113
 1178              	.LVL90:
 1179              	.L106:
1531:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1180              		.loc 1 1531 0 is_stmt 1
 1181 0034 0023     		movs	r3, #0
 1182 0036 80F87C30 		strb	r3, [r0, #124]
1533:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 1183              		.loc 1 1533 0
 1184 003a 1846     		mov	r0, r3
 1185              	.LVL91:
1534:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1186              		.loc 1 1534 0
 1187 003c 5DF8044B 		ldr	r4, [sp], #4
 1188              	.LCFI5:
 1189              		.cfi_remember_state
 1190              		.cfi_restore 4
 1191              		.cfi_def_cfa_offset 0
 1192 0040 7047     		bx	lr
 1193              	.LVL92:
 1194              	.L112:
 1195              	.LCFI6:
 1196              		.cfi_restore_state
1518:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1197              		.loc 1 1518 0
 1198 0042 9968     		ldr	r1, [r3, #8]
 1199              	.LVL93:
 1200 0044 21F08001 		bic	r1, r1, #128
 1201 0048 9960     		str	r1, [r3, #8]
 1202 004a ECE7     		b	.L105
 1203              	.L113:
1524:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1204              		.loc 1 1524 0
 1205 004c 1A68     		ldr	r2, [r3]
 1206              	.LVL94:
 1207 004e 22F48072 		bic	r2, r2, #256
 1208 0052 1A60     		str	r2, [r3]
1525:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1209              		.loc 1 1525 0
 1210 0054 0268     		ldr	r2, [r0]
 1211 0056 9368     		ldr	r3, [r2, #8]
 1212 0058 23F00103 		bic	r3, r3, #1
 1213 005c 9360     		str	r3, [r2, #8]
1528:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1214              		.loc 1 1528 0
 1215 005e 0268     		ldr	r2, [r0]
 1216 0060 9368     		ldr	r3, [r2, #8]
 1217 0062 23F04003 		bic	r3, r3, #64
 1218 0066 9360     		str	r3, [r2, #8]
ARM GAS  /tmp/ccmyImrL.s 			page 92


 1219 0068 E4E7     		b	.L106
 1220              	.LVL95:
 1221              	.L107:
 1222              	.LCFI7:
 1223              		.cfi_def_cfa_offset 0
 1224              		.cfi_restore 4
1512:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1225              		.loc 1 1512 0
 1226 006a 0220     		movs	r0, #2
 1227              	.LVL96:
 1228 006c 7047     		bx	lr
 1229              		.cfi_endproc
 1230              	.LFE154:
 1232              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1233              		.align	1
 1234              		.global	HAL_UART_DMAResume
 1235              		.syntax unified
 1236              		.thumb
 1237              		.thumb_func
 1238              		.fpu fpv5-d16
 1240              	HAL_UART_DMAResume:
 1241              	.LFB155:
1542:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 1242              		.loc 1 1542 0
 1243              		.cfi_startproc
 1244              		@ args = 0, pretend = 0, frame = 0
 1245              		@ frame_needed = 0, uses_anonymous_args = 0
 1246              		@ link register save eliminated.
 1247              	.LVL97:
1543:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1248              		.loc 1 1543 0
 1249 0000 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 1250 0004 012B     		cmp	r3, #1
 1251 0006 28D0     		beq	.L118
1543:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1252              		.loc 1 1543 0 is_stmt 0 discriminator 2
 1253 0008 0123     		movs	r3, #1
 1254 000a 80F87C30 		strb	r3, [r0, #124]
1545:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1255              		.loc 1 1545 0 is_stmt 1 discriminator 2
 1256 000e D0F88030 		ldr	r3, [r0, #128]
 1257 0012 212B     		cmp	r3, #33
 1258 0014 08D0     		beq	.L119
 1259              	.L116:
1550:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1260              		.loc 1 1550 0
 1261 0016 D0F88430 		ldr	r3, [r0, #132]
 1262 001a 222B     		cmp	r3, #34
 1263 001c 0AD0     		beq	.L120
 1264              	.L117:
1563:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1265              		.loc 1 1563 0
 1266 001e 0023     		movs	r3, #0
 1267 0020 80F87C30 		strb	r3, [r0, #124]
1565:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 1268              		.loc 1 1565 0
 1269 0024 1846     		mov	r0, r3
ARM GAS  /tmp/ccmyImrL.s 			page 93


 1270              	.LVL98:
 1271 0026 7047     		bx	lr
 1272              	.LVL99:
 1273              	.L119:
1548:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1274              		.loc 1 1548 0
 1275 0028 0268     		ldr	r2, [r0]
 1276 002a 9368     		ldr	r3, [r2, #8]
 1277 002c 43F08003 		orr	r3, r3, #128
 1278 0030 9360     		str	r3, [r2, #8]
 1279 0032 F0E7     		b	.L116
 1280              	.L120:
1553:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1281              		.loc 1 1553 0
 1282 0034 0368     		ldr	r3, [r0]
 1283 0036 0822     		movs	r2, #8
 1284 0038 1A62     		str	r2, [r3, #32]
1556:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1285              		.loc 1 1556 0
 1286 003a 0268     		ldr	r2, [r0]
 1287 003c 1368     		ldr	r3, [r2]
 1288 003e 43F48073 		orr	r3, r3, #256
 1289 0042 1360     		str	r3, [r2]
1557:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1290              		.loc 1 1557 0
 1291 0044 0268     		ldr	r2, [r0]
 1292 0046 9368     		ldr	r3, [r2, #8]
 1293 0048 43F00103 		orr	r3, r3, #1
 1294 004c 9360     		str	r3, [r2, #8]
1560:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1295              		.loc 1 1560 0
 1296 004e 0268     		ldr	r2, [r0]
 1297 0050 9368     		ldr	r3, [r2, #8]
 1298 0052 43F04003 		orr	r3, r3, #64
 1299 0056 9360     		str	r3, [r2, #8]
 1300 0058 E1E7     		b	.L117
 1301              	.L118:
1543:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1302              		.loc 1 1543 0
 1303 005a 0220     		movs	r0, #2
 1304              	.LVL100:
1566:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1305              		.loc 1 1566 0
 1306 005c 7047     		bx	lr
 1307              		.cfi_endproc
 1308              	.LFE155:
 1310              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1311              		.align	1
 1312              		.global	HAL_UART_DMAStop
 1313              		.syntax unified
 1314              		.thumb
 1315              		.thumb_func
 1316              		.fpu fpv5-d16
 1318              	HAL_UART_DMAStop:
 1319              	.LFB156:
1574:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 1320              		.loc 1 1574 0
ARM GAS  /tmp/ccmyImrL.s 			page 94


 1321              		.cfi_startproc
 1322              		@ args = 0, pretend = 0, frame = 0
 1323              		@ frame_needed = 0, uses_anonymous_args = 0
 1324              	.LVL101:
 1325 0000 38B5     		push	{r3, r4, r5, lr}
 1326              	.LCFI8:
 1327              		.cfi_def_cfa_offset 16
 1328              		.cfi_offset 3, -16
 1329              		.cfi_offset 4, -12
 1330              		.cfi_offset 5, -8
 1331              		.cfi_offset 14, -4
 1332 0002 0446     		mov	r4, r0
1582:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1333              		.loc 1 1582 0
 1334 0004 D0F88010 		ldr	r1, [r0, #128]
 1335              	.LVL102:
1583:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1336              		.loc 1 1583 0
 1337 0008 D0F88450 		ldr	r5, [r0, #132]
 1338              	.LVL103:
1586:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1339              		.loc 1 1586 0
 1340 000c 0368     		ldr	r3, [r0]
 1341 000e 9A68     		ldr	r2, [r3, #8]
 1342 0010 12F0800F 		tst	r2, #128
 1343 0014 01D0     		beq	.L122
1586:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1344              		.loc 1 1586 0 is_stmt 0 discriminator 1
 1345 0016 2129     		cmp	r1, #33
 1346 0018 08D0     		beq	.L129
 1347              	.LVL104:
 1348              	.L122:
1610:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1349              		.loc 1 1610 0 is_stmt 1
 1350 001a 2368     		ldr	r3, [r4]
 1351 001c 9A68     		ldr	r2, [r3, #8]
 1352 001e 12F0400F 		tst	r2, #64
 1353 0022 32D0     		beq	.L126
1610:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1354              		.loc 1 1610 0 is_stmt 0 discriminator 1
 1355 0024 222D     		cmp	r5, #34
 1356 0026 18D0     		beq	.L130
1633:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 1357              		.loc 1 1633 0 is_stmt 1
 1358 0028 0020     		movs	r0, #0
1634:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1359              		.loc 1 1634 0
 1360 002a 38BD     		pop	{r3, r4, r5, pc}
 1361              	.LVL105:
 1362              	.L129:
1589:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1363              		.loc 1 1589 0
 1364 002c 9A68     		ldr	r2, [r3, #8]
 1365 002e 22F08002 		bic	r2, r2, #128
 1366 0032 9A60     		str	r2, [r3, #8]
1592:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1367              		.loc 1 1592 0
ARM GAS  /tmp/ccmyImrL.s 			page 95


 1368 0034 406F     		ldr	r0, [r0, #116]
 1369              	.LVL106:
 1370 0036 10B1     		cbz	r0, .L123
1594:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 1371              		.loc 1 1594 0
 1372 0038 FFF7FEFF 		bl	HAL_DMA_Abort
 1373              	.LVL107:
 1374 003c 18B9     		cbnz	r0, .L131
 1375              	.L123:
1606:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1376              		.loc 1 1606 0
 1377 003e 2046     		mov	r0, r4
 1378 0040 FFF7FEFF 		bl	UART_EndTxTransfer
 1379              	.LVL108:
 1380 0044 E9E7     		b	.L122
 1381              	.L131:
1596:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 1382              		.loc 1 1596 0
 1383 0046 606F     		ldr	r0, [r4, #116]
 1384 0048 FFF7FEFF 		bl	HAL_DMA_GetError
 1385              	.LVL109:
 1386 004c 2028     		cmp	r0, #32
 1387 004e F6D1     		bne	.L123
1599:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1388              		.loc 1 1599 0
 1389 0050 1023     		movs	r3, #16
 1390 0052 C4F88830 		str	r3, [r4, #136]
1601:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 1391              		.loc 1 1601 0
 1392 0056 0320     		movs	r0, #3
 1393 0058 38BD     		pop	{r3, r4, r5, pc}
 1394              	.LVL110:
 1395              	.L130:
1613:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1396              		.loc 1 1613 0
 1397 005a 9A68     		ldr	r2, [r3, #8]
 1398 005c 22F04002 		bic	r2, r2, #64
 1399 0060 9A60     		str	r2, [r3, #8]
1616:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1400              		.loc 1 1616 0
 1401 0062 A06F     		ldr	r0, [r4, #120]
 1402 0064 10B1     		cbz	r0, .L125
1618:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 1403              		.loc 1 1618 0
 1404 0066 FFF7FEFF 		bl	HAL_DMA_Abort
 1405              	.LVL111:
 1406 006a 20B9     		cbnz	r0, .L132
 1407              	.L125:
1630:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1408              		.loc 1 1630 0
 1409 006c 2046     		mov	r0, r4
 1410 006e FFF7FEFF 		bl	UART_EndRxTransfer
 1411              	.LVL112:
1633:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 1412              		.loc 1 1633 0
 1413 0072 0020     		movs	r0, #0
 1414 0074 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccmyImrL.s 			page 96


 1415              	.LVL113:
 1416              	.L132:
1620:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 1417              		.loc 1 1620 0
 1418 0076 A06F     		ldr	r0, [r4, #120]
 1419 0078 FFF7FEFF 		bl	HAL_DMA_GetError
 1420              	.LVL114:
 1421 007c 2028     		cmp	r0, #32
 1422 007e F5D1     		bne	.L125
1623:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1423              		.loc 1 1623 0
 1424 0080 1023     		movs	r3, #16
 1425 0082 C4F88830 		str	r3, [r4, #136]
1625:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 1426              		.loc 1 1625 0
 1427 0086 0320     		movs	r0, #3
 1428 0088 38BD     		pop	{r3, r4, r5, pc}
 1429              	.LVL115:
 1430              	.L126:
1633:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 1431              		.loc 1 1633 0
 1432 008a 0020     		movs	r0, #0
 1433 008c 38BD     		pop	{r3, r4, r5, pc}
 1434              		.cfi_endproc
 1435              	.LFE156:
 1437              		.section	.text.HAL_UART_Abort,"ax",%progbits
 1438              		.align	1
 1439              		.global	HAL_UART_Abort
 1440              		.syntax unified
 1441              		.thumb
 1442              		.thumb_func
 1443              		.fpu fpv5-d16
 1445              	HAL_UART_Abort:
 1446              	.LFB157:
1649:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
 1447              		.loc 1 1649 0
 1448              		.cfi_startproc
 1449              		@ args = 0, pretend = 0, frame = 0
 1450              		@ frame_needed = 0, uses_anonymous_args = 0
 1451              	.LVL116:
 1452 0000 10B5     		push	{r4, lr}
 1453              	.LCFI9:
 1454              		.cfi_def_cfa_offset 8
 1455              		.cfi_offset 4, -8
 1456              		.cfi_offset 14, -4
 1457 0002 0446     		mov	r4, r0
1651:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
 1458              		.loc 1 1651 0
 1459 0004 0268     		ldr	r2, [r0]
 1460 0006 1368     		ldr	r3, [r2]
 1461 0008 23F4F073 		bic	r3, r3, #480
 1462 000c 1360     		str	r3, [r2]
1652:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1463              		.loc 1 1652 0
 1464 000e 0268     		ldr	r2, [r0]
 1465 0010 9168     		ldr	r1, [r2, #8]
 1466 0012 2C4B     		ldr	r3, .L142
ARM GAS  /tmp/ccmyImrL.s 			page 97


 1467 0014 0B40     		ands	r3, r3, r1
 1468 0016 9360     		str	r3, [r2, #8]
1655:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1469              		.loc 1 1655 0
 1470 0018 0368     		ldr	r3, [r0]
 1471 001a 9A68     		ldr	r2, [r3, #8]
 1472 001c 12F0800F 		tst	r2, #128
 1473 0020 0BD0     		beq	.L134
1657:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1474              		.loc 1 1657 0
 1475 0022 9A68     		ldr	r2, [r3, #8]
 1476 0024 22F08002 		bic	r2, r2, #128
 1477 0028 9A60     		str	r2, [r3, #8]
1660:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1478              		.loc 1 1660 0
 1479 002a 436F     		ldr	r3, [r0, #116]
 1480 002c 2BB1     		cbz	r3, .L134
1664:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1481              		.loc 1 1664 0
 1482 002e 0022     		movs	r2, #0
 1483 0030 1A65     		str	r2, [r3, #80]
1666:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 1484              		.loc 1 1666 0
 1485 0032 406F     		ldr	r0, [r0, #116]
 1486              	.LVL117:
 1487 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1488              	.LVL118:
 1489 0038 50BB     		cbnz	r0, .L139
 1490              	.L134:
1680:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1491              		.loc 1 1680 0
 1492 003a 2368     		ldr	r3, [r4]
 1493 003c 9A68     		ldr	r2, [r3, #8]
 1494 003e 12F0400F 		tst	r2, #64
 1495 0042 0BD0     		beq	.L136
1682:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1496              		.loc 1 1682 0
 1497 0044 9A68     		ldr	r2, [r3, #8]
 1498 0046 22F04002 		bic	r2, r2, #64
 1499 004a 9A60     		str	r2, [r3, #8]
1685:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1500              		.loc 1 1685 0
 1501 004c A36F     		ldr	r3, [r4, #120]
 1502 004e 2BB1     		cbz	r3, .L136
1689:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1503              		.loc 1 1689 0
 1504 0050 0022     		movs	r2, #0
 1505 0052 1A65     		str	r2, [r3, #80]
1691:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 1506              		.loc 1 1691 0
 1507 0054 A06F     		ldr	r0, [r4, #120]
 1508 0056 FFF7FEFF 		bl	HAL_DMA_Abort
 1509              	.LVL119:
 1510 005a 18BB     		cbnz	r0, .L140
 1511              	.L136:
1705:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1512              		.loc 1 1705 0
ARM GAS  /tmp/ccmyImrL.s 			page 98


 1513 005c 0023     		movs	r3, #0
 1514 005e A4F85630 		strh	r3, [r4, #86]	@ movhi
1706:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1515              		.loc 1 1706 0
 1516 0062 A4F85E30 		strh	r3, [r4, #94]	@ movhi
1709:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1517              		.loc 1 1709 0
 1518 0066 2368     		ldr	r3, [r4]
 1519 0068 0F22     		movs	r2, #15
 1520 006a 1A62     		str	r2, [r3, #32]
1712:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1521              		.loc 1 1712 0
 1522 006c 636E     		ldr	r3, [r4, #100]
 1523 006e B3F1005F 		cmp	r3, #536870912
 1524 0072 21D0     		beq	.L141
 1525              	.L137:
1718:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1526              		.loc 1 1718 0
 1527 0074 2268     		ldr	r2, [r4]
 1528 0076 9369     		ldr	r3, [r2, #24]
 1529 0078 43F00803 		orr	r3, r3, #8
 1530 007c 9361     		str	r3, [r2, #24]
1721:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1531              		.loc 1 1721 0
 1532 007e 2023     		movs	r3, #32
 1533 0080 C4F88030 		str	r3, [r4, #128]
1722:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1534              		.loc 1 1722 0
 1535 0084 C4F88430 		str	r3, [r4, #132]
1724:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1536              		.loc 1 1724 0
 1537 0088 0020     		movs	r0, #0
 1538 008a C4F88800 		str	r0, [r4, #136]
1727:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1539              		.loc 1 1727 0
 1540 008e 10BD     		pop	{r4, pc}
 1541              	.LVL120:
 1542              	.L139:
1668:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 1543              		.loc 1 1668 0
 1544 0090 606F     		ldr	r0, [r4, #116]
 1545 0092 FFF7FEFF 		bl	HAL_DMA_GetError
 1546              	.LVL121:
 1547 0096 2028     		cmp	r0, #32
 1548 0098 CFD1     		bne	.L134
1671:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1549              		.loc 1 1671 0
 1550 009a 1023     		movs	r3, #16
 1551 009c C4F88830 		str	r3, [r4, #136]
1673:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 1552              		.loc 1 1673 0
 1553 00a0 0320     		movs	r0, #3
 1554 00a2 10BD     		pop	{r4, pc}
 1555              	.LVL122:
 1556              	.L140:
1693:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 1557              		.loc 1 1693 0
ARM GAS  /tmp/ccmyImrL.s 			page 99


 1558 00a4 A06F     		ldr	r0, [r4, #120]
 1559 00a6 FFF7FEFF 		bl	HAL_DMA_GetError
 1560              	.LVL123:
 1561 00aa 2028     		cmp	r0, #32
 1562 00ac D6D1     		bne	.L136
1696:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1563              		.loc 1 1696 0
 1564 00ae 1023     		movs	r3, #16
 1565 00b0 C4F88830 		str	r3, [r4, #136]
1698:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 1566              		.loc 1 1698 0
 1567 00b4 0320     		movs	r0, #3
 1568 00b6 10BD     		pop	{r4, pc}
 1569              	.LVL124:
 1570              	.L141:
1714:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1571              		.loc 1 1714 0
 1572 00b8 2268     		ldr	r2, [r4]
 1573 00ba 9369     		ldr	r3, [r2, #24]
 1574 00bc 43F01003 		orr	r3, r3, #16
 1575 00c0 9361     		str	r3, [r2, #24]
 1576 00c2 D7E7     		b	.L137
 1577              	.L143:
 1578              		.align	2
 1579              	.L142:
 1580 00c4 FEFF7FEF 		.word	-276824066
 1581              		.cfi_endproc
 1582              	.LFE157:
 1584              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 1585              		.align	1
 1586              		.global	HAL_UART_AbortTransmit
 1587              		.syntax unified
 1588              		.thumb
 1589              		.thumb_func
 1590              		.fpu fpv5-d16
 1592              	HAL_UART_AbortTransmit:
 1593              	.LFB158:
1742:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
 1594              		.loc 1 1742 0
 1595              		.cfi_startproc
 1596              		@ args = 0, pretend = 0, frame = 0
 1597              		@ frame_needed = 0, uses_anonymous_args = 0
 1598              	.LVL125:
 1599 0000 10B5     		push	{r4, lr}
 1600              	.LCFI10:
 1601              		.cfi_def_cfa_offset 8
 1602              		.cfi_offset 4, -8
 1603              		.cfi_offset 14, -4
 1604 0002 0446     		mov	r4, r0
1744:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 1605              		.loc 1 1744 0
 1606 0004 0268     		ldr	r2, [r0]
 1607 0006 1368     		ldr	r3, [r2]
 1608 0008 23F0C003 		bic	r3, r3, #192
 1609 000c 1360     		str	r3, [r2]
1745:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1610              		.loc 1 1745 0
ARM GAS  /tmp/ccmyImrL.s 			page 100


 1611 000e 0268     		ldr	r2, [r0]
 1612 0010 9368     		ldr	r3, [r2, #8]
 1613 0012 23F40003 		bic	r3, r3, #8388608
 1614 0016 9360     		str	r3, [r2, #8]
1748:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1615              		.loc 1 1748 0
 1616 0018 0368     		ldr	r3, [r0]
 1617 001a 9A68     		ldr	r2, [r3, #8]
 1618 001c 12F0800F 		tst	r2, #128
 1619 0020 0BD0     		beq	.L145
1750:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1620              		.loc 1 1750 0
 1621 0022 9A68     		ldr	r2, [r3, #8]
 1622 0024 22F08002 		bic	r2, r2, #128
 1623 0028 9A60     		str	r2, [r3, #8]
1753:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1624              		.loc 1 1753 0
 1625 002a 436F     		ldr	r3, [r0, #116]
 1626 002c 2BB1     		cbz	r3, .L145
1757:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1627              		.loc 1 1757 0
 1628 002e 0022     		movs	r2, #0
 1629 0030 1A65     		str	r2, [r3, #80]
1759:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 1630              		.loc 1 1759 0
 1631 0032 406F     		ldr	r0, [r0, #116]
 1632              	.LVL126:
 1633 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1634              	.LVL127:
 1635 0038 58B9     		cbnz	r0, .L149
 1636              	.L145:
1773:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1637              		.loc 1 1773 0
 1638 003a 0023     		movs	r3, #0
 1639 003c A4F85630 		strh	r3, [r4, #86]	@ movhi
1776:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1640              		.loc 1 1776 0
 1641 0040 636E     		ldr	r3, [r4, #100]
 1642 0042 B3F1005F 		cmp	r3, #536870912
 1643 0046 0ED0     		beq	.L150
 1644              	.L147:
1782:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1645              		.loc 1 1782 0
 1646 0048 2023     		movs	r3, #32
 1647 004a C4F88030 		str	r3, [r4, #128]
1784:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 1648              		.loc 1 1784 0
 1649 004e 0020     		movs	r0, #0
1785:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1650              		.loc 1 1785 0
 1651 0050 10BD     		pop	{r4, pc}
 1652              	.LVL128:
 1653              	.L149:
1761:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 1654              		.loc 1 1761 0
 1655 0052 606F     		ldr	r0, [r4, #116]
 1656 0054 FFF7FEFF 		bl	HAL_DMA_GetError
ARM GAS  /tmp/ccmyImrL.s 			page 101


 1657              	.LVL129:
 1658 0058 2028     		cmp	r0, #32
 1659 005a EED1     		bne	.L145
1764:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1660              		.loc 1 1764 0
 1661 005c 1023     		movs	r3, #16
 1662 005e C4F88830 		str	r3, [r4, #136]
1766:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 1663              		.loc 1 1766 0
 1664 0062 0320     		movs	r0, #3
 1665 0064 10BD     		pop	{r4, pc}
 1666              	.LVL130:
 1667              	.L150:
1778:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1668              		.loc 1 1778 0
 1669 0066 2268     		ldr	r2, [r4]
 1670 0068 9369     		ldr	r3, [r2, #24]
 1671 006a 43F01003 		orr	r3, r3, #16
 1672 006e 9361     		str	r3, [r2, #24]
 1673 0070 EAE7     		b	.L147
 1674              		.cfi_endproc
 1675              	.LFE158:
 1677              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 1678              		.align	1
 1679              		.global	HAL_UART_AbortReceive
 1680              		.syntax unified
 1681              		.thumb
 1682              		.thumb_func
 1683              		.fpu fpv5-d16
 1685              	HAL_UART_AbortReceive:
 1686              	.LFB159:
1800:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
 1687              		.loc 1 1800 0
 1688              		.cfi_startproc
 1689              		@ args = 0, pretend = 0, frame = 0
 1690              		@ frame_needed = 0, uses_anonymous_args = 0
 1691              	.LVL131:
 1692 0000 10B5     		push	{r4, lr}
 1693              	.LCFI11:
 1694              		.cfi_def_cfa_offset 8
 1695              		.cfi_offset 4, -8
 1696              		.cfi_offset 14, -4
 1697 0002 0446     		mov	r4, r0
1802:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
 1698              		.loc 1 1802 0
 1699 0004 0268     		ldr	r2, [r0]
 1700 0006 1368     		ldr	r3, [r2]
 1701 0008 23F49073 		bic	r3, r3, #288
 1702 000c 1360     		str	r3, [r2]
1803:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1703              		.loc 1 1803 0
 1704 000e 0268     		ldr	r2, [r0]
 1705 0010 9168     		ldr	r1, [r2, #8]
 1706 0012 164B     		ldr	r3, .L156
 1707 0014 0B40     		ands	r3, r3, r1
 1708 0016 9360     		str	r3, [r2, #8]
1806:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
ARM GAS  /tmp/ccmyImrL.s 			page 102


 1709              		.loc 1 1806 0
 1710 0018 0368     		ldr	r3, [r0]
 1711 001a 9A68     		ldr	r2, [r3, #8]
 1712 001c 12F0400F 		tst	r2, #64
 1713 0020 0BD0     		beq	.L152
1808:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1714              		.loc 1 1808 0
 1715 0022 9A68     		ldr	r2, [r3, #8]
 1716 0024 22F04002 		bic	r2, r2, #64
 1717 0028 9A60     		str	r2, [r3, #8]
1811:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1718              		.loc 1 1811 0
 1719 002a 836F     		ldr	r3, [r0, #120]
 1720 002c 2BB1     		cbz	r3, .L152
1815:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1721              		.loc 1 1815 0
 1722 002e 0022     		movs	r2, #0
 1723 0030 1A65     		str	r2, [r3, #80]
1817:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 1724              		.loc 1 1817 0
 1725 0032 806F     		ldr	r0, [r0, #120]
 1726              	.LVL132:
 1727 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1728              	.LVL133:
 1729 0038 70B9     		cbnz	r0, .L155
 1730              	.L152:
1831:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1731              		.loc 1 1831 0
 1732 003a 0020     		movs	r0, #0
 1733 003c A4F85E00 		strh	r0, [r4, #94]	@ movhi
1834:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1734              		.loc 1 1834 0
 1735 0040 2368     		ldr	r3, [r4]
 1736 0042 0F22     		movs	r2, #15
 1737 0044 1A62     		str	r2, [r3, #32]
1837:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1738              		.loc 1 1837 0
 1739 0046 2268     		ldr	r2, [r4]
 1740 0048 9369     		ldr	r3, [r2, #24]
 1741 004a 43F00803 		orr	r3, r3, #8
 1742 004e 9361     		str	r3, [r2, #24]
1840:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1743              		.loc 1 1840 0
 1744 0050 2023     		movs	r3, #32
 1745 0052 C4F88430 		str	r3, [r4, #132]
1843:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1746              		.loc 1 1843 0
 1747 0056 10BD     		pop	{r4, pc}
 1748              	.LVL134:
 1749              	.L155:
1819:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 1750              		.loc 1 1819 0
 1751 0058 A06F     		ldr	r0, [r4, #120]
 1752 005a FFF7FEFF 		bl	HAL_DMA_GetError
 1753              	.LVL135:
 1754 005e 2028     		cmp	r0, #32
 1755 0060 EBD1     		bne	.L152
ARM GAS  /tmp/ccmyImrL.s 			page 103


1822:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1756              		.loc 1 1822 0
 1757 0062 1023     		movs	r3, #16
 1758 0064 C4F88830 		str	r3, [r4, #136]
1824:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 1759              		.loc 1 1824 0
 1760 0068 0320     		movs	r0, #3
 1761 006a 10BD     		pop	{r4, pc}
 1762              	.LVL136:
 1763              	.L157:
 1764              		.align	2
 1765              	.L156:
 1766 006c FEFFFFEF 		.word	-268435458
 1767              		.cfi_endproc
 1768              	.LFE159:
 1770              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1771              		.align	1
 1772              		.weak	HAL_UART_TxCpltCallback
 1773              		.syntax unified
 1774              		.thumb
 1775              		.thumb_func
 1776              		.fpu fpv5-d16
 1778              	HAL_UART_TxCpltCallback:
 1779              	.LFB164:
2410:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1780              		.loc 1 2410 0
 1781              		.cfi_startproc
 1782              		@ args = 0, pretend = 0, frame = 0
 1783              		@ frame_needed = 0, uses_anonymous_args = 0
 1784              		@ link register save eliminated.
 1785              	.LVL137:
 1786 0000 7047     		bx	lr
 1787              		.cfi_endproc
 1788              	.LFE164:
 1790              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1791              		.align	1
 1792              		.syntax unified
 1793              		.thumb
 1794              		.thumb_func
 1795              		.fpu fpv5-d16
 1797              	UART_DMATransmitCplt:
 1798              	.LFB189:
3357:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1799              		.loc 1 3357 0
 1800              		.cfi_startproc
 1801              		@ args = 0, pretend = 0, frame = 0
 1802              		@ frame_needed = 0, uses_anonymous_args = 0
 1803              	.LVL138:
3357:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1804              		.loc 1 3357 0
 1805 0000 08B5     		push	{r3, lr}
 1806              	.LCFI12:
 1807              		.cfi_def_cfa_offset 8
 1808              		.cfi_offset 3, -8
 1809              		.cfi_offset 14, -4
3358:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1810              		.loc 1 3358 0
ARM GAS  /tmp/ccmyImrL.s 			page 104


 1811 0002 836B     		ldr	r3, [r0, #56]
 1812              	.LVL139:
3361:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1813              		.loc 1 3361 0
 1814 0004 C269     		ldr	r2, [r0, #28]
 1815 0006 B2F5807F 		cmp	r2, #256
 1816 000a 0DD0     		beq	.L160
3363:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1817              		.loc 1 3363 0
 1818 000c 0022     		movs	r2, #0
 1819 000e A3F85620 		strh	r2, [r3, #86]	@ movhi
3367:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1820              		.loc 1 3367 0
 1821 0012 1968     		ldr	r1, [r3]
 1822 0014 8A68     		ldr	r2, [r1, #8]
 1823 0016 22F08002 		bic	r2, r2, #128
 1824 001a 8A60     		str	r2, [r1, #8]
3370:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1825              		.loc 1 3370 0
 1826 001c 1A68     		ldr	r2, [r3]
 1827 001e 1368     		ldr	r3, [r2]
 1828              	.LVL140:
 1829 0020 43F04003 		orr	r3, r3, #64
 1830 0024 1360     		str	r3, [r2]
 1831 0026 08BD     		pop	{r3, pc}
 1832              	.LVL141:
 1833              	.L160:
3380:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1834              		.loc 1 3380 0
 1835 0028 1846     		mov	r0, r3
 1836              	.LVL142:
 1837 002a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1838              	.LVL143:
 1839 002e 08BD     		pop	{r3, pc}
 1840              		.cfi_endproc
 1841              	.LFE189:
 1843              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 1844              		.align	1
 1845              		.syntax unified
 1846              		.thumb
 1847              		.thumb_func
 1848              		.fpu fpv5-d16
 1850              	UART_EndTransmit_IT:
 1851              	.LFB203:
3821:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3822:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
3823:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3824:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Nothing to do */
3825:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3826:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3827:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3828:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3829:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3830:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3831:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
3832:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
3833:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *                the configuration information for the specified UART module.
ARM GAS  /tmp/ccmyImrL.s 			page 105


3834:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3835:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3836:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3837:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 1852              		.loc 1 3837 0
 1853              		.cfi_startproc
 1854              		@ args = 0, pretend = 0, frame = 0
 1855              		@ frame_needed = 0, uses_anonymous_args = 0
 1856              	.LVL144:
 1857 0000 08B5     		push	{r3, lr}
 1858              	.LCFI13:
 1859              		.cfi_def_cfa_offset 8
 1860              		.cfi_offset 3, -8
 1861              		.cfi_offset 14, -4
3838:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3839:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 1862              		.loc 1 3839 0
 1863 0002 0168     		ldr	r1, [r0]
 1864 0004 0A68     		ldr	r2, [r1]
 1865 0006 22F04002 		bic	r2, r2, #64
 1866 000a 0A60     		str	r2, [r1]
3840:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3841:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3842:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 1867              		.loc 1 3842 0
 1868 000c 2022     		movs	r2, #32
 1869 000e C0F88020 		str	r2, [r0, #128]
3843:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3844:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Cleat TxISR function pointer */
3845:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxISR = NULL;
 1870              		.loc 1 3845 0
 1871 0012 0022     		movs	r2, #0
 1872 0014 0267     		str	r2, [r0, #112]
3846:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3847:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3848:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3849:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3850:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3851:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3852:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 1873              		.loc 1 3852 0
 1874 0016 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1875              	.LVL145:
 1876 001a 08BD     		pop	{r3, pc}
 1877              		.cfi_endproc
 1878              	.LFE203:
 1880              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1881              		.align	1
 1882              		.weak	HAL_UART_TxHalfCpltCallback
 1883              		.syntax unified
 1884              		.thumb
 1885              		.thumb_func
 1886              		.fpu fpv5-d16
 1888              	HAL_UART_TxHalfCpltCallback:
 1889              	.LFB165:
2425:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1890              		.loc 1 2425 0
ARM GAS  /tmp/ccmyImrL.s 			page 106


 1891              		.cfi_startproc
 1892              		@ args = 0, pretend = 0, frame = 0
 1893              		@ frame_needed = 0, uses_anonymous_args = 0
 1894              		@ link register save eliminated.
 1895              	.LVL146:
 1896 0000 7047     		bx	lr
 1897              		.cfi_endproc
 1898              	.LFE165:
 1900              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1901              		.align	1
 1902              		.syntax unified
 1903              		.thumb
 1904              		.thumb_func
 1905              		.fpu fpv5-d16
 1907              	UART_DMATxHalfCplt:
 1908              	.LFB190:
3391:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1909              		.loc 1 3391 0
 1910              		.cfi_startproc
 1911              		@ args = 0, pretend = 0, frame = 0
 1912              		@ frame_needed = 0, uses_anonymous_args = 0
 1913              	.LVL147:
3391:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1914              		.loc 1 3391 0
 1915 0000 08B5     		push	{r3, lr}
 1916              	.LCFI14:
 1917              		.cfi_def_cfa_offset 8
 1918              		.cfi_offset 3, -8
 1919              		.cfi_offset 14, -4
 1920              	.LVL148:
3399:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1921              		.loc 1 3399 0
 1922 0002 806B     		ldr	r0, [r0, #56]
 1923              	.LVL149:
 1924 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1925              	.LVL150:
 1926 0008 08BD     		pop	{r3, pc}
 1927              		.cfi_endproc
 1928              	.LFE190:
 1930              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1931              		.align	1
 1932              		.weak	HAL_UART_RxCpltCallback
 1933              		.syntax unified
 1934              		.thumb
 1935              		.thumb_func
 1936              		.fpu fpv5-d16
 1938              	HAL_UART_RxCpltCallback:
 1939              	.LFB166:
2440:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1940              		.loc 1 2440 0
 1941              		.cfi_startproc
 1942              		@ args = 0, pretend = 0, frame = 0
 1943              		@ frame_needed = 0, uses_anonymous_args = 0
 1944              		@ link register save eliminated.
 1945              	.LVL151:
 1946 0000 7047     		bx	lr
 1947              		.cfi_endproc
ARM GAS  /tmp/ccmyImrL.s 			page 107


 1948              	.LFE166:
 1950              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 1951              		.align	1
 1952              		.syntax unified
 1953              		.thumb
 1954              		.thumb_func
 1955              		.fpu fpv5-d16
 1957              	UART_RxISR_8BIT:
 1958              	.LFB204:
3853:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3854:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3855:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3856:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3857:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief RX interrrupt handler for 7 or 8 bits data word length .
3858:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
3859:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3860:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
3862:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 1959              		.loc 1 3862 0
 1960              		.cfi_startproc
 1961              		@ args = 0, pretend = 0, frame = 0
 1962              		@ frame_needed = 0, uses_anonymous_args = 0
 1963              	.LVL152:
 1964              		.loc 1 3862 0
 1965 0000 08B5     		push	{r3, lr}
 1966              	.LCFI15:
 1967              		.cfi_def_cfa_offset 8
 1968              		.cfi_offset 3, -8
 1969              		.cfi_offset 14, -4
3863:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 1970              		.loc 1 3863 0
 1971 0002 B0F86030 		ldrh	r3, [r0, #96]
 1972              	.LVL153:
3864:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  uhdata;
3865:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3866:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3867:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1973              		.loc 1 3867 0
 1974 0006 D0F88420 		ldr	r2, [r0, #132]
 1975 000a 222A     		cmp	r2, #34
 1976 000c 05D0     		beq	.L173
3868:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3869:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
3870:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
3871:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pRxBuffPtr++;
3872:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount--;
3873:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3874:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
3875:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3876:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
3877:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3878:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3879:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3880:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3881:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3882:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
ARM GAS  /tmp/ccmyImrL.s 			page 108


3883:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3884:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3885:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Clear RxISR function pointer */
3886:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxISR = NULL;
3887:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3888:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3889:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3890:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3891:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3892:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3893:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
3894:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3895:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3896:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3897:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
3898:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3899:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3900:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 1977              		.loc 1 3900 0
 1978 000e 0268     		ldr	r2, [r0]
 1979 0010 9369     		ldr	r3, [r2, #24]
 1980              	.LVL154:
 1981 0012 43F00803 		orr	r3, r3, #8
 1982 0016 9361     		str	r3, [r2, #24]
 1983              	.LVL155:
 1984              	.L169:
 1985 0018 08BD     		pop	{r3, pc}
 1986              	.LVL156:
 1987              	.L173:
3869:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 1988              		.loc 1 3869 0
 1989 001a 0268     		ldr	r2, [r0]
 1990 001c 516A     		ldr	r1, [r2, #36]
 1991              	.LVL157:
3870:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pRxBuffPtr++;
 1992              		.loc 1 3870 0
 1993 001e 826D     		ldr	r2, [r0, #88]
 1994 0020 DBB2     		uxtb	r3, r3
 1995              	.LVL158:
 1996 0022 0B40     		ands	r3, r3, r1
 1997 0024 1370     		strb	r3, [r2]
 1998              	.LVL159:
3871:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount--;
 1999              		.loc 1 3871 0
 2000 0026 836D     		ldr	r3, [r0, #88]
 2001 0028 0133     		adds	r3, r3, #1
 2002 002a 8365     		str	r3, [r0, #88]
3872:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2003              		.loc 1 3872 0
 2004 002c B0F85E30 		ldrh	r3, [r0, #94]
 2005 0030 9BB2     		uxth	r3, r3
 2006 0032 013B     		subs	r3, r3, #1
 2007 0034 9BB2     		uxth	r3, r3
 2008 0036 A0F85E30 		strh	r3, [r0, #94]	@ movhi
3874:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2009              		.loc 1 3874 0
 2010 003a B0F85E30 		ldrh	r3, [r0, #94]
ARM GAS  /tmp/ccmyImrL.s 			page 109


 2011 003e 9BB2     		uxth	r3, r3
 2012 0040 002B     		cmp	r3, #0
 2013 0042 E9D1     		bne	.L169
3877:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2014              		.loc 1 3877 0
 2015 0044 0268     		ldr	r2, [r0]
 2016 0046 1368     		ldr	r3, [r2]
 2017 0048 23F49073 		bic	r3, r3, #288
 2018 004c 1360     		str	r3, [r2]
3880:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2019              		.loc 1 3880 0
 2020 004e 0268     		ldr	r2, [r0]
 2021 0050 9368     		ldr	r3, [r2, #8]
 2022 0052 23F00103 		bic	r3, r3, #1
 2023 0056 9360     		str	r3, [r2, #8]
3883:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2024              		.loc 1 3883 0
 2025 0058 2023     		movs	r3, #32
 2026 005a C0F88430 		str	r3, [r0, #132]
3886:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2027              		.loc 1 3886 0
 2028 005e 0023     		movs	r3, #0
 2029 0060 C366     		str	r3, [r0, #108]
3893:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2030              		.loc 1 3893 0
 2031 0062 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2032              	.LVL160:
 2033 0066 08BD     		pop	{r3, pc}
 2034              		.cfi_endproc
 2035              	.LFE204:
 2037              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 2038              		.align	1
 2039              		.syntax unified
 2040              		.thumb
 2041              		.thumb_func
 2042              		.fpu fpv5-d16
 2044              	UART_RxISR_16BIT:
 2045              	.LFB205:
3901:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3902:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3903:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3904:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3905:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief RX interrrupt handler for 9 bits data word length .
3906:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3907:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3908:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
3909:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3910:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3911:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
3912:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 2046              		.loc 1 3912 0
 2047              		.cfi_startproc
 2048              		@ args = 0, pretend = 0, frame = 0
 2049              		@ frame_needed = 0, uses_anonymous_args = 0
 2050              	.LVL161:
 2051 0000 08B5     		push	{r3, lr}
 2052              	.LCFI16:
ARM GAS  /tmp/ccmyImrL.s 			page 110


 2053              		.cfi_def_cfa_offset 8
 2054              		.cfi_offset 3, -8
 2055              		.cfi_offset 14, -4
3913:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t *tmp;
3914:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 2056              		.loc 1 3914 0
 2057 0002 B0F86020 		ldrh	r2, [r0, #96]
 2058              	.LVL162:
3915:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  uhdata;
3916:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3917:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3918:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2059              		.loc 1 3918 0
 2060 0006 D0F88430 		ldr	r3, [r0, #132]
 2061 000a 222B     		cmp	r3, #34
 2062 000c 05D0     		beq	.L178
3919:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3920:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
3921:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
3922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
3923:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
3924:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount--;
3925:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3926:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
3927:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3928:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
3929:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3930:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3931:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3932:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3933:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3934:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3935:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3936:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3937:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Clear RxISR function pointer */
3938:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxISR = NULL;
3939:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3940:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3941:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3942:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3943:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3944:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3945:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
3946:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3947:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3949:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
3950:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3951:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2063              		.loc 1 3952 0
 2064 000e 0268     		ldr	r2, [r0]
 2065              	.LVL163:
 2066 0010 9369     		ldr	r3, [r2, #24]
 2067 0012 43F00803 		orr	r3, r3, #8
 2068 0016 9361     		str	r3, [r2, #24]
 2069              	.LVL164:
ARM GAS  /tmp/ccmyImrL.s 			page 111


 2070              	.L174:
 2071 0018 08BD     		pop	{r3, pc}
 2072              	.LVL165:
 2073              	.L178:
3920:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
 2074              		.loc 1 3920 0
 2075 001a 0368     		ldr	r3, [r0]
 2076 001c 5B6A     		ldr	r3, [r3, #36]
 2077              	.LVL166:
3921:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 2078              		.loc 1 3921 0
 2079 001e 816D     		ldr	r1, [r0, #88]
 2080              	.LVL167:
3922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
 2081              		.loc 1 3922 0
 2082 0020 1A40     		ands	r2, r2, r3
 2083              	.LVL168:
 2084 0022 0A80     		strh	r2, [r1]	@ movhi
 2085              	.LVL169:
3923:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount--;
 2086              		.loc 1 3923 0
 2087 0024 836D     		ldr	r3, [r0, #88]
 2088              	.LVL170:
 2089 0026 0233     		adds	r3, r3, #2
 2090 0028 8365     		str	r3, [r0, #88]
3924:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2091              		.loc 1 3924 0
 2092 002a B0F85E30 		ldrh	r3, [r0, #94]
 2093 002e 9BB2     		uxth	r3, r3
 2094 0030 013B     		subs	r3, r3, #1
 2095 0032 9BB2     		uxth	r3, r3
 2096 0034 A0F85E30 		strh	r3, [r0, #94]	@ movhi
3926:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2097              		.loc 1 3926 0
 2098 0038 B0F85E30 		ldrh	r3, [r0, #94]
 2099 003c 9BB2     		uxth	r3, r3
 2100 003e 002B     		cmp	r3, #0
 2101 0040 EAD1     		bne	.L174
3929:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2102              		.loc 1 3929 0
 2103 0042 0268     		ldr	r2, [r0]
 2104 0044 1368     		ldr	r3, [r2]
 2105 0046 23F49073 		bic	r3, r3, #288
 2106 004a 1360     		str	r3, [r2]
3932:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2107              		.loc 1 3932 0
 2108 004c 0268     		ldr	r2, [r0]
 2109 004e 9368     		ldr	r3, [r2, #8]
 2110 0050 23F00103 		bic	r3, r3, #1
 2111 0054 9360     		str	r3, [r2, #8]
3935:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2112              		.loc 1 3935 0
 2113 0056 2023     		movs	r3, #32
 2114 0058 C0F88430 		str	r3, [r0, #132]
3938:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2115              		.loc 1 3938 0
 2116 005c 0023     		movs	r3, #0
ARM GAS  /tmp/ccmyImrL.s 			page 112


 2117 005e C366     		str	r3, [r0, #108]
3945:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2118              		.loc 1 3945 0
 2119 0060 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2120              	.LVL171:
 2121 0064 08BD     		pop	{r3, pc}
 2122              		.cfi_endproc
 2123              	.LFE205:
 2125              		.section	.text.UART_RxISR_8BIT_FIFOEN,"ax",%progbits
 2126              		.align	1
 2127              		.syntax unified
 2128              		.thumb
 2129              		.thumb_func
 2130              		.fpu fpv5-d16
 2132              	UART_RxISR_8BIT_FIFOEN:
 2133              	.LFB206:
3953:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3954:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3956:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3957:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief RX interrrupt handler for 7 or 8  bits data word length and FIFO mode is enabled.
3958:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3959:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3960:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
3961:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3962:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3963:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
3964:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 2134              		.loc 1 3964 0
 2135              		.cfi_startproc
 2136              		@ args = 0, pretend = 0, frame = 0
 2137              		@ frame_needed = 0, uses_anonymous_args = 0
 2138              	.LVL172:
 2139 0000 70B5     		push	{r4, r5, r6, lr}
 2140              	.LCFI17:
 2141              		.cfi_def_cfa_offset 16
 2142              		.cfi_offset 4, -16
 2143              		.cfi_offset 5, -12
 2144              		.cfi_offset 6, -8
 2145              		.cfi_offset 14, -4
3965:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 2146              		.loc 1 3965 0
 2147 0002 B0F86060 		ldrh	r6, [r0, #96]
 2148              	.LVL173:
3966:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  uhdata;
3967:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t   nb_rx_data;
3968:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  rxdatacount;
3969:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3970:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3971:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2149              		.loc 1 3971 0
 2150 0006 D0F88430 		ldr	r3, [r0, #132]
 2151 000a 222B     		cmp	r3, #34
 2152 000c 05D0     		beq	.L186
3972:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3973:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     for (nb_rx_data = huart->NbRxDataToProcess ; nb_rx_data > 0U ; nb_rx_data--)
3974:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
ARM GAS  /tmp/ccmyImrL.s 			page 113


3975:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
3976:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
3977:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pRxBuffPtr++;
3978:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxXferCount--;
3979:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3980:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (huart->RxXferCount == 0U)
3981:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3982:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
3983:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3984:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3985:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) and RX FIFO 
3986:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
3987:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3988:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
3989:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
3990:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3991:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Clear RxISR function pointer */
3992:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxISR = NULL;
3993:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3994:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3995:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call registered Rx complete callback*/
3996:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxCpltCallback(huart);
3997:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3998:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
3999:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
4000:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4001:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4002:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4003:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4004:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* When remaining number of bytes to receive is less than the RX FIFO
4005:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     threshold, next incoming frames are processed as if FIFO mode was
4006:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     disabled (i.e. one interrupt per received frame).
4007:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     */
4008:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     rxdatacount = huart->RxXferCount;
4009:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
4010:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4011:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART RXFT interrupt*/
4012:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
4013:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4014:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Update the RxISR function pointer */
4015:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
4016:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4017:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the UART Data Register Not Empty interrupt */
4018:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
4019:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4020:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4021:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
4022:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4023:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4024:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2153              		.loc 1 4024 0
 2154 000e 0268     		ldr	r2, [r0]
 2155 0010 9369     		ldr	r3, [r2, #24]
 2156 0012 43F00803 		orr	r3, r3, #8
 2157 0016 9361     		str	r3, [r2, #24]
 2158              	.LVL174:
 2159              	.L179:
ARM GAS  /tmp/ccmyImrL.s 			page 114


 2160 0018 70BD     		pop	{r4, r5, r6, pc}
 2161              	.LVL175:
 2162              	.L186:
 2163 001a 0446     		mov	r4, r0
3973:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2164              		.loc 1 3973 0
 2165 001c B0F86850 		ldrh	r5, [r0, #104]
 2166              	.LVL176:
 2167 0020 01E0     		b	.L181
 2168              	.LVL177:
 2169              	.L182:
3973:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2170              		.loc 1 3973 0 is_stmt 0 discriminator 2
 2171 0022 013D     		subs	r5, r5, #1
 2172              	.LVL178:
 2173 0024 ADB2     		uxth	r5, r5
 2174              	.LVL179:
 2175              	.L181:
3973:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2176              		.loc 1 3973 0 discriminator 1
 2177 0026 3DB3     		cbz	r5, .L187
3975:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 2178              		.loc 1 3975 0 is_stmt 1
 2179 0028 2368     		ldr	r3, [r4]
 2180 002a 596A     		ldr	r1, [r3, #36]
 2181              	.LVL180:
3976:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pRxBuffPtr++;
 2182              		.loc 1 3976 0
 2183 002c A26D     		ldr	r2, [r4, #88]
 2184 002e F3B2     		uxtb	r3, r6
 2185 0030 0B40     		ands	r3, r3, r1
 2186 0032 1370     		strb	r3, [r2]
3977:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxXferCount--;
 2187              		.loc 1 3977 0
 2188 0034 A36D     		ldr	r3, [r4, #88]
 2189 0036 0133     		adds	r3, r3, #1
 2190 0038 A365     		str	r3, [r4, #88]
3978:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2191              		.loc 1 3978 0
 2192 003a B4F85E30 		ldrh	r3, [r4, #94]
 2193 003e 9BB2     		uxth	r3, r3
 2194 0040 013B     		subs	r3, r3, #1
 2195 0042 9BB2     		uxth	r3, r3
 2196 0044 A4F85E30 		strh	r3, [r4, #94]	@ movhi
3980:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 2197              		.loc 1 3980 0
 2198 0048 B4F85E30 		ldrh	r3, [r4, #94]
 2199 004c 9BB2     		uxth	r3, r3
 2200 004e 002B     		cmp	r3, #0
 2201 0050 E7D1     		bne	.L182
3983:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2202              		.loc 1 3983 0
 2203 0052 2268     		ldr	r2, [r4]
 2204 0054 1368     		ldr	r3, [r2]
 2205 0056 23F48073 		bic	r3, r3, #256
 2206 005a 1360     		str	r3, [r2]
3986:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  /tmp/ccmyImrL.s 			page 115


 2207              		.loc 1 3986 0
 2208 005c 2268     		ldr	r2, [r4]
 2209 005e 9168     		ldr	r1, [r2, #8]
 2210              	.LVL181:
 2211 0060 104B     		ldr	r3, .L188
 2212 0062 0B40     		ands	r3, r3, r1
 2213 0064 9360     		str	r3, [r2, #8]
3989:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2214              		.loc 1 3989 0
 2215 0066 2023     		movs	r3, #32
 2216 0068 C4F88430 		str	r3, [r4, #132]
3992:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2217              		.loc 1 3992 0
 2218 006c 0023     		movs	r3, #0
 2219 006e E366     		str	r3, [r4, #108]
3999:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2220              		.loc 1 3999 0
 2221 0070 2046     		mov	r0, r4
 2222 0072 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2223              	.LVL182:
 2224 0076 D4E7     		b	.L182
 2225              	.L187:
4008:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 2226              		.loc 1 4008 0
 2227 0078 B4F85E30 		ldrh	r3, [r4, #94]
 2228 007c 9BB2     		uxth	r3, r3
 2229              	.LVL183:
4009:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2230              		.loc 1 4009 0
 2231 007e 002B     		cmp	r3, #0
 2232 0080 CAD0     		beq	.L179
4009:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2233              		.loc 1 4009 0 is_stmt 0 discriminator 1
 2234 0082 B4F86820 		ldrh	r2, [r4, #104]
 2235 0086 9342     		cmp	r3, r2
 2236 0088 C6D2     		bcs	.L179
4012:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2237              		.loc 1 4012 0 is_stmt 1
 2238 008a 2268     		ldr	r2, [r4]
 2239 008c 9368     		ldr	r3, [r2, #8]
 2240              	.LVL184:
 2241 008e 23F08053 		bic	r3, r3, #268435456
 2242 0092 9360     		str	r3, [r2, #8]
4015:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2243              		.loc 1 4015 0
 2244 0094 044B     		ldr	r3, .L188+4
 2245 0096 E366     		str	r3, [r4, #108]
4018:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 2246              		.loc 1 4018 0
 2247 0098 2268     		ldr	r2, [r4]
 2248 009a 1368     		ldr	r3, [r2]
 2249 009c 43F02003 		orr	r3, r3, #32
 2250 00a0 1360     		str	r3, [r2]
 2251 00a2 70BD     		pop	{r4, r5, r6, pc}
 2252              	.LVL185:
 2253              	.L189:
 2254              		.align	2
ARM GAS  /tmp/ccmyImrL.s 			page 116


 2255              	.L188:
 2256 00a4 FEFFFFEF 		.word	-268435458
 2257 00a8 00000000 		.word	UART_RxISR_8BIT
 2258              		.cfi_endproc
 2259              	.LFE206:
 2261              		.section	.text.UART_RxISR_16BIT_FIFOEN,"ax",%progbits
 2262              		.align	1
 2263              		.syntax unified
 2264              		.thumb
 2265              		.thumb_func
 2266              		.fpu fpv5-d16
 2268              	UART_RxISR_16BIT_FIFOEN:
 2269              	.LFB207:
4025:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4026:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
4027:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4028:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
4029:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief RX interrrupt handler for 9 bits data word length and FIFO mode is enabled.
4030:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4031:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
4032:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
4033:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
4034:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
4035:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
4036:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 2270              		.loc 1 4036 0
 2271              		.cfi_startproc
 2272              		@ args = 0, pretend = 0, frame = 0
 2273              		@ frame_needed = 0, uses_anonymous_args = 0
 2274              	.LVL186:
 2275 0000 70B5     		push	{r4, r5, r6, lr}
 2276              	.LCFI18:
 2277              		.cfi_def_cfa_offset 16
 2278              		.cfi_offset 4, -16
 2279              		.cfi_offset 5, -12
 2280              		.cfi_offset 6, -8
 2281              		.cfi_offset 14, -4
4037:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t *tmp;
4038:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 2282              		.loc 1 4038 0
 2283 0002 B0F86060 		ldrh	r6, [r0, #96]
 2284              	.LVL187:
4039:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  uhdata;
4040:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t   nb_rx_data;
4041:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  rxdatacount;
4042:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4043:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4044:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2285              		.loc 1 4044 0
 2286 0006 D0F88430 		ldr	r3, [r0, #132]
 2287 000a 222B     		cmp	r3, #34
 2288 000c 05D0     		beq	.L197
4045:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4046:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     for (nb_rx_data = huart->NbRxDataToProcess ; nb_rx_data > 0U ; nb_rx_data--)
4047:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4048:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
4049:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       tmp = (uint16_t *) huart->pRxBuffPtr ;
ARM GAS  /tmp/ccmyImrL.s 			page 117


4050:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
4051:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
4052:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxXferCount--;
4053:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4054:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (huart->RxXferCount == 0U)
4055:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4056:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
4057:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
4058:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4059:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) and RX FIFO 
4060:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
4061:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4062:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
4063:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
4064:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4065:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Clear RxISR function pointer */
4066:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxISR = NULL;
4067:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4068:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4069:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call registered Rx complete callback*/
4070:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxCpltCallback(huart);
4071:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
4072:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
4073:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
4074:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4075:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4076:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4077:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4078:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* When remaining number of bytes to receive is less than the RX FIFO
4079:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     threshold, next incoming frames are processed as if FIFO mode was
4080:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     disabled (i.e. one interrupt per received frame).
4081:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     */
4082:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     rxdatacount = huart->RxXferCount;
4083:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
4084:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4085:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART RXFT interrupt*/
4086:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
4087:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4088:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Update the RxISR function pointer */
4089:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
4090:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4091:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the UART Data Register Not Empty interrupt */
4092:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
4093:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4094:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4095:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
4096:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4097:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4098:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2289              		.loc 1 4098 0
 2290 000e 0268     		ldr	r2, [r0]
 2291 0010 9369     		ldr	r3, [r2, #24]
 2292 0012 43F00803 		orr	r3, r3, #8
 2293 0016 9361     		str	r3, [r2, #24]
 2294              	.LVL188:
 2295              	.L190:
 2296 0018 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccmyImrL.s 			page 118


 2297              	.LVL189:
 2298              	.L197:
 2299 001a 0446     		mov	r4, r0
4046:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2300              		.loc 1 4046 0
 2301 001c B0F86850 		ldrh	r5, [r0, #104]
 2302              	.LVL190:
 2303 0020 01E0     		b	.L192
 2304              	.LVL191:
 2305              	.L193:
4046:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2306              		.loc 1 4046 0 is_stmt 0 discriminator 2
 2307 0022 013D     		subs	r5, r5, #1
 2308              	.LVL192:
 2309 0024 ADB2     		uxth	r5, r5
 2310              	.LVL193:
 2311              	.L192:
4046:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2312              		.loc 1 4046 0 discriminator 1
 2313 0026 35B3     		cbz	r5, .L198
4048:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       tmp = (uint16_t *) huart->pRxBuffPtr ;
 2314              		.loc 1 4048 0 is_stmt 1
 2315 0028 2368     		ldr	r3, [r4]
 2316 002a 5B6A     		ldr	r3, [r3, #36]
 2317              	.LVL194:
4049:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
 2318              		.loc 1 4049 0
 2319 002c A26D     		ldr	r2, [r4, #88]
 2320              	.LVL195:
4050:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
 2321              		.loc 1 4050 0
 2322 002e 3340     		ands	r3, r3, r6
 2323              	.LVL196:
 2324 0030 1380     		strh	r3, [r2]	@ movhi
4051:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxXferCount--;
 2325              		.loc 1 4051 0
 2326 0032 A36D     		ldr	r3, [r4, #88]
 2327 0034 0233     		adds	r3, r3, #2
 2328 0036 A365     		str	r3, [r4, #88]
4052:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2329              		.loc 1 4052 0
 2330 0038 B4F85E30 		ldrh	r3, [r4, #94]
 2331 003c 9BB2     		uxth	r3, r3
 2332 003e 013B     		subs	r3, r3, #1
 2333 0040 9BB2     		uxth	r3, r3
 2334 0042 A4F85E30 		strh	r3, [r4, #94]	@ movhi
4054:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 2335              		.loc 1 4054 0
 2336 0046 B4F85E30 		ldrh	r3, [r4, #94]
 2337 004a 9BB2     		uxth	r3, r3
 2338 004c 002B     		cmp	r3, #0
 2339 004e E8D1     		bne	.L193
4057:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2340              		.loc 1 4057 0
 2341 0050 2268     		ldr	r2, [r4]
 2342              	.LVL197:
 2343 0052 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccmyImrL.s 			page 119


 2344 0054 23F48073 		bic	r3, r3, #256
 2345 0058 1360     		str	r3, [r2]
4060:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2346              		.loc 1 4060 0
 2347 005a 2268     		ldr	r2, [r4]
 2348 005c 9168     		ldr	r1, [r2, #8]
 2349 005e 114B     		ldr	r3, .L199
 2350 0060 0B40     		ands	r3, r3, r1
 2351 0062 9360     		str	r3, [r2, #8]
4063:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2352              		.loc 1 4063 0
 2353 0064 2023     		movs	r3, #32
 2354 0066 C4F88430 		str	r3, [r4, #132]
4066:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2355              		.loc 1 4066 0
 2356 006a 0023     		movs	r3, #0
 2357 006c E366     		str	r3, [r4, #108]
4073:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2358              		.loc 1 4073 0
 2359 006e 2046     		mov	r0, r4
 2360 0070 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2361              	.LVL198:
 2362 0074 D5E7     		b	.L193
 2363              	.L198:
4082:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 2364              		.loc 1 4082 0
 2365 0076 B4F85E30 		ldrh	r3, [r4, #94]
 2366 007a 9BB2     		uxth	r3, r3
 2367              	.LVL199:
4083:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2368              		.loc 1 4083 0
 2369 007c 002B     		cmp	r3, #0
 2370 007e CBD0     		beq	.L190
4083:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2371              		.loc 1 4083 0 is_stmt 0 discriminator 1
 2372 0080 B4F86820 		ldrh	r2, [r4, #104]
 2373 0084 9342     		cmp	r3, r2
 2374 0086 C7D2     		bcs	.L190
4086:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2375              		.loc 1 4086 0 is_stmt 1
 2376 0088 2268     		ldr	r2, [r4]
 2377 008a 9368     		ldr	r3, [r2, #8]
 2378              	.LVL200:
 2379 008c 23F08053 		bic	r3, r3, #268435456
 2380 0090 9360     		str	r3, [r2, #8]
4089:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2381              		.loc 1 4089 0
 2382 0092 054B     		ldr	r3, .L199+4
 2383 0094 E366     		str	r3, [r4, #108]
4092:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 2384              		.loc 1 4092 0
 2385 0096 2268     		ldr	r2, [r4]
 2386 0098 1368     		ldr	r3, [r2]
 2387 009a 43F02003 		orr	r3, r3, #32
 2388 009e 1360     		str	r3, [r2]
 2389 00a0 70BD     		pop	{r4, r5, r6, pc}
 2390              	.LVL201:
ARM GAS  /tmp/ccmyImrL.s 			page 120


 2391              	.L200:
 2392 00a2 00BF     		.align	2
 2393              	.L199:
 2394 00a4 FEFFFFEF 		.word	-268435458
 2395 00a8 00000000 		.word	UART_RxISR_16BIT
 2396              		.cfi_endproc
 2397              	.LFE207:
 2399              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 2400              		.align	1
 2401              		.syntax unified
 2402              		.thumb
 2403              		.thumb_func
 2404              		.fpu fpv5-d16
 2406              	UART_DMAReceiveCplt:
 2407              	.LFB191:
3409:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2408              		.loc 1 3409 0
 2409              		.cfi_startproc
 2410              		@ args = 0, pretend = 0, frame = 0
 2411              		@ frame_needed = 0, uses_anonymous_args = 0
 2412              	.LVL202:
 2413 0000 08B5     		push	{r3, lr}
 2414              	.LCFI19:
 2415              		.cfi_def_cfa_offset 8
 2416              		.cfi_offset 3, -8
 2417              		.cfi_offset 14, -4
3410:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2418              		.loc 1 3410 0
 2419 0002 836B     		ldr	r3, [r0, #56]
 2420              	.LVL203:
3413:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2421              		.loc 1 3413 0
 2422 0004 C269     		ldr	r2, [r0, #28]
 2423 0006 B2F5807F 		cmp	r2, #256
 2424 000a 14D0     		beq	.L202
3415:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2425              		.loc 1 3415 0
 2426 000c 0022     		movs	r2, #0
 2427 000e A3F85E20 		strh	r2, [r3, #94]	@ movhi
3418:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2428              		.loc 1 3418 0
 2429 0012 1968     		ldr	r1, [r3]
 2430 0014 0A68     		ldr	r2, [r1]
 2431 0016 22F48072 		bic	r2, r2, #256
 2432 001a 0A60     		str	r2, [r1]
3419:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2433              		.loc 1 3419 0
 2434 001c 1968     		ldr	r1, [r3]
 2435 001e 8A68     		ldr	r2, [r1, #8]
 2436 0020 22F00102 		bic	r2, r2, #1
 2437 0024 8A60     		str	r2, [r1, #8]
3423:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2438              		.loc 1 3423 0
 2439 0026 1968     		ldr	r1, [r3]
 2440 0028 8A68     		ldr	r2, [r1, #8]
 2441 002a 22F04002 		bic	r2, r2, #64
 2442 002e 8A60     		str	r2, [r1, #8]
ARM GAS  /tmp/ccmyImrL.s 			page 121


3426:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 2443              		.loc 1 3426 0
 2444 0030 2022     		movs	r2, #32
 2445 0032 C3F88420 		str	r2, [r3, #132]
 2446              	.L202:
3434:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2447              		.loc 1 3434 0
 2448 0036 1846     		mov	r0, r3
 2449              	.LVL204:
 2450 0038 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2451              	.LVL205:
 2452 003c 08BD     		pop	{r3, pc}
 2453              		.cfi_endproc
 2454              	.LFE191:
 2456              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 2457              		.align	1
 2458              		.weak	HAL_UART_RxHalfCpltCallback
 2459              		.syntax unified
 2460              		.thumb
 2461              		.thumb_func
 2462              		.fpu fpv5-d16
 2464              	HAL_UART_RxHalfCpltCallback:
 2465              	.LFB167:
2455:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2466              		.loc 1 2455 0
 2467              		.cfi_startproc
 2468              		@ args = 0, pretend = 0, frame = 0
 2469              		@ frame_needed = 0, uses_anonymous_args = 0
 2470              		@ link register save eliminated.
 2471              	.LVL206:
 2472 0000 7047     		bx	lr
 2473              		.cfi_endproc
 2474              	.LFE167:
 2476              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 2477              		.align	1
 2478              		.syntax unified
 2479              		.thumb
 2480              		.thumb_func
 2481              		.fpu fpv5-d16
 2483              	UART_DMARxHalfCplt:
 2484              	.LFB192:
3444:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2485              		.loc 1 3444 0
 2486              		.cfi_startproc
 2487              		@ args = 0, pretend = 0, frame = 0
 2488              		@ frame_needed = 0, uses_anonymous_args = 0
 2489              	.LVL207:
3444:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2490              		.loc 1 3444 0
 2491 0000 08B5     		push	{r3, lr}
 2492              	.LCFI20:
 2493              		.cfi_def_cfa_offset 8
 2494              		.cfi_offset 3, -8
 2495              		.cfi_offset 14, -4
 2496              	.LVL208:
3452:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2497              		.loc 1 3452 0
ARM GAS  /tmp/ccmyImrL.s 			page 122


 2498 0002 806B     		ldr	r0, [r0, #56]
 2499              	.LVL209:
 2500 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 2501              	.LVL210:
 2502 0008 08BD     		pop	{r3, pc}
 2503              		.cfi_endproc
 2504              	.LFE192:
 2506              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 2507              		.align	1
 2508              		.weak	HAL_UART_ErrorCallback
 2509              		.syntax unified
 2510              		.thumb
 2511              		.thumb_func
 2512              		.fpu fpv5-d16
 2514              	HAL_UART_ErrorCallback:
 2515              	.LFB168:
2470:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2516              		.loc 1 2470 0
 2517              		.cfi_startproc
 2518              		@ args = 0, pretend = 0, frame = 0
 2519              		@ frame_needed = 0, uses_anonymous_args = 0
 2520              		@ link register save eliminated.
 2521              	.LVL211:
 2522 0000 7047     		bx	lr
 2523              		.cfi_endproc
 2524              	.LFE168:
 2526              		.section	.text.UART_DMAError,"ax",%progbits
 2527              		.align	1
 2528              		.syntax unified
 2529              		.thumb
 2530              		.thumb_func
 2531              		.fpu fpv5-d16
 2533              	UART_DMAError:
 2534              	.LFB193:
3462:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2535              		.loc 1 3462 0
 2536              		.cfi_startproc
 2537              		@ args = 0, pretend = 0, frame = 0
 2538              		@ frame_needed = 0, uses_anonymous_args = 0
 2539              	.LVL212:
3462:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2540              		.loc 1 3462 0
 2541 0000 38B5     		push	{r3, r4, r5, lr}
 2542              	.LCFI21:
 2543              		.cfi_def_cfa_offset 16
 2544              		.cfi_offset 3, -16
 2545              		.cfi_offset 4, -12
 2546              		.cfi_offset 5, -8
 2547              		.cfi_offset 14, -4
3463:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2548              		.loc 1 3463 0
 2549 0002 846B     		ldr	r4, [r0, #56]
 2550              	.LVL213:
3465:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2551              		.loc 1 3465 0
 2552 0004 D4F88020 		ldr	r2, [r4, #128]
 2553              	.LVL214:
ARM GAS  /tmp/ccmyImrL.s 			page 123


3466:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2554              		.loc 1 3466 0
 2555 0008 D4F88450 		ldr	r5, [r4, #132]
 2556              	.LVL215:
3469:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 2557              		.loc 1 3469 0
 2558 000c 2368     		ldr	r3, [r4]
 2559 000e 9B68     		ldr	r3, [r3, #8]
 2560 0010 13F0800F 		tst	r3, #128
 2561 0014 01D0     		beq	.L209
3469:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 2562              		.loc 1 3469 0 is_stmt 0 discriminator 1
 2563 0016 212A     		cmp	r2, #33
 2564 0018 10D0     		beq	.L212
 2565              	.LVL216:
 2566              	.L209:
3477:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 2567              		.loc 1 3477 0 is_stmt 1
 2568 001a 2368     		ldr	r3, [r4]
 2569 001c 9B68     		ldr	r3, [r3, #8]
 2570 001e 13F0400F 		tst	r3, #64
 2571 0022 01D0     		beq	.L210
3477:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 2572              		.loc 1 3477 0 is_stmt 0 discriminator 1
 2573 0024 222D     		cmp	r5, #34
 2574 0026 10D0     		beq	.L213
 2575              	.L210:
3484:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2576              		.loc 1 3484 0 is_stmt 1
 2577 0028 D4F88830 		ldr	r3, [r4, #136]
 2578 002c 43F01003 		orr	r3, r3, #16
 2579 0030 C4F88830 		str	r3, [r4, #136]
3491:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2580              		.loc 1 3491 0
 2581 0034 2046     		mov	r0, r4
 2582 0036 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2583              	.LVL217:
 2584 003a 38BD     		pop	{r3, r4, r5, pc}
 2585              	.LVL218:
 2586              	.L212:
3472:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2587              		.loc 1 3472 0
 2588 003c 0023     		movs	r3, #0
 2589 003e A4F85630 		strh	r3, [r4, #86]	@ movhi
3473:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 2590              		.loc 1 3473 0
 2591 0042 2046     		mov	r0, r4
 2592              	.LVL219:
 2593 0044 FFF7FEFF 		bl	UART_EndTxTransfer
 2594              	.LVL220:
 2595 0048 E7E7     		b	.L209
 2596              	.L213:
3480:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2597              		.loc 1 3480 0
 2598 004a 0023     		movs	r3, #0
 2599 004c A4F85E30 		strh	r3, [r4, #94]	@ movhi
3481:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
ARM GAS  /tmp/ccmyImrL.s 			page 124


 2600              		.loc 1 3481 0
 2601 0050 2046     		mov	r0, r4
 2602 0052 FFF7FEFF 		bl	UART_EndRxTransfer
 2603              	.LVL221:
 2604 0056 E7E7     		b	.L210
 2605              		.cfi_endproc
 2606              	.LFE193:
 2608              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2609              		.align	1
 2610              		.global	HAL_UART_IRQHandler
 2611              		.syntax unified
 2612              		.thumb
 2613              		.thumb_func
 2614              		.fpu fpv5-d16
 2616              	HAL_UART_IRQHandler:
 2617              	.LFB163:
2178:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 2618              		.loc 1 2178 0
 2619              		.cfi_startproc
 2620              		@ args = 0, pretend = 0, frame = 0
 2621              		@ frame_needed = 0, uses_anonymous_args = 0
 2622              	.LVL222:
 2623 0000 70B5     		push	{r4, r5, r6, lr}
 2624              	.LCFI22:
 2625              		.cfi_def_cfa_offset 16
 2626              		.cfi_offset 4, -16
 2627              		.cfi_offset 5, -12
 2628              		.cfi_offset 6, -8
 2629              		.cfi_offset 14, -4
 2630 0002 0446     		mov	r4, r0
2179:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2631              		.loc 1 2179 0
 2632 0004 0168     		ldr	r1, [r0]
 2633 0006 CB69     		ldr	r3, [r1, #28]
 2634              	.LVL223:
2180:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 2635              		.loc 1 2180 0
 2636 0008 0D68     		ldr	r5, [r1]
 2637              	.LVL224:
2181:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2638              		.loc 1 2181 0
 2639 000a 8868     		ldr	r0, [r1, #8]
 2640              	.LVL225:
2187:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (errorflags == 0U)
 2641              		.loc 1 2187 0
 2642 000c 40F60F02 		movw	r2, #2063
 2643              	.LVL226:
2188:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2644              		.loc 1 2188 0
 2645 0010 1A40     		ands	r2, r3, r2
 2646              	.LVL227:
 2647 0012 0FD1     		bne	.L215
2191:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 2648              		.loc 1 2191 0
 2649 0014 13F0200F 		tst	r3, #32
 2650 0018 0CD0     		beq	.L215
2192:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != 0U)))
ARM GAS  /tmp/ccmyImrL.s 			page 125


 2651              		.loc 1 2192 0
 2652 001a 15F0200F 		tst	r5, #32
 2653 001e 02D1     		bne	.L216
2193:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2654              		.loc 1 2193 0
 2655 0020 10F0805F 		tst	r0, #268435456
 2656 0024 06D0     		beq	.L215
 2657              	.L216:
2195:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 2658              		.loc 1 2195 0
 2659 0026 E36E     		ldr	r3, [r4, #108]
 2660              	.LVL228:
 2661 0028 002B     		cmp	r3, #0
 2662 002a 00F0C680 		beq	.L214
2197:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 2663              		.loc 1 2197 0
 2664 002e 2046     		mov	r0, r4
 2665              	.LVL229:
 2666 0030 9847     		blx	r3
 2667              	.LVL230:
 2668 0032 70BD     		pop	{r4, r5, r6, pc}
 2669              	.LVL231:
 2670              	.L215:
2204:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
 2671              		.loc 1 2204 0
 2672 0034 002A     		cmp	r2, #0
 2673 0036 00F09480 		beq	.L218
2205:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
 2674              		.loc 1 2205 0
 2675 003a 664A     		ldr	r2, .L242
 2676              	.LVL232:
 2677 003c 0240     		ands	r2, r0, r2
 2678 003e 03D1     		bne	.L219
2206:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2679              		.loc 1 2206 0
 2680 0040 654E     		ldr	r6, .L242+4
 2681 0042 3542     		tst	r5, r6
 2682 0044 00F08D80 		beq	.L218
 2683              	.L219:
2209:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2684              		.loc 1 2209 0
 2685 0048 13F0010F 		tst	r3, #1
 2686 004c 09D0     		beq	.L220
2209:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2687              		.loc 1 2209 0 is_stmt 0 discriminator 1
 2688 004e 15F4807F 		tst	r5, #256
 2689 0052 06D0     		beq	.L220
2211:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2690              		.loc 1 2211 0 is_stmt 1
 2691 0054 0126     		movs	r6, #1
 2692 0056 0E62     		str	r6, [r1, #32]
2213:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 2693              		.loc 1 2213 0
 2694 0058 D4F88810 		ldr	r1, [r4, #136]
 2695 005c 3143     		orrs	r1, r1, r6
 2696 005e C4F88810 		str	r1, [r4, #136]
 2697              	.L220:
ARM GAS  /tmp/ccmyImrL.s 			page 126


2217:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2698              		.loc 1 2217 0
 2699 0062 13F0020F 		tst	r3, #2
 2700 0066 0BD0     		beq	.L221
2217:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2701              		.loc 1 2217 0 is_stmt 0 discriminator 1
 2702 0068 10F0010F 		tst	r0, #1
 2703 006c 08D0     		beq	.L221
2219:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2704              		.loc 1 2219 0 is_stmt 1
 2705 006e 2168     		ldr	r1, [r4]
 2706 0070 0226     		movs	r6, #2
 2707 0072 0E62     		str	r6, [r1, #32]
2221:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 2708              		.loc 1 2221 0
 2709 0074 D4F88810 		ldr	r1, [r4, #136]
 2710 0078 41F00401 		orr	r1, r1, #4
 2711 007c C4F88810 		str	r1, [r4, #136]
 2712              	.L221:
2225:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2713              		.loc 1 2225 0
 2714 0080 13F0040F 		tst	r3, #4
 2715 0084 0BD0     		beq	.L222
2225:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2716              		.loc 1 2225 0 is_stmt 0 discriminator 1
 2717 0086 10F0010F 		tst	r0, #1
 2718 008a 08D0     		beq	.L222
2227:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2719              		.loc 1 2227 0 is_stmt 1
 2720 008c 2168     		ldr	r1, [r4]
 2721 008e 0426     		movs	r6, #4
 2722 0090 0E62     		str	r6, [r1, #32]
2229:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 2723              		.loc 1 2229 0
 2724 0092 D4F88810 		ldr	r1, [r4, #136]
 2725 0096 41F00201 		orr	r1, r1, #2
 2726 009a C4F88810 		str	r1, [r4, #136]
 2727              	.L222:
2233:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
 2728              		.loc 1 2233 0
 2729 009e 13F0080F 		tst	r3, #8
 2730 00a2 0BD0     		beq	.L223
2234:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
 2731              		.loc 1 2234 0
 2732 00a4 15F0200F 		tst	r5, #32
 2733 00a8 00D1     		bne	.L224
2234:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
 2734              		.loc 1 2234 0 is_stmt 0 discriminator 1
 2735 00aa 3AB1     		cbz	r2, .L223
 2736              	.L224:
2237:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2737              		.loc 1 2237 0 is_stmt 1
 2738 00ac 2268     		ldr	r2, [r4]
 2739 00ae 0821     		movs	r1, #8
 2740 00b0 1162     		str	r1, [r2, #32]
2239:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 2741              		.loc 1 2239 0
ARM GAS  /tmp/ccmyImrL.s 			page 127


 2742 00b2 D4F88820 		ldr	r2, [r4, #136]
 2743 00b6 0A43     		orrs	r2, r2, r1
 2744 00b8 C4F88820 		str	r2, [r4, #136]
 2745              	.L223:
2243:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2746              		.loc 1 2243 0
 2747 00bc 13F4006F 		tst	r3, #2048
 2748 00c0 0CD0     		beq	.L225
2243:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2749              		.loc 1 2243 0 is_stmt 0 discriminator 1
 2750 00c2 15F0806F 		tst	r5, #67108864
 2751 00c6 09D0     		beq	.L225
2245:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2752              		.loc 1 2245 0 is_stmt 1
 2753 00c8 2268     		ldr	r2, [r4]
 2754 00ca 4FF40061 		mov	r1, #2048
 2755 00ce 1162     		str	r1, [r2, #32]
2247:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 2756              		.loc 1 2247 0
 2757 00d0 D4F88820 		ldr	r2, [r4, #136]
 2758 00d4 42F02002 		orr	r2, r2, #32
 2759 00d8 C4F88820 		str	r2, [r4, #136]
 2760              	.L225:
2251:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2761              		.loc 1 2251 0
 2762 00dc D4F88820 		ldr	r2, [r4, #136]
 2763 00e0 002A     		cmp	r2, #0
 2764 00e2 6AD0     		beq	.L214
2254:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 2765              		.loc 1 2254 0
 2766 00e4 13F0200F 		tst	r3, #32
 2767 00e8 09D0     		beq	.L226
2255:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 2768              		.loc 1 2255 0
 2769 00ea 15F0200F 		tst	r5, #32
 2770 00ee 02D1     		bne	.L227
2256:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 2771              		.loc 1 2256 0
 2772 00f0 10F0805F 		tst	r0, #268435456
 2773 00f4 03D0     		beq	.L226
 2774              	.L227:
2258:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 2775              		.loc 1 2258 0
 2776 00f6 E36E     		ldr	r3, [r4, #108]
 2777              	.LVL233:
 2778 00f8 0BB1     		cbz	r3, .L226
2260:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 2779              		.loc 1 2260 0
 2780 00fa 2046     		mov	r0, r4
 2781              	.LVL234:
 2782 00fc 9847     		blx	r3
 2783              	.LVL235:
 2784              	.L226:
2269:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 2785              		.loc 1 2269 0
 2786 00fe D4F88820 		ldr	r2, [r4, #136]
 2787              	.LVL236:
ARM GAS  /tmp/ccmyImrL.s 			page 128


2270:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 2788              		.loc 1 2270 0
 2789 0102 2368     		ldr	r3, [r4]
 2790 0104 9B68     		ldr	r3, [r3, #8]
 2791 0106 13F0400F 		tst	r3, #64
 2792 010a 02D1     		bne	.L228
2270:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 2793              		.loc 1 2270 0 is_stmt 0 discriminator 1
 2794 010c 12F0280F 		tst	r2, #40
 2795 0110 20D0     		beq	.L229
 2796              	.L228:
2276:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2797              		.loc 1 2276 0 is_stmt 1
 2798 0112 2046     		mov	r0, r4
 2799 0114 FFF7FEFF 		bl	UART_EndRxTransfer
 2800              	.LVL237:
2279:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 2801              		.loc 1 2279 0
 2802 0118 2368     		ldr	r3, [r4]
 2803 011a 9A68     		ldr	r2, [r3, #8]
 2804 011c 12F0400F 		tst	r2, #64
 2805 0120 14D0     		beq	.L230
2281:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2806              		.loc 1 2281 0
 2807 0122 9A68     		ldr	r2, [r3, #8]
 2808 0124 22F04002 		bic	r2, r2, #64
 2809 0128 9A60     		str	r2, [r3, #8]
2284:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           {
 2810              		.loc 1 2284 0
 2811 012a A36F     		ldr	r3, [r4, #120]
 2812 012c 53B1     		cbz	r3, .L231
2288:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2813              		.loc 1 2288 0
 2814 012e 2B4A     		ldr	r2, .L242+8
 2815 0130 1A65     		str	r2, [r3, #80]
2291:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             {
 2816              		.loc 1 2291 0
 2817 0132 A06F     		ldr	r0, [r4, #120]
 2818 0134 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2819              	.LVL238:
 2820 0138 0028     		cmp	r0, #0
 2821 013a 3ED0     		beq	.L214
2294:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 2822              		.loc 1 2294 0
 2823 013c A06F     		ldr	r0, [r4, #120]
 2824 013e 036D     		ldr	r3, [r0, #80]
 2825 0140 9847     		blx	r3
 2826              	.LVL239:
 2827 0142 70BD     		pop	{r4, r5, r6, pc}
 2828              	.LVL240:
 2829              	.L231:
2305:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2830              		.loc 1 2305 0
 2831 0144 2046     		mov	r0, r4
 2832 0146 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2833              	.LVL241:
 2834 014a 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccmyImrL.s 			page 129


 2835              	.LVL242:
 2836              	.L230:
2318:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2837              		.loc 1 2318 0
 2838 014c 2046     		mov	r0, r4
 2839 014e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2840              	.LVL243:
 2841 0152 70BD     		pop	{r4, r5, r6, pc}
 2842              	.LVL244:
 2843              	.L229:
2331:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2844              		.loc 1 2331 0
 2845 0154 2046     		mov	r0, r4
 2846 0156 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2847              	.LVL245:
2333:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 2848              		.loc 1 2333 0
 2849 015a 0023     		movs	r3, #0
 2850 015c C4F88830 		str	r3, [r4, #136]
 2851 0160 70BD     		pop	{r4, r5, r6, pc}
 2852              	.LVL246:
 2853              	.L218:
2341:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2854              		.loc 1 2341 0
 2855 0162 13F4801F 		tst	r3, #1048576
 2856 0166 02D0     		beq	.L232
2341:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2857              		.loc 1 2341 0 is_stmt 0 discriminator 1
 2858 0168 10F4800F 		tst	r0, #4194304
 2859 016c 0DD1     		bne	.L238
 2860              	.L232:
2359:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
 2861              		.loc 1 2359 0 is_stmt 1
 2862 016e 13F0800F 		tst	r3, #128
 2863 0172 11D0     		beq	.L233
2360:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != 0U)))
 2864              		.loc 1 2360 0
 2865 0174 15F0800F 		tst	r5, #128
 2866 0178 02D1     		bne	.L234
2361:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2867              		.loc 1 2361 0
 2868 017a 10F4000F 		tst	r0, #8388608
 2869 017e 0BD0     		beq	.L233
 2870              	.L234:
2363:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2871              		.loc 1 2363 0
 2872 0180 236F     		ldr	r3, [r4, #112]
 2873              	.LVL247:
 2874 0182 D3B1     		cbz	r3, .L214
2365:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 2875              		.loc 1 2365 0
 2876 0184 2046     		mov	r0, r4
 2877              	.LVL248:
 2878 0186 9847     		blx	r3
 2879              	.LVL249:
 2880 0188 70BD     		pop	{r4, r5, r6, pc}
 2881              	.LVL250:
ARM GAS  /tmp/ccmyImrL.s 			page 130


 2882              	.L238:
2343:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2883              		.loc 1 2343 0
 2884 018a 4FF48013 		mov	r3, #1048576
 2885              	.LVL251:
 2886 018e 0B62     		str	r3, [r1, #32]
2353:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2887              		.loc 1 2353 0
 2888 0190 2046     		mov	r0, r4
 2889              	.LVL252:
 2890 0192 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
 2891              	.LVL253:
2355:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 2892              		.loc 1 2355 0
 2893 0196 70BD     		pop	{r4, r5, r6, pc}
 2894              	.LVL254:
 2895              	.L233:
2371:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2896              		.loc 1 2371 0
 2897 0198 13F0400F 		tst	r3, #64
 2898 019c 02D0     		beq	.L235
2371:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2899              		.loc 1 2371 0 is_stmt 0 discriminator 1
 2900 019e 15F0400F 		tst	r5, #64
 2901 01a2 0BD1     		bne	.L239
 2902              	.L235:
2378:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2903              		.loc 1 2378 0 is_stmt 1
 2904 01a4 13F4000F 		tst	r3, #8388608
 2905 01a8 02D0     		beq	.L236
2378:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2906              		.loc 1 2378 0 is_stmt 0 discriminator 1
 2907 01aa 15F0804F 		tst	r5, #1073741824
 2908 01ae 09D1     		bne	.L240
 2909              	.L236:
2391:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2910              		.loc 1 2391 0 is_stmt 1
 2911 01b0 13F0807F 		tst	r3, #16777216
 2912 01b4 01D0     		beq	.L214
2391:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2913              		.loc 1 2391 0 is_stmt 0 discriminator 1
 2914 01b6 002D     		cmp	r5, #0
 2915 01b8 08DB     		blt	.L241
 2916              	.LVL255:
 2917              	.L214:
 2918 01ba 70BD     		pop	{r4, r5, r6, pc}
 2919              	.LVL256:
 2920              	.L239:
2373:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
 2921              		.loc 1 2373 0 is_stmt 1
 2922 01bc 2046     		mov	r0, r4
 2923              	.LVL257:
 2924 01be FFF7FEFF 		bl	UART_EndTransmit_IT
 2925              	.LVL258:
2374:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 2926              		.loc 1 2374 0
 2927 01c2 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccmyImrL.s 			page 131


 2928              	.LVL259:
 2929              	.L240:
2385:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2930              		.loc 1 2385 0
 2931 01c4 2046     		mov	r0, r4
 2932              	.LVL260:
 2933 01c6 FFF7FEFF 		bl	HAL_UARTEx_TxFifoEmptyCallback
 2934              	.LVL261:
2387:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 2935              		.loc 1 2387 0
 2936 01ca 70BD     		pop	{r4, r5, r6, pc}
 2937              	.LVL262:
 2938              	.L241:
2398:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2939              		.loc 1 2398 0
 2940 01cc 2046     		mov	r0, r4
 2941              	.LVL263:
 2942 01ce FFF7FEFF 		bl	HAL_UARTEx_RxFifoFullCallback
 2943              	.LVL264:
2400:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 2944              		.loc 1 2400 0
 2945 01d2 F2E7     		b	.L214
 2946              	.L243:
 2947              		.align	2
 2948              	.L242:
 2949 01d4 01000010 		.word	268435457
 2950 01d8 20010004 		.word	67109152
 2951 01dc 00000000 		.word	UART_DMAAbortOnError
 2952              		.cfi_endproc
 2953              	.LFE163:
 2955              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 2956              		.align	1
 2957              		.syntax unified
 2958              		.thumb
 2959              		.thumb_func
 2960              		.fpu fpv5-d16
 2962              	UART_DMAAbortOnError:
 2963              	.LFB194:
3502:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2964              		.loc 1 3502 0
 2965              		.cfi_startproc
 2966              		@ args = 0, pretend = 0, frame = 0
 2967              		@ frame_needed = 0, uses_anonymous_args = 0
 2968              	.LVL265:
 2969 0000 08B5     		push	{r3, lr}
 2970              	.LCFI23:
 2971              		.cfi_def_cfa_offset 8
 2972              		.cfi_offset 3, -8
 2973              		.cfi_offset 14, -4
3503:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2974              		.loc 1 3503 0
 2975 0002 806B     		ldr	r0, [r0, #56]
 2976              	.LVL266:
3504:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2977              		.loc 1 3504 0
 2978 0004 0023     		movs	r3, #0
 2979 0006 A0F85E30 		strh	r3, [r0, #94]	@ movhi
ARM GAS  /tmp/ccmyImrL.s 			page 132


3505:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2980              		.loc 1 3505 0
 2981 000a A0F85630 		strh	r3, [r0, #86]	@ movhi
3512:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2982              		.loc 1 3512 0
 2983 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2984              	.LVL267:
 2985 0012 08BD     		pop	{r3, pc}
 2986              		.cfi_endproc
 2987              	.LFE194:
 2989              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 2990              		.align	1
 2991              		.weak	HAL_UART_AbortCpltCallback
 2992              		.syntax unified
 2993              		.thumb
 2994              		.thumb_func
 2995              		.fpu fpv5-d16
 2997              	HAL_UART_AbortCpltCallback:
 2998              	.LFB169:
2485:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2999              		.loc 1 2485 0
 3000              		.cfi_startproc
 3001              		@ args = 0, pretend = 0, frame = 0
 3002              		@ frame_needed = 0, uses_anonymous_args = 0
 3003              		@ link register save eliminated.
 3004              	.LVL268:
 3005 0000 7047     		bx	lr
 3006              		.cfi_endproc
 3007              	.LFE169:
 3009              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 3010              		.align	1
 3011              		.global	HAL_UART_Abort_IT
 3012              		.syntax unified
 3013              		.thumb
 3014              		.thumb_func
 3015              		.fpu fpv5-d16
 3017              	HAL_UART_Abort_IT:
 3018              	.LFB160:
1860:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 3019              		.loc 1 1860 0
 3020              		.cfi_startproc
 3021              		@ args = 0, pretend = 0, frame = 0
 3022              		@ frame_needed = 0, uses_anonymous_args = 0
 3023              	.LVL269:
1860:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 3024              		.loc 1 1860 0
 3025 0000 10B5     		push	{r4, lr}
 3026              	.LCFI24:
 3027              		.cfi_def_cfa_offset 8
 3028              		.cfi_offset 4, -8
 3029              		.cfi_offset 14, -4
 3030 0002 0446     		mov	r4, r0
 3031              	.LVL270:
1864:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
 3032              		.loc 1 1864 0
 3033 0004 0268     		ldr	r2, [r0]
 3034 0006 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccmyImrL.s 			page 133


 3035 0008 23F4F073 		bic	r3, r3, #480
 3036 000c 1360     		str	r3, [r2]
1865:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3037              		.loc 1 1865 0
 3038 000e 0268     		ldr	r2, [r0]
 3039 0010 9168     		ldr	r1, [r2, #8]
 3040 0012 374B     		ldr	r3, .L263
 3041 0014 0B40     		ands	r3, r3, r1
 3042 0016 9360     		str	r3, [r2, #8]
1870:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3043              		.loc 1 1870 0
 3044 0018 436F     		ldr	r3, [r0, #116]
 3045 001a 33B1     		cbz	r3, .L248
1874:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 3046              		.loc 1 1874 0
 3047 001c 0268     		ldr	r2, [r0]
 3048 001e 9268     		ldr	r2, [r2, #8]
 3049 0020 12F0800F 		tst	r2, #128
 3050 0024 1DD0     		beq	.L249
1876:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 3051              		.loc 1 1876 0
 3052 0026 334A     		ldr	r2, .L263+4
 3053 0028 1A65     		str	r2, [r3, #80]
 3054              	.L248:
1884:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3055              		.loc 1 1884 0
 3056 002a A36F     		ldr	r3, [r4, #120]
 3057 002c 33B1     		cbz	r3, .L250
1888:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 3058              		.loc 1 1888 0
 3059 002e 2268     		ldr	r2, [r4]
 3060 0030 9268     		ldr	r2, [r2, #8]
 3061 0032 12F0400F 		tst	r2, #64
 3062 0036 17D0     		beq	.L251
1890:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 3063              		.loc 1 1890 0
 3064 0038 2F4A     		ldr	r2, .L263+8
 3065 003a 1A65     		str	r2, [r3, #80]
 3066              	.L250:
1899:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3067              		.loc 1 1899 0
 3068 003c 2368     		ldr	r3, [r4]
 3069 003e 9A68     		ldr	r2, [r3, #8]
 3070 0040 12F0800F 		tst	r2, #128
 3071 0044 13D0     		beq	.L256
1902:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3072              		.loc 1 1902 0
 3073 0046 9A68     		ldr	r2, [r3, #8]
 3074 0048 22F08002 		bic	r2, r2, #128
 3075 004c 9A60     		str	r2, [r3, #8]
1905:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 3076              		.loc 1 1905 0
 3077 004e 606F     		ldr	r0, [r4, #116]
 3078              	.LVL271:
 3079 0050 18B3     		cbz	r0, .L257
1911:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 3080              		.loc 1 1911 0
ARM GAS  /tmp/ccmyImrL.s 			page 134


 3081 0052 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3082              	.LVL272:
 3083 0056 10B3     		cbz	r0, .L258
1913:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 3084              		.loc 1 1913 0
 3085 0058 636F     		ldr	r3, [r4, #116]
 3086 005a 0022     		movs	r2, #0
 3087 005c 1A65     		str	r2, [r3, #80]
1861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3088              		.loc 1 1861 0
 3089 005e 0122     		movs	r2, #1
 3090 0060 06E0     		b	.L252
 3091              	.LVL273:
 3092              	.L249:
1880:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 3093              		.loc 1 1880 0
 3094 0062 0022     		movs	r2, #0
 3095 0064 1A65     		str	r2, [r3, #80]
 3096 0066 E0E7     		b	.L248
 3097              	.L251:
1894:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 3098              		.loc 1 1894 0
 3099 0068 0022     		movs	r2, #0
 3100 006a 1A65     		str	r2, [r3, #80]
 3101 006c E6E7     		b	.L250
 3102              	.L256:
1861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3103              		.loc 1 1861 0
 3104 006e 0122     		movs	r2, #1
 3105              	.LVL274:
 3106              	.L252:
1923:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3107              		.loc 1 1923 0
 3108 0070 2368     		ldr	r3, [r4]
 3109 0072 9968     		ldr	r1, [r3, #8]
 3110 0074 11F0400F 		tst	r1, #64
 3111 0078 0CD0     		beq	.L253
1925:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3112              		.loc 1 1925 0
 3113 007a 9968     		ldr	r1, [r3, #8]
 3114 007c 21F04001 		bic	r1, r1, #64
 3115 0080 9960     		str	r1, [r3, #8]
1928:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 3116              		.loc 1 1928 0
 3117 0082 A06F     		ldr	r0, [r4, #120]
 3118 0084 30B1     		cbz	r0, .L253
1934:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 3119              		.loc 1 1934 0
 3120 0086 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3121              	.LVL275:
 3122 008a 50B1     		cbz	r0, .L259
1936:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         abortcplt = 1U;
 3123              		.loc 1 1936 0
 3124 008c A36F     		ldr	r3, [r4, #120]
 3125 008e 0022     		movs	r2, #0
 3126 0090 1A65     		str	r2, [r3, #80]
 3127              	.LVL276:
ARM GAS  /tmp/ccmyImrL.s 			page 135


1937:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 3128              		.loc 1 1937 0
 3129 0092 0122     		movs	r2, #1
 3130              	.LVL277:
 3131              	.L253:
1947:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3132              		.loc 1 1947 0
 3133 0094 3AB9     		cbnz	r2, .L261
 3134              	.LVL278:
 3135              	.L254:
1987:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3136              		.loc 1 1987 0
 3137 0096 0020     		movs	r0, #0
 3138 0098 10BD     		pop	{r4, pc}
 3139              	.LVL279:
 3140              	.L257:
1861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3141              		.loc 1 1861 0
 3142 009a 0122     		movs	r2, #1
 3143 009c E8E7     		b	.L252
 3144              	.L258:
1917:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 3145              		.loc 1 1917 0
 3146 009e 0022     		movs	r2, #0
 3147 00a0 E6E7     		b	.L252
 3148              	.LVL280:
 3149              	.L259:
1941:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 3150              		.loc 1 1941 0
 3151 00a2 0022     		movs	r2, #0
 3152 00a4 F6E7     		b	.L253
 3153              	.LVL281:
 3154              	.L261:
1950:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = 0U;
 3155              		.loc 1 1950 0
 3156 00a6 0023     		movs	r3, #0
 3157 00a8 A4F85630 		strh	r3, [r4, #86]	@ movhi
1951:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3158              		.loc 1 1951 0
 3159 00ac A4F85E30 		strh	r3, [r4, #94]	@ movhi
1954:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxISR = NULL;
 3160              		.loc 1 1954 0
 3161 00b0 E366     		str	r3, [r4, #108]
1955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3162              		.loc 1 1955 0
 3163 00b2 2367     		str	r3, [r4, #112]
1958:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3164              		.loc 1 1958 0
 3165 00b4 C4F88830 		str	r3, [r4, #136]
1961:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3166              		.loc 1 1961 0
 3167 00b8 2368     		ldr	r3, [r4]
 3168 00ba 0F22     		movs	r2, #15
 3169              	.LVL282:
 3170 00bc 1A62     		str	r2, [r3, #32]
1964:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 3171              		.loc 1 1964 0
ARM GAS  /tmp/ccmyImrL.s 			page 136


 3172 00be 636E     		ldr	r3, [r4, #100]
 3173 00c0 B3F1005F 		cmp	r3, #536870912
 3174 00c4 0DD0     		beq	.L262
 3175              	.L255:
1970:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3176              		.loc 1 1970 0
 3177 00c6 2268     		ldr	r2, [r4]
 3178 00c8 9369     		ldr	r3, [r2, #24]
 3179 00ca 43F00803 		orr	r3, r3, #8
 3180 00ce 9361     		str	r3, [r2, #24]
1973:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3181              		.loc 1 1973 0
 3182 00d0 2023     		movs	r3, #32
 3183 00d2 C4F88030 		str	r3, [r4, #128]
1974:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3184              		.loc 1 1974 0
 3185 00d6 C4F88430 		str	r3, [r4, #132]
1982:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3186              		.loc 1 1982 0
 3187 00da 2046     		mov	r0, r4
 3188 00dc FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3189              	.LVL283:
 3190 00e0 D9E7     		b	.L254
 3191              	.L262:
1966:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 3192              		.loc 1 1966 0
 3193 00e2 2268     		ldr	r2, [r4]
 3194 00e4 9369     		ldr	r3, [r2, #24]
 3195 00e6 43F01003 		orr	r3, r3, #16
 3196 00ea 9361     		str	r3, [r2, #24]
 3197 00ec EBE7     		b	.L255
 3198              	.L264:
 3199 00ee 00BF     		.align	2
 3200              	.L263:
 3201 00f0 FEFF7FEF 		.word	-276824066
 3202 00f4 00000000 		.word	UART_DMATxAbortCallback
 3203 00f8 00000000 		.word	UART_DMARxAbortCallback
 3204              		.cfi_endproc
 3205              	.LFE160:
 3207              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 3208              		.align	1
 3209              		.syntax unified
 3210              		.thumb
 3211              		.thumb_func
 3212              		.fpu fpv5-d16
 3214              	UART_DMARxAbortCallback:
 3215              	.LFB196:
3579:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3216              		.loc 1 3579 0
 3217              		.cfi_startproc
 3218              		@ args = 0, pretend = 0, frame = 0
 3219              		@ frame_needed = 0, uses_anonymous_args = 0
 3220              	.LVL284:
 3221 0000 08B5     		push	{r3, lr}
 3222              	.LCFI25:
 3223              		.cfi_def_cfa_offset 8
 3224              		.cfi_offset 3, -8
ARM GAS  /tmp/ccmyImrL.s 			page 137


 3225              		.cfi_offset 14, -4
3580:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3226              		.loc 1 3580 0
 3227 0002 806B     		ldr	r0, [r0, #56]
 3228              	.LVL285:
3582:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3229              		.loc 1 3582 0
 3230 0004 836F     		ldr	r3, [r0, #120]
 3231 0006 0022     		movs	r2, #0
 3232 0008 1A65     		str	r2, [r3, #80]
3585:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3233              		.loc 1 3585 0
 3234 000a 436F     		ldr	r3, [r0, #116]
 3235 000c 13B1     		cbz	r3, .L266
3587:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 3236              		.loc 1 3587 0
 3237 000e 1B6D     		ldr	r3, [r3, #80]
 3238 0010 03B1     		cbz	r3, .L266
 3239              	.LVL286:
 3240              	.L265:
 3241 0012 08BD     		pop	{r3, pc}
 3242              	.LVL287:
 3243              	.L266:
3594:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3244              		.loc 1 3594 0
 3245 0014 0023     		movs	r3, #0
 3246 0016 A0F85630 		strh	r3, [r0, #86]	@ movhi
3595:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3247              		.loc 1 3595 0
 3248 001a A0F85E30 		strh	r3, [r0, #94]	@ movhi
3598:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3249              		.loc 1 3598 0
 3250 001e C0F88830 		str	r3, [r0, #136]
3601:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3251              		.loc 1 3601 0
 3252 0022 0368     		ldr	r3, [r0]
 3253 0024 0F22     		movs	r2, #15
 3254 0026 1A62     		str	r2, [r3, #32]
3604:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3255              		.loc 1 3604 0
 3256 0028 0268     		ldr	r2, [r0]
 3257 002a 9369     		ldr	r3, [r2, #24]
 3258 002c 43F00803 		orr	r3, r3, #8
 3259 0030 9361     		str	r3, [r2, #24]
3607:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3260              		.loc 1 3607 0
 3261 0032 2023     		movs	r3, #32
 3262 0034 C0F88030 		str	r3, [r0, #128]
3608:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3263              		.loc 1 3608 0
 3264 0038 C0F88430 		str	r3, [r0, #132]
3616:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3265              		.loc 1 3616 0
 3266 003c FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3267              	.LVL288:
 3268 0040 E7E7     		b	.L265
 3269              		.cfi_endproc
ARM GAS  /tmp/ccmyImrL.s 			page 138


 3270              	.LFE196:
 3272              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 3273              		.align	1
 3274              		.syntax unified
 3275              		.thumb
 3276              		.thumb_func
 3277              		.fpu fpv5-d16
 3279              	UART_DMATxAbortCallback:
 3280              	.LFB195:
3525:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3281              		.loc 1 3525 0
 3282              		.cfi_startproc
 3283              		@ args = 0, pretend = 0, frame = 0
 3284              		@ frame_needed = 0, uses_anonymous_args = 0
 3285              	.LVL289:
 3286 0000 08B5     		push	{r3, lr}
 3287              	.LCFI26:
 3288              		.cfi_def_cfa_offset 8
 3289              		.cfi_offset 3, -8
 3290              		.cfi_offset 14, -4
3526:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3291              		.loc 1 3526 0
 3292 0002 806B     		ldr	r0, [r0, #56]
 3293              	.LVL290:
3528:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3294              		.loc 1 3528 0
 3295 0004 436F     		ldr	r3, [r0, #116]
 3296 0006 0022     		movs	r2, #0
 3297 0008 1A65     		str	r2, [r3, #80]
3531:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3298              		.loc 1 3531 0
 3299 000a 836F     		ldr	r3, [r0, #120]
 3300 000c 13B1     		cbz	r3, .L270
3533:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 3301              		.loc 1 3533 0
 3302 000e 1B6D     		ldr	r3, [r3, #80]
 3303 0010 03B1     		cbz	r3, .L270
 3304              	.LVL291:
 3305              	.L269:
 3306 0012 08BD     		pop	{r3, pc}
 3307              	.LVL292:
 3308              	.L270:
3540:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3309              		.loc 1 3540 0
 3310 0014 0023     		movs	r3, #0
 3311 0016 A0F85630 		strh	r3, [r0, #86]	@ movhi
3541:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3312              		.loc 1 3541 0
 3313 001a A0F85E30 		strh	r3, [r0, #94]	@ movhi
3544:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3314              		.loc 1 3544 0
 3315 001e C0F88830 		str	r3, [r0, #136]
3547:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3316              		.loc 1 3547 0
 3317 0022 0368     		ldr	r3, [r0]
 3318 0024 0F22     		movs	r2, #15
 3319 0026 1A62     		str	r2, [r3, #32]
ARM GAS  /tmp/ccmyImrL.s 			page 139


3550:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3320              		.loc 1 3550 0
 3321 0028 436E     		ldr	r3, [r0, #100]
 3322 002a B3F1005F 		cmp	r3, #536870912
 3323 002e 07D0     		beq	.L274
 3324              	.L272:
3556:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3325              		.loc 1 3556 0
 3326 0030 2023     		movs	r3, #32
 3327 0032 C0F88030 		str	r3, [r0, #128]
3557:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3328              		.loc 1 3557 0
 3329 0036 C0F88430 		str	r3, [r0, #132]
3565:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3330              		.loc 1 3565 0
 3331 003a FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3332              	.LVL293:
 3333 003e E8E7     		b	.L269
 3334              	.LVL294:
 3335              	.L274:
3552:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 3336              		.loc 1 3552 0
 3337 0040 0268     		ldr	r2, [r0]
 3338 0042 9369     		ldr	r3, [r2, #24]
 3339 0044 43F01003 		orr	r3, r3, #16
 3340 0048 9361     		str	r3, [r2, #24]
 3341 004a F1E7     		b	.L272
 3342              		.cfi_endproc
 3343              	.LFE195:
 3345              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3346              		.align	1
 3347              		.weak	HAL_UART_AbortTransmitCpltCallback
 3348              		.syntax unified
 3349              		.thumb
 3350              		.thumb_func
 3351              		.fpu fpv5-d16
 3353              	HAL_UART_AbortTransmitCpltCallback:
 3354              	.LFB170:
2500:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3355              		.loc 1 2500 0
 3356              		.cfi_startproc
 3357              		@ args = 0, pretend = 0, frame = 0
 3358              		@ frame_needed = 0, uses_anonymous_args = 0
 3359              		@ link register save eliminated.
 3360              	.LVL295:
 3361 0000 7047     		bx	lr
 3362              		.cfi_endproc
 3363              	.LFE170:
 3365              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3366              		.align	1
 3367              		.global	HAL_UART_AbortTransmit_IT
 3368              		.syntax unified
 3369              		.thumb
 3370              		.thumb_func
 3371              		.fpu fpv5-d16
 3373              	HAL_UART_AbortTransmit_IT:
 3374              	.LFB161:
ARM GAS  /tmp/ccmyImrL.s 			page 140


2004:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable interrupts */
 3375              		.loc 1 2004 0
 3376              		.cfi_startproc
 3377              		@ args = 0, pretend = 0, frame = 0
 3378              		@ frame_needed = 0, uses_anonymous_args = 0
 3379              	.LVL296:
2004:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable interrupts */
 3380              		.loc 1 2004 0
 3381 0000 10B5     		push	{r4, lr}
 3382              	.LCFI27:
 3383              		.cfi_def_cfa_offset 8
 3384              		.cfi_offset 4, -8
 3385              		.cfi_offset 14, -4
 3386 0002 0446     		mov	r4, r0
2006:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 3387              		.loc 1 2006 0
 3388 0004 0268     		ldr	r2, [r0]
 3389 0006 1368     		ldr	r3, [r2]
 3390 0008 23F0C003 		bic	r3, r3, #192
 3391 000c 1360     		str	r3, [r2]
2007:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3392              		.loc 1 2007 0
 3393 000e 0268     		ldr	r2, [r0]
 3394 0010 9368     		ldr	r3, [r2, #8]
 3395 0012 23F40003 		bic	r3, r3, #8388608
 3396 0016 9360     		str	r3, [r2, #8]
2010:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3397              		.loc 1 2010 0
 3398 0018 0368     		ldr	r3, [r0]
 3399 001a 9A68     		ldr	r2, [r3, #8]
 3400 001c 12F0800F 		tst	r2, #128
 3401 0020 19D0     		beq	.L277
2012:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3402              		.loc 1 2012 0
 3403 0022 9A68     		ldr	r2, [r3, #8]
 3404 0024 22F08002 		bic	r2, r2, #128
 3405 0028 9A60     		str	r2, [r3, #8]
2015:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 3406              		.loc 1 2015 0
 3407 002a 436F     		ldr	r3, [r0, #116]
 3408 002c 4BB1     		cbz	r3, .L278
2019:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3409              		.loc 1 2019 0
 3410 002e 144A     		ldr	r2, .L283
 3411 0030 1A65     		str	r2, [r3, #80]
2022:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 3412              		.loc 1 2022 0
 3413 0032 406F     		ldr	r0, [r0, #116]
 3414              	.LVL297:
 3415 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3416              	.LVL298:
 3417 0038 D8B1     		cbz	r0, .L279
2025:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 3418              		.loc 1 2025 0
 3419 003a 606F     		ldr	r0, [r4, #116]
 3420 003c 036D     		ldr	r3, [r0, #80]
 3421 003e 9847     		blx	r3
ARM GAS  /tmp/ccmyImrL.s 			page 141


 3422              	.LVL299:
 3423 0040 17E0     		b	.L279
 3424              	.LVL300:
 3425              	.L278:
2031:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3426              		.loc 1 2031 0
 3427 0042 0023     		movs	r3, #0
 3428 0044 A0F85630 		strh	r3, [r0, #86]	@ movhi
2034:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3429              		.loc 1 2034 0
 3430 0048 0367     		str	r3, [r0, #112]
2037:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3431              		.loc 1 2037 0
 3432 004a 2023     		movs	r3, #32
 3433 004c C0F88030 		str	r3, [r0, #128]
2045:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3434              		.loc 1 2045 0
 3435 0050 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3436              	.LVL301:
 3437 0054 0DE0     		b	.L279
 3438              	.LVL302:
 3439              	.L277:
2052:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3440              		.loc 1 2052 0
 3441 0056 0022     		movs	r2, #0
 3442 0058 A0F85620 		strh	r2, [r0, #86]	@ movhi
2055:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3443              		.loc 1 2055 0
 3444 005c 0267     		str	r2, [r0, #112]
2058:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 3445              		.loc 1 2058 0
 3446 005e 426E     		ldr	r2, [r0, #100]
 3447 0060 B2F1005F 		cmp	r2, #536870912
 3448 0064 07D0     		beq	.L282
 3449              	.L280:
2064:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3450              		.loc 1 2064 0
 3451 0066 2023     		movs	r3, #32
 3452 0068 C4F88030 		str	r3, [r4, #128]
2072:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3453              		.loc 1 2072 0
 3454 006c 2046     		mov	r0, r4
 3455              	.LVL303:
 3456 006e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3457              	.LVL304:
 3458              	.L279:
2077:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3459              		.loc 1 2077 0
 3460 0072 0020     		movs	r0, #0
 3461 0074 10BD     		pop	{r4, pc}
 3462              	.LVL305:
 3463              	.L282:
2060:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 3464              		.loc 1 2060 0
 3465 0076 9A69     		ldr	r2, [r3, #24]
 3466 0078 42F01002 		orr	r2, r2, #16
 3467 007c 9A61     		str	r2, [r3, #24]
ARM GAS  /tmp/ccmyImrL.s 			page 142


 3468 007e F2E7     		b	.L280
 3469              	.L284:
 3470              		.align	2
 3471              	.L283:
 3472 0080 00000000 		.word	UART_DMATxOnlyAbortCallback
 3473              		.cfi_endproc
 3474              	.LFE161:
 3476              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 3477              		.align	1
 3478              		.syntax unified
 3479              		.thumb
 3480              		.thumb_func
 3481              		.fpu fpv5-d16
 3483              	UART_DMATxOnlyAbortCallback:
 3484              	.LFB197:
3630:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3485              		.loc 1 3630 0
 3486              		.cfi_startproc
 3487              		@ args = 0, pretend = 0, frame = 0
 3488              		@ frame_needed = 0, uses_anonymous_args = 0
 3489              	.LVL306:
 3490 0000 08B5     		push	{r3, lr}
 3491              	.LCFI28:
 3492              		.cfi_def_cfa_offset 8
 3493              		.cfi_offset 3, -8
 3494              		.cfi_offset 14, -4
3631:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3495              		.loc 1 3631 0
 3496 0002 806B     		ldr	r0, [r0, #56]
 3497              	.LVL307:
3633:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3498              		.loc 1 3633 0
 3499 0004 0023     		movs	r3, #0
 3500 0006 A0F85630 		strh	r3, [r0, #86]	@ movhi
3636:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3501              		.loc 1 3636 0
 3502 000a 436E     		ldr	r3, [r0, #100]
 3503 000c B3F1005F 		cmp	r3, #536870912
 3504 0010 05D0     		beq	.L288
 3505              	.L286:
3642:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3506              		.loc 1 3642 0
 3507 0012 2023     		movs	r3, #32
 3508 0014 C0F88030 		str	r3, [r0, #128]
3650:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3509              		.loc 1 3650 0
 3510 0018 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3511              	.LVL308:
 3512 001c 08BD     		pop	{r3, pc}
 3513              	.LVL309:
 3514              	.L288:
3638:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 3515              		.loc 1 3638 0
 3516 001e 0268     		ldr	r2, [r0]
 3517 0020 9369     		ldr	r3, [r2, #24]
 3518 0022 43F01003 		orr	r3, r3, #16
 3519 0026 9361     		str	r3, [r2, #24]
ARM GAS  /tmp/ccmyImrL.s 			page 143


 3520 0028 F3E7     		b	.L286
 3521              		.cfi_endproc
 3522              	.LFE197:
 3524              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 3525              		.align	1
 3526              		.weak	HAL_UART_AbortReceiveCpltCallback
 3527              		.syntax unified
 3528              		.thumb
 3529              		.thumb_func
 3530              		.fpu fpv5-d16
 3532              	HAL_UART_AbortReceiveCpltCallback:
 3533              	.LFB171:
2515:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3534              		.loc 1 2515 0
 3535              		.cfi_startproc
 3536              		@ args = 0, pretend = 0, frame = 0
 3537              		@ frame_needed = 0, uses_anonymous_args = 0
 3538              		@ link register save eliminated.
 3539              	.LVL310:
 3540 0000 7047     		bx	lr
 3541              		.cfi_endproc
 3542              	.LFE171:
 3544              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3545              		.align	1
 3546              		.global	HAL_UART_AbortReceive_IT
 3547              		.syntax unified
 3548              		.thumb
 3549              		.thumb_func
 3550              		.fpu fpv5-d16
 3552              	HAL_UART_AbortReceive_IT:
 3553              	.LFB162:
2094:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3554              		.loc 1 2094 0
 3555              		.cfi_startproc
 3556              		@ args = 0, pretend = 0, frame = 0
 3557              		@ frame_needed = 0, uses_anonymous_args = 0
 3558              	.LVL311:
2094:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3559              		.loc 1 2094 0
 3560 0000 10B5     		push	{r4, lr}
 3561              	.LCFI29:
 3562              		.cfi_def_cfa_offset 8
 3563              		.cfi_offset 4, -8
 3564              		.cfi_offset 14, -4
 3565 0002 0446     		mov	r4, r0
2096:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 3566              		.loc 1 2096 0
 3567 0004 0268     		ldr	r2, [r0]
 3568 0006 1368     		ldr	r3, [r2]
 3569 0008 23F49073 		bic	r3, r3, #288
 3570 000c 1360     		str	r3, [r2]
2097:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3571              		.loc 1 2097 0
 3572 000e 0268     		ldr	r2, [r0]
 3573 0010 9168     		ldr	r1, [r2, #8]
 3574 0012 1C4B     		ldr	r3, .L296
 3575 0014 0B40     		ands	r3, r3, r1
ARM GAS  /tmp/ccmyImrL.s 			page 144


 3576 0016 9360     		str	r3, [r2, #8]
2100:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3577              		.loc 1 2100 0
 3578 0018 0368     		ldr	r3, [r0]
 3579 001a 9A68     		ldr	r2, [r3, #8]
 3580 001c 12F0400F 		tst	r2, #64
 3581 0020 23D0     		beq	.L291
2102:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3582              		.loc 1 2102 0
 3583 0022 9A68     		ldr	r2, [r3, #8]
 3584 0024 22F04002 		bic	r2, r2, #64
 3585 0028 9A60     		str	r2, [r3, #8]
2105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 3586              		.loc 1 2105 0
 3587 002a 836F     		ldr	r3, [r0, #120]
 3588 002c 5BB1     		cbz	r3, .L292
2109:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3589              		.loc 1 2109 0
 3590 002e 164A     		ldr	r2, .L296+4
 3591 0030 1A65     		str	r2, [r3, #80]
2112:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 3592              		.loc 1 2112 0
 3593 0032 806F     		ldr	r0, [r0, #120]
 3594              	.LVL312:
 3595 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3596              	.LVL313:
 3597 0038 08B9     		cbnz	r0, .L295
 3598              	.L293:
2170:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3599              		.loc 1 2170 0
 3600 003a 0020     		movs	r0, #0
 3601 003c 10BD     		pop	{r4, pc}
 3602              	.LVL314:
 3603              	.L295:
2115:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 3604              		.loc 1 2115 0
 3605 003e A06F     		ldr	r0, [r4, #120]
 3606 0040 036D     		ldr	r3, [r0, #80]
 3607 0042 9847     		blx	r3
 3608              	.LVL315:
 3609 0044 F9E7     		b	.L293
 3610              	.LVL316:
 3611              	.L292:
2121:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3612              		.loc 1 2121 0
 3613 0046 0023     		movs	r3, #0
 3614 0048 A0F85E30 		strh	r3, [r0, #94]	@ movhi
2124:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3615              		.loc 1 2124 0
 3616 004c 8365     		str	r3, [r0, #88]
2127:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3617              		.loc 1 2127 0
 3618 004e 0368     		ldr	r3, [r0]
 3619 0050 0F22     		movs	r2, #15
 3620 0052 1A62     		str	r2, [r3, #32]
2130:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3621              		.loc 1 2130 0
ARM GAS  /tmp/ccmyImrL.s 			page 145


 3622 0054 0268     		ldr	r2, [r0]
 3623 0056 9369     		ldr	r3, [r2, #24]
 3624 0058 43F00803 		orr	r3, r3, #8
 3625 005c 9361     		str	r3, [r2, #24]
2133:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3626              		.loc 1 2133 0
 3627 005e 2023     		movs	r3, #32
 3628 0060 C0F88430 		str	r3, [r0, #132]
2141:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3629              		.loc 1 2141 0
 3630 0064 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3631              	.LVL317:
 3632 0068 E7E7     		b	.L293
 3633              	.LVL318:
 3634              	.L291:
2148:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3635              		.loc 1 2148 0
 3636 006a 0022     		movs	r2, #0
 3637 006c A0F85E20 		strh	r2, [r0, #94]	@ movhi
2151:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3638              		.loc 1 2151 0
 3639 0070 8265     		str	r2, [r0, #88]
2154:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3640              		.loc 1 2154 0
 3641 0072 0F22     		movs	r2, #15
 3642 0074 1A62     		str	r2, [r3, #32]
2157:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3643              		.loc 1 2157 0
 3644 0076 2023     		movs	r3, #32
 3645 0078 C0F88430 		str	r3, [r0, #132]
2165:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3646              		.loc 1 2165 0
 3647 007c FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3648              	.LVL319:
 3649 0080 DBE7     		b	.L293
 3650              	.L297:
 3651 0082 00BF     		.align	2
 3652              	.L296:
 3653 0084 FEFFFFEF 		.word	-268435458
 3654 0088 00000000 		.word	UART_DMARxOnlyAbortCallback
 3655              		.cfi_endproc
 3656              	.LFE162:
 3658              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 3659              		.align	1
 3660              		.syntax unified
 3661              		.thumb
 3662              		.thumb_func
 3663              		.fpu fpv5-d16
 3665              	UART_DMARxOnlyAbortCallback:
 3666              	.LFB198:
3663:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3667              		.loc 1 3663 0
 3668              		.cfi_startproc
 3669              		@ args = 0, pretend = 0, frame = 0
 3670              		@ frame_needed = 0, uses_anonymous_args = 0
 3671              	.LVL320:
 3672 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccmyImrL.s 			page 146


 3673              	.LCFI30:
 3674              		.cfi_def_cfa_offset 8
 3675              		.cfi_offset 3, -8
 3676              		.cfi_offset 14, -4
3664:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3677              		.loc 1 3664 0
 3678 0002 806B     		ldr	r0, [r0, #56]
 3679              	.LVL321:
3666:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3680              		.loc 1 3666 0
 3681 0004 0023     		movs	r3, #0
 3682 0006 A0F85E30 		strh	r3, [r0, #94]	@ movhi
3669:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3683              		.loc 1 3669 0
 3684 000a 0368     		ldr	r3, [r0]
 3685 000c 0F22     		movs	r2, #15
 3686 000e 1A62     		str	r2, [r3, #32]
3672:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3687              		.loc 1 3672 0
 3688 0010 0268     		ldr	r2, [r0]
 3689 0012 9369     		ldr	r3, [r2, #24]
 3690 0014 43F00803 		orr	r3, r3, #8
 3691 0018 9361     		str	r3, [r2, #24]
3675:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3692              		.loc 1 3675 0
 3693 001a 2023     		movs	r3, #32
 3694 001c C0F88430 		str	r3, [r0, #132]
3683:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3695              		.loc 1 3683 0
 3696 0020 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3697              	.LVL322:
 3698 0024 08BD     		pop	{r3, pc}
 3699              		.cfi_endproc
 3700              	.LFE198:
 3702              		.section	.text.HAL_UART_ReceiverTimeout_Config,"ax",%progbits
 3703              		.align	1
 3704              		.global	HAL_UART_ReceiverTimeout_Config
 3705              		.syntax unified
 3706              		.thumb
 3707              		.thumb_func
 3708              		.fpu fpv5-d16
 3710              	HAL_UART_ReceiverTimeout_Config:
 3711              	.LFB172:
2562:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 3712              		.loc 1 2562 0
 3713              		.cfi_startproc
 3714              		@ args = 0, pretend = 0, frame = 0
 3715              		@ frame_needed = 0, uses_anonymous_args = 0
 3716              		@ link register save eliminated.
 3717              	.LVL323:
2563:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3718              		.loc 1 2563 0
 3719 0000 0268     		ldr	r2, [r0]
 3720 0002 044B     		ldr	r3, .L302
 3721 0004 9A42     		cmp	r2, r3
 3722 0006 04D0     		beq	.L300
2566:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
ARM GAS  /tmp/ccmyImrL.s 			page 147


 3723              		.loc 1 2566 0
 3724 0008 5369     		ldr	r3, [r2, #20]
 3725 000a 03F07F43 		and	r3, r3, #-16777216
 3726 000e 1943     		orrs	r1, r1, r3
 3727              	.LVL324:
 3728 0010 5161     		str	r1, [r2, #20]
 3729              	.L300:
 3730 0012 7047     		bx	lr
 3731              	.L303:
 3732              		.align	2
 3733              	.L302:
 3734 0014 000C0058 		.word	1476398080
 3735              		.cfi_endproc
 3736              	.LFE172:
 3738              		.section	.text.HAL_UART_EnableReceiverTimeout,"ax",%progbits
 3739              		.align	1
 3740              		.global	HAL_UART_EnableReceiverTimeout
 3741              		.syntax unified
 3742              		.thumb
 3743              		.thumb_func
 3744              		.fpu fpv5-d16
 3746              	HAL_UART_EnableReceiverTimeout:
 3747              	.LFB173:
2577:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 3748              		.loc 1 2577 0
 3749              		.cfi_startproc
 3750              		@ args = 0, pretend = 0, frame = 0
 3751              		@ frame_needed = 0, uses_anonymous_args = 0
 3752              		@ link register save eliminated.
 3753              	.LVL325:
2578:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3754              		.loc 1 2578 0
 3755 0000 0368     		ldr	r3, [r0]
 3756 0002 114A     		ldr	r2, .L310
 3757 0004 9342     		cmp	r3, r2
 3758 0006 1BD0     		beq	.L306
2580:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 3759              		.loc 1 2580 0
 3760 0008 D0F88020 		ldr	r2, [r0, #128]
 3761 000c 202A     		cmp	r2, #32
 3762 000e 01D0     		beq	.L309
2599:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 3763              		.loc 1 2599 0
 3764 0010 0220     		movs	r0, #2
 3765              	.LVL326:
 3766 0012 7047     		bx	lr
 3767              	.LVL327:
 3768              	.L309:
2583:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3769              		.loc 1 2583 0
 3770 0014 90F87C20 		ldrb	r2, [r0, #124]	@ zero_extendqisi2
 3771 0018 012A     		cmp	r2, #1
 3772 001a 13D0     		beq	.L308
2583:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3773              		.loc 1 2583 0 is_stmt 0 discriminator 2
 3774 001c 0122     		movs	r2, #1
 3775 001e 80F87C20 		strb	r2, [r0, #124]
ARM GAS  /tmp/ccmyImrL.s 			page 148


2585:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3776              		.loc 1 2585 0 is_stmt 1 discriminator 2
 3777 0022 2422     		movs	r2, #36
 3778 0024 C0F88020 		str	r2, [r0, #128]
2588:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3779              		.loc 1 2588 0 discriminator 2
 3780 0028 5A68     		ldr	r2, [r3, #4]
 3781 002a 42F40002 		orr	r2, r2, #8388608
 3782 002e 5A60     		str	r2, [r3, #4]
2590:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3783              		.loc 1 2590 0 discriminator 2
 3784 0030 2023     		movs	r3, #32
 3785 0032 C0F88030 		str	r3, [r0, #128]
2593:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3786              		.loc 1 2593 0 discriminator 2
 3787 0036 0023     		movs	r3, #0
 3788 0038 80F87C30 		strb	r3, [r0, #124]
2595:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 3789              		.loc 1 2595 0 discriminator 2
 3790 003c 1846     		mov	r0, r3
 3791              	.LVL328:
 3792 003e 7047     		bx	lr
 3793              	.LVL329:
 3794              	.L306:
2604:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 3795              		.loc 1 2604 0
 3796 0040 0120     		movs	r0, #1
 3797              	.LVL330:
 3798 0042 7047     		bx	lr
 3799              	.LVL331:
 3800              	.L308:
2583:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3801              		.loc 1 2583 0
 3802 0044 0220     		movs	r0, #2
 3803              	.LVL332:
2606:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3804              		.loc 1 2606 0
 3805 0046 7047     		bx	lr
 3806              	.L311:
 3807              		.align	2
 3808              	.L310:
 3809 0048 000C0058 		.word	1476398080
 3810              		.cfi_endproc
 3811              	.LFE173:
 3813              		.section	.text.HAL_UART_DisableReceiverTimeout,"ax",%progbits
 3814              		.align	1
 3815              		.global	HAL_UART_DisableReceiverTimeout
 3816              		.syntax unified
 3817              		.thumb
 3818              		.thumb_func
 3819              		.fpu fpv5-d16
 3821              	HAL_UART_DisableReceiverTimeout:
 3822              	.LFB174:
2615:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 3823              		.loc 1 2615 0
 3824              		.cfi_startproc
 3825              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccmyImrL.s 			page 149


 3826              		@ frame_needed = 0, uses_anonymous_args = 0
 3827              		@ link register save eliminated.
 3828              	.LVL333:
2616:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3829              		.loc 1 2616 0
 3830 0000 0368     		ldr	r3, [r0]
 3831 0002 114A     		ldr	r2, .L318
 3832 0004 9342     		cmp	r3, r2
 3833 0006 1BD0     		beq	.L314
2618:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 3834              		.loc 1 2618 0
 3835 0008 D0F88020 		ldr	r2, [r0, #128]
 3836 000c 202A     		cmp	r2, #32
 3837 000e 01D0     		beq	.L317
2637:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 3838              		.loc 1 2637 0
 3839 0010 0220     		movs	r0, #2
 3840              	.LVL334:
 3841 0012 7047     		bx	lr
 3842              	.LVL335:
 3843              	.L317:
2621:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3844              		.loc 1 2621 0
 3845 0014 90F87C20 		ldrb	r2, [r0, #124]	@ zero_extendqisi2
 3846 0018 012A     		cmp	r2, #1
 3847 001a 13D0     		beq	.L316
2621:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3848              		.loc 1 2621 0 is_stmt 0 discriminator 2
 3849 001c 0122     		movs	r2, #1
 3850 001e 80F87C20 		strb	r2, [r0, #124]
2623:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3851              		.loc 1 2623 0 is_stmt 1 discriminator 2
 3852 0022 2422     		movs	r2, #36
 3853 0024 C0F88020 		str	r2, [r0, #128]
2626:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3854              		.loc 1 2626 0 discriminator 2
 3855 0028 5A68     		ldr	r2, [r3, #4]
 3856 002a 22F40002 		bic	r2, r2, #8388608
 3857 002e 5A60     		str	r2, [r3, #4]
2628:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3858              		.loc 1 2628 0 discriminator 2
 3859 0030 2023     		movs	r3, #32
 3860 0032 C0F88030 		str	r3, [r0, #128]
2631:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3861              		.loc 1 2631 0 discriminator 2
 3862 0036 0023     		movs	r3, #0
 3863 0038 80F87C30 		strb	r3, [r0, #124]
2633:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 3864              		.loc 1 2633 0 discriminator 2
 3865 003c 1846     		mov	r0, r3
 3866              	.LVL336:
 3867 003e 7047     		bx	lr
 3868              	.LVL337:
 3869              	.L314:
2642:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 3870              		.loc 1 2642 0
 3871 0040 0120     		movs	r0, #1
ARM GAS  /tmp/ccmyImrL.s 			page 150


 3872              	.LVL338:
 3873 0042 7047     		bx	lr
 3874              	.LVL339:
 3875              	.L316:
2621:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3876              		.loc 1 2621 0
 3877 0044 0220     		movs	r0, #2
 3878              	.LVL340:
2644:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3879              		.loc 1 2644 0
 3880 0046 7047     		bx	lr
 3881              	.L319:
 3882              		.align	2
 3883              	.L318:
 3884 0048 000C0058 		.word	1476398080
 3885              		.cfi_endproc
 3886              	.LFE174:
 3888              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3889              		.align	1
 3890              		.global	HAL_MultiProcessor_EnterMuteMode
 3891              		.syntax unified
 3892              		.thumb
 3893              		.thumb_func
 3894              		.fpu fpv5-d16
 3896              	HAL_MultiProcessor_EnterMuteMode:
 3897              	.LFB177:
2693:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 3898              		.loc 1 2693 0
 3899              		.cfi_startproc
 3900              		@ args = 0, pretend = 0, frame = 0
 3901              		@ frame_needed = 0, uses_anonymous_args = 0
 3902              		@ link register save eliminated.
 3903              	.LVL341:
2694:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 3904              		.loc 1 2694 0
 3905 0000 0268     		ldr	r2, [r0]
 3906 0002 9369     		ldr	r3, [r2, #24]
 3907 0004 43F00403 		orr	r3, r3, #4
 3908 0008 9361     		str	r3, [r2, #24]
 3909 000a 7047     		bx	lr
 3910              		.cfi_endproc
 3911              	.LFE177:
 3913              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3914              		.align	1
 3915              		.global	HAL_HalfDuplex_EnableTransmitter
 3916              		.syntax unified
 3917              		.thumb
 3918              		.thumb_func
 3919              		.fpu fpv5-d16
 3921              	HAL_HalfDuplex_EnableTransmitter:
 3922              	.LFB178:
2703:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 3923              		.loc 1 2703 0
 3924              		.cfi_startproc
 3925              		@ args = 0, pretend = 0, frame = 0
 3926              		@ frame_needed = 0, uses_anonymous_args = 0
 3927              		@ link register save eliminated.
ARM GAS  /tmp/ccmyImrL.s 			page 151


 3928              	.LVL342:
2704:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3929              		.loc 1 2704 0
 3930 0000 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 3931 0004 012B     		cmp	r3, #1
 3932 0006 17D0     		beq	.L323
2704:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3933              		.loc 1 2704 0 is_stmt 0 discriminator 2
 3934 0008 0123     		movs	r3, #1
 3935 000a 80F87C30 		strb	r3, [r0, #124]
2705:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3936              		.loc 1 2705 0 is_stmt 1 discriminator 2
 3937 000e 2423     		movs	r3, #36
 3938 0010 C0F88030 		str	r3, [r0, #128]
2708:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3939              		.loc 1 2708 0 discriminator 2
 3940 0014 0268     		ldr	r2, [r0]
 3941 0016 1368     		ldr	r3, [r2]
 3942 0018 23F00C03 		bic	r3, r3, #12
 3943 001c 1360     		str	r3, [r2]
2711:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3944              		.loc 1 2711 0 discriminator 2
 3945 001e 0268     		ldr	r2, [r0]
 3946 0020 1368     		ldr	r3, [r2]
 3947 0022 43F00803 		orr	r3, r3, #8
 3948 0026 1360     		str	r3, [r2]
2713:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3949              		.loc 1 2713 0 discriminator 2
 3950 0028 2023     		movs	r3, #32
 3951 002a C0F88030 		str	r3, [r0, #128]
2715:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3952              		.loc 1 2715 0 discriminator 2
 3953 002e 0023     		movs	r3, #0
 3954 0030 80F87C30 		strb	r3, [r0, #124]
2717:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 3955              		.loc 1 2717 0 discriminator 2
 3956 0034 1846     		mov	r0, r3
 3957              	.LVL343:
 3958 0036 7047     		bx	lr
 3959              	.LVL344:
 3960              	.L323:
2704:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3961              		.loc 1 2704 0
 3962 0038 0220     		movs	r0, #2
 3963              	.LVL345:
2718:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3964              		.loc 1 2718 0
 3965 003a 7047     		bx	lr
 3966              		.cfi_endproc
 3967              	.LFE178:
 3969              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 3970              		.align	1
 3971              		.global	HAL_HalfDuplex_EnableReceiver
 3972              		.syntax unified
 3973              		.thumb
 3974              		.thumb_func
 3975              		.fpu fpv5-d16
ARM GAS  /tmp/ccmyImrL.s 			page 152


 3977              	HAL_HalfDuplex_EnableReceiver:
 3978              	.LFB179:
2726:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 3979              		.loc 1 2726 0
 3980              		.cfi_startproc
 3981              		@ args = 0, pretend = 0, frame = 0
 3982              		@ frame_needed = 0, uses_anonymous_args = 0
 3983              		@ link register save eliminated.
 3984              	.LVL346:
2727:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3985              		.loc 1 2727 0
 3986 0000 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 3987 0004 012B     		cmp	r3, #1
 3988 0006 17D0     		beq	.L326
2727:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3989              		.loc 1 2727 0 is_stmt 0 discriminator 2
 3990 0008 0123     		movs	r3, #1
 3991 000a 80F87C30 		strb	r3, [r0, #124]
2728:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3992              		.loc 1 2728 0 is_stmt 1 discriminator 2
 3993 000e 2423     		movs	r3, #36
 3994 0010 C0F88030 		str	r3, [r0, #128]
2731:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3995              		.loc 1 2731 0 discriminator 2
 3996 0014 0268     		ldr	r2, [r0]
 3997 0016 1368     		ldr	r3, [r2]
 3998 0018 23F00C03 		bic	r3, r3, #12
 3999 001c 1360     		str	r3, [r2]
2734:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4000              		.loc 1 2734 0 discriminator 2
 4001 001e 0268     		ldr	r2, [r0]
 4002 0020 1368     		ldr	r3, [r2]
 4003 0022 43F00403 		orr	r3, r3, #4
 4004 0026 1360     		str	r3, [r2]
2736:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4005              		.loc 1 2736 0 discriminator 2
 4006 0028 2023     		movs	r3, #32
 4007 002a C0F88030 		str	r3, [r0, #128]
2738:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4008              		.loc 1 2738 0 discriminator 2
 4009 002e 0023     		movs	r3, #0
 4010 0030 80F87C30 		strb	r3, [r0, #124]
2740:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 4011              		.loc 1 2740 0 discriminator 2
 4012 0034 1846     		mov	r0, r3
 4013              	.LVL347:
 4014 0036 7047     		bx	lr
 4015              	.LVL348:
 4016              	.L326:
2727:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4017              		.loc 1 2727 0
 4018 0038 0220     		movs	r0, #2
 4019              	.LVL349:
2741:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4020              		.loc 1 2741 0
 4021 003a 7047     		bx	lr
 4022              		.cfi_endproc
ARM GAS  /tmp/ccmyImrL.s 			page 153


 4023              	.LFE179:
 4025              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 4026              		.align	1
 4027              		.global	HAL_LIN_SendBreak
 4028              		.syntax unified
 4029              		.thumb
 4030              		.thumb_func
 4031              		.fpu fpv5-d16
 4033              	HAL_LIN_SendBreak:
 4034              	.LFB180:
2750:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the parameters */
 4035              		.loc 1 2750 0
 4036              		.cfi_startproc
 4037              		@ args = 0, pretend = 0, frame = 0
 4038              		@ frame_needed = 0, uses_anonymous_args = 0
 4039              		@ link register save eliminated.
 4040              	.LVL350:
2754:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4041              		.loc 1 2754 0
 4042 0000 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 4043 0004 012B     		cmp	r3, #1
 4044 0006 12D0     		beq	.L329
2754:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4045              		.loc 1 2754 0 is_stmt 0 discriminator 2
 4046 0008 0123     		movs	r3, #1
 4047 000a 80F87C30 		strb	r3, [r0, #124]
2756:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4048              		.loc 1 2756 0 is_stmt 1 discriminator 2
 4049 000e 2423     		movs	r3, #36
 4050 0010 C0F88030 		str	r3, [r0, #128]
2759:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4051              		.loc 1 2759 0 discriminator 2
 4052 0014 0268     		ldr	r2, [r0]
 4053 0016 9369     		ldr	r3, [r2, #24]
 4054 0018 43F00203 		orr	r3, r3, #2
 4055 001c 9361     		str	r3, [r2, #24]
2761:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4056              		.loc 1 2761 0 discriminator 2
 4057 001e 2023     		movs	r3, #32
 4058 0020 C0F88030 		str	r3, [r0, #128]
2763:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4059              		.loc 1 2763 0 discriminator 2
 4060 0024 0023     		movs	r3, #0
 4061 0026 80F87C30 		strb	r3, [r0, #124]
2765:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 4062              		.loc 1 2765 0 discriminator 2
 4063 002a 1846     		mov	r0, r3
 4064              	.LVL351:
 4065 002c 7047     		bx	lr
 4066              	.LVL352:
 4067              	.L329:
2754:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4068              		.loc 1 2754 0
 4069 002e 0220     		movs	r0, #2
 4070              	.LVL353:
2766:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4071              		.loc 1 2766 0
ARM GAS  /tmp/ccmyImrL.s 			page 154


 4072 0030 7047     		bx	lr
 4073              		.cfi_endproc
 4074              	.LFE180:
 4076              		.section	.text.HAL_UART_GetState,"ax",%progbits
 4077              		.align	1
 4078              		.global	HAL_UART_GetState
 4079              		.syntax unified
 4080              		.thumb
 4081              		.thumb_func
 4082              		.fpu fpv5-d16
 4084              	HAL_UART_GetState:
 4085              	.LFB181:
2795:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t temp1;
 4086              		.loc 1 2795 0
 4087              		.cfi_startproc
 4088              		@ args = 0, pretend = 0, frame = 0
 4089              		@ frame_needed = 0, uses_anonymous_args = 0
 4090              		@ link register save eliminated.
 4091              	.LVL354:
2798:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   temp2 = huart->RxState;
 4092              		.loc 1 2798 0
 4093 0000 D0F88020 		ldr	r2, [r0, #128]
 4094              	.LVL355:
2799:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4095              		.loc 1 2799 0
 4096 0004 D0F88400 		ldr	r0, [r0, #132]
 4097              	.LVL356:
2802:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4098              		.loc 1 2802 0
 4099 0008 1043     		orrs	r0, r0, r2
 4100              	.LVL357:
 4101 000a 7047     		bx	lr
 4102              		.cfi_endproc
 4103              	.LFE181:
 4105              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4106              		.align	1
 4107              		.global	HAL_UART_GetError
 4108              		.syntax unified
 4109              		.thumb
 4110              		.thumb_func
 4111              		.fpu fpv5-d16
 4113              	HAL_UART_GetError:
 4114              	.LFB182:
2811:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return huart->ErrorCode;
 4115              		.loc 1 2811 0
 4116              		.cfi_startproc
 4117              		@ args = 0, pretend = 0, frame = 0
 4118              		@ frame_needed = 0, uses_anonymous_args = 0
 4119              		@ link register save eliminated.
 4120              	.LVL358:
2812:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 4121              		.loc 1 2812 0
 4122 0000 D0F88800 		ldr	r0, [r0, #136]
 4123              	.LVL359:
2813:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 4124              		.loc 1 2813 0
 4125 0004 7047     		bx	lr
ARM GAS  /tmp/ccmyImrL.s 			page 155


 4126              		.cfi_endproc
 4127              	.LFE182:
 4129              		.global	__aeabi_uldivmod
 4130              		.section	.text.UART_SetConfig,"ax",%progbits
 4131              		.align	1
 4132              		.global	UART_SetConfig
 4133              		.syntax unified
 4134              		.thumb
 4135              		.thumb_func
 4136              		.fpu fpv5-d16
 4138              	UART_SetConfig:
 4139              	.LFB183:
2856:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t tmpreg;
 4140              		.loc 1 2856 0
 4141              		.cfi_startproc
 4142              		@ args = 0, pretend = 0, frame = 24
 4143              		@ frame_needed = 0, uses_anonymous_args = 0
 4144              	.LVL360:
 4145 0000 2DE9F04B 		push	{r4, r5, r6, r7, r8, r9, fp, lr}
 4146              	.LCFI31:
 4147              		.cfi_def_cfa_offset 32
 4148              		.cfi_offset 4, -32
 4149              		.cfi_offset 5, -28
 4150              		.cfi_offset 6, -24
 4151              		.cfi_offset 7, -20
 4152              		.cfi_offset 8, -16
 4153              		.cfi_offset 9, -12
 4154              		.cfi_offset 11, -8
 4155              		.cfi_offset 14, -4
 4156 0004 86B0     		sub	sp, sp, #24
 4157              	.LCFI32:
 4158              		.cfi_def_cfa_offset 56
 4159 0006 0446     		mov	r4, r0
 4160              	.LVL361:
2870:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 4161              		.loc 1 2870 0
 4162 0008 0168     		ldr	r1, [r0]
2893:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->FifoMode;
 4163              		.loc 1 2893 0
 4164 000a 8368     		ldr	r3, [r0, #8]
 4165 000c 0269     		ldr	r2, [r0, #16]
 4166 000e 1343     		orrs	r3, r3, r2
 4167 0010 4269     		ldr	r2, [r0, #20]
 4168 0012 1343     		orrs	r3, r3, r2
 4169 0014 C269     		ldr	r2, [r0, #28]
 4170 0016 1343     		orrs	r3, r3, r2
 4171              	.LVL362:
2894:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 4172              		.loc 1 2894 0
 4173 0018 426E     		ldr	r2, [r0, #100]
 4174 001a 1343     		orrs	r3, r3, r2
 4175              	.LVL363:
2895:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4176              		.loc 1 2895 0
 4177 001c 0868     		ldr	r0, [r1]
 4178              	.LVL364:
 4179 001e 8B4A     		ldr	r2, .L895
ARM GAS  /tmp/ccmyImrL.s 			page 156


 4180 0020 0240     		ands	r2, r2, r0
 4181 0022 1343     		orrs	r3, r3, r2
 4182              	.LVL365:
 4183 0024 0B60     		str	r3, [r1]
 4184              	.LVL366:
2900:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4185              		.loc 1 2900 0
 4186 0026 2268     		ldr	r2, [r4]
 4187 0028 5368     		ldr	r3, [r2, #4]
 4188 002a 23F44053 		bic	r3, r3, #12288
 4189 002e E168     		ldr	r1, [r4, #12]
 4190 0030 0B43     		orrs	r3, r3, r1
 4191 0032 5360     		str	r3, [r2, #4]
2908:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4192              		.loc 1 2908 0
 4193 0034 A369     		ldr	r3, [r4, #24]
 4194              	.LVL367:
2910:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 4195              		.loc 1 2910 0
 4196 0036 2268     		ldr	r2, [r4]
 4197 0038 8549     		ldr	r1, .L895+4
 4198 003a 8A42     		cmp	r2, r1
 4199 003c 01D0     		beq	.L333
2912:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 4200              		.loc 1 2912 0
 4201 003e 216A     		ldr	r1, [r4, #32]
 4202 0040 0B43     		orrs	r3, r3, r1
 4203              	.LVL368:
 4204              	.L333:
2914:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4205              		.loc 1 2914 0
 4206 0042 9068     		ldr	r0, [r2, #8]
 4207 0044 8349     		ldr	r1, .L895+8
 4208 0046 0140     		ands	r1, r1, r0
 4209 0048 0B43     		orrs	r3, r3, r1
 4210              	.LVL369:
 4211 004a 9360     		str	r3, [r2, #8]
2919:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4212              		.loc 1 2919 0
 4213 004c 2268     		ldr	r2, [r4]
 4214 004e D36A     		ldr	r3, [r2, #44]
 4215 0050 23F00F03 		bic	r3, r3, #15
 4216 0054 616A     		ldr	r1, [r4, #36]
 4217 0056 0B43     		orrs	r3, r3, r1
 4218 0058 D362     		str	r3, [r2, #44]
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4219              		.loc 1 2922 0
 4220 005a 2368     		ldr	r3, [r4]
 4221 005c 7E4A     		ldr	r2, .L895+12
 4222 005e 9342     		cmp	r3, r2
 4223 0060 6FD0     		beq	.L854
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4224              		.loc 1 2922 0 is_stmt 0 discriminator 2
 4225 0062 7E4A     		ldr	r2, .L895+16
 4226 0064 9342     		cmp	r3, r2
 4227 0066 00F0A980 		beq	.L855
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  /tmp/ccmyImrL.s 			page 157


 4228              		.loc 1 2922 0 discriminator 11
 4229 006a 7D4A     		ldr	r2, .L895+20
 4230 006c 9342     		cmp	r3, r2
 4231 006e 00F0BF80 		beq	.L856
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4232              		.loc 1 2922 0 discriminator 20
 4233 0072 7C4A     		ldr	r2, .L895+24
 4234 0074 9342     		cmp	r3, r2
 4235 0076 00F0D280 		beq	.L857
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4236              		.loc 1 2922 0 discriminator 29
 4237 007a 7B4A     		ldr	r2, .L895+28
 4238 007c 9342     		cmp	r3, r2
 4239 007e 00F0FD80 		beq	.L858
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4240              		.loc 1 2922 0 discriminator 38
 4241 0082 7A4A     		ldr	r2, .L895+32
 4242 0084 9342     		cmp	r3, r2
 4243 0086 00F01081 		beq	.L859
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4244              		.loc 1 2922 0 discriminator 47
 4245 008a 794A     		ldr	r2, .L895+36
 4246 008c 9342     		cmp	r3, r2
 4247 008e 00F03581 		beq	.L860
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4248              		.loc 1 2922 0 discriminator 56
 4249 0092 784A     		ldr	r2, .L895+40
 4250 0094 9342     		cmp	r3, r2
 4251 0096 00F04881 		beq	.L861
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4252              		.loc 1 2922 0 discriminator 65
 4253 009a 6D4A     		ldr	r2, .L895+4
 4254 009c 9342     		cmp	r3, r2
 4255 009e 00F05B81 		beq	.L862
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4256              		.loc 1 2922 0
 4257 00a2 8025     		movs	r5, #128
 4258              	.L338:
 4259              	.LVL370:
2925:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 4260              		.loc 1 2925 0 is_stmt 1
 4261 00a4 6A4A     		ldr	r2, .L895+4
 4262 00a6 9342     		cmp	r3, r2
 4263 00a8 00F08081 		beq	.L863
3021:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 4264              		.loc 1 3021 0
 4265 00ac E369     		ldr	r3, [r4, #28]
 4266 00ae B3F5004F 		cmp	r3, #32768
 4267 00b2 00F01386 		beq	.L864
3076:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 4268              		.loc 1 3076 0
 4269 00b6 402D     		cmp	r5, #64
 4270 00b8 01F2C582 		bhi	.L755
 4271 00bc DFE815F0 		tbh	[pc, r5, lsl #1]
 4272              	.L458:
 4273 00c0 8D08     		.2byte	(.L457-.L458)/2
 4274 00c2 0409     		.2byte	(.L459-.L458)/2
ARM GAS  /tmp/ccmyImrL.s 			page 158


 4275 00c4 C30A     		.2byte	(.L755-.L458)/2
 4276 00c6 C30A     		.2byte	(.L755-.L458)/2
 4277 00c8 4209     		.2byte	(.L460-.L458)/2
 4278 00ca C30A     		.2byte	(.L755-.L458)/2
 4279 00cc C30A     		.2byte	(.L755-.L458)/2
 4280 00ce C30A     		.2byte	(.L755-.L458)/2
 4281 00d0 8209     		.2byte	(.L461-.L458)/2
 4282 00d2 C30A     		.2byte	(.L755-.L458)/2
 4283 00d4 C30A     		.2byte	(.L755-.L458)/2
 4284 00d6 C30A     		.2byte	(.L755-.L458)/2
 4285 00d8 C30A     		.2byte	(.L755-.L458)/2
 4286 00da C30A     		.2byte	(.L755-.L458)/2
 4287 00dc C30A     		.2byte	(.L755-.L458)/2
 4288 00de C30A     		.2byte	(.L755-.L458)/2
 4289 00e0 C209     		.2byte	(.L462-.L458)/2
 4290 00e2 C30A     		.2byte	(.L755-.L458)/2
 4291 00e4 C30A     		.2byte	(.L755-.L458)/2
 4292 00e6 C30A     		.2byte	(.L755-.L458)/2
 4293 00e8 C30A     		.2byte	(.L755-.L458)/2
 4294 00ea C30A     		.2byte	(.L755-.L458)/2
 4295 00ec C30A     		.2byte	(.L755-.L458)/2
 4296 00ee C30A     		.2byte	(.L755-.L458)/2
 4297 00f0 C30A     		.2byte	(.L755-.L458)/2
 4298 00f2 C30A     		.2byte	(.L755-.L458)/2
 4299 00f4 C30A     		.2byte	(.L755-.L458)/2
 4300 00f6 C30A     		.2byte	(.L755-.L458)/2
 4301 00f8 C30A     		.2byte	(.L755-.L458)/2
 4302 00fa C30A     		.2byte	(.L755-.L458)/2
 4303 00fc C30A     		.2byte	(.L755-.L458)/2
 4304 00fe C30A     		.2byte	(.L755-.L458)/2
 4305 0100 420A     		.2byte	(.L463-.L458)/2
 4306 0102 C30A     		.2byte	(.L755-.L458)/2
 4307 0104 C30A     		.2byte	(.L755-.L458)/2
 4308 0106 C30A     		.2byte	(.L755-.L458)/2
 4309 0108 C30A     		.2byte	(.L755-.L458)/2
 4310 010a C30A     		.2byte	(.L755-.L458)/2
 4311 010c C30A     		.2byte	(.L755-.L458)/2
 4312 010e C30A     		.2byte	(.L755-.L458)/2
 4313 0110 C30A     		.2byte	(.L755-.L458)/2
 4314 0112 C30A     		.2byte	(.L755-.L458)/2
 4315 0114 C30A     		.2byte	(.L755-.L458)/2
 4316 0116 C30A     		.2byte	(.L755-.L458)/2
 4317 0118 C30A     		.2byte	(.L755-.L458)/2
 4318 011a C30A     		.2byte	(.L755-.L458)/2
 4319 011c C30A     		.2byte	(.L755-.L458)/2
 4320 011e C30A     		.2byte	(.L755-.L458)/2
 4321 0120 C30A     		.2byte	(.L755-.L458)/2
 4322 0122 C30A     		.2byte	(.L755-.L458)/2
 4323 0124 C30A     		.2byte	(.L755-.L458)/2
 4324 0126 C30A     		.2byte	(.L755-.L458)/2
 4325 0128 C30A     		.2byte	(.L755-.L458)/2
 4326 012a C30A     		.2byte	(.L755-.L458)/2
 4327 012c C30A     		.2byte	(.L755-.L458)/2
 4328 012e C30A     		.2byte	(.L755-.L458)/2
 4329 0130 C30A     		.2byte	(.L755-.L458)/2
 4330 0132 C30A     		.2byte	(.L755-.L458)/2
 4331 0134 C30A     		.2byte	(.L755-.L458)/2
ARM GAS  /tmp/ccmyImrL.s 			page 159


 4332 0136 C30A     		.2byte	(.L755-.L458)/2
 4333 0138 C30A     		.2byte	(.L755-.L458)/2
 4334 013a C30A     		.2byte	(.L755-.L458)/2
 4335 013c C30A     		.2byte	(.L755-.L458)/2
 4336 013e C30A     		.2byte	(.L755-.L458)/2
 4337 0140 7E0A     		.2byte	(.L464-.L458)/2
 4338              	.LVL371:
 4339              		.p2align 1
 4340              	.L854:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4341              		.loc 1 2922 0 discriminator 1
 4342 0142 4D4A     		ldr	r2, .L895+44
 4343 0144 526D     		ldr	r2, [r2, #84]
 4344 0146 02F03802 		and	r2, r2, #56
 4345 014a 282A     		cmp	r2, #40
 4346 014c 34D8     		bhi	.L335
 4347 014e DFE812F0 		tbh	[pc, r2, lsl #1]
 4348              	.L337:
 4349 0152 2900     		.2byte	(.L336-.L337)/2
 4350 0154 3300     		.2byte	(.L335-.L337)/2
 4351 0156 3300     		.2byte	(.L335-.L337)/2
 4352 0158 3300     		.2byte	(.L335-.L337)/2
 4353 015a 3300     		.2byte	(.L335-.L337)/2
 4354 015c 3300     		.2byte	(.L335-.L337)/2
 4355 015e 3300     		.2byte	(.L335-.L337)/2
 4356 0160 3300     		.2byte	(.L335-.L337)/2
 4357 0162 1B01     		.2byte	(.L474-.L337)/2
 4358 0164 3300     		.2byte	(.L335-.L337)/2
 4359 0166 3300     		.2byte	(.L335-.L337)/2
 4360 0168 3300     		.2byte	(.L335-.L337)/2
 4361 016a 3300     		.2byte	(.L335-.L337)/2
 4362 016c 3300     		.2byte	(.L335-.L337)/2
 4363 016e 3300     		.2byte	(.L335-.L337)/2
 4364 0170 3300     		.2byte	(.L335-.L337)/2
 4365 0172 2B00     		.2byte	(.L339-.L337)/2
 4366 0174 3300     		.2byte	(.L335-.L337)/2
 4367 0176 3300     		.2byte	(.L335-.L337)/2
 4368 0178 3300     		.2byte	(.L335-.L337)/2
 4369 017a 3300     		.2byte	(.L335-.L337)/2
 4370 017c 3300     		.2byte	(.L335-.L337)/2
 4371 017e 3300     		.2byte	(.L335-.L337)/2
 4372 0180 3300     		.2byte	(.L335-.L337)/2
 4373 0182 2D00     		.2byte	(.L340-.L337)/2
 4374 0184 3300     		.2byte	(.L335-.L337)/2
 4375 0186 3300     		.2byte	(.L335-.L337)/2
 4376 0188 3300     		.2byte	(.L335-.L337)/2
 4377 018a 3300     		.2byte	(.L335-.L337)/2
 4378 018c 3300     		.2byte	(.L335-.L337)/2
 4379 018e 3300     		.2byte	(.L335-.L337)/2
 4380 0190 3300     		.2byte	(.L335-.L337)/2
 4381 0192 2F00     		.2byte	(.L341-.L337)/2
 4382 0194 3300     		.2byte	(.L335-.L337)/2
 4383 0196 3300     		.2byte	(.L335-.L337)/2
 4384 0198 3300     		.2byte	(.L335-.L337)/2
 4385 019a 3300     		.2byte	(.L335-.L337)/2
 4386 019c 3300     		.2byte	(.L335-.L337)/2
 4387 019e 3300     		.2byte	(.L335-.L337)/2
ARM GAS  /tmp/ccmyImrL.s 			page 160


 4388 01a0 3300     		.2byte	(.L335-.L337)/2
 4389 01a2 3100     		.2byte	(.L342-.L337)/2
 4390              		.p2align 1
 4391              	.L336:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4392              		.loc 1 2922 0 is_stmt 0
 4393 01a4 0125     		movs	r5, #1
 4394 01a6 7DE7     		b	.L338
 4395              	.L339:
 4396              	.LVL372:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4397              		.loc 1 2922 0 discriminator 6
 4398 01a8 0825     		movs	r5, #8
 4399 01aa 7BE7     		b	.L338
 4400              	.LVL373:
 4401              	.L340:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4402              		.loc 1 2922 0 discriminator 7
 4403 01ac 1025     		movs	r5, #16
 4404 01ae 79E7     		b	.L338
 4405              	.LVL374:
 4406              	.L341:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4407              		.loc 1 2922 0 discriminator 8
 4408 01b0 2025     		movs	r5, #32
 4409 01b2 77E7     		b	.L338
 4410              	.LVL375:
 4411              	.L342:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4412              		.loc 1 2922 0 discriminator 9
 4413 01b4 4025     		movs	r5, #64
 4414 01b6 75E7     		b	.L338
 4415              	.LVL376:
 4416              	.L335:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4417              		.loc 1 2922 0 discriminator 3
 4418 01b8 8025     		movs	r5, #128
 4419 01ba 73E7     		b	.L338
 4420              	.LVL377:
 4421              	.L855:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4422              		.loc 1 2922 0 discriminator 10
 4423 01bc 2E4A     		ldr	r2, .L895+44
 4424 01be 526D     		ldr	r2, [r2, #84]
 4425 01c0 02F00702 		and	r2, r2, #7
 4426 01c4 052A     		cmp	r2, #5
 4427 01c6 11D8     		bhi	.L344
 4428 01c8 DFE812F0 		tbh	[pc, r2, lsl #1]
 4429              	.L346:
 4430 01cc 0600     		.2byte	(.L345-.L346)/2
 4431 01ce E000     		.2byte	(.L475-.L346)/2
 4432 01d0 0800     		.2byte	(.L347-.L346)/2
 4433 01d2 0A00     		.2byte	(.L348-.L346)/2
 4434 01d4 0C00     		.2byte	(.L349-.L346)/2
 4435 01d6 0E00     		.2byte	(.L350-.L346)/2
 4436              		.p2align 1
 4437              	.L345:
ARM GAS  /tmp/ccmyImrL.s 			page 161


2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4438              		.loc 1 2922 0
 4439 01d8 0025     		movs	r5, #0
 4440 01da 63E7     		b	.L338
 4441              	.L347:
 4442              	.LVL378:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4443              		.loc 1 2922 0 discriminator 15
 4444 01dc 0825     		movs	r5, #8
 4445 01de 61E7     		b	.L338
 4446              	.LVL379:
 4447              	.L348:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4448              		.loc 1 2922 0 discriminator 16
 4449 01e0 1025     		movs	r5, #16
 4450 01e2 5FE7     		b	.L338
 4451              	.LVL380:
 4452              	.L349:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4453              		.loc 1 2922 0 discriminator 17
 4454 01e4 2025     		movs	r5, #32
 4455 01e6 5DE7     		b	.L338
 4456              	.LVL381:
 4457              	.L350:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4458              		.loc 1 2922 0 discriminator 18
 4459 01e8 4025     		movs	r5, #64
 4460 01ea 5BE7     		b	.L338
 4461              	.LVL382:
 4462              	.L344:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4463              		.loc 1 2922 0 discriminator 12
 4464 01ec 8025     		movs	r5, #128
 4465 01ee 59E7     		b	.L338
 4466              	.LVL383:
 4467              	.L856:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4468              		.loc 1 2922 0 discriminator 19
 4469 01f0 214A     		ldr	r2, .L895+44
 4470 01f2 526D     		ldr	r2, [r2, #84]
 4471 01f4 02F00702 		and	r2, r2, #7
 4472 01f8 052A     		cmp	r2, #5
 4473 01fa 0ED8     		bhi	.L352
 4474 01fc DFE802F0 		tbb	[pc, r2]
 4475              	.L354:
 4476 0200 03       		.byte	(.L353-.L354)/2
 4477 0201 C8       		.byte	(.L476-.L354)/2
 4478 0202 05       		.byte	(.L355-.L354)/2
 4479 0203 07       		.byte	(.L356-.L354)/2
 4480 0204 09       		.byte	(.L357-.L354)/2
 4481 0205 0B       		.byte	(.L358-.L354)/2
 4482              		.p2align 1
 4483              	.L353:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4484              		.loc 1 2922 0
 4485 0206 0025     		movs	r5, #0
 4486 0208 4CE7     		b	.L338
ARM GAS  /tmp/ccmyImrL.s 			page 162


 4487              	.L355:
 4488              	.LVL384:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4489              		.loc 1 2922 0 discriminator 24
 4490 020a 0825     		movs	r5, #8
 4491 020c 4AE7     		b	.L338
 4492              	.LVL385:
 4493              	.L356:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4494              		.loc 1 2922 0 discriminator 25
 4495 020e 1025     		movs	r5, #16
 4496 0210 48E7     		b	.L338
 4497              	.LVL386:
 4498              	.L357:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4499              		.loc 1 2922 0 discriminator 26
 4500 0212 2025     		movs	r5, #32
 4501 0214 46E7     		b	.L338
 4502              	.LVL387:
 4503              	.L358:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4504              		.loc 1 2922 0 discriminator 27
 4505 0216 4025     		movs	r5, #64
 4506 0218 44E7     		b	.L338
 4507              	.LVL388:
 4508              	.L352:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4509              		.loc 1 2922 0 discriminator 21
 4510 021a 8025     		movs	r5, #128
 4511 021c 42E7     		b	.L338
 4512              	.LVL389:
 4513              	.L857:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4514              		.loc 1 2922 0 discriminator 28
 4515 021e 164A     		ldr	r2, .L895+44
 4516 0220 526D     		ldr	r2, [r2, #84]
 4517 0222 02F00702 		and	r2, r2, #7
 4518 0226 052A     		cmp	r2, #5
 4519 0228 0ED8     		bhi	.L360
 4520 022a DFE802F0 		tbb	[pc, r2]
 4521              	.L362:
 4522 022e 03       		.byte	(.L361-.L362)/2
 4523 022f B3       		.byte	(.L477-.L362)/2
 4524 0230 05       		.byte	(.L363-.L362)/2
 4525 0231 07       		.byte	(.L364-.L362)/2
 4526 0232 09       		.byte	(.L365-.L362)/2
 4527 0233 0B       		.byte	(.L366-.L362)/2
 4528              		.p2align 1
 4529              	.L361:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4530              		.loc 1 2922 0
 4531 0234 0025     		movs	r5, #0
 4532 0236 35E7     		b	.L338
 4533              	.L363:
 4534              	.LVL390:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4535              		.loc 1 2922 0 discriminator 33
ARM GAS  /tmp/ccmyImrL.s 			page 163


 4536 0238 0825     		movs	r5, #8
 4537 023a 33E7     		b	.L338
 4538              	.LVL391:
 4539              	.L364:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4540              		.loc 1 2922 0 discriminator 34
 4541 023c 1025     		movs	r5, #16
 4542 023e 31E7     		b	.L338
 4543              	.LVL392:
 4544              	.L365:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4545              		.loc 1 2922 0 discriminator 35
 4546 0240 2025     		movs	r5, #32
 4547 0242 2FE7     		b	.L338
 4548              	.LVL393:
 4549              	.L366:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4550              		.loc 1 2922 0 discriminator 36
 4551 0244 4025     		movs	r5, #64
 4552 0246 2DE7     		b	.L338
 4553              	.LVL394:
 4554              	.L360:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4555              		.loc 1 2922 0 discriminator 30
 4556 0248 8025     		movs	r5, #128
 4557 024a 2BE7     		b	.L338
 4558              	.L896:
 4559              		.align	2
 4560              	.L895:
 4561 024c F369FFCF 		.word	-805344781
 4562 0250 000C0058 		.word	1476398080
 4563 0254 FFF4FF11 		.word	301987071
 4564 0258 00100140 		.word	1073811456
 4565 025c 00440040 		.word	1073759232
 4566 0260 00480040 		.word	1073760256
 4567 0264 004C0040 		.word	1073761280
 4568 0268 00500040 		.word	1073762304
 4569 026c 00140140 		.word	1073812480
 4570 0270 00780040 		.word	1073772544
 4571 0274 007C0040 		.word	1073773568
 4572 0278 00440258 		.word	1476543488
 4573              	.LVL395:
 4574              	.L858:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4575              		.loc 1 2922 0 discriminator 37
 4576 027c 8E4A     		ldr	r2, .L897
 4577 027e 526D     		ldr	r2, [r2, #84]
 4578 0280 02F00702 		and	r2, r2, #7
 4579 0284 052A     		cmp	r2, #5
 4580 0286 0ED8     		bhi	.L368
 4581 0288 DFE802F0 		tbb	[pc, r2]
 4582              	.L370:
 4583 028c 03       		.byte	(.L369-.L370)/2
 4584 028d 86       		.byte	(.L478-.L370)/2
 4585 028e 05       		.byte	(.L371-.L370)/2
 4586 028f 07       		.byte	(.L372-.L370)/2
 4587 0290 09       		.byte	(.L373-.L370)/2
ARM GAS  /tmp/ccmyImrL.s 			page 164


 4588 0291 0B       		.byte	(.L374-.L370)/2
 4589              		.p2align 1
 4590              	.L369:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4591              		.loc 1 2922 0
 4592 0292 0025     		movs	r5, #0
 4593 0294 06E7     		b	.L338
 4594              	.L371:
 4595              	.LVL396:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4596              		.loc 1 2922 0 discriminator 42
 4597 0296 0825     		movs	r5, #8
 4598 0298 04E7     		b	.L338
 4599              	.LVL397:
 4600              	.L372:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4601              		.loc 1 2922 0 discriminator 43
 4602 029a 1025     		movs	r5, #16
 4603 029c 02E7     		b	.L338
 4604              	.LVL398:
 4605              	.L373:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4606              		.loc 1 2922 0 discriminator 44
 4607 029e 2025     		movs	r5, #32
 4608 02a0 00E7     		b	.L338
 4609              	.LVL399:
 4610              	.L374:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4611              		.loc 1 2922 0 discriminator 45
 4612 02a2 4025     		movs	r5, #64
 4613 02a4 FEE6     		b	.L338
 4614              	.LVL400:
 4615              	.L368:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4616              		.loc 1 2922 0 discriminator 39
 4617 02a6 8025     		movs	r5, #128
 4618 02a8 FCE6     		b	.L338
 4619              	.LVL401:
 4620              	.L859:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4621              		.loc 1 2922 0 discriminator 46
 4622 02aa 834A     		ldr	r2, .L897
 4623 02ac 526D     		ldr	r2, [r2, #84]
 4624 02ae 02F03802 		and	r2, r2, #56
 4625 02b2 282A     		cmp	r2, #40
 4626 02b4 20D8     		bhi	.L376
 4627 02b6 DFE802F0 		tbb	[pc, r2]
 4628              	.L378:
 4629 02ba 15       		.byte	(.L377-.L378)/2
 4630 02bb 1F       		.byte	(.L376-.L378)/2
 4631 02bc 1F       		.byte	(.L376-.L378)/2
 4632 02bd 1F       		.byte	(.L376-.L378)/2
 4633 02be 1F       		.byte	(.L376-.L378)/2
 4634 02bf 1F       		.byte	(.L376-.L378)/2
 4635 02c0 1F       		.byte	(.L376-.L378)/2
 4636 02c1 1F       		.byte	(.L376-.L378)/2
 4637 02c2 71       		.byte	(.L479-.L378)/2
ARM GAS  /tmp/ccmyImrL.s 			page 165


 4638 02c3 1F       		.byte	(.L376-.L378)/2
 4639 02c4 1F       		.byte	(.L376-.L378)/2
 4640 02c5 1F       		.byte	(.L376-.L378)/2
 4641 02c6 1F       		.byte	(.L376-.L378)/2
 4642 02c7 1F       		.byte	(.L376-.L378)/2
 4643 02c8 1F       		.byte	(.L376-.L378)/2
 4644 02c9 1F       		.byte	(.L376-.L378)/2
 4645 02ca 17       		.byte	(.L379-.L378)/2
 4646 02cb 1F       		.byte	(.L376-.L378)/2
 4647 02cc 1F       		.byte	(.L376-.L378)/2
 4648 02cd 1F       		.byte	(.L376-.L378)/2
 4649 02ce 1F       		.byte	(.L376-.L378)/2
 4650 02cf 1F       		.byte	(.L376-.L378)/2
 4651 02d0 1F       		.byte	(.L376-.L378)/2
 4652 02d1 1F       		.byte	(.L376-.L378)/2
 4653 02d2 19       		.byte	(.L380-.L378)/2
 4654 02d3 1F       		.byte	(.L376-.L378)/2
 4655 02d4 1F       		.byte	(.L376-.L378)/2
 4656 02d5 1F       		.byte	(.L376-.L378)/2
 4657 02d6 1F       		.byte	(.L376-.L378)/2
 4658 02d7 1F       		.byte	(.L376-.L378)/2
 4659 02d8 1F       		.byte	(.L376-.L378)/2
 4660 02d9 1F       		.byte	(.L376-.L378)/2
 4661 02da 1B       		.byte	(.L381-.L378)/2
 4662 02db 1F       		.byte	(.L376-.L378)/2
 4663 02dc 1F       		.byte	(.L376-.L378)/2
 4664 02dd 1F       		.byte	(.L376-.L378)/2
 4665 02de 1F       		.byte	(.L376-.L378)/2
 4666 02df 1F       		.byte	(.L376-.L378)/2
 4667 02e0 1F       		.byte	(.L376-.L378)/2
 4668 02e1 1F       		.byte	(.L376-.L378)/2
 4669 02e2 1D       		.byte	(.L382-.L378)/2
 4670 02e3 00       		.p2align 1
 4671              	.L377:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4672              		.loc 1 2922 0
 4673 02e4 0125     		movs	r5, #1
 4674 02e6 DDE6     		b	.L338
 4675              	.L379:
 4676              	.LVL402:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4677              		.loc 1 2922 0 discriminator 51
 4678 02e8 0825     		movs	r5, #8
 4679 02ea DBE6     		b	.L338
 4680              	.LVL403:
 4681              	.L380:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4682              		.loc 1 2922 0 discriminator 52
 4683 02ec 1025     		movs	r5, #16
 4684 02ee D9E6     		b	.L338
 4685              	.LVL404:
 4686              	.L381:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4687              		.loc 1 2922 0 discriminator 53
 4688 02f0 2025     		movs	r5, #32
 4689 02f2 D7E6     		b	.L338
 4690              	.LVL405:
ARM GAS  /tmp/ccmyImrL.s 			page 166


 4691              	.L382:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4692              		.loc 1 2922 0 discriminator 54
 4693 02f4 4025     		movs	r5, #64
 4694 02f6 D5E6     		b	.L338
 4695              	.LVL406:
 4696              	.L376:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4697              		.loc 1 2922 0 discriminator 48
 4698 02f8 8025     		movs	r5, #128
 4699 02fa D3E6     		b	.L338
 4700              	.LVL407:
 4701              	.L860:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4702              		.loc 1 2922 0 discriminator 55
 4703 02fc 6E4A     		ldr	r2, .L897
 4704 02fe 526D     		ldr	r2, [r2, #84]
 4705 0300 02F00702 		and	r2, r2, #7
 4706 0304 052A     		cmp	r2, #5
 4707 0306 0ED8     		bhi	.L384
 4708 0308 DFE802F0 		tbb	[pc, r2]
 4709              	.L386:
 4710 030c 03       		.byte	(.L385-.L386)/2
 4711 030d 4A       		.byte	(.L480-.L386)/2
 4712 030e 05       		.byte	(.L387-.L386)/2
 4713 030f 07       		.byte	(.L388-.L386)/2
 4714 0310 09       		.byte	(.L389-.L386)/2
 4715 0311 0B       		.byte	(.L390-.L386)/2
 4716              		.p2align 1
 4717              	.L385:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4718              		.loc 1 2922 0
 4719 0312 0025     		movs	r5, #0
 4720 0314 C6E6     		b	.L338
 4721              	.L387:
 4722              	.LVL408:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4723              		.loc 1 2922 0 discriminator 60
 4724 0316 0825     		movs	r5, #8
 4725 0318 C4E6     		b	.L338
 4726              	.LVL409:
 4727              	.L388:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4728              		.loc 1 2922 0 discriminator 61
 4729 031a 1025     		movs	r5, #16
 4730 031c C2E6     		b	.L338
 4731              	.LVL410:
 4732              	.L389:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4733              		.loc 1 2922 0 discriminator 62
 4734 031e 2025     		movs	r5, #32
 4735 0320 C0E6     		b	.L338
 4736              	.LVL411:
 4737              	.L390:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4738              		.loc 1 2922 0 discriminator 63
 4739 0322 4025     		movs	r5, #64
ARM GAS  /tmp/ccmyImrL.s 			page 167


 4740 0324 BEE6     		b	.L338
 4741              	.LVL412:
 4742              	.L384:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4743              		.loc 1 2922 0 discriminator 57
 4744 0326 8025     		movs	r5, #128
 4745 0328 BCE6     		b	.L338
 4746              	.LVL413:
 4747              	.L861:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4748              		.loc 1 2922 0 discriminator 64
 4749 032a 634A     		ldr	r2, .L897
 4750 032c 526D     		ldr	r2, [r2, #84]
 4751 032e 02F00702 		and	r2, r2, #7
 4752 0332 052A     		cmp	r2, #5
 4753 0334 0ED8     		bhi	.L392
 4754 0336 DFE802F0 		tbb	[pc, r2]
 4755              	.L394:
 4756 033a 03       		.byte	(.L393-.L394)/2
 4757 033b 35       		.byte	(.L481-.L394)/2
 4758 033c 05       		.byte	(.L395-.L394)/2
 4759 033d 07       		.byte	(.L396-.L394)/2
 4760 033e 09       		.byte	(.L397-.L394)/2
 4761 033f 0B       		.byte	(.L398-.L394)/2
 4762              		.p2align 1
 4763              	.L393:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4764              		.loc 1 2922 0
 4765 0340 0025     		movs	r5, #0
 4766 0342 AFE6     		b	.L338
 4767              	.L395:
 4768              	.LVL414:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4769              		.loc 1 2922 0 discriminator 69
 4770 0344 0825     		movs	r5, #8
 4771 0346 ADE6     		b	.L338
 4772              	.LVL415:
 4773              	.L396:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4774              		.loc 1 2922 0 discriminator 70
 4775 0348 1025     		movs	r5, #16
 4776 034a ABE6     		b	.L338
 4777              	.LVL416:
 4778              	.L397:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4779              		.loc 1 2922 0 discriminator 71
 4780 034c 2025     		movs	r5, #32
 4781 034e A9E6     		b	.L338
 4782              	.LVL417:
 4783              	.L398:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4784              		.loc 1 2922 0 discriminator 72
 4785 0350 4025     		movs	r5, #64
 4786 0352 A7E6     		b	.L338
 4787              	.LVL418:
 4788              	.L392:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  /tmp/ccmyImrL.s 			page 168


 4789              		.loc 1 2922 0 discriminator 66
 4790 0354 8025     		movs	r5, #128
 4791 0356 A5E6     		b	.L338
 4792              	.LVL419:
 4793              	.L862:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4794              		.loc 1 2922 0 discriminator 73
 4795 0358 02F50E32 		add	r2, r2, #145408
 4796 035c 926D     		ldr	r2, [r2, #88]
 4797 035e 02F00702 		and	r2, r2, #7
 4798 0362 052A     		cmp	r2, #5
 4799 0364 0ED8     		bhi	.L399
 4800 0366 DFE802F0 		tbb	[pc, r2]
 4801              	.L401:
 4802 036a 03       		.byte	(.L400-.L401)/2
 4803 036b 1F       		.byte	(.L483-.L401)/2
 4804 036c 05       		.byte	(.L402-.L401)/2
 4805 036d 07       		.byte	(.L403-.L401)/2
 4806 036e 09       		.byte	(.L404-.L401)/2
 4807 036f 0B       		.byte	(.L405-.L401)/2
 4808              		.p2align 1
 4809              	.L400:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4810              		.loc 1 2922 0
 4811 0370 0225     		movs	r5, #2
 4812 0372 97E6     		b	.L338
 4813              	.L402:
 4814              	.LVL420:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4815              		.loc 1 2922 0 discriminator 78
 4816 0374 0825     		movs	r5, #8
 4817 0376 95E6     		b	.L338
 4818              	.LVL421:
 4819              	.L403:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4820              		.loc 1 2922 0 discriminator 79
 4821 0378 1025     		movs	r5, #16
 4822 037a 93E6     		b	.L338
 4823              	.LVL422:
 4824              	.L404:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4825              		.loc 1 2922 0 discriminator 80
 4826 037c 2025     		movs	r5, #32
 4827 037e 91E6     		b	.L338
 4828              	.LVL423:
 4829              	.L405:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4830              		.loc 1 2922 0 discriminator 81
 4831 0380 4025     		movs	r5, #64
 4832 0382 8FE6     		b	.L338
 4833              	.LVL424:
 4834              	.L399:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4835              		.loc 1 2922 0 discriminator 75
 4836 0384 8025     		movs	r5, #128
 4837 0386 8DE6     		b	.L338
 4838              	.LVL425:
ARM GAS  /tmp/ccmyImrL.s 			page 169


 4839              	.L474:
2922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4840              		.loc 1 2922 0
 4841 0388 0425     		movs	r5, #4
 4842 038a 8BE6     		b	.L338
 4843              	.L475:
 4844 038c 0425     		movs	r5, #4
 4845 038e 89E6     		b	.L338
 4846              	.L476:
 4847 0390 0425     		movs	r5, #4
 4848 0392 87E6     		b	.L338
 4849              	.L477:
 4850 0394 0425     		movs	r5, #4
 4851 0396 85E6     		b	.L338
 4852              	.L478:
 4853 0398 0425     		movs	r5, #4
 4854 039a 83E6     		b	.L338
 4855              	.L479:
 4856 039c 0425     		movs	r5, #4
 4857 039e 81E6     		b	.L338
 4858              	.L480:
 4859 03a0 0425     		movs	r5, #4
 4860 03a2 7FE6     		b	.L338
 4861              	.L481:
 4862 03a4 0425     		movs	r5, #4
 4863 03a6 7DE6     		b	.L338
 4864              	.L483:
 4865 03a8 0425     		movs	r5, #4
 4866 03aa 7BE6     		b	.L338
 4867              	.LVL426:
 4868              	.L863:
2928:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 4869              		.loc 1 2928 0 is_stmt 1
 4870 03ac 082D     		cmp	r5, #8
 4871 03ae 00F0A380 		beq	.L408
 4872 03b2 0BD9     		bls	.L865
 4873 03b4 202D     		cmp	r5, #32
 4874 03b6 00F03681 		beq	.L412
 4875 03ba 402D     		cmp	r5, #64
 4876 03bc 00F05381 		beq	.L413
 4877 03c0 102D     		cmp	r5, #16
 4878 03c2 00F0D380 		beq	.L866
 4879              	.L484:
2862:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   PLL2_ClocksTypeDef pll2_clocks;
 4880              		.loc 1 2862 0
 4881 03c6 0020     		movs	r0, #0
2958:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4882              		.loc 1 2958 0
 4883 03c8 0126     		movs	r6, #1
 4884 03ca 45E0     		b	.L407
 4885              	.L865:
2928:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 4886              		.loc 1 2928 0
 4887 03cc 022D     		cmp	r5, #2
 4888 03ce 20D0     		beq	.L410
 4889 03d0 042D     		cmp	r5, #4
 4890 03d2 F8D1     		bne	.L484
ARM GAS  /tmp/ccmyImrL.s 			page 170


2934:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         lpuart_ker_ck_pres = (pll2_clocks.PLL2_Q_Frequency / UART_GET_DIV_FACTOR(huart->Init.ClockP
 4891              		.loc 1 2934 0
 4892 03d4 03A8     		add	r0, sp, #12
 4893 03d6 FFF7FEFF 		bl	HAL_RCCEx_GetPLL2ClockFreq
 4894              	.LVL427:
2935:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4895              		.loc 1 2935 0
 4896 03da 0498     		ldr	r0, [sp, #16]
 4897 03dc 636A     		ldr	r3, [r4, #36]
 4898 03de 002B     		cmp	r3, #0
 4899 03e0 71D0     		beq	.L497
2935:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4900              		.loc 1 2935 0 is_stmt 0 discriminator 1
 4901 03e2 012B     		cmp	r3, #1
 4902 03e4 74D0     		beq	.L498
2935:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4903              		.loc 1 2935 0 discriminator 3
 4904 03e6 022B     		cmp	r3, #2
 4905 03e8 74D0     		beq	.L499
2935:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4906              		.loc 1 2935 0 discriminator 5
 4907 03ea 032B     		cmp	r3, #3
 4908 03ec 74D0     		beq	.L500
2935:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4909              		.loc 1 2935 0 discriminator 7
 4910 03ee 042B     		cmp	r3, #4
 4911 03f0 74D0     		beq	.L501
2935:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4912              		.loc 1 2935 0 discriminator 9
 4913 03f2 052B     		cmp	r3, #5
 4914 03f4 74D0     		beq	.L502
2935:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4915              		.loc 1 2935 0 discriminator 11
 4916 03f6 062B     		cmp	r3, #6
 4917 03f8 74D0     		beq	.L503
2935:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4918              		.loc 1 2935 0 discriminator 13
 4919 03fa 072B     		cmp	r3, #7
 4920 03fc 74D0     		beq	.L504
2935:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4921              		.loc 1 2935 0 discriminator 15
 4922 03fe 082B     		cmp	r3, #8
 4923 0400 74D0     		beq	.L505
2935:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4924              		.loc 1 2935 0 discriminator 17
 4925 0402 092B     		cmp	r3, #9
 4926 0404 74D0     		beq	.L506
2935:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4927              		.loc 1 2935 0 discriminator 19
 4928 0406 0A2B     		cmp	r3, #10
 4929 0408 74D0     		beq	.L507
2935:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4930              		.loc 1 2935 0 discriminator 21
 4931 040a 0B2B     		cmp	r3, #11
 4932 040c 58D0     		beq	.L867
2935:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4933              		.loc 1 2935 0
ARM GAS  /tmp/ccmyImrL.s 			page 171


 4934 040e 0123     		movs	r3, #1
 4935 0410 5AE0     		b	.L416
 4936              	.L410:
2931:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4937              		.loc 1 2931 0 is_stmt 1
 4938 0412 FFF7FEFF 		bl	HAL_RCCEx_GetD3PCLK1Freq
 4939              	.LVL428:
 4940 0416 636A     		ldr	r3, [r4, #36]
 4941 0418 D3B1     		cbz	r3, .L485
2931:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4942              		.loc 1 2931 0 is_stmt 0 discriminator 1
 4943 041a 012B     		cmp	r3, #1
 4944 041c 3AD0     		beq	.L486
2931:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4945              		.loc 1 2931 0 discriminator 3
 4946 041e 022B     		cmp	r3, #2
 4947 0420 3AD0     		beq	.L487
2931:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4948              		.loc 1 2931 0 discriminator 5
 4949 0422 032B     		cmp	r3, #3
 4950 0424 3AD0     		beq	.L488
2931:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4951              		.loc 1 2931 0 discriminator 7
 4952 0426 042B     		cmp	r3, #4
 4953 0428 3AD0     		beq	.L489
2931:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4954              		.loc 1 2931 0 discriminator 9
 4955 042a 052B     		cmp	r3, #5
 4956 042c 3AD0     		beq	.L490
2931:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4957              		.loc 1 2931 0 discriminator 11
 4958 042e 062B     		cmp	r3, #6
 4959 0430 3AD0     		beq	.L491
2931:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4960              		.loc 1 2931 0 discriminator 13
 4961 0432 072B     		cmp	r3, #7
 4962 0434 3AD0     		beq	.L492
2931:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4963              		.loc 1 2931 0 discriminator 15
 4964 0436 082B     		cmp	r3, #8
 4965 0438 3AD0     		beq	.L493
2931:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4966              		.loc 1 2931 0 discriminator 17
 4967 043a 092B     		cmp	r3, #9
 4968 043c 3AD0     		beq	.L494
2931:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4969              		.loc 1 2931 0 discriminator 19
 4970 043e 0A2B     		cmp	r3, #10
 4971 0440 3CD0     		beq	.L495
2931:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4972              		.loc 1 2931 0 discriminator 21
 4973 0442 0B2B     		cmp	r3, #11
 4974 0444 01D0     		beq	.L868
2931:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4975              		.loc 1 2931 0
 4976 0446 0123     		movs	r3, #1
 4977 0448 03E0     		b	.L415
ARM GAS  /tmp/ccmyImrL.s 			page 172


 4978              	.L868:
 4979 044a 4FF48073 		mov	r3, #256
 4980 044e 00E0     		b	.L415
 4981              	.L485:
 4982 0450 0123     		movs	r3, #1
 4983              	.L415:
2931:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4984              		.loc 1 2931 0 discriminator 48
 4985 0452 B0FBF3F0 		udiv	r0, r0, r3
 4986              	.LVL429:
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 4987              		.loc 1 2861 0 is_stmt 1 discriminator 48
 4988 0456 0026     		movs	r6, #0
 4989              	.LVL430:
 4990              	.L407:
2963:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 4991              		.loc 1 2963 0
 4992 0458 0028     		cmp	r0, #0
 4993 045a 00F0F086 		beq	.L420
2966:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 4994              		.loc 1 2966 0
 4995 045e 6768     		ldr	r7, [r4, #4]
 4996 0460 07EB4703 		add	r3, r7, r7, lsl #1
 4997 0464 9842     		cmp	r0, r3
 4998 0466 C1F0F180 		bcc	.L569
2966:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 4999              		.loc 1 2966 0 is_stmt 0 discriminator 1
 5000 046a B0EB073F 		cmp	r0, r7, lsl #12
 5001 046e 01F2EF80 		bhi	.L570
2973:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 5002              		.loc 1 2973 0 is_stmt 1
 5003 0472 082D     		cmp	r5, #8
 5004 0474 00F07682 		beq	.L422
 5005 0478 40F28881 		bls	.L869
 5006 047c 202D     		cmp	r5, #32
 5007 047e 00F09383 		beq	.L426
 5008 0482 402D     		cmp	r5, #64
 5009 0484 00F0D983 		beq	.L427
 5010 0488 102D     		cmp	r5, #16
 5011 048a 00F0C382 		beq	.L870
 5012              	.L571:
3004:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5013              		.loc 1 3004 0
 5014 048e 0126     		movs	r6, #1
 5015              	.LVL431:
2860:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 5016              		.loc 1 2860 0
 5017 0490 0020     		movs	r0, #0
 5018              	.LVL432:
 5019 0492 06E2     		b	.L421
 5020              	.LVL433:
 5021              	.L486:
2931:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5022              		.loc 1 2931 0
 5023 0494 0223     		movs	r3, #2
 5024 0496 DCE7     		b	.L415
 5025              	.L487:
ARM GAS  /tmp/ccmyImrL.s 			page 173


 5026 0498 0423     		movs	r3, #4
 5027 049a DAE7     		b	.L415
 5028              	.L488:
 5029 049c 0623     		movs	r3, #6
 5030 049e D8E7     		b	.L415
 5031              	.L489:
 5032 04a0 0823     		movs	r3, #8
 5033 04a2 D6E7     		b	.L415
 5034              	.L490:
 5035 04a4 0A23     		movs	r3, #10
 5036 04a6 D4E7     		b	.L415
 5037              	.L491:
 5038 04a8 0C23     		movs	r3, #12
 5039 04aa D2E7     		b	.L415
 5040              	.L492:
 5041 04ac 1023     		movs	r3, #16
 5042 04ae D0E7     		b	.L415
 5043              	.L493:
 5044 04b0 2023     		movs	r3, #32
 5045 04b2 CEE7     		b	.L415
 5046              	.L494:
 5047 04b4 4023     		movs	r3, #64
 5048 04b6 CCE7     		b	.L415
 5049              	.L898:
 5050              		.align	2
 5051              	.L897:
 5052 04b8 00440258 		.word	1476543488
 5053              	.L495:
 5054 04bc 8023     		movs	r3, #128
 5055 04be C8E7     		b	.L415
 5056              	.L867:
2935:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5057              		.loc 1 2935 0
 5058 04c0 4FF48073 		mov	r3, #256
 5059 04c4 00E0     		b	.L416
 5060              	.L497:
 5061 04c6 0123     		movs	r3, #1
 5062              	.L416:
2935:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5063              		.loc 1 2935 0 is_stmt 0 discriminator 48
 5064 04c8 B0FBF3F0 		udiv	r0, r0, r3
 5065              	.LVL434:
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5066              		.loc 1 2861 0 is_stmt 1 discriminator 48
 5067 04cc 0026     		movs	r6, #0
2936:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL3:
 5068              		.loc 1 2936 0 discriminator 48
 5069 04ce C3E7     		b	.L407
 5070              	.LVL435:
 5071              	.L498:
2935:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5072              		.loc 1 2935 0
 5073 04d0 0223     		movs	r3, #2
 5074 04d2 F9E7     		b	.L416
 5075              	.L499:
 5076 04d4 0423     		movs	r3, #4
 5077 04d6 F7E7     		b	.L416
ARM GAS  /tmp/ccmyImrL.s 			page 174


 5078              	.L500:
 5079 04d8 0623     		movs	r3, #6
 5080 04da F5E7     		b	.L416
 5081              	.L501:
 5082 04dc 0823     		movs	r3, #8
 5083 04de F3E7     		b	.L416
 5084              	.L502:
 5085 04e0 0A23     		movs	r3, #10
 5086 04e2 F1E7     		b	.L416
 5087              	.L503:
 5088 04e4 0C23     		movs	r3, #12
 5089 04e6 EFE7     		b	.L416
 5090              	.L504:
 5091 04e8 1023     		movs	r3, #16
 5092 04ea EDE7     		b	.L416
 5093              	.L505:
 5094 04ec 2023     		movs	r3, #32
 5095 04ee EBE7     		b	.L416
 5096              	.L506:
 5097 04f0 4023     		movs	r3, #64
 5098 04f2 E9E7     		b	.L416
 5099              	.L507:
 5100 04f4 8023     		movs	r3, #128
 5101 04f6 E7E7     		b	.L416
 5102              	.L408:
2938:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         lpuart_ker_ck_pres = (pll3_clocks.PLL3_Q_Frequency / UART_GET_DIV_FACTOR(huart->Init.ClockP
 5103              		.loc 1 2938 0
 5104 04f8 6846     		mov	r0, sp
 5105 04fa FFF7FEFF 		bl	HAL_RCCEx_GetPLL3ClockFreq
 5106              	.LVL436:
2939:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5107              		.loc 1 2939 0
 5108 04fe 0198     		ldr	r0, [sp, #4]
 5109 0500 636A     		ldr	r3, [r4, #36]
 5110 0502 D3B1     		cbz	r3, .L509
2939:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5111              		.loc 1 2939 0 is_stmt 0 discriminator 1
 5112 0504 012B     		cmp	r3, #1
 5113 0506 1DD0     		beq	.L510
2939:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5114              		.loc 1 2939 0 discriminator 3
 5115 0508 022B     		cmp	r3, #2
 5116 050a 1DD0     		beq	.L511
2939:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5117              		.loc 1 2939 0 discriminator 5
 5118 050c 032B     		cmp	r3, #3
 5119 050e 1DD0     		beq	.L512
2939:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5120              		.loc 1 2939 0 discriminator 7
 5121 0510 042B     		cmp	r3, #4
 5122 0512 1DD0     		beq	.L513
2939:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5123              		.loc 1 2939 0 discriminator 9
 5124 0514 052B     		cmp	r3, #5
 5125 0516 1DD0     		beq	.L514
2939:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5126              		.loc 1 2939 0 discriminator 11
ARM GAS  /tmp/ccmyImrL.s 			page 175


 5127 0518 062B     		cmp	r3, #6
 5128 051a 1DD0     		beq	.L515
2939:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5129              		.loc 1 2939 0 discriminator 13
 5130 051c 072B     		cmp	r3, #7
 5131 051e 1DD0     		beq	.L516
2939:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5132              		.loc 1 2939 0 discriminator 15
 5133 0520 082B     		cmp	r3, #8
 5134 0522 1DD0     		beq	.L517
2939:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5135              		.loc 1 2939 0 discriminator 17
 5136 0524 092B     		cmp	r3, #9
 5137 0526 1DD0     		beq	.L518
2939:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5138              		.loc 1 2939 0 discriminator 19
 5139 0528 0A2B     		cmp	r3, #10
 5140 052a 1DD0     		beq	.L519
2939:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5141              		.loc 1 2939 0 discriminator 21
 5142 052c 0B2B     		cmp	r3, #11
 5143 052e 01D0     		beq	.L871
2939:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5144              		.loc 1 2939 0
 5145 0530 0123     		movs	r3, #1
 5146 0532 03E0     		b	.L417
 5147              	.L871:
 5148 0534 4FF48073 		mov	r3, #256
 5149 0538 00E0     		b	.L417
 5150              	.L509:
 5151 053a 0123     		movs	r3, #1
 5152              	.L417:
2939:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5153              		.loc 1 2939 0 discriminator 48
 5154 053c B0FBF3F0 		udiv	r0, r0, r3
 5155              	.LVL437:
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5156              		.loc 1 2861 0 is_stmt 1 discriminator 48
 5157 0540 0026     		movs	r6, #0
2940:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 5158              		.loc 1 2940 0 discriminator 48
 5159 0542 89E7     		b	.L407
 5160              	.LVL438:
 5161              	.L510:
2939:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5162              		.loc 1 2939 0
 5163 0544 0223     		movs	r3, #2
 5164 0546 F9E7     		b	.L417
 5165              	.L511:
 5166 0548 0423     		movs	r3, #4
 5167 054a F7E7     		b	.L417
 5168              	.L512:
 5169 054c 0623     		movs	r3, #6
 5170 054e F5E7     		b	.L417
 5171              	.L513:
 5172 0550 0823     		movs	r3, #8
 5173 0552 F3E7     		b	.L417
ARM GAS  /tmp/ccmyImrL.s 			page 176


 5174              	.L514:
 5175 0554 0A23     		movs	r3, #10
 5176 0556 F1E7     		b	.L417
 5177              	.L515:
 5178 0558 0C23     		movs	r3, #12
 5179 055a EFE7     		b	.L417
 5180              	.L516:
 5181 055c 1023     		movs	r3, #16
 5182 055e EDE7     		b	.L417
 5183              	.L517:
 5184 0560 2023     		movs	r3, #32
 5185 0562 EBE7     		b	.L417
 5186              	.L518:
 5187 0564 4023     		movs	r3, #64
 5188 0566 E9E7     		b	.L417
 5189              	.L519:
 5190 0568 8023     		movs	r3, #128
 5191 056a E7E7     		b	.L417
 5192              	.L866:
2942:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 5193              		.loc 1 2942 0
 5194 056c A04B     		ldr	r3, .L899
 5195 056e 1B68     		ldr	r3, [r3]
 5196 0570 13F0200F 		tst	r3, #32
 5197 0574 3BD0     		beq	.L418
2944:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5198              		.loc 1 2944 0
 5199 0576 9E4B     		ldr	r3, .L899
 5200 0578 1B68     		ldr	r3, [r3]
 5201 057a C3F3C103 		ubfx	r3, r3, #3, #2
 5202 057e 9D48     		ldr	r0, .L899+4
 5203 0580 D840     		lsrs	r0, r0, r3
 5204 0582 636A     		ldr	r3, [r4, #36]
 5205 0584 C3B1     		cbz	r3, .L521
2944:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5206              		.loc 1 2944 0 is_stmt 0 discriminator 1
 5207 0586 012B     		cmp	r3, #1
 5208 0588 1BD0     		beq	.L522
2944:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5209              		.loc 1 2944 0 discriminator 3
 5210 058a 022B     		cmp	r3, #2
 5211 058c 1BD0     		beq	.L523
2944:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5212              		.loc 1 2944 0 discriminator 5
 5213 058e 032B     		cmp	r3, #3
 5214 0590 1BD0     		beq	.L524
2944:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5215              		.loc 1 2944 0 discriminator 7
 5216 0592 042B     		cmp	r3, #4
 5217 0594 1BD0     		beq	.L525
2944:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5218              		.loc 1 2944 0 discriminator 9
 5219 0596 052B     		cmp	r3, #5
 5220 0598 1BD0     		beq	.L526
2944:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5221              		.loc 1 2944 0 discriminator 11
 5222 059a 062B     		cmp	r3, #6
ARM GAS  /tmp/ccmyImrL.s 			page 177


 5223 059c 1BD0     		beq	.L527
2944:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5224              		.loc 1 2944 0 discriminator 13
 5225 059e 072B     		cmp	r3, #7
 5226 05a0 1BD0     		beq	.L528
2944:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5227              		.loc 1 2944 0 discriminator 15
 5228 05a2 082B     		cmp	r3, #8
 5229 05a4 1BD0     		beq	.L529
2944:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5230              		.loc 1 2944 0 discriminator 17
 5231 05a6 092B     		cmp	r3, #9
 5232 05a8 1BD0     		beq	.L530
2944:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5233              		.loc 1 2944 0 discriminator 19
 5234 05aa 0A2B     		cmp	r3, #10
 5235 05ac 1BD0     		beq	.L531
2944:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5236              		.loc 1 2944 0 discriminator 21
 5237 05ae 0B2B     		cmp	r3, #11
 5238 05b0 1BD1     		bne	.L532
2944:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5239              		.loc 1 2944 0
 5240 05b2 4FF48073 		mov	r3, #256
 5241 05b6 00E0     		b	.L419
 5242              	.L521:
 5243 05b8 0123     		movs	r3, #1
 5244              	.L419:
2944:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5245              		.loc 1 2944 0 discriminator 48
 5246 05ba B0FBF3F0 		udiv	r0, r0, r3
 5247              	.LVL439:
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5248              		.loc 1 2861 0 is_stmt 1 discriminator 48
 5249 05be 0026     		movs	r6, #0
 5250 05c0 4AE7     		b	.L407
 5251              	.LVL440:
 5252              	.L522:
2944:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5253              		.loc 1 2944 0
 5254 05c2 0223     		movs	r3, #2
 5255 05c4 F9E7     		b	.L419
 5256              	.L523:
 5257 05c6 0423     		movs	r3, #4
 5258 05c8 F7E7     		b	.L419
 5259              	.L524:
 5260 05ca 0623     		movs	r3, #6
 5261 05cc F5E7     		b	.L419
 5262              	.L525:
 5263 05ce 0823     		movs	r3, #8
 5264 05d0 F3E7     		b	.L419
 5265              	.L526:
 5266 05d2 0A23     		movs	r3, #10
 5267 05d4 F1E7     		b	.L419
 5268              	.L527:
 5269 05d6 0C23     		movs	r3, #12
 5270 05d8 EFE7     		b	.L419
ARM GAS  /tmp/ccmyImrL.s 			page 178


 5271              	.L528:
 5272 05da 1023     		movs	r3, #16
 5273 05dc EDE7     		b	.L419
 5274              	.L529:
 5275 05de 2023     		movs	r3, #32
 5276 05e0 EBE7     		b	.L419
 5277              	.L530:
 5278 05e2 4023     		movs	r3, #64
 5279 05e4 E9E7     		b	.L419
 5280              	.L531:
 5281 05e6 8023     		movs	r3, #128
 5282 05e8 E7E7     		b	.L419
 5283              	.L532:
 5284 05ea 0123     		movs	r3, #1
 5285 05ec E5E7     		b	.L419
 5286              	.L418:
2948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5287              		.loc 1 2948 0
 5288 05ee 636A     		ldr	r3, [r4, #36]
 5289 05f0 002B     		cmp	r3, #0
 5290 05f2 58D0     		beq	.L533
2948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5291              		.loc 1 2948 0 is_stmt 0 discriminator 1
 5292 05f4 012B     		cmp	r3, #1
 5293 05f6 59D0     		beq	.L534
2948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5294              		.loc 1 2948 0 discriminator 3
 5295 05f8 022B     		cmp	r3, #2
 5296 05fa 5AD0     		beq	.L535
2948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5297              		.loc 1 2948 0 discriminator 5
 5298 05fc 032B     		cmp	r3, #3
 5299 05fe 5BD0     		beq	.L536
2948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5300              		.loc 1 2948 0 discriminator 7
 5301 0600 042B     		cmp	r3, #4
 5302 0602 5CD0     		beq	.L537
2948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5303              		.loc 1 2948 0 discriminator 9
 5304 0604 052B     		cmp	r3, #5
 5305 0606 5DD0     		beq	.L538
2948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5306              		.loc 1 2948 0 discriminator 11
 5307 0608 062B     		cmp	r3, #6
 5308 060a 5ED0     		beq	.L539
2948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5309              		.loc 1 2948 0 discriminator 13
 5310 060c 072B     		cmp	r3, #7
 5311 060e 5FD0     		beq	.L540
2948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5312              		.loc 1 2948 0 discriminator 15
 5313 0610 082B     		cmp	r3, #8
 5314 0612 60D0     		beq	.L541
2948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5315              		.loc 1 2948 0 discriminator 17
 5316 0614 092B     		cmp	r3, #9
 5317 0616 61D0     		beq	.L542
ARM GAS  /tmp/ccmyImrL.s 			page 179


2948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5318              		.loc 1 2948 0 discriminator 19
 5319 0618 0A2B     		cmp	r3, #10
 5320 061a 62D0     		beq	.L543
2948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5321              		.loc 1 2948 0 discriminator 21
 5322 061c 0B2B     		cmp	r3, #11
 5323 061e 63D1     		bne	.L544
2948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5324              		.loc 1 2948 0
 5325 0620 7548     		ldr	r0, .L899+8
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5326              		.loc 1 2861 0 is_stmt 1
 5327 0622 0026     		movs	r6, #0
 5328 0624 18E7     		b	.L407
 5329              	.L412:
2952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5330              		.loc 1 2952 0
 5331 0626 636A     		ldr	r3, [r4, #36]
 5332 0628 002B     		cmp	r3, #0
 5333 062a 60D0     		beq	.L545
2952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5334              		.loc 1 2952 0 is_stmt 0 discriminator 1
 5335 062c 012B     		cmp	r3, #1
 5336 062e 61D0     		beq	.L546
2952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5337              		.loc 1 2952 0 discriminator 3
 5338 0630 022B     		cmp	r3, #2
 5339 0632 62D0     		beq	.L547
2952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5340              		.loc 1 2952 0 discriminator 5
 5341 0634 032B     		cmp	r3, #3
 5342 0636 63D0     		beq	.L548
2952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5343              		.loc 1 2952 0 discriminator 7
 5344 0638 042B     		cmp	r3, #4
 5345 063a 64D0     		beq	.L549
2952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5346              		.loc 1 2952 0 discriminator 9
 5347 063c 052B     		cmp	r3, #5
 5348 063e 65D0     		beq	.L550
2952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5349              		.loc 1 2952 0 discriminator 11
 5350 0640 062B     		cmp	r3, #6
 5351 0642 66D0     		beq	.L551
2952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5352              		.loc 1 2952 0 discriminator 13
 5353 0644 072B     		cmp	r3, #7
 5354 0646 67D0     		beq	.L552
2952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5355              		.loc 1 2952 0 discriminator 15
 5356 0648 082B     		cmp	r3, #8
 5357 064a 68D0     		beq	.L553
2952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5358              		.loc 1 2952 0 discriminator 17
 5359 064c 092B     		cmp	r3, #9
 5360 064e 69D0     		beq	.L554
ARM GAS  /tmp/ccmyImrL.s 			page 180


2952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5361              		.loc 1 2952 0 discriminator 19
 5362 0650 0A2B     		cmp	r3, #10
 5363 0652 6BD0     		beq	.L555
2952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5364              		.loc 1 2952 0 discriminator 21
 5365 0654 0B2B     		cmp	r3, #11
 5366 0656 02D0     		beq	.L872
2952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5367              		.loc 1 2952 0
 5368 0658 6848     		ldr	r0, .L899+12
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5369              		.loc 1 2861 0 is_stmt 1
 5370 065a 0026     		movs	r6, #0
 5371 065c FCE6     		b	.L407
 5372              	.L872:
2952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5373              		.loc 1 2952 0
 5374 065e 43F60950 		movw	r0, #15625
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5375              		.loc 1 2861 0
 5376 0662 0026     		movs	r6, #0
 5377 0664 F8E6     		b	.L407
 5378              	.L413:
2955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5379              		.loc 1 2955 0
 5380 0666 636A     		ldr	r3, [r4, #36]
 5381 0668 002B     		cmp	r3, #0
 5382 066a 63D0     		beq	.L557
2955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5383              		.loc 1 2955 0 is_stmt 0 discriminator 1
 5384 066c 012B     		cmp	r3, #1
 5385 066e 65D0     		beq	.L558
2955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5386              		.loc 1 2955 0 discriminator 3
 5387 0670 022B     		cmp	r3, #2
 5388 0672 67D0     		beq	.L559
2955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5389              		.loc 1 2955 0 discriminator 5
 5390 0674 032B     		cmp	r3, #3
 5391 0676 69D0     		beq	.L560
2955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5392              		.loc 1 2955 0 discriminator 7
 5393 0678 042B     		cmp	r3, #4
 5394 067a 6BD0     		beq	.L561
2955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5395              		.loc 1 2955 0 discriminator 9
 5396 067c 052B     		cmp	r3, #5
 5397 067e 6DD0     		beq	.L562
2955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5398              		.loc 1 2955 0 discriminator 11
 5399 0680 062B     		cmp	r3, #6
 5400 0682 6FD0     		beq	.L563
2955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5401              		.loc 1 2955 0 discriminator 13
 5402 0684 072B     		cmp	r3, #7
 5403 0686 71D0     		beq	.L564
ARM GAS  /tmp/ccmyImrL.s 			page 181


2955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5404              		.loc 1 2955 0 discriminator 15
 5405 0688 082B     		cmp	r3, #8
 5406 068a 73D0     		beq	.L565
2955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5407              		.loc 1 2955 0 discriminator 17
 5408 068c 092B     		cmp	r3, #9
 5409 068e 75D0     		beq	.L566
2955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5410              		.loc 1 2955 0 discriminator 19
 5411 0690 0A2B     		cmp	r3, #10
 5412 0692 77D0     		beq	.L567
2955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5413              		.loc 1 2955 0 discriminator 21
 5414 0694 0B2B     		cmp	r3, #11
 5415 0696 03D0     		beq	.L873
2955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5416              		.loc 1 2955 0
 5417 0698 4FF40040 		mov	r0, #32768
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5418              		.loc 1 2861 0 is_stmt 1
 5419 069c 0026     		movs	r6, #0
 5420 069e DBE6     		b	.L407
 5421              	.L873:
2955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5422              		.loc 1 2955 0
 5423 06a0 8020     		movs	r0, #128
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5424              		.loc 1 2861 0
 5425 06a2 0026     		movs	r6, #0
 5426 06a4 D8E6     		b	.L407
 5427              	.L533:
2948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5428              		.loc 1 2948 0
 5429 06a6 5348     		ldr	r0, .L899+4
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5430              		.loc 1 2861 0
 5431 06a8 0026     		movs	r6, #0
 5432 06aa D5E6     		b	.L407
 5433              	.L534:
2948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5434              		.loc 1 2948 0
 5435 06ac 5448     		ldr	r0, .L899+16
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5436              		.loc 1 2861 0
 5437 06ae 0026     		movs	r6, #0
 5438 06b0 D2E6     		b	.L407
 5439              	.L535:
2948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5440              		.loc 1 2948 0
 5441 06b2 5448     		ldr	r0, .L899+20
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5442              		.loc 1 2861 0
 5443 06b4 0026     		movs	r6, #0
 5444 06b6 CFE6     		b	.L407
 5445              	.L536:
2948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
ARM GAS  /tmp/ccmyImrL.s 			page 182


 5446              		.loc 1 2948 0
 5447 06b8 5348     		ldr	r0, .L899+24
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5448              		.loc 1 2861 0
 5449 06ba 0026     		movs	r6, #0
 5450 06bc CCE6     		b	.L407
 5451              	.L537:
2948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5452              		.loc 1 2948 0
 5453 06be 5348     		ldr	r0, .L899+28
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5454              		.loc 1 2861 0
 5455 06c0 0026     		movs	r6, #0
 5456 06c2 C9E6     		b	.L407
 5457              	.L538:
2948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5458              		.loc 1 2948 0
 5459 06c4 5248     		ldr	r0, .L899+32
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5460              		.loc 1 2861 0
 5461 06c6 0026     		movs	r6, #0
 5462 06c8 C6E6     		b	.L407
 5463              	.L539:
2948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5464              		.loc 1 2948 0
 5465 06ca 5248     		ldr	r0, .L899+36
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5466              		.loc 1 2861 0
 5467 06cc 0026     		movs	r6, #0
 5468 06ce C3E6     		b	.L407
 5469              	.L540:
2948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5470              		.loc 1 2948 0
 5471 06d0 4A48     		ldr	r0, .L899+12
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5472              		.loc 1 2861 0
 5473 06d2 0026     		movs	r6, #0
 5474 06d4 C0E6     		b	.L407
 5475              	.L541:
2948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5476              		.loc 1 2948 0
 5477 06d6 5048     		ldr	r0, .L899+40
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5478              		.loc 1 2861 0
 5479 06d8 0026     		movs	r6, #0
 5480 06da BDE6     		b	.L407
 5481              	.L542:
2948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5482              		.loc 1 2948 0
 5483 06dc 4F48     		ldr	r0, .L899+44
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5484              		.loc 1 2861 0
 5485 06de 0026     		movs	r6, #0
 5486 06e0 BAE6     		b	.L407
 5487              	.L543:
2948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5488              		.loc 1 2948 0
ARM GAS  /tmp/ccmyImrL.s 			page 183


 5489 06e2 4F48     		ldr	r0, .L899+48
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5490              		.loc 1 2861 0
 5491 06e4 0026     		movs	r6, #0
 5492 06e6 B7E6     		b	.L407
 5493              	.L544:
2948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5494              		.loc 1 2948 0
 5495 06e8 4248     		ldr	r0, .L899+4
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5496              		.loc 1 2861 0
 5497 06ea 0026     		movs	r6, #0
 5498 06ec B4E6     		b	.L407
 5499              	.L545:
2952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5500              		.loc 1 2952 0
 5501 06ee 4348     		ldr	r0, .L899+12
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5502              		.loc 1 2861 0
 5503 06f0 0026     		movs	r6, #0
 5504 06f2 B1E6     		b	.L407
 5505              	.L546:
2952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5506              		.loc 1 2952 0
 5507 06f4 4848     		ldr	r0, .L899+40
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5508              		.loc 1 2861 0
 5509 06f6 0026     		movs	r6, #0
 5510 06f8 AEE6     		b	.L407
 5511              	.L547:
2952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5512              		.loc 1 2952 0
 5513 06fa 4848     		ldr	r0, .L899+44
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5514              		.loc 1 2861 0
 5515 06fc 0026     		movs	r6, #0
 5516 06fe ABE6     		b	.L407
 5517              	.L548:
2952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5518              		.loc 1 2952 0
 5519 0700 4848     		ldr	r0, .L899+52
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5520              		.loc 1 2861 0
 5521 0702 0026     		movs	r6, #0
 5522 0704 A8E6     		b	.L407
 5523              	.L549:
2952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5524              		.loc 1 2952 0
 5525 0706 4648     		ldr	r0, .L899+48
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5526              		.loc 1 2861 0
 5527 0708 0026     		movs	r6, #0
 5528 070a A5E6     		b	.L407
 5529              	.L550:
2952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5530              		.loc 1 2952 0
 5531 070c 4648     		ldr	r0, .L899+56
ARM GAS  /tmp/ccmyImrL.s 			page 184


2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5532              		.loc 1 2861 0
 5533 070e 0026     		movs	r6, #0
 5534 0710 A2E6     		b	.L407
 5535              	.L551:
2952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5536              		.loc 1 2952 0
 5537 0712 4648     		ldr	r0, .L899+60
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5538              		.loc 1 2861 0
 5539 0714 0026     		movs	r6, #0
 5540 0716 9FE6     		b	.L407
 5541              	.L552:
2952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5542              		.loc 1 2952 0
 5543 0718 3748     		ldr	r0, .L899+8
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5544              		.loc 1 2861 0
 5545 071a 0026     		movs	r6, #0
 5546 071c 9CE6     		b	.L407
 5547              	.L553:
2952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5548              		.loc 1 2952 0
 5549 071e 4448     		ldr	r0, .L899+64
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5550              		.loc 1 2861 0
 5551 0720 0026     		movs	r6, #0
 5552 0722 99E6     		b	.L407
 5553              	.L554:
2952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5554              		.loc 1 2952 0
 5555 0724 4FF22440 		movw	r0, #62500
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5556              		.loc 1 2861 0
 5557 0728 0026     		movs	r6, #0
 5558 072a 95E6     		b	.L407
 5559              	.L555:
2952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5560              		.loc 1 2952 0
 5561 072c 47F61220 		movw	r0, #31250
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5562              		.loc 1 2861 0
 5563 0730 0026     		movs	r6, #0
 5564 0732 91E6     		b	.L407
 5565              	.L557:
2955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5566              		.loc 1 2955 0
 5567 0734 4FF40040 		mov	r0, #32768
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5568              		.loc 1 2861 0
 5569 0738 0026     		movs	r6, #0
 5570 073a 8DE6     		b	.L407
 5571              	.L558:
2955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5572              		.loc 1 2955 0
 5573 073c 4FF48040 		mov	r0, #16384
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
ARM GAS  /tmp/ccmyImrL.s 			page 185


 5574              		.loc 1 2861 0
 5575 0740 0026     		movs	r6, #0
 5576 0742 89E6     		b	.L407
 5577              	.L559:
2955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5578              		.loc 1 2955 0
 5579 0744 4FF40050 		mov	r0, #8192
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5580              		.loc 1 2861 0
 5581 0748 0026     		movs	r6, #0
 5582 074a 85E6     		b	.L407
 5583              	.L560:
2955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5584              		.loc 1 2955 0
 5585 074c 41F25550 		movw	r0, #5461
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5586              		.loc 1 2861 0
 5587 0750 0026     		movs	r6, #0
 5588 0752 81E6     		b	.L407
 5589              	.L561:
2955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5590              		.loc 1 2955 0
 5591 0754 4FF48050 		mov	r0, #4096
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5592              		.loc 1 2861 0
 5593 0758 0026     		movs	r6, #0
 5594 075a 7DE6     		b	.L407
 5595              	.L562:
2955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5596              		.loc 1 2955 0
 5597 075c 40F6CC40 		movw	r0, #3276
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5598              		.loc 1 2861 0
 5599 0760 0026     		movs	r6, #0
 5600 0762 79E6     		b	.L407
 5601              	.L563:
2955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5602              		.loc 1 2955 0
 5603 0764 40F6AA20 		movw	r0, #2730
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5604              		.loc 1 2861 0
 5605 0768 0026     		movs	r6, #0
 5606 076a 75E6     		b	.L407
 5607              	.L564:
2955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5608              		.loc 1 2955 0
 5609 076c 4FF40060 		mov	r0, #2048
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5610              		.loc 1 2861 0
 5611 0770 0026     		movs	r6, #0
 5612 0772 71E6     		b	.L407
 5613              	.L565:
2955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5614              		.loc 1 2955 0
 5615 0774 4FF48060 		mov	r0, #1024
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5616              		.loc 1 2861 0
ARM GAS  /tmp/ccmyImrL.s 			page 186


 5617 0778 0026     		movs	r6, #0
 5618 077a 6DE6     		b	.L407
 5619              	.L566:
2955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5620              		.loc 1 2955 0
 5621 077c 4FF40070 		mov	r0, #512
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5622              		.loc 1 2861 0
 5623 0780 0026     		movs	r6, #0
 5624 0782 69E6     		b	.L407
 5625              	.L567:
2955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5626              		.loc 1 2955 0
 5627 0784 4FF48070 		mov	r0, #256
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5628              		.loc 1 2861 0
 5629 0788 0026     		movs	r6, #0
 5630 078a 65E6     		b	.L407
 5631              	.LVL441:
 5632              	.L869:
2973:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 5633              		.loc 1 2973 0
 5634 078c 022D     		cmp	r5, #2
 5635 078e 51D0     		beq	.L424
 5636 0790 042D     		cmp	r5, #4
 5637 0792 7FF47CAE 		bne	.L571
2980:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(pll2_clocks.PLL2_Q_Frequency, huart->Init.BaudRat
 5638              		.loc 1 2980 0
 5639 0796 03A8     		add	r0, sp, #12
 5640              	.LVL442:
 5641 0798 FFF7FEFF 		bl	HAL_RCCEx_GetPLL2ClockFreq
 5642              	.LVL443:
2981:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5643              		.loc 1 2981 0
 5644 079c 0498     		ldr	r0, [sp, #16]
 5645 079e 636A     		ldr	r3, [r4, #36]
 5646 07a0 002B     		cmp	r3, #0
 5647 07a2 00F0AA80 		beq	.L584
2981:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5648              		.loc 1 2981 0 is_stmt 0 discriminator 1
 5649 07a6 012B     		cmp	r3, #1
 5650 07a8 00F0BE80 		beq	.L585
2981:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5651              		.loc 1 2981 0 discriminator 3
 5652 07ac 022B     		cmp	r3, #2
 5653 07ae 00F0BE80 		beq	.L586
2981:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5654              		.loc 1 2981 0 discriminator 5
 5655 07b2 032B     		cmp	r3, #3
 5656 07b4 00F0BE80 		beq	.L587
2981:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5657              		.loc 1 2981 0 discriminator 7
 5658 07b8 042B     		cmp	r3, #4
 5659 07ba 00F0BE80 		beq	.L588
2981:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5660              		.loc 1 2981 0 discriminator 9
 5661 07be 052B     		cmp	r3, #5
ARM GAS  /tmp/ccmyImrL.s 			page 187


 5662 07c0 00F0BE80 		beq	.L589
2981:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5663              		.loc 1 2981 0 discriminator 11
 5664 07c4 062B     		cmp	r3, #6
 5665 07c6 00F0BE80 		beq	.L590
2981:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5666              		.loc 1 2981 0 discriminator 13
 5667 07ca 072B     		cmp	r3, #7
 5668 07cc 00F0BE80 		beq	.L591
2981:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5669              		.loc 1 2981 0 discriminator 15
 5670 07d0 082B     		cmp	r3, #8
 5671 07d2 00F0BE80 		beq	.L592
2981:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5672              		.loc 1 2981 0 discriminator 17
 5673 07d6 092B     		cmp	r3, #9
 5674 07d8 00F0BE80 		beq	.L593
2981:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5675              		.loc 1 2981 0 discriminator 19
 5676 07dc 0A2B     		cmp	r3, #10
 5677 07de 00F0BE80 		beq	.L594
2981:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5678              		.loc 1 2981 0 discriminator 21
 5679 07e2 0B2B     		cmp	r3, #11
 5680 07e4 00F08580 		beq	.L874
2981:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5681              		.loc 1 2981 0
 5682 07e8 0122     		movs	r2, #1
 5683 07ea 0023     		movs	r3, #0
 5684 07ec 87E0     		b	.L430
 5685              	.L900:
 5686 07ee 00BF     		.align	2
 5687              	.L899:
 5688 07f0 00440258 		.word	1476543488
 5689 07f4 0090D003 		.word	64000000
 5690 07f8 90D00300 		.word	250000
 5691 07fc 00093D00 		.word	4000000
 5692 0800 0048E801 		.word	32000000
 5693 0804 0024F400 		.word	16000000
 5694 0808 AAC2A200 		.word	10666666
 5695 080c 00127A00 		.word	8000000
 5696 0810 00A86100 		.word	6400000
 5697 0814 55615100 		.word	5333333
 5698 0818 80841E00 		.word	2000000
 5699 081c 40420F00 		.word	1000000
 5700 0820 20A10700 		.word	500000
 5701 0824 2A2C0A00 		.word	666666
 5702 0828 801A0600 		.word	400000
 5703 082c 15160500 		.word	333333
 5704 0830 48E80100 		.word	125000
 5705              	.LVL444:
 5706              	.L424:
2976:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPres
 5707              		.loc 1 2976 0 is_stmt 1
 5708 0834 FFF7FEFF 		bl	HAL_RCCEx_GetD3PCLK1Freq
 5709              	.LVL445:
2977:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
ARM GAS  /tmp/ccmyImrL.s 			page 188


 5710              		.loc 1 2977 0
 5711 0838 636A     		ldr	r3, [r4, #36]
 5712 083a E3B1     		cbz	r3, .L572
2977:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5713              		.loc 1 2977 0 is_stmt 0 discriminator 1
 5714 083c 012B     		cmp	r3, #1
 5715 083e 3AD0     		beq	.L573
2977:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5716              		.loc 1 2977 0 discriminator 3
 5717 0840 022B     		cmp	r3, #2
 5718 0842 3BD0     		beq	.L574
2977:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5719              		.loc 1 2977 0 discriminator 5
 5720 0844 032B     		cmp	r3, #3
 5721 0846 3CD0     		beq	.L575
2977:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5722              		.loc 1 2977 0 discriminator 7
 5723 0848 042B     		cmp	r3, #4
 5724 084a 3DD0     		beq	.L576
2977:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5725              		.loc 1 2977 0 discriminator 9
 5726 084c 052B     		cmp	r3, #5
 5727 084e 3ED0     		beq	.L577
2977:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5728              		.loc 1 2977 0 discriminator 11
 5729 0850 062B     		cmp	r3, #6
 5730 0852 3FD0     		beq	.L578
2977:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5731              		.loc 1 2977 0 discriminator 13
 5732 0854 072B     		cmp	r3, #7
 5733 0856 40D0     		beq	.L579
2977:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5734              		.loc 1 2977 0 discriminator 15
 5735 0858 082B     		cmp	r3, #8
 5736 085a 41D0     		beq	.L580
2977:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5737              		.loc 1 2977 0 discriminator 17
 5738 085c 092B     		cmp	r3, #9
 5739 085e 42D0     		beq	.L581
2977:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5740              		.loc 1 2977 0 discriminator 19
 5741 0860 0A2B     		cmp	r3, #10
 5742 0862 43D0     		beq	.L582
2977:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5743              		.loc 1 2977 0 discriminator 21
 5744 0864 0B2B     		cmp	r3, #11
 5745 0866 02D0     		beq	.L875
2977:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5746              		.loc 1 2977 0
 5747 0868 0122     		movs	r2, #1
 5748 086a 0023     		movs	r3, #0
 5749 086c 05E0     		b	.L429
 5750              	.L875:
 5751 086e 4FF48072 		mov	r2, #256
 5752 0872 0023     		movs	r3, #0
 5753 0874 01E0     		b	.L429
 5754              	.L572:
ARM GAS  /tmp/ccmyImrL.s 			page 189


 5755 0876 0122     		movs	r2, #1
 5756 0878 0023     		movs	r3, #0
 5757              	.L429:
2977:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5758              		.loc 1 2977 0 discriminator 48
 5759 087a 0021     		movs	r1, #0
 5760 087c FFF7FEFF 		bl	__aeabi_uldivmod
 5761              	.LVL446:
 5762 0880 4FEA0129 		lsl	r9, r1, #8
 5763 0884 49EA1069 		orr	r9, r9, r0, lsr #24
 5764 0888 4FEA0028 		lsl	r8, r0, #8
 5765 088c 6268     		ldr	r2, [r4, #4]
 5766 088e 5008     		lsrs	r0, r2, #1
 5767 0890 0023     		movs	r3, #0
 5768 0892 18EB000B 		adds	fp, r8, r0
 5769 0896 49F1000C 		adc	ip, r9, #0
 5770 089a 5846     		mov	r0, fp
 5771 089c 6146     		mov	r1, ip
 5772 089e FFF7FEFF 		bl	__aeabi_uldivmod
 5773              	.LVL447:
 5774              	.L421:
3009:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 5775              		.loc 1 3009 0 is_stmt 1
 5776 08a2 A0F54072 		sub	r2, r0, #768
 5777 08a6 B44B     		ldr	r3, .L901+16
 5778 08a8 9A42     		cmp	r2, r3
 5779 08aa 00F2D386 		bhi	.L656
3011:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5780              		.loc 1 3011 0
 5781 08ae 2368     		ldr	r3, [r4]
 5782 08b0 D860     		str	r0, [r3, #12]
 5783 08b2 00F0C4BC 		b	.L420
 5784              	.LVL448:
 5785              	.L573:
2977:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5786              		.loc 1 2977 0
 5787 08b6 0222     		movs	r2, #2
 5788 08b8 0023     		movs	r3, #0
 5789 08ba DEE7     		b	.L429
 5790              	.L574:
 5791 08bc 0422     		movs	r2, #4
 5792 08be 0023     		movs	r3, #0
 5793 08c0 DBE7     		b	.L429
 5794              	.L575:
 5795 08c2 0622     		movs	r2, #6
 5796 08c4 0023     		movs	r3, #0
 5797 08c6 D8E7     		b	.L429
 5798              	.L576:
 5799 08c8 0822     		movs	r2, #8
 5800 08ca 0023     		movs	r3, #0
 5801 08cc D5E7     		b	.L429
 5802              	.L577:
 5803 08ce 0A22     		movs	r2, #10
 5804 08d0 0023     		movs	r3, #0
 5805 08d2 D2E7     		b	.L429
 5806              	.L578:
 5807 08d4 0C22     		movs	r2, #12
ARM GAS  /tmp/ccmyImrL.s 			page 190


 5808 08d6 0023     		movs	r3, #0
 5809 08d8 CFE7     		b	.L429
 5810              	.L579:
 5811 08da 1022     		movs	r2, #16
 5812 08dc 0023     		movs	r3, #0
 5813 08de CCE7     		b	.L429
 5814              	.L580:
 5815 08e0 2022     		movs	r2, #32
 5816 08e2 0023     		movs	r3, #0
 5817 08e4 C9E7     		b	.L429
 5818              	.L581:
 5819 08e6 4022     		movs	r2, #64
 5820 08e8 0023     		movs	r3, #0
 5821 08ea C6E7     		b	.L429
 5822              	.L582:
 5823 08ec 8022     		movs	r2, #128
 5824 08ee 0023     		movs	r3, #0
 5825 08f0 C3E7     		b	.L429
 5826              	.L874:
2981:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5827              		.loc 1 2981 0
 5828 08f2 4FF48072 		mov	r2, #256
 5829 08f6 0023     		movs	r3, #0
 5830 08f8 01E0     		b	.L430
 5831              	.L584:
 5832 08fa 0122     		movs	r2, #1
 5833 08fc 0023     		movs	r3, #0
 5834              	.L430:
2981:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5835              		.loc 1 2981 0 is_stmt 0 discriminator 48
 5836 08fe 0021     		movs	r1, #0
 5837 0900 FFF7FEFF 		bl	__aeabi_uldivmod
 5838              	.LVL449:
 5839 0904 4FEA0129 		lsl	r9, r1, #8
 5840 0908 49EA1069 		orr	r9, r9, r0, lsr #24
 5841 090c 4FEA0028 		lsl	r8, r0, #8
 5842 0910 6268     		ldr	r2, [r4, #4]
 5843 0912 5008     		lsrs	r0, r2, #1
 5844 0914 0023     		movs	r3, #0
 5845 0916 18EB000B 		adds	fp, r8, r0
 5846 091a 49F1000C 		adc	ip, r9, #0
 5847 091e 5846     		mov	r0, fp
 5848 0920 6146     		mov	r1, ip
 5849 0922 FFF7FEFF 		bl	__aeabi_uldivmod
 5850              	.LVL450:
2982:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           case UART_CLOCKSOURCE_PLL3:
 5851              		.loc 1 2982 0 is_stmt 1 discriminator 48
 5852 0926 BCE7     		b	.L421
 5853              	.LVL451:
 5854              	.L585:
2981:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5855              		.loc 1 2981 0
 5856 0928 0222     		movs	r2, #2
 5857 092a 0023     		movs	r3, #0
 5858 092c E7E7     		b	.L430
 5859              	.L586:
 5860 092e 0422     		movs	r2, #4
ARM GAS  /tmp/ccmyImrL.s 			page 191


 5861 0930 0023     		movs	r3, #0
 5862 0932 E4E7     		b	.L430
 5863              	.L587:
 5864 0934 0622     		movs	r2, #6
 5865 0936 0023     		movs	r3, #0
 5866 0938 E1E7     		b	.L430
 5867              	.L588:
 5868 093a 0822     		movs	r2, #8
 5869 093c 0023     		movs	r3, #0
 5870 093e DEE7     		b	.L430
 5871              	.L589:
 5872 0940 0A22     		movs	r2, #10
 5873 0942 0023     		movs	r3, #0
 5874 0944 DBE7     		b	.L430
 5875              	.L590:
 5876 0946 0C22     		movs	r2, #12
 5877 0948 0023     		movs	r3, #0
 5878 094a D8E7     		b	.L430
 5879              	.L591:
 5880 094c 1022     		movs	r2, #16
 5881 094e 0023     		movs	r3, #0
 5882 0950 D5E7     		b	.L430
 5883              	.L592:
 5884 0952 2022     		movs	r2, #32
 5885 0954 0023     		movs	r3, #0
 5886 0956 D2E7     		b	.L430
 5887              	.L593:
 5888 0958 4022     		movs	r2, #64
 5889 095a 0023     		movs	r3, #0
 5890 095c CFE7     		b	.L430
 5891              	.L594:
 5892 095e 8022     		movs	r2, #128
 5893 0960 0023     		movs	r3, #0
 5894 0962 CCE7     		b	.L430
 5895              	.LVL452:
 5896              	.L422:
2984:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(pll3_clocks.PLL3_Q_Frequency, huart->Init.BaudRat
 5897              		.loc 1 2984 0
 5898 0964 6846     		mov	r0, sp
 5899              	.LVL453:
 5900 0966 FFF7FEFF 		bl	HAL_RCCEx_GetPLL3ClockFreq
 5901              	.LVL454:
2985:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5902              		.loc 1 2985 0
 5903 096a 0198     		ldr	r0, [sp, #4]
 5904 096c 636A     		ldr	r3, [r4, #36]
 5905 096e E3B1     		cbz	r3, .L596
2985:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5906              		.loc 1 2985 0 is_stmt 0 discriminator 1
 5907 0970 012B     		cmp	r3, #1
 5908 0972 31D0     		beq	.L597
2985:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5909              		.loc 1 2985 0 discriminator 3
 5910 0974 022B     		cmp	r3, #2
 5911 0976 32D0     		beq	.L598
2985:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5912              		.loc 1 2985 0 discriminator 5
ARM GAS  /tmp/ccmyImrL.s 			page 192


 5913 0978 032B     		cmp	r3, #3
 5914 097a 33D0     		beq	.L599
2985:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5915              		.loc 1 2985 0 discriminator 7
 5916 097c 042B     		cmp	r3, #4
 5917 097e 34D0     		beq	.L600
2985:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5918              		.loc 1 2985 0 discriminator 9
 5919 0980 052B     		cmp	r3, #5
 5920 0982 35D0     		beq	.L601
2985:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5921              		.loc 1 2985 0 discriminator 11
 5922 0984 062B     		cmp	r3, #6
 5923 0986 36D0     		beq	.L602
2985:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5924              		.loc 1 2985 0 discriminator 13
 5925 0988 072B     		cmp	r3, #7
 5926 098a 37D0     		beq	.L603
2985:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5927              		.loc 1 2985 0 discriminator 15
 5928 098c 082B     		cmp	r3, #8
 5929 098e 38D0     		beq	.L604
2985:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5930              		.loc 1 2985 0 discriminator 17
 5931 0990 092B     		cmp	r3, #9
 5932 0992 39D0     		beq	.L605
2985:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5933              		.loc 1 2985 0 discriminator 19
 5934 0994 0A2B     		cmp	r3, #10
 5935 0996 3AD0     		beq	.L606
2985:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5936              		.loc 1 2985 0 discriminator 21
 5937 0998 0B2B     		cmp	r3, #11
 5938 099a 02D0     		beq	.L876
2985:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5939              		.loc 1 2985 0
 5940 099c 0122     		movs	r2, #1
 5941 099e 0023     		movs	r3, #0
 5942 09a0 05E0     		b	.L431
 5943              	.L876:
 5944 09a2 4FF48072 		mov	r2, #256
 5945 09a6 0023     		movs	r3, #0
 5946 09a8 01E0     		b	.L431
 5947              	.L596:
 5948 09aa 0122     		movs	r2, #1
 5949 09ac 0023     		movs	r3, #0
 5950              	.L431:
2985:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5951              		.loc 1 2985 0 discriminator 48
 5952 09ae 0021     		movs	r1, #0
 5953 09b0 FFF7FEFF 		bl	__aeabi_uldivmod
 5954              	.LVL455:
 5955 09b4 4FEA0129 		lsl	r9, r1, #8
 5956 09b8 49EA1069 		orr	r9, r9, r0, lsr #24
 5957 09bc 4FEA0028 		lsl	r8, r0, #8
 5958 09c0 6268     		ldr	r2, [r4, #4]
 5959 09c2 5008     		lsrs	r0, r2, #1
ARM GAS  /tmp/ccmyImrL.s 			page 193


 5960 09c4 0023     		movs	r3, #0
 5961 09c6 18EB000B 		adds	fp, r8, r0
 5962 09ca 49F1000C 		adc	ip, r9, #0
 5963 09ce 5846     		mov	r0, fp
 5964 09d0 6146     		mov	r1, ip
 5965 09d2 FFF7FEFF 		bl	__aeabi_uldivmod
 5966              	.LVL456:
2986:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           case UART_CLOCKSOURCE_HSI:
 5967              		.loc 1 2986 0 is_stmt 1 discriminator 48
 5968 09d6 64E7     		b	.L421
 5969              	.LVL457:
 5970              	.L597:
2985:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 5971              		.loc 1 2985 0
 5972 09d8 0222     		movs	r2, #2
 5973 09da 0023     		movs	r3, #0
 5974 09dc E7E7     		b	.L431
 5975              	.L598:
 5976 09de 0422     		movs	r2, #4
 5977 09e0 0023     		movs	r3, #0
 5978 09e2 E4E7     		b	.L431
 5979              	.L599:
 5980 09e4 0622     		movs	r2, #6
 5981 09e6 0023     		movs	r3, #0
 5982 09e8 E1E7     		b	.L431
 5983              	.L600:
 5984 09ea 0822     		movs	r2, #8
 5985 09ec 0023     		movs	r3, #0
 5986 09ee DEE7     		b	.L431
 5987              	.L601:
 5988 09f0 0A22     		movs	r2, #10
 5989 09f2 0023     		movs	r3, #0
 5990 09f4 DBE7     		b	.L431
 5991              	.L602:
 5992 09f6 0C22     		movs	r2, #12
 5993 09f8 0023     		movs	r3, #0
 5994 09fa D8E7     		b	.L431
 5995              	.L603:
 5996 09fc 1022     		movs	r2, #16
 5997 09fe 0023     		movs	r3, #0
 5998 0a00 D5E7     		b	.L431
 5999              	.L604:
 6000 0a02 2022     		movs	r2, #32
 6001 0a04 0023     		movs	r3, #0
 6002 0a06 D2E7     		b	.L431
 6003              	.L605:
 6004 0a08 4022     		movs	r2, #64
 6005 0a0a 0023     		movs	r3, #0
 6006 0a0c CFE7     		b	.L431
 6007              	.L606:
 6008 0a0e 8022     		movs	r2, #128
 6009 0a10 0023     		movs	r3, #0
 6010 0a12 CCE7     		b	.L431
 6011              	.LVL458:
 6012              	.L870:
2988:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             {
 6013              		.loc 1 2988 0
ARM GAS  /tmp/ccmyImrL.s 			page 194


 6014 0a14 594B     		ldr	r3, .L901+20
 6015 0a16 1B68     		ldr	r3, [r3]
 6016 0a18 13F0200F 		tst	r3, #32
 6017 0a1c 59D0     		beq	.L432
2990:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6018              		.loc 1 2990 0
 6019 0a1e 574B     		ldr	r3, .L901+20
 6020 0a20 1B68     		ldr	r3, [r3]
 6021 0a22 C3F3C103 		ubfx	r3, r3, #3, #2
 6022 0a26 5648     		ldr	r0, .L901+24
 6023              	.LVL459:
 6024 0a28 D840     		lsrs	r0, r0, r3
 6025 0a2a 636A     		ldr	r3, [r4, #36]
 6026 0a2c CBB1     		cbz	r3, .L608
2990:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6027              		.loc 1 2990 0 is_stmt 0 discriminator 1
 6028 0a2e 012B     		cmp	r3, #1
 6029 0a30 2ED0     		beq	.L609
2990:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6030              		.loc 1 2990 0 discriminator 3
 6031 0a32 022B     		cmp	r3, #2
 6032 0a34 2FD0     		beq	.L610
2990:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6033              		.loc 1 2990 0 discriminator 5
 6034 0a36 032B     		cmp	r3, #3
 6035 0a38 30D0     		beq	.L611
2990:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6036              		.loc 1 2990 0 discriminator 7
 6037 0a3a 042B     		cmp	r3, #4
 6038 0a3c 31D0     		beq	.L612
2990:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6039              		.loc 1 2990 0 discriminator 9
 6040 0a3e 052B     		cmp	r3, #5
 6041 0a40 32D0     		beq	.L613
2990:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6042              		.loc 1 2990 0 discriminator 11
 6043 0a42 062B     		cmp	r3, #6
 6044 0a44 33D0     		beq	.L614
2990:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6045              		.loc 1 2990 0 discriminator 13
 6046 0a46 072B     		cmp	r3, #7
 6047 0a48 34D0     		beq	.L615
2990:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6048              		.loc 1 2990 0 discriminator 15
 6049 0a4a 082B     		cmp	r3, #8
 6050 0a4c 35D0     		beq	.L616
2990:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6051              		.loc 1 2990 0 discriminator 17
 6052 0a4e 092B     		cmp	r3, #9
 6053 0a50 36D0     		beq	.L617
2990:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6054              		.loc 1 2990 0 discriminator 19
 6055 0a52 0A2B     		cmp	r3, #10
 6056 0a54 37D0     		beq	.L618
2990:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6057              		.loc 1 2990 0 discriminator 21
 6058 0a56 0B2B     		cmp	r3, #11
ARM GAS  /tmp/ccmyImrL.s 			page 195


 6059 0a58 38D1     		bne	.L619
2990:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6060              		.loc 1 2990 0
 6061 0a5a 4FF48072 		mov	r2, #256
 6062 0a5e 0023     		movs	r3, #0
 6063 0a60 01E0     		b	.L433
 6064              	.L608:
 6065 0a62 0122     		movs	r2, #1
 6066 0a64 0023     		movs	r3, #0
 6067              	.L433:
2990:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6068              		.loc 1 2990 0 discriminator 48
 6069 0a66 0021     		movs	r1, #0
 6070 0a68 FFF7FEFF 		bl	__aeabi_uldivmod
 6071              	.LVL460:
 6072 0a6c 4FEA0129 		lsl	r9, r1, #8
 6073 0a70 49EA1069 		orr	r9, r9, r0, lsr #24
 6074 0a74 4FEA0028 		lsl	r8, r0, #8
 6075 0a78 7808     		lsrs	r0, r7, #1
 6076 0a7a 3A46     		mov	r2, r7
 6077 0a7c 0023     		movs	r3, #0
 6078 0a7e 18EB000B 		adds	fp, r8, r0
 6079 0a82 49F1000C 		adc	ip, r9, #0
 6080 0a86 5846     		mov	r0, fp
 6081 0a88 6146     		mov	r1, ip
 6082 0a8a FFF7FEFF 		bl	__aeabi_uldivmod
 6083              	.LVL461:
 6084 0a8e 08E7     		b	.L421
 6085              	.LVL462:
 6086              	.L609:
2990:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6087              		.loc 1 2990 0
 6088 0a90 0222     		movs	r2, #2
 6089 0a92 0023     		movs	r3, #0
 6090 0a94 E7E7     		b	.L433
 6091              	.L610:
 6092 0a96 0422     		movs	r2, #4
 6093 0a98 0023     		movs	r3, #0
 6094 0a9a E4E7     		b	.L433
 6095              	.L611:
 6096 0a9c 0622     		movs	r2, #6
 6097 0a9e 0023     		movs	r3, #0
 6098 0aa0 E1E7     		b	.L433
 6099              	.L612:
 6100 0aa2 0822     		movs	r2, #8
 6101 0aa4 0023     		movs	r3, #0
 6102 0aa6 DEE7     		b	.L433
 6103              	.L613:
 6104 0aa8 0A22     		movs	r2, #10
 6105 0aaa 0023     		movs	r3, #0
 6106 0aac DBE7     		b	.L433
 6107              	.L614:
 6108 0aae 0C22     		movs	r2, #12
 6109 0ab0 0023     		movs	r3, #0
 6110 0ab2 D8E7     		b	.L433
 6111              	.L615:
 6112 0ab4 1022     		movs	r2, #16
ARM GAS  /tmp/ccmyImrL.s 			page 196


 6113 0ab6 0023     		movs	r3, #0
 6114 0ab8 D5E7     		b	.L433
 6115              	.L616:
 6116 0aba 2022     		movs	r2, #32
 6117 0abc 0023     		movs	r3, #0
 6118 0abe D2E7     		b	.L433
 6119              	.L617:
 6120 0ac0 4022     		movs	r2, #64
 6121 0ac2 0023     		movs	r3, #0
 6122 0ac4 CFE7     		b	.L433
 6123              	.L618:
 6124 0ac6 8022     		movs	r2, #128
 6125 0ac8 0023     		movs	r3, #0
 6126 0aca CCE7     		b	.L433
 6127              	.L619:
 6128 0acc 0122     		movs	r2, #1
 6129 0ace 0023     		movs	r3, #0
 6130 0ad0 C9E7     		b	.L433
 6131              	.LVL463:
 6132              	.L432:
2994:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6133              		.loc 1 2994 0 is_stmt 1
 6134 0ad2 636A     		ldr	r3, [r4, #36]
 6135 0ad4 C3B1     		cbz	r3, .L620
2994:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6136              		.loc 1 2994 0 is_stmt 0 discriminator 1
 6137 0ad6 012B     		cmp	r3, #1
 6138 0ad8 21D0     		beq	.L621
2994:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6139              		.loc 1 2994 0 discriminator 3
 6140 0ada 022B     		cmp	r3, #2
 6141 0adc 22D0     		beq	.L622
2994:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6142              		.loc 1 2994 0 discriminator 5
 6143 0ade 032B     		cmp	r3, #3
 6144 0ae0 23D0     		beq	.L623
2994:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6145              		.loc 1 2994 0 discriminator 7
 6146 0ae2 042B     		cmp	r3, #4
 6147 0ae4 25D0     		beq	.L624
2994:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6148              		.loc 1 2994 0 discriminator 9
 6149 0ae6 052B     		cmp	r3, #5
 6150 0ae8 26D0     		beq	.L625
2994:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6151              		.loc 1 2994 0 discriminator 11
 6152 0aea 062B     		cmp	r3, #6
 6153 0aec 27D0     		beq	.L626
2994:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6154              		.loc 1 2994 0 discriminator 13
 6155 0aee 072B     		cmp	r3, #7
 6156 0af0 29D0     		beq	.L627
2994:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6157              		.loc 1 2994 0 discriminator 15
 6158 0af2 082B     		cmp	r3, #8
 6159 0af4 2AD0     		beq	.L628
2994:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
ARM GAS  /tmp/ccmyImrL.s 			page 197


 6160              		.loc 1 2994 0 discriminator 17
 6161 0af6 092B     		cmp	r3, #9
 6162 0af8 2BD0     		beq	.L629
2994:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6163              		.loc 1 2994 0 discriminator 19
 6164 0afa 0A2B     		cmp	r3, #10
 6165 0afc 2CD0     		beq	.L630
2994:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6166              		.loc 1 2994 0 discriminator 21
 6167 0afe 0B2B     		cmp	r3, #11
 6168 0b00 2DD1     		bne	.L631
2994:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6169              		.loc 1 2994 0
 6170 0b02 1F48     		ldr	r0, .L901+24
 6171              	.LVL464:
 6172 0b04 0021     		movs	r1, #0
 6173 0b06 01E0     		b	.L434
 6174              	.LVL465:
 6175              	.L620:
 6176 0b08 1E48     		ldr	r0, .L901+28
 6177              	.LVL466:
 6178 0b0a 0321     		movs	r1, #3
 6179              	.L434:
2994:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6180              		.loc 1 2994 0 discriminator 48
 6181 0b0c 7D08     		lsrs	r5, r7, #1
 6182              	.LVL467:
 6183 0b0e 3A46     		mov	r2, r7
 6184 0b10 0023     		movs	r3, #0
 6185 0b12 4019     		adds	r0, r0, r5
 6186 0b14 41F10001 		adc	r1, r1, #0
 6187 0b18 FFF7FEFF 		bl	__aeabi_uldivmod
 6188              	.LVL468:
 6189 0b1c C1E6     		b	.L421
 6190              	.LVL469:
 6191              	.L621:
2994:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 6192              		.loc 1 2994 0
 6193 0b1e 1A48     		ldr	r0, .L901+32
 6194              	.LVL470:
 6195 0b20 0121     		movs	r1, #1
 6196 0b22 F3E7     		b	.L434
 6197              	.LVL471:
 6198              	.L622:
 6199 0b24 1948     		ldr	r0, .L901+36
 6200              	.LVL472:
 6201 0b26 0021     		movs	r1, #0
 6202 0b28 F0E7     		b	.L434
 6203              	.LVL473:
 6204              	.L623:
 6205 0b2a 0FA1     		adr	r1, .L901
 6206 0b2c D1E90001 		ldrd	r0, [r1]
 6207              	.LVL474:
 6208 0b30 ECE7     		b	.L434
 6209              	.LVL475:
 6210              	.L624:
 6211 0b32 1748     		ldr	r0, .L901+40
ARM GAS  /tmp/ccmyImrL.s 			page 198


 6212              	.LVL476:
 6213 0b34 0021     		movs	r1, #0
 6214 0b36 E9E7     		b	.L434
 6215              	.LVL477:
 6216              	.L625:
 6217 0b38 1648     		ldr	r0, .L901+44
 6218              	.LVL478:
 6219 0b3a 0021     		movs	r1, #0
 6220 0b3c E6E7     		b	.L434
 6221              	.LVL479:
 6222              	.L626:
 6223 0b3e 0CA1     		adr	r1, .L901+8
 6224 0b40 D1E90001 		ldrd	r0, [r1]
 6225              	.LVL480:
 6226 0b44 E2E7     		b	.L434
 6227              	.LVL481:
 6228              	.L627:
 6229 0b46 1448     		ldr	r0, .L901+48
 6230              	.LVL482:
 6231 0b48 0021     		movs	r1, #0
 6232 0b4a DFE7     		b	.L434
 6233              	.LVL483:
 6234              	.L628:
 6235 0b4c 1348     		ldr	r0, .L901+52
 6236              	.LVL484:
 6237 0b4e 0021     		movs	r1, #0
 6238 0b50 DCE7     		b	.L434
 6239              	.LVL485:
 6240              	.L629:
 6241 0b52 1348     		ldr	r0, .L901+56
 6242              	.LVL486:
 6243 0b54 0021     		movs	r1, #0
 6244 0b56 D9E7     		b	.L434
 6245              	.LVL487:
 6246              	.L630:
 6247 0b58 1248     		ldr	r0, .L901+60
 6248              	.LVL488:
 6249 0b5a 0021     		movs	r1, #0
 6250 0b5c D6E7     		b	.L434
 6251              	.LVL489:
 6252              	.L631:
 6253 0b5e 0948     		ldr	r0, .L901+28
 6254              	.LVL490:
 6255 0b60 0321     		movs	r1, #3
 6256 0b62 D3E7     		b	.L434
 6257              	.L902:
 6258 0b64 AFF30080 		.align	3
 6259              	.L901:
 6260 0b68 00AAC2A2 		.word	-1564300800
 6261 0b6c 00000000 		.word	0
 6262 0b70 00556151 		.word	1365333248
 6263 0b74 00000000 		.word	0
 6264 0b78 FFFC0F00 		.word	1047807
 6265 0b7c 00440258 		.word	1476543488
 6266 0b80 0090D003 		.word	64000000
 6267 0b84 000090D0 		.word	-795869184
 6268 0b88 000048E8 		.word	-397934592
ARM GAS  /tmp/ccmyImrL.s 			page 199


 6269 0b8c 000024F4 		.word	-198967296
 6270 0b90 0000127A 		.word	2048000000
 6271 0b94 0000A861 		.word	1638400000
 6272 0b98 0000093D 		.word	1024000000
 6273 0b9c 0080841E 		.word	512000000
 6274 0ba0 0040420F 		.word	256000000
 6275 0ba4 0020A107 		.word	128000000
 6276              	.LVL491:
 6277              	.L426:
2998:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6278              		.loc 1 2998 0 is_stmt 1
 6279 0ba8 636A     		ldr	r3, [r4, #36]
 6280 0baa DBB1     		cbz	r3, .L632
2998:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6281              		.loc 1 2998 0 is_stmt 0 discriminator 1
 6282 0bac 012B     		cmp	r3, #1
 6283 0bae 24D0     		beq	.L633
2998:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6284              		.loc 1 2998 0 discriminator 3
 6285 0bb0 022B     		cmp	r3, #2
 6286 0bb2 25D0     		beq	.L634
2998:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6287              		.loc 1 2998 0 discriminator 5
 6288 0bb4 032B     		cmp	r3, #3
 6289 0bb6 26D0     		beq	.L635
2998:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6290              		.loc 1 2998 0 discriminator 7
 6291 0bb8 042B     		cmp	r3, #4
 6292 0bba 28D0     		beq	.L636
2998:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6293              		.loc 1 2998 0 discriminator 9
 6294 0bbc 052B     		cmp	r3, #5
 6295 0bbe 29D0     		beq	.L637
2998:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6296              		.loc 1 2998 0 discriminator 11
 6297 0bc0 062B     		cmp	r3, #6
 6298 0bc2 2AD0     		beq	.L638
2998:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6299              		.loc 1 2998 0 discriminator 13
 6300 0bc4 072B     		cmp	r3, #7
 6301 0bc6 2CD0     		beq	.L639
2998:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6302              		.loc 1 2998 0 discriminator 15
 6303 0bc8 082B     		cmp	r3, #8
 6304 0bca 2DD0     		beq	.L640
2998:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6305              		.loc 1 2998 0 discriminator 17
 6306 0bcc 092B     		cmp	r3, #9
 6307 0bce 2ED0     		beq	.L641
2998:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6308              		.loc 1 2998 0 discriminator 19
 6309 0bd0 0A2B     		cmp	r3, #10
 6310 0bd2 2FD0     		beq	.L642
2998:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6311              		.loc 1 2998 0 discriminator 21
 6312 0bd4 0B2B     		cmp	r3, #11
 6313 0bd6 02D0     		beq	.L877
ARM GAS  /tmp/ccmyImrL.s 			page 200


2998:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6314              		.loc 1 2998 0
 6315 0bd8 9F48     		ldr	r0, .L903+16
 6316              	.LVL492:
 6317 0bda 0021     		movs	r1, #0
 6318 0bdc 04E0     		b	.L435
 6319              	.LVL493:
 6320              	.L877:
 6321 0bde 9F48     		ldr	r0, .L903+20
 6322              	.LVL494:
 6323 0be0 0021     		movs	r1, #0
 6324 0be2 01E0     		b	.L435
 6325              	.LVL495:
 6326              	.L632:
 6327 0be4 9C48     		ldr	r0, .L903+16
 6328              	.LVL496:
 6329 0be6 0021     		movs	r1, #0
 6330              	.L435:
2998:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6331              		.loc 1 2998 0 discriminator 48
 6332 0be8 7D08     		lsrs	r5, r7, #1
 6333              	.LVL497:
 6334 0bea 3A46     		mov	r2, r7
 6335 0bec 0023     		movs	r3, #0
 6336 0bee 4019     		adds	r0, r0, r5
 6337 0bf0 41F10001 		adc	r1, r1, #0
 6338 0bf4 FFF7FEFF 		bl	__aeabi_uldivmod
 6339              	.LVL498:
2999:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           case UART_CLOCKSOURCE_LSE:
 6340              		.loc 1 2999 0 is_stmt 1 discriminator 48
 6341 0bf8 53E6     		b	.L421
 6342              	.LVL499:
 6343              	.L633:
2998:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6344              		.loc 1 2998 0
 6345 0bfa 9948     		ldr	r0, .L903+24
 6346              	.LVL500:
 6347 0bfc 0021     		movs	r1, #0
 6348 0bfe F3E7     		b	.L435
 6349              	.LVL501:
 6350              	.L634:
 6351 0c00 9848     		ldr	r0, .L903+28
 6352              	.LVL502:
 6353 0c02 0021     		movs	r1, #0
 6354 0c04 F0E7     		b	.L435
 6355              	.LVL503:
 6356              	.L635:
 6357 0c06 90A1     		adr	r1, .L903
 6358 0c08 D1E90001 		ldrd	r0, [r1]
 6359              	.LVL504:
 6360 0c0c ECE7     		b	.L435
 6361              	.LVL505:
 6362              	.L636:
 6363 0c0e 9648     		ldr	r0, .L903+32
 6364              	.LVL506:
 6365 0c10 0021     		movs	r1, #0
 6366 0c12 E9E7     		b	.L435
ARM GAS  /tmp/ccmyImrL.s 			page 201


 6367              	.LVL507:
 6368              	.L637:
 6369 0c14 9548     		ldr	r0, .L903+36
 6370              	.LVL508:
 6371 0c16 0021     		movs	r1, #0
 6372 0c18 E6E7     		b	.L435
 6373              	.LVL509:
 6374              	.L638:
 6375 0c1a 8DA1     		adr	r1, .L903+8
 6376 0c1c D1E90001 		ldrd	r0, [r1]
 6377              	.LVL510:
 6378 0c20 E2E7     		b	.L435
 6379              	.LVL511:
 6380              	.L639:
 6381 0c22 9348     		ldr	r0, .L903+40
 6382              	.LVL512:
 6383 0c24 0021     		movs	r1, #0
 6384 0c26 DFE7     		b	.L435
 6385              	.LVL513:
 6386              	.L640:
 6387 0c28 9248     		ldr	r0, .L903+44
 6388              	.LVL514:
 6389 0c2a 0021     		movs	r1, #0
 6390 0c2c DCE7     		b	.L435
 6391              	.LVL515:
 6392              	.L641:
 6393 0c2e 9248     		ldr	r0, .L903+48
 6394              	.LVL516:
 6395 0c30 0021     		movs	r1, #0
 6396 0c32 D9E7     		b	.L435
 6397              	.LVL517:
 6398              	.L642:
 6399 0c34 9148     		ldr	r0, .L903+52
 6400              	.LVL518:
 6401 0c36 0021     		movs	r1, #0
 6402 0c38 D6E7     		b	.L435
 6403              	.LVL519:
 6404              	.L427:
3001:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6405              		.loc 1 3001 0
 6406 0c3a 636A     		ldr	r3, [r4, #36]
 6407 0c3c EBB1     		cbz	r3, .L644
3001:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6408              		.loc 1 3001 0 is_stmt 0 discriminator 1
 6409 0c3e 012B     		cmp	r3, #1
 6410 0c40 27D0     		beq	.L645
3001:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6411              		.loc 1 3001 0 discriminator 3
 6412 0c42 022B     		cmp	r3, #2
 6413 0c44 29D0     		beq	.L646
3001:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6414              		.loc 1 3001 0 discriminator 5
 6415 0c46 032B     		cmp	r3, #3
 6416 0c48 2BD0     		beq	.L647
3001:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6417              		.loc 1 3001 0 discriminator 7
 6418 0c4a 042B     		cmp	r3, #4
ARM GAS  /tmp/ccmyImrL.s 			page 202


 6419 0c4c 2CD0     		beq	.L648
3001:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6420              		.loc 1 3001 0 discriminator 9
 6421 0c4e 052B     		cmp	r3, #5
 6422 0c50 2ED0     		beq	.L649
3001:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6423              		.loc 1 3001 0 discriminator 11
 6424 0c52 062B     		cmp	r3, #6
 6425 0c54 2FD0     		beq	.L650
3001:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6426              		.loc 1 3001 0 discriminator 13
 6427 0c56 072B     		cmp	r3, #7
 6428 0c58 30D0     		beq	.L651
3001:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6429              		.loc 1 3001 0 discriminator 15
 6430 0c5a 082B     		cmp	r3, #8
 6431 0c5c 32D0     		beq	.L652
3001:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6432              		.loc 1 3001 0 discriminator 17
 6433 0c5e 092B     		cmp	r3, #9
 6434 0c60 34D0     		beq	.L653
3001:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6435              		.loc 1 3001 0 discriminator 19
 6436 0c62 0A2B     		cmp	r3, #10
 6437 0c64 36D0     		beq	.L654
3001:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6438              		.loc 1 3001 0 discriminator 21
 6439 0c66 0B2B     		cmp	r3, #11
 6440 0c68 03D0     		beq	.L878
3001:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6441              		.loc 1 3001 0
 6442 0c6a 4FF40000 		mov	r0, #8388608
 6443              	.LVL520:
 6444 0c6e 0021     		movs	r1, #0
 6445 0c70 06E0     		b	.L436
 6446              	.LVL521:
 6447              	.L878:
 6448 0c72 4FF40040 		mov	r0, #32768
 6449              	.LVL522:
 6450 0c76 0021     		movs	r1, #0
 6451 0c78 02E0     		b	.L436
 6452              	.LVL523:
 6453              	.L644:
 6454 0c7a 4FF40000 		mov	r0, #8388608
 6455              	.LVL524:
 6456 0c7e 0021     		movs	r1, #0
 6457              	.L436:
3001:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6458              		.loc 1 3001 0 discriminator 48
 6459 0c80 7D08     		lsrs	r5, r7, #1
 6460              	.LVL525:
 6461 0c82 3A46     		mov	r2, r7
 6462 0c84 0023     		movs	r3, #0
 6463 0c86 4019     		adds	r0, r0, r5
 6464 0c88 41F10001 		adc	r1, r1, #0
 6465 0c8c FFF7FEFF 		bl	__aeabi_uldivmod
 6466              	.LVL526:
ARM GAS  /tmp/ccmyImrL.s 			page 203


3002:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           default:
 6467              		.loc 1 3002 0 is_stmt 1 discriminator 48
 6468 0c90 07E6     		b	.L421
 6469              	.LVL527:
 6470              	.L645:
3001:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             break;
 6471              		.loc 1 3001 0
 6472 0c92 4FF48000 		mov	r0, #4194304
 6473              	.LVL528:
 6474 0c96 0021     		movs	r1, #0
 6475 0c98 F2E7     		b	.L436
 6476              	.LVL529:
 6477              	.L646:
 6478 0c9a 4FF40010 		mov	r0, #2097152
 6479              	.LVL530:
 6480 0c9e 0021     		movs	r1, #0
 6481 0ca0 EEE7     		b	.L436
 6482              	.LVL531:
 6483              	.L647:
 6484 0ca2 7748     		ldr	r0, .L903+56
 6485              	.LVL532:
 6486 0ca4 0021     		movs	r1, #0
 6487 0ca6 EBE7     		b	.L436
 6488              	.LVL533:
 6489              	.L648:
 6490 0ca8 4FF48010 		mov	r0, #1048576
 6491              	.LVL534:
 6492 0cac 0021     		movs	r1, #0
 6493 0cae E7E7     		b	.L436
 6494              	.LVL535:
 6495              	.L649:
 6496 0cb0 7448     		ldr	r0, .L903+60
 6497              	.LVL536:
 6498 0cb2 0021     		movs	r1, #0
 6499 0cb4 E4E7     		b	.L436
 6500              	.LVL537:
 6501              	.L650:
 6502 0cb6 7448     		ldr	r0, .L903+64
 6503              	.LVL538:
 6504 0cb8 0021     		movs	r1, #0
 6505 0cba E1E7     		b	.L436
 6506              	.LVL539:
 6507              	.L651:
 6508 0cbc 4FF40020 		mov	r0, #524288
 6509              	.LVL540:
 6510 0cc0 0021     		movs	r1, #0
 6511 0cc2 DDE7     		b	.L436
 6512              	.LVL541:
 6513              	.L652:
 6514 0cc4 4FF48020 		mov	r0, #262144
 6515              	.LVL542:
 6516 0cc8 0021     		movs	r1, #0
 6517 0cca D9E7     		b	.L436
 6518              	.LVL543:
 6519              	.L653:
 6520 0ccc 4FF40030 		mov	r0, #131072
 6521              	.LVL544:
ARM GAS  /tmp/ccmyImrL.s 			page 204


 6522 0cd0 0021     		movs	r1, #0
 6523 0cd2 D5E7     		b	.L436
 6524              	.LVL545:
 6525              	.L654:
 6526 0cd4 4FF48030 		mov	r0, #65536
 6527              	.LVL546:
 6528 0cd8 0021     		movs	r1, #0
 6529 0cda D1E7     		b	.L436
 6530              	.LVL547:
 6531              	.L864:
3023:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 6532              		.loc 1 3023 0
 6533 0cdc 402D     		cmp	r5, #64
 6534 0cde 00F27982 		bhi	.L657
 6535 0ce2 DFE815F0 		tbh	[pc, r5, lsl #1]
 6536              	.L440:
 6537 0ce6 4100     		.2byte	(.L439-.L440)/2
 6538 0ce8 8F00     		.2byte	(.L441-.L440)/2
 6539 0cea 7702     		.2byte	(.L657-.L440)/2
 6540 0cec 7702     		.2byte	(.L657-.L440)/2
 6541 0cee F300     		.2byte	(.L442-.L440)/2
 6542 0cf0 7702     		.2byte	(.L657-.L440)/2
 6543 0cf2 7702     		.2byte	(.L657-.L440)/2
 6544 0cf4 7702     		.2byte	(.L657-.L440)/2
 6545 0cf6 3401     		.2byte	(.L443-.L440)/2
 6546 0cf8 7702     		.2byte	(.L657-.L440)/2
 6547 0cfa 7702     		.2byte	(.L657-.L440)/2
 6548 0cfc 7702     		.2byte	(.L657-.L440)/2
 6549 0cfe 7702     		.2byte	(.L657-.L440)/2
 6550 0d00 7702     		.2byte	(.L657-.L440)/2
 6551 0d02 7702     		.2byte	(.L657-.L440)/2
 6552 0d04 7702     		.2byte	(.L657-.L440)/2
 6553 0d06 7501     		.2byte	(.L444-.L440)/2
 6554 0d08 7702     		.2byte	(.L657-.L440)/2
 6555 0d0a 7702     		.2byte	(.L657-.L440)/2
 6556 0d0c 7702     		.2byte	(.L657-.L440)/2
 6557 0d0e 7702     		.2byte	(.L657-.L440)/2
 6558 0d10 7702     		.2byte	(.L657-.L440)/2
 6559 0d12 7702     		.2byte	(.L657-.L440)/2
 6560 0d14 7702     		.2byte	(.L657-.L440)/2
 6561 0d16 7702     		.2byte	(.L657-.L440)/2
 6562 0d18 7702     		.2byte	(.L657-.L440)/2
 6563 0d1a 7702     		.2byte	(.L657-.L440)/2
 6564 0d1c 7702     		.2byte	(.L657-.L440)/2
 6565 0d1e 7702     		.2byte	(.L657-.L440)/2
 6566 0d20 7702     		.2byte	(.L657-.L440)/2
 6567 0d22 7702     		.2byte	(.L657-.L440)/2
 6568 0d24 7702     		.2byte	(.L657-.L440)/2
 6569 0d26 F601     		.2byte	(.L445-.L440)/2
 6570 0d28 7702     		.2byte	(.L657-.L440)/2
 6571 0d2a 7702     		.2byte	(.L657-.L440)/2
 6572 0d2c 7702     		.2byte	(.L657-.L440)/2
 6573 0d2e 7702     		.2byte	(.L657-.L440)/2
 6574 0d30 7702     		.2byte	(.L657-.L440)/2
 6575 0d32 7702     		.2byte	(.L657-.L440)/2
 6576 0d34 7702     		.2byte	(.L657-.L440)/2
 6577 0d36 7702     		.2byte	(.L657-.L440)/2
ARM GAS  /tmp/ccmyImrL.s 			page 205


 6578 0d38 7702     		.2byte	(.L657-.L440)/2
 6579 0d3a 7702     		.2byte	(.L657-.L440)/2
 6580 0d3c 7702     		.2byte	(.L657-.L440)/2
 6581 0d3e 7702     		.2byte	(.L657-.L440)/2
 6582 0d40 7702     		.2byte	(.L657-.L440)/2
 6583 0d42 7702     		.2byte	(.L657-.L440)/2
 6584 0d44 7702     		.2byte	(.L657-.L440)/2
 6585 0d46 7702     		.2byte	(.L657-.L440)/2
 6586 0d48 7702     		.2byte	(.L657-.L440)/2
 6587 0d4a 7702     		.2byte	(.L657-.L440)/2
 6588 0d4c 7702     		.2byte	(.L657-.L440)/2
 6589 0d4e 7702     		.2byte	(.L657-.L440)/2
 6590 0d50 7702     		.2byte	(.L657-.L440)/2
 6591 0d52 7702     		.2byte	(.L657-.L440)/2
 6592 0d54 7702     		.2byte	(.L657-.L440)/2
 6593 0d56 7702     		.2byte	(.L657-.L440)/2
 6594 0d58 7702     		.2byte	(.L657-.L440)/2
 6595 0d5a 7702     		.2byte	(.L657-.L440)/2
 6596 0d5c 7702     		.2byte	(.L657-.L440)/2
 6597 0d5e 7702     		.2byte	(.L657-.L440)/2
 6598 0d60 7702     		.2byte	(.L657-.L440)/2
 6599 0d62 7702     		.2byte	(.L657-.L440)/2
 6600 0d64 7702     		.2byte	(.L657-.L440)/2
 6601 0d66 3102     		.2byte	(.L446-.L440)/2
 6602              		.p2align 1
 6603              	.L439:
3026:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPresc
 6604              		.loc 1 3026 0
 6605 0d68 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 6606              	.LVL548:
3027:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6607              		.loc 1 3027 0
 6608 0d6c 636A     		ldr	r3, [r4, #36]
 6609 0d6e D3B1     		cbz	r3, .L658
3027:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6610              		.loc 1 3027 0 is_stmt 0 discriminator 1
 6611 0d70 012B     		cmp	r3, #1
 6612 0d72 33D0     		beq	.L659
3027:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6613              		.loc 1 3027 0 discriminator 3
 6614 0d74 022B     		cmp	r3, #2
 6615 0d76 33D0     		beq	.L660
3027:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6616              		.loc 1 3027 0 discriminator 5
 6617 0d78 032B     		cmp	r3, #3
 6618 0d7a 33D0     		beq	.L661
3027:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6619              		.loc 1 3027 0 discriminator 7
 6620 0d7c 042B     		cmp	r3, #4
 6621 0d7e 33D0     		beq	.L662
3027:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6622              		.loc 1 3027 0 discriminator 9
 6623 0d80 052B     		cmp	r3, #5
 6624 0d82 33D0     		beq	.L663
3027:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6625              		.loc 1 3027 0 discriminator 11
 6626 0d84 062B     		cmp	r3, #6
ARM GAS  /tmp/ccmyImrL.s 			page 206


 6627 0d86 33D0     		beq	.L664
3027:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6628              		.loc 1 3027 0 discriminator 13
 6629 0d88 072B     		cmp	r3, #7
 6630 0d8a 33D0     		beq	.L665
3027:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6631              		.loc 1 3027 0 discriminator 15
 6632 0d8c 082B     		cmp	r3, #8
 6633 0d8e 33D0     		beq	.L666
3027:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6634              		.loc 1 3027 0 discriminator 17
 6635 0d90 092B     		cmp	r3, #9
 6636 0d92 33D0     		beq	.L667
3027:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6637              		.loc 1 3027 0 discriminator 19
 6638 0d94 0A2B     		cmp	r3, #10
 6639 0d96 33D0     		beq	.L668
3027:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6640              		.loc 1 3027 0 discriminator 21
 6641 0d98 0B2B     		cmp	r3, #11
 6642 0d9a 01D0     		beq	.L879
3027:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6643              		.loc 1 3027 0
 6644 0d9c 0123     		movs	r3, #1
 6645 0d9e 03E0     		b	.L447
 6646              	.L879:
 6647 0da0 4FF48073 		mov	r3, #256
 6648 0da4 00E0     		b	.L447
 6649              	.L658:
 6650 0da6 0123     		movs	r3, #1
 6651              	.L447:
3027:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6652              		.loc 1 3027 0 discriminator 48
 6653 0da8 B0FBF3F0 		udiv	r0, r0, r3
 6654              	.LVL549:
 6655 0dac 6268     		ldr	r2, [r4, #4]
 6656 0dae 5308     		lsrs	r3, r2, #1
 6657 0db0 03EB4003 		add	r3, r3, r0, lsl #1
 6658 0db4 B3FBF2F3 		udiv	r3, r3, r2
 6659 0db8 9BB2     		uxth	r3, r3
 6660              	.LVL550:
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 6661              		.loc 1 2861 0 is_stmt 1 discriminator 48
 6662 0dba 0026     		movs	r6, #0
 6663              	.LVL551:
 6664              	.L438:
3063:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 6665              		.loc 1 3063 0
 6666 0dbc A3F11001 		sub	r1, r3, #16
 6667 0dc0 4FF6EF72 		movw	r2, #65519
 6668 0dc4 9142     		cmp	r1, r2
 6669 0dc6 00F24784 		bhi	.L754
3065:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 6670              		.loc 1 3065 0
 6671 0dca 9AB2     		uxth	r2, r3
 6672 0dcc 22F00F02 		bic	r2, r2, #15
 6673              	.LVL552:
ARM GAS  /tmp/ccmyImrL.s 			page 207


3066:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
 6674              		.loc 1 3066 0
 6675 0dd0 C3F34203 		ubfx	r3, r3, #1, #3
 6676              	.LVL553:
 6677 0dd4 1343     		orrs	r3, r3, r2
 6678              	.LVL554:
3067:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 6679              		.loc 1 3067 0
 6680 0dd6 2268     		ldr	r2, [r4]
 6681 0dd8 D360     		str	r3, [r2, #12]
 6682 0dda 30E2     		b	.L420
 6683              	.LVL555:
 6684              	.L659:
3027:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6685              		.loc 1 3027 0
 6686 0ddc 0223     		movs	r3, #2
 6687 0dde E3E7     		b	.L447
 6688              	.L660:
 6689 0de0 0423     		movs	r3, #4
 6690 0de2 E1E7     		b	.L447
 6691              	.L661:
 6692 0de4 0623     		movs	r3, #6
 6693 0de6 DFE7     		b	.L447
 6694              	.L662:
 6695 0de8 0823     		movs	r3, #8
 6696 0dea DDE7     		b	.L447
 6697              	.L663:
 6698 0dec 0A23     		movs	r3, #10
 6699 0dee DBE7     		b	.L447
 6700              	.L664:
 6701 0df0 0C23     		movs	r3, #12
 6702 0df2 D9E7     		b	.L447
 6703              	.L665:
 6704 0df4 1023     		movs	r3, #16
 6705 0df6 D7E7     		b	.L447
 6706              	.L666:
 6707 0df8 2023     		movs	r3, #32
 6708 0dfa D5E7     		b	.L447
 6709              	.L667:
 6710 0dfc 4023     		movs	r3, #64
 6711 0dfe D3E7     		b	.L447
 6712              	.L668:
 6713 0e00 8023     		movs	r3, #128
 6714 0e02 D1E7     		b	.L447
 6715              	.LVL556:
 6716              	.L441:
3030:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPresc
 6717              		.loc 1 3030 0
 6718 0e04 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 6719              	.LVL557:
3031:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6720              		.loc 1 3031 0
 6721 0e08 636A     		ldr	r3, [r4, #36]
 6722 0e0a 002B     		cmp	r3, #0
 6723 0e0c 3ED0     		beq	.L670
3031:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6724              		.loc 1 3031 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccmyImrL.s 			page 208


 6725 0e0e 012B     		cmp	r3, #1
 6726 0e10 48D0     		beq	.L671
3031:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6727              		.loc 1 3031 0 discriminator 3
 6728 0e12 022B     		cmp	r3, #2
 6729 0e14 48D0     		beq	.L672
3031:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6730              		.loc 1 3031 0 discriminator 5
 6731 0e16 032B     		cmp	r3, #3
 6732 0e18 48D0     		beq	.L673
3031:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6733              		.loc 1 3031 0 discriminator 7
 6734 0e1a 042B     		cmp	r3, #4
 6735 0e1c 48D0     		beq	.L674
3031:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6736              		.loc 1 3031 0 discriminator 9
 6737 0e1e 052B     		cmp	r3, #5
 6738 0e20 48D0     		beq	.L675
3031:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6739              		.loc 1 3031 0 discriminator 11
 6740 0e22 062B     		cmp	r3, #6
 6741 0e24 48D0     		beq	.L676
3031:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6742              		.loc 1 3031 0 discriminator 13
 6743 0e26 072B     		cmp	r3, #7
 6744 0e28 48D0     		beq	.L677
3031:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6745              		.loc 1 3031 0 discriminator 15
 6746 0e2a 082B     		cmp	r3, #8
 6747 0e2c 48D0     		beq	.L678
3031:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6748              		.loc 1 3031 0 discriminator 17
 6749 0e2e 092B     		cmp	r3, #9
 6750 0e30 48D0     		beq	.L679
3031:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6751              		.loc 1 3031 0 discriminator 19
 6752 0e32 0A2B     		cmp	r3, #10
 6753 0e34 48D0     		beq	.L680
3031:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6754              		.loc 1 3031 0 discriminator 21
 6755 0e36 0B2B     		cmp	r3, #11
 6756 0e38 01D0     		beq	.L880
3031:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6757              		.loc 1 3031 0
 6758 0e3a 0123     		movs	r3, #1
 6759 0e3c 27E0     		b	.L448
 6760              	.L880:
 6761 0e3e 4FF48073 		mov	r3, #256
 6762 0e42 24E0     		b	.L448
 6763              	.L904:
 6764 0e44 AFF30080 		.align	3
 6765              	.L903:
 6766 0e48 002A2C0A 		.word	170666496
 6767 0e4c 00000000 		.word	0
 6768 0e50 00151605 		.word	85333248
 6769 0e54 00000000 		.word	0
 6770 0e58 0000093D 		.word	1024000000
ARM GAS  /tmp/ccmyImrL.s 			page 209


 6771 0e5c 00093D00 		.word	4000000
 6772 0e60 0080841E 		.word	512000000
 6773 0e64 0040420F 		.word	256000000
 6774 0e68 0020A107 		.word	128000000
 6775 0e6c 00801A06 		.word	102400000
 6776 0e70 0090D003 		.word	64000000
 6777 0e74 0048E801 		.word	32000000
 6778 0e78 0024F400 		.word	16000000
 6779 0e7c 00127A00 		.word	8000000
 6780 0e80 00551500 		.word	1398016
 6781 0e84 00CC0C00 		.word	838656
 6782 0e88 00AA0A00 		.word	698880
 6783              	.L670:
 6784 0e8c 0123     		movs	r3, #1
 6785              	.L448:
3031:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6786              		.loc 1 3031 0 discriminator 48
 6787 0e8e B0FBF3F0 		udiv	r0, r0, r3
 6788              	.LVL558:
 6789 0e92 6268     		ldr	r2, [r4, #4]
 6790 0e94 5308     		lsrs	r3, r2, #1
 6791 0e96 03EB4003 		add	r3, r3, r0, lsl #1
 6792 0e9a B3FBF2F3 		udiv	r3, r3, r2
 6793 0e9e 9BB2     		uxth	r3, r3
 6794              	.LVL559:
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 6795              		.loc 1 2861 0 is_stmt 1 discriminator 48
 6796 0ea0 0026     		movs	r6, #0
3032:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL2:
 6797              		.loc 1 3032 0 discriminator 48
 6798 0ea2 8BE7     		b	.L438
 6799              	.LVL560:
 6800              	.L671:
3031:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6801              		.loc 1 3031 0
 6802 0ea4 0223     		movs	r3, #2
 6803 0ea6 F2E7     		b	.L448
 6804              	.L672:
 6805 0ea8 0423     		movs	r3, #4
 6806 0eaa F0E7     		b	.L448
 6807              	.L673:
 6808 0eac 0623     		movs	r3, #6
 6809 0eae EEE7     		b	.L448
 6810              	.L674:
 6811 0eb0 0823     		movs	r3, #8
 6812 0eb2 ECE7     		b	.L448
 6813              	.L675:
 6814 0eb4 0A23     		movs	r3, #10
 6815 0eb6 EAE7     		b	.L448
 6816              	.L676:
 6817 0eb8 0C23     		movs	r3, #12
 6818 0eba E8E7     		b	.L448
 6819              	.L677:
 6820 0ebc 1023     		movs	r3, #16
 6821 0ebe E6E7     		b	.L448
 6822              	.L678:
 6823 0ec0 2023     		movs	r3, #32
ARM GAS  /tmp/ccmyImrL.s 			page 210


 6824 0ec2 E4E7     		b	.L448
 6825              	.L679:
 6826 0ec4 4023     		movs	r3, #64
 6827 0ec6 E2E7     		b	.L448
 6828              	.L680:
 6829 0ec8 8023     		movs	r3, #128
 6830 0eca E0E7     		b	.L448
 6831              	.LVL561:
 6832              	.L442:
3034:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pll2_clocks.PLL2_Q_Frequency, huart->Init.BaudRate
 6833              		.loc 1 3034 0
 6834 0ecc 03A8     		add	r0, sp, #12
 6835 0ece FFF7FEFF 		bl	HAL_RCCEx_GetPLL2ClockFreq
 6836              	.LVL562:
3035:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6837              		.loc 1 3035 0
 6838 0ed2 049B     		ldr	r3, [sp, #16]
 6839 0ed4 626A     		ldr	r2, [r4, #36]
 6840 0ed6 D2B1     		cbz	r2, .L682
3035:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6841              		.loc 1 3035 0 is_stmt 0 discriminator 1
 6842 0ed8 012A     		cmp	r2, #1
 6843 0eda 24D0     		beq	.L683
3035:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6844              		.loc 1 3035 0 discriminator 3
 6845 0edc 022A     		cmp	r2, #2
 6846 0ede 24D0     		beq	.L684
3035:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6847              		.loc 1 3035 0 discriminator 5
 6848 0ee0 032A     		cmp	r2, #3
 6849 0ee2 24D0     		beq	.L685
3035:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6850              		.loc 1 3035 0 discriminator 7
 6851 0ee4 042A     		cmp	r2, #4
 6852 0ee6 24D0     		beq	.L686
3035:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6853              		.loc 1 3035 0 discriminator 9
 6854 0ee8 052A     		cmp	r2, #5
 6855 0eea 24D0     		beq	.L687
3035:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6856              		.loc 1 3035 0 discriminator 11
 6857 0eec 062A     		cmp	r2, #6
 6858 0eee 24D0     		beq	.L688
3035:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6859              		.loc 1 3035 0 discriminator 13
 6860 0ef0 072A     		cmp	r2, #7
 6861 0ef2 24D0     		beq	.L689
3035:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6862              		.loc 1 3035 0 discriminator 15
 6863 0ef4 082A     		cmp	r2, #8
 6864 0ef6 24D0     		beq	.L690
3035:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6865              		.loc 1 3035 0 discriminator 17
 6866 0ef8 092A     		cmp	r2, #9
 6867 0efa 24D0     		beq	.L691
3035:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6868              		.loc 1 3035 0 discriminator 19
ARM GAS  /tmp/ccmyImrL.s 			page 211


 6869 0efc 0A2A     		cmp	r2, #10
 6870 0efe 24D0     		beq	.L692
3035:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6871              		.loc 1 3035 0 discriminator 21
 6872 0f00 0B2A     		cmp	r2, #11
 6873 0f02 01D0     		beq	.L881
3035:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6874              		.loc 1 3035 0
 6875 0f04 0122     		movs	r2, #1
 6876 0f06 03E0     		b	.L449
 6877              	.L881:
 6878 0f08 4FF48072 		mov	r2, #256
 6879 0f0c 00E0     		b	.L449
 6880              	.L682:
 6881 0f0e 0122     		movs	r2, #1
 6882              	.L449:
3035:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6883              		.loc 1 3035 0 discriminator 48
 6884 0f10 B3FBF2F2 		udiv	r2, r3, r2
 6885 0f14 6168     		ldr	r1, [r4, #4]
 6886 0f16 4B08     		lsrs	r3, r1, #1
 6887 0f18 03EB4203 		add	r3, r3, r2, lsl #1
 6888 0f1c B3FBF1F3 		udiv	r3, r3, r1
 6889 0f20 9BB2     		uxth	r3, r3
 6890              	.LVL563:
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 6891              		.loc 1 2861 0 is_stmt 1 discriminator 48
 6892 0f22 0026     		movs	r6, #0
3036:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL3:
 6893              		.loc 1 3036 0 discriminator 48
 6894 0f24 4AE7     		b	.L438
 6895              	.LVL564:
 6896              	.L683:
3035:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6897              		.loc 1 3035 0
 6898 0f26 0222     		movs	r2, #2
 6899 0f28 F2E7     		b	.L449
 6900              	.L684:
 6901 0f2a 0422     		movs	r2, #4
 6902 0f2c F0E7     		b	.L449
 6903              	.L685:
 6904 0f2e 0622     		movs	r2, #6
 6905 0f30 EEE7     		b	.L449
 6906              	.L686:
 6907 0f32 0822     		movs	r2, #8
 6908 0f34 ECE7     		b	.L449
 6909              	.L687:
 6910 0f36 0A22     		movs	r2, #10
 6911 0f38 EAE7     		b	.L449
 6912              	.L688:
 6913 0f3a 0C22     		movs	r2, #12
 6914 0f3c E8E7     		b	.L449
 6915              	.L689:
 6916 0f3e 1022     		movs	r2, #16
 6917 0f40 E6E7     		b	.L449
 6918              	.L690:
 6919 0f42 2022     		movs	r2, #32
ARM GAS  /tmp/ccmyImrL.s 			page 212


 6920 0f44 E4E7     		b	.L449
 6921              	.L691:
 6922 0f46 4022     		movs	r2, #64
 6923 0f48 E2E7     		b	.L449
 6924              	.L692:
 6925 0f4a 8022     		movs	r2, #128
 6926 0f4c E0E7     		b	.L449
 6927              	.L443:
3038:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pll3_clocks.PLL3_Q_Frequency, huart->Init.BaudRate
 6928              		.loc 1 3038 0
 6929 0f4e 6846     		mov	r0, sp
 6930 0f50 FFF7FEFF 		bl	HAL_RCCEx_GetPLL3ClockFreq
 6931              	.LVL565:
3039:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6932              		.loc 1 3039 0
 6933 0f54 019B     		ldr	r3, [sp, #4]
 6934 0f56 626A     		ldr	r2, [r4, #36]
 6935 0f58 D2B1     		cbz	r2, .L694
3039:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6936              		.loc 1 3039 0 is_stmt 0 discriminator 1
 6937 0f5a 012A     		cmp	r2, #1
 6938 0f5c 24D0     		beq	.L695
3039:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6939              		.loc 1 3039 0 discriminator 3
 6940 0f5e 022A     		cmp	r2, #2
 6941 0f60 24D0     		beq	.L696
3039:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6942              		.loc 1 3039 0 discriminator 5
 6943 0f62 032A     		cmp	r2, #3
 6944 0f64 24D0     		beq	.L697
3039:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6945              		.loc 1 3039 0 discriminator 7
 6946 0f66 042A     		cmp	r2, #4
 6947 0f68 24D0     		beq	.L698
3039:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6948              		.loc 1 3039 0 discriminator 9
 6949 0f6a 052A     		cmp	r2, #5
 6950 0f6c 24D0     		beq	.L699
3039:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6951              		.loc 1 3039 0 discriminator 11
 6952 0f6e 062A     		cmp	r2, #6
 6953 0f70 24D0     		beq	.L700
3039:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6954              		.loc 1 3039 0 discriminator 13
 6955 0f72 072A     		cmp	r2, #7
 6956 0f74 24D0     		beq	.L701
3039:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6957              		.loc 1 3039 0 discriminator 15
 6958 0f76 082A     		cmp	r2, #8
 6959 0f78 24D0     		beq	.L702
3039:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6960              		.loc 1 3039 0 discriminator 17
 6961 0f7a 092A     		cmp	r2, #9
 6962 0f7c 24D0     		beq	.L703
3039:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6963              		.loc 1 3039 0 discriminator 19
 6964 0f7e 0A2A     		cmp	r2, #10
ARM GAS  /tmp/ccmyImrL.s 			page 213


 6965 0f80 24D0     		beq	.L704
3039:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6966              		.loc 1 3039 0 discriminator 21
 6967 0f82 0B2A     		cmp	r2, #11
 6968 0f84 01D0     		beq	.L882
3039:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6969              		.loc 1 3039 0
 6970 0f86 0122     		movs	r2, #1
 6971 0f88 03E0     		b	.L450
 6972              	.L882:
 6973 0f8a 4FF48072 		mov	r2, #256
 6974 0f8e 00E0     		b	.L450
 6975              	.L694:
 6976 0f90 0122     		movs	r2, #1
 6977              	.L450:
3039:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6978              		.loc 1 3039 0 discriminator 48
 6979 0f92 B3FBF2F2 		udiv	r2, r3, r2
 6980 0f96 6168     		ldr	r1, [r4, #4]
 6981 0f98 4B08     		lsrs	r3, r1, #1
 6982 0f9a 03EB4203 		add	r3, r3, r2, lsl #1
 6983 0f9e B3FBF1F3 		udiv	r3, r3, r1
 6984 0fa2 9BB2     		uxth	r3, r3
 6985              	.LVL566:
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 6986              		.loc 1 2861 0 is_stmt 1 discriminator 48
 6987 0fa4 0026     		movs	r6, #0
3040:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 6988              		.loc 1 3040 0 discriminator 48
 6989 0fa6 09E7     		b	.L438
 6990              	.LVL567:
 6991              	.L695:
3039:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6992              		.loc 1 3039 0
 6993 0fa8 0222     		movs	r2, #2
 6994 0faa F2E7     		b	.L450
 6995              	.L696:
 6996 0fac 0422     		movs	r2, #4
 6997 0fae F0E7     		b	.L450
 6998              	.L697:
 6999 0fb0 0622     		movs	r2, #6
 7000 0fb2 EEE7     		b	.L450
 7001              	.L698:
 7002 0fb4 0822     		movs	r2, #8
 7003 0fb6 ECE7     		b	.L450
 7004              	.L699:
 7005 0fb8 0A22     		movs	r2, #10
 7006 0fba EAE7     		b	.L450
 7007              	.L700:
 7008 0fbc 0C22     		movs	r2, #12
 7009 0fbe E8E7     		b	.L450
 7010              	.L701:
 7011 0fc0 1022     		movs	r2, #16
 7012 0fc2 E6E7     		b	.L450
 7013              	.L702:
 7014 0fc4 2022     		movs	r2, #32
 7015 0fc6 E4E7     		b	.L450
ARM GAS  /tmp/ccmyImrL.s 			page 214


 7016              	.L703:
 7017 0fc8 4022     		movs	r2, #64
 7018 0fca E2E7     		b	.L450
 7019              	.L704:
 7020 0fcc 8022     		movs	r2, #128
 7021 0fce E0E7     		b	.L450
 7022              	.L444:
3042:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 7023              		.loc 1 3042 0
 7024 0fd0 A34B     		ldr	r3, .L905
 7025 0fd2 1B68     		ldr	r3, [r3]
 7026 0fd4 13F0200F 		tst	r3, #32
 7027 0fd8 42D0     		beq	.L451
3044:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7028              		.loc 1 3044 0
 7029 0fda A14B     		ldr	r3, .L905
 7030 0fdc 1A68     		ldr	r2, [r3]
 7031 0fde C2F3C102 		ubfx	r2, r2, #3, #2
 7032 0fe2 A04B     		ldr	r3, .L905+4
 7033 0fe4 D340     		lsrs	r3, r3, r2
 7034 0fe6 626A     		ldr	r2, [r4, #36]
 7035 0fe8 D2B1     		cbz	r2, .L706
3044:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7036              		.loc 1 3044 0 is_stmt 0 discriminator 1
 7037 0fea 012A     		cmp	r2, #1
 7038 0fec 24D0     		beq	.L707
3044:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7039              		.loc 1 3044 0 discriminator 3
 7040 0fee 022A     		cmp	r2, #2
 7041 0ff0 24D0     		beq	.L708
3044:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7042              		.loc 1 3044 0 discriminator 5
 7043 0ff2 032A     		cmp	r2, #3
 7044 0ff4 24D0     		beq	.L709
3044:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7045              		.loc 1 3044 0 discriminator 7
 7046 0ff6 042A     		cmp	r2, #4
 7047 0ff8 24D0     		beq	.L710
3044:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7048              		.loc 1 3044 0 discriminator 9
 7049 0ffa 052A     		cmp	r2, #5
 7050 0ffc 24D0     		beq	.L711
3044:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7051              		.loc 1 3044 0 discriminator 11
 7052 0ffe 062A     		cmp	r2, #6
 7053 1000 24D0     		beq	.L712
3044:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7054              		.loc 1 3044 0 discriminator 13
 7055 1002 072A     		cmp	r2, #7
 7056 1004 24D0     		beq	.L713
3044:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7057              		.loc 1 3044 0 discriminator 15
 7058 1006 082A     		cmp	r2, #8
 7059 1008 24D0     		beq	.L714
3044:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7060              		.loc 1 3044 0 discriminator 17
 7061 100a 092A     		cmp	r2, #9
ARM GAS  /tmp/ccmyImrL.s 			page 215


 7062 100c 24D0     		beq	.L715
3044:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7063              		.loc 1 3044 0 discriminator 19
 7064 100e 0A2A     		cmp	r2, #10
 7065 1010 24D0     		beq	.L716
3044:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7066              		.loc 1 3044 0 discriminator 21
 7067 1012 0B2A     		cmp	r2, #11
 7068 1014 01D0     		beq	.L883
3044:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7069              		.loc 1 3044 0
 7070 1016 0122     		movs	r2, #1
 7071 1018 03E0     		b	.L452
 7072              	.L883:
 7073 101a 4FF48072 		mov	r2, #256
 7074 101e 00E0     		b	.L452
 7075              	.L706:
 7076 1020 0122     		movs	r2, #1
 7077              	.L452:
3044:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7078              		.loc 1 3044 0 discriminator 48
 7079 1022 B3FBF2F2 		udiv	r2, r3, r2
 7080 1026 6168     		ldr	r1, [r4, #4]
 7081 1028 4B08     		lsrs	r3, r1, #1
 7082 102a 03EB4203 		add	r3, r3, r2, lsl #1
 7083 102e B3FBF1F3 		udiv	r3, r3, r1
 7084 1032 9BB2     		uxth	r3, r3
 7085              	.LVL568:
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 7086              		.loc 1 2861 0 is_stmt 1 discriminator 48
 7087 1034 0026     		movs	r6, #0
 7088 1036 C1E6     		b	.L438
 7089              	.LVL569:
 7090              	.L707:
3044:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7091              		.loc 1 3044 0
 7092 1038 0222     		movs	r2, #2
 7093 103a F2E7     		b	.L452
 7094              	.L708:
 7095 103c 0422     		movs	r2, #4
 7096 103e F0E7     		b	.L452
 7097              	.L709:
 7098 1040 0622     		movs	r2, #6
 7099 1042 EEE7     		b	.L452
 7100              	.L710:
 7101 1044 0822     		movs	r2, #8
 7102 1046 ECE7     		b	.L452
 7103              	.L711:
 7104 1048 0A22     		movs	r2, #10
 7105 104a EAE7     		b	.L452
 7106              	.L712:
 7107 104c 0C22     		movs	r2, #12
 7108 104e E8E7     		b	.L452
 7109              	.L713:
 7110 1050 1022     		movs	r2, #16
 7111 1052 E6E7     		b	.L452
 7112              	.L714:
ARM GAS  /tmp/ccmyImrL.s 			page 216


 7113 1054 2022     		movs	r2, #32
 7114 1056 E4E7     		b	.L452
 7115              	.L715:
 7116 1058 4022     		movs	r2, #64
 7117 105a E2E7     		b	.L452
 7118              	.L716:
 7119 105c 8022     		movs	r2, #128
 7120 105e E0E7     		b	.L452
 7121              	.L451:
3048:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7122              		.loc 1 3048 0
 7123 1060 636A     		ldr	r3, [r4, #36]
 7124 1062 CBB1     		cbz	r3, .L718
3048:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7125              		.loc 1 3048 0 is_stmt 0 discriminator 1
 7126 1064 012B     		cmp	r3, #1
 7127 1066 20D0     		beq	.L719
3048:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7128              		.loc 1 3048 0 discriminator 3
 7129 1068 022B     		cmp	r3, #2
 7130 106a 20D0     		beq	.L720
3048:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7131              		.loc 1 3048 0 discriminator 5
 7132 106c 032B     		cmp	r3, #3
 7133 106e 20D0     		beq	.L721
3048:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7134              		.loc 1 3048 0 discriminator 7
 7135 1070 042B     		cmp	r3, #4
 7136 1072 20D0     		beq	.L722
3048:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7137              		.loc 1 3048 0 discriminator 9
 7138 1074 052B     		cmp	r3, #5
 7139 1076 20D0     		beq	.L723
3048:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7140              		.loc 1 3048 0 discriminator 11
 7141 1078 062B     		cmp	r3, #6
 7142 107a 20D0     		beq	.L724
3048:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7143              		.loc 1 3048 0 discriminator 13
 7144 107c 072B     		cmp	r3, #7
 7145 107e 20D0     		beq	.L725
3048:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7146              		.loc 1 3048 0 discriminator 15
 7147 1080 082B     		cmp	r3, #8
 7148 1082 20D0     		beq	.L726
3048:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7149              		.loc 1 3048 0 discriminator 17
 7150 1084 092B     		cmp	r3, #9
 7151 1086 20D0     		beq	.L727
3048:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7152              		.loc 1 3048 0 discriminator 19
 7153 1088 0A2B     		cmp	r3, #10
 7154 108a 20D0     		beq	.L728
3048:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7155              		.loc 1 3048 0 discriminator 21
 7156 108c 0B2B     		cmp	r3, #11
 7157 108e 01D0     		beq	.L884
ARM GAS  /tmp/ccmyImrL.s 			page 217


3048:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7158              		.loc 1 3048 0
 7159 1090 754B     		ldr	r3, .L905+8
 7160 1092 02E0     		b	.L453
 7161              	.L884:
 7162 1094 754B     		ldr	r3, .L905+12
 7163 1096 00E0     		b	.L453
 7164              	.L718:
 7165 1098 734B     		ldr	r3, .L905+8
 7166              	.L453:
3048:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7167              		.loc 1 3048 0 discriminator 48
 7168 109a 6268     		ldr	r2, [r4, #4]
 7169 109c 03EB5203 		add	r3, r3, r2, lsr #1
 7170 10a0 B3FBF2F3 		udiv	r3, r3, r2
 7171 10a4 9BB2     		uxth	r3, r3
 7172              	.LVL570:
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 7173              		.loc 1 2861 0 is_stmt 1 discriminator 48
 7174 10a6 0026     		movs	r6, #0
 7175 10a8 88E6     		b	.L438
 7176              	.LVL571:
 7177              	.L719:
3048:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7178              		.loc 1 3048 0
 7179 10aa 6E4B     		ldr	r3, .L905+4
 7180 10ac F5E7     		b	.L453
 7181              	.L720:
 7182 10ae 704B     		ldr	r3, .L905+16
 7183 10b0 F3E7     		b	.L453
 7184              	.L721:
 7185 10b2 704B     		ldr	r3, .L905+20
 7186 10b4 F1E7     		b	.L453
 7187              	.L722:
 7188 10b6 704B     		ldr	r3, .L905+24
 7189 10b8 EFE7     		b	.L453
 7190              	.L723:
 7191 10ba 704B     		ldr	r3, .L905+28
 7192 10bc EDE7     		b	.L453
 7193              	.L724:
 7194 10be 704B     		ldr	r3, .L905+32
 7195 10c0 EBE7     		b	.L453
 7196              	.L725:
 7197 10c2 704B     		ldr	r3, .L905+36
 7198 10c4 E9E7     		b	.L453
 7199              	.L726:
 7200 10c6 704B     		ldr	r3, .L905+40
 7201 10c8 E7E7     		b	.L453
 7202              	.L727:
 7203 10ca 704B     		ldr	r3, .L905+44
 7204 10cc E5E7     		b	.L453
 7205              	.L728:
 7206 10ce 704B     		ldr	r3, .L905+48
 7207 10d0 E3E7     		b	.L453
 7208              	.L445:
3052:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7209              		.loc 1 3052 0
ARM GAS  /tmp/ccmyImrL.s 			page 218


 7210 10d2 636A     		ldr	r3, [r4, #36]
 7211 10d4 D3B1     		cbz	r3, .L730
3052:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7212              		.loc 1 3052 0 is_stmt 0 discriminator 1
 7213 10d6 012B     		cmp	r3, #1
 7214 10d8 21D0     		beq	.L731
3052:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7215              		.loc 1 3052 0 discriminator 3
 7216 10da 022B     		cmp	r3, #2
 7217 10dc 21D0     		beq	.L732
3052:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7218              		.loc 1 3052 0 discriminator 5
 7219 10de 032B     		cmp	r3, #3
 7220 10e0 21D0     		beq	.L733
3052:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7221              		.loc 1 3052 0 discriminator 7
 7222 10e2 042B     		cmp	r3, #4
 7223 10e4 21D0     		beq	.L734
3052:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7224              		.loc 1 3052 0 discriminator 9
 7225 10e6 052B     		cmp	r3, #5
 7226 10e8 21D0     		beq	.L735
3052:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7227              		.loc 1 3052 0 discriminator 11
 7228 10ea 062B     		cmp	r3, #6
 7229 10ec 21D0     		beq	.L736
3052:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7230              		.loc 1 3052 0 discriminator 13
 7231 10ee 072B     		cmp	r3, #7
 7232 10f0 21D0     		beq	.L737
3052:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7233              		.loc 1 3052 0 discriminator 15
 7234 10f2 082B     		cmp	r3, #8
 7235 10f4 21D0     		beq	.L738
3052:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7236              		.loc 1 3052 0 discriminator 17
 7237 10f6 092B     		cmp	r3, #9
 7238 10f8 21D0     		beq	.L739
3052:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7239              		.loc 1 3052 0 discriminator 19
 7240 10fa 0A2B     		cmp	r3, #10
 7241 10fc 21D0     		beq	.L740
3052:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7242              		.loc 1 3052 0 discriminator 21
 7243 10fe 0B2B     		cmp	r3, #11
 7244 1100 01D0     		beq	.L885
3052:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7245              		.loc 1 3052 0
 7246 1102 604B     		ldr	r3, .L905+36
 7247 1104 03E0     		b	.L454
 7248              	.L885:
 7249 1106 47F61223 		movw	r3, #31250
 7250 110a 00E0     		b	.L454
 7251              	.L730:
 7252 110c 5D4B     		ldr	r3, .L905+36
 7253              	.L454:
3052:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
ARM GAS  /tmp/ccmyImrL.s 			page 219


 7254              		.loc 1 3052 0 discriminator 48
 7255 110e 6268     		ldr	r2, [r4, #4]
 7256 1110 03EB5203 		add	r3, r3, r2, lsr #1
 7257 1114 B3FBF2F3 		udiv	r3, r3, r2
 7258 1118 9BB2     		uxth	r3, r3
 7259              	.LVL572:
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 7260              		.loc 1 2861 0 is_stmt 1 discriminator 48
 7261 111a 0026     		movs	r6, #0
3053:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 7262              		.loc 1 3053 0 discriminator 48
 7263 111c 4EE6     		b	.L438
 7264              	.LVL573:
 7265              	.L731:
3052:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7266              		.loc 1 3052 0
 7267 111e 5A4B     		ldr	r3, .L905+40
 7268 1120 F5E7     		b	.L454
 7269              	.L732:
 7270 1122 5A4B     		ldr	r3, .L905+44
 7271 1124 F3E7     		b	.L454
 7272              	.L733:
 7273 1126 5B4B     		ldr	r3, .L905+52
 7274 1128 F1E7     		b	.L454
 7275              	.L734:
 7276 112a 594B     		ldr	r3, .L905+48
 7277 112c EFE7     		b	.L454
 7278              	.L735:
 7279 112e 5A4B     		ldr	r3, .L905+56
 7280 1130 EDE7     		b	.L454
 7281              	.L736:
 7282 1132 5A4B     		ldr	r3, .L905+60
 7283 1134 EBE7     		b	.L454
 7284              	.L737:
 7285 1136 4D4B     		ldr	r3, .L905+12
 7286 1138 E9E7     		b	.L454
 7287              	.L738:
 7288 113a 594B     		ldr	r3, .L905+64
 7289 113c E7E7     		b	.L454
 7290              	.L739:
 7291 113e 594B     		ldr	r3, .L905+68
 7292 1140 E5E7     		b	.L454
 7293              	.L740:
 7294 1142 4FF22443 		movw	r3, #62500
 7295 1146 E2E7     		b	.L454
 7296              	.L446:
3055:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7297              		.loc 1 3055 0
 7298 1148 636A     		ldr	r3, [r4, #36]
 7299 114a DBB1     		cbz	r3, .L742
3055:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7300              		.loc 1 3055 0 is_stmt 0 discriminator 1
 7301 114c 012B     		cmp	r3, #1
 7302 114e 23D0     		beq	.L743
3055:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7303              		.loc 1 3055 0 discriminator 3
 7304 1150 022B     		cmp	r3, #2
ARM GAS  /tmp/ccmyImrL.s 			page 220


 7305 1152 24D0     		beq	.L744
3055:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7306              		.loc 1 3055 0 discriminator 5
 7307 1154 032B     		cmp	r3, #3
 7308 1156 25D0     		beq	.L745
3055:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7309              		.loc 1 3055 0 discriminator 7
 7310 1158 042B     		cmp	r3, #4
 7311 115a 26D0     		beq	.L746
3055:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7312              		.loc 1 3055 0 discriminator 9
 7313 115c 052B     		cmp	r3, #5
 7314 115e 27D0     		beq	.L747
3055:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7315              		.loc 1 3055 0 discriminator 11
 7316 1160 062B     		cmp	r3, #6
 7317 1162 28D0     		beq	.L748
3055:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7318              		.loc 1 3055 0 discriminator 13
 7319 1164 072B     		cmp	r3, #7
 7320 1166 29D0     		beq	.L749
3055:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7321              		.loc 1 3055 0 discriminator 15
 7322 1168 082B     		cmp	r3, #8
 7323 116a 2AD0     		beq	.L750
3055:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7324              		.loc 1 3055 0 discriminator 17
 7325 116c 092B     		cmp	r3, #9
 7326 116e 2BD0     		beq	.L751
3055:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7327              		.loc 1 3055 0 discriminator 19
 7328 1170 0A2B     		cmp	r3, #10
 7329 1172 2CD0     		beq	.L752
3055:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7330              		.loc 1 3055 0 discriminator 21
 7331 1174 0B2B     		cmp	r3, #11
 7332 1176 02D0     		beq	.L886
3055:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7333              		.loc 1 3055 0
 7334 1178 4FF48033 		mov	r3, #65536
 7335 117c 04E0     		b	.L455
 7336              	.L886:
 7337 117e 4FF48073 		mov	r3, #256
 7338 1182 01E0     		b	.L455
 7339              	.L742:
 7340 1184 4FF48033 		mov	r3, #65536
 7341              	.L455:
3055:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7342              		.loc 1 3055 0 discriminator 48
 7343 1188 6268     		ldr	r2, [r4, #4]
 7344 118a 03EB5203 		add	r3, r3, r2, lsr #1
 7345 118e B3FBF2F3 		udiv	r3, r3, r2
 7346 1192 9BB2     		uxth	r3, r3
 7347              	.LVL574:
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 7348              		.loc 1 2861 0 is_stmt 1 discriminator 48
 7349 1194 0026     		movs	r6, #0
ARM GAS  /tmp/ccmyImrL.s 			page 221


3056:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default:
 7350              		.loc 1 3056 0 discriminator 48
 7351 1196 11E6     		b	.L438
 7352              	.LVL575:
 7353              	.L743:
3055:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7354              		.loc 1 3055 0
 7355 1198 4FF40043 		mov	r3, #32768
 7356 119c F4E7     		b	.L455
 7357              	.L744:
 7358 119e 4FF48043 		mov	r3, #16384
 7359 11a2 F1E7     		b	.L455
 7360              	.L745:
 7361 11a4 42F6AA23 		movw	r3, #10922
 7362 11a8 EEE7     		b	.L455
 7363              	.L746:
 7364 11aa 4FF40053 		mov	r3, #8192
 7365 11ae EBE7     		b	.L455
 7366              	.L747:
 7367 11b0 41F69813 		movw	r3, #6552
 7368 11b4 E8E7     		b	.L455
 7369              	.L748:
 7370 11b6 41F25453 		movw	r3, #5460
 7371 11ba E5E7     		b	.L455
 7372              	.L749:
 7373 11bc 4FF48053 		mov	r3, #4096
 7374 11c0 E2E7     		b	.L455
 7375              	.L750:
 7376 11c2 4FF40063 		mov	r3, #2048
 7377 11c6 DFE7     		b	.L455
 7378              	.L751:
 7379 11c8 4FF48063 		mov	r3, #1024
 7380 11cc DCE7     		b	.L455
 7381              	.L752:
 7382 11ce 4FF40073 		mov	r3, #512
 7383 11d2 D9E7     		b	.L455
 7384              	.L657:
3058:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7385              		.loc 1 3058 0
 7386 11d4 0126     		movs	r6, #1
2860:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 7387              		.loc 1 2860 0
 7388 11d6 0023     		movs	r3, #0
 7389 11d8 F0E5     		b	.L438
 7390              	.L457:
3079:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPres
 7391              		.loc 1 3079 0
 7392 11da FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 7393              	.LVL576:
3080:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7394              		.loc 1 3080 0
 7395 11de 636A     		ldr	r3, [r4, #36]
 7396 11e0 D3B1     		cbz	r3, .L756
3080:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7397              		.loc 1 3080 0 is_stmt 0 discriminator 1
 7398 11e2 012B     		cmp	r3, #1
 7399 11e4 37D0     		beq	.L757
ARM GAS  /tmp/ccmyImrL.s 			page 222


3080:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7400              		.loc 1 3080 0 discriminator 3
 7401 11e6 022B     		cmp	r3, #2
 7402 11e8 37D0     		beq	.L758
3080:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7403              		.loc 1 3080 0 discriminator 5
 7404 11ea 032B     		cmp	r3, #3
 7405 11ec 5CD0     		beq	.L759
3080:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7406              		.loc 1 3080 0 discriminator 7
 7407 11ee 042B     		cmp	r3, #4
 7408 11f0 5CD0     		beq	.L760
3080:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7409              		.loc 1 3080 0 discriminator 9
 7410 11f2 052B     		cmp	r3, #5
 7411 11f4 5CD0     		beq	.L761
3080:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7412              		.loc 1 3080 0 discriminator 11
 7413 11f6 062B     		cmp	r3, #6
 7414 11f8 5CD0     		beq	.L762
3080:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7415              		.loc 1 3080 0 discriminator 13
 7416 11fa 072B     		cmp	r3, #7
 7417 11fc 5CD0     		beq	.L763
3080:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7418              		.loc 1 3080 0 discriminator 15
 7419 11fe 082B     		cmp	r3, #8
 7420 1200 5CD0     		beq	.L764
3080:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7421              		.loc 1 3080 0 discriminator 17
 7422 1202 092B     		cmp	r3, #9
 7423 1204 5CD0     		beq	.L765
3080:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7424              		.loc 1 3080 0 discriminator 19
 7425 1206 0A2B     		cmp	r3, #10
 7426 1208 5CD0     		beq	.L766
3080:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7427              		.loc 1 3080 0 discriminator 21
 7428 120a 0B2B     		cmp	r3, #11
 7429 120c 01D0     		beq	.L887
3080:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7430              		.loc 1 3080 0
 7431 120e 0123     		movs	r3, #1
 7432 1210 03E0     		b	.L465
 7433              	.L887:
 7434 1212 4FF48073 		mov	r3, #256
 7435 1216 00E0     		b	.L465
 7436              	.L756:
 7437 1218 0123     		movs	r3, #1
 7438              	.L465:
3080:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7439              		.loc 1 3080 0 discriminator 48
 7440 121a B0FBF3F3 		udiv	r3, r0, r3
 7441 121e 6268     		ldr	r2, [r4, #4]
 7442 1220 03EB5203 		add	r3, r3, r2, lsr #1
 7443 1224 B3FBF2F3 		udiv	r3, r3, r2
 7444 1228 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccmyImrL.s 			page 223


 7445              	.LVL577:
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 7446              		.loc 1 2861 0 is_stmt 1 discriminator 48
 7447 122a 0026     		movs	r6, #0
 7448              	.LVL578:
 7449              	.L456:
3116:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 7450              		.loc 1 3116 0
 7451 122c A3F11001 		sub	r1, r3, #16
 7452 1230 4FF6EF72 		movw	r2, #65519
 7453 1234 9142     		cmp	r1, r2
 7454 1236 00F21182 		bhi	.L852
3118:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 7455              		.loc 1 3118 0
 7456 123a 2268     		ldr	r2, [r4]
 7457 123c D360     		str	r3, [r2, #12]
 7458              	.LVL579:
 7459              	.L420:
3127:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
 7460              		.loc 1 3127 0
 7461 123e 0123     		movs	r3, #1
 7462 1240 A4F86A30 		strh	r3, [r4, #106]	@ movhi
3128:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 7463              		.loc 1 3128 0
 7464 1244 A4F86830 		strh	r3, [r4, #104]	@ movhi
3131:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxISR = NULL;
 7465              		.loc 1 3131 0
 7466 1248 0023     		movs	r3, #0
 7467 124a E366     		str	r3, [r4, #108]
3132:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 7468              		.loc 1 3132 0
 7469 124c 2367     		str	r3, [r4, #112]
3135:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 7470              		.loc 1 3135 0
 7471 124e 3046     		mov	r0, r6
 7472 1250 06B0     		add	sp, sp, #24
 7473              	.LCFI33:
 7474              		.cfi_remember_state
 7475              		.cfi_def_cfa_offset 32
 7476              		@ sp needed
 7477 1252 BDE8F08B 		pop	{r4, r5, r6, r7, r8, r9, fp, pc}
 7478              	.LVL580:
 7479              	.L757:
 7480              	.LCFI34:
 7481              		.cfi_restore_state
3080:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7482              		.loc 1 3080 0
 7483 1256 0223     		movs	r3, #2
 7484 1258 DFE7     		b	.L465
 7485              	.L758:
 7486 125a 0423     		movs	r3, #4
 7487 125c DDE7     		b	.L465
 7488              	.L906:
 7489 125e 00BF     		.align	2
 7490              	.L905:
 7491 1260 00440258 		.word	1476543488
 7492 1264 0090D003 		.word	64000000
ARM GAS  /tmp/ccmyImrL.s 			page 224


 7493 1268 0020A107 		.word	128000000
 7494 126c 20A10700 		.word	500000
 7495 1270 0048E801 		.word	32000000
 7496 1274 54854501 		.word	21333332
 7497 1278 0024F400 		.word	16000000
 7498 127c 0050C300 		.word	12800000
 7499 1280 AAC2A200 		.word	10666666
 7500 1284 00127A00 		.word	8000000
 7501 1288 00093D00 		.word	4000000
 7502 128c 80841E00 		.word	2000000
 7503 1290 40420F00 		.word	1000000
 7504 1294 54581400 		.word	1333332
 7505 1298 00350C00 		.word	800000
 7506 129c 2A2C0A00 		.word	666666
 7507 12a0 90D00300 		.word	250000
 7508 12a4 48E80100 		.word	125000
 7509              	.L759:
 7510 12a8 0623     		movs	r3, #6
 7511 12aa B6E7     		b	.L465
 7512              	.L760:
 7513 12ac 0823     		movs	r3, #8
 7514 12ae B4E7     		b	.L465
 7515              	.L761:
 7516 12b0 0A23     		movs	r3, #10
 7517 12b2 B2E7     		b	.L465
 7518              	.L762:
 7519 12b4 0C23     		movs	r3, #12
 7520 12b6 B0E7     		b	.L465
 7521              	.L763:
 7522 12b8 1023     		movs	r3, #16
 7523 12ba AEE7     		b	.L465
 7524              	.L764:
 7525 12bc 2023     		movs	r3, #32
 7526 12be ACE7     		b	.L465
 7527              	.L765:
 7528 12c0 4023     		movs	r3, #64
 7529 12c2 AAE7     		b	.L465
 7530              	.L766:
 7531 12c4 8023     		movs	r3, #128
 7532 12c6 A8E7     		b	.L465
 7533              	.LVL581:
 7534              	.L459:
3083:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPres
 7535              		.loc 1 3083 0
 7536 12c8 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 7537              	.LVL582:
3084:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7538              		.loc 1 3084 0
 7539 12cc 636A     		ldr	r3, [r4, #36]
 7540 12ce D3B1     		cbz	r3, .L768
3084:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7541              		.loc 1 3084 0 is_stmt 0 discriminator 1
 7542 12d0 012B     		cmp	r3, #1
 7543 12d2 23D0     		beq	.L769
3084:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7544              		.loc 1 3084 0 discriminator 3
 7545 12d4 022B     		cmp	r3, #2
ARM GAS  /tmp/ccmyImrL.s 			page 225


 7546 12d6 23D0     		beq	.L770
3084:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7547              		.loc 1 3084 0 discriminator 5
 7548 12d8 032B     		cmp	r3, #3
 7549 12da 23D0     		beq	.L771
3084:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7550              		.loc 1 3084 0 discriminator 7
 7551 12dc 042B     		cmp	r3, #4
 7552 12de 23D0     		beq	.L772
3084:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7553              		.loc 1 3084 0 discriminator 9
 7554 12e0 052B     		cmp	r3, #5
 7555 12e2 23D0     		beq	.L773
3084:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7556              		.loc 1 3084 0 discriminator 11
 7557 12e4 062B     		cmp	r3, #6
 7558 12e6 23D0     		beq	.L774
3084:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7559              		.loc 1 3084 0 discriminator 13
 7560 12e8 072B     		cmp	r3, #7
 7561 12ea 23D0     		beq	.L775
3084:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7562              		.loc 1 3084 0 discriminator 15
 7563 12ec 082B     		cmp	r3, #8
 7564 12ee 23D0     		beq	.L776
3084:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7565              		.loc 1 3084 0 discriminator 17
 7566 12f0 092B     		cmp	r3, #9
 7567 12f2 23D0     		beq	.L777
3084:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7568              		.loc 1 3084 0 discriminator 19
 7569 12f4 0A2B     		cmp	r3, #10
 7570 12f6 23D0     		beq	.L778
3084:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7571              		.loc 1 3084 0 discriminator 21
 7572 12f8 0B2B     		cmp	r3, #11
 7573 12fa 01D0     		beq	.L888
3084:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7574              		.loc 1 3084 0
 7575 12fc 0123     		movs	r3, #1
 7576 12fe 03E0     		b	.L466
 7577              	.L888:
 7578 1300 4FF48073 		mov	r3, #256
 7579 1304 00E0     		b	.L466
 7580              	.L768:
 7581 1306 0123     		movs	r3, #1
 7582              	.L466:
3084:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7583              		.loc 1 3084 0 discriminator 48
 7584 1308 B0FBF3F3 		udiv	r3, r0, r3
 7585 130c 6268     		ldr	r2, [r4, #4]
 7586 130e 03EB5203 		add	r3, r3, r2, lsr #1
 7587 1312 B3FBF2F3 		udiv	r3, r3, r2
 7588 1316 9BB2     		uxth	r3, r3
 7589              	.LVL583:
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 7590              		.loc 1 2861 0 is_stmt 1 discriminator 48
ARM GAS  /tmp/ccmyImrL.s 			page 226


 7591 1318 0026     		movs	r6, #0
3085:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL2:
 7592              		.loc 1 3085 0 discriminator 48
 7593 131a 87E7     		b	.L456
 7594              	.LVL584:
 7595              	.L769:
3084:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7596              		.loc 1 3084 0
 7597 131c 0223     		movs	r3, #2
 7598 131e F3E7     		b	.L466
 7599              	.L770:
 7600 1320 0423     		movs	r3, #4
 7601 1322 F1E7     		b	.L466
 7602              	.L771:
 7603 1324 0623     		movs	r3, #6
 7604 1326 EFE7     		b	.L466
 7605              	.L772:
 7606 1328 0823     		movs	r3, #8
 7607 132a EDE7     		b	.L466
 7608              	.L773:
 7609 132c 0A23     		movs	r3, #10
 7610 132e EBE7     		b	.L466
 7611              	.L774:
 7612 1330 0C23     		movs	r3, #12
 7613 1332 E9E7     		b	.L466
 7614              	.L775:
 7615 1334 1023     		movs	r3, #16
 7616 1336 E7E7     		b	.L466
 7617              	.L776:
 7618 1338 2023     		movs	r3, #32
 7619 133a E5E7     		b	.L466
 7620              	.L777:
 7621 133c 4023     		movs	r3, #64
 7622 133e E3E7     		b	.L466
 7623              	.L778:
 7624 1340 8023     		movs	r3, #128
 7625 1342 E1E7     		b	.L466
 7626              	.LVL585:
 7627              	.L460:
3087:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pll2_clocks.PLL2_Q_Frequency, huart->Init.BaudRat
 7628              		.loc 1 3087 0
 7629 1344 03A8     		add	r0, sp, #12
 7630 1346 FFF7FEFF 		bl	HAL_RCCEx_GetPLL2ClockFreq
 7631              	.LVL586:
3088:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7632              		.loc 1 3088 0
 7633 134a 049B     		ldr	r3, [sp, #16]
 7634 134c 626A     		ldr	r2, [r4, #36]
 7635 134e D2B1     		cbz	r2, .L780
3088:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7636              		.loc 1 3088 0 is_stmt 0 discriminator 1
 7637 1350 012A     		cmp	r2, #1
 7638 1352 23D0     		beq	.L781
3088:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7639              		.loc 1 3088 0 discriminator 3
 7640 1354 022A     		cmp	r2, #2
 7641 1356 23D0     		beq	.L782
ARM GAS  /tmp/ccmyImrL.s 			page 227


3088:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7642              		.loc 1 3088 0 discriminator 5
 7643 1358 032A     		cmp	r2, #3
 7644 135a 23D0     		beq	.L783
3088:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7645              		.loc 1 3088 0 discriminator 7
 7646 135c 042A     		cmp	r2, #4
 7647 135e 23D0     		beq	.L784
3088:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7648              		.loc 1 3088 0 discriminator 9
 7649 1360 052A     		cmp	r2, #5
 7650 1362 23D0     		beq	.L785
3088:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7651              		.loc 1 3088 0 discriminator 11
 7652 1364 062A     		cmp	r2, #6
 7653 1366 23D0     		beq	.L786
3088:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7654              		.loc 1 3088 0 discriminator 13
 7655 1368 072A     		cmp	r2, #7
 7656 136a 23D0     		beq	.L787
3088:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7657              		.loc 1 3088 0 discriminator 15
 7658 136c 082A     		cmp	r2, #8
 7659 136e 23D0     		beq	.L788
3088:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7660              		.loc 1 3088 0 discriminator 17
 7661 1370 092A     		cmp	r2, #9
 7662 1372 23D0     		beq	.L789
3088:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7663              		.loc 1 3088 0 discriminator 19
 7664 1374 0A2A     		cmp	r2, #10
 7665 1376 23D0     		beq	.L790
3088:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7666              		.loc 1 3088 0 discriminator 21
 7667 1378 0B2A     		cmp	r2, #11
 7668 137a 01D0     		beq	.L889
3088:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7669              		.loc 1 3088 0
 7670 137c 0122     		movs	r2, #1
 7671 137e 03E0     		b	.L467
 7672              	.L889:
 7673 1380 4FF48072 		mov	r2, #256
 7674 1384 00E0     		b	.L467
 7675              	.L780:
 7676 1386 0122     		movs	r2, #1
 7677              	.L467:
3088:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7678              		.loc 1 3088 0 discriminator 48
 7679 1388 B3FBF2F3 		udiv	r3, r3, r2
 7680 138c 6268     		ldr	r2, [r4, #4]
 7681 138e 03EB5203 		add	r3, r3, r2, lsr #1
 7682 1392 B3FBF2F3 		udiv	r3, r3, r2
 7683 1396 9BB2     		uxth	r3, r3
 7684              	.LVL587:
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 7685              		.loc 1 2861 0 is_stmt 1 discriminator 48
 7686 1398 0026     		movs	r6, #0
ARM GAS  /tmp/ccmyImrL.s 			page 228


3089:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL3:
 7687              		.loc 1 3089 0 discriminator 48
 7688 139a 47E7     		b	.L456
 7689              	.LVL588:
 7690              	.L781:
3088:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7691              		.loc 1 3088 0
 7692 139c 0222     		movs	r2, #2
 7693 139e F3E7     		b	.L467
 7694              	.L782:
 7695 13a0 0422     		movs	r2, #4
 7696 13a2 F1E7     		b	.L467
 7697              	.L783:
 7698 13a4 0622     		movs	r2, #6
 7699 13a6 EFE7     		b	.L467
 7700              	.L784:
 7701 13a8 0822     		movs	r2, #8
 7702 13aa EDE7     		b	.L467
 7703              	.L785:
 7704 13ac 0A22     		movs	r2, #10
 7705 13ae EBE7     		b	.L467
 7706              	.L786:
 7707 13b0 0C22     		movs	r2, #12
 7708 13b2 E9E7     		b	.L467
 7709              	.L787:
 7710 13b4 1022     		movs	r2, #16
 7711 13b6 E7E7     		b	.L467
 7712              	.L788:
 7713 13b8 2022     		movs	r2, #32
 7714 13ba E5E7     		b	.L467
 7715              	.L789:
 7716 13bc 4022     		movs	r2, #64
 7717 13be E3E7     		b	.L467
 7718              	.L790:
 7719 13c0 8022     		movs	r2, #128
 7720 13c2 E1E7     		b	.L467
 7721              	.L461:
3091:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pll3_clocks.PLL3_Q_Frequency, huart->Init.BaudRat
 7722              		.loc 1 3091 0
 7723 13c4 6846     		mov	r0, sp
 7724 13c6 FFF7FEFF 		bl	HAL_RCCEx_GetPLL3ClockFreq
 7725              	.LVL589:
3092:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7726              		.loc 1 3092 0
 7727 13ca 019B     		ldr	r3, [sp, #4]
 7728 13cc 626A     		ldr	r2, [r4, #36]
 7729 13ce D2B1     		cbz	r2, .L792
3092:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7730              		.loc 1 3092 0 is_stmt 0 discriminator 1
 7731 13d0 012A     		cmp	r2, #1
 7732 13d2 23D0     		beq	.L793
3092:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7733              		.loc 1 3092 0 discriminator 3
 7734 13d4 022A     		cmp	r2, #2
 7735 13d6 23D0     		beq	.L794
3092:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7736              		.loc 1 3092 0 discriminator 5
ARM GAS  /tmp/ccmyImrL.s 			page 229


 7737 13d8 032A     		cmp	r2, #3
 7738 13da 23D0     		beq	.L795
3092:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7739              		.loc 1 3092 0 discriminator 7
 7740 13dc 042A     		cmp	r2, #4
 7741 13de 23D0     		beq	.L796
3092:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7742              		.loc 1 3092 0 discriminator 9
 7743 13e0 052A     		cmp	r2, #5
 7744 13e2 23D0     		beq	.L797
3092:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7745              		.loc 1 3092 0 discriminator 11
 7746 13e4 062A     		cmp	r2, #6
 7747 13e6 23D0     		beq	.L798
3092:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7748              		.loc 1 3092 0 discriminator 13
 7749 13e8 072A     		cmp	r2, #7
 7750 13ea 23D0     		beq	.L799
3092:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7751              		.loc 1 3092 0 discriminator 15
 7752 13ec 082A     		cmp	r2, #8
 7753 13ee 23D0     		beq	.L800
3092:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7754              		.loc 1 3092 0 discriminator 17
 7755 13f0 092A     		cmp	r2, #9
 7756 13f2 23D0     		beq	.L801
3092:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7757              		.loc 1 3092 0 discriminator 19
 7758 13f4 0A2A     		cmp	r2, #10
 7759 13f6 23D0     		beq	.L802
3092:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7760              		.loc 1 3092 0 discriminator 21
 7761 13f8 0B2A     		cmp	r2, #11
 7762 13fa 01D0     		beq	.L890
3092:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7763              		.loc 1 3092 0
 7764 13fc 0122     		movs	r2, #1
 7765 13fe 03E0     		b	.L468
 7766              	.L890:
 7767 1400 4FF48072 		mov	r2, #256
 7768 1404 00E0     		b	.L468
 7769              	.L792:
 7770 1406 0122     		movs	r2, #1
 7771              	.L468:
3092:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7772              		.loc 1 3092 0 discriminator 48
 7773 1408 B3FBF2F3 		udiv	r3, r3, r2
 7774 140c 6268     		ldr	r2, [r4, #4]
 7775 140e 03EB5203 		add	r3, r3, r2, lsr #1
 7776 1412 B3FBF2F3 		udiv	r3, r3, r2
 7777 1416 9BB2     		uxth	r3, r3
 7778              	.LVL590:
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 7779              		.loc 1 2861 0 is_stmt 1 discriminator 48
 7780 1418 0026     		movs	r6, #0
3093:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 7781              		.loc 1 3093 0 discriminator 48
ARM GAS  /tmp/ccmyImrL.s 			page 230


 7782 141a 07E7     		b	.L456
 7783              	.LVL591:
 7784              	.L793:
3092:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 7785              		.loc 1 3092 0
 7786 141c 0222     		movs	r2, #2
 7787 141e F3E7     		b	.L468
 7788              	.L794:
 7789 1420 0422     		movs	r2, #4
 7790 1422 F1E7     		b	.L468
 7791              	.L795:
 7792 1424 0622     		movs	r2, #6
 7793 1426 EFE7     		b	.L468
 7794              	.L796:
 7795 1428 0822     		movs	r2, #8
 7796 142a EDE7     		b	.L468
 7797              	.L797:
 7798 142c 0A22     		movs	r2, #10
 7799 142e EBE7     		b	.L468
 7800              	.L798:
 7801 1430 0C22     		movs	r2, #12
 7802 1432 E9E7     		b	.L468
 7803              	.L799:
 7804 1434 1022     		movs	r2, #16
 7805 1436 E7E7     		b	.L468
 7806              	.L800:
 7807 1438 2022     		movs	r2, #32
 7808 143a E5E7     		b	.L468
 7809              	.L801:
 7810 143c 4022     		movs	r2, #64
 7811 143e E3E7     		b	.L468
 7812              	.L802:
 7813 1440 8022     		movs	r2, #128
 7814 1442 E1E7     		b	.L468
 7815              	.L462:
3095:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 7816              		.loc 1 3095 0
 7817 1444 864B     		ldr	r3, .L907
 7818 1446 1B68     		ldr	r3, [r3]
 7819 1448 13F0200F 		tst	r3, #32
 7820 144c 41D0     		beq	.L469
3097:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7821              		.loc 1 3097 0
 7822 144e 844B     		ldr	r3, .L907
 7823 1450 1A68     		ldr	r2, [r3]
 7824 1452 C2F3C102 		ubfx	r2, r2, #3, #2
 7825 1456 834B     		ldr	r3, .L907+4
 7826 1458 D340     		lsrs	r3, r3, r2
 7827 145a 626A     		ldr	r2, [r4, #36]
 7828 145c D2B1     		cbz	r2, .L804
3097:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7829              		.loc 1 3097 0 is_stmt 0 discriminator 1
 7830 145e 012A     		cmp	r2, #1
 7831 1460 23D0     		beq	.L805
3097:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7832              		.loc 1 3097 0 discriminator 3
 7833 1462 022A     		cmp	r2, #2
ARM GAS  /tmp/ccmyImrL.s 			page 231


 7834 1464 23D0     		beq	.L806
3097:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7835              		.loc 1 3097 0 discriminator 5
 7836 1466 032A     		cmp	r2, #3
 7837 1468 23D0     		beq	.L807
3097:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7838              		.loc 1 3097 0 discriminator 7
 7839 146a 042A     		cmp	r2, #4
 7840 146c 23D0     		beq	.L808
3097:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7841              		.loc 1 3097 0 discriminator 9
 7842 146e 052A     		cmp	r2, #5
 7843 1470 23D0     		beq	.L809
3097:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7844              		.loc 1 3097 0 discriminator 11
 7845 1472 062A     		cmp	r2, #6
 7846 1474 23D0     		beq	.L810
3097:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7847              		.loc 1 3097 0 discriminator 13
 7848 1476 072A     		cmp	r2, #7
 7849 1478 23D0     		beq	.L811
3097:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7850              		.loc 1 3097 0 discriminator 15
 7851 147a 082A     		cmp	r2, #8
 7852 147c 23D0     		beq	.L812
3097:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7853              		.loc 1 3097 0 discriminator 17
 7854 147e 092A     		cmp	r2, #9
 7855 1480 23D0     		beq	.L813
3097:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7856              		.loc 1 3097 0 discriminator 19
 7857 1482 0A2A     		cmp	r2, #10
 7858 1484 23D0     		beq	.L814
3097:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7859              		.loc 1 3097 0 discriminator 21
 7860 1486 0B2A     		cmp	r2, #11
 7861 1488 01D0     		beq	.L891
3097:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7862              		.loc 1 3097 0
 7863 148a 0122     		movs	r2, #1
 7864 148c 03E0     		b	.L470
 7865              	.L891:
 7866 148e 4FF48072 		mov	r2, #256
 7867 1492 00E0     		b	.L470
 7868              	.L804:
 7869 1494 0122     		movs	r2, #1
 7870              	.L470:
3097:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7871              		.loc 1 3097 0 discriminator 48
 7872 1496 B3FBF2F3 		udiv	r3, r3, r2
 7873 149a 6268     		ldr	r2, [r4, #4]
 7874 149c 03EB5203 		add	r3, r3, r2, lsr #1
 7875 14a0 B3FBF2F3 		udiv	r3, r3, r2
 7876 14a4 9BB2     		uxth	r3, r3
 7877              	.LVL592:
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 7878              		.loc 1 2861 0 is_stmt 1 discriminator 48
ARM GAS  /tmp/ccmyImrL.s 			page 232


 7879 14a6 0026     		movs	r6, #0
 7880 14a8 C0E6     		b	.L456
 7881              	.LVL593:
 7882              	.L805:
3097:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7883              		.loc 1 3097 0
 7884 14aa 0222     		movs	r2, #2
 7885 14ac F3E7     		b	.L470
 7886              	.L806:
 7887 14ae 0422     		movs	r2, #4
 7888 14b0 F1E7     		b	.L470
 7889              	.L807:
 7890 14b2 0622     		movs	r2, #6
 7891 14b4 EFE7     		b	.L470
 7892              	.L808:
 7893 14b6 0822     		movs	r2, #8
 7894 14b8 EDE7     		b	.L470
 7895              	.L809:
 7896 14ba 0A22     		movs	r2, #10
 7897 14bc EBE7     		b	.L470
 7898              	.L810:
 7899 14be 0C22     		movs	r2, #12
 7900 14c0 E9E7     		b	.L470
 7901              	.L811:
 7902 14c2 1022     		movs	r2, #16
 7903 14c4 E7E7     		b	.L470
 7904              	.L812:
 7905 14c6 2022     		movs	r2, #32
 7906 14c8 E5E7     		b	.L470
 7907              	.L813:
 7908 14ca 4022     		movs	r2, #64
 7909 14cc E3E7     		b	.L470
 7910              	.L814:
 7911 14ce 8022     		movs	r2, #128
 7912 14d0 E1E7     		b	.L470
 7913              	.L469:
3101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7914              		.loc 1 3101 0
 7915 14d2 636A     		ldr	r3, [r4, #36]
 7916 14d4 CBB1     		cbz	r3, .L816
3101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7917              		.loc 1 3101 0 is_stmt 0 discriminator 1
 7918 14d6 012B     		cmp	r3, #1
 7919 14d8 20D0     		beq	.L817
3101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7920              		.loc 1 3101 0 discriminator 3
 7921 14da 022B     		cmp	r3, #2
 7922 14dc 20D0     		beq	.L818
3101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7923              		.loc 1 3101 0 discriminator 5
 7924 14de 032B     		cmp	r3, #3
 7925 14e0 20D0     		beq	.L819
3101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7926              		.loc 1 3101 0 discriminator 7
 7927 14e2 042B     		cmp	r3, #4
 7928 14e4 20D0     		beq	.L820
3101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
ARM GAS  /tmp/ccmyImrL.s 			page 233


 7929              		.loc 1 3101 0 discriminator 9
 7930 14e6 052B     		cmp	r3, #5
 7931 14e8 20D0     		beq	.L821
3101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7932              		.loc 1 3101 0 discriminator 11
 7933 14ea 062B     		cmp	r3, #6
 7934 14ec 20D0     		beq	.L822
3101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7935              		.loc 1 3101 0 discriminator 13
 7936 14ee 072B     		cmp	r3, #7
 7937 14f0 20D0     		beq	.L823
3101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7938              		.loc 1 3101 0 discriminator 15
 7939 14f2 082B     		cmp	r3, #8
 7940 14f4 20D0     		beq	.L824
3101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7941              		.loc 1 3101 0 discriminator 17
 7942 14f6 092B     		cmp	r3, #9
 7943 14f8 20D0     		beq	.L825
3101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7944              		.loc 1 3101 0 discriminator 19
 7945 14fa 0A2B     		cmp	r3, #10
 7946 14fc 20D0     		beq	.L826
3101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7947              		.loc 1 3101 0 discriminator 21
 7948 14fe 0B2B     		cmp	r3, #11
 7949 1500 01D0     		beq	.L892
3101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7950              		.loc 1 3101 0
 7951 1502 584B     		ldr	r3, .L907+4
 7952 1504 02E0     		b	.L471
 7953              	.L892:
 7954 1506 584B     		ldr	r3, .L907+8
 7955 1508 00E0     		b	.L471
 7956              	.L816:
 7957 150a 564B     		ldr	r3, .L907+4
 7958              	.L471:
3101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7959              		.loc 1 3101 0 discriminator 48
 7960 150c 6268     		ldr	r2, [r4, #4]
 7961 150e 03EB5203 		add	r3, r3, r2, lsr #1
 7962 1512 B3FBF2F3 		udiv	r3, r3, r2
 7963 1516 9BB2     		uxth	r3, r3
 7964              	.LVL594:
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 7965              		.loc 1 2861 0 is_stmt 1 discriminator 48
 7966 1518 0026     		movs	r6, #0
 7967 151a 87E6     		b	.L456
 7968              	.LVL595:
 7969              	.L817:
3101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 7970              		.loc 1 3101 0
 7971 151c 534B     		ldr	r3, .L907+12
 7972 151e F5E7     		b	.L471
 7973              	.L818:
 7974 1520 534B     		ldr	r3, .L907+16
 7975 1522 F3E7     		b	.L471
ARM GAS  /tmp/ccmyImrL.s 			page 234


 7976              	.L819:
 7977 1524 534B     		ldr	r3, .L907+20
 7978 1526 F1E7     		b	.L471
 7979              	.L820:
 7980 1528 534B     		ldr	r3, .L907+24
 7981 152a EFE7     		b	.L471
 7982              	.L821:
 7983 152c 534B     		ldr	r3, .L907+28
 7984 152e EDE7     		b	.L471
 7985              	.L822:
 7986 1530 534B     		ldr	r3, .L907+32
 7987 1532 EBE7     		b	.L471
 7988              	.L823:
 7989 1534 534B     		ldr	r3, .L907+36
 7990 1536 E9E7     		b	.L471
 7991              	.L824:
 7992 1538 534B     		ldr	r3, .L907+40
 7993 153a E7E7     		b	.L471
 7994              	.L825:
 7995 153c 534B     		ldr	r3, .L907+44
 7996 153e E5E7     		b	.L471
 7997              	.L826:
 7998 1540 534B     		ldr	r3, .L907+48
 7999 1542 E3E7     		b	.L471
 8000              	.L463:
3105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8001              		.loc 1 3105 0
 8002 1544 636A     		ldr	r3, [r4, #36]
 8003 1546 D3B1     		cbz	r3, .L828
3105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8004              		.loc 1 3105 0 is_stmt 0 discriminator 1
 8005 1548 012B     		cmp	r3, #1
 8006 154a 21D0     		beq	.L829
3105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8007              		.loc 1 3105 0 discriminator 3
 8008 154c 022B     		cmp	r3, #2
 8009 154e 21D0     		beq	.L830
3105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8010              		.loc 1 3105 0 discriminator 5
 8011 1550 032B     		cmp	r3, #3
 8012 1552 21D0     		beq	.L831
3105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8013              		.loc 1 3105 0 discriminator 7
 8014 1554 042B     		cmp	r3, #4
 8015 1556 21D0     		beq	.L832
3105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8016              		.loc 1 3105 0 discriminator 9
 8017 1558 052B     		cmp	r3, #5
 8018 155a 21D0     		beq	.L833
3105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8019              		.loc 1 3105 0 discriminator 11
 8020 155c 062B     		cmp	r3, #6
 8021 155e 21D0     		beq	.L834
3105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8022              		.loc 1 3105 0 discriminator 13
 8023 1560 072B     		cmp	r3, #7
 8024 1562 21D0     		beq	.L835
ARM GAS  /tmp/ccmyImrL.s 			page 235


3105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8025              		.loc 1 3105 0 discriminator 15
 8026 1564 082B     		cmp	r3, #8
 8027 1566 21D0     		beq	.L836
3105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8028              		.loc 1 3105 0 discriminator 17
 8029 1568 092B     		cmp	r3, #9
 8030 156a 21D0     		beq	.L837
3105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8031              		.loc 1 3105 0 discriminator 19
 8032 156c 0A2B     		cmp	r3, #10
 8033 156e 22D0     		beq	.L838
3105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8034              		.loc 1 3105 0 discriminator 21
 8035 1570 0B2B     		cmp	r3, #11
 8036 1572 01D0     		beq	.L893
3105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8037              		.loc 1 3105 0
 8038 1574 434B     		ldr	r3, .L907+36
 8039 1576 03E0     		b	.L472
 8040              	.L893:
 8041 1578 43F60953 		movw	r3, #15625
 8042 157c 00E0     		b	.L472
 8043              	.L828:
 8044 157e 414B     		ldr	r3, .L907+36
 8045              	.L472:
3105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8046              		.loc 1 3105 0 discriminator 48
 8047 1580 6268     		ldr	r2, [r4, #4]
 8048 1582 03EB5203 		add	r3, r3, r2, lsr #1
 8049 1586 B3FBF2F3 		udiv	r3, r3, r2
 8050 158a 9BB2     		uxth	r3, r3
 8051              	.LVL596:
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 8052              		.loc 1 2861 0 is_stmt 1 discriminator 48
 8053 158c 0026     		movs	r6, #0
3106:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 8054              		.loc 1 3106 0 discriminator 48
 8055 158e 4DE6     		b	.L456
 8056              	.LVL597:
 8057              	.L829:
3105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8058              		.loc 1 3105 0
 8059 1590 3D4B     		ldr	r3, .L907+40
 8060 1592 F5E7     		b	.L472
 8061              	.L830:
 8062 1594 3D4B     		ldr	r3, .L907+44
 8063 1596 F3E7     		b	.L472
 8064              	.L831:
 8065 1598 3E4B     		ldr	r3, .L907+52
 8066 159a F1E7     		b	.L472
 8067              	.L832:
 8068 159c 3C4B     		ldr	r3, .L907+48
 8069 159e EFE7     		b	.L472
 8070              	.L833:
 8071 15a0 3D4B     		ldr	r3, .L907+56
 8072 15a2 EDE7     		b	.L472
ARM GAS  /tmp/ccmyImrL.s 			page 236


 8073              	.L834:
 8074 15a4 3D4B     		ldr	r3, .L907+60
 8075 15a6 EBE7     		b	.L472
 8076              	.L835:
 8077 15a8 2F4B     		ldr	r3, .L907+8
 8078 15aa E9E7     		b	.L472
 8079              	.L836:
 8080 15ac 3C4B     		ldr	r3, .L907+64
 8081 15ae E7E7     		b	.L472
 8082              	.L837:
 8083 15b0 4FF22443 		movw	r3, #62500
 8084 15b4 E4E7     		b	.L472
 8085              	.L838:
 8086 15b6 47F61223 		movw	r3, #31250
 8087 15ba E1E7     		b	.L472
 8088              	.L464:
3108:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8089              		.loc 1 3108 0
 8090 15bc 636A     		ldr	r3, [r4, #36]
 8091 15be D3B1     		cbz	r3, .L840
3108:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8092              		.loc 1 3108 0 is_stmt 0 discriminator 1
 8093 15c0 012B     		cmp	r3, #1
 8094 15c2 22D0     		beq	.L841
3108:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8095              		.loc 1 3108 0 discriminator 3
 8096 15c4 022B     		cmp	r3, #2
 8097 15c6 23D0     		beq	.L842
3108:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8098              		.loc 1 3108 0 discriminator 5
 8099 15c8 032B     		cmp	r3, #3
 8100 15ca 24D0     		beq	.L843
3108:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8101              		.loc 1 3108 0 discriminator 7
 8102 15cc 042B     		cmp	r3, #4
 8103 15ce 25D0     		beq	.L844
3108:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8104              		.loc 1 3108 0 discriminator 9
 8105 15d0 052B     		cmp	r3, #5
 8106 15d2 26D0     		beq	.L845
3108:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8107              		.loc 1 3108 0 discriminator 11
 8108 15d4 062B     		cmp	r3, #6
 8109 15d6 27D0     		beq	.L846
3108:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8110              		.loc 1 3108 0 discriminator 13
 8111 15d8 072B     		cmp	r3, #7
 8112 15da 28D0     		beq	.L847
3108:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8113              		.loc 1 3108 0 discriminator 15
 8114 15dc 082B     		cmp	r3, #8
 8115 15de 29D0     		beq	.L848
3108:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8116              		.loc 1 3108 0 discriminator 17
 8117 15e0 092B     		cmp	r3, #9
 8118 15e2 2AD0     		beq	.L849
3108:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
ARM GAS  /tmp/ccmyImrL.s 			page 237


 8119              		.loc 1 3108 0 discriminator 19
 8120 15e4 0A2B     		cmp	r3, #10
 8121 15e6 2BD0     		beq	.L850
3108:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8122              		.loc 1 3108 0 discriminator 21
 8123 15e8 0B2B     		cmp	r3, #11
 8124 15ea 02D0     		beq	.L894
3108:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8125              		.loc 1 3108 0
 8126 15ec 4FF40043 		mov	r3, #32768
 8127 15f0 03E0     		b	.L473
 8128              	.L894:
 8129 15f2 8023     		movs	r3, #128
 8130 15f4 01E0     		b	.L473
 8131              	.L840:
 8132 15f6 4FF40043 		mov	r3, #32768
 8133              	.L473:
3108:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8134              		.loc 1 3108 0 discriminator 48
 8135 15fa 6268     		ldr	r2, [r4, #4]
 8136 15fc 03EB5203 		add	r3, r3, r2, lsr #1
 8137 1600 B3FBF2F3 		udiv	r3, r3, r2
 8138 1604 9BB2     		uxth	r3, r3
 8139              	.LVL598:
2861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 8140              		.loc 1 2861 0 is_stmt 1 discriminator 48
 8141 1606 0026     		movs	r6, #0
3109:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default:
 8142              		.loc 1 3109 0 discriminator 48
 8143 1608 10E6     		b	.L456
 8144              	.LVL599:
 8145              	.L841:
3108:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8146              		.loc 1 3108 0
 8147 160a 4FF48043 		mov	r3, #16384
 8148 160e F4E7     		b	.L473
 8149              	.L842:
 8150 1610 4FF40053 		mov	r3, #8192
 8151 1614 F1E7     		b	.L473
 8152              	.L843:
 8153 1616 41F25553 		movw	r3, #5461
 8154 161a EEE7     		b	.L473
 8155              	.L844:
 8156 161c 4FF48053 		mov	r3, #4096
 8157 1620 EBE7     		b	.L473
 8158              	.L845:
 8159 1622 40F6CC43 		movw	r3, #3276
 8160 1626 E8E7     		b	.L473
 8161              	.L846:
 8162 1628 40F6AA23 		movw	r3, #2730
 8163 162c E5E7     		b	.L473
 8164              	.L847:
 8165 162e 4FF40063 		mov	r3, #2048
 8166 1632 E2E7     		b	.L473
 8167              	.L848:
 8168 1634 4FF48063 		mov	r3, #1024
 8169 1638 DFE7     		b	.L473
ARM GAS  /tmp/ccmyImrL.s 			page 238


 8170              	.L849:
 8171 163a 4FF40073 		mov	r3, #512
 8172 163e DCE7     		b	.L473
 8173              	.L850:
 8174 1640 4FF48073 		mov	r3, #256
 8175 1644 D9E7     		b	.L473
 8176              	.L755:
3111:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8177              		.loc 1 3111 0
 8178 1646 0126     		movs	r6, #1
2860:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 8179              		.loc 1 2860 0
 8180 1648 0023     		movs	r3, #0
 8181 164a EFE5     		b	.L456
 8182              	.LVL600:
 8183              	.L569:
2969:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 8184              		.loc 1 2969 0
 8185 164c 0126     		movs	r6, #1
 8186              	.LVL601:
 8187 164e F6E5     		b	.L420
 8188              	.LVL602:
 8189              	.L570:
 8190 1650 0126     		movs	r6, #1
 8191              	.LVL603:
 8192 1652 F4E5     		b	.L420
 8193              	.LVL604:
 8194              	.L656:
3015:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 8195              		.loc 1 3015 0
 8196 1654 0126     		movs	r6, #1
 8197              	.LVL605:
 8198 1656 F2E5     		b	.L420
 8199              	.LVL606:
 8200              	.L754:
3071:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 8201              		.loc 1 3071 0
 8202 1658 0126     		movs	r6, #1
 8203              	.LVL607:
 8204 165a F0E5     		b	.L420
 8205              	.LVL608:
 8206              	.L852:
3122:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 8207              		.loc 1 3122 0
 8208 165c 0126     		movs	r6, #1
 8209              	.LVL609:
 8210 165e EEE5     		b	.L420
 8211              	.L908:
 8212              		.align	2
 8213              	.L907:
 8214 1660 00440258 		.word	1476543488
 8215 1664 0090D003 		.word	64000000
 8216 1668 90D00300 		.word	250000
 8217 166c 0048E801 		.word	32000000
 8218 1670 0024F400 		.word	16000000
 8219 1674 AAC2A200 		.word	10666666
 8220 1678 00127A00 		.word	8000000
ARM GAS  /tmp/ccmyImrL.s 			page 239


 8221 167c 00A86100 		.word	6400000
 8222 1680 55615100 		.word	5333333
 8223 1684 00093D00 		.word	4000000
 8224 1688 80841E00 		.word	2000000
 8225 168c 40420F00 		.word	1000000
 8226 1690 20A10700 		.word	500000
 8227 1694 2A2C0A00 		.word	666666
 8228 1698 801A0600 		.word	400000
 8229 169c 15160500 		.word	333333
 8230 16a0 48E80100 		.word	125000
 8231              		.cfi_endproc
 8232              	.LFE183:
 8234              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 8235              		.align	1
 8236              		.global	UART_AdvFeatureConfig
 8237              		.syntax unified
 8238              		.thumb
 8239              		.thumb_func
 8240              		.fpu fpv5-d16
 8242              	UART_AdvFeatureConfig:
 8243              	.LFB184:
3143:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 8244              		.loc 1 3143 0
 8245              		.cfi_startproc
 8246              		@ args = 0, pretend = 0, frame = 0
 8247              		@ frame_needed = 0, uses_anonymous_args = 0
 8248              		@ link register save eliminated.
 8249              	.LVL610:
3148:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 8250              		.loc 1 3148 0
 8251 0000 836A     		ldr	r3, [r0, #40]
 8252 0002 13F0010F 		tst	r3, #1
 8253 0006 06D0     		beq	.L910
3151:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 8254              		.loc 1 3151 0
 8255 0008 0268     		ldr	r2, [r0]
 8256 000a 5368     		ldr	r3, [r2, #4]
 8257 000c 23F40033 		bic	r3, r3, #131072
 8258 0010 C16A     		ldr	r1, [r0, #44]
 8259 0012 0B43     		orrs	r3, r3, r1
 8260 0014 5360     		str	r3, [r2, #4]
 8261              	.L910:
3155:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 8262              		.loc 1 3155 0
 8263 0016 836A     		ldr	r3, [r0, #40]
 8264 0018 13F0020F 		tst	r3, #2
 8265 001c 06D0     		beq	.L911
3158:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 8266              		.loc 1 3158 0
 8267 001e 0268     		ldr	r2, [r0]
 8268 0020 5368     		ldr	r3, [r2, #4]
 8269 0022 23F48033 		bic	r3, r3, #65536
 8270 0026 016B     		ldr	r1, [r0, #48]
 8271 0028 0B43     		orrs	r3, r3, r1
 8272 002a 5360     		str	r3, [r2, #4]
 8273              	.L911:
3162:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
ARM GAS  /tmp/ccmyImrL.s 			page 240


 8274              		.loc 1 3162 0
 8275 002c 836A     		ldr	r3, [r0, #40]
 8276 002e 13F0040F 		tst	r3, #4
 8277 0032 06D0     		beq	.L912
3165:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 8278              		.loc 1 3165 0
 8279 0034 0268     		ldr	r2, [r0]
 8280 0036 5368     		ldr	r3, [r2, #4]
 8281 0038 23F48023 		bic	r3, r3, #262144
 8282 003c 416B     		ldr	r1, [r0, #52]
 8283 003e 0B43     		orrs	r3, r3, r1
 8284 0040 5360     		str	r3, [r2, #4]
 8285              	.L912:
3169:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 8286              		.loc 1 3169 0
 8287 0042 836A     		ldr	r3, [r0, #40]
 8288 0044 13F0080F 		tst	r3, #8
 8289 0048 06D0     		beq	.L913
3172:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 8290              		.loc 1 3172 0
 8291 004a 0268     		ldr	r2, [r0]
 8292 004c 5368     		ldr	r3, [r2, #4]
 8293 004e 23F40043 		bic	r3, r3, #32768
 8294 0052 816B     		ldr	r1, [r0, #56]
 8295 0054 0B43     		orrs	r3, r3, r1
 8296 0056 5360     		str	r3, [r2, #4]
 8297              	.L913:
3176:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 8298              		.loc 1 3176 0
 8299 0058 836A     		ldr	r3, [r0, #40]
 8300 005a 13F0100F 		tst	r3, #16
 8301 005e 06D0     		beq	.L914
3179:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 8302              		.loc 1 3179 0
 8303 0060 0268     		ldr	r2, [r0]
 8304 0062 9368     		ldr	r3, [r2, #8]
 8305 0064 23F48053 		bic	r3, r3, #4096
 8306 0068 C16B     		ldr	r1, [r0, #60]
 8307 006a 0B43     		orrs	r3, r3, r1
 8308 006c 9360     		str	r3, [r2, #8]
 8309              	.L914:
3183:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 8310              		.loc 1 3183 0
 8311 006e 836A     		ldr	r3, [r0, #40]
 8312 0070 13F0200F 		tst	r3, #32
 8313 0074 06D0     		beq	.L915
3186:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 8314              		.loc 1 3186 0
 8315 0076 0268     		ldr	r2, [r0]
 8316 0078 9368     		ldr	r3, [r2, #8]
 8317 007a 23F40053 		bic	r3, r3, #8192
 8318 007e 016C     		ldr	r1, [r0, #64]
 8319 0080 0B43     		orrs	r3, r3, r1
 8320 0082 9360     		str	r3, [r2, #8]
 8321              	.L915:
3190:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 8322              		.loc 1 3190 0
ARM GAS  /tmp/ccmyImrL.s 			page 241


 8323 0084 836A     		ldr	r3, [r0, #40]
 8324 0086 13F0400F 		tst	r3, #64
 8325 008a 0AD0     		beq	.L916
3194:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 8326              		.loc 1 3194 0
 8327 008c 0268     		ldr	r2, [r0]
 8328 008e 5368     		ldr	r3, [r2, #4]
 8329 0090 23F48013 		bic	r3, r3, #1048576
 8330 0094 416C     		ldr	r1, [r0, #68]
 8331 0096 0B43     		orrs	r3, r3, r1
 8332 0098 5360     		str	r3, [r2, #4]
3196:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 8333              		.loc 1 3196 0
 8334 009a 436C     		ldr	r3, [r0, #68]
 8335 009c B3F5801F 		cmp	r3, #1048576
 8336 00a0 0BD0     		beq	.L918
 8337              	.L916:
3204:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 8338              		.loc 1 3204 0
 8339 00a2 836A     		ldr	r3, [r0, #40]
 8340 00a4 13F0800F 		tst	r3, #128
 8341 00a8 06D0     		beq	.L909
3207:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 8342              		.loc 1 3207 0
 8343 00aa 0268     		ldr	r2, [r0]
 8344 00ac 5368     		ldr	r3, [r2, #4]
 8345 00ae 23F40023 		bic	r3, r3, #524288
 8346 00b2 C16C     		ldr	r1, [r0, #76]
 8347 00b4 0B43     		orrs	r3, r3, r1
 8348 00b6 5360     		str	r3, [r2, #4]
 8349              	.L909:
 8350 00b8 7047     		bx	lr
 8351              	.L918:
3199:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 8352              		.loc 1 3199 0
 8353 00ba 0268     		ldr	r2, [r0]
 8354 00bc 5368     		ldr	r3, [r2, #4]
 8355 00be 23F4C003 		bic	r3, r3, #6291456
 8356 00c2 816C     		ldr	r1, [r0, #72]
 8357 00c4 0B43     		orrs	r3, r3, r1
 8358 00c6 5360     		str	r3, [r2, #4]
 8359 00c8 EBE7     		b	.L916
 8360              		.cfi_endproc
 8361              	.LFE184:
 8363              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 8364              		.align	1
 8365              		.global	UART_WaitOnFlagUntilTimeout
 8366              		.syntax unified
 8367              		.thumb
 8368              		.thumb_func
 8369              		.fpu fpv5-d16
 8371              	UART_WaitOnFlagUntilTimeout:
 8372              	.LFB186:
3268:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Wait until flag is set */
 8373              		.loc 1 3268 0
 8374              		.cfi_startproc
 8375              		@ args = 4, pretend = 0, frame = 0
ARM GAS  /tmp/ccmyImrL.s 			page 242


 8376              		@ frame_needed = 0, uses_anonymous_args = 0
 8377              	.LVL611:
 8378 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 8379              	.LCFI35:
 8380              		.cfi_def_cfa_offset 24
 8381              		.cfi_offset 4, -24
 8382              		.cfi_offset 5, -20
 8383              		.cfi_offset 6, -16
 8384              		.cfi_offset 7, -12
 8385              		.cfi_offset 8, -8
 8386              		.cfi_offset 14, -4
 8387 0004 0446     		mov	r4, r0
 8388 0006 0F46     		mov	r7, r1
 8389 0008 1646     		mov	r6, r2
 8390 000a 9846     		mov	r8, r3
 8391 000c 069D     		ldr	r5, [sp, #24]
 8392              	.LVL612:
 8393              	.L921:
3270:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 8394              		.loc 1 3270 0
 8395 000e 2368     		ldr	r3, [r4]
 8396 0010 DB69     		ldr	r3, [r3, #28]
 8397 0012 37EA0303 		bics	r3, r7, r3
 8398 0016 0CBF     		ite	eq
 8399 0018 0123     		moveq	r3, #1
 8400 001a 0023     		movne	r3, #0
 8401 001c B342     		cmp	r3, r6
 8402 001e 41D1     		bne	.L927
3273:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 8403              		.loc 1 3273 0
 8404 0020 B5F1FF3F 		cmp	r5, #-1
 8405 0024 F3D0     		beq	.L921
3275:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 8406              		.loc 1 3275 0
 8407 0026 FFF7FEFF 		bl	HAL_GetTick
 8408              	.LVL613:
 8409 002a A0EB0800 		sub	r0, r0, r8
 8410 002e 8542     		cmp	r5, r0
 8411 0030 23D3     		bcc	.L922
3275:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 8412              		.loc 1 3275 0 is_stmt 0 discriminator 1
 8413 0032 15B3     		cbz	r5, .L922
3289:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 8414              		.loc 1 3289 0 is_stmt 1
 8415 0034 2368     		ldr	r3, [r4]
 8416 0036 1A68     		ldr	r2, [r3]
 8417 0038 12F0040F 		tst	r2, #4
 8418 003c E7D0     		beq	.L921
3291:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 8419              		.loc 1 3291 0
 8420 003e DA69     		ldr	r2, [r3, #28]
 8421 0040 12F4006F 		tst	r2, #2048
 8422 0044 E3D0     		beq	.L921
3294:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           
 8423              		.loc 1 3294 0
 8424 0046 4FF40062 		mov	r2, #2048
 8425 004a 1A62     		str	r2, [r3, #32]
ARM GAS  /tmp/ccmyImrL.s 			page 243


3297:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8426              		.loc 1 3297 0
 8427 004c 2268     		ldr	r2, [r4]
 8428 004e 1368     		ldr	r3, [r2]
 8429 0050 23F4D073 		bic	r3, r3, #416
 8430 0054 1360     		str	r3, [r2]
3298:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 8431              		.loc 1 3298 0
 8432 0056 2268     		ldr	r2, [r4]
 8433 0058 9368     		ldr	r3, [r2, #8]
 8434 005a 23F00103 		bic	r3, r3, #1
 8435 005e 9360     		str	r3, [r2, #8]
3300:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 8436              		.loc 1 3300 0
 8437 0060 2023     		movs	r3, #32
 8438 0062 C4F88030 		str	r3, [r4, #128]
3301:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
 8439              		.loc 1 3301 0
 8440 0066 C4F88430 		str	r3, [r4, #132]
3302:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           
 8441              		.loc 1 3302 0
 8442 006a C4F88830 		str	r3, [r4, #136]
3305:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           
 8443              		.loc 1 3305 0
 8444 006e 0023     		movs	r3, #0
 8445 0070 84F87C30 		strb	r3, [r4, #124]
3307:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 8446              		.loc 1 3307 0
 8447 0074 0320     		movs	r0, #3
 8448 0076 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 8449              	.LVL614:
 8450              	.L922:
3278:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8451              		.loc 1 3278 0
 8452 007a 2268     		ldr	r2, [r4]
 8453 007c 1368     		ldr	r3, [r2]
 8454 007e 23F4D073 		bic	r3, r3, #416
 8455 0082 1360     		str	r3, [r2]
3279:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 8456              		.loc 1 3279 0
 8457 0084 2268     		ldr	r2, [r4]
 8458 0086 9368     		ldr	r3, [r2, #8]
 8459 0088 23F00103 		bic	r3, r3, #1
 8460 008c 9360     		str	r3, [r2, #8]
3281:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 8461              		.loc 1 3281 0
 8462 008e 2023     		movs	r3, #32
 8463 0090 C4F88030 		str	r3, [r4, #128]
3282:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 8464              		.loc 1 3282 0
 8465 0094 C4F88430 		str	r3, [r4, #132]
3284:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 8466              		.loc 1 3284 0
 8467 0098 0023     		movs	r3, #0
 8468 009a 84F87C30 		strb	r3, [r4, #124]
3286:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 8469              		.loc 1 3286 0
ARM GAS  /tmp/ccmyImrL.s 			page 244


 8470 009e 0320     		movs	r0, #3
 8471 00a0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 8472              	.LVL615:
 8473              	.L927:
3312:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 8474              		.loc 1 3312 0
 8475 00a4 0020     		movs	r0, #0
3313:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 8476              		.loc 1 3313 0
 8477 00a6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 8478              		.cfi_endproc
 8479              	.LFE186:
 8481              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 8482              		.align	1
 8483              		.global	HAL_UART_Transmit
 8484              		.syntax unified
 8485              		.thumb
 8486              		.thumb_func
 8487              		.fpu fpv5-d16
 8489              	HAL_UART_Transmit:
 8490              	.LFB148:
1032:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint8_t  *pdata8bits;
 8491              		.loc 1 1032 0
 8492              		.cfi_startproc
 8493              		@ args = 0, pretend = 0, frame = 0
 8494              		@ frame_needed = 0, uses_anonymous_args = 0
 8495              	.LVL616:
 8496 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 8497              	.LCFI36:
 8498              		.cfi_def_cfa_offset 24
 8499              		.cfi_offset 4, -24
 8500              		.cfi_offset 5, -20
 8501              		.cfi_offset 6, -16
 8502              		.cfi_offset 7, -12
 8503              		.cfi_offset 8, -8
 8504              		.cfi_offset 14, -4
 8505 0004 82B0     		sub	sp, sp, #8
 8506              	.LCFI37:
 8507              		.cfi_def_cfa_offset 32
 8508 0006 1E46     		mov	r6, r3
1038:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 8509              		.loc 1 1038 0
 8510 0008 D0F88030 		ldr	r3, [r0, #128]
 8511              	.LVL617:
 8512 000c 202B     		cmp	r3, #32
 8513 000e 04D0     		beq	.L943
1101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 8514              		.loc 1 1101 0
 8515 0010 0223     		movs	r3, #2
 8516              	.LVL618:
 8517              	.L929:
1103:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 8518              		.loc 1 1103 0
 8519 0012 1846     		mov	r0, r3
 8520 0014 02B0     		add	sp, sp, #8
 8521              	.LCFI38:
 8522              		.cfi_remember_state
ARM GAS  /tmp/ccmyImrL.s 			page 245


 8523              		.cfi_def_cfa_offset 24
 8524              		@ sp needed
 8525 0016 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 8526              	.LVL619:
 8527              	.L943:
 8528              	.LCFI39:
 8529              		.cfi_restore_state
 8530 001a 0446     		mov	r4, r0
 8531 001c 0D46     		mov	r5, r1
 8532 001e 9046     		mov	r8, r2
1040:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 8533              		.loc 1 1040 0
 8534 0020 002A     		cmp	r2, #0
 8535 0022 18BF     		it	ne
 8536 0024 0029     		cmpne	r1, #0
 8537 0026 56D0     		beq	.L936
1045:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 8538              		.loc 1 1045 0
 8539 0028 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 8540 002c 012B     		cmp	r3, #1
 8541 002e 01D1     		bne	.L944
 8542 0030 0223     		movs	r3, #2
 8543 0032 EEE7     		b	.L929
 8544              	.L944:
1045:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 8545              		.loc 1 1045 0 is_stmt 0 discriminator 2
 8546 0034 0123     		movs	r3, #1
 8547 0036 80F87C30 		strb	r3, [r0, #124]
1047:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 8548              		.loc 1 1047 0 is_stmt 1 discriminator 2
 8549 003a 0023     		movs	r3, #0
 8550 003c C0F88830 		str	r3, [r0, #136]
1048:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 8551              		.loc 1 1048 0 discriminator 2
 8552 0040 2123     		movs	r3, #33
 8553 0042 C0F88030 		str	r3, [r0, #128]
1051:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 8554              		.loc 1 1051 0 discriminator 2
 8555 0046 FFF7FEFF 		bl	HAL_GetTick
 8556              	.LVL620:
 8557 004a 0746     		mov	r7, r0
 8558              	.LVL621:
1053:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = Size;
 8559              		.loc 1 1053 0 discriminator 2
 8560 004c A4F85480 		strh	r8, [r4, #84]	@ movhi
1054:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 8561              		.loc 1 1054 0 discriminator 2
 8562 0050 A4F85680 		strh	r8, [r4, #86]	@ movhi
1057:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 8563              		.loc 1 1057 0 discriminator 2
 8564 0054 A368     		ldr	r3, [r4, #8]
 8565 0056 B3F5805F 		cmp	r3, #4096
 8566 005a 02D0     		beq	.L945
1065:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 8567              		.loc 1 1065 0
 8568 005c 4FF00008 		mov	r8, #0
 8569 0060 14E0     		b	.L931
ARM GAS  /tmp/ccmyImrL.s 			page 246


 8570              	.L945:
1057:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 8571              		.loc 1 1057 0 discriminator 1
 8572 0062 2369     		ldr	r3, [r4, #16]
 8573 0064 13B1     		cbz	r3, .L939
1065:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 8574              		.loc 1 1065 0
 8575 0066 4FF00008 		mov	r8, #0
 8576 006a 0FE0     		b	.L931
 8577              	.L939:
1060:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 8578              		.loc 1 1060 0
 8579 006c A846     		mov	r8, r5
1059:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 8580              		.loc 1 1059 0
 8581 006e 0025     		movs	r5, #0
 8582              	.LVL622:
 8583 0070 0CE0     		b	.L931
 8584              	.LVL623:
 8585              	.L947:
1076:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pdata16bits++;
 8586              		.loc 1 1076 0
 8587 0072 2268     		ldr	r2, [r4]
 8588 0074 38F8023B 		ldrh	r3, [r8], #2
 8589              	.LVL624:
 8590 0078 C3F30803 		ubfx	r3, r3, #0, #9
 8591 007c 9362     		str	r3, [r2, #40]
 8592              	.LVL625:
 8593              	.L933:
1084:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 8594              		.loc 1 1084 0
 8595 007e B4F85630 		ldrh	r3, [r4, #86]
 8596 0082 9BB2     		uxth	r3, r3
 8597 0084 013B     		subs	r3, r3, #1
 8598 0086 9BB2     		uxth	r3, r3
 8599 0088 A4F85630 		strh	r3, [r4, #86]	@ movhi
 8600              	.LVL626:
 8601              	.L931:
1068:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 8602              		.loc 1 1068 0
 8603 008c B4F85630 		ldrh	r3, [r4, #86]
 8604 0090 9BB2     		uxth	r3, r3
 8605 0092 73B1     		cbz	r3, .L946
1070:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 8606              		.loc 1 1070 0
 8607 0094 0096     		str	r6, [sp]
 8608 0096 3B46     		mov	r3, r7
 8609 0098 0022     		movs	r2, #0
 8610 009a 8021     		movs	r1, #128
 8611 009c 2046     		mov	r0, r4
 8612 009e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 8613              	.LVL627:
 8614 00a2 D0B9     		cbnz	r0, .L940
1074:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 8615              		.loc 1 1074 0
 8616 00a4 002D     		cmp	r5, #0
 8617 00a6 E4D0     		beq	.L947
ARM GAS  /tmp/ccmyImrL.s 			page 247


1081:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pdata8bits++;
 8618              		.loc 1 1081 0
 8619 00a8 2368     		ldr	r3, [r4]
 8620 00aa 15F8012B 		ldrb	r2, [r5], #1	@ zero_extendqisi2
 8621              	.LVL628:
 8622 00ae 9A62     		str	r2, [r3, #40]
 8623              	.LVL629:
 8624 00b0 E5E7     		b	.L933
 8625              	.L946:
1087:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 8626              		.loc 1 1087 0
 8627 00b2 0096     		str	r6, [sp]
 8628 00b4 3B46     		mov	r3, r7
 8629 00b6 0022     		movs	r2, #0
 8630 00b8 4021     		movs	r1, #64
 8631 00ba 2046     		mov	r0, r4
 8632 00bc FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 8633              	.LVL630:
 8634 00c0 0346     		mov	r3, r0
 8635 00c2 08B1     		cbz	r0, .L948
1089:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 8636              		.loc 1 1089 0
 8637 00c4 0323     		movs	r3, #3
 8638 00c6 A4E7     		b	.L929
 8639              	.L948:
1093:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 8640              		.loc 1 1093 0
 8641 00c8 2022     		movs	r2, #32
 8642 00ca C4F88020 		str	r2, [r4, #128]
1095:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 8643              		.loc 1 1095 0
 8644 00ce 0022     		movs	r2, #0
 8645 00d0 84F87C20 		strb	r2, [r4, #124]
1097:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 8646              		.loc 1 1097 0
 8647 00d4 9DE7     		b	.L929
 8648              	.LVL631:
 8649              	.L936:
1042:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 8650              		.loc 1 1042 0
 8651 00d6 0123     		movs	r3, #1
 8652 00d8 9BE7     		b	.L929
 8653              	.LVL632:
 8654              	.L940:
1072:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 8655              		.loc 1 1072 0
 8656 00da 0323     		movs	r3, #3
 8657 00dc 99E7     		b	.L929
 8658              		.cfi_endproc
 8659              	.LFE148:
 8661              		.section	.text.HAL_UART_Receive,"ax",%progbits
 8662              		.align	1
 8663              		.global	HAL_UART_Receive
 8664              		.syntax unified
 8665              		.thumb
 8666              		.thumb_func
 8667              		.fpu fpv5-d16
ARM GAS  /tmp/ccmyImrL.s 			page 248


 8669              	HAL_UART_Receive:
 8670              	.LFB149:
1121:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint8_t  *pdata8bits;
 8671              		.loc 1 1121 0
 8672              		.cfi_startproc
 8673              		@ args = 0, pretend = 0, frame = 0
 8674              		@ frame_needed = 0, uses_anonymous_args = 0
 8675              	.LVL633:
 8676 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 8677              	.LCFI40:
 8678              		.cfi_def_cfa_offset 28
 8679              		.cfi_offset 4, -28
 8680              		.cfi_offset 5, -24
 8681              		.cfi_offset 6, -20
 8682              		.cfi_offset 7, -16
 8683              		.cfi_offset 8, -12
 8684              		.cfi_offset 9, -8
 8685              		.cfi_offset 14, -4
 8686 0004 83B0     		sub	sp, sp, #12
 8687              	.LCFI41:
 8688              		.cfi_def_cfa_offset 40
 8689 0006 1E46     		mov	r6, r3
1128:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 8690              		.loc 1 1128 0
 8691 0008 D0F88430 		ldr	r3, [r0, #132]
 8692              	.LVL634:
 8693 000c 202B     		cmp	r3, #32
 8694 000e 03D0     		beq	.L970
1191:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 8695              		.loc 1 1191 0
 8696 0010 0220     		movs	r0, #2
 8697              	.LVL635:
 8698              	.L950:
1193:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 8699              		.loc 1 1193 0
 8700 0012 03B0     		add	sp, sp, #12
 8701              	.LCFI42:
 8702              		.cfi_remember_state
 8703              		.cfi_def_cfa_offset 28
 8704              		@ sp needed
 8705 0014 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 8706              	.LVL636:
 8707              	.L970:
 8708              	.LCFI43:
 8709              		.cfi_restore_state
 8710 0018 0446     		mov	r4, r0
 8711 001a 0D46     		mov	r5, r1
 8712 001c 9046     		mov	r8, r2
1130:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 8713              		.loc 1 1130 0
 8714 001e 002A     		cmp	r2, #0
 8715 0020 18BF     		it	ne
 8716 0022 0029     		cmpne	r1, #0
 8717 0024 79D0     		beq	.L964
1135:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 8718              		.loc 1 1135 0
 8719 0026 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
ARM GAS  /tmp/ccmyImrL.s 			page 249


 8720 002a 012B     		cmp	r3, #1
 8721 002c 01D1     		bne	.L971
 8722 002e 0220     		movs	r0, #2
 8723              	.LVL637:
 8724 0030 EFE7     		b	.L950
 8725              	.LVL638:
 8726              	.L971:
1135:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 8727              		.loc 1 1135 0 is_stmt 0 discriminator 2
 8728 0032 0123     		movs	r3, #1
 8729 0034 80F87C30 		strb	r3, [r0, #124]
1137:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 8730              		.loc 1 1137 0 is_stmt 1 discriminator 2
 8731 0038 0023     		movs	r3, #0
 8732 003a C0F88830 		str	r3, [r0, #136]
1138:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 8733              		.loc 1 1138 0 discriminator 2
 8734 003e 2223     		movs	r3, #34
 8735 0040 C0F88430 		str	r3, [r0, #132]
1141:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 8736              		.loc 1 1141 0 discriminator 2
 8737 0044 FFF7FEFF 		bl	HAL_GetTick
 8738              	.LVL639:
 8739 0048 0746     		mov	r7, r0
 8740              	.LVL640:
1143:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = Size;
 8741              		.loc 1 1143 0 discriminator 2
 8742 004a A4F85C80 		strh	r8, [r4, #92]	@ movhi
1144:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 8743              		.loc 1 1144 0 discriminator 2
 8744 004e A4F85E80 		strh	r8, [r4, #94]	@ movhi
1147:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 8745              		.loc 1 1147 0 discriminator 2
 8746 0052 A368     		ldr	r3, [r4, #8]
 8747 0054 B3F5805F 		cmp	r3, #4096
 8748 0058 06D0     		beq	.L972
 8749 005a A3B9     		cbnz	r3, .L954
1147:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 8750              		.loc 1 1147 0 is_stmt 0 discriminator 5
 8751 005c 2269     		ldr	r2, [r4, #16]
 8752 005e 72B9     		cbnz	r2, .L955
1147:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 8753              		.loc 1 1147 0 discriminator 7
 8754 0060 FF22     		movs	r2, #255
 8755 0062 A4F86020 		strh	r2, [r4, #96]	@ movhi
 8756 0066 14E0     		b	.L953
 8757              	.L972:
1147:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 8758              		.loc 1 1147 0 discriminator 1
 8759 0068 2269     		ldr	r2, [r4, #16]
 8760 006a 22B9     		cbnz	r2, .L952
1147:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 8761              		.loc 1 1147 0 discriminator 3
 8762 006c 40F2FF12 		movw	r2, #511
 8763 0070 A4F86020 		strh	r2, [r4, #96]	@ movhi
 8764 0074 0DE0     		b	.L953
 8765              	.L952:
ARM GAS  /tmp/ccmyImrL.s 			page 250


1147:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 8766              		.loc 1 1147 0 discriminator 4
 8767 0076 FF22     		movs	r2, #255
 8768 0078 A4F86020 		strh	r2, [r4, #96]	@ movhi
 8769 007c 09E0     		b	.L953
 8770              	.L955:
1147:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 8771              		.loc 1 1147 0 discriminator 8
 8772 007e 7F22     		movs	r2, #127
 8773 0080 A4F86020 		strh	r2, [r4, #96]	@ movhi
 8774 0084 05E0     		b	.L953
 8775              	.L954:
1147:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 8776              		.loc 1 1147 0 discriminator 6
 8777 0086 B3F1805F 		cmp	r3, #268435456
 8778 008a 0AD0     		beq	.L973
1147:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 8779              		.loc 1 1147 0 discriminator 10
 8780 008c 0022     		movs	r2, #0
 8781 008e A4F86020 		strh	r2, [r4, #96]	@ movhi
 8782              	.L953:
1148:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 8783              		.loc 1 1148 0 is_stmt 1
 8784 0092 B4F86080 		ldrh	r8, [r4, #96]
 8785              	.LVL641:
1151:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 8786              		.loc 1 1151 0
 8787 0096 B3F5805F 		cmp	r3, #4096
 8788 009a 0CD0     		beq	.L974
1159:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 8789              		.loc 1 1159 0
 8790 009c 4FF00009 		mov	r9, #0
 8791 00a0 1EE0     		b	.L959
 8792              	.LVL642:
 8793              	.L973:
1147:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 8794              		.loc 1 1147 0 discriminator 9
 8795 00a2 2269     		ldr	r2, [r4, #16]
 8796 00a4 1AB9     		cbnz	r2, .L957
1147:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 8797              		.loc 1 1147 0 is_stmt 0 discriminator 11
 8798 00a6 7F22     		movs	r2, #127
 8799 00a8 A4F86020 		strh	r2, [r4, #96]	@ movhi
 8800 00ac F1E7     		b	.L953
 8801              	.L957:
1147:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 8802              		.loc 1 1147 0 discriminator 12
 8803 00ae 3F22     		movs	r2, #63
 8804 00b0 A4F86020 		strh	r2, [r4, #96]	@ movhi
 8805 00b4 EDE7     		b	.L953
 8806              	.LVL643:
 8807              	.L974:
1151:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 8808              		.loc 1 1151 0 is_stmt 1 discriminator 1
 8809 00b6 2369     		ldr	r3, [r4, #16]
 8810 00b8 13B1     		cbz	r3, .L967
1159:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
ARM GAS  /tmp/ccmyImrL.s 			page 251


 8811              		.loc 1 1159 0
 8812 00ba 4FF00009 		mov	r9, #0
 8813 00be 0FE0     		b	.L959
 8814              	.L967:
1154:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 8815              		.loc 1 1154 0
 8816 00c0 A946     		mov	r9, r5
1153:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 8817              		.loc 1 1153 0
 8818 00c2 0025     		movs	r5, #0
 8819              	.LVL644:
 8820 00c4 0CE0     		b	.L959
 8821              	.LVL645:
 8822              	.L976:
1171:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pdata16bits++;
 8823              		.loc 1 1171 0
 8824 00c6 2368     		ldr	r3, [r4]
 8825 00c8 5B6A     		ldr	r3, [r3, #36]
 8826 00ca 08EA0303 		and	r3, r8, r3
 8827 00ce 29F8023B 		strh	r3, [r9], #2	@ movhi
 8828              	.LVL646:
 8829              	.L961:
1179:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 8830              		.loc 1 1179 0
 8831 00d2 B4F85E30 		ldrh	r3, [r4, #94]
 8832 00d6 9BB2     		uxth	r3, r3
 8833 00d8 013B     		subs	r3, r3, #1
 8834 00da 9BB2     		uxth	r3, r3
 8835 00dc A4F85E30 		strh	r3, [r4, #94]	@ movhi
 8836              	.LVL647:
 8837              	.L959:
1163:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 8838              		.loc 1 1163 0
 8839 00e0 B4F85E30 		ldrh	r3, [r4, #94]
 8840 00e4 9BB2     		uxth	r3, r3
 8841 00e6 8BB1     		cbz	r3, .L975
1165:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 8842              		.loc 1 1165 0
 8843 00e8 0096     		str	r6, [sp]
 8844 00ea 3B46     		mov	r3, r7
 8845 00ec 0022     		movs	r2, #0
 8846 00ee 2021     		movs	r1, #32
 8847 00f0 2046     		mov	r0, r4
 8848 00f2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 8849              	.LVL648:
 8850 00f6 90B9     		cbnz	r0, .L968
1169:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 8851              		.loc 1 1169 0
 8852 00f8 002D     		cmp	r5, #0
 8853 00fa E4D0     		beq	.L976
1176:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pdata8bits++;
 8854              		.loc 1 1176 0
 8855 00fc 2368     		ldr	r3, [r4]
 8856 00fe 5A6A     		ldr	r2, [r3, #36]
 8857 0100 5FFA88F3 		uxtb	r3, r8
 8858 0104 1340     		ands	r3, r3, r2
 8859 0106 05F8013B 		strb	r3, [r5], #1
ARM GAS  /tmp/ccmyImrL.s 			page 252


 8860              	.LVL649:
 8861 010a E2E7     		b	.L961
 8862              	.L975:
1183:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 8863              		.loc 1 1183 0
 8864 010c 2023     		movs	r3, #32
 8865 010e C4F88430 		str	r3, [r4, #132]
1185:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 8866              		.loc 1 1185 0
 8867 0112 0020     		movs	r0, #0
 8868 0114 84F87C00 		strb	r0, [r4, #124]
1187:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 8869              		.loc 1 1187 0
 8870 0118 7BE7     		b	.L950
 8871              	.LVL650:
 8872              	.L964:
1132:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 8873              		.loc 1 1132 0
 8874 011a 0120     		movs	r0, #1
 8875              	.LVL651:
 8876 011c 79E7     		b	.L950
 8877              	.LVL652:
 8878              	.L968:
1167:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 8879              		.loc 1 1167 0
 8880 011e 0320     		movs	r0, #3
 8881 0120 77E7     		b	.L950
 8882              		.cfi_endproc
 8883              	.LFE149:
 8885              		.section	.text.UART_CheckIdleState,"ax",%progbits
 8886              		.align	1
 8887              		.global	UART_CheckIdleState
 8888              		.syntax unified
 8889              		.thumb
 8890              		.thumb_func
 8891              		.fpu fpv5-d16
 8893              	UART_CheckIdleState:
 8894              	.LFB185:
3217:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t tickstart;
 8895              		.loc 1 3217 0
 8896              		.cfi_startproc
 8897              		@ args = 0, pretend = 0, frame = 0
 8898              		@ frame_needed = 0, uses_anonymous_args = 0
 8899              	.LVL653:
 8900 0000 30B5     		push	{r4, r5, lr}
 8901              	.LCFI44:
 8902              		.cfi_def_cfa_offset 12
 8903              		.cfi_offset 4, -12
 8904              		.cfi_offset 5, -8
 8905              		.cfi_offset 14, -4
 8906 0002 83B0     		sub	sp, sp, #12
 8907              	.LCFI45:
 8908              		.cfi_def_cfa_offset 24
 8909 0004 0446     		mov	r4, r0
3221:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 8910              		.loc 1 3221 0
 8911 0006 0023     		movs	r3, #0
ARM GAS  /tmp/ccmyImrL.s 			page 253


 8912 0008 C0F88830 		str	r3, [r0, #136]
3224:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 8913              		.loc 1 3224 0
 8914 000c FFF7FEFF 		bl	HAL_GetTick
 8915              	.LVL654:
 8916 0010 0546     		mov	r5, r0
 8917              	.LVL655:
3227:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 8918              		.loc 1 3227 0
 8919 0012 2368     		ldr	r3, [r4]
 8920 0014 1B68     		ldr	r3, [r3]
 8921 0016 13F0080F 		tst	r3, #8
 8922 001a 0ED1     		bne	.L984
 8923              	.LVL656:
 8924              	.L978:
3238:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 8925              		.loc 1 3238 0
 8926 001c 2368     		ldr	r3, [r4]
 8927 001e 1B68     		ldr	r3, [r3]
 8928 0020 13F0040F 		tst	r3, #4
 8929 0024 17D1     		bne	.L985
 8930              	.L980:
3249:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8931              		.loc 1 3249 0
 8932 0026 2023     		movs	r3, #32
 8933 0028 C4F88030 		str	r3, [r4, #128]
3250:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 8934              		.loc 1 3250 0
 8935 002c C4F88430 		str	r3, [r4, #132]
3252:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 8936              		.loc 1 3252 0
 8937 0030 0020     		movs	r0, #0
 8938 0032 84F87C00 		strb	r0, [r4, #124]
 8939              	.L979:
3255:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 8940              		.loc 1 3255 0
 8941 0036 03B0     		add	sp, sp, #12
 8942              	.LCFI46:
 8943              		.cfi_remember_state
 8944              		.cfi_def_cfa_offset 12
 8945              		@ sp needed
 8946 0038 30BD     		pop	{r4, r5, pc}
 8947              	.LVL657:
 8948              	.L984:
 8949              	.LCFI47:
 8950              		.cfi_restore_state
3230:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 8951              		.loc 1 3230 0
 8952 003a 6FF07E43 		mvn	r3, #-33554432
 8953 003e 0093     		str	r3, [sp]
 8954 0040 0346     		mov	r3, r0
 8955 0042 0022     		movs	r2, #0
 8956 0044 4FF40011 		mov	r1, #2097152
 8957 0048 2046     		mov	r0, r4
 8958              	.LVL658:
 8959 004a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 8960              	.LVL659:
ARM GAS  /tmp/ccmyImrL.s 			page 254


 8961 004e 0028     		cmp	r0, #0
 8962 0050 E4D0     		beq	.L978
3233:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 8963              		.loc 1 3233 0
 8964 0052 0320     		movs	r0, #3
 8965 0054 EFE7     		b	.L979
 8966              	.L985:
3241:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 8967              		.loc 1 3241 0
 8968 0056 6FF07E43 		mvn	r3, #-33554432
 8969 005a 0093     		str	r3, [sp]
 8970 005c 2B46     		mov	r3, r5
 8971 005e 0022     		movs	r2, #0
 8972 0060 4FF48001 		mov	r1, #4194304
 8973 0064 2046     		mov	r0, r4
 8974 0066 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 8975              	.LVL660:
 8976 006a 0028     		cmp	r0, #0
 8977 006c DBD0     		beq	.L980
3244:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 8978              		.loc 1 3244 0
 8979 006e 0320     		movs	r0, #3
 8980 0070 E1E7     		b	.L979
 8981              		.cfi_endproc
 8982              	.LFE185:
 8984              		.section	.text.HAL_UART_Init,"ax",%progbits
 8985              		.align	1
 8986              		.global	HAL_UART_Init
 8987              		.syntax unified
 8988              		.thumb
 8989              		.thumb_func
 8990              		.fpu fpv5-d16
 8992              	HAL_UART_Init:
 8993              	.LFB141:
 296:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 8994              		.loc 1 296 0
 8995              		.cfi_startproc
 8996              		@ args = 0, pretend = 0, frame = 0
 8997              		@ frame_needed = 0, uses_anonymous_args = 0
 8998              	.LVL661:
 298:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 8999              		.loc 1 298 0
 9000 0000 78B3     		cbz	r0, .L990
 296:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 9001              		.loc 1 296 0
 9002 0002 10B5     		push	{r4, lr}
 9003              	.LCFI48:
 9004              		.cfi_def_cfa_offset 8
 9005              		.cfi_offset 4, -8
 9006              		.cfi_offset 14, -4
 9007 0004 0446     		mov	r4, r0
 314:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 9008              		.loc 1 314 0
 9009 0006 D0F88030 		ldr	r3, [r0, #128]
 9010 000a 0BB3     		cbz	r3, .L995
 9011              	.LVL662:
 9012              	.L988:
ARM GAS  /tmp/ccmyImrL.s 			page 255


 335:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9013              		.loc 1 335 0
 9014 000c 2423     		movs	r3, #36
 9015 000e C4F88030 		str	r3, [r4, #128]
 337:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9016              		.loc 1 337 0
 9017 0012 2268     		ldr	r2, [r4]
 9018 0014 1368     		ldr	r3, [r2]
 9019 0016 23F00103 		bic	r3, r3, #1
 9020 001a 1360     		str	r3, [r2]
 340:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 9021              		.loc 1 340 0
 9022 001c 2046     		mov	r0, r4
 9023 001e FFF7FEFF 		bl	UART_SetConfig
 9024              	.LVL663:
 9025 0022 0128     		cmp	r0, #1
 9026 0024 1FD0     		beq	.L987
 345:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 9027              		.loc 1 345 0
 9028 0026 A36A     		ldr	r3, [r4, #40]
 9029 0028 BBB9     		cbnz	r3, .L996
 9030              	.L989:
 353:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 9031              		.loc 1 353 0
 9032 002a 2268     		ldr	r2, [r4]
 9033 002c 5368     		ldr	r3, [r2, #4]
 9034 002e 23F49043 		bic	r3, r3, #18432
 9035 0032 5360     		str	r3, [r2, #4]
 354:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9036              		.loc 1 354 0
 9037 0034 2268     		ldr	r2, [r4]
 9038 0036 9368     		ldr	r3, [r2, #8]
 9039 0038 23F02A03 		bic	r3, r3, #42
 9040 003c 9360     		str	r3, [r2, #8]
 356:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9041              		.loc 1 356 0
 9042 003e 2268     		ldr	r2, [r4]
 9043 0040 1368     		ldr	r3, [r2]
 9044 0042 43F00103 		orr	r3, r3, #1
 9045 0046 1360     		str	r3, [r2]
 359:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 9046              		.loc 1 359 0
 9047 0048 2046     		mov	r0, r4
 9048 004a FFF7FEFF 		bl	UART_CheckIdleState
 9049              	.LVL664:
 9050 004e 10BD     		pop	{r4, pc}
 9051              	.LVL665:
 9052              	.L995:
 317:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9053              		.loc 1 317 0
 9054 0050 80F87C30 		strb	r3, [r0, #124]
 331:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 9055              		.loc 1 331 0
 9056 0054 FFF7FEFF 		bl	HAL_UART_MspInit
 9057              	.LVL666:
 9058 0058 D8E7     		b	.L988
 9059              	.L996:
ARM GAS  /tmp/ccmyImrL.s 			page 256


 347:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 9060              		.loc 1 347 0
 9061 005a 2046     		mov	r0, r4
 9062 005c FFF7FEFF 		bl	UART_AdvFeatureConfig
 9063              	.LVL667:
 9064 0060 E3E7     		b	.L989
 9065              	.LVL668:
 9066              	.L990:
 9067              	.LCFI49:
 9068              		.cfi_def_cfa_offset 0
 9069              		.cfi_restore 4
 9070              		.cfi_restore 14
 300:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 9071              		.loc 1 300 0
 9072 0062 0120     		movs	r0, #1
 9073              	.LVL669:
 9074 0064 7047     		bx	lr
 9075              	.LVL670:
 9076              	.L987:
 9077              	.LCFI50:
 9078              		.cfi_def_cfa_offset 8
 9079              		.cfi_offset 4, -8
 9080              		.cfi_offset 14, -4
 360:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9081              		.loc 1 360 0
 9082 0066 10BD     		pop	{r4, pc}
 9083              		.cfi_endproc
 9084              	.LFE141:
 9086              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 9087              		.align	1
 9088              		.global	HAL_HalfDuplex_Init
 9089              		.syntax unified
 9090              		.thumb
 9091              		.thumb_func
 9092              		.fpu fpv5-d16
 9094              	HAL_HalfDuplex_Init:
 9095              	.LFB142:
 369:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 9096              		.loc 1 369 0
 9097              		.cfi_startproc
 9098              		@ args = 0, pretend = 0, frame = 0
 9099              		@ frame_needed = 0, uses_anonymous_args = 0
 9100              	.LVL671:
 371:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 9101              		.loc 1 371 0
 9102 0000 0028     		cmp	r0, #0
 9103 0002 34D0     		beq	.L1001
 369:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 9104              		.loc 1 369 0
 9105 0004 10B5     		push	{r4, lr}
 9106              	.LCFI51:
 9107              		.cfi_def_cfa_offset 8
 9108              		.cfi_offset 4, -8
 9109              		.cfi_offset 14, -4
 9110 0006 0446     		mov	r4, r0
 379:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 9111              		.loc 1 379 0
ARM GAS  /tmp/ccmyImrL.s 			page 257


 9112 0008 D0F88030 		ldr	r3, [r0, #128]
 9113 000c 33B3     		cbz	r3, .L1006
 9114              	.LVL672:
 9115              	.L999:
 400:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9116              		.loc 1 400 0
 9117 000e 2423     		movs	r3, #36
 9118 0010 C4F88030 		str	r3, [r4, #128]
 402:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9119              		.loc 1 402 0
 9120 0014 2268     		ldr	r2, [r4]
 9121 0016 1368     		ldr	r3, [r2]
 9122 0018 23F00103 		bic	r3, r3, #1
 9123 001c 1360     		str	r3, [r2]
 405:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 9124              		.loc 1 405 0
 9125 001e 2046     		mov	r0, r4
 9126 0020 FFF7FEFF 		bl	UART_SetConfig
 9127              	.LVL673:
 9128 0024 0128     		cmp	r0, #1
 9129 0026 24D0     		beq	.L998
 410:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 9130              		.loc 1 410 0
 9131 0028 A36A     		ldr	r3, [r4, #40]
 9132 002a E3B9     		cbnz	r3, .L1007
 9133              	.L1000:
 418:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 9134              		.loc 1 418 0
 9135 002c 2268     		ldr	r2, [r4]
 9136 002e 5368     		ldr	r3, [r2, #4]
 9137 0030 23F49043 		bic	r3, r3, #18432
 9138 0034 5360     		str	r3, [r2, #4]
 419:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9139              		.loc 1 419 0
 9140 0036 2268     		ldr	r2, [r4]
 9141 0038 9368     		ldr	r3, [r2, #8]
 9142 003a 23F02203 		bic	r3, r3, #34
 9143 003e 9360     		str	r3, [r2, #8]
 422:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9144              		.loc 1 422 0
 9145 0040 2268     		ldr	r2, [r4]
 9146 0042 9368     		ldr	r3, [r2, #8]
 9147 0044 43F00803 		orr	r3, r3, #8
 9148 0048 9360     		str	r3, [r2, #8]
 424:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9149              		.loc 1 424 0
 9150 004a 2268     		ldr	r2, [r4]
 9151 004c 1368     		ldr	r3, [r2]
 9152 004e 43F00103 		orr	r3, r3, #1
 9153 0052 1360     		str	r3, [r2]
 427:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 9154              		.loc 1 427 0
 9155 0054 2046     		mov	r0, r4
 9156 0056 FFF7FEFF 		bl	UART_CheckIdleState
 9157              	.LVL674:
 9158 005a 10BD     		pop	{r4, pc}
 9159              	.LVL675:
ARM GAS  /tmp/ccmyImrL.s 			page 258


 9160              	.L1006:
 382:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9161              		.loc 1 382 0
 9162 005c 80F87C30 		strb	r3, [r0, #124]
 396:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 9163              		.loc 1 396 0
 9164 0060 FFF7FEFF 		bl	HAL_UART_MspInit
 9165              	.LVL676:
 9166 0064 D3E7     		b	.L999
 9167              	.L1007:
 412:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 9168              		.loc 1 412 0
 9169 0066 2046     		mov	r0, r4
 9170 0068 FFF7FEFF 		bl	UART_AdvFeatureConfig
 9171              	.LVL677:
 9172 006c DEE7     		b	.L1000
 9173              	.LVL678:
 9174              	.L1001:
 9175              	.LCFI52:
 9176              		.cfi_def_cfa_offset 0
 9177              		.cfi_restore 4
 9178              		.cfi_restore 14
 373:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 9179              		.loc 1 373 0
 9180 006e 0120     		movs	r0, #1
 9181              	.LVL679:
 9182 0070 7047     		bx	lr
 9183              	.LVL680:
 9184              	.L998:
 9185              	.LCFI53:
 9186              		.cfi_def_cfa_offset 8
 9187              		.cfi_offset 4, -8
 9188              		.cfi_offset 14, -4
 428:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9189              		.loc 1 428 0
 9190 0072 10BD     		pop	{r4, pc}
 9191              		.cfi_endproc
 9192              	.LFE142:
 9194              		.section	.text.HAL_LIN_Init,"ax",%progbits
 9195              		.align	1
 9196              		.global	HAL_LIN_Init
 9197              		.syntax unified
 9198              		.thumb
 9199              		.thumb_func
 9200              		.fpu fpv5-d16
 9202              	HAL_LIN_Init:
 9203              	.LFB143:
 442:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 9204              		.loc 1 442 0
 9205              		.cfi_startproc
 9206              		@ args = 0, pretend = 0, frame = 0
 9207              		@ frame_needed = 0, uses_anonymous_args = 0
 9208              	.LVL681:
 444:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 9209              		.loc 1 444 0
 9210 0000 0028     		cmp	r0, #0
 9211 0002 43D0     		beq	.L1012
ARM GAS  /tmp/ccmyImrL.s 			page 259


 442:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 9212              		.loc 1 442 0
 9213 0004 38B5     		push	{r3, r4, r5, lr}
 9214              	.LCFI54:
 9215              		.cfi_def_cfa_offset 16
 9216              		.cfi_offset 3, -16
 9217              		.cfi_offset 4, -12
 9218              		.cfi_offset 5, -8
 9219              		.cfi_offset 14, -4
 9220 0006 0446     		mov	r4, r0
 455:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 9221              		.loc 1 455 0
 9222 0008 C369     		ldr	r3, [r0, #28]
 9223 000a B3F5004F 		cmp	r3, #32768
 9224 000e 3FD0     		beq	.L1013
 460:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 9225              		.loc 1 460 0
 9226 0010 8368     		ldr	r3, [r0, #8]
 9227 0012 002B     		cmp	r3, #0
 9228 0014 3ED1     		bne	.L1014
 9229 0016 0D46     		mov	r5, r1
 465:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 9230              		.loc 1 465 0
 9231 0018 D0F88030 		ldr	r3, [r0, #128]
 9232 001c 002B     		cmp	r3, #0
 9233 001e 2CD0     		beq	.L1019
 9234              	.LVL682:
 9235              	.L1010:
 486:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9236              		.loc 1 486 0
 9237 0020 2423     		movs	r3, #36
 9238 0022 C4F88030 		str	r3, [r4, #128]
 488:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9239              		.loc 1 488 0
 9240 0026 2268     		ldr	r2, [r4]
 9241 0028 1368     		ldr	r3, [r2]
 9242 002a 23F00103 		bic	r3, r3, #1
 9243 002e 1360     		str	r3, [r2]
 491:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 9244              		.loc 1 491 0
 9245 0030 2046     		mov	r0, r4
 9246 0032 FFF7FEFF 		bl	UART_SetConfig
 9247              	.LVL683:
 9248 0036 0128     		cmp	r0, #1
 9249 0038 2DD0     		beq	.L1009
 496:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 9250              		.loc 1 496 0
 9251 003a A36A     		ldr	r3, [r4, #40]
 9252 003c 13BB     		cbnz	r3, .L1020
 9253              	.L1011:
 504:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 9254              		.loc 1 504 0
 9255 003e 2268     		ldr	r2, [r4]
 9256 0040 5368     		ldr	r3, [r2, #4]
 9257 0042 23F40063 		bic	r3, r3, #2048
 9258 0046 5360     		str	r3, [r2, #4]
 505:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  /tmp/ccmyImrL.s 			page 260


 9259              		.loc 1 505 0
 9260 0048 2268     		ldr	r2, [r4]
 9261 004a 9368     		ldr	r3, [r2, #8]
 9262 004c 23F02A03 		bic	r3, r3, #42
 9263 0050 9360     		str	r3, [r2, #8]
 508:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9264              		.loc 1 508 0
 9265 0052 2268     		ldr	r2, [r4]
 9266 0054 5368     		ldr	r3, [r2, #4]
 9267 0056 43F48043 		orr	r3, r3, #16384
 9268 005a 5360     		str	r3, [r2, #4]
 511:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9269              		.loc 1 511 0
 9270 005c 2268     		ldr	r2, [r4]
 9271 005e 5368     		ldr	r3, [r2, #4]
 9272 0060 23F02003 		bic	r3, r3, #32
 9273 0064 2B43     		orrs	r3, r3, r5
 9274 0066 5360     		str	r3, [r2, #4]
 513:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9275              		.loc 1 513 0
 9276 0068 2268     		ldr	r2, [r4]
 9277 006a 1368     		ldr	r3, [r2]
 9278 006c 43F00103 		orr	r3, r3, #1
 9279 0070 1360     		str	r3, [r2]
 516:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 9280              		.loc 1 516 0
 9281 0072 2046     		mov	r0, r4
 9282 0074 FFF7FEFF 		bl	UART_CheckIdleState
 9283              	.LVL684:
 9284 0078 38BD     		pop	{r3, r4, r5, pc}
 9285              	.LVL685:
 9286              	.L1019:
 468:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9287              		.loc 1 468 0
 9288 007a 80F87C30 		strb	r3, [r0, #124]
 482:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 9289              		.loc 1 482 0
 9290 007e FFF7FEFF 		bl	HAL_UART_MspInit
 9291              	.LVL686:
 9292 0082 CDE7     		b	.L1010
 9293              	.L1020:
 498:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 9294              		.loc 1 498 0
 9295 0084 2046     		mov	r0, r4
 9296 0086 FFF7FEFF 		bl	UART_AdvFeatureConfig
 9297              	.LVL687:
 9298 008a D8E7     		b	.L1011
 9299              	.LVL688:
 9300              	.L1012:
 9301              	.LCFI55:
 9302              		.cfi_def_cfa_offset 0
 9303              		.cfi_restore 3
 9304              		.cfi_restore 4
 9305              		.cfi_restore 5
 9306              		.cfi_restore 14
 446:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 9307              		.loc 1 446 0
ARM GAS  /tmp/ccmyImrL.s 			page 261


 9308 008c 0120     		movs	r0, #1
 9309              	.LVL689:
 9310 008e 7047     		bx	lr
 9311              	.LVL690:
 9312              	.L1013:
 9313              	.LCFI56:
 9314              		.cfi_def_cfa_offset 16
 9315              		.cfi_offset 3, -16
 9316              		.cfi_offset 4, -12
 9317              		.cfi_offset 5, -8
 9318              		.cfi_offset 14, -4
 457:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 9319              		.loc 1 457 0
 9320 0090 0120     		movs	r0, #1
 9321              	.LVL691:
 9322 0092 38BD     		pop	{r3, r4, r5, pc}
 9323              	.LVL692:
 9324              	.L1014:
 462:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 9325              		.loc 1 462 0
 9326 0094 0120     		movs	r0, #1
 9327              	.LVL693:
 9328              	.L1009:
 517:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9329              		.loc 1 517 0
 9330 0096 38BD     		pop	{r3, r4, r5, pc}
 9331              		.cfi_endproc
 9332              	.LFE143:
 9334              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 9335              		.align	1
 9336              		.global	HAL_MultiProcessor_Init
 9337              		.syntax unified
 9338              		.thumb
 9339              		.thumb_func
 9340              		.fpu fpv5-d16
 9342              	HAL_MultiProcessor_Init:
 9343              	.LFB144:
 539:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 9344              		.loc 1 539 0
 9345              		.cfi_startproc
 9346              		@ args = 0, pretend = 0, frame = 0
 9347              		@ frame_needed = 0, uses_anonymous_args = 0
 9348              	.LVL694:
 541:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 9349              		.loc 1 541 0
 9350 0000 0028     		cmp	r0, #0
 9351 0002 42D0     		beq	.L1026
 539:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 9352              		.loc 1 539 0
 9353 0004 70B5     		push	{r4, r5, r6, lr}
 9354              	.LCFI57:
 9355              		.cfi_def_cfa_offset 16
 9356              		.cfi_offset 4, -16
 9357              		.cfi_offset 5, -12
 9358              		.cfi_offset 6, -8
 9359              		.cfi_offset 14, -4
 9360 0006 0446     		mov	r4, r0
ARM GAS  /tmp/ccmyImrL.s 			page 262


 9361 0008 1546     		mov	r5, r2
 9362 000a 0E46     		mov	r6, r1
 549:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 9363              		.loc 1 549 0
 9364 000c D0F88030 		ldr	r3, [r0, #128]
 9365 0010 53B3     		cbz	r3, .L1031
 9366              	.LVL695:
 9367              	.L1023:
 570:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9368              		.loc 1 570 0
 9369 0012 2423     		movs	r3, #36
 9370 0014 C4F88030 		str	r3, [r4, #128]
 572:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9371              		.loc 1 572 0
 9372 0018 2268     		ldr	r2, [r4]
 9373 001a 1368     		ldr	r3, [r2]
 9374 001c 23F00103 		bic	r3, r3, #1
 9375 0020 1360     		str	r3, [r2]
 575:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 9376              		.loc 1 575 0
 9377 0022 2046     		mov	r0, r4
 9378 0024 FFF7FEFF 		bl	UART_SetConfig
 9379              	.LVL696:
 9380 0028 0128     		cmp	r0, #1
 9381 002a 30D0     		beq	.L1022
 580:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 9382              		.loc 1 580 0
 9383 002c A36A     		ldr	r3, [r4, #40]
 9384 002e 03BB     		cbnz	r3, .L1032
 9385              	.L1024:
 588:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 9386              		.loc 1 588 0
 9387 0030 2268     		ldr	r2, [r4]
 9388 0032 5368     		ldr	r3, [r2, #4]
 9389 0034 23F49043 		bic	r3, r3, #18432
 9390 0038 5360     		str	r3, [r2, #4]
 589:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9391              		.loc 1 589 0
 9392 003a 2268     		ldr	r2, [r4]
 9393 003c 9368     		ldr	r3, [r2, #8]
 9394 003e 23F02A03 		bic	r3, r3, #42
 9395 0042 9360     		str	r3, [r2, #8]
 591:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 9396              		.loc 1 591 0
 9397 0044 B5F5006F 		cmp	r5, #2048
 9398 0048 17D0     		beq	.L1033
 9399              	.L1025:
 598:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9400              		.loc 1 598 0
 9401 004a 2368     		ldr	r3, [r4]
 9402 004c 1A68     		ldr	r2, [r3]
 9403 004e 22F40062 		bic	r2, r2, #2048
 9404 0052 1543     		orrs	r5, r5, r2
 9405              	.LVL697:
 9406 0054 1D60     		str	r5, [r3]
 600:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9407              		.loc 1 600 0
ARM GAS  /tmp/ccmyImrL.s 			page 263


 9408 0056 2268     		ldr	r2, [r4]
 9409 0058 1368     		ldr	r3, [r2]
 9410 005a 43F00103 		orr	r3, r3, #1
 9411 005e 1360     		str	r3, [r2]
 603:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 9412              		.loc 1 603 0
 9413 0060 2046     		mov	r0, r4
 9414 0062 FFF7FEFF 		bl	UART_CheckIdleState
 9415              	.LVL698:
 9416 0066 70BD     		pop	{r4, r5, r6, pc}
 9417              	.LVL699:
 9418              	.L1031:
 552:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9419              		.loc 1 552 0
 9420 0068 80F87C30 		strb	r3, [r0, #124]
 566:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 9421              		.loc 1 566 0
 9422 006c FFF7FEFF 		bl	HAL_UART_MspInit
 9423              	.LVL700:
 9424 0070 CFE7     		b	.L1023
 9425              	.L1032:
 582:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 9426              		.loc 1 582 0
 9427 0072 2046     		mov	r0, r4
 9428 0074 FFF7FEFF 		bl	UART_AdvFeatureConfig
 9429              	.LVL701:
 9430 0078 DAE7     		b	.L1024
 9431              	.L1033:
 594:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 9432              		.loc 1 594 0
 9433 007a 2368     		ldr	r3, [r4]
 9434 007c 5968     		ldr	r1, [r3, #4]
 9435 007e 21F07F41 		bic	r1, r1, #-16777216
 9436 0082 41EA0666 		orr	r6, r1, r6, lsl #24
 9437 0086 5E60     		str	r6, [r3, #4]
 9438 0088 DFE7     		b	.L1025
 9439              	.LVL702:
 9440              	.L1026:
 9441              	.LCFI58:
 9442              		.cfi_def_cfa_offset 0
 9443              		.cfi_restore 4
 9444              		.cfi_restore 5
 9445              		.cfi_restore 6
 9446              		.cfi_restore 14
 543:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 9447              		.loc 1 543 0
 9448 008a 0120     		movs	r0, #1
 9449              	.LVL703:
 9450 008c 7047     		bx	lr
 9451              	.LVL704:
 9452              	.L1022:
 9453              	.LCFI59:
 9454              		.cfi_def_cfa_offset 16
 9455              		.cfi_offset 4, -16
 9456              		.cfi_offset 5, -12
 9457              		.cfi_offset 6, -8
 9458              		.cfi_offset 14, -4
ARM GAS  /tmp/ccmyImrL.s 			page 264


 604:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9459              		.loc 1 604 0
 9460 008e 70BD     		pop	{r4, r5, r6, pc}
 9461              		.cfi_endproc
 9462              	.LFE144:
 9464              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 9465              		.align	1
 9466              		.global	HAL_MultiProcessor_EnableMuteMode
 9467              		.syntax unified
 9468              		.thumb
 9469              		.thumb_func
 9470              		.fpu fpv5-d16
 9472              	HAL_MultiProcessor_EnableMuteMode:
 9473              	.LFB175:
2653:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 9474              		.loc 1 2653 0
 9475              		.cfi_startproc
 9476              		@ args = 0, pretend = 0, frame = 0
 9477              		@ frame_needed = 0, uses_anonymous_args = 0
 9478              	.LVL705:
 9479 0000 08B5     		push	{r3, lr}
 9480              	.LCFI60:
 9481              		.cfi_def_cfa_offset 8
 9482              		.cfi_offset 3, -8
 9483              		.cfi_offset 14, -4
2654:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9484              		.loc 1 2654 0
 9485 0002 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 9486 0006 012B     		cmp	r3, #1
 9487 0008 01D1     		bne	.L1038
 9488 000a 0220     		movs	r0, #2
 9489              	.LVL706:
2664:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9490              		.loc 1 2664 0
 9491 000c 08BD     		pop	{r3, pc}
 9492              	.LVL707:
 9493              	.L1038:
2654:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9494              		.loc 1 2654 0 discriminator 2
 9495 000e 0123     		movs	r3, #1
 9496 0010 80F87C30 		strb	r3, [r0, #124]
2656:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9497              		.loc 1 2656 0 discriminator 2
 9498 0014 2423     		movs	r3, #36
 9499 0016 C0F88030 		str	r3, [r0, #128]
2659:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9500              		.loc 1 2659 0 discriminator 2
 9501 001a 0268     		ldr	r2, [r0]
 9502 001c 1368     		ldr	r3, [r2]
 9503 001e 43F40053 		orr	r3, r3, #8192
 9504 0022 1360     		str	r3, [r2]
2661:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9505              		.loc 1 2661 0 discriminator 2
 9506 0024 2023     		movs	r3, #32
 9507 0026 C0F88030 		str	r3, [r0, #128]
2663:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 9508              		.loc 1 2663 0 discriminator 2
ARM GAS  /tmp/ccmyImrL.s 			page 265


 9509 002a FFF7FEFF 		bl	UART_CheckIdleState
 9510              	.LVL708:
 9511 002e 08BD     		pop	{r3, pc}
 9512              		.cfi_endproc
 9513              	.LFE175:
 9515              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 9516              		.align	1
 9517              		.global	HAL_MultiProcessor_DisableMuteMode
 9518              		.syntax unified
 9519              		.thumb
 9520              		.thumb_func
 9521              		.fpu fpv5-d16
 9523              	HAL_MultiProcessor_DisableMuteMode:
 9524              	.LFB176:
2673:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 9525              		.loc 1 2673 0
 9526              		.cfi_startproc
 9527              		@ args = 0, pretend = 0, frame = 0
 9528              		@ frame_needed = 0, uses_anonymous_args = 0
 9529              	.LVL709:
 9530 0000 08B5     		push	{r3, lr}
 9531              	.LCFI61:
 9532              		.cfi_def_cfa_offset 8
 9533              		.cfi_offset 3, -8
 9534              		.cfi_offset 14, -4
2674:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9535              		.loc 1 2674 0
 9536 0002 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 9537 0006 012B     		cmp	r3, #1
 9538 0008 01D1     		bne	.L1043
 9539 000a 0220     		movs	r0, #2
 9540              	.LVL710:
2684:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9541              		.loc 1 2684 0
 9542 000c 08BD     		pop	{r3, pc}
 9543              	.LVL711:
 9544              	.L1043:
2674:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9545              		.loc 1 2674 0 discriminator 2
 9546 000e 0123     		movs	r3, #1
 9547 0010 80F87C30 		strb	r3, [r0, #124]
2676:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9548              		.loc 1 2676 0 discriminator 2
 9549 0014 2423     		movs	r3, #36
 9550 0016 C0F88030 		str	r3, [r0, #128]
2679:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9551              		.loc 1 2679 0 discriminator 2
 9552 001a 0268     		ldr	r2, [r0]
 9553 001c 1368     		ldr	r3, [r2]
 9554 001e 23F40053 		bic	r3, r3, #8192
 9555 0022 1360     		str	r3, [r2]
2681:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 9556              		.loc 1 2681 0 discriminator 2
 9557 0024 2023     		movs	r3, #32
 9558 0026 C0F88030 		str	r3, [r0, #128]
2683:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 9559              		.loc 1 2683 0 discriminator 2
ARM GAS  /tmp/ccmyImrL.s 			page 266


 9560 002a FFF7FEFF 		bl	UART_CheckIdleState
 9561              	.LVL712:
 9562 002e 08BD     		pop	{r3, pc}
 9563              		.cfi_endproc
 9564              	.LFE176:
 9566              		.text
 9567              	.Letext0:
 9568              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 9569              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 9570              		.file 4 "Libraries/CMSIS/Include/core_cm7.h"
 9571              		.file 5 "Libraries/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 9572              		.file 6 "Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 9573              		.file 7 "Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 9574              		.file 8 "/usr/include/newlib/sys/lock.h"
 9575              		.file 9 "/usr/include/newlib/sys/_types.h"
 9576              		.file 10 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 9577              		.file 11 "/usr/include/newlib/sys/reent.h"
 9578              		.file 12 "/usr/include/newlib/math.h"
 9579              		.file 13 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 9580              		.file 14 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc_ex.h"
 9581              		.file 15 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 9582              		.file 16 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 9583              		.file 17 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 9584              		.file 18 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 9585              		.file 19 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 9586              		.file 20 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart_ex.h"
ARM GAS  /tmp/ccmyImrL.s 			page 267


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_uart.c
     /tmp/ccmyImrL.s:17     .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/ccmyImrL.s:23     .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/ccmyImrL.s:50     .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/ccmyImrL.s:56     .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/ccmyImrL.s:85     .text.UART_EndRxTransfer:0000000000000020 $d
     /tmp/ccmyImrL.s:90     .text.UART_TxISR_8BIT:0000000000000000 $t
     /tmp/ccmyImrL.s:96     .text.UART_TxISR_8BIT:0000000000000000 UART_TxISR_8BIT
     /tmp/ccmyImrL.s:148    .text.UART_TxISR_16BIT:0000000000000000 $t
     /tmp/ccmyImrL.s:154    .text.UART_TxISR_16BIT:0000000000000000 UART_TxISR_16BIT
     /tmp/ccmyImrL.s:211    .text.UART_TxISR_8BIT_FIFOEN:0000000000000000 $t
     /tmp/ccmyImrL.s:217    .text.UART_TxISR_8BIT_FIFOEN:0000000000000000 UART_TxISR_8BIT_FIFOEN
     /tmp/ccmyImrL.s:290    .text.UART_TxISR_16BIT_FIFOEN:0000000000000000 $t
     /tmp/ccmyImrL.s:296    .text.UART_TxISR_16BIT_FIFOEN:0000000000000000 UART_TxISR_16BIT_FIFOEN
     /tmp/ccmyImrL.s:374    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccmyImrL.s:381    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccmyImrL.s:394    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccmyImrL.s:401    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccmyImrL.s:414    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccmyImrL.s:421    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccmyImrL.s:487    .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccmyImrL.s:494    .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccmyImrL.s:626    .text.HAL_UART_Transmit_IT:00000000000000a4 $d
     /tmp/ccmyImrL.s:634    .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccmyImrL.s:641    .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccmyImrL.s:841    .text.HAL_UART_Receive_IT:0000000000000114 $d
     /tmp/ccmyImrL.s:1957   .text.UART_RxISR_8BIT:0000000000000000 UART_RxISR_8BIT
     /tmp/ccmyImrL.s:2132   .text.UART_RxISR_8BIT_FIFOEN:0000000000000000 UART_RxISR_8BIT_FIFOEN
     /tmp/ccmyImrL.s:2268   .text.UART_RxISR_16BIT_FIFOEN:0000000000000000 UART_RxISR_16BIT_FIFOEN
     /tmp/ccmyImrL.s:2044   .text.UART_RxISR_16BIT:0000000000000000 UART_RxISR_16BIT
     /tmp/ccmyImrL.s:849    .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccmyImrL.s:856    .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccmyImrL.s:979    .text.HAL_UART_Transmit_DMA:000000000000009c $d
     /tmp/ccmyImrL.s:1797   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccmyImrL.s:1907   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccmyImrL.s:2533   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccmyImrL.s:986    .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccmyImrL.s:993    .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccmyImrL.s:1120   .text.HAL_UART_Receive_DMA:00000000000000a8 $d
     /tmp/ccmyImrL.s:2406   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccmyImrL.s:2483   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccmyImrL.s:1127   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccmyImrL.s:1134   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccmyImrL.s:1233   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccmyImrL.s:1240   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccmyImrL.s:1311   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccmyImrL.s:1318   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccmyImrL.s:1438   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/ccmyImrL.s:1445   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/ccmyImrL.s:1580   .text.HAL_UART_Abort:00000000000000c4 $d
     /tmp/ccmyImrL.s:1585   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/ccmyImrL.s:1592   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/ccmyImrL.s:1678   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/ccmyImrL.s:1685   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/ccmyImrL.s:1766   .text.HAL_UART_AbortReceive:000000000000006c $d
     /tmp/ccmyImrL.s:1771   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
ARM GAS  /tmp/ccmyImrL.s 			page 268


     /tmp/ccmyImrL.s:1778   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccmyImrL.s:1791   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccmyImrL.s:1844   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccmyImrL.s:1850   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccmyImrL.s:1881   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccmyImrL.s:1888   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccmyImrL.s:1901   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccmyImrL.s:1931   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccmyImrL.s:1938   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccmyImrL.s:1951   .text.UART_RxISR_8BIT:0000000000000000 $t
     /tmp/ccmyImrL.s:2038   .text.UART_RxISR_16BIT:0000000000000000 $t
     /tmp/ccmyImrL.s:2126   .text.UART_RxISR_8BIT_FIFOEN:0000000000000000 $t
     /tmp/ccmyImrL.s:2256   .text.UART_RxISR_8BIT_FIFOEN:00000000000000a4 $d
     /tmp/ccmyImrL.s:2262   .text.UART_RxISR_16BIT_FIFOEN:0000000000000000 $t
     /tmp/ccmyImrL.s:2394   .text.UART_RxISR_16BIT_FIFOEN:00000000000000a4 $d
     /tmp/ccmyImrL.s:2400   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccmyImrL.s:2457   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccmyImrL.s:2464   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccmyImrL.s:2477   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccmyImrL.s:2507   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccmyImrL.s:2514   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccmyImrL.s:2527   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccmyImrL.s:2609   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccmyImrL.s:2616   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccmyImrL.s:2949   .text.HAL_UART_IRQHandler:00000000000001d4 $d
     /tmp/ccmyImrL.s:2962   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccmyImrL.s:2956   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccmyImrL.s:2990   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccmyImrL.s:2997   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/ccmyImrL.s:3010   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/ccmyImrL.s:3017   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/ccmyImrL.s:3201   .text.HAL_UART_Abort_IT:00000000000000f0 $d
     /tmp/ccmyImrL.s:3279   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/ccmyImrL.s:3214   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/ccmyImrL.s:3208   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccmyImrL.s:3273   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccmyImrL.s:3346   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccmyImrL.s:3353   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccmyImrL.s:3366   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccmyImrL.s:3373   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/ccmyImrL.s:3472   .text.HAL_UART_AbortTransmit_IT:0000000000000080 $d
     /tmp/ccmyImrL.s:3483   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/ccmyImrL.s:3477   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccmyImrL.s:3525   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccmyImrL.s:3532   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccmyImrL.s:3545   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/ccmyImrL.s:3552   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/ccmyImrL.s:3653   .text.HAL_UART_AbortReceive_IT:0000000000000084 $d
     /tmp/ccmyImrL.s:3665   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/ccmyImrL.s:3659   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccmyImrL.s:3703   .text.HAL_UART_ReceiverTimeout_Config:0000000000000000 $t
     /tmp/ccmyImrL.s:3710   .text.HAL_UART_ReceiverTimeout_Config:0000000000000000 HAL_UART_ReceiverTimeout_Config
     /tmp/ccmyImrL.s:3734   .text.HAL_UART_ReceiverTimeout_Config:0000000000000014 $d
     /tmp/ccmyImrL.s:3739   .text.HAL_UART_EnableReceiverTimeout:0000000000000000 $t
     /tmp/ccmyImrL.s:3746   .text.HAL_UART_EnableReceiverTimeout:0000000000000000 HAL_UART_EnableReceiverTimeout
     /tmp/ccmyImrL.s:3809   .text.HAL_UART_EnableReceiverTimeout:0000000000000048 $d
     /tmp/ccmyImrL.s:3814   .text.HAL_UART_DisableReceiverTimeout:0000000000000000 $t
ARM GAS  /tmp/ccmyImrL.s 			page 269


     /tmp/ccmyImrL.s:3821   .text.HAL_UART_DisableReceiverTimeout:0000000000000000 HAL_UART_DisableReceiverTimeout
     /tmp/ccmyImrL.s:3884   .text.HAL_UART_DisableReceiverTimeout:0000000000000048 $d
     /tmp/ccmyImrL.s:3889   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccmyImrL.s:3896   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccmyImrL.s:3914   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccmyImrL.s:3921   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccmyImrL.s:3970   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccmyImrL.s:3977   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccmyImrL.s:4026   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccmyImrL.s:4033   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccmyImrL.s:4077   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccmyImrL.s:4084   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccmyImrL.s:4106   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccmyImrL.s:4113   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccmyImrL.s:4131   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccmyImrL.s:4138   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccmyImrL.s:4273   .text.UART_SetConfig:00000000000000c0 $d
     /tmp/ccmyImrL.s:4339   .text.UART_SetConfig:0000000000000142 $t
     /tmp/ccmyImrL.s:4349   .text.UART_SetConfig:0000000000000152 $d
     /tmp/ccmyImrL.s:4390   .text.UART_SetConfig:00000000000001a4 $t
     /tmp/ccmyImrL.s:4430   .text.UART_SetConfig:00000000000001cc $d
     /tmp/ccmyImrL.s:4436   .text.UART_SetConfig:00000000000001d8 $t
     /tmp/ccmyImrL.s:4476   .text.UART_SetConfig:0000000000000200 $d
     /tmp/ccmyImrL.s:4482   .text.UART_SetConfig:0000000000000206 $t
     /tmp/ccmyImrL.s:4522   .text.UART_SetConfig:000000000000022e $d
     /tmp/ccmyImrL.s:4528   .text.UART_SetConfig:0000000000000234 $t
     /tmp/ccmyImrL.s:4561   .text.UART_SetConfig:000000000000024c $d
     /tmp/ccmyImrL.s:4576   .text.UART_SetConfig:000000000000027c $t
     /tmp/ccmyImrL.s:4583   .text.UART_SetConfig:000000000000028c $d
     /tmp/ccmyImrL.s:4589   .text.UART_SetConfig:0000000000000292 $t
     /tmp/ccmyImrL.s:4629   .text.UART_SetConfig:00000000000002ba $d
     /tmp/ccmyImrL.s:4710   .text.UART_SetConfig:000000000000030c $d
     /tmp/ccmyImrL.s:4716   .text.UART_SetConfig:0000000000000312 $t
     /tmp/ccmyImrL.s:4756   .text.UART_SetConfig:000000000000033a $d
     /tmp/ccmyImrL.s:4762   .text.UART_SetConfig:0000000000000340 $t
     /tmp/ccmyImrL.s:4802   .text.UART_SetConfig:000000000000036a $d
     /tmp/ccmyImrL.s:4808   .text.UART_SetConfig:0000000000000370 $t
     /tmp/ccmyImrL.s:5052   .text.UART_SetConfig:00000000000004b8 $d
     /tmp/ccmyImrL.s:5054   .text.UART_SetConfig:00000000000004bc $t
     /tmp/ccmyImrL.s:5688   .text.UART_SetConfig:00000000000007f0 $d
     /tmp/ccmyImrL.s:5708   .text.UART_SetConfig:0000000000000834 $t
     /tmp/ccmyImrL.s:6260   .text.UART_SetConfig:0000000000000b68 $d
     /tmp/ccmyImrL.s:6279   .text.UART_SetConfig:0000000000000ba8 $t
     /tmp/ccmyImrL.s:6537   .text.UART_SetConfig:0000000000000ce6 $d
     /tmp/ccmyImrL.s:6602   .text.UART_SetConfig:0000000000000d68 $t
     /tmp/ccmyImrL.s:6766   .text.UART_SetConfig:0000000000000e48 $d
     /tmp/ccmyImrL.s:6784   .text.UART_SetConfig:0000000000000e8c $t
     /tmp/ccmyImrL.s:7491   .text.UART_SetConfig:0000000000001260 $d
     /tmp/ccmyImrL.s:7510   .text.UART_SetConfig:00000000000012a8 $t
     /tmp/ccmyImrL.s:8214   .text.UART_SetConfig:0000000000001660 $d
     /tmp/ccmyImrL.s:8235   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/ccmyImrL.s:8242   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/ccmyImrL.s:8364   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccmyImrL.s:8371   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccmyImrL.s:8482   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccmyImrL.s:8489   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccmyImrL.s:8662   .text.HAL_UART_Receive:0000000000000000 $t
ARM GAS  /tmp/ccmyImrL.s 			page 270


     /tmp/ccmyImrL.s:8669   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccmyImrL.s:8886   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/ccmyImrL.s:8893   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/ccmyImrL.s:8985   .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccmyImrL.s:8992   .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccmyImrL.s:9087   .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccmyImrL.s:9094   .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccmyImrL.s:9195   .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccmyImrL.s:9202   .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccmyImrL.s:9335   .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccmyImrL.s:9342   .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccmyImrL.s:9465   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/ccmyImrL.s:9472   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/ccmyImrL.s:9516   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/ccmyImrL.s:9523   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
                     .debug_frame:0000000000000010 $d
     /tmp/ccmyImrL.s:4670   .text.UART_SetConfig:00000000000002e3 $d
     /tmp/ccmyImrL.s:4670   .text.UART_SetConfig:00000000000002e4 $t

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
HAL_UARTEx_TxFifoEmptyCallback
HAL_UARTEx_RxFifoFullCallback
__aeabi_uldivmod
HAL_RCCEx_GetPLL2ClockFreq
HAL_RCCEx_GetD3PCLK1Freq
HAL_RCCEx_GetPLL3ClockFreq
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_GetTick
