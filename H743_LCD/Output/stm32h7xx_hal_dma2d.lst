ARM GAS  /tmp/ccl32WUA.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_dma2d.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.DMA2D_SetConfig,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	DMA2D_SetConfig:
  24              	.LFB170:
  25              		.file 1 "Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c"
   1:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
   2:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   ******************************************************************************
   3:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @file    stm32h7xx_hal_dma2d.c
   4:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @author  MCD Application Team
   5:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief   DMA2D HAL module driver.
   6:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          This file provides firmware functions to manage the following
   7:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          functionalities of the DMA2D peripheral:
   8:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *           + Initialization and de-initialization functions
   9:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *           + IO operation functions
  10:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *           + Peripheral Control functions
  11:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *           + Peripheral State and Errors functions
  12:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *
  13:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   @verbatim
  14:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   ==============================================================================
  15:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                         ##### How to use this driver #####
  16:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   ==============================================================================
  17:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     [..]
  18:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) Program the required configuration through the following parameters:
  19:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           the transfer mode, the output color mode and the output offset using
  20:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           HAL_DMA2D_Init() function.
  21:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  22:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) Program the required configuration through the following parameters:
  23:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           the input color mode, the input color, the input alpha value, the alpha mode,
  24:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           the red/blue swap mode, the inverted alpha mode and the input offset using
  25:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           HAL_DMA2D_ConfigLayer() function for foreground or/and background layer.
  26:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  27:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      *** Polling mode IO operation ***
  28:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      =================================
  29:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     [..]
  30:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****        (#) Configure pdata parameter (explained hereafter), destination and data length
  31:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****            and enable the transfer using HAL_DMA2D_Start().
  32:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****        (#) Wait for end of transfer using HAL_DMA2D_PollForTransfer(), at this stage
  33:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****            user can specify the value of timeout according to his end application.
ARM GAS  /tmp/ccl32WUA.s 			page 2


  34:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  35:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      *** Interrupt mode IO operation ***
  36:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      ===================================
  37:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      [..]
  38:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****        (#) Configure pdata parameter, destination and data length and enable
  39:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****            the transfer using HAL_DMA2D_Start_IT().
  40:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****        (#) Use HAL_DMA2D_IRQHandler() called under DMA2D_IRQHandler() interrupt subroutine.
  41:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****        (#) At the end of data transfer HAL_DMA2D_IRQHandler() function is executed and user can
  42:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****            add his own function by customization of function pointer XferCpltCallback (member
  43:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****            of DMA2D handle structure).
  44:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****        (#) In case of error, the HAL_DMA2D_IRQHandler() function calls the callback
  45:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****            XferErrorCallback.
  46:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  47:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****          -@-   In Register-to-Memory transfer mode, pdata parameter is the register
  48:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                color, in Memory-to-memory or Memory-to-Memory with pixel format
  49:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                conversion pdata is the source address.
  50:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  51:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****          -@-   Configure the foreground source address, the background source address,
  52:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                the destination and data length then Enable the transfer using
  53:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                HAL_DMA2D_BlendingStart() in polling mode and HAL_DMA2D_BlendingStart_IT()
  54:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                in interrupt mode.
  55:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  56:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****          -@-   HAL_DMA2D_BlendingStart() and HAL_DMA2D_BlendingStart_IT() functions
  57:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                are used if the memory to memory with blending transfer mode is selected.
  58:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  59:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) Optionally, configure and enable the CLUT using HAL_DMA2D_CLUTLoad() in polling
  60:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           mode or HAL_DMA2D_CLUTLoad_IT() in interrupt mode.
  61:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  62:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) Optionally, configure the line watermark in using the API HAL_DMA2D_ProgramLineEvent().
  63:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  64:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) Optionally, configure the dead time value in the AHB clock cycle inserted between two
  65:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           consecutive accesses on the AHB master port in using the API HAL_DMA2D_ConfigDeadTime()
  66:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           and enable/disable the functionality  with the APIs HAL_DMA2D_EnableDeadTime() or
  67:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           HAL_DMA2D_DisableDeadTime().
  68:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  69:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) The transfer can be suspended, resumed and aborted using the following
  70:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           functions: HAL_DMA2D_Suspend(), HAL_DMA2D_Resume(), HAL_DMA2D_Abort().
  71:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  72:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) The CLUT loading can be suspended, resumed and aborted using the following
  73:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           functions: HAL_DMA2D_CLUTLoading_Suspend(), HAL_DMA2D_CLUTLoading_Resume(),
  74:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           HAL_DMA2D_CLUTLoading_Abort().
  75:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  76:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) To control the DMA2D state, use the following function: HAL_DMA2D_GetState().
  77:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  78:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) To read the DMA2D error code, use the following function: HAL_DMA2D_GetError().
  79:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  80:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      *** DMA2D HAL driver macros list ***
  81:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      =============================================
  82:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      [..]
  83:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****        Below the list of most used macros in DMA2D HAL driver :
  84:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  85:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_ENABLE: Enable the DMA2D peripheral.
  86:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_GET_FLAG: Get the DMA2D pending flags.
  87:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_CLEAR_FLAG: Clear the DMA2D pending flags.
  88:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_ENABLE_IT: Enable the specified DMA2D interrupts.
  89:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_DISABLE_IT: Disable the specified DMA2D interrupts.
  90:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_GET_IT_SOURCE: Check whether the specified DMA2D interrupt is enabled or not.
ARM GAS  /tmp/ccl32WUA.s 			page 3


  91:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  92:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      *** Callback registration ***
  93:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      ===================================
  94:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      [..]
  95:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) The compilation define  USE_HAL_DMA2D_REGISTER_CALLBACKS when set to 1
  96:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           allows the user to configure dynamically the driver callbacks.
  97:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           Use function @ref HAL_DMA2D_RegisterCallback() to register a user callback.
  98:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  99:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) Function @ref HAL_DMA2D_RegisterCallback() allows to register following callbacks:
 100:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) XferCpltCallback : callback for transfer complete.
 101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) XferErrorCallback : callback for transfer error.
 102:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) LineEventCallback : callback for line event.
 103:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) CLUTLoadingCpltCallback : callback for CLUT loading completion.
 104:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) MspInitCallback    : DMA2D MspInit.
 105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) MspDeInitCallback  : DMA2D MspDeInit.
 106:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           This function takes as parameters the HAL peripheral handle, the Callback ID
 107:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           and a pointer to the user callback function.
 108:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 109:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) Use function @ref HAL_DMA2D_UnRegisterCallback() to reset a callback to the default
 110:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           weak (surcharged) function.
 111:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           @ref HAL_DMA2D_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 112:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           and the Callback ID.
 113:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           This function allows to reset following callbacks:
 114:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) XferCpltCallback : callback for transfer complete.
 115:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) XferErrorCallback : callback for transfer error.
 116:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) LineEventCallback : callback for line event.
 117:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) CLUTLoadingCpltCallback : callback for CLUT loading completion.
 118:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) MspInitCallback    : DMA2D MspInit.
 119:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) MspDeInitCallback  : DMA2D MspDeInit.
 120:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 121:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) By default, after the @ref HAL_DMA2D_Init and if the state is HAL_DMA2D_STATE_RESET
 122:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           all callbacks are reset to the corresponding legacy weak (surcharged) functions:
 123:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           examples @ref HAL_DMA2D_LineEventCallback(), @ref HAL_DMA2D_CLUTLoadingCpltCallback()
 124:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           Exception done for MspInit and MspDeInit callbacks that are respectively
 125:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           reset to the legacy weak (surcharged) functions in the @ref HAL_DMA2D_Init
 126:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           and @ref HAL_DMA2D_DeInit only when these callbacks are null (not registered beforehand)
 127:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           If not, MspInit or MspDeInit are not null, the @ref HAL_DMA2D_Init and @ref HAL_DMA2D_DeI
 128:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 129:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 130:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           Exception as well for Transfer Completion and Transfer Error callbacks that are not defin
 131:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           as weak (surcharged) functions. They must be defined by the user to be resorted to.
 132:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 133:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           Callbacks can be registered/unregistered in READY state only.
 134:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           Exception done for MspInit/MspDeInit callbacks that can be registered/unregistered
 135:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           in READY or RESET state, thus registered (user) MspInit/DeInit callbacks can be used
 136:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           during the Init/DeInit.
 137:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           In that case first register the MspInit/MspDeInit user callbacks
 138:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           using @ref HAL_DMA2D_RegisterCallback before calling @ref HAL_DMA2D_DeInit
 139:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           or @ref HAL_DMA2D_Init function.
 140:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 141:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           When The compilation define USE_HAL_DMA2D_REGISTER_CALLBACKS is set to 0 or
 142:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           not defined, the callback registering feature is not available
 143:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           and weak (surcharged) callbacks are used.
 144:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 145:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      [..]
 146:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (@) You can refer to the DMA2D HAL driver header file for more useful macros
 147:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
ARM GAS  /tmp/ccl32WUA.s 			page 4


 148:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   @endverbatim
 149:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   ******************************************************************************
 150:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @attention
 151:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *
 152:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 153:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * All rights reserved.</center></h2>
 154:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *
 155:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 156:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * the "License"; You may not use this file except in compliance with the
 157:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * License. You may obtain a copy of the License at:
 158:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                        opensource.org/licenses/BSD-3-Clause
 159:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *
 160:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   ******************************************************************************
 161:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 162:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 163:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /* Includes ------------------------------------------------------------------*/
 164:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #include "stm32h7xx_hal.h"
 165:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 166:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #ifdef HAL_DMA2D_MODULE_ENABLED
 167:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #if defined (DMA2D)
 168:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 169:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @addtogroup STM32H7xx_HAL_Driver
 170:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
 171:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 172:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 173:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @defgroup DMA2D  DMA2D
 174:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief DMA2D HAL module driver
 175:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
 176:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 177:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 178:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /* Private types -------------------------------------------------------------*/
 179:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /* Private define ------------------------------------------------------------*/
 180:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @defgroup DMA2D_Private_Constants DMA2D Private Constants
 181:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
 182:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 183:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 184:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @defgroup DMA2D_TimeOut DMA2D Time Out
 185:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
 186:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 187:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #define DMA2D_TIMEOUT_ABORT           (1000U)  /*!<  1s  */
 188:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #define DMA2D_TIMEOUT_SUSPEND         (1000U)  /*!<  1s  */
 189:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 190:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @}
 191:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 192:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 193:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 194:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @}
 195:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 196:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 197:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /* Private variables ---------------------------------------------------------*/
 198:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /* Private constants ---------------------------------------------------------*/
 199:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /* Private macro -------------------------------------------------------------*/
 200:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /* Private function prototypes -----------------------------------------------*/
 201:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @addtogroup DMA2D_Private_Functions DMA2D Private Functions
 202:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
 203:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 204:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint3
ARM GAS  /tmp/ccl32WUA.s 			page 5


 205:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 206:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @}
 207:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 208:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 209:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /* Private functions ---------------------------------------------------------*/
 210:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /* Exported functions --------------------------------------------------------*/
 211:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @defgroup DMA2D_Exported_Functions DMA2D Exported Functions
 212:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
 213:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 214:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 215:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @defgroup DMA2D_Exported_Functions_Group1 Initialization and de-initialization functions
 216:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  *  @brief   Initialization and Configuration functions
 217:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  *
 218:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** @verbatim
 219:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  ===============================================================================
 220:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                 ##### Initialization and Configuration functions #####
 221:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  ===============================================================================
 222:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     [..]  This section provides functions allowing to:
 223:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Initialize and configure the DMA2D
 224:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) De-initialize the DMA2D
 225:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 226:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** @endverbatim
 227:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
 228:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 229:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 230:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 231:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Initialize the DMA2D according to the specified
 232:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *         parameters in the DMA2D_InitTypeDef and create the associated handle.
 233:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
 234:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 235:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
 236:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 237:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
 238:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 239:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the DMA2D peripheral state */
 240:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(hdma2d == NULL)
 241:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 242:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      return HAL_ERROR;
 243:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 244:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 245:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 246:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_ALL_INSTANCE(hdma2d->Instance));
 247:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_MODE(hdma2d->Init.Mode));
 248:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CMODE(hdma2d->Init.ColorMode));
 249:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_OFFSET(hdma2d->Init.OutputOffset));
 250:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_ALPHA_INVERTED(hdma2d->Init.AlphaInverted));
 251:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_RB_SWAP(hdma2d->Init.RedBlueSwap));
 252:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 253:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
 254:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 255:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 256:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Reset Callback pointers in HAL_DMA2D_STATE_RESET only */
 257:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->LineEventCallback       = HAL_DMA2D_LineEventCallback;
 258:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->CLUTLoadingCpltCallback = HAL_DMA2D_CLUTLoadingCpltCallback;
 259:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if(hdma2d->MspInitCallback == NULL)
 260:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 261:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->MspInitCallback = HAL_DMA2D_MspInit;
ARM GAS  /tmp/ccl32WUA.s 			page 6


 262:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 263:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 264:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Init the low level hardware */
 265:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->MspInitCallback(hdma2d);
 266:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 267:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #else
 268:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 269:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 270:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Allocate lock resource and initialize it */
 271:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->Lock = HAL_UNLOCKED;
 272:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Init the low level hardware */
 273:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     HAL_DMA2D_MspInit(hdma2d);
 274:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 275:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */
 276:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 277:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 278:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 279:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 280:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* DMA2D CR register configuration -------------------------------------------*/
 281:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 282:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 283:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* DMA2D OPFCCR register configuration ---------------------------------------*/
 284:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 285:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 286:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* DMA2D OOR register configuration ------------------------------------------*/
 287:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 288:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
 289:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->OPFCCR,(DMA2D_OPFCCR_AI|DMA2D_OPFCCR_RBS), ((hdma2d->Init.AlphaInver
 290:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 291:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 292:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Update error code */
 293:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 294:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 295:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Initialize the DMA2D state*/
 296:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State  = HAL_DMA2D_STATE_READY;
 297:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 298:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 299:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 300:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 301:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 302:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Deinitializes the DMA2D peripheral registers to their default reset
 303:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *         values.
 304:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
 305:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 306:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval None
 307:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 308:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 309:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_DeInit(DMA2D_HandleTypeDef *hdma2d)
 310:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 311:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 312:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the DMA2D peripheral state */
 313:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(hdma2d == NULL)
 314:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 315:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      return HAL_ERROR;
 316:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 317:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 318:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Before aborting any DMA2D transfer or CLUT loading, check
ARM GAS  /tmp/ccl32WUA.s 			page 7


 319:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      first whether or not DMA2D clock is enabled */
 320:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (__HAL_RCC_DMA2D_IS_CLK_ENABLED())
 321:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 322:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Abort DMA2D transfer if any */
 323:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START)
 324:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 325:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if (HAL_DMA2D_Abort(hdma2d) != HAL_OK)
 326:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 327:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Issue when aborting DMA2D transfer */
 328:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         return HAL_ERROR;
 329:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
 330:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 331:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     else
 332:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 333:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Abort background CLUT loading if any */
 334:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
 335:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 336:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 0U) != HAL_OK)
 337:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 338:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           /* Issue when aborting background CLUT loading */
 339:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           return HAL_ERROR;
 340:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
 341:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
 342:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       else
 343:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 344:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Abort foreground CLUT loading if any */
 345:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
 346:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 347:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 348:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           {
 349:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             /* Issue when aborting foreground CLUT loading */
 350:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             return HAL_ERROR;
 351:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           }
 352:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
 353:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
 354:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 355:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 356:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 357:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Reset DMA2D control registers*/
 358:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->CR       =    0U;
 359:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->IFCR     = 0x3FU;
 360:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->FGOR     =    0U;
 361:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->BGOR     =    0U;
 362:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->FGPFCCR  =    0U;
 363:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->BGPFCCR  =    0U;
 364:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->OPFCCR   =    0U;
 365:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 366:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
 367:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 368:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if(hdma2d->MspDeInitCallback == NULL)
 369:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 370:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->MspDeInitCallback = HAL_DMA2D_MspDeInit;
 371:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 372:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 373:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* DeInit the low level hardware */
 374:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->MspDeInitCallback(hdma2d);
 375:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
ARM GAS  /tmp/ccl32WUA.s 			page 8


 376:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #else
 377:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Carry on with de-initialization of low level hardware */
 378:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   HAL_DMA2D_MspDeInit(hdma2d);
 379:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */
 380:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 381:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Update error code */
 382:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 383:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 384:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Initialize the DMA2D state*/
 385:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State  = HAL_DMA2D_STATE_RESET;
 386:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 387:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Release Lock */
 388:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 389:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 390:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 391:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 392:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 393:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 394:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Initializes the DMA2D MSP.
 395:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
 396:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 397:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval None
 398:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 399:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** __weak void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
 400:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 401:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
 402:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   UNUSED(hdma2d);
 403:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 404:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* NOTE : This function should not be modified; when the callback is needed,
 405:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             the HAL_DMA2D_MspInit can be implemented in the user file.
 406:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****    */
 407:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 408:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 409:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 410:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  DeInitializes the DMA2D MSP.
 411:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
 412:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 413:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval None
 414:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 415:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** __weak void HAL_DMA2D_MspDeInit(DMA2D_HandleTypeDef* hdma2d)
 416:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 417:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
 418:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   UNUSED(hdma2d);
 419:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 420:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* NOTE : This function should not be modified; when the callback is needed,
 421:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             the HAL_DMA2D_MspDeInit can be implemented in the user file.
 422:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****    */
 423:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 424:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 425:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
 426:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 427:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Register a User DMA2D Callback
 428:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *         To be used instead of the weak (surcharged) predefined callback
 429:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param hdma2d DMA2D handle
 430:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param CallbackID ID of the callback to be registered
 431:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *        This parameter can be one of the following values:
 432:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_TRANSFERCOMPLETE_CB_ID DMA2D transfer complete Callback ID
ARM GAS  /tmp/ccl32WUA.s 			page 9


 433:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_TRANSFERERROR_CB_ID DMA2D transfer error Callback ID
 434:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_LINEEVENT_CB_ID DMA2D line event Callback ID
 435:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_CLUTLOADINGCPLT_CB_ID DMA2D CLUT loading completion Callback ID
 436:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_MSPINIT_CB_ID DMA2D MspInit callback ID
 437:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_MSPDEINIT_CB_ID DMA2D MspDeInit callback ID
 438:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param pCallback pointer to the Callback function
 439:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @note No weak predefined callbacks are defined for HAL_DMA2D_TRANSFERCOMPLETE_CB_ID or HAL_DMA2
 440:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval status
 441:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 442:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_RegisterCallback(DMA2D_HandleTypeDef *hdma2d, HAL_DMA2D_CallbackIDTypeD
 443:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 444:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   HAL_StatusTypeDef status = HAL_OK;
 445:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 446:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(pCallback == NULL)
 447:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 448:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Update the error code */
 449:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 450:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     return HAL_ERROR;
 451:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 452:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
 453:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 454:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 455:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(HAL_DMA2D_STATE_READY == hdma2d->State)
 456:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 457:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     switch (CallbackID)
 458:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 459:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_TRANSFERCOMPLETE_CB_ID :
 460:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->XferCpltCallback = pCallback;
 461:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 462:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 463:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_TRANSFERERROR_CB_ID :
 464:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->XferErrorCallback = pCallback;
 465:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 466:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 467:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_LINEEVENT_CB_ID :
 468:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->LineEventCallback = pCallback;
 469:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 470:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 471:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_CLUTLOADINGCPLT_CB_ID :
 472:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->CLUTLoadingCpltCallback = pCallback;
 473:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 474:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 475:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_MSPINIT_CB_ID :
 476:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->MspInitCallback = pCallback;
 477:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 478:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 479:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_MSPDEINIT_CB_ID :
 480:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->MspDeInitCallback = pCallback;
 481:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 482:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 483:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     default :
 484:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      /* Update the error code */
 485:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 486:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      /* update return status */
 487:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       status =  HAL_ERROR;
 488:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 489:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
ARM GAS  /tmp/ccl32WUA.s 			page 10


 490:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 491:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else if(HAL_DMA2D_STATE_RESET == hdma2d->State)
 492:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 493:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     switch (CallbackID)
 494:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 495:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_MSPINIT_CB_ID :
 496:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->MspInitCallback = pCallback;
 497:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 498:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 499:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_MSPDEINIT_CB_ID :
 500:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->MspDeInitCallback = pCallback;
 501:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 502:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 503:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     default :
 504:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      /* Update the error code */
 505:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 506:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      /* update return status */
 507:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       status =  HAL_ERROR;
 508:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 509:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 510:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 511:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
 512:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 513:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Update the error code */
 514:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 515:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      /* update return status */
 516:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       status =  HAL_ERROR;
 517:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 518:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 519:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Release Lock */
 520:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 521:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return status;
 522:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 523:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 524:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 525:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Unregister a DMA2D Callback
 526:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *         DMA2D Callback is redirected to the weak (surcharged) predefined callback
 527:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param hdma2d DMA2D handle
 528:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param CallbackID ID of the callback to be unregistered
 529:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *        This parameter can be one of the following values:
 530:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_TRANSFERCOMPLETE_CB_ID DMA2D transfer complete Callback ID
 531:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_TRANSFERERROR_CB_ID DMA2D transfer error Callback ID
 532:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_LINEEVENT_CB_ID DMA2D line event Callback ID
 533:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_CLUTLOADINGCPLT_CB_ID DMA2D CLUT loading completion Callback ID
 534:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_MSPINIT_CB_ID DMA2D MspInit callback ID
 535:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_MSPDEINIT_CB_ID DMA2D MspDeInit callback ID
 536:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @note No weak predefined callbacks are defined for HAL_DMA2D_TRANSFERCOMPLETE_CB_ID or HAL_DMA2
 537:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval status
 538:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 539:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_UnRegisterCallback(DMA2D_HandleTypeDef *hdma2d, HAL_DMA2D_CallbackIDTyp
 540:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 541:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef status = HAL_OK;
 542:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 543:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
 544:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 545:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 546:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(HAL_DMA2D_STATE_READY == hdma2d->State)
ARM GAS  /tmp/ccl32WUA.s 			page 11


 547:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 548:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     switch (CallbackID)
 549:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 550:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_TRANSFERCOMPLETE_CB_ID :
 551:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->XferCpltCallback = NULL;
 552:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 553:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 554:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_TRANSFERERROR_CB_ID :
 555:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->XferErrorCallback = NULL;
 556:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 557:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 558:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_LINEEVENT_CB_ID :
 559:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->LineEventCallback = HAL_DMA2D_LineEventCallback;
 560:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 561:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 562:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_CLUTLOADINGCPLT_CB_ID :
 563:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->CLUTLoadingCpltCallback = HAL_DMA2D_CLUTLoadingCpltCallback;
 564:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 565:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 566:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_MSPINIT_CB_ID :
 567:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->MspInitCallback = HAL_DMA2D_MspInit; /* Legacy weak (surcharged) Msp Init */
 568:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 569:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 570:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_MSPDEINIT_CB_ID :
 571:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->MspDeInitCallback = HAL_DMA2D_MspDeInit; /* Legacy weak (surcharged) Msp DeInit */
 572:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 573:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 574:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     default :
 575:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      /* Update the error code */
 576:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 577:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      /* update return status */
 578:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       status =  HAL_ERROR;
 579:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 580:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 581:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 582:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else if(HAL_DMA2D_STATE_RESET == hdma2d->State)
 583:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 584:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     switch (CallbackID)
 585:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 586:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_MSPINIT_CB_ID :
 587:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->MspInitCallback = HAL_DMA2D_MspInit;   /* Legacy weak (surcharged) Msp Init */
 588:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 589:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 590:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_MSPDEINIT_CB_ID :
 591:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->MspDeInitCallback = HAL_DMA2D_MspDeInit;  /* Legacy weak (surcharged) Msp DeInit */
 592:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 593:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 594:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     default :
 595:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      /* Update the error code */
 596:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 597:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      /* update return status */
 598:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       status =  HAL_ERROR;
 599:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 600:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 601:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 602:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
 603:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
ARM GAS  /tmp/ccl32WUA.s 			page 12


 604:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      /* Update the error code */
 605:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 606:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      /* update return status */
 607:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       status =  HAL_ERROR;
 608:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 609:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 610:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Release Lock */
 611:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 612:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return status;
 613:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 614:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
 615:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 616:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 617:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @}
 618:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 619:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 620:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 621:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @defgroup DMA2D_Exported_Functions_Group2 IO operation functions
 622:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  *  @brief   IO operation functions
 623:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  *
 624:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** @verbatim
 625:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  ===============================================================================
 626:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                       #####  IO operation functions  #####
 627:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  ===============================================================================
 628:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     [..]  This section provides functions allowing to:
 629:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure the pdata, destination address and data size then
 630:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           start the DMA2D transfer.
 631:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure the source for foreground and background, destination address
 632:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           and data size then start a MultiBuffer DMA2D transfer.
 633:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure the pdata, destination address and data size then
 634:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           start the DMA2D transfer with interrupt.
 635:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure the source for foreground and background, destination address
 636:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           and data size then start a MultiBuffer DMA2D transfer with interrupt.
 637:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Abort DMA2D transfer.
 638:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Suspend DMA2D transfer.
 639:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Resume DMA2D transfer.
 640:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Enable CLUT transfer.
 641:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure CLUT loading then start transfer in polling mode.
 642:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure CLUT loading then start transfer in interrupt mode.
 643:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Abort DMA2D CLUT loading.
 644:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Suspend DMA2D CLUT loading.
 645:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Resume DMA2D CLUT loading.
 646:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Poll for transfer complete.
 647:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) handle DMA2D interrupt request.
 648:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Transfer watermark callback.
 649:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) CLUT Transfer Complete callback.
 650:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 651:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 652:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** @endverbatim
 653:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
 654:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 655:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 656:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 657:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Start the DMA2D Transfer.
 658:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d     Pointer to a DMA2D_HandleTypeDef structure that contains
 659:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     the configuration information for the DMA2D.
 660:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  pdata      Configure the source memory Buffer address if
ARM GAS  /tmp/ccl32WUA.s 			page 13


 661:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     Memory-to-Memory or Memory-to-Memory with pixel format
 662:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     conversion mode is selected, or configure
 663:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     the color value if Register-to-Memory mode is selected.
 664:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  DstAddress The destination memory Buffer address.
 665:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Width      The width of data to be transferred from source to destination (expressed in
 666:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Height     The height of data to be transferred from source to destination (expressed i
 667:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
 668:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 669:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Start(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress,
 670:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 671:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 672:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LINE(Height));
 673:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_PIXEL(Width));
 674:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 675:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
 676:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 677:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 678:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 679:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 680:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 681:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the source, destination address and the data size */
 682:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 683:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 684:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Enable the Peripheral */
 685:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE(hdma2d);
 686:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 687:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 688:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 689:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 690:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 691:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Start the DMA2D Transfer with interrupt enabled.
 692:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d     Pointer to a DMA2D_HandleTypeDef structure that contains
 693:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     the configuration information for the DMA2D.
 694:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  pdata      Configure the source memory Buffer address if
 695:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     the Memory-to-Memory or Memory-to-Memory with pixel format
 696:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     conversion mode is selected, or configure
 697:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     the color value if Register-to-Memory mode is selected.
 698:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  DstAddress The destination memory Buffer address.
 699:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Width      The width of data to be transferred from source to destination (expressed in
 700:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Height     The height of data to be transferred from source to destination (expressed i
 701:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
 702:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 703:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Start_IT(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddre
 704:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 705:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 706:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LINE(Height));
 707:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_PIXEL(Width));
 708:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 709:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
 710:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 711:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 712:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 713:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 714:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 715:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the source, destination address and the data size */
 716:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 717:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
ARM GAS  /tmp/ccl32WUA.s 			page 14


 718:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Enable the transfer complete, transfer error and configuration error interrupts */
 719:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 720:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 721:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Enable the Peripheral */
 722:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE(hdma2d);
 723:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 724:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 725:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 726:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 727:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 728:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Start the multi-source DMA2D Transfer.
 729:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d      Pointer to a DMA2D_HandleTypeDef structure that contains
 730:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                      the configuration information for the DMA2D.
 731:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  SrcAddress1 The source memory Buffer address for the foreground layer.
 732:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  SrcAddress2 The source memory Buffer address for the background layer.
 733:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  DstAddress  The destination memory Buffer address.
 734:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Width       The width of data to be transferred from source to destination (expressed i
 735:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Height      The height of data to be transferred from source to destination (expressed 
 736:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
 737:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 738:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_BlendingStart(DMA2D_HandleTypeDef *hdma2d, uint32_t SrcAddress1, uint32
 739:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 740:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 741:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LINE(Height));
 742:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_PIXEL(Width));
 743:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 744:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
 745:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 746:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 747:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 748:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 749:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 750:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure DMA2D Stream source2 address */
 751:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 752:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 753:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the source, destination address and the data size */
 754:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 755:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 756:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Enable the Peripheral */
 757:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE(hdma2d);
 758:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 759:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 760:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 761:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 762:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 763:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Start the multi-source DMA2D Transfer with interrupt enabled.
 764:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d     Pointer to a DMA2D_HandleTypeDef structure that contains
 765:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     the configuration information for the DMA2D.
 766:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  SrcAddress1 The source memory Buffer address for the foreground layer.
 767:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  SrcAddress2 The source memory Buffer address for the background layer.
 768:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  DstAddress  The destination memory Buffer address.
 769:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Width       The width of data to be transferred from source to destination (expressed i
 770:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Height      The height of data to be transferred from source to destination (expressed 
 771:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
 772:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 773:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_BlendingStart_IT(DMA2D_HandleTypeDef *hdma2d, uint32_t SrcAddress1, uin
 774:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
ARM GAS  /tmp/ccl32WUA.s 			page 15


 775:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 776:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LINE(Height));
 777:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_PIXEL(Width));
 778:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 779:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
 780:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 781:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 782:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 783:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 784:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 785:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure DMA2D Stream source2 address */
 786:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 787:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 788:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the source, destination address and the data size */
 789:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 790:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 791:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Enable the transfer complete, transfer error and configuration error interrupts */
 792:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 793:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 794:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Enable the Peripheral */
 795:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE(hdma2d);
 796:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 797:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 798:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 799:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 800:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 801:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Abort the DMA2D Transfer.
 802:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d  pointer to a DMA2D_HandleTypeDef structure that contains
 803:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                  the configuration information for the DMA2D.
 804:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
 805:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 806:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Abort(DMA2D_HandleTypeDef *hdma2d)
 807:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 808:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tickstart;
 809:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 810:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Abort the DMA2D transfer */
 811:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* START bit is reset to make sure not to set it again, in the event the HW clears it
 812:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      between the register read and the register write by the CPU (writing 0 has no
 813:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      effect on START bitvalue) */
 814:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 815:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 816:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Get tick */
 817:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   tickstart = HAL_GetTick();
 818:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 819:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check if the DMA2D is effectively disabled */
 820:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 821:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 822:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 823:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 824:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Update error code */
 825:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 826:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 827:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Change the DMA2D state */
 828:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 829:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 830:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Process Unlocked */
 831:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
ARM GAS  /tmp/ccl32WUA.s 			page 16


 832:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 833:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       return HAL_TIMEOUT;
 834:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 835:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 836:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 837:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Disable the Transfer Complete, Transfer Error and Configuration Error interrupts */
 838:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 839:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 840:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change the DMA2D state*/
 841:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
 842:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 843:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Unlocked */
 844:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 845:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 846:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 847:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 848:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 849:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 850:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Suspend the DMA2D Transfer.
 851:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
 852:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 853:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
 854:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 855:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Suspend(DMA2D_HandleTypeDef *hdma2d)
 856:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 857:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tickstart;
 858:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 859:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Suspend the DMA2D transfer */
 860:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* START bit is reset to make sure not to set it again, in the event the HW clears it
 861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      between the register read and the register write by the CPU (writing 0 has no
 862:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      effect on START bitvalue). */
 863:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_SUSP|DMA2D_CR_START, DMA2D_CR_SUSP);
 864:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 865:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Get tick */
 866:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   tickstart = HAL_GetTick();
 867:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 868:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check if the DMA2D is effectively suspended */
 869:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   while ((hdma2d->Instance->CR & (DMA2D_CR_SUSP | DMA2D_CR_START)) == DMA2D_CR_START)
 870:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 871:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_SUSPEND)
 872:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 873:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Update error code */
 874:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 875:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 876:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Change the DMA2D state */
 877:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 878:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 879:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       return HAL_TIMEOUT;
 880:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 881:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 882:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 883:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****    /* Check whether or not a transfer is actually suspended and change the DMA2D state accordingly 
 884:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 885:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 886:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->State = HAL_DMA2D_STATE_SUSPEND;
 887:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 888:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
ARM GAS  /tmp/ccl32WUA.s 			page 17


 889:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 890:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Make sure SUSP bit is cleared since it is meaningless
 891:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****        when no tranfer is on-going */
 892:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     CLEAR_BIT(hdma2d->Instance->CR, DMA2D_CR_SUSP);
 893:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 894:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 895:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 896:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 897:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 898:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 899:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Resume the DMA2D Transfer.
 900:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
 901:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 902:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
 903:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 904:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Resume(DMA2D_HandleTypeDef *hdma2d)
 905:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 906:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the SUSP and START bits */
 907:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if((hdma2d->Instance->CR & (DMA2D_CR_SUSP | DMA2D_CR_START)) == (DMA2D_CR_SUSP | DMA2D_CR_START))
 908:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 909:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Ongoing transfer is suspended: change the DMA2D state before resuming */
 910:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->State = HAL_DMA2D_STATE_BUSY;
 911:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 912:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 913:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Resume the DMA2D transfer */
 914:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* START bit is reset to make sure not to set it again, in the event the HW clears it
 915:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      between the register read and the register write by the CPU (writing 0 has no
 916:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      effect on START bitvalue). */
 917:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   CLEAR_BIT(hdma2d->Instance->CR, (DMA2D_CR_SUSP|DMA2D_CR_START));
 918:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 919:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 920:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 921:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 923:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 924:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Enable the DMA2D CLUT Transfer.
 925:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d   Pointer to a DMA2D_HandleTypeDef structure that contains
 926:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the DMA2D.
 927:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
 928:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
 929:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
 930:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
 931:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 932:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_EnableCLUT(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
 933:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 934:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 935:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));
 936:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 937:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
 938:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 939:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 940:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 941:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 942:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 943:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 944:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 945:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the background CLUT loading */
ARM GAS  /tmp/ccl32WUA.s 			page 18


 946:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->BGPFCCR, DMA2D_BGPFCCR_START);
 947:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
 949:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 950:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the foreground CLUT loading */
 951:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->FGPFCCR, DMA2D_FGPFCCR_START);
 952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 953:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 954:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 956:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 957:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 958:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 959:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Start DMA2D CLUT Loading.
 960:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d   Pointer to a DMA2D_HandleTypeDef structure that contains
 961:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the DMA2D.
 962:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  CLUTCfg  Pointer to a DMA2D_CLUTCfgTypeDef structure that contains
 963:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the color look up table.
 964:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
 965:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
 966:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
 967:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @note Invoking this API is similar to calling HAL_DMA2D_ConfigCLUT() then HAL_DMA2D_EnableCLUT(
 968:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
 969:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 970:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTLoad(DMA2D_HandleTypeDef *hdma2d, DMA2D_CLUTCfgTypeDef CLUTCfg, uin
 971:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 972:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 973:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));
 974:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_CM(CLUTCfg.CLUTColorMode));
 975:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_SIZE(CLUTCfg.Size));
 976:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 977:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
 978:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 979:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 980:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 981:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 982:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 983:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the CLUT of the background DMA2D layer */
 984:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 985:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 986:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write background CLUT memory address */
 987:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGCMAR, (uint32_t)CLUTCfg.pCLUT);
 988:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 989:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write background CLUT size and CLUT color mode */
 990:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->BGPFCCR, (DMA2D_BGPFCCR_CS | DMA2D_BGPFCCR_CCM),
 991:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_BGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_BGPFCCR_CCM_P
 992:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 993:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the CLUT loading for the background */
 994:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->BGPFCCR, DMA2D_BGPFCCR_START);
 995:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 996:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the CLUT of the foreground DMA2D layer */
 997:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
 998:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 999:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write foreground CLUT memory address */
1000:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGCMAR, (uint32_t)CLUTCfg.pCLUT);
1001:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1002:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write foreground CLUT size and CLUT color mode */
ARM GAS  /tmp/ccl32WUA.s 			page 19


1003:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM),
1004:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_FGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_FGPFCCR_CCM_P
1005:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1006:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  /* Enable the CLUT loading for the foreground */
1007:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->FGPFCCR, DMA2D_FGPFCCR_START);
1008:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1009:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1010:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
1011:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1012:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1013:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1014:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Start DMA2D CLUT Loading with interrupt enabled.
1015:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d   Pointer to a DMA2D_HandleTypeDef structure that contains
1016:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the DMA2D.
1017:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  CLUTCfg  Pointer to a DMA2D_CLUTCfgTypeDef structure that contains
1018:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the color look up table.
1019:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
1020:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1021:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1022:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1023:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1024:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTLoad_IT(DMA2D_HandleTypeDef *hdma2d, DMA2D_CLUTCfgTypeDef CLUTCfg, 
1025:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1026:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
1027:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));
1028:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_CM(CLUTCfg.CLUTColorMode));
1029:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_SIZE(CLUTCfg.Size));
1030:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1031:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
1032:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
1033:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1034:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
1035:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
1036:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1037:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the CLUT of the background DMA2D layer */
1038:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(LayerIdx == DMA2D_BACKGROUND_LAYER)
1039:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1040:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write background CLUT memory address */
1041:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGCMAR, (uint32_t)CLUTCfg.pCLUT);
1042:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1043:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write background CLUT size and CLUT color mode */
1044:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->BGPFCCR, (DMA2D_BGPFCCR_CS | DMA2D_BGPFCCR_CCM),
1045:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_BGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_BGPFCCR_CCM_P
1046:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1047:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the CLUT Transfer Complete, transfer Error, configuration Error and CLUT Access Error
1048:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
1049:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1050:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the CLUT loading for the background */
1051:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->BGPFCCR, DMA2D_BGPFCCR_START);
1052:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1053:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the CLUT of the foreground DMA2D layer */
1054:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
1055:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1056:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write foreground CLUT memory address */
1057:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGCMAR, (uint32_t)CLUTCfg.pCLUT);
1058:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1059:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write foreground CLUT size and CLUT color mode */
ARM GAS  /tmp/ccl32WUA.s 			page 20


1060:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM),
1061:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_FGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_FGPFCCR_CCM_P
1062:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1063:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the CLUT Transfer Complete, transfer Error, configuration Error and CLUT Access Error
1064:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
1065:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1066:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the CLUT loading for the foreground */
1067:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->FGPFCCR, DMA2D_FGPFCCR_START);
1068:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1069:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1070:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
1071:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1072:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1073:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1074:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Abort the DMA2D CLUT loading.
1075:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d  Pointer to a DMA2D_HandleTypeDef structure that contains
1076:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                  the configuration information for the DMA2D.
1077:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
1078:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1079:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1080:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1081:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1082:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTLoading_Abort(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
1083:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1084:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tickstart;
1085:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background reg
1086:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1087:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Abort the CLUT loading */
1088:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   SET_BIT(hdma2d->Instance->CR, DMA2D_CR_ABORT);
1089:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1090:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* If foreground CLUT loading is considered, update local variables */
1091:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(LayerIdx == DMA2D_FOREGROUND_LAYER)
1092:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1093:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     reg  = &(hdma2d->Instance->FGPFCCR);
1094:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1095:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1096:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1097:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Get tick */
1098:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   tickstart = HAL_GetTick();
1099:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1100:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check if the CLUT loading is aborted */
1101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   while((*reg & DMA2D_BGPFCCR_START) != 0U)
1102:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1103:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
1104:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Update error code */
1106:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
1107:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1108:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Change the DMA2D state */
1109:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
1110:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1111:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Process Unlocked */
1112:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
1113:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1114:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       return HAL_TIMEOUT;
1115:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1116:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
ARM GAS  /tmp/ccl32WUA.s 			page 21


1117:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1118:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Disable the CLUT Transfer Complete, Transfer Error, Configuration Error and CLUT Access Error 
1119:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
1120:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1121:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change the DMA2D state*/
1122:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
1123:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1124:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Unlocked */
1125:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
1126:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1127:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
1128:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1129:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1130:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1131:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Suspend the DMA2D CLUT loading.
1132:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
1133:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1134:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
1135:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1136:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1137:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1138:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1139:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTLoading_Suspend(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
1140:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1141:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tickstart;
1142:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t loadsuspended;
1143:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background reg
1144:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1145:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Suspend the CLUT loading */
1146:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   SET_BIT(hdma2d->Instance->CR, DMA2D_CR_SUSP);
1147:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1148:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* If foreground CLUT loading is considered, update local variables */
1149:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(LayerIdx == DMA2D_FOREGROUND_LAYER)
1150:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1151:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     reg  = &(hdma2d->Instance->FGPFCCR);
1152:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1153:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1154:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Get tick */
1155:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   tickstart = HAL_GetTick();
1156:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1157:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check if the CLUT loading is suspended */
1158:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   loadsuspended = ((hdma2d->Instance->CR & DMA2D_CR_SUSP) == DMA2D_CR_SUSP)? 1UL: 0UL; /*1st condit
1159:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   loadsuspended |= ((*reg & DMA2D_BGPFCCR_START) != DMA2D_BGPFCCR_START)? 1UL: 0UL; /*2nd condition
1160:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   while (loadsuspended == 0UL)
1161:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1162:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_SUSPEND)
1163:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1164:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Update error code */
1165:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
1166:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1167:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Change the DMA2D state */
1168:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
1169:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1170:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       return HAL_TIMEOUT;
1171:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1172:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     loadsuspended = ((hdma2d->Instance->CR & DMA2D_CR_SUSP) == DMA2D_CR_SUSP)? 1UL: 0UL; /*1st cond
1173:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     loadsuspended |= ((*reg & DMA2D_BGPFCCR_START) != DMA2D_BGPFCCR_START)? 1UL: 0UL; /*2nd conditi
ARM GAS  /tmp/ccl32WUA.s 			page 22


1174:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1175:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1176:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****    /* Check whether or not a transfer is actually suspended and change the DMA2D state accordingly 
1177:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((*reg & DMA2D_BGPFCCR_START) != 0U)
1178:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1179:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->State = HAL_DMA2D_STATE_SUSPEND;
1180:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1181:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
1182:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1183:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Make sure SUSP bit is cleared since it is meaningless
1184:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****        when no tranfer is on-going */
1185:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     CLEAR_BIT(hdma2d->Instance->CR, DMA2D_CR_SUSP);
1186:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1187:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1188:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
1189:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1190:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1191:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1192:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Resume the DMA2D CLUT loading.
1193:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
1194:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1195:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
1196:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1197:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1198:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1199:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1200:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTLoading_Resume(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
1201:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1202:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the SUSP and START bits for background or foreground CLUT loading */
1203:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(LayerIdx == DMA2D_BACKGROUND_LAYER)
1204:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1205:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Background CLUT loading suspension check */
1206:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((hdma2d->Instance->CR & DMA2D_CR_SUSP) == DMA2D_CR_SUSP)
1207:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1208:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
1209:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1210:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Ongoing CLUT loading is suspended: change the DMA2D state before resuming */
1211:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_BUSY;
1212:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1213:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1214:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1215:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
1216:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1217:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Foreground CLUT loading suspension check */
1218:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((hdma2d->Instance->CR & DMA2D_CR_SUSP) == DMA2D_CR_SUSP)
1219:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1220:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
1221:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1222:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Ongoing CLUT loading is suspended: change the DMA2D state before resuming */
1223:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_BUSY;
1224:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1225:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1226:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1227:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1228:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Resume the CLUT loading */
1229:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   CLEAR_BIT(hdma2d->Instance->CR, DMA2D_CR_SUSP);
1230:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
ARM GAS  /tmp/ccl32WUA.s 			page 23


1231:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
1232:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1233:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1234:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1235:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1236:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1237:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Polling for transfer complete or CLUT loading.
1238:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
1239:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1240:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Timeout Timeout duration
1241:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1242:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1243:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_PollForTransfer(DMA2D_HandleTypeDef *hdma2d, uint32_t Timeout)
1244:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1245:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tickstart;
1246:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t layer_start;
1247:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __IO uint32_t isrflags = 0x0U;
1248:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1249:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Polling for DMA2D transfer */
1250:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
1251:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1252:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****    /* Get tick */
1253:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****    tickstart = HAL_GetTick();
1254:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1255:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     while(__HAL_DMA2D_GET_FLAG(hdma2d, DMA2D_FLAG_TC) == 0U)
1256:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1257:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       isrflags = READ_REG(hdma2d->Instance->ISR);
1258:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if ((isrflags & (DMA2D_FLAG_CE|DMA2D_FLAG_TE)) != 0U)
1259:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1260:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         if ((isrflags & DMA2D_FLAG_CE) != 0U)
1261:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
1262:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
1263:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
1264:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         if ((isrflags & DMA2D_FLAG_TE) != 0U)
1265:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
1266:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
1267:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
1268:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Clear the transfer and configuration error flags */
1269:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE | DMA2D_FLAG_TE);
1270:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1271:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Change DMA2D state */
1272:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->State = HAL_DMA2D_STATE_ERROR;
1273:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1274:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Process unlocked */
1275:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         __HAL_UNLOCK(hdma2d);
1276:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1277:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         return HAL_ERROR;
1278:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
1279:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Check for the Timeout */
1280:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if(Timeout != HAL_MAX_DELAY)
1281:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1282:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         if(((HAL_GetTick() - tickstart ) > Timeout)||(Timeout == 0U))
1283:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
1284:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           /* Update error code */
1285:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
1286:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1287:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           /* Change the DMA2D state */
ARM GAS  /tmp/ccl32WUA.s 			page 24


1288:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
1289:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1290:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           /* Process unlocked */
1291:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           __HAL_UNLOCK(hdma2d);
1292:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1293:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           return HAL_TIMEOUT;
1294:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
1295:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
1296:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1297:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1298:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Polling for CLUT loading (foreground or background) */
1299:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   layer_start = hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START;
1300:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   layer_start |= hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START;
1301:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (layer_start != 0U)
1302:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1303:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Get tick */
1304:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     tickstart = HAL_GetTick();
1305:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1306:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     while(__HAL_DMA2D_GET_FLAG(hdma2d, DMA2D_FLAG_CTC) == 0U)
1307:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1308:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       isrflags = READ_REG(hdma2d->Instance->ISR);
1309:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if ((isrflags & (DMA2D_FLAG_CAE|DMA2D_FLAG_CE|DMA2D_FLAG_TE)) != 0U)
1310:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1311:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         if ((isrflags & DMA2D_FLAG_CAE) != 0U)
1312:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
1313:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
1314:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
1315:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         if ((isrflags & DMA2D_FLAG_CE) != 0U)
1316:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
1317:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
1318:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
1319:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         if ((isrflags & DMA2D_FLAG_TE) != 0U)
1320:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
1321:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
1322:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
1323:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Clear the CLUT Access Error, Configuration Error and Transfer Error flags */
1324:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
1325:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1326:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Change DMA2D state */
1327:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->State= HAL_DMA2D_STATE_ERROR;
1328:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1329:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Process unlocked */
1330:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         __HAL_UNLOCK(hdma2d);
1331:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1332:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         return HAL_ERROR;
1333:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
1334:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Check for the Timeout */
1335:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if(Timeout != HAL_MAX_DELAY)
1336:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1337:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         if(((HAL_GetTick() - tickstart ) > Timeout)||(Timeout == 0U))
1338:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
1339:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           /* Update error code */
1340:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
1341:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1342:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           /* Change the DMA2D state */
1343:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           hdma2d->State= HAL_DMA2D_STATE_TIMEOUT;
1344:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
ARM GAS  /tmp/ccl32WUA.s 			page 25


1345:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           /* Process unlocked */
1346:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           __HAL_UNLOCK(hdma2d);
1347:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1348:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           return HAL_TIMEOUT;
1349:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
1350:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
1351:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1352:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1353:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1354:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Clear the transfer complete and CLUT loading flags */
1355:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC|DMA2D_FLAG_CTC);
1356:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1357:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D state */
1358:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
1359:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1360:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process unlocked */
1361:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
1362:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1363:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
1364:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1365:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1366:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Handle DMA2D interrupt request.
1367:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
1368:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1369:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1370:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1371:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
1372:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1373:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
1374:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t crflags = READ_REG(hdma2d->Instance->CR);
1375:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1376:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Transfer Error Interrupt management ***************************************/
1377:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_TE) != 0U)
1378:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1379:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_TE) != 0U)
1380:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1381:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Disable the transfer Error interrupt */
1382:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
1383:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1384:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Update error code */
1385:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
1386:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1387:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Clear the transfer error flag */
1388:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
1389:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1390:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Change DMA2D state */
1391:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_ERROR;
1392:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1393:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Process Unlocked */
1394:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
1395:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1396:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if(hdma2d->XferErrorCallback != NULL)
1397:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1398:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Transfer error Callback */
1399:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->XferErrorCallback(hdma2d);
1400:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
1401:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
ARM GAS  /tmp/ccl32WUA.s 			page 26


1402:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1403:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configuration Error Interrupt management **********************************/
1404:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_CE) != 0U)
1405:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1406:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_CE) != 0U)
1407:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1408:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Disable the Configuration Error interrupt */
1409:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
1410:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1411:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Clear the Configuration error flag */
1412:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
1413:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1414:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Update error code */
1415:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
1416:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1417:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Change DMA2D state */
1418:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_ERROR;
1419:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1420:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Process Unlocked */
1421:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
1422:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1423:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if(hdma2d->XferErrorCallback != NULL)
1424:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1425:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Transfer error Callback */
1426:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->XferErrorCallback(hdma2d);
1427:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
1428:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1429:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1430:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* CLUT access Error Interrupt management ***********************************/
1431:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_CAE) != 0U)
1432:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1433:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_CAE) != 0U)
1434:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1435:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Disable the CLUT access error interrupt */
1436:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
1437:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1438:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Clear the CLUT access error flag */
1439:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
1440:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1441:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Update error code */
1442:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
1443:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1444:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Change DMA2D state */
1445:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_ERROR;
1446:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1447:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Process Unlocked */
1448:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
1449:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1450:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if(hdma2d->XferErrorCallback != NULL)
1451:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1452:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Transfer error Callback */
1453:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->XferErrorCallback(hdma2d);
1454:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
1455:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1456:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1457:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Transfer watermark Interrupt management **********************************/
1458:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_TW) != 0U)
ARM GAS  /tmp/ccl32WUA.s 			page 27


1459:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1460:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_TW) != 0U)
1461:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1462:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Disable the transfer watermark interrupt */
1463:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
1464:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1465:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Clear the transfer watermark flag */
1466:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
1467:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1468:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Transfer watermark Callback */
1469:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
1470:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->LineEventCallback(hdma2d);
1471:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #else
1472:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       HAL_DMA2D_LineEventCallback(hdma2d);
1473:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
1474:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1475:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1476:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1477:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Transfer Complete Interrupt management ************************************/
1478:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_TC) != 0U)
1479:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1480:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_TC) != 0U)
1481:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1482:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Disable the transfer complete interrupt */
1483:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
1484:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1485:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Clear the transfer complete flag */
1486:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
1487:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1488:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Update error code */
1489:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
1490:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1491:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Change DMA2D state */
1492:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_READY;
1493:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1494:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Process Unlocked */
1495:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
1496:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1497:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if(hdma2d->XferCpltCallback != NULL)
1498:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1499:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Transfer complete Callback */
1500:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->XferCpltCallback(hdma2d);
1501:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
1502:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1503:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1504:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* CLUT Transfer Complete Interrupt management ******************************/
1505:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_CTC) != 0U)
1506:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1507:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_CTC) != 0U)
1508:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1509:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Disable the CLUT transfer complete interrupt */
1510:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
1511:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1512:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Clear the CLUT transfer complete flag */
1513:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
1514:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1515:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Update error code */
ARM GAS  /tmp/ccl32WUA.s 			page 28


1516:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
1517:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1518:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Change DMA2D state */
1519:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_READY;
1520:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1521:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Process Unlocked */
1522:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
1523:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1524:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* CLUT Transfer complete Callback */
1525:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
1526:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->CLUTLoadingCpltCallback(hdma2d);
1527:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #else
1528:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
1529:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
1530:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1531:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1532:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1533:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1534:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1535:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1536:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Transfer watermark callback.
1537:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
1538:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1539:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval None
1540:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1541:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** __weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
1542:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1543:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
1544:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   UNUSED(hdma2d);
1545:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1546:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1547:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             the HAL_DMA2D_LineEventCallback can be implemented in the user file.
1548:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****    */
1549:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1550:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1551:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1552:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  CLUT Transfer Complete callback.
1553:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
1554:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1555:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval None
1556:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1557:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** __weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
1558:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1559:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
1560:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   UNUSED(hdma2d);
1561:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1562:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1563:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             the HAL_DMA2D_CLUTLoadingCpltCallback can be implemented in the user file.
1564:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****    */
1565:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1566:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1567:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1568:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @}
1569:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1570:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1571:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @defgroup DMA2D_Exported_Functions_Group3 Peripheral Control functions
1572:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  *  @brief    Peripheral Control functions
ARM GAS  /tmp/ccl32WUA.s 			page 29


1573:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  *
1574:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** @verbatim
1575:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  ===============================================================================
1576:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                     ##### Peripheral Control functions #####
1577:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  ===============================================================================
1578:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     [..]  This section provides functions allowing to:
1579:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure the DMA2D foreground or background layer parameters.
1580:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure the DMA2D CLUT transfer.
1581:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure the line watermark
1582:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure the dead time value.
1583:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Enable or disable the dead time value functionality.
1584:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1585:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1586:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** @endverbatim
1587:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
1588:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1589:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1590:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1591:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Configure the DMA2D Layer according to the specified
1592:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *         parameters in the DMA2D_HandleTypeDef.
1593:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
1594:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1595:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
1596:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1597:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1598:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1599:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1600:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
1601:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1602:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   DMA2D_LayerCfgTypeDef *pLayerCfg;
1603:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t regMask, regValue;
1604:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1605:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
1606:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));
1607:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_OFFSET(hdma2d->LayerCfg[LayerIdx].InputOffset));
1608:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(hdma2d->Init.Mode != DMA2D_R2M)
1609:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1610:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     assert_param(IS_DMA2D_INPUT_COLOR_MODE(hdma2d->LayerCfg[LayerIdx].InputColorMode));
1611:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if(hdma2d->Init.Mode != DMA2D_M2M)
1612:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1613:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
1614:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1615:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1616:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_ALPHA_INVERTED(hdma2d->LayerCfg[LayerIdx].AlphaInverted));
1617:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_RB_SWAP(hdma2d->LayerCfg[LayerIdx].RedBlueSwap));
1618:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1619:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if((LayerIdx == DMA2D_FOREGROUND_LAYER) && (hdma2d->LayerCfg[LayerIdx].InputColorMode == DMA2D_IN
1620:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1621:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
1622:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1623:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1624:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
1625:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
1626:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1627:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
1628:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
1629:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
ARM GAS  /tmp/ccl32WUA.s 			page 30


1630:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   pLayerCfg = &hdma2d->LayerCfg[LayerIdx];
1631:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1632:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
1633:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) |\
1634:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****              (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_
1635:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_
1636:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1637:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1638:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8
1639:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1640:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
1641:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1642:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
1643:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1644:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
1645:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1646:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1647:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the background DMA2D layer */
1648:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(LayerIdx == DMA2D_BACKGROUND_LAYER)
1649:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1650:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write DMA2D BGPFCCR register */
1651:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
1652:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1653:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* DMA2D BGOR register configuration -------------------------------------*/
1654:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
1655:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1656:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* DMA2D BGCOLR register configuration -------------------------------------*/
1657:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_
1658:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1659:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_G
1660:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1661:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1662:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the foreground DMA2D layer */
1663:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
1664:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1665:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1666:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if(pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
1667:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1668:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
1669:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       regMask  |= DMA2D_FGPFCCR_CSS;
1670:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1671:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1672:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      /* Write DMA2D FGPFCCR register */
1673:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
1674:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1675:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* DMA2D FGOR register configuration -------------------------------------*/
1676:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
1677:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1678:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* DMA2D FGCOLR register configuration -------------------------------------*/
1679:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_
1680:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1681:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_G
1682:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1683:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1684:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Initialize the DMA2D state*/
1685:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
1686:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
ARM GAS  /tmp/ccl32WUA.s 			page 31


1687:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process unlocked */
1688:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
1689:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1690:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
1691:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1692:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1693:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1694:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Configure the DMA2D CLUT Transfer.
1695:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d   Pointer to a DMA2D_HandleTypeDef structure that contains
1696:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the DMA2D.
1697:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  CLUTCfg  Pointer to a DMA2D_CLUTCfgTypeDef structure that contains
1698:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the color look up table.
1699:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
1700:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1701:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1702:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1703:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1704:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_ConfigCLUT(DMA2D_HandleTypeDef *hdma2d, DMA2D_CLUTCfgTypeDef CLUTCfg, u
1705:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1706:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
1707:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));
1708:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_CM(CLUTCfg.CLUTColorMode));
1709:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_SIZE(CLUTCfg.Size));
1710:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1711:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
1712:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
1713:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1714:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
1715:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
1716:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1717:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the CLUT of the background DMA2D layer */
1718:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(LayerIdx == DMA2D_BACKGROUND_LAYER)
1719:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1720:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write background CLUT memory address */
1721:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGCMAR, (uint32_t)CLUTCfg.pCLUT);
1722:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1723:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write background CLUT size and CLUT color mode */
1724:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->BGPFCCR, (DMA2D_BGPFCCR_CS | DMA2D_BGPFCCR_CCM),
1725:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_BGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_BGPFCCR_CCM_P
1726:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  }
1727:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  /* Configure the CLUT of the foreground DMA2D layer */
1728:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  else
1729:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  {
1730:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****    /* Write foreground CLUT memory address */
1731:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGCMAR, (uint32_t)CLUTCfg.pCLUT);
1732:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1733:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write foreground CLUT size and CLUT color mode */
1734:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM),
1735:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_FGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_FGPFCCR_CCM_P
1736:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1737:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1738:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Set the DMA2D state to Ready*/
1739:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
1740:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1741:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process unlocked */
1742:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
1743:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
ARM GAS  /tmp/ccl32WUA.s 			page 32


1744:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
1745:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1746:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1747:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1748:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1749:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Configure the line watermark.
1750:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
1751:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1752:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Line   Line Watermark configuration (maximum 16-bit long value expected).
1753:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @note   HAL_DMA2D_ProgramLineEvent() API enables the transfer watermark interrupt.
1754:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @note   The transfer watermark interrupt is disabled once it has occurred.
1755:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1756:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1757:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1758:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_ProgramLineEvent(DMA2D_HandleTypeDef *hdma2d, uint32_t Line)
1759:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1760:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
1761:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LINEWATERMARK(Line));
1762:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1763:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (Line > DMA2D_LWR_LW)
1764:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1765:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     return HAL_ERROR;
1766:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1767:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
1768:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1769:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Process locked */
1770:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     __HAL_LOCK(hdma2d);
1771:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1772:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Change DMA2D peripheral state */
1773:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->State = HAL_DMA2D_STATE_BUSY;
1774:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1775:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Sets the Line watermark configuration */
1776:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->LWR, Line);
1777:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1778:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the Line interrupt */
1779:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TW);
1780:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1781:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Initialize the DMA2D state*/
1782:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->State = HAL_DMA2D_STATE_READY;
1783:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1784:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Process unlocked */
1785:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     __HAL_UNLOCK(hdma2d);
1786:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1787:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     return HAL_OK;
1788:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1789:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1790:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1791:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1792:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief Enable DMA2D dead time feature.
1793:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param hdma2d DMA2D handle.
1794:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1795:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1796:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_EnableDeadTime(DMA2D_HandleTypeDef *hdma2d)
1797:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1798:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Locked */
1799:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
1800:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
ARM GAS  /tmp/ccl32WUA.s 			page 33


1801:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
1802:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1803:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Set DMA2D_AMTCR EN bit */
1804:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   SET_BIT(hdma2d->Instance->AMTCR, DMA2D_AMTCR_EN);
1805:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1806:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
1807:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1808:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Unlocked */
1809:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
1810:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1811:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
1812:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1813:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1814:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1815:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief Disable DMA2D dead time feature.
1816:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param hdma2d DMA2D handle.
1817:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1818:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1819:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_DisableDeadTime(DMA2D_HandleTypeDef *hdma2d)
1820:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1821:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Locked */
1822:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
1823:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1824:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
1825:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1826:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Clear DMA2D_AMTCR EN bit */
1827:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   CLEAR_BIT(hdma2d->Instance->AMTCR, DMA2D_AMTCR_EN);
1828:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1829:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
1830:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1831:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Unlocked */
1832:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
1833:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1834:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
1835:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1836:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1837:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1838:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief Configure dead time.
1839:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @note The dead time value represents the guaranteed minimum number of cycles between
1840:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *       two consecutive transactions on the AHB bus.
1841:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param hdma2d DMA2D handle.
1842:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param DeadTime dead time value.
1843:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1844:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1845:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_ConfigDeadTime(DMA2D_HandleTypeDef *hdma2d, uint8_t DeadTime)
1846:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1847:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Locked */
1848:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
1849:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1850:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
1851:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1852:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Set DMA2D_AMTCR DT field */
1853:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->AMTCR, DMA2D_AMTCR_DT, (((uint32_t) DeadTime) << DMA2D_AMTCR_DT_Pos)
1854:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1855:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
1856:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1857:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Unlocked */
ARM GAS  /tmp/ccl32WUA.s 			page 34


1858:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
1859:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1860:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
1861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1862:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1863:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1864:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @}
1865:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1866:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1867:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1868:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @defgroup DMA2D_Exported_Functions_Group4 Peripheral State and Error functions
1869:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  *  @brief    Peripheral State functions
1870:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  *
1871:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** @verbatim
1872:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  ===============================================================================
1873:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                   ##### Peripheral State and Errors functions #####
1874:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  ===============================================================================
1875:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     [..]
1876:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     This subsection provides functions allowing to:
1877:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Get the DMA2D state
1878:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Get the DMA2D error code
1879:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1880:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** @endverbatim
1881:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
1882:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1883:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1884:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1885:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Return the DMA2D state
1886:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
1887:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1888:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL state
1889:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1890:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_DMA2D_StateTypeDef HAL_DMA2D_GetState(DMA2D_HandleTypeDef *hdma2d)
1891:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1892:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return hdma2d->State;
1893:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1894:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1895:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1896:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Return the DMA2D error code
1897:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d  pointer to a DMA2D_HandleTypeDef structure that contains
1898:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *               the configuration information for DMA2D.
1899:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval DMA2D Error Code
1900:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1901:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** uint32_t HAL_DMA2D_GetError(DMA2D_HandleTypeDef *hdma2d)
1902:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1903:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return hdma2d->ErrorCode;
1904:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1905:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1906:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1907:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @}
1908:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1909:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1910:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1911:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @}
1912:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1913:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1914:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
ARM GAS  /tmp/ccl32WUA.s 			page 35


1915:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @defgroup DMA2D_Private_Functions DMA2D Private Functions
1916:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
1917:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1918:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1919:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1920:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Set the DMA2D transfer parameters.
1921:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d     Pointer to a DMA2D_HandleTypeDef structure that contains
1922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     the configuration information for the specified DMA2D.
1923:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  pdata      The source memory Buffer address
1924:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  DstAddress The destination memory Buffer address
1925:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Width      The width of data to be transferred from source to destination.
1926:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Height     The height of data to be transferred from source to destination.
1927:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1928:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1929:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint3
1930:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
  26              		.loc 1 1930 0
  27              		.cfi_startproc
  28              		@ args = 4, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  32 0000 70B4     		push	{r4, r5, r6}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 6, -4
1931:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tmp;
1932:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tmp1;
1933:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tmp2;
1934:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tmp3;
1935:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tmp4;
1936:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1937:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure DMA2D data size */
1938:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Po
  38              		.loc 1 1938 0
  39 0002 0668     		ldr	r6, [r0]
  40 0004 746C     		ldr	r4, [r6, #68]
  41 0006 04F04044 		and	r4, r4, #-1073741824
  42 000a 039D     		ldr	r5, [sp, #12]
  43 000c 45EA0343 		orr	r3, r5, r3, lsl #16
  44              	.LVL1:
  45 0010 1C43     		orrs	r4, r4, r3
  46 0012 7464     		str	r4, [r6, #68]
1939:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1940:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure DMA2D destination address */
1941:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   WRITE_REG(hdma2d->Instance->OMAR, DstAddress);
  47              		.loc 1 1941 0
  48 0014 0368     		ldr	r3, [r0]
  49 0016 DA63     		str	r2, [r3, #60]
1942:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1943:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Register to memory DMA2D mode selected */
1944:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (hdma2d->Init.Mode == DMA2D_R2M)
  50              		.loc 1 1944 0
  51 0018 4368     		ldr	r3, [r0, #4]
  52 001a B3F5403F 		cmp	r3, #196608
ARM GAS  /tmp/ccl32WUA.s 			page 36


  53 001e 03D0     		beq	.L9
1945:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1946:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     tmp1 = pdata & DMA2D_OCOLR_ALPHA_1;
1947:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     tmp2 = pdata & DMA2D_OCOLR_RED_1;
1948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
1949:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
1950:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1951:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Prepare the value to be written to the OCOLR register according to the color mode */
1952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB8888)
1953:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1954:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp = (tmp3 | tmp2 | tmp1| tmp4);
1955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1956:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB888)
1957:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1958:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp = (tmp3 | tmp2 | tmp4);
1959:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1960:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
1961:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1962:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp2 = (tmp2 >> 19U);
1963:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp3 = (tmp3 >> 10U);
1964:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp4 = (tmp4 >> 3U );
1965:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp  = ((tmp3 << 5U) | (tmp2 << 11U) | tmp4);
1966:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1967:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
1968:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1969:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp1 = (tmp1 >> 31U);
1970:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp2 = (tmp2 >> 19U);
1971:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp3 = (tmp3 >> 11U);
1972:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp4 = (tmp4 >> 3U );
1973:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
1974:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1975:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     else /* Dhdma2d->Init.ColorMode = DMA2D_OUTPUT_ARGB4444 */
1976:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1977:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp1 = (tmp1 >> 28U);
1978:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp2 = (tmp2 >> 20U);
1979:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp3 = (tmp3 >> 12U);
1980:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp4 = (tmp4 >> 4U );
1981:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
1982:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1983:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write to DMA2D OCOLR register */
1984:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->OCOLR, tmp);
1985:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1986:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else /* M2M, M2M_PFC or M2M_Blending DMA2D Mode */
1987:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1988:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Configure DMA2D source address */
1989:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGMAR, pdata);
  54              		.loc 1 1989 0
  55 0020 0368     		ldr	r3, [r0]
  56 0022 D960     		str	r1, [r3, #12]
  57              	.LVL2:
  58              	.L1:
1990:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1991:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
  59              		.loc 1 1991 0
  60 0024 70BC     		pop	{r4, r5, r6}
  61              	.LCFI1:
  62              		.cfi_remember_state
ARM GAS  /tmp/ccl32WUA.s 			page 37


  63              		.cfi_restore 6
  64              		.cfi_restore 5
  65              		.cfi_restore 4
  66              		.cfi_def_cfa_offset 0
  67              	.LVL3:
  68 0026 7047     		bx	lr
  69              	.LVL4:
  70              	.L9:
  71              	.LCFI2:
  72              		.cfi_restore_state
1946:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     tmp2 = pdata & DMA2D_OCOLR_RED_1;
  73              		.loc 1 1946 0
  74 0028 01F07F46 		and	r6, r1, #-16777216
  75              	.LVL5:
1947:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
  76              		.loc 1 1947 0
  77 002c 01F47F03 		and	r3, r1, #16711680
  78              	.LVL6:
1948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
  79              		.loc 1 1948 0
  80 0030 01F47F45 		and	r5, r1, #65280
  81              	.LVL7:
1949:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  82              		.loc 1 1949 0
  83 0034 CAB2     		uxtb	r2, r1
  84              	.LVL8:
1952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
  85              		.loc 1 1952 0
  86 0036 8468     		ldr	r4, [r0, #8]
  87 0038 7CB1     		cbz	r4, .L3
1956:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
  88              		.loc 1 1956 0
  89 003a 012C     		cmp	r4, #1
  90 003c 10D0     		beq	.L10
1960:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
  91              		.loc 1 1960 0
  92 003e 022C     		cmp	r4, #2
  93 0040 11D0     		beq	.L11
1967:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
  94              		.loc 1 1967 0
  95 0042 032C     		cmp	r4, #3
  96 0044 17D0     		beq	.L12
1977:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp2 = (tmp2 >> 20U);
  97              		.loc 1 1977 0
  98 0046 360F     		lsrs	r6, r6, #28
  99              	.LVL9:
1978:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp3 = (tmp3 >> 12U);
 100              		.loc 1 1978 0
 101 0048 190D     		lsrs	r1, r3, #20
 102              	.LVL10:
1979:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp4 = (tmp4 >> 4U );
 103              		.loc 1 1979 0
 104 004a 2D0B     		lsrs	r5, r5, #12
 105              	.LVL11:
1981:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 106              		.loc 1 1981 0
 107 004c 0902     		lsls	r1, r1, #8
ARM GAS  /tmp/ccl32WUA.s 			page 38


 108              	.LVL12:
 109 004e 41EA0511 		orr	r1, r1, r5, lsl #4
 110 0052 41EA0631 		orr	r1, r1, r6, lsl #12
 111 0056 41EA1211 		orr	r1, r1, r2, lsr #4
 112              	.LVL13:
 113              	.L3:
1984:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 114              		.loc 1 1984 0
 115 005a 0368     		ldr	r3, [r0]
 116 005c 9963     		str	r1, [r3, #56]
 117 005e E1E7     		b	.L1
 118              	.LVL14:
 119              	.L10:
1958:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 120              		.loc 1 1958 0
 121 0060 21F07F41 		bic	r1, r1, #-16777216
 122              	.LVL15:
 123 0064 F9E7     		b	.L3
 124              	.LVL16:
 125              	.L11:
1962:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp3 = (tmp3 >> 10U);
 126              		.loc 1 1962 0
 127 0066 DB0C     		lsrs	r3, r3, #19
 128              	.LVL17:
1963:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp4 = (tmp4 >> 3U );
 129              		.loc 1 1963 0
 130 0068 AD0A     		lsrs	r5, r5, #10
 131              	.LVL18:
1965:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 132              		.loc 1 1965 0
 133 006a D902     		lsls	r1, r3, #11
 134              	.LVL19:
 135 006c 41EA4511 		orr	r1, r1, r5, lsl #5
 136 0070 41EAD201 		orr	r1, r1, r2, lsr #3
 137              	.LVL20:
 138 0074 F1E7     		b	.L3
 139              	.LVL21:
 140              	.L12:
1969:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp2 = (tmp2 >> 19U);
 141              		.loc 1 1969 0
 142 0076 F60F     		lsrs	r6, r6, #31
 143              	.LVL22:
1970:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp3 = (tmp3 >> 11U);
 144              		.loc 1 1970 0
 145 0078 DB0C     		lsrs	r3, r3, #19
 146              	.LVL23:
1971:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp4 = (tmp4 >> 3U );
 147              		.loc 1 1971 0
 148 007a ED0A     		lsrs	r5, r5, #11
 149              	.LVL24:
1973:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 150              		.loc 1 1973 0
 151 007c 9902     		lsls	r1, r3, #10
 152              	.LVL25:
 153 007e 41EA4511 		orr	r1, r1, r5, lsl #5
 154 0082 41EAC631 		orr	r1, r1, r6, lsl #15
 155 0086 41EAD201 		orr	r1, r1, r2, lsr #3
ARM GAS  /tmp/ccl32WUA.s 			page 39


 156              	.LVL26:
 157 008a E6E7     		b	.L3
 158              		.cfi_endproc
 159              	.LFE170:
 161              		.section	.text.HAL_DMA2D_MspInit,"ax",%progbits
 162              		.align	1
 163              		.weak	HAL_DMA2D_MspInit
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 167              		.fpu fpv5-d16
 169              	HAL_DMA2D_MspInit:
 170              	.LFB143:
 400:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
 171              		.loc 1 400 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		@ link register save eliminated.
 176              	.LVL27:
 177 0000 7047     		bx	lr
 178              		.cfi_endproc
 179              	.LFE143:
 181              		.section	.text.HAL_DMA2D_Init,"ax",%progbits
 182              		.align	1
 183              		.global	HAL_DMA2D_Init
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 187              		.fpu fpv5-d16
 189              	HAL_DMA2D_Init:
 190              	.LFB141:
 238:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the DMA2D peripheral state */
 191              		.loc 1 238 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              	.LVL28:
 240:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 196              		.loc 1 240 0
 197 0000 0028     		cmp	r0, #0
 198 0002 32D0     		beq	.L17
 238:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the DMA2D peripheral state */
 199              		.loc 1 238 0
 200 0004 10B5     		push	{r4, lr}
 201              	.LCFI3:
 202              		.cfi_def_cfa_offset 8
 203              		.cfi_offset 4, -8
 204              		.cfi_offset 14, -4
 205 0006 0446     		mov	r4, r0
 268:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 206              		.loc 1 268 0
 207 0008 90F85930 		ldrb	r3, [r0, #89]	@ zero_extendqisi2
 208 000c 43B3     		cbz	r3, .L22
 209              	.LVL29:
 210              	.L16:
 278:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
ARM GAS  /tmp/ccl32WUA.s 			page 40


 211              		.loc 1 278 0
 212 000e 0223     		movs	r3, #2
 213 0010 84F85930 		strb	r3, [r4, #89]
 281:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 214              		.loc 1 281 0
 215 0014 2268     		ldr	r2, [r4]
 216 0016 1368     		ldr	r3, [r2]
 217 0018 23F44033 		bic	r3, r3, #196608
 218 001c 6168     		ldr	r1, [r4, #4]
 219 001e 0B43     		orrs	r3, r3, r1
 220 0020 1360     		str	r3, [r2]
 284:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 221              		.loc 1 284 0
 222 0022 2268     		ldr	r2, [r4]
 223 0024 536B     		ldr	r3, [r2, #52]
 224 0026 23F00703 		bic	r3, r3, #7
 225 002a A168     		ldr	r1, [r4, #8]
 226 002c 0B43     		orrs	r3, r3, r1
 227 002e 5363     		str	r3, [r2, #52]
 287:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
 228              		.loc 1 287 0
 229 0030 2268     		ldr	r2, [r4]
 230 0032 116C     		ldr	r1, [r2, #64]
 231 0034 0E4B     		ldr	r3, .L23
 232 0036 0B40     		ands	r3, r3, r1
 233 0038 E168     		ldr	r1, [r4, #12]
 234 003a 0B43     		orrs	r3, r3, r1
 235 003c 1364     		str	r3, [r2, #64]
 289:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 236              		.loc 1 289 0
 237 003e 2168     		ldr	r1, [r4]
 238 0040 4B6B     		ldr	r3, [r1, #52]
 239 0042 23F44013 		bic	r3, r3, #3145728
 240 0046 2069     		ldr	r0, [r4, #16]
 241 0048 6269     		ldr	r2, [r4, #20]
 242 004a 5205     		lsls	r2, r2, #21
 243 004c 42EA0052 		orr	r2, r2, r0, lsl #20
 244 0050 1343     		orrs	r3, r3, r2
 245 0052 4B63     		str	r3, [r1, #52]
 293:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 246              		.loc 1 293 0
 247 0054 0020     		movs	r0, #0
 248 0056 E065     		str	r0, [r4, #92]
 296:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 249              		.loc 1 296 0
 250 0058 0123     		movs	r3, #1
 251 005a 84F85930 		strb	r3, [r4, #89]
 298:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 252              		.loc 1 298 0
 253 005e 10BD     		pop	{r4, pc}
 254              	.LVL30:
 255              	.L22:
 271:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Init the low level hardware */
 256              		.loc 1 271 0
 257 0060 80F85830 		strb	r3, [r0, #88]
 273:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 258              		.loc 1 273 0
ARM GAS  /tmp/ccl32WUA.s 			page 41


 259 0064 FFF7FEFF 		bl	HAL_DMA2D_MspInit
 260              	.LVL31:
 261 0068 D1E7     		b	.L16
 262              	.LVL32:
 263              	.L17:
 264              	.LCFI4:
 265              		.cfi_def_cfa_offset 0
 266              		.cfi_restore 4
 267              		.cfi_restore 14
 242:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 268              		.loc 1 242 0
 269 006a 0120     		movs	r0, #1
 270              	.LVL33:
 271 006c 7047     		bx	lr
 272              	.L24:
 273 006e 00BF     		.align	2
 274              	.L23:
 275 0070 00C0FFFF 		.word	-16384
 276              		.cfi_endproc
 277              	.LFE141:
 279              		.section	.text.HAL_DMA2D_MspDeInit,"ax",%progbits
 280              		.align	1
 281              		.weak	HAL_DMA2D_MspDeInit
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
 285              		.fpu fpv5-d16
 287              	HAL_DMA2D_MspDeInit:
 288              	.LFB144:
 416:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
 289              		.loc 1 416 0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293              		@ link register save eliminated.
 294              	.LVL34:
 295 0000 7047     		bx	lr
 296              		.cfi_endproc
 297              	.LFE144:
 299              		.section	.text.HAL_DMA2D_Start,"ax",%progbits
 300              		.align	1
 301              		.global	HAL_DMA2D_Start
 302              		.syntax unified
 303              		.thumb
 304              		.thumb_func
 305              		.fpu fpv5-d16
 307              	HAL_DMA2D_Start:
 308              	.LFB145:
 670:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 309              		.loc 1 670 0
 310              		.cfi_startproc
 311              		@ args = 4, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              	.LVL35:
 670:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 314              		.loc 1 670 0
 315 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccl32WUA.s 			page 42


 316              	.LCFI5:
 317              		.cfi_def_cfa_offset 8
 318              		.cfi_offset 4, -8
 319              		.cfi_offset 14, -4
 320 0002 82B0     		sub	sp, sp, #8
 321              	.LCFI6:
 322              		.cfi_def_cfa_offset 16
 676:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 323              		.loc 1 676 0
 324 0004 90F85840 		ldrb	r4, [r0, #88]	@ zero_extendqisi2
 325 0008 012C     		cmp	r4, #1
 326 000a 02D1     		bne	.L30
 327 000c 0220     		movs	r0, #2
 328              	.LVL36:
 329              	.L27:
 688:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 330              		.loc 1 688 0
 331 000e 02B0     		add	sp, sp, #8
 332              	.LCFI7:
 333              		.cfi_remember_state
 334              		.cfi_def_cfa_offset 8
 335              		@ sp needed
 336 0010 10BD     		pop	{r4, pc}
 337              	.LVL37:
 338              	.L30:
 339              	.LCFI8:
 340              		.cfi_restore_state
 341 0012 0446     		mov	r4, r0
 676:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 342              		.loc 1 676 0 discriminator 2
 343 0014 0120     		movs	r0, #1
 344              	.LVL38:
 345 0016 84F85800 		strb	r0, [r4, #88]
 679:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 346              		.loc 1 679 0 discriminator 2
 347 001a 0220     		movs	r0, #2
 348 001c 84F85900 		strb	r0, [r4, #89]
 682:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 349              		.loc 1 682 0 discriminator 2
 350 0020 0498     		ldr	r0, [sp, #16]
 351 0022 0090     		str	r0, [sp]
 352 0024 2046     		mov	r0, r4
 353 0026 FFF7FEFF 		bl	DMA2D_SetConfig
 354              	.LVL39:
 685:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 355              		.loc 1 685 0 discriminator 2
 356 002a 2268     		ldr	r2, [r4]
 357 002c 1368     		ldr	r3, [r2]
 358 002e 43F00103 		orr	r3, r3, #1
 359 0032 1360     		str	r3, [r2]
 687:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 360              		.loc 1 687 0 discriminator 2
 361 0034 0020     		movs	r0, #0
 362 0036 EAE7     		b	.L27
 363              		.cfi_endproc
 364              	.LFE145:
 366              		.section	.text.HAL_DMA2D_Start_IT,"ax",%progbits
ARM GAS  /tmp/ccl32WUA.s 			page 43


 367              		.align	1
 368              		.global	HAL_DMA2D_Start_IT
 369              		.syntax unified
 370              		.thumb
 371              		.thumb_func
 372              		.fpu fpv5-d16
 374              	HAL_DMA2D_Start_IT:
 375              	.LFB146:
 704:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 376              		.loc 1 704 0
 377              		.cfi_startproc
 378              		@ args = 4, pretend = 0, frame = 0
 379              		@ frame_needed = 0, uses_anonymous_args = 0
 380              	.LVL40:
 381 0000 10B5     		push	{r4, lr}
 382              	.LCFI9:
 383              		.cfi_def_cfa_offset 8
 384              		.cfi_offset 4, -8
 385              		.cfi_offset 14, -4
 386 0002 82B0     		sub	sp, sp, #8
 387              	.LCFI10:
 388              		.cfi_def_cfa_offset 16
 710:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 389              		.loc 1 710 0
 390 0004 90F85840 		ldrb	r4, [r0, #88]	@ zero_extendqisi2
 391 0008 012C     		cmp	r4, #1
 392 000a 02D1     		bne	.L35
 393 000c 0220     		movs	r0, #2
 394              	.LVL41:
 395              	.L32:
 725:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 396              		.loc 1 725 0
 397 000e 02B0     		add	sp, sp, #8
 398              	.LCFI11:
 399              		.cfi_remember_state
 400              		.cfi_def_cfa_offset 8
 401              		@ sp needed
 402 0010 10BD     		pop	{r4, pc}
 403              	.LVL42:
 404              	.L35:
 405              	.LCFI12:
 406              		.cfi_restore_state
 407 0012 0446     		mov	r4, r0
 710:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 408              		.loc 1 710 0 discriminator 2
 409 0014 0120     		movs	r0, #1
 410              	.LVL43:
 411 0016 84F85800 		strb	r0, [r4, #88]
 713:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 412              		.loc 1 713 0 discriminator 2
 413 001a 0220     		movs	r0, #2
 414 001c 84F85900 		strb	r0, [r4, #89]
 716:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 415              		.loc 1 716 0 discriminator 2
 416 0020 0498     		ldr	r0, [sp, #16]
 417 0022 0090     		str	r0, [sp]
 418 0024 2046     		mov	r0, r4
ARM GAS  /tmp/ccl32WUA.s 			page 44


 419 0026 FFF7FEFF 		bl	DMA2D_SetConfig
 420              	.LVL44:
 719:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 421              		.loc 1 719 0 discriminator 2
 422 002a 2268     		ldr	r2, [r4]
 423 002c 1368     		ldr	r3, [r2]
 424 002e 43F40C53 		orr	r3, r3, #8960
 425 0032 1360     		str	r3, [r2]
 722:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 426              		.loc 1 722 0 discriminator 2
 427 0034 2268     		ldr	r2, [r4]
 428 0036 1368     		ldr	r3, [r2]
 429 0038 43F00103 		orr	r3, r3, #1
 430 003c 1360     		str	r3, [r2]
 724:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 431              		.loc 1 724 0 discriminator 2
 432 003e 0020     		movs	r0, #0
 433 0040 E5E7     		b	.L32
 434              		.cfi_endproc
 435              	.LFE146:
 437              		.section	.text.HAL_DMA2D_BlendingStart,"ax",%progbits
 438              		.align	1
 439              		.global	HAL_DMA2D_BlendingStart
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 443              		.fpu fpv5-d16
 445              	HAL_DMA2D_BlendingStart:
 446              	.LFB147:
 739:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 447              		.loc 1 739 0
 448              		.cfi_startproc
 449              		@ args = 8, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451              	.LVL45:
 452 0000 30B5     		push	{r4, r5, lr}
 453              	.LCFI13:
 454              		.cfi_def_cfa_offset 12
 455              		.cfi_offset 4, -12
 456              		.cfi_offset 5, -8
 457              		.cfi_offset 14, -4
 458 0002 83B0     		sub	sp, sp, #12
 459              	.LCFI14:
 460              		.cfi_def_cfa_offset 24
 745:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 461              		.loc 1 745 0
 462 0004 90F85840 		ldrb	r4, [r0, #88]	@ zero_extendqisi2
 463 0008 012C     		cmp	r4, #1
 464 000a 02D1     		bne	.L40
 465 000c 0220     		movs	r0, #2
 466              	.LVL46:
 467              	.L37:
 760:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 468              		.loc 1 760 0
 469 000e 03B0     		add	sp, sp, #12
 470              	.LCFI15:
 471              		.cfi_remember_state
ARM GAS  /tmp/ccl32WUA.s 			page 45


 472              		.cfi_def_cfa_offset 12
 473              		@ sp needed
 474 0010 30BD     		pop	{r4, r5, pc}
 475              	.LVL47:
 476              	.L40:
 477              	.LCFI16:
 478              		.cfi_restore_state
 479 0012 1D46     		mov	r5, r3
 480 0014 0446     		mov	r4, r0
 745:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 481              		.loc 1 745 0 discriminator 2
 482 0016 0123     		movs	r3, #1
 483              	.LVL48:
 484 0018 80F85830 		strb	r3, [r0, #88]
 748:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 485              		.loc 1 748 0 discriminator 2
 486 001c 0223     		movs	r3, #2
 487 001e 80F85930 		strb	r3, [r0, #89]
 751:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 488              		.loc 1 751 0 discriminator 2
 489 0022 0368     		ldr	r3, [r0]
 490 0024 5A61     		str	r2, [r3, #20]
 754:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 491              		.loc 1 754 0 discriminator 2
 492 0026 079B     		ldr	r3, [sp, #28]
 493 0028 0093     		str	r3, [sp]
 494 002a 069B     		ldr	r3, [sp, #24]
 495 002c 2A46     		mov	r2, r5
 496              	.LVL49:
 497 002e FFF7FEFF 		bl	DMA2D_SetConfig
 498              	.LVL50:
 757:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 499              		.loc 1 757 0 discriminator 2
 500 0032 2268     		ldr	r2, [r4]
 501 0034 1368     		ldr	r3, [r2]
 502 0036 43F00103 		orr	r3, r3, #1
 503 003a 1360     		str	r3, [r2]
 759:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 504              		.loc 1 759 0 discriminator 2
 505 003c 0020     		movs	r0, #0
 506 003e E6E7     		b	.L37
 507              		.cfi_endproc
 508              	.LFE147:
 510              		.section	.text.HAL_DMA2D_BlendingStart_IT,"ax",%progbits
 511              		.align	1
 512              		.global	HAL_DMA2D_BlendingStart_IT
 513              		.syntax unified
 514              		.thumb
 515              		.thumb_func
 516              		.fpu fpv5-d16
 518              	HAL_DMA2D_BlendingStart_IT:
 519              	.LFB148:
 774:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 520              		.loc 1 774 0
 521              		.cfi_startproc
 522              		@ args = 8, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccl32WUA.s 			page 46


 524              	.LVL51:
 525 0000 30B5     		push	{r4, r5, lr}
 526              	.LCFI17:
 527              		.cfi_def_cfa_offset 12
 528              		.cfi_offset 4, -12
 529              		.cfi_offset 5, -8
 530              		.cfi_offset 14, -4
 531 0002 83B0     		sub	sp, sp, #12
 532              	.LCFI18:
 533              		.cfi_def_cfa_offset 24
 780:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 534              		.loc 1 780 0
 535 0004 90F85840 		ldrb	r4, [r0, #88]	@ zero_extendqisi2
 536 0008 012C     		cmp	r4, #1
 537 000a 02D1     		bne	.L45
 538 000c 0220     		movs	r0, #2
 539              	.LVL52:
 540              	.L42:
 798:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 541              		.loc 1 798 0
 542 000e 03B0     		add	sp, sp, #12
 543              	.LCFI19:
 544              		.cfi_remember_state
 545              		.cfi_def_cfa_offset 12
 546              		@ sp needed
 547 0010 30BD     		pop	{r4, r5, pc}
 548              	.LVL53:
 549              	.L45:
 550              	.LCFI20:
 551              		.cfi_restore_state
 552 0012 1D46     		mov	r5, r3
 553 0014 0446     		mov	r4, r0
 780:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 554              		.loc 1 780 0 discriminator 2
 555 0016 0123     		movs	r3, #1
 556              	.LVL54:
 557 0018 80F85830 		strb	r3, [r0, #88]
 783:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 558              		.loc 1 783 0 discriminator 2
 559 001c 0223     		movs	r3, #2
 560 001e 80F85930 		strb	r3, [r0, #89]
 786:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 561              		.loc 1 786 0 discriminator 2
 562 0022 0368     		ldr	r3, [r0]
 563 0024 5A61     		str	r2, [r3, #20]
 789:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 564              		.loc 1 789 0 discriminator 2
 565 0026 079B     		ldr	r3, [sp, #28]
 566 0028 0093     		str	r3, [sp]
 567 002a 069B     		ldr	r3, [sp, #24]
 568 002c 2A46     		mov	r2, r5
 569              	.LVL55:
 570 002e FFF7FEFF 		bl	DMA2D_SetConfig
 571              	.LVL56:
 792:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 572              		.loc 1 792 0 discriminator 2
 573 0032 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccl32WUA.s 			page 47


 574 0034 1368     		ldr	r3, [r2]
 575 0036 43F40C53 		orr	r3, r3, #8960
 576 003a 1360     		str	r3, [r2]
 795:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 577              		.loc 1 795 0 discriminator 2
 578 003c 2268     		ldr	r2, [r4]
 579 003e 1368     		ldr	r3, [r2]
 580 0040 43F00103 		orr	r3, r3, #1
 581 0044 1360     		str	r3, [r2]
 797:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 582              		.loc 1 797 0 discriminator 2
 583 0046 0020     		movs	r0, #0
 584 0048 E1E7     		b	.L42
 585              		.cfi_endproc
 586              	.LFE148:
 588              		.section	.text.HAL_DMA2D_Abort,"ax",%progbits
 589              		.align	1
 590              		.global	HAL_DMA2D_Abort
 591              		.syntax unified
 592              		.thumb
 593              		.thumb_func
 594              		.fpu fpv5-d16
 596              	HAL_DMA2D_Abort:
 597              	.LFB149:
 807:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tickstart;
 598              		.loc 1 807 0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 0
 601              		@ frame_needed = 0, uses_anonymous_args = 0
 602              	.LVL57:
 603 0000 38B5     		push	{r3, r4, r5, lr}
 604              	.LCFI21:
 605              		.cfi_def_cfa_offset 16
 606              		.cfi_offset 3, -16
 607              		.cfi_offset 4, -12
 608              		.cfi_offset 5, -8
 609              		.cfi_offset 14, -4
 610 0002 0446     		mov	r4, r0
 814:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 611              		.loc 1 814 0
 612 0004 0268     		ldr	r2, [r0]
 613 0006 1368     		ldr	r3, [r2]
 614 0008 23F00503 		bic	r3, r3, #5
 615 000c 43F00403 		orr	r3, r3, #4
 616 0010 1360     		str	r3, [r2]
 817:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 617              		.loc 1 817 0
 618 0012 FFF7FEFF 		bl	HAL_GetTick
 619              	.LVL58:
 620 0016 0546     		mov	r5, r0
 621              	.LVL59:
 622              	.L47:
 820:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 623              		.loc 1 820 0
 624 0018 2368     		ldr	r3, [r4]
 625 001a 1A68     		ldr	r2, [r3]
 626 001c 12F0010F 		tst	r2, #1
ARM GAS  /tmp/ccl32WUA.s 			page 48


 627 0020 10D0     		beq	.L51
 822:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 628              		.loc 1 822 0
 629 0022 FFF7FEFF 		bl	HAL_GetTick
 630              	.LVL60:
 631 0026 401B     		subs	r0, r0, r5
 632 0028 B0F57A7F 		cmp	r0, #1000
 633 002c F4D9     		bls	.L47
 825:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 634              		.loc 1 825 0
 635 002e E36D     		ldr	r3, [r4, #92]
 636 0030 43F02003 		orr	r3, r3, #32
 637 0034 E365     		str	r3, [r4, #92]
 828:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 638              		.loc 1 828 0
 639 0036 0320     		movs	r0, #3
 640 0038 84F85900 		strb	r0, [r4, #89]
 831:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 641              		.loc 1 831 0
 642 003c 0023     		movs	r3, #0
 643 003e 84F85830 		strb	r3, [r4, #88]
 833:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 644              		.loc 1 833 0
 645 0042 38BD     		pop	{r3, r4, r5, pc}
 646              	.LVL61:
 647              	.L51:
 838:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 648              		.loc 1 838 0
 649 0044 1A68     		ldr	r2, [r3]
 650 0046 22F40C52 		bic	r2, r2, #8960
 651 004a 1A60     		str	r2, [r3]
 841:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 652              		.loc 1 841 0
 653 004c 0123     		movs	r3, #1
 654 004e 84F85930 		strb	r3, [r4, #89]
 844:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 655              		.loc 1 844 0
 656 0052 0020     		movs	r0, #0
 657 0054 84F85800 		strb	r0, [r4, #88]
 847:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 658              		.loc 1 847 0
 659 0058 38BD     		pop	{r3, r4, r5, pc}
 660              		.cfi_endproc
 661              	.LFE149:
 663              		.section	.text.HAL_DMA2D_Suspend,"ax",%progbits
 664              		.align	1
 665              		.global	HAL_DMA2D_Suspend
 666              		.syntax unified
 667              		.thumb
 668              		.thumb_func
 669              		.fpu fpv5-d16
 671              	HAL_DMA2D_Suspend:
 672              	.LFB150:
 856:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tickstart;
 673              		.loc 1 856 0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccl32WUA.s 			page 49


 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677              	.LVL62:
 678 0000 38B5     		push	{r3, r4, r5, lr}
 679              	.LCFI22:
 680              		.cfi_def_cfa_offset 16
 681              		.cfi_offset 3, -16
 682              		.cfi_offset 4, -12
 683              		.cfi_offset 5, -8
 684              		.cfi_offset 14, -4
 685 0002 0446     		mov	r4, r0
 863:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 686              		.loc 1 863 0
 687 0004 0268     		ldr	r2, [r0]
 688 0006 1368     		ldr	r3, [r2]
 689 0008 23F00303 		bic	r3, r3, #3
 690 000c 43F00203 		orr	r3, r3, #2
 691 0010 1360     		str	r3, [r2]
 866:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 692              		.loc 1 866 0
 693 0012 FFF7FEFF 		bl	HAL_GetTick
 694              	.LVL63:
 695 0016 0546     		mov	r5, r0
 696              	.LVL64:
 697              	.L53:
 869:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 698              		.loc 1 869 0
 699 0018 2268     		ldr	r2, [r4]
 700 001a 1368     		ldr	r3, [r2]
 701 001c 03F00303 		and	r3, r3, #3
 702 0020 012B     		cmp	r3, #1
 703 0022 0DD1     		bne	.L58
 871:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 704              		.loc 1 871 0
 705 0024 FFF7FEFF 		bl	HAL_GetTick
 706              	.LVL65:
 707 0028 401B     		subs	r0, r0, r5
 708 002a B0F57A7F 		cmp	r0, #1000
 709 002e F3D9     		bls	.L53
 874:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 710              		.loc 1 874 0
 711 0030 E36D     		ldr	r3, [r4, #92]
 712 0032 43F02003 		orr	r3, r3, #32
 713 0036 E365     		str	r3, [r4, #92]
 877:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 714              		.loc 1 877 0
 715 0038 0320     		movs	r0, #3
 716 003a 84F85900 		strb	r0, [r4, #89]
 879:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 717              		.loc 1 879 0
 718 003e 38BD     		pop	{r3, r4, r5, pc}
 719              	.LVL66:
 720              	.L58:
 884:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 721              		.loc 1 884 0
 722 0040 1368     		ldr	r3, [r2]
 723 0042 13F0010F 		tst	r3, #1
 724 0046 05D1     		bne	.L59
ARM GAS  /tmp/ccl32WUA.s 			page 50


 892:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 725              		.loc 1 892 0
 726 0048 1368     		ldr	r3, [r2]
 727 004a 23F00203 		bic	r3, r3, #2
 728 004e 1360     		str	r3, [r2]
 895:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 729              		.loc 1 895 0
 730 0050 0020     		movs	r0, #0
 896:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 731              		.loc 1 896 0
 732 0052 38BD     		pop	{r3, r4, r5, pc}
 733              	.LVL67:
 734              	.L59:
 886:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 735              		.loc 1 886 0
 736 0054 0523     		movs	r3, #5
 737 0056 84F85930 		strb	r3, [r4, #89]
 895:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 738              		.loc 1 895 0
 739 005a 0020     		movs	r0, #0
 740 005c 38BD     		pop	{r3, r4, r5, pc}
 741              		.cfi_endproc
 742              	.LFE150:
 744              		.section	.text.HAL_DMA2D_Resume,"ax",%progbits
 745              		.align	1
 746              		.global	HAL_DMA2D_Resume
 747              		.syntax unified
 748              		.thumb
 749              		.thumb_func
 750              		.fpu fpv5-d16
 752              	HAL_DMA2D_Resume:
 753              	.LFB151:
 905:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the SUSP and START bits */
 754              		.loc 1 905 0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 0
 757              		@ frame_needed = 0, uses_anonymous_args = 0
 758              		@ link register save eliminated.
 759              	.LVL68:
 907:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 760              		.loc 1 907 0
 761 0000 0368     		ldr	r3, [r0]
 762 0002 1A68     		ldr	r2, [r3]
 763 0004 02F00302 		and	r2, r2, #3
 764 0008 032A     		cmp	r2, #3
 765 000a 05D0     		beq	.L62
 766              	.L61:
 917:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 767              		.loc 1 917 0
 768 000c 1A68     		ldr	r2, [r3]
 769 000e 22F00302 		bic	r2, r2, #3
 770 0012 1A60     		str	r2, [r3]
 920:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 771              		.loc 1 920 0
 772 0014 0020     		movs	r0, #0
 773              	.LVL69:
 774 0016 7047     		bx	lr
ARM GAS  /tmp/ccl32WUA.s 			page 51


 775              	.LVL70:
 776              	.L62:
 910:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 777              		.loc 1 910 0
 778 0018 0222     		movs	r2, #2
 779 001a 80F85920 		strb	r2, [r0, #89]
 780 001e F5E7     		b	.L61
 781              		.cfi_endproc
 782              	.LFE151:
 784              		.section	.text.HAL_DMA2D_EnableCLUT,"ax",%progbits
 785              		.align	1
 786              		.global	HAL_DMA2D_EnableCLUT
 787              		.syntax unified
 788              		.thumb
 789              		.thumb_func
 790              		.fpu fpv5-d16
 792              	HAL_DMA2D_EnableCLUT:
 793              	.LFB152:
 933:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 794              		.loc 1 933 0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 0
 797              		@ frame_needed = 0, uses_anonymous_args = 0
 798              		@ link register save eliminated.
 799              	.LVL71:
 938:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 800              		.loc 1 938 0
 801 0000 90F85830 		ldrb	r3, [r0, #88]	@ zero_extendqisi2
 802 0004 012B     		cmp	r3, #1
 803 0006 14D0     		beq	.L66
 938:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 804              		.loc 1 938 0 is_stmt 0 discriminator 2
 805 0008 0123     		movs	r3, #1
 806 000a 80F85830 		strb	r3, [r0, #88]
 941:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 807              		.loc 1 941 0 is_stmt 1 discriminator 2
 808 000e 0223     		movs	r3, #2
 809 0010 80F85930 		strb	r3, [r0, #89]
 943:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 810              		.loc 1 943 0 discriminator 2
 811 0014 31B1     		cbz	r1, .L67
 951:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 812              		.loc 1 951 0
 813 0016 0268     		ldr	r2, [r0]
 814 0018 D369     		ldr	r3, [r2, #28]
 815 001a 43F02003 		orr	r3, r3, #32
 816 001e D361     		str	r3, [r2, #28]
 954:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 817              		.loc 1 954 0
 818 0020 0020     		movs	r0, #0
 819              	.LVL72:
 820 0022 7047     		bx	lr
 821              	.LVL73:
 822              	.L67:
 946:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 823              		.loc 1 946 0
 824 0024 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccl32WUA.s 			page 52


 825 0026 536A     		ldr	r3, [r2, #36]
 826 0028 43F02003 		orr	r3, r3, #32
 827 002c 5362     		str	r3, [r2, #36]
 954:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 828              		.loc 1 954 0
 829 002e 0020     		movs	r0, #0
 830              	.LVL74:
 831 0030 7047     		bx	lr
 832              	.LVL75:
 833              	.L66:
 938:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 834              		.loc 1 938 0
 835 0032 0220     		movs	r0, #2
 836              	.LVL76:
 955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 837              		.loc 1 955 0
 838 0034 7047     		bx	lr
 839              		.cfi_endproc
 840              	.LFE152:
 842              		.section	.text.HAL_DMA2D_CLUTLoad,"ax",%progbits
 843              		.align	1
 844              		.global	HAL_DMA2D_CLUTLoad
 845              		.syntax unified
 846              		.thumb
 847              		.thumb_func
 848              		.fpu fpv5-d16
 850              	HAL_DMA2D_CLUTLoad:
 851              	.LFB153:
 971:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 852              		.loc 1 971 0
 853              		.cfi_startproc
 854              		@ args = 4, pretend = 0, frame = 16
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 856              		@ link register save eliminated.
 857              	.LVL77:
 858 0000 10B4     		push	{r4}
 859              	.LCFI23:
 860              		.cfi_def_cfa_offset 4
 861              		.cfi_offset 4, -4
 862 0002 85B0     		sub	sp, sp, #20
 863              	.LCFI24:
 864              		.cfi_def_cfa_offset 24
 865 0004 04AC     		add	r4, sp, #16
 866 0006 04E90E00 		stmdb	r4, {r1, r2, r3}
 978:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 867              		.loc 1 978 0
 868 000a 90F85830 		ldrb	r3, [r0, #88]	@ zero_extendqisi2
 869 000e 012B     		cmp	r3, #1
 870 0010 31D0     		beq	.L71
 978:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 871              		.loc 1 978 0 is_stmt 0 discriminator 2
 872 0012 0123     		movs	r3, #1
 873 0014 80F85830 		strb	r3, [r0, #88]
 981:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 874              		.loc 1 981 0 is_stmt 1 discriminator 2
 875 0018 0223     		movs	r3, #2
 876 001a 80F85930 		strb	r3, [r0, #89]
ARM GAS  /tmp/ccl32WUA.s 			page 53


 984:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 877              		.loc 1 984 0 discriminator 2
 878 001e 069B     		ldr	r3, [sp, #24]
 879 0020 A3B1     		cbz	r3, .L73
1000:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 880              		.loc 1 1000 0
 881 0022 0368     		ldr	r3, [r0]
 882 0024 019A     		ldr	r2, [sp, #4]
 883 0026 DA62     		str	r2, [r3, #44]
1003:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_FGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_FGPFCCR_CCM_P
 884              		.loc 1 1003 0
 885 0028 0168     		ldr	r1, [r0]
 886 002a CA69     		ldr	r2, [r1, #28]
 887 002c 144B     		ldr	r3, .L74
 888 002e 1340     		ands	r3, r3, r2
 889 0030 029A     		ldr	r2, [sp, #8]
 890 0032 1201     		lsls	r2, r2, #4
 891 0034 039C     		ldr	r4, [sp, #12]
 892 0036 42EA0422 		orr	r2, r2, r4, lsl #8
 893 003a 1343     		orrs	r3, r3, r2
 894 003c CB61     		str	r3, [r1, #28]
1007:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 895              		.loc 1 1007 0
 896 003e 0268     		ldr	r2, [r0]
 897 0040 D369     		ldr	r3, [r2, #28]
 898 0042 43F02003 		orr	r3, r3, #32
 899 0046 D361     		str	r3, [r2, #28]
1010:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 900              		.loc 1 1010 0
 901 0048 0020     		movs	r0, #0
 902              	.LVL78:
 903 004a 15E0     		b	.L69
 904              	.LVL79:
 905              	.L73:
 987:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 906              		.loc 1 987 0
 907 004c 0368     		ldr	r3, [r0]
 908 004e 019A     		ldr	r2, [sp, #4]
 909 0050 1A63     		str	r2, [r3, #48]
 990:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_BGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_BGPFCCR_CCM_P
 910              		.loc 1 990 0
 911 0052 0168     		ldr	r1, [r0]
 912 0054 4A6A     		ldr	r2, [r1, #36]
 913 0056 0A4B     		ldr	r3, .L74
 914 0058 1340     		ands	r3, r3, r2
 915 005a 029A     		ldr	r2, [sp, #8]
 916 005c 1201     		lsls	r2, r2, #4
 917 005e 039C     		ldr	r4, [sp, #12]
 918 0060 42EA0422 		orr	r2, r2, r4, lsl #8
 919 0064 1343     		orrs	r3, r3, r2
 920 0066 4B62     		str	r3, [r1, #36]
 994:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 921              		.loc 1 994 0
 922 0068 0268     		ldr	r2, [r0]
 923 006a 536A     		ldr	r3, [r2, #36]
 924 006c 43F02003 		orr	r3, r3, #32
 925 0070 5362     		str	r3, [r2, #36]
ARM GAS  /tmp/ccl32WUA.s 			page 54


1010:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 926              		.loc 1 1010 0
 927 0072 0020     		movs	r0, #0
 928              	.LVL80:
 929 0074 00E0     		b	.L69
 930              	.LVL81:
 931              	.L71:
 978:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 932              		.loc 1 978 0
 933 0076 0220     		movs	r0, #2
 934              	.LVL82:
 935              	.L69:
1011:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 936              		.loc 1 1011 0
 937 0078 05B0     		add	sp, sp, #20
 938              	.LCFI25:
 939              		.cfi_def_cfa_offset 4
 940              		@ sp needed
 941 007a 5DF8044B 		ldr	r4, [sp], #4
 942              	.LCFI26:
 943              		.cfi_restore 4
 944              		.cfi_def_cfa_offset 0
 945              	.LVL83:
 946 007e 7047     		bx	lr
 947              	.L75:
 948              		.align	2
 949              	.L74:
 950 0080 EF00FFFF 		.word	-65297
 951              		.cfi_endproc
 952              	.LFE153:
 954              		.section	.text.HAL_DMA2D_CLUTLoad_IT,"ax",%progbits
 955              		.align	1
 956              		.global	HAL_DMA2D_CLUTLoad_IT
 957              		.syntax unified
 958              		.thumb
 959              		.thumb_func
 960              		.fpu fpv5-d16
 962              	HAL_DMA2D_CLUTLoad_IT:
 963              	.LFB154:
1025:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 964              		.loc 1 1025 0
 965              		.cfi_startproc
 966              		@ args = 4, pretend = 0, frame = 16
 967              		@ frame_needed = 0, uses_anonymous_args = 0
 968              		@ link register save eliminated.
 969              	.LVL84:
 970 0000 10B4     		push	{r4}
 971              	.LCFI27:
 972              		.cfi_def_cfa_offset 4
 973              		.cfi_offset 4, -4
 974 0002 85B0     		sub	sp, sp, #20
 975              	.LCFI28:
 976              		.cfi_def_cfa_offset 24
 977 0004 04AC     		add	r4, sp, #16
 978 0006 04E90E00 		stmdb	r4, {r1, r2, r3}
1032:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 979              		.loc 1 1032 0
ARM GAS  /tmp/ccl32WUA.s 			page 55


 980 000a 90F85830 		ldrb	r3, [r0, #88]	@ zero_extendqisi2
 981 000e 012B     		cmp	r3, #1
 982 0010 3BD0     		beq	.L79
1032:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 983              		.loc 1 1032 0 is_stmt 0 discriminator 2
 984 0012 0123     		movs	r3, #1
 985 0014 80F85830 		strb	r3, [r0, #88]
1035:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 986              		.loc 1 1035 0 is_stmt 1 discriminator 2
 987 0018 0223     		movs	r3, #2
 988 001a 80F85930 		strb	r3, [r0, #89]
1038:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 989              		.loc 1 1038 0 discriminator 2
 990 001e 069B     		ldr	r3, [sp, #24]
 991 0020 CBB1     		cbz	r3, .L81
1057:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 992              		.loc 1 1057 0
 993 0022 0368     		ldr	r3, [r0]
 994 0024 019A     		ldr	r2, [sp, #4]
 995 0026 DA62     		str	r2, [r3, #44]
1060:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_FGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_FGPFCCR_CCM_P
 996              		.loc 1 1060 0
 997 0028 0168     		ldr	r1, [r0]
 998 002a CA69     		ldr	r2, [r1, #28]
 999 002c 194B     		ldr	r3, .L82
 1000 002e 1340     		ands	r3, r3, r2
 1001 0030 029A     		ldr	r2, [sp, #8]
 1002 0032 1201     		lsls	r2, r2, #4
 1003 0034 039C     		ldr	r4, [sp, #12]
 1004 0036 42EA0422 		orr	r2, r2, r4, lsl #8
 1005 003a 1343     		orrs	r3, r3, r2
 1006 003c CB61     		str	r3, [r1, #28]
1064:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1007              		.loc 1 1064 0
 1008 003e 0268     		ldr	r2, [r0]
 1009 0040 1368     		ldr	r3, [r2]
 1010 0042 43F46453 		orr	r3, r3, #14592
 1011 0046 1360     		str	r3, [r2]
1067:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1012              		.loc 1 1067 0
 1013 0048 0268     		ldr	r2, [r0]
 1014 004a D369     		ldr	r3, [r2, #28]
 1015 004c 43F02003 		orr	r3, r3, #32
 1016 0050 D361     		str	r3, [r2, #28]
1070:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 1017              		.loc 1 1070 0
 1018 0052 0020     		movs	r0, #0
 1019              	.LVL85:
 1020 0054 1AE0     		b	.L77
 1021              	.LVL86:
 1022              	.L81:
1041:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1023              		.loc 1 1041 0
 1024 0056 0368     		ldr	r3, [r0]
 1025 0058 019A     		ldr	r2, [sp, #4]
 1026 005a 1A63     		str	r2, [r3, #48]
1044:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_BGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_BGPFCCR_CCM_P
ARM GAS  /tmp/ccl32WUA.s 			page 56


 1027              		.loc 1 1044 0
 1028 005c 0168     		ldr	r1, [r0]
 1029 005e 4A6A     		ldr	r2, [r1, #36]
 1030 0060 0C4B     		ldr	r3, .L82
 1031 0062 1340     		ands	r3, r3, r2
 1032 0064 029A     		ldr	r2, [sp, #8]
 1033 0066 1201     		lsls	r2, r2, #4
 1034 0068 039C     		ldr	r4, [sp, #12]
 1035 006a 42EA0422 		orr	r2, r2, r4, lsl #8
 1036 006e 1343     		orrs	r3, r3, r2
 1037 0070 4B62     		str	r3, [r1, #36]
1048:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1038              		.loc 1 1048 0
 1039 0072 0268     		ldr	r2, [r0]
 1040 0074 1368     		ldr	r3, [r2]
 1041 0076 43F46453 		orr	r3, r3, #14592
 1042 007a 1360     		str	r3, [r2]
1051:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1043              		.loc 1 1051 0
 1044 007c 0268     		ldr	r2, [r0]
 1045 007e 536A     		ldr	r3, [r2, #36]
 1046 0080 43F02003 		orr	r3, r3, #32
 1047 0084 5362     		str	r3, [r2, #36]
1070:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 1048              		.loc 1 1070 0
 1049 0086 0020     		movs	r0, #0
 1050              	.LVL87:
 1051 0088 00E0     		b	.L77
 1052              	.LVL88:
 1053              	.L79:
1032:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1054              		.loc 1 1032 0
 1055 008a 0220     		movs	r0, #2
 1056              	.LVL89:
 1057              	.L77:
1071:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1058              		.loc 1 1071 0
 1059 008c 05B0     		add	sp, sp, #20
 1060              	.LCFI29:
 1061              		.cfi_def_cfa_offset 4
 1062              		@ sp needed
 1063 008e 5DF8044B 		ldr	r4, [sp], #4
 1064              	.LCFI30:
 1065              		.cfi_restore 4
 1066              		.cfi_def_cfa_offset 0
 1067              	.LVL90:
 1068 0092 7047     		bx	lr
 1069              	.L83:
 1070              		.align	2
 1071              	.L82:
 1072 0094 EF00FFFF 		.word	-65297
 1073              		.cfi_endproc
 1074              	.LFE154:
 1076              		.section	.text.HAL_DMA2D_CLUTLoading_Abort,"ax",%progbits
 1077              		.align	1
 1078              		.global	HAL_DMA2D_CLUTLoading_Abort
 1079              		.syntax unified
ARM GAS  /tmp/ccl32WUA.s 			page 57


 1080              		.thumb
 1081              		.thumb_func
 1082              		.fpu fpv5-d16
 1084              	HAL_DMA2D_CLUTLoading_Abort:
 1085              	.LFB155:
1083:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tickstart;
 1086              		.loc 1 1083 0
 1087              		.cfi_startproc
 1088              		@ args = 0, pretend = 0, frame = 0
 1089              		@ frame_needed = 0, uses_anonymous_args = 0
 1090              	.LVL91:
 1091 0000 70B5     		push	{r4, r5, r6, lr}
 1092              	.LCFI31:
 1093              		.cfi_def_cfa_offset 16
 1094              		.cfi_offset 4, -16
 1095              		.cfi_offset 5, -12
 1096              		.cfi_offset 6, -8
 1097              		.cfi_offset 14, -4
 1098 0002 0646     		mov	r6, r0
1085:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1099              		.loc 1 1085 0
 1100 0004 0368     		ldr	r3, [r0]
 1101 0006 03F12404 		add	r4, r3, #36
 1102              	.LVL92:
1088:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1103              		.loc 1 1088 0
 1104 000a 1A68     		ldr	r2, [r3]
 1105 000c 42F00402 		orr	r2, r2, #4
 1106 0010 1A60     		str	r2, [r3]
1091:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1107              		.loc 1 1091 0
 1108 0012 0129     		cmp	r1, #1
 1109 0014 17D0     		beq	.L90
 1110              	.L85:
1098:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1111              		.loc 1 1098 0
 1112 0016 FFF7FEFF 		bl	HAL_GetTick
 1113              	.LVL93:
 1114 001a 0546     		mov	r5, r0
 1115              	.LVL94:
 1116              	.L86:
1101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1117              		.loc 1 1101 0
 1118 001c 2368     		ldr	r3, [r4]
 1119 001e 13F0200F 		tst	r3, #32
 1120 0022 13D0     		beq	.L91
1103:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 1121              		.loc 1 1103 0
 1122 0024 FFF7FEFF 		bl	HAL_GetTick
 1123              	.LVL95:
 1124 0028 401B     		subs	r0, r0, r5
 1125 002a B0F57A7F 		cmp	r0, #1000
 1126 002e F5D9     		bls	.L86
1106:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1127              		.loc 1 1106 0
 1128 0030 F36D     		ldr	r3, [r6, #92]
 1129 0032 43F02003 		orr	r3, r3, #32
ARM GAS  /tmp/ccl32WUA.s 			page 58


 1130 0036 F365     		str	r3, [r6, #92]
1109:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1131              		.loc 1 1109 0
 1132 0038 0320     		movs	r0, #3
 1133 003a 86F85900 		strb	r0, [r6, #89]
1112:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1134              		.loc 1 1112 0
 1135 003e 0023     		movs	r3, #0
 1136 0040 86F85830 		strb	r3, [r6, #88]
1114:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 1137              		.loc 1 1114 0
 1138 0044 70BD     		pop	{r4, r5, r6, pc}
 1139              	.LVL96:
 1140              	.L90:
1093:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1141              		.loc 1 1093 0
 1142 0046 0468     		ldr	r4, [r0]
 1143              	.LVL97:
 1144 0048 1C34     		adds	r4, r4, #28
 1145              	.LVL98:
 1146 004a E4E7     		b	.L85
 1147              	.LVL99:
 1148              	.L91:
1119:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1149              		.loc 1 1119 0
 1150 004c 3268     		ldr	r2, [r6]
 1151 004e 1368     		ldr	r3, [r2]
 1152 0050 23F46453 		bic	r3, r3, #14592
 1153 0054 1360     		str	r3, [r2]
1122:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1154              		.loc 1 1122 0
 1155 0056 0123     		movs	r3, #1
 1156 0058 86F85930 		strb	r3, [r6, #89]
1125:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1157              		.loc 1 1125 0
 1158 005c 0020     		movs	r0, #0
 1159 005e 86F85800 		strb	r0, [r6, #88]
1128:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1160              		.loc 1 1128 0
 1161 0062 70BD     		pop	{r4, r5, r6, pc}
 1162              		.cfi_endproc
 1163              	.LFE155:
 1165              		.section	.text.HAL_DMA2D_DeInit,"ax",%progbits
 1166              		.align	1
 1167              		.global	HAL_DMA2D_DeInit
 1168              		.syntax unified
 1169              		.thumb
 1170              		.thumb_func
 1171              		.fpu fpv5-d16
 1173              	HAL_DMA2D_DeInit:
 1174              	.LFB142:
 310:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1175              		.loc 1 310 0
 1176              		.cfi_startproc
 1177              		@ args = 0, pretend = 0, frame = 0
 1178              		@ frame_needed = 0, uses_anonymous_args = 0
 1179              	.LVL100:
ARM GAS  /tmp/ccl32WUA.s 			page 59


 313:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1180              		.loc 1 313 0
 1181 0000 0028     		cmp	r0, #0
 1182 0002 42D0     		beq	.L97
 310:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1183              		.loc 1 310 0
 1184 0004 38B5     		push	{r3, r4, r5, lr}
 1185              	.LCFI32:
 1186              		.cfi_def_cfa_offset 16
 1187              		.cfi_offset 3, -16
 1188              		.cfi_offset 4, -12
 1189              		.cfi_offset 5, -8
 1190              		.cfi_offset 14, -4
 1191 0006 0446     		mov	r4, r0
 320:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1192              		.loc 1 320 0
 1193 0008 214B     		ldr	r3, .L108
 1194 000a D3F8D430 		ldr	r3, [r3, #212]
 1195 000e 13F0100F 		tst	r3, #16
 1196 0012 0CD0     		beq	.L94
 323:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 1197              		.loc 1 323 0
 1198 0014 0368     		ldr	r3, [r0]
 1199 0016 1A68     		ldr	r2, [r3]
 1200 0018 12F0010F 		tst	r2, #1
 1201 001c 21D1     		bne	.L105
 334:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 1202              		.loc 1 334 0
 1203 001e 5A6A     		ldr	r2, [r3, #36]
 1204 0020 12F0200F 		tst	r2, #32
 1205 0024 23D1     		bne	.L106
 345:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 1206              		.loc 1 345 0
 1207 0026 DB69     		ldr	r3, [r3, #28]
 1208 0028 13F0200F 		tst	r3, #32
 1209 002c 26D1     		bne	.L107
 1210              	.LVL101:
 1211              	.L94:
 358:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->IFCR     = 0x3FU;
 1212              		.loc 1 358 0
 1213 002e 2368     		ldr	r3, [r4]
 1214 0030 0025     		movs	r5, #0
 1215 0032 1D60     		str	r5, [r3]
 359:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->FGOR     =    0U;
 1216              		.loc 1 359 0
 1217 0034 2368     		ldr	r3, [r4]
 1218 0036 3F22     		movs	r2, #63
 1219 0038 9A60     		str	r2, [r3, #8]
 360:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->BGOR     =    0U;
 1220              		.loc 1 360 0
 1221 003a 2368     		ldr	r3, [r4]
 1222 003c 1D61     		str	r5, [r3, #16]
 361:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->FGPFCCR  =    0U;
 1223              		.loc 1 361 0
 1224 003e 2368     		ldr	r3, [r4]
 1225 0040 9D61     		str	r5, [r3, #24]
 362:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->BGPFCCR  =    0U;
ARM GAS  /tmp/ccl32WUA.s 			page 60


 1226              		.loc 1 362 0
 1227 0042 2368     		ldr	r3, [r4]
 1228 0044 DD61     		str	r5, [r3, #28]
 363:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->OPFCCR   =    0U;
 1229              		.loc 1 363 0
 1230 0046 2368     		ldr	r3, [r4]
 1231 0048 5D62     		str	r5, [r3, #36]
 364:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1232              		.loc 1 364 0
 1233 004a 2368     		ldr	r3, [r4]
 1234 004c 5D63     		str	r5, [r3, #52]
 378:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */
 1235              		.loc 1 378 0
 1236 004e 2046     		mov	r0, r4
 1237 0050 FFF7FEFF 		bl	HAL_DMA2D_MspDeInit
 1238              	.LVL102:
 382:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1239              		.loc 1 382 0
 1240 0054 E565     		str	r5, [r4, #92]
 385:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1241              		.loc 1 385 0
 1242 0056 84F85950 		strb	r5, [r4, #89]
 388:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1243              		.loc 1 388 0
 1244 005a 84F85850 		strb	r5, [r4, #88]
 390:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 1245              		.loc 1 390 0
 1246 005e 2846     		mov	r0, r5
 1247 0060 38BD     		pop	{r3, r4, r5, pc}
 1248              	.LVL103:
 1249              	.L105:
 325:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 1250              		.loc 1 325 0
 1251 0062 FFF7FEFF 		bl	HAL_DMA2D_Abort
 1252              	.LVL104:
 1253 0066 0028     		cmp	r0, #0
 1254 0068 E1D0     		beq	.L94
 328:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
 1255              		.loc 1 328 0
 1256 006a 0120     		movs	r0, #1
 1257 006c 38BD     		pop	{r3, r4, r5, pc}
 1258              	.LVL105:
 1259              	.L106:
 336:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 1260              		.loc 1 336 0
 1261 006e 0021     		movs	r1, #0
 1262 0070 FFF7FEFF 		bl	HAL_DMA2D_CLUTLoading_Abort
 1263              	.LVL106:
 1264 0074 0028     		cmp	r0, #0
 1265 0076 DAD0     		beq	.L94
 339:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
 1266              		.loc 1 339 0
 1267 0078 0120     		movs	r0, #1
 1268 007a 38BD     		pop	{r3, r4, r5, pc}
 1269              	.LVL107:
 1270              	.L107:
 347:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           {
ARM GAS  /tmp/ccl32WUA.s 			page 61


 1271              		.loc 1 347 0
 1272 007c 0121     		movs	r1, #1
 1273 007e FFF7FEFF 		bl	HAL_DMA2D_CLUTLoading_Abort
 1274              	.LVL108:
 1275 0082 0028     		cmp	r0, #0
 1276 0084 D3D0     		beq	.L94
 350:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           }
 1277              		.loc 1 350 0
 1278 0086 0120     		movs	r0, #1
 391:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1279              		.loc 1 391 0
 1280 0088 38BD     		pop	{r3, r4, r5, pc}
 1281              	.LVL109:
 1282              	.L97:
 1283              	.LCFI33:
 1284              		.cfi_def_cfa_offset 0
 1285              		.cfi_restore 3
 1286              		.cfi_restore 4
 1287              		.cfi_restore 5
 1288              		.cfi_restore 14
 315:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1289              		.loc 1 315 0
 1290 008a 0120     		movs	r0, #1
 1291              	.LVL110:
 1292 008c 7047     		bx	lr
 1293              	.L109:
 1294 008e 00BF     		.align	2
 1295              	.L108:
 1296 0090 00440258 		.word	1476543488
 1297              		.cfi_endproc
 1298              	.LFE142:
 1300              		.section	.text.HAL_DMA2D_CLUTLoading_Suspend,"ax",%progbits
 1301              		.align	1
 1302              		.global	HAL_DMA2D_CLUTLoading_Suspend
 1303              		.syntax unified
 1304              		.thumb
 1305              		.thumb_func
 1306              		.fpu fpv5-d16
 1308              	HAL_DMA2D_CLUTLoading_Suspend:
 1309              	.LFB156:
1140:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tickstart;
 1310              		.loc 1 1140 0
 1311              		.cfi_startproc
 1312              		@ args = 0, pretend = 0, frame = 0
 1313              		@ frame_needed = 0, uses_anonymous_args = 0
 1314              	.LVL111:
 1315 0000 70B5     		push	{r4, r5, r6, lr}
 1316              	.LCFI34:
 1317              		.cfi_def_cfa_offset 16
 1318              		.cfi_offset 4, -16
 1319              		.cfi_offset 5, -12
 1320              		.cfi_offset 6, -8
 1321              		.cfi_offset 14, -4
 1322 0002 0446     		mov	r4, r0
1143:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1323              		.loc 1 1143 0
 1324 0004 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccl32WUA.s 			page 62


 1325 0006 03F12405 		add	r5, r3, #36
 1326              	.LVL112:
1146:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1327              		.loc 1 1146 0
 1328 000a 1A68     		ldr	r2, [r3]
 1329 000c 42F00202 		orr	r2, r2, #2
 1330 0010 1A60     		str	r2, [r3]
1149:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1331              		.loc 1 1149 0
 1332 0012 0129     		cmp	r1, #1
 1333 0014 0FD0     		beq	.L124
 1334              	.L111:
1155:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1335              		.loc 1 1155 0
 1336 0016 FFF7FEFF 		bl	HAL_GetTick
 1337              	.LVL113:
 1338 001a 0646     		mov	r6, r0
 1339              	.LVL114:
1158:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   loadsuspended |= ((*reg & DMA2D_BGPFCCR_START) != DMA2D_BGPFCCR_START)? 1UL: 0UL; /*2nd condition
 1340              		.loc 1 1158 0
 1341 001c 2368     		ldr	r3, [r4]
 1342 001e 1B68     		ldr	r3, [r3]
 1343 0020 13F00203 		ands	r3, r3, #2
 1344 0024 00D0     		beq	.L112
 1345 0026 0123     		movs	r3, #1
 1346              	.L112:
 1347              	.LVL115:
1159:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   while (loadsuspended == 0UL)
 1348              		.loc 1 1159 0 discriminator 4
 1349 0028 2A68     		ldr	r2, [r5]
 1350 002a 12F0200F 		tst	r2, #32
 1351 002e 05D1     		bne	.L121
1159:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   while (loadsuspended == 0UL)
 1352              		.loc 1 1159 0 is_stmt 0
 1353 0030 0122     		movs	r2, #1
 1354              	.L113:
1159:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   while (loadsuspended == 0UL)
 1355              		.loc 1 1159 0 discriminator 4
 1356 0032 1343     		orrs	r3, r3, r2
 1357              	.LVL116:
1160:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1358              		.loc 1 1160 0 is_stmt 1 discriminator 4
 1359 0034 0EE0     		b	.L114
 1360              	.LVL117:
 1361              	.L124:
1151:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1362              		.loc 1 1151 0
 1363 0036 0568     		ldr	r5, [r0]
 1364              	.LVL118:
 1365 0038 1C35     		adds	r5, r5, #28
 1366              	.LVL119:
 1367 003a ECE7     		b	.L111
 1368              	.LVL120:
 1369              	.L121:
1159:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   while (loadsuspended == 0UL)
 1370              		.loc 1 1159 0
 1371 003c 0022     		movs	r2, #0
ARM GAS  /tmp/ccl32WUA.s 			page 63


 1372 003e F8E7     		b	.L113
 1373              	.LVL121:
 1374              	.L126:
1165:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1375              		.loc 1 1165 0
 1376 0040 E36D     		ldr	r3, [r4, #92]
 1377 0042 43F02003 		orr	r3, r3, #32
 1378 0046 E365     		str	r3, [r4, #92]
1168:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1379              		.loc 1 1168 0
 1380 0048 0320     		movs	r0, #3
 1381 004a 84F85900 		strb	r0, [r4, #89]
1170:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 1382              		.loc 1 1170 0
 1383 004e 70BD     		pop	{r4, r5, r6, pc}
 1384              	.LVL122:
 1385              	.L122:
1173:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1386              		.loc 1 1173 0
 1387 0050 0022     		movs	r2, #0
 1388              	.L118:
1173:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1389              		.loc 1 1173 0 is_stmt 0 discriminator 4
 1390 0052 1343     		orrs	r3, r3, r2
 1391              	.LVL123:
 1392              	.L114:
1160:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1393              		.loc 1 1160 0 is_stmt 1
 1394 0054 8BB9     		cbnz	r3, .L125
1162:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 1395              		.loc 1 1162 0
 1396 0056 FFF7FEFF 		bl	HAL_GetTick
 1397              	.LVL124:
 1398 005a 801B     		subs	r0, r0, r6
 1399 005c B0F57A7F 		cmp	r0, #1000
 1400 0060 EED8     		bhi	.L126
1172:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     loadsuspended |= ((*reg & DMA2D_BGPFCCR_START) != DMA2D_BGPFCCR_START)? 1UL: 0UL; /*2nd conditi
 1401              		.loc 1 1172 0
 1402 0062 2368     		ldr	r3, [r4]
 1403 0064 1B68     		ldr	r3, [r3]
 1404 0066 13F00203 		ands	r3, r3, #2
 1405 006a 00D0     		beq	.L117
 1406 006c 0123     		movs	r3, #1
 1407              	.L117:
 1408              	.LVL125:
1173:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1409              		.loc 1 1173 0 discriminator 4
 1410 006e 2A68     		ldr	r2, [r5]
 1411 0070 12F0200F 		tst	r2, #32
 1412 0074 ECD1     		bne	.L122
1173:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1413              		.loc 1 1173 0 is_stmt 0
 1414 0076 0122     		movs	r2, #1
 1415 0078 EBE7     		b	.L118
 1416              	.L125:
1177:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1417              		.loc 1 1177 0 is_stmt 1
ARM GAS  /tmp/ccl32WUA.s 			page 64


 1418 007a 2B68     		ldr	r3, [r5]
 1419              	.LVL126:
 1420 007c 13F0200F 		tst	r3, #32
 1421 0080 06D1     		bne	.L127
1185:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1422              		.loc 1 1185 0
 1423 0082 2268     		ldr	r2, [r4]
 1424 0084 1368     		ldr	r3, [r2]
 1425 0086 23F00203 		bic	r3, r3, #2
 1426 008a 1360     		str	r3, [r2]
1188:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 1427              		.loc 1 1188 0
 1428 008c 0020     		movs	r0, #0
1189:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1429              		.loc 1 1189 0
 1430 008e 70BD     		pop	{r4, r5, r6, pc}
 1431              	.LVL127:
 1432              	.L127:
1179:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1433              		.loc 1 1179 0
 1434 0090 0523     		movs	r3, #5
 1435 0092 84F85930 		strb	r3, [r4, #89]
1188:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 1436              		.loc 1 1188 0
 1437 0096 0020     		movs	r0, #0
 1438 0098 70BD     		pop	{r4, r5, r6, pc}
 1439              		.cfi_endproc
 1440              	.LFE156:
 1442              		.section	.text.HAL_DMA2D_CLUTLoading_Resume,"ax",%progbits
 1443              		.align	1
 1444              		.global	HAL_DMA2D_CLUTLoading_Resume
 1445              		.syntax unified
 1446              		.thumb
 1447              		.thumb_func
 1448              		.fpu fpv5-d16
 1450              	HAL_DMA2D_CLUTLoading_Resume:
 1451              	.LFB157:
1201:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the SUSP and START bits for background or foreground CLUT loading */
 1452              		.loc 1 1201 0
 1453              		.cfi_startproc
 1454              		@ args = 0, pretend = 0, frame = 0
 1455              		@ frame_needed = 0, uses_anonymous_args = 0
 1456              		@ link register save eliminated.
 1457              	.LVL128:
1203:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1458              		.loc 1 1203 0
 1459 0000 61B9     		cbnz	r1, .L129
1206:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 1460              		.loc 1 1206 0
 1461 0002 0368     		ldr	r3, [r0]
 1462 0004 1A68     		ldr	r2, [r3]
 1463 0006 12F0020F 		tst	r2, #2
 1464 000a 13D0     		beq	.L130
1208:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 1465              		.loc 1 1208 0
 1466 000c 5B6A     		ldr	r3, [r3, #36]
 1467 000e 13F0200F 		tst	r3, #32
ARM GAS  /tmp/ccl32WUA.s 			page 65


 1468 0012 0FD0     		beq	.L130
1211:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 1469              		.loc 1 1211 0
 1470 0014 0223     		movs	r3, #2
 1471 0016 80F85930 		strb	r3, [r0, #89]
 1472 001a 0BE0     		b	.L130
 1473              	.L129:
1218:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 1474              		.loc 1 1218 0
 1475 001c 0368     		ldr	r3, [r0]
 1476 001e 1A68     		ldr	r2, [r3]
 1477 0020 12F0020F 		tst	r2, #2
 1478 0024 06D0     		beq	.L130
1220:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 1479              		.loc 1 1220 0
 1480 0026 DB69     		ldr	r3, [r3, #28]
 1481 0028 13F0200F 		tst	r3, #32
 1482 002c 02D0     		beq	.L130
1223:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 1483              		.loc 1 1223 0
 1484 002e 0223     		movs	r3, #2
 1485 0030 80F85930 		strb	r3, [r0, #89]
 1486              	.L130:
1229:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1487              		.loc 1 1229 0
 1488 0034 0268     		ldr	r2, [r0]
 1489 0036 1368     		ldr	r3, [r2]
 1490 0038 23F00203 		bic	r3, r3, #2
 1491 003c 1360     		str	r3, [r2]
1232:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1492              		.loc 1 1232 0
 1493 003e 0020     		movs	r0, #0
 1494              	.LVL129:
 1495 0040 7047     		bx	lr
 1496              		.cfi_endproc
 1497              	.LFE157:
 1499              		.section	.text.HAL_DMA2D_PollForTransfer,"ax",%progbits
 1500              		.align	1
 1501              		.global	HAL_DMA2D_PollForTransfer
 1502              		.syntax unified
 1503              		.thumb
 1504              		.thumb_func
 1505              		.fpu fpv5-d16
 1507              	HAL_DMA2D_PollForTransfer:
 1508              	.LFB158:
1244:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tickstart;
 1509              		.loc 1 1244 0
 1510              		.cfi_startproc
 1511              		@ args = 0, pretend = 0, frame = 8
 1512              		@ frame_needed = 0, uses_anonymous_args = 0
 1513              	.LVL130:
 1514 0000 70B5     		push	{r4, r5, r6, lr}
 1515              	.LCFI35:
 1516              		.cfi_def_cfa_offset 16
 1517              		.cfi_offset 4, -16
 1518              		.cfi_offset 5, -12
 1519              		.cfi_offset 6, -8
ARM GAS  /tmp/ccl32WUA.s 			page 66


 1520              		.cfi_offset 14, -4
 1521 0002 82B0     		sub	sp, sp, #8
 1522              	.LCFI36:
 1523              		.cfi_def_cfa_offset 24
 1524 0004 0446     		mov	r4, r0
 1525 0006 0D46     		mov	r5, r1
1247:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1526              		.loc 1 1247 0
 1527 0008 0023     		movs	r3, #0
 1528 000a 0193     		str	r3, [sp, #4]
1250:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1529              		.loc 1 1250 0
 1530 000c 0368     		ldr	r3, [r0]
 1531 000e 1B68     		ldr	r3, [r3]
 1532 0010 13F0010F 		tst	r3, #1
 1533 0014 11D1     		bne	.L151
 1534              	.LVL131:
 1535              	.L132:
1299:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   layer_start |= hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START;
 1536              		.loc 1 1299 0
 1537 0016 2268     		ldr	r2, [r4]
 1538 0018 D369     		ldr	r3, [r2, #28]
 1539              	.LVL132:
1300:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (layer_start != 0U)
 1540              		.loc 1 1300 0
 1541 001a 526A     		ldr	r2, [r2, #36]
 1542 001c 1343     		orrs	r3, r3, r2
 1543              	.LVL133:
1301:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1544              		.loc 1 1301 0
 1545 001e 13F0200F 		tst	r3, #32
 1546 0022 47D1     		bne	.L152
 1547              	.LVL134:
 1548              	.L141:
1355:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1549              		.loc 1 1355 0
 1550 0024 2368     		ldr	r3, [r4]
 1551 0026 1222     		movs	r2, #18
 1552 0028 9A60     		str	r2, [r3, #8]
1358:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1553              		.loc 1 1358 0
 1554 002a 0123     		movs	r3, #1
 1555 002c 84F85930 		strb	r3, [r4, #89]
1361:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1556              		.loc 1 1361 0
 1557 0030 0020     		movs	r0, #0
 1558 0032 84F85800 		strb	r0, [r4, #88]
 1559              	.L137:
1364:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 1560              		.loc 1 1364 0
 1561 0036 02B0     		add	sp, sp, #8
 1562              	.LCFI37:
 1563              		.cfi_remember_state
 1564              		.cfi_def_cfa_offset 16
 1565              		@ sp needed
 1566 0038 70BD     		pop	{r4, r5, r6, pc}
 1567              	.LVL135:
ARM GAS  /tmp/ccl32WUA.s 			page 67


 1568              	.L151:
 1569              	.LCFI38:
 1570              		.cfi_restore_state
1253:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1571              		.loc 1 1253 0
 1572 003a FFF7FEFF 		bl	HAL_GetTick
 1573              	.LVL136:
 1574 003e 0646     		mov	r6, r0
 1575              	.LVL137:
 1576              	.L138:
1255:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 1577              		.loc 1 1255 0
 1578 0040 2368     		ldr	r3, [r4]
 1579 0042 5A68     		ldr	r2, [r3, #4]
 1580 0044 12F0020F 		tst	r2, #2
 1581 0048 E5D1     		bne	.L132
1257:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if ((isrflags & (DMA2D_FLAG_CE|DMA2D_FLAG_TE)) != 0U)
 1582              		.loc 1 1257 0
 1583 004a 5A68     		ldr	r2, [r3, #4]
 1584 004c 0192     		str	r2, [sp, #4]
1258:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 1585              		.loc 1 1258 0
 1586 004e 019A     		ldr	r2, [sp, #4]
 1587 0050 12F0210F 		tst	r2, #33
 1588 0054 14D1     		bne	.L153
1280:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 1589              		.loc 1 1280 0
 1590 0056 B5F1FF3F 		cmp	r5, #-1
 1591 005a F1D0     		beq	.L138
1282:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 1592              		.loc 1 1282 0
 1593 005c FFF7FEFF 		bl	HAL_GetTick
 1594              	.LVL138:
 1595 0060 801B     		subs	r0, r0, r6
 1596 0062 8542     		cmp	r5, r0
 1597 0064 01D3     		bcc	.L139
1282:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 1598              		.loc 1 1282 0 is_stmt 0 discriminator 1
 1599 0066 002D     		cmp	r5, #0
 1600 0068 EAD1     		bne	.L138
 1601              	.L139:
1285:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1602              		.loc 1 1285 0 is_stmt 1
 1603 006a E36D     		ldr	r3, [r4, #92]
 1604 006c 43F02003 		orr	r3, r3, #32
 1605 0070 E365     		str	r3, [r4, #92]
1288:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1606              		.loc 1 1288 0
 1607 0072 0320     		movs	r0, #3
 1608 0074 84F85900 		strb	r0, [r4, #89]
1291:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1609              		.loc 1 1291 0
 1610 0078 0023     		movs	r3, #0
 1611 007a 84F85830 		strb	r3, [r4, #88]
1293:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
 1612              		.loc 1 1293 0
 1613 007e DAE7     		b	.L137
ARM GAS  /tmp/ccl32WUA.s 			page 68


 1614              	.L153:
1260:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 1615              		.loc 1 1260 0
 1616 0080 019A     		ldr	r2, [sp, #4]
 1617 0082 12F0200F 		tst	r2, #32
 1618 0086 03D0     		beq	.L135
1262:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
 1619              		.loc 1 1262 0
 1620 0088 E26D     		ldr	r2, [r4, #92]
 1621 008a 42F00202 		orr	r2, r2, #2
 1622 008e E265     		str	r2, [r4, #92]
 1623              	.L135:
1264:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 1624              		.loc 1 1264 0
 1625 0090 019A     		ldr	r2, [sp, #4]
 1626 0092 12F0010F 		tst	r2, #1
 1627 0096 03D0     		beq	.L136
1266:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
 1628              		.loc 1 1266 0
 1629 0098 E26D     		ldr	r2, [r4, #92]
 1630 009a 42F00102 		orr	r2, r2, #1
 1631 009e E265     		str	r2, [r4, #92]
 1632              	.L136:
1269:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1633              		.loc 1 1269 0
 1634 00a0 2122     		movs	r2, #33
 1635 00a2 9A60     		str	r2, [r3, #8]
1272:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1636              		.loc 1 1272 0
 1637 00a4 0423     		movs	r3, #4
 1638 00a6 84F85930 		strb	r3, [r4, #89]
1275:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1639              		.loc 1 1275 0
 1640 00aa 0023     		movs	r3, #0
 1641 00ac 84F85830 		strb	r3, [r4, #88]
1277:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
 1642              		.loc 1 1277 0
 1643 00b0 0120     		movs	r0, #1
 1644 00b2 C0E7     		b	.L137
 1645              	.LVL139:
 1646              	.L152:
1304:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1647              		.loc 1 1304 0
 1648 00b4 FFF7FEFF 		bl	HAL_GetTick
 1649              	.LVL140:
 1650 00b8 0646     		mov	r6, r0
 1651              	.LVL141:
 1652              	.L147:
1306:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 1653              		.loc 1 1306 0
 1654 00ba 2368     		ldr	r3, [r4]
 1655 00bc 5A68     		ldr	r2, [r3, #4]
 1656 00be 12F0100F 		tst	r2, #16
 1657 00c2 AFD1     		bne	.L141
1308:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if ((isrflags & (DMA2D_FLAG_CAE|DMA2D_FLAG_CE|DMA2D_FLAG_TE)) != 0U)
 1658              		.loc 1 1308 0
 1659 00c4 5A68     		ldr	r2, [r3, #4]
ARM GAS  /tmp/ccl32WUA.s 			page 69


 1660 00c6 0192     		str	r2, [sp, #4]
1309:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 1661              		.loc 1 1309 0
 1662 00c8 019A     		ldr	r2, [sp, #4]
 1663 00ca 12F0290F 		tst	r2, #41
 1664 00ce 14D1     		bne	.L154
1335:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 1665              		.loc 1 1335 0
 1666 00d0 B5F1FF3F 		cmp	r5, #-1
 1667 00d4 F1D0     		beq	.L147
1337:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 1668              		.loc 1 1337 0
 1669 00d6 FFF7FEFF 		bl	HAL_GetTick
 1670              	.LVL142:
 1671 00da 801B     		subs	r0, r0, r6
 1672 00dc 8542     		cmp	r5, r0
 1673 00de 01D3     		bcc	.L148
1337:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 1674              		.loc 1 1337 0 is_stmt 0 discriminator 1
 1675 00e0 002D     		cmp	r5, #0
 1676 00e2 EAD1     		bne	.L147
 1677              	.L148:
1340:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1678              		.loc 1 1340 0 is_stmt 1
 1679 00e4 E36D     		ldr	r3, [r4, #92]
 1680 00e6 43F02003 		orr	r3, r3, #32
 1681 00ea E365     		str	r3, [r4, #92]
1343:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1682              		.loc 1 1343 0
 1683 00ec 0320     		movs	r0, #3
 1684 00ee 84F85900 		strb	r0, [r4, #89]
1346:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1685              		.loc 1 1346 0
 1686 00f2 0023     		movs	r3, #0
 1687 00f4 84F85830 		strb	r3, [r4, #88]
1348:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
 1688              		.loc 1 1348 0
 1689 00f8 9DE7     		b	.L137
 1690              	.L154:
1311:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 1691              		.loc 1 1311 0
 1692 00fa 019A     		ldr	r2, [sp, #4]
 1693 00fc 12F0080F 		tst	r2, #8
 1694 0100 03D0     		beq	.L144
1313:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
 1695              		.loc 1 1313 0
 1696 0102 E26D     		ldr	r2, [r4, #92]
 1697 0104 42F00402 		orr	r2, r2, #4
 1698 0108 E265     		str	r2, [r4, #92]
 1699              	.L144:
1315:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 1700              		.loc 1 1315 0
 1701 010a 019A     		ldr	r2, [sp, #4]
 1702 010c 12F0200F 		tst	r2, #32
 1703 0110 03D0     		beq	.L145
1317:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
 1704              		.loc 1 1317 0
ARM GAS  /tmp/ccl32WUA.s 			page 70


 1705 0112 E26D     		ldr	r2, [r4, #92]
 1706 0114 42F00202 		orr	r2, r2, #2
 1707 0118 E265     		str	r2, [r4, #92]
 1708              	.L145:
1319:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 1709              		.loc 1 1319 0
 1710 011a 019A     		ldr	r2, [sp, #4]
 1711 011c 12F0010F 		tst	r2, #1
 1712 0120 03D0     		beq	.L146
1321:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
 1713              		.loc 1 1321 0
 1714 0122 E26D     		ldr	r2, [r4, #92]
 1715 0124 42F00102 		orr	r2, r2, #1
 1716 0128 E265     		str	r2, [r4, #92]
 1717              	.L146:
1324:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1718              		.loc 1 1324 0
 1719 012a 2922     		movs	r2, #41
 1720 012c 9A60     		str	r2, [r3, #8]
1327:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1721              		.loc 1 1327 0
 1722 012e 0423     		movs	r3, #4
 1723 0130 84F85930 		strb	r3, [r4, #89]
1330:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1724              		.loc 1 1330 0
 1725 0134 0023     		movs	r3, #0
 1726 0136 84F85830 		strb	r3, [r4, #88]
1332:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
 1727              		.loc 1 1332 0
 1728 013a 0120     		movs	r0, #1
 1729 013c 7BE7     		b	.L137
 1730              		.cfi_endproc
 1731              	.LFE158:
 1733              		.section	.text.HAL_DMA2D_LineEventCallback,"ax",%progbits
 1734              		.align	1
 1735              		.weak	HAL_DMA2D_LineEventCallback
 1736              		.syntax unified
 1737              		.thumb
 1738              		.thumb_func
 1739              		.fpu fpv5-d16
 1741              	HAL_DMA2D_LineEventCallback:
 1742              	.LFB160:
1542:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
 1743              		.loc 1 1542 0
 1744              		.cfi_startproc
 1745              		@ args = 0, pretend = 0, frame = 0
 1746              		@ frame_needed = 0, uses_anonymous_args = 0
 1747              		@ link register save eliminated.
 1748              	.LVL143:
 1749 0000 7047     		bx	lr
 1750              		.cfi_endproc
 1751              	.LFE160:
 1753              		.section	.text.HAL_DMA2D_CLUTLoadingCpltCallback,"ax",%progbits
 1754              		.align	1
 1755              		.weak	HAL_DMA2D_CLUTLoadingCpltCallback
 1756              		.syntax unified
 1757              		.thumb
ARM GAS  /tmp/ccl32WUA.s 			page 71


 1758              		.thumb_func
 1759              		.fpu fpv5-d16
 1761              	HAL_DMA2D_CLUTLoadingCpltCallback:
 1762              	.LFB161:
1558:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
 1763              		.loc 1 1558 0
 1764              		.cfi_startproc
 1765              		@ args = 0, pretend = 0, frame = 0
 1766              		@ frame_needed = 0, uses_anonymous_args = 0
 1767              		@ link register save eliminated.
 1768              	.LVL144:
 1769 0000 7047     		bx	lr
 1770              		.cfi_endproc
 1771              	.LFE161:
 1773              		.section	.text.HAL_DMA2D_IRQHandler,"ax",%progbits
 1774              		.align	1
 1775              		.global	HAL_DMA2D_IRQHandler
 1776              		.syntax unified
 1777              		.thumb
 1778              		.thumb_func
 1779              		.fpu fpv5-d16
 1781              	HAL_DMA2D_IRQHandler:
 1782              	.LFB159:
1372:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 1783              		.loc 1 1372 0
 1784              		.cfi_startproc
 1785              		@ args = 0, pretend = 0, frame = 0
 1786              		@ frame_needed = 0, uses_anonymous_args = 0
 1787              	.LVL145:
1372:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 1788              		.loc 1 1372 0
 1789 0000 70B5     		push	{r4, r5, r6, lr}
 1790              	.LCFI39:
 1791              		.cfi_def_cfa_offset 16
 1792              		.cfi_offset 4, -16
 1793              		.cfi_offset 5, -12
 1794              		.cfi_offset 6, -8
 1795              		.cfi_offset 14, -4
 1796 0002 0446     		mov	r4, r0
1373:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 1797              		.loc 1 1373 0
 1798 0004 0368     		ldr	r3, [r0]
 1799 0006 5D68     		ldr	r5, [r3, #4]
 1800              	.LVL146:
1374:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1801              		.loc 1 1374 0
 1802 0008 1E68     		ldr	r6, [r3]
 1803              	.LVL147:
1377:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1804              		.loc 1 1377 0
 1805 000a 15F0010F 		tst	r5, #1
 1806 000e 16D0     		beq	.L158
1379:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 1807              		.loc 1 1379 0
 1808 0010 16F4807F 		tst	r6, #256
 1809 0014 13D0     		beq	.L158
1382:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
ARM GAS  /tmp/ccl32WUA.s 			page 72


 1810              		.loc 1 1382 0
 1811 0016 1A68     		ldr	r2, [r3]
 1812 0018 22F48072 		bic	r2, r2, #256
 1813 001c 1A60     		str	r2, [r3]
1385:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1814              		.loc 1 1385 0
 1815 001e C36D     		ldr	r3, [r0, #92]
 1816 0020 43F00103 		orr	r3, r3, #1
 1817 0024 C365     		str	r3, [r0, #92]
1388:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1818              		.loc 1 1388 0
 1819 0026 0368     		ldr	r3, [r0]
 1820 0028 0122     		movs	r2, #1
 1821 002a 9A60     		str	r2, [r3, #8]
1391:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1822              		.loc 1 1391 0
 1823 002c 0423     		movs	r3, #4
 1824 002e 80F85930 		strb	r3, [r0, #89]
1394:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1825              		.loc 1 1394 0
 1826 0032 0023     		movs	r3, #0
 1827 0034 80F85830 		strb	r3, [r0, #88]
1396:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 1828              		.loc 1 1396 0
 1829 0038 C369     		ldr	r3, [r0, #28]
 1830 003a 03B1     		cbz	r3, .L158
1399:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
 1831              		.loc 1 1399 0
 1832 003c 9847     		blx	r3
 1833              	.LVL148:
 1834              	.L158:
1404:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1835              		.loc 1 1404 0
 1836 003e 15F0200F 		tst	r5, #32
 1837 0042 18D0     		beq	.L159
1406:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 1838              		.loc 1 1406 0
 1839 0044 16F4005F 		tst	r6, #8192
 1840 0048 15D0     		beq	.L159
1409:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1841              		.loc 1 1409 0
 1842 004a 2268     		ldr	r2, [r4]
 1843 004c 1368     		ldr	r3, [r2]
 1844 004e 23F40053 		bic	r3, r3, #8192
 1845 0052 1360     		str	r3, [r2]
1412:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1846              		.loc 1 1412 0
 1847 0054 2368     		ldr	r3, [r4]
 1848 0056 2022     		movs	r2, #32
 1849 0058 9A60     		str	r2, [r3, #8]
1415:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1850              		.loc 1 1415 0
 1851 005a E36D     		ldr	r3, [r4, #92]
 1852 005c 43F00203 		orr	r3, r3, #2
 1853 0060 E365     		str	r3, [r4, #92]
1418:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1854              		.loc 1 1418 0
ARM GAS  /tmp/ccl32WUA.s 			page 73


 1855 0062 0423     		movs	r3, #4
 1856 0064 84F85930 		strb	r3, [r4, #89]
1421:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1857              		.loc 1 1421 0
 1858 0068 0023     		movs	r3, #0
 1859 006a 84F85830 		strb	r3, [r4, #88]
1423:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 1860              		.loc 1 1423 0
 1861 006e E369     		ldr	r3, [r4, #28]
 1862 0070 0BB1     		cbz	r3, .L159
1426:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
 1863              		.loc 1 1426 0
 1864 0072 2046     		mov	r0, r4
 1865 0074 9847     		blx	r3
 1866              	.LVL149:
 1867              	.L159:
1431:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1868              		.loc 1 1431 0
 1869 0076 15F0080F 		tst	r5, #8
 1870 007a 18D0     		beq	.L160
1433:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 1871              		.loc 1 1433 0
 1872 007c 16F4006F 		tst	r6, #2048
 1873 0080 15D0     		beq	.L160
1436:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1874              		.loc 1 1436 0
 1875 0082 2268     		ldr	r2, [r4]
 1876 0084 1368     		ldr	r3, [r2]
 1877 0086 23F40063 		bic	r3, r3, #2048
 1878 008a 1360     		str	r3, [r2]
1439:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1879              		.loc 1 1439 0
 1880 008c 2368     		ldr	r3, [r4]
 1881 008e 0822     		movs	r2, #8
 1882 0090 9A60     		str	r2, [r3, #8]
1442:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1883              		.loc 1 1442 0
 1884 0092 E36D     		ldr	r3, [r4, #92]
 1885 0094 43F00403 		orr	r3, r3, #4
 1886 0098 E365     		str	r3, [r4, #92]
1445:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1887              		.loc 1 1445 0
 1888 009a 0423     		movs	r3, #4
 1889 009c 84F85930 		strb	r3, [r4, #89]
1448:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1890              		.loc 1 1448 0
 1891 00a0 0023     		movs	r3, #0
 1892 00a2 84F85830 		strb	r3, [r4, #88]
1450:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 1893              		.loc 1 1450 0
 1894 00a6 E369     		ldr	r3, [r4, #28]
 1895 00a8 0BB1     		cbz	r3, .L160
1453:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
 1896              		.loc 1 1453 0
 1897 00aa 2046     		mov	r0, r4
 1898 00ac 9847     		blx	r3
 1899              	.LVL150:
ARM GAS  /tmp/ccl32WUA.s 			page 74


 1900              	.L160:
1458:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1901              		.loc 1 1458 0
 1902 00ae 15F0040F 		tst	r5, #4
 1903 00b2 02D0     		beq	.L161
1460:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 1904              		.loc 1 1460 0
 1905 00b4 16F4806F 		tst	r6, #1024
 1906 00b8 20D1     		bne	.L165
 1907              	.L161:
1478:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1908              		.loc 1 1478 0
 1909 00ba 15F0020F 		tst	r5, #2
 1910 00be 16D0     		beq	.L162
1480:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 1911              		.loc 1 1480 0
 1912 00c0 16F4007F 		tst	r6, #512
 1913 00c4 13D0     		beq	.L162
1483:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1914              		.loc 1 1483 0
 1915 00c6 2268     		ldr	r2, [r4]
 1916 00c8 1368     		ldr	r3, [r2]
 1917 00ca 23F40073 		bic	r3, r3, #512
 1918 00ce 1360     		str	r3, [r2]
1486:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1919              		.loc 1 1486 0
 1920 00d0 2368     		ldr	r3, [r4]
 1921 00d2 0222     		movs	r2, #2
 1922 00d4 9A60     		str	r2, [r3, #8]
1489:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1923              		.loc 1 1489 0
 1924 00d6 E36D     		ldr	r3, [r4, #92]
 1925 00d8 E365     		str	r3, [r4, #92]
1492:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1926              		.loc 1 1492 0
 1927 00da 0123     		movs	r3, #1
 1928 00dc 84F85930 		strb	r3, [r4, #89]
1495:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1929              		.loc 1 1495 0
 1930 00e0 0023     		movs	r3, #0
 1931 00e2 84F85830 		strb	r3, [r4, #88]
1497:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 1932              		.loc 1 1497 0
 1933 00e6 A369     		ldr	r3, [r4, #24]
 1934 00e8 0BB1     		cbz	r3, .L162
1500:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
 1935              		.loc 1 1500 0
 1936 00ea 2046     		mov	r0, r4
 1937 00ec 9847     		blx	r3
 1938              	.LVL151:
 1939              	.L162:
1505:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1940              		.loc 1 1505 0
 1941 00ee 15F0100F 		tst	r5, #16
 1942 00f2 02D0     		beq	.L157
1507:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 1943              		.loc 1 1507 0
ARM GAS  /tmp/ccl32WUA.s 			page 75


 1944 00f4 16F4805F 		tst	r6, #4096
 1945 00f8 0CD1     		bne	.L166
 1946              	.L157:
 1947 00fa 70BD     		pop	{r4, r5, r6, pc}
 1948              	.LVL152:
 1949              	.L165:
1463:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1950              		.loc 1 1463 0
 1951 00fc 2268     		ldr	r2, [r4]
 1952 00fe 1368     		ldr	r3, [r2]
 1953 0100 23F48063 		bic	r3, r3, #1024
 1954 0104 1360     		str	r3, [r2]
1466:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1955              		.loc 1 1466 0
 1956 0106 2368     		ldr	r3, [r4]
 1957 0108 0422     		movs	r2, #4
 1958 010a 9A60     		str	r2, [r3, #8]
1472:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
 1959              		.loc 1 1472 0
 1960 010c 2046     		mov	r0, r4
 1961 010e FFF7FEFF 		bl	HAL_DMA2D_LineEventCallback
 1962              	.LVL153:
 1963 0112 D2E7     		b	.L161
 1964              	.L166:
1510:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1965              		.loc 1 1510 0
 1966 0114 2268     		ldr	r2, [r4]
 1967 0116 1368     		ldr	r3, [r2]
 1968 0118 23F48053 		bic	r3, r3, #4096
 1969 011c 1360     		str	r3, [r2]
1513:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1970              		.loc 1 1513 0
 1971 011e 2368     		ldr	r3, [r4]
 1972 0120 1022     		movs	r2, #16
 1973 0122 9A60     		str	r2, [r3, #8]
1516:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1974              		.loc 1 1516 0
 1975 0124 E36D     		ldr	r3, [r4, #92]
 1976 0126 E365     		str	r3, [r4, #92]
1519:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1977              		.loc 1 1519 0
 1978 0128 0123     		movs	r3, #1
 1979 012a 84F85930 		strb	r3, [r4, #89]
1522:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1980              		.loc 1 1522 0
 1981 012e 0023     		movs	r3, #0
 1982 0130 84F85830 		strb	r3, [r4, #88]
1528:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
 1983              		.loc 1 1528 0
 1984 0134 2046     		mov	r0, r4
 1985 0136 FFF7FEFF 		bl	HAL_DMA2D_CLUTLoadingCpltCallback
 1986              	.LVL154:
1533:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1987              		.loc 1 1533 0
 1988 013a DEE7     		b	.L157
 1989              		.cfi_endproc
 1990              	.LFE159:
ARM GAS  /tmp/ccl32WUA.s 			page 76


 1992              		.section	.text.HAL_DMA2D_ConfigLayer,"ax",%progbits
 1993              		.align	1
 1994              		.global	HAL_DMA2D_ConfigLayer
 1995              		.syntax unified
 1996              		.thumb
 1997              		.thumb_func
 1998              		.fpu fpv5-d16
 2000              	HAL_DMA2D_ConfigLayer:
 2001              	.LFB162:
1601:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   DMA2D_LayerCfgTypeDef *pLayerCfg;
 2002              		.loc 1 1601 0
 2003              		.cfi_startproc
 2004              		@ args = 0, pretend = 0, frame = 0
 2005              		@ frame_needed = 0, uses_anonymous_args = 0
 2006              		@ link register save eliminated.
 2007              	.LVL155:
1625:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2008              		.loc 1 1625 0
 2009 0000 90F85830 		ldrb	r3, [r0, #88]	@ zero_extendqisi2
 2010 0004 012B     		cmp	r3, #1
 2011 0006 74D0     		beq	.L174
1601:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   DMA2D_LayerCfgTypeDef *pLayerCfg;
 2012              		.loc 1 1601 0 discriminator 2
 2013 0008 30B4     		push	{r4, r5}
 2014              	.LCFI40:
 2015              		.cfi_def_cfa_offset 8
 2016              		.cfi_offset 4, -8
 2017              		.cfi_offset 5, -4
1625:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2018              		.loc 1 1625 0 discriminator 2
 2019 000a 0123     		movs	r3, #1
 2020 000c 80F85830 		strb	r3, [r0, #88]
1628:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2021              		.loc 1 1628 0 discriminator 2
 2022 0010 0223     		movs	r3, #2
 2023 0012 80F85930 		strb	r3, [r0, #89]
 2024              	.LVL156:
1633:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****              (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_
 2025              		.loc 1 1633 0 discriminator 2
 2026 0016 CB00     		lsls	r3, r1, #3
 2027 0018 5B1A     		subs	r3, r3, r1
 2028 001a 9A00     		lsls	r2, r3, #2
 2029 001c 0244     		add	r2, r2, r0
 2030 001e 546A     		ldr	r4, [r2, #36]
 2031 0020 936A     		ldr	r3, [r2, #40]
 2032 0022 44EA0343 		orr	r3, r4, r3, lsl #16
1634:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_
 2033              		.loc 1 1634 0 discriminator 2
 2034 0026 156B     		ldr	r5, [r2, #48]
1633:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****              (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_
 2035              		.loc 1 1633 0 discriminator 2
 2036 0028 43EA0553 		orr	r3, r3, r5, lsl #20
1634:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_
 2037              		.loc 1 1634 0 discriminator 2
 2038 002c 526B     		ldr	r2, [r2, #52]
1633:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****              (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_
 2039              		.loc 1 1633 0 discriminator 2
ARM GAS  /tmp/ccl32WUA.s 			page 77


 2040 002e 43EA4253 		orr	r3, r3, r2, lsl #21
 2041              	.LVL157:
1638:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 2042              		.loc 1 1638 0 discriminator 2
 2043 0032 A4F10902 		sub	r2, r4, #9
 2044 0036 012A     		cmp	r2, #1
 2045 0038 21D9     		bls	.L180
1644:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 2046              		.loc 1 1644 0
 2047 003a C1EBC105 		rsb	r5, r1, r1, lsl #3
 2048 003e AA00     		lsls	r2, r5, #2
 2049 0040 0244     		add	r2, r2, r0
 2050 0042 D26A     		ldr	r2, [r2, #44]
 2051 0044 43EA0263 		orr	r3, r3, r2, lsl #24
 2052              	.LVL158:
 2053              	.L170:
1648:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 2054              		.loc 1 1648 0
 2055 0048 61BB     		cbnz	r1, .L171
1651:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2056              		.loc 1 1651 0
 2057 004a 0468     		ldr	r4, [r0]
 2058 004c 656A     		ldr	r5, [r4, #36]
 2059 004e 2A4A     		ldr	r2, .L183
 2060 0050 2A40     		ands	r2, r2, r5
 2061 0052 1343     		orrs	r3, r3, r2
 2062              	.LVL159:
 2063 0054 6362     		str	r3, [r4, #36]
1654:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2064              		.loc 1 1654 0
 2065 0056 0468     		ldr	r4, [r0]
 2066 0058 CA00     		lsls	r2, r1, #3
 2067 005a 521A     		subs	r2, r2, r1
 2068 005c 9300     		lsls	r3, r2, #2
 2069 005e 0344     		add	r3, r3, r0
 2070 0060 1A6A     		ldr	r2, [r3, #32]
 2071 0062 A261     		str	r2, [r4, #24]
1657:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 2072              		.loc 1 1657 0
 2073 0064 5B6A     		ldr	r3, [r3, #36]
 2074 0066 093B     		subs	r3, r3, #9
 2075 0068 012B     		cmp	r3, #1
 2076 006a 11D9     		bls	.L181
 2077              	.LVL160:
 2078              	.L172:
1685:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2079              		.loc 1 1685 0
 2080 006c 0123     		movs	r3, #1
 2081 006e 80F85930 		strb	r3, [r0, #89]
1688:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2082              		.loc 1 1688 0
 2083 0072 0023     		movs	r3, #0
 2084 0074 80F85830 		strb	r3, [r0, #88]
1690:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 2085              		.loc 1 1690 0
 2086 0078 1846     		mov	r0, r3
 2087              	.LVL161:
ARM GAS  /tmp/ccl32WUA.s 			page 78


1691:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2088              		.loc 1 1691 0
 2089 007a 30BC     		pop	{r4, r5}
 2090              	.LCFI41:
 2091              		.cfi_remember_state
 2092              		.cfi_restore 5
 2093              		.cfi_restore 4
 2094              		.cfi_def_cfa_offset 0
 2095 007c 7047     		bx	lr
 2096              	.LVL162:
 2097              	.L180:
 2098              	.LCFI42:
 2099              		.cfi_restore_state
1640:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 2100              		.loc 1 1640 0
 2101 007e C1EBC105 		rsb	r5, r1, r1, lsl #3
 2102 0082 AA00     		lsls	r2, r5, #2
 2103 0084 0244     		add	r2, r2, r0
 2104 0086 D26A     		ldr	r2, [r2, #44]
 2105 0088 02F07F42 		and	r2, r2, #-16777216
 2106 008c 1343     		orrs	r3, r3, r2
 2107              	.LVL163:
 2108 008e DBE7     		b	.L170
 2109              	.LVL164:
 2110              	.L181:
1659:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 2111              		.loc 1 1659 0
 2112 0090 0268     		ldr	r2, [r0]
 2113 0092 C1EBC101 		rsb	r1, r1, r1, lsl #3
 2114              	.LVL165:
 2115 0096 8B00     		lsls	r3, r1, #2
 2116 0098 0344     		add	r3, r3, r0
 2117 009a DB6A     		ldr	r3, [r3, #44]
 2118 009c 23F07F43 		bic	r3, r3, #-16777216
 2119 00a0 9362     		str	r3, [r2, #40]
 2120 00a2 E3E7     		b	.L172
 2121              	.LVL166:
 2122              	.L171:
1666:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 2123              		.loc 1 1666 0
 2124 00a4 0B2C     		cmp	r4, #11
 2125 00a6 1BD0     		beq	.L182
1635:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2126              		.loc 1 1635 0
 2127 00a8 144D     		ldr	r5, .L183+4
 2128              	.LVL167:
 2129              	.L173:
1673:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2130              		.loc 1 1673 0
 2131 00aa 0468     		ldr	r4, [r0]
 2132 00ac E269     		ldr	r2, [r4, #28]
 2133 00ae 22EA0502 		bic	r2, r2, r5
 2134 00b2 1343     		orrs	r3, r3, r2
 2135              	.LVL168:
 2136 00b4 E361     		str	r3, [r4, #28]
1676:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2137              		.loc 1 1676 0
ARM GAS  /tmp/ccl32WUA.s 			page 79


 2138 00b6 0468     		ldr	r4, [r0]
 2139 00b8 CA00     		lsls	r2, r1, #3
 2140 00ba 521A     		subs	r2, r2, r1
 2141 00bc 9300     		lsls	r3, r2, #2
 2142 00be 0344     		add	r3, r3, r0
 2143 00c0 1A6A     		ldr	r2, [r3, #32]
 2144 00c2 2261     		str	r2, [r4, #16]
1679:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 2145              		.loc 1 1679 0
 2146 00c4 5B6A     		ldr	r3, [r3, #36]
 2147 00c6 093B     		subs	r3, r3, #9
 2148 00c8 012B     		cmp	r3, #1
 2149 00ca CFD8     		bhi	.L172
1681:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 2150              		.loc 1 1681 0
 2151 00cc 0268     		ldr	r2, [r0]
 2152 00ce C1EBC101 		rsb	r1, r1, r1, lsl #3
 2153              	.LVL169:
 2154 00d2 8B00     		lsls	r3, r1, #2
 2155 00d4 0344     		add	r3, r3, r0
 2156 00d6 DB6A     		ldr	r3, [r3, #44]
 2157 00d8 23F07F43 		bic	r3, r3, #-16777216
 2158 00dc 1362     		str	r3, [r2, #32]
 2159 00de C5E7     		b	.L172
 2160              	.LVL170:
 2161              	.L182:
1668:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       regMask  |= DMA2D_FGPFCCR_CSS;
 2162              		.loc 1 1668 0
 2163 00e0 C1EBC104 		rsb	r4, r1, r1, lsl #3
 2164 00e4 A200     		lsls	r2, r4, #2
 2165 00e6 0244     		add	r2, r2, r0
 2166 00e8 926B     		ldr	r2, [r2, #56]
 2167 00ea 43EA8243 		orr	r3, r3, r2, lsl #18
 2168              	.LVL171:
1669:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 2169              		.loc 1 1669 0
 2170 00ee 044D     		ldr	r5, .L183+8
 2171 00f0 DBE7     		b	.L173
 2172              	.LVL172:
 2173              	.L174:
 2174              	.LCFI43:
 2175              		.cfi_def_cfa_offset 0
 2176              		.cfi_restore 4
 2177              		.cfi_restore 5
1625:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2178              		.loc 1 1625 0
 2179 00f2 0220     		movs	r0, #2
 2180              	.LVL173:
 2181 00f4 7047     		bx	lr
 2182              	.L184:
 2183 00f6 00BF     		.align	2
 2184              	.L183:
 2185 00f8 F0FFCC00 		.word	13434864
 2186 00fc 0F0033FF 		.word	-13434865
 2187 0100 0F003FFF 		.word	-12648433
 2188              		.cfi_endproc
 2189              	.LFE162:
ARM GAS  /tmp/ccl32WUA.s 			page 80


 2191              		.section	.text.HAL_DMA2D_ConfigCLUT,"ax",%progbits
 2192              		.align	1
 2193              		.global	HAL_DMA2D_ConfigCLUT
 2194              		.syntax unified
 2195              		.thumb
 2196              		.thumb_func
 2197              		.fpu fpv5-d16
 2199              	HAL_DMA2D_ConfigCLUT:
 2200              	.LFB163:
1705:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 2201              		.loc 1 1705 0
 2202              		.cfi_startproc
 2203              		@ args = 4, pretend = 0, frame = 16
 2204              		@ frame_needed = 0, uses_anonymous_args = 0
 2205              		@ link register save eliminated.
 2206              	.LVL174:
 2207 0000 10B4     		push	{r4}
 2208              	.LCFI44:
 2209              		.cfi_def_cfa_offset 4
 2210              		.cfi_offset 4, -4
 2211 0002 85B0     		sub	sp, sp, #20
 2212              	.LCFI45:
 2213              		.cfi_def_cfa_offset 24
 2214 0004 04AC     		add	r4, sp, #16
 2215 0006 04E90E00 		stmdb	r4, {r1, r2, r3}
1712:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2216              		.loc 1 1712 0
 2217 000a 90F85830 		ldrb	r3, [r0, #88]	@ zero_extendqisi2
 2218 000e 012B     		cmp	r3, #1
 2219 0010 2FD0     		beq	.L189
1712:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2220              		.loc 1 1712 0 is_stmt 0 discriminator 2
 2221 0012 0123     		movs	r3, #1
 2222 0014 80F85830 		strb	r3, [r0, #88]
1715:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2223              		.loc 1 1715 0 is_stmt 1 discriminator 2
 2224 0018 0223     		movs	r3, #2
 2225 001a 80F85930 		strb	r3, [r0, #89]
1718:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 2226              		.loc 1 1718 0 discriminator 2
 2227 001e 069B     		ldr	r3, [sp, #24]
 2228 0020 C3B9     		cbnz	r3, .L187
1721:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2229              		.loc 1 1721 0
 2230 0022 0368     		ldr	r3, [r0]
 2231 0024 019A     		ldr	r2, [sp, #4]
 2232 0026 1A63     		str	r2, [r3, #48]
1724:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_BGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_BGPFCCR_CCM_P
 2233              		.loc 1 1724 0
 2234 0028 0168     		ldr	r1, [r0]
 2235 002a 4A6A     		ldr	r2, [r1, #36]
 2236 002c 124B     		ldr	r3, .L191
 2237 002e 1340     		ands	r3, r3, r2
 2238 0030 029A     		ldr	r2, [sp, #8]
 2239 0032 1201     		lsls	r2, r2, #4
 2240 0034 039C     		ldr	r4, [sp, #12]
 2241 0036 42EA0422 		orr	r2, r2, r4, lsl #8
ARM GAS  /tmp/ccl32WUA.s 			page 81


 2242 003a 1343     		orrs	r3, r3, r2
 2243 003c 4B62     		str	r3, [r1, #36]
 2244              	.L188:
1739:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2245              		.loc 1 1739 0
 2246 003e 0123     		movs	r3, #1
 2247 0040 80F85930 		strb	r3, [r0, #89]
1742:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2248              		.loc 1 1742 0
 2249 0044 0023     		movs	r3, #0
 2250 0046 80F85830 		strb	r3, [r0, #88]
1744:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 2251              		.loc 1 1744 0
 2252 004a 1846     		mov	r0, r3
 2253              	.LVL175:
 2254              	.L186:
1745:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2255              		.loc 1 1745 0
 2256 004c 05B0     		add	sp, sp, #20
 2257              	.LCFI46:
 2258              		.cfi_remember_state
 2259              		.cfi_def_cfa_offset 4
 2260              		@ sp needed
 2261 004e 5DF8044B 		ldr	r4, [sp], #4
 2262              	.LCFI47:
 2263              		.cfi_restore 4
 2264              		.cfi_def_cfa_offset 0
 2265              	.LVL176:
 2266 0052 7047     		bx	lr
 2267              	.LVL177:
 2268              	.L187:
 2269              	.LCFI48:
 2270              		.cfi_restore_state
1731:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2271              		.loc 1 1731 0
 2272 0054 0368     		ldr	r3, [r0]
 2273 0056 019A     		ldr	r2, [sp, #4]
 2274 0058 DA62     		str	r2, [r3, #44]
1734:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_FGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_FGPFCCR_CCM_P
 2275              		.loc 1 1734 0
 2276 005a 0168     		ldr	r1, [r0]
 2277 005c CA69     		ldr	r2, [r1, #28]
 2278 005e 064B     		ldr	r3, .L191
 2279 0060 1340     		ands	r3, r3, r2
 2280 0062 029A     		ldr	r2, [sp, #8]
 2281 0064 1201     		lsls	r2, r2, #4
 2282 0066 039C     		ldr	r4, [sp, #12]
 2283 0068 42EA0422 		orr	r2, r2, r4, lsl #8
 2284 006c 1343     		orrs	r3, r3, r2
 2285 006e CB61     		str	r3, [r1, #28]
 2286 0070 E5E7     		b	.L188
 2287              	.L189:
1712:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2288              		.loc 1 1712 0
 2289 0072 0220     		movs	r0, #2
 2290              	.LVL178:
 2291 0074 EAE7     		b	.L186
ARM GAS  /tmp/ccl32WUA.s 			page 82


 2292              	.L192:
 2293 0076 00BF     		.align	2
 2294              	.L191:
 2295 0078 EF00FFFF 		.word	-65297
 2296              		.cfi_endproc
 2297              	.LFE163:
 2299              		.section	.text.HAL_DMA2D_ProgramLineEvent,"ax",%progbits
 2300              		.align	1
 2301              		.global	HAL_DMA2D_ProgramLineEvent
 2302              		.syntax unified
 2303              		.thumb
 2304              		.thumb_func
 2305              		.fpu fpv5-d16
 2307              	HAL_DMA2D_ProgramLineEvent:
 2308              	.LFB164:
1759:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 2309              		.loc 1 1759 0
 2310              		.cfi_startproc
 2311              		@ args = 0, pretend = 0, frame = 0
 2312              		@ frame_needed = 0, uses_anonymous_args = 0
 2313              		@ link register save eliminated.
 2314              	.LVL179:
1763:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 2315              		.loc 1 1763 0
 2316 0000 B1F5803F 		cmp	r1, #65536
 2317 0004 17D2     		bcs	.L195
1770:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2318              		.loc 1 1770 0
 2319 0006 90F85830 		ldrb	r3, [r0, #88]	@ zero_extendqisi2
 2320 000a 012B     		cmp	r3, #1
 2321 000c 15D0     		beq	.L196
1770:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2322              		.loc 1 1770 0 is_stmt 0 discriminator 2
 2323 000e 0122     		movs	r2, #1
 2324 0010 80F85820 		strb	r2, [r0, #88]
1773:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2325              		.loc 1 1773 0 is_stmt 1 discriminator 2
 2326 0014 0223     		movs	r3, #2
 2327 0016 80F85930 		strb	r3, [r0, #89]
1776:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2328              		.loc 1 1776 0 discriminator 2
 2329 001a 0368     		ldr	r3, [r0]
 2330 001c 9964     		str	r1, [r3, #72]
1779:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2331              		.loc 1 1779 0 discriminator 2
 2332 001e 0168     		ldr	r1, [r0]
 2333              	.LVL180:
 2334 0020 0B68     		ldr	r3, [r1]
 2335              	.LVL181:
 2336 0022 43F48063 		orr	r3, r3, #1024
 2337 0026 0B60     		str	r3, [r1]
1782:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2338              		.loc 1 1782 0 discriminator 2
 2339 0028 80F85920 		strb	r2, [r0, #89]
1785:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2340              		.loc 1 1785 0 discriminator 2
 2341 002c 0023     		movs	r3, #0
ARM GAS  /tmp/ccl32WUA.s 			page 83


 2342 002e 80F85830 		strb	r3, [r0, #88]
1787:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 2343              		.loc 1 1787 0 discriminator 2
 2344 0032 1846     		mov	r0, r3
 2345              	.LVL182:
 2346 0034 7047     		bx	lr
 2347              	.LVL183:
 2348              	.L195:
1765:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 2349              		.loc 1 1765 0
 2350 0036 0120     		movs	r0, #1
 2351              	.LVL184:
 2352 0038 7047     		bx	lr
 2353              	.LVL185:
 2354              	.L196:
1770:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2355              		.loc 1 1770 0
 2356 003a 0220     		movs	r0, #2
 2357              	.LVL186:
1789:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2358              		.loc 1 1789 0
 2359 003c 7047     		bx	lr
 2360              		.cfi_endproc
 2361              	.LFE164:
 2363              		.section	.text.HAL_DMA2D_EnableDeadTime,"ax",%progbits
 2364              		.align	1
 2365              		.global	HAL_DMA2D_EnableDeadTime
 2366              		.syntax unified
 2367              		.thumb
 2368              		.thumb_func
 2369              		.fpu fpv5-d16
 2371              	HAL_DMA2D_EnableDeadTime:
 2372              	.LFB165:
1797:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Locked */
 2373              		.loc 1 1797 0
 2374              		.cfi_startproc
 2375              		@ args = 0, pretend = 0, frame = 0
 2376              		@ frame_needed = 0, uses_anonymous_args = 0
 2377              		@ link register save eliminated.
 2378              	.LVL187:
1799:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2379              		.loc 1 1799 0
 2380 0000 90F85830 		ldrb	r3, [r0, #88]	@ zero_extendqisi2
 2381 0004 012B     		cmp	r3, #1
 2382 0006 10D0     		beq	.L199
1799:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2383              		.loc 1 1799 0 is_stmt 0 discriminator 2
 2384 0008 0122     		movs	r2, #1
 2385 000a 80F85820 		strb	r2, [r0, #88]
1801:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2386              		.loc 1 1801 0 is_stmt 1 discriminator 2
 2387 000e 0223     		movs	r3, #2
 2388 0010 80F85930 		strb	r3, [r0, #89]
1804:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2389              		.loc 1 1804 0 discriminator 2
 2390 0014 0168     		ldr	r1, [r0]
 2391 0016 CB6C     		ldr	r3, [r1, #76]
ARM GAS  /tmp/ccl32WUA.s 			page 84


 2392 0018 1343     		orrs	r3, r3, r2
 2393 001a CB64     		str	r3, [r1, #76]
1806:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2394              		.loc 1 1806 0 discriminator 2
 2395 001c 80F85920 		strb	r2, [r0, #89]
1809:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2396              		.loc 1 1809 0 discriminator 2
 2397 0020 0023     		movs	r3, #0
 2398 0022 80F85830 		strb	r3, [r0, #88]
1811:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 2399              		.loc 1 1811 0 discriminator 2
 2400 0026 1846     		mov	r0, r3
 2401              	.LVL188:
 2402 0028 7047     		bx	lr
 2403              	.LVL189:
 2404              	.L199:
1799:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2405              		.loc 1 1799 0
 2406 002a 0220     		movs	r0, #2
 2407              	.LVL190:
1812:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2408              		.loc 1 1812 0
 2409 002c 7047     		bx	lr
 2410              		.cfi_endproc
 2411              	.LFE165:
 2413              		.section	.text.HAL_DMA2D_DisableDeadTime,"ax",%progbits
 2414              		.align	1
 2415              		.global	HAL_DMA2D_DisableDeadTime
 2416              		.syntax unified
 2417              		.thumb
 2418              		.thumb_func
 2419              		.fpu fpv5-d16
 2421              	HAL_DMA2D_DisableDeadTime:
 2422              	.LFB166:
1820:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Locked */
 2423              		.loc 1 1820 0
 2424              		.cfi_startproc
 2425              		@ args = 0, pretend = 0, frame = 0
 2426              		@ frame_needed = 0, uses_anonymous_args = 0
 2427              		@ link register save eliminated.
 2428              	.LVL191:
1822:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2429              		.loc 1 1822 0
 2430 0000 90F85830 		ldrb	r3, [r0, #88]	@ zero_extendqisi2
 2431 0004 012B     		cmp	r3, #1
 2432 0006 11D0     		beq	.L202
1822:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2433              		.loc 1 1822 0 is_stmt 0 discriminator 2
 2434 0008 0122     		movs	r2, #1
 2435 000a 80F85820 		strb	r2, [r0, #88]
1824:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2436              		.loc 1 1824 0 is_stmt 1 discriminator 2
 2437 000e 0223     		movs	r3, #2
 2438 0010 80F85930 		strb	r3, [r0, #89]
1827:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2439              		.loc 1 1827 0 discriminator 2
 2440 0014 0168     		ldr	r1, [r0]
ARM GAS  /tmp/ccl32WUA.s 			page 85


 2441 0016 CB6C     		ldr	r3, [r1, #76]
 2442 0018 23F00103 		bic	r3, r3, #1
 2443 001c CB64     		str	r3, [r1, #76]
1829:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2444              		.loc 1 1829 0 discriminator 2
 2445 001e 80F85920 		strb	r2, [r0, #89]
1832:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2446              		.loc 1 1832 0 discriminator 2
 2447 0022 0023     		movs	r3, #0
 2448 0024 80F85830 		strb	r3, [r0, #88]
1834:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 2449              		.loc 1 1834 0 discriminator 2
 2450 0028 1846     		mov	r0, r3
 2451              	.LVL192:
 2452 002a 7047     		bx	lr
 2453              	.LVL193:
 2454              	.L202:
1822:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2455              		.loc 1 1822 0
 2456 002c 0220     		movs	r0, #2
 2457              	.LVL194:
1835:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2458              		.loc 1 1835 0
 2459 002e 7047     		bx	lr
 2460              		.cfi_endproc
 2461              	.LFE166:
 2463              		.section	.text.HAL_DMA2D_ConfigDeadTime,"ax",%progbits
 2464              		.align	1
 2465              		.global	HAL_DMA2D_ConfigDeadTime
 2466              		.syntax unified
 2467              		.thumb
 2468              		.thumb_func
 2469              		.fpu fpv5-d16
 2471              	HAL_DMA2D_ConfigDeadTime:
 2472              	.LFB167:
1846:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Locked */
 2473              		.loc 1 1846 0
 2474              		.cfi_startproc
 2475              		@ args = 0, pretend = 0, frame = 0
 2476              		@ frame_needed = 0, uses_anonymous_args = 0
 2477              		@ link register save eliminated.
 2478              	.LVL195:
1848:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2479              		.loc 1 1848 0
 2480 0000 90F85830 		ldrb	r3, [r0, #88]	@ zero_extendqisi2
 2481 0004 012B     		cmp	r3, #1
 2482 0006 16D0     		beq	.L205
1846:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Locked */
 2483              		.loc 1 1846 0 discriminator 2
 2484 0008 10B4     		push	{r4}
 2485              	.LCFI49:
 2486              		.cfi_def_cfa_offset 4
 2487              		.cfi_offset 4, -4
1848:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2488              		.loc 1 1848 0 discriminator 2
 2489 000a 0122     		movs	r2, #1
 2490 000c 80F85820 		strb	r2, [r0, #88]
ARM GAS  /tmp/ccl32WUA.s 			page 86


1850:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2491              		.loc 1 1850 0 discriminator 2
 2492 0010 0223     		movs	r3, #2
 2493 0012 80F85930 		strb	r3, [r0, #89]
1853:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2494              		.loc 1 1853 0 discriminator 2
 2495 0016 0468     		ldr	r4, [r0]
 2496 0018 E36C     		ldr	r3, [r4, #76]
 2497 001a 23F47F43 		bic	r3, r3, #65280
 2498 001e 43EA0121 		orr	r1, r3, r1, lsl #8
 2499              	.LVL196:
 2500 0022 E164     		str	r1, [r4, #76]
1855:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2501              		.loc 1 1855 0 discriminator 2
 2502 0024 80F85920 		strb	r2, [r0, #89]
1858:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2503              		.loc 1 1858 0 discriminator 2
 2504 0028 0023     		movs	r3, #0
 2505 002a 80F85830 		strb	r3, [r0, #88]
1860:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 2506              		.loc 1 1860 0 discriminator 2
 2507 002e 1846     		mov	r0, r3
 2508              	.LVL197:
1861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2509              		.loc 1 1861 0 discriminator 2
 2510 0030 5DF8044B 		ldr	r4, [sp], #4
 2511              	.LCFI50:
 2512              		.cfi_restore 4
 2513              		.cfi_def_cfa_offset 0
 2514 0034 7047     		bx	lr
 2515              	.LVL198:
 2516              	.L205:
1848:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2517              		.loc 1 1848 0
 2518 0036 0220     		movs	r0, #2
 2519              	.LVL199:
 2520 0038 7047     		bx	lr
 2521              		.cfi_endproc
 2522              	.LFE167:
 2524              		.section	.text.HAL_DMA2D_GetState,"ax",%progbits
 2525              		.align	1
 2526              		.global	HAL_DMA2D_GetState
 2527              		.syntax unified
 2528              		.thumb
 2529              		.thumb_func
 2530              		.fpu fpv5-d16
 2532              	HAL_DMA2D_GetState:
 2533              	.LFB168:
1891:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return hdma2d->State;
 2534              		.loc 1 1891 0
 2535              		.cfi_startproc
 2536              		@ args = 0, pretend = 0, frame = 0
 2537              		@ frame_needed = 0, uses_anonymous_args = 0
 2538              		@ link register save eliminated.
 2539              	.LVL200:
1892:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 2540              		.loc 1 1892 0
ARM GAS  /tmp/ccl32WUA.s 			page 87


 2541 0000 90F85900 		ldrb	r0, [r0, #89]	@ zero_extendqisi2
 2542              	.LVL201:
1893:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2543              		.loc 1 1893 0
 2544 0004 7047     		bx	lr
 2545              		.cfi_endproc
 2546              	.LFE168:
 2548              		.section	.text.HAL_DMA2D_GetError,"ax",%progbits
 2549              		.align	1
 2550              		.global	HAL_DMA2D_GetError
 2551              		.syntax unified
 2552              		.thumb
 2553              		.thumb_func
 2554              		.fpu fpv5-d16
 2556              	HAL_DMA2D_GetError:
 2557              	.LFB169:
1902:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return hdma2d->ErrorCode;
 2558              		.loc 1 1902 0
 2559              		.cfi_startproc
 2560              		@ args = 0, pretend = 0, frame = 0
 2561              		@ frame_needed = 0, uses_anonymous_args = 0
 2562              		@ link register save eliminated.
 2563              	.LVL202:
1903:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 2564              		.loc 1 1903 0
 2565 0000 C06D     		ldr	r0, [r0, #92]
 2566              	.LVL203:
1904:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2567              		.loc 1 1904 0
 2568 0002 7047     		bx	lr
 2569              		.cfi_endproc
 2570              	.LFE169:
 2572              		.text
 2573              	.Letext0:
 2574              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2575              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2576              		.file 4 "Libraries/CMSIS/Include/core_cm7.h"
 2577              		.file 5 "Libraries/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 2578              		.file 6 "Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 2579              		.file 7 "/usr/include/newlib/sys/lock.h"
 2580              		.file 8 "/usr/include/newlib/sys/_types.h"
 2581              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 2582              		.file 10 "/usr/include/newlib/sys/reent.h"
 2583              		.file 11 "/usr/include/newlib/math.h"
 2584              		.file 12 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 2585              		.file 13 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma2d.h"
 2586              		.file 14 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 2587              		.file 15 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccl32WUA.s 			page 88


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_dma2d.c
     /tmp/ccl32WUA.s:17     .text.DMA2D_SetConfig:0000000000000000 $t
     /tmp/ccl32WUA.s:23     .text.DMA2D_SetConfig:0000000000000000 DMA2D_SetConfig
     /tmp/ccl32WUA.s:162    .text.HAL_DMA2D_MspInit:0000000000000000 $t
     /tmp/ccl32WUA.s:169    .text.HAL_DMA2D_MspInit:0000000000000000 HAL_DMA2D_MspInit
     /tmp/ccl32WUA.s:182    .text.HAL_DMA2D_Init:0000000000000000 $t
     /tmp/ccl32WUA.s:189    .text.HAL_DMA2D_Init:0000000000000000 HAL_DMA2D_Init
     /tmp/ccl32WUA.s:275    .text.HAL_DMA2D_Init:0000000000000070 $d
     /tmp/ccl32WUA.s:280    .text.HAL_DMA2D_MspDeInit:0000000000000000 $t
     /tmp/ccl32WUA.s:287    .text.HAL_DMA2D_MspDeInit:0000000000000000 HAL_DMA2D_MspDeInit
     /tmp/ccl32WUA.s:300    .text.HAL_DMA2D_Start:0000000000000000 $t
     /tmp/ccl32WUA.s:307    .text.HAL_DMA2D_Start:0000000000000000 HAL_DMA2D_Start
     /tmp/ccl32WUA.s:367    .text.HAL_DMA2D_Start_IT:0000000000000000 $t
     /tmp/ccl32WUA.s:374    .text.HAL_DMA2D_Start_IT:0000000000000000 HAL_DMA2D_Start_IT
     /tmp/ccl32WUA.s:438    .text.HAL_DMA2D_BlendingStart:0000000000000000 $t
     /tmp/ccl32WUA.s:445    .text.HAL_DMA2D_BlendingStart:0000000000000000 HAL_DMA2D_BlendingStart
     /tmp/ccl32WUA.s:511    .text.HAL_DMA2D_BlendingStart_IT:0000000000000000 $t
     /tmp/ccl32WUA.s:518    .text.HAL_DMA2D_BlendingStart_IT:0000000000000000 HAL_DMA2D_BlendingStart_IT
     /tmp/ccl32WUA.s:589    .text.HAL_DMA2D_Abort:0000000000000000 $t
     /tmp/ccl32WUA.s:596    .text.HAL_DMA2D_Abort:0000000000000000 HAL_DMA2D_Abort
     /tmp/ccl32WUA.s:664    .text.HAL_DMA2D_Suspend:0000000000000000 $t
     /tmp/ccl32WUA.s:671    .text.HAL_DMA2D_Suspend:0000000000000000 HAL_DMA2D_Suspend
     /tmp/ccl32WUA.s:745    .text.HAL_DMA2D_Resume:0000000000000000 $t
     /tmp/ccl32WUA.s:752    .text.HAL_DMA2D_Resume:0000000000000000 HAL_DMA2D_Resume
     /tmp/ccl32WUA.s:785    .text.HAL_DMA2D_EnableCLUT:0000000000000000 $t
     /tmp/ccl32WUA.s:792    .text.HAL_DMA2D_EnableCLUT:0000000000000000 HAL_DMA2D_EnableCLUT
     /tmp/ccl32WUA.s:843    .text.HAL_DMA2D_CLUTLoad:0000000000000000 $t
     /tmp/ccl32WUA.s:850    .text.HAL_DMA2D_CLUTLoad:0000000000000000 HAL_DMA2D_CLUTLoad
     /tmp/ccl32WUA.s:950    .text.HAL_DMA2D_CLUTLoad:0000000000000080 $d
     /tmp/ccl32WUA.s:955    .text.HAL_DMA2D_CLUTLoad_IT:0000000000000000 $t
     /tmp/ccl32WUA.s:962    .text.HAL_DMA2D_CLUTLoad_IT:0000000000000000 HAL_DMA2D_CLUTLoad_IT
     /tmp/ccl32WUA.s:1072   .text.HAL_DMA2D_CLUTLoad_IT:0000000000000094 $d
     /tmp/ccl32WUA.s:1077   .text.HAL_DMA2D_CLUTLoading_Abort:0000000000000000 $t
     /tmp/ccl32WUA.s:1084   .text.HAL_DMA2D_CLUTLoading_Abort:0000000000000000 HAL_DMA2D_CLUTLoading_Abort
     /tmp/ccl32WUA.s:1166   .text.HAL_DMA2D_DeInit:0000000000000000 $t
     /tmp/ccl32WUA.s:1173   .text.HAL_DMA2D_DeInit:0000000000000000 HAL_DMA2D_DeInit
     /tmp/ccl32WUA.s:1296   .text.HAL_DMA2D_DeInit:0000000000000090 $d
     /tmp/ccl32WUA.s:1301   .text.HAL_DMA2D_CLUTLoading_Suspend:0000000000000000 $t
     /tmp/ccl32WUA.s:1308   .text.HAL_DMA2D_CLUTLoading_Suspend:0000000000000000 HAL_DMA2D_CLUTLoading_Suspend
     /tmp/ccl32WUA.s:1443   .text.HAL_DMA2D_CLUTLoading_Resume:0000000000000000 $t
     /tmp/ccl32WUA.s:1450   .text.HAL_DMA2D_CLUTLoading_Resume:0000000000000000 HAL_DMA2D_CLUTLoading_Resume
     /tmp/ccl32WUA.s:1500   .text.HAL_DMA2D_PollForTransfer:0000000000000000 $t
     /tmp/ccl32WUA.s:1507   .text.HAL_DMA2D_PollForTransfer:0000000000000000 HAL_DMA2D_PollForTransfer
     /tmp/ccl32WUA.s:1734   .text.HAL_DMA2D_LineEventCallback:0000000000000000 $t
     /tmp/ccl32WUA.s:1741   .text.HAL_DMA2D_LineEventCallback:0000000000000000 HAL_DMA2D_LineEventCallback
     /tmp/ccl32WUA.s:1754   .text.HAL_DMA2D_CLUTLoadingCpltCallback:0000000000000000 $t
     /tmp/ccl32WUA.s:1761   .text.HAL_DMA2D_CLUTLoadingCpltCallback:0000000000000000 HAL_DMA2D_CLUTLoadingCpltCallback
     /tmp/ccl32WUA.s:1774   .text.HAL_DMA2D_IRQHandler:0000000000000000 $t
     /tmp/ccl32WUA.s:1781   .text.HAL_DMA2D_IRQHandler:0000000000000000 HAL_DMA2D_IRQHandler
     /tmp/ccl32WUA.s:1993   .text.HAL_DMA2D_ConfigLayer:0000000000000000 $t
     /tmp/ccl32WUA.s:2000   .text.HAL_DMA2D_ConfigLayer:0000000000000000 HAL_DMA2D_ConfigLayer
     /tmp/ccl32WUA.s:2185   .text.HAL_DMA2D_ConfigLayer:00000000000000f8 $d
     /tmp/ccl32WUA.s:2192   .text.HAL_DMA2D_ConfigCLUT:0000000000000000 $t
     /tmp/ccl32WUA.s:2199   .text.HAL_DMA2D_ConfigCLUT:0000000000000000 HAL_DMA2D_ConfigCLUT
     /tmp/ccl32WUA.s:2295   .text.HAL_DMA2D_ConfigCLUT:0000000000000078 $d
     /tmp/ccl32WUA.s:2300   .text.HAL_DMA2D_ProgramLineEvent:0000000000000000 $t
ARM GAS  /tmp/ccl32WUA.s 			page 89


     /tmp/ccl32WUA.s:2307   .text.HAL_DMA2D_ProgramLineEvent:0000000000000000 HAL_DMA2D_ProgramLineEvent
     /tmp/ccl32WUA.s:2364   .text.HAL_DMA2D_EnableDeadTime:0000000000000000 $t
     /tmp/ccl32WUA.s:2371   .text.HAL_DMA2D_EnableDeadTime:0000000000000000 HAL_DMA2D_EnableDeadTime
     /tmp/ccl32WUA.s:2414   .text.HAL_DMA2D_DisableDeadTime:0000000000000000 $t
     /tmp/ccl32WUA.s:2421   .text.HAL_DMA2D_DisableDeadTime:0000000000000000 HAL_DMA2D_DisableDeadTime
     /tmp/ccl32WUA.s:2464   .text.HAL_DMA2D_ConfigDeadTime:0000000000000000 $t
     /tmp/ccl32WUA.s:2471   .text.HAL_DMA2D_ConfigDeadTime:0000000000000000 HAL_DMA2D_ConfigDeadTime
     /tmp/ccl32WUA.s:2525   .text.HAL_DMA2D_GetState:0000000000000000 $t
     /tmp/ccl32WUA.s:2532   .text.HAL_DMA2D_GetState:0000000000000000 HAL_DMA2D_GetState
     /tmp/ccl32WUA.s:2549   .text.HAL_DMA2D_GetError:0000000000000000 $t
     /tmp/ccl32WUA.s:2556   .text.HAL_DMA2D_GetError:0000000000000000 HAL_DMA2D_GetError
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
