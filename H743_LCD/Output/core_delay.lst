ARM GAS  /tmp/ccw1ovlW.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"core_delay.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_InitTick,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_InitTick
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	HAL_InitTick:
  25              	.LFB141:
  26              		.file 1 "User/delay/core_delay.c"
   1:User/delay/core_delay.c **** /**
   2:User/delay/core_delay.c ****   ******************************************************************
   3:User/delay/core_delay.c ****   * @file    core_delay.c
   4:User/delay/core_delay.c ****   * @author  fire
   5:User/delay/core_delay.c ****   * @version V1.0
   6:User/delay/core_delay.c ****   * @date    2018-xx-xx
   7:User/delay/core_delay.c ****   * @brief   使用内核寄存器精确延时
   8:User/delay/core_delay.c ****   ******************************************************************
   9:User/delay/core_delay.c ****   * @attention
  10:User/delay/core_delay.c ****   *
  11:User/delay/core_delay.c ****   * 实验平台:野火 STM32H743开发板  
  12:User/delay/core_delay.c ****   * 论坛    :http://www.firebbs.cn
  13:User/delay/core_delay.c ****   * 淘宝    :https://fire-stm32.taobao.com
  14:User/delay/core_delay.c ****   *
  15:User/delay/core_delay.c ****   ******************************************************************
  16:User/delay/core_delay.c ****   */
  17:User/delay/core_delay.c ****   
  18:User/delay/core_delay.c **** #include "./delay/core_delay.h"   
  19:User/delay/core_delay.c **** 
  20:User/delay/core_delay.c **** 
  21:User/delay/core_delay.c **** /*
  22:User/delay/core_delay.c **** **********************************************************************
  23:User/delay/core_delay.c **** *         时间戳相关寄存器定义
  24:User/delay/core_delay.c **** **********************************************************************
  25:User/delay/core_delay.c **** */
  26:User/delay/core_delay.c **** /*
  27:User/delay/core_delay.c ****  在Cortex-M里面有一个外设叫DWT(Data Watchpoint and Trace)，
  28:User/delay/core_delay.c ****  该外设有一个32位的寄存器叫CYCCNT，它是一个向上的计数器，
  29:User/delay/core_delay.c ****  记录的是内核时钟运行的个数，最长能记录的时间为：
  30:User/delay/core_delay.c ****  10.74s=2的32次方/400000000
  31:User/delay/core_delay.c ****  (假设内核频率为400M，内核跳一次的时间大概为1/400M=2.5ns)
  32:User/delay/core_delay.c ****  当CYCCNT溢出之后，会清0重新开始向上计数。
ARM GAS  /tmp/ccw1ovlW.s 			page 2


  33:User/delay/core_delay.c ****  使能CYCCNT计数的操作步骤：
  34:User/delay/core_delay.c ****  1、先使能DWT外设，这个由另外内核调试寄存器DEMCR的位24控制，写1使能
  35:User/delay/core_delay.c ****  2、使能CYCCNT寄存器之前，先清0
  36:User/delay/core_delay.c ****  3、使能CYCCNT寄存器，这个由DWT_CTRL(代码上宏定义为DWT_CR)的位0控制，写1使能
  37:User/delay/core_delay.c ****  */
  38:User/delay/core_delay.c **** 
  39:User/delay/core_delay.c **** 
  40:User/delay/core_delay.c **** #define  DWT_CR      *(__IO uint32_t *)0xE0001000
  41:User/delay/core_delay.c **** #define  DWT_CYCCNT  *(__IO uint32_t *)0xE0001004
  42:User/delay/core_delay.c **** #define  DEM_CR      *(__IO uint32_t *)0xE000EDFC
  43:User/delay/core_delay.c **** 
  44:User/delay/core_delay.c **** 
  45:User/delay/core_delay.c **** #define  DEM_CR_TRCENA                   (1 << 24)
  46:User/delay/core_delay.c **** #define  DWT_CR_CYCCNTENA                (1 <<  0)
  47:User/delay/core_delay.c **** 
  48:User/delay/core_delay.c **** 
  49:User/delay/core_delay.c **** /**
  50:User/delay/core_delay.c ****   * @brief  初始化时间戳
  51:User/delay/core_delay.c ****   * @param  无
  52:User/delay/core_delay.c ****   * @retval 无
  53:User/delay/core_delay.c ****   * @note   使用延时函数前，必须调用本函数
  54:User/delay/core_delay.c ****   */
  55:User/delay/core_delay.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  56:User/delay/core_delay.c **** {
  27              		.loc 1 56 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  57:User/delay/core_delay.c ****     /* 使能DWT外设 */
  58:User/delay/core_delay.c ****     DEM_CR |= (uint32_t)DEM_CR_TRCENA;                
  33              		.loc 1 58 0
  34 0000 064A     		ldr	r2, .L2
  35 0002 1368     		ldr	r3, [r2]
  36 0004 43F08073 		orr	r3, r3, #16777216
  37 0008 1360     		str	r3, [r2]
  59:User/delay/core_delay.c **** 
  60:User/delay/core_delay.c ****     /* DWT CYCCNT寄存器计数清0 */
  61:User/delay/core_delay.c ****     DWT_CYCCNT = (uint32_t)0u;
  38              		.loc 1 61 0
  39 000a 0020     		movs	r0, #0
  40              	.LVL1:
  41 000c 044B     		ldr	r3, .L2+4
  42 000e 1860     		str	r0, [r3]
  62:User/delay/core_delay.c **** 
  63:User/delay/core_delay.c ****     /* 使能Cortex-M DWT CYCCNT寄存器 */
  64:User/delay/core_delay.c ****     DWT_CR |= (uint32_t)DWT_CR_CYCCNTENA;
  43              		.loc 1 64 0
  44 0010 044A     		ldr	r2, .L2+8
  45 0012 1368     		ldr	r3, [r2]
  46 0014 43F00103 		orr	r3, r3, #1
  47 0018 1360     		str	r3, [r2]
  65:User/delay/core_delay.c ****   
  66:User/delay/core_delay.c ****     return HAL_OK;
  67:User/delay/core_delay.c **** }
  48              		.loc 1 67 0
ARM GAS  /tmp/ccw1ovlW.s 			page 3


  49 001a 7047     		bx	lr
  50              	.L3:
  51              		.align	2
  52              	.L2:
  53 001c FCED00E0 		.word	-536809988
  54 0020 041000E0 		.word	-536866812
  55 0024 001000E0 		.word	-536866816
  56              		.cfi_endproc
  57              	.LFE141:
  59              		.section	.text.CPU_TS_TmrRd,"ax",%progbits
  60              		.align	1
  61              		.global	CPU_TS_TmrRd
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  65              		.fpu fpv5-d16
  67              	CPU_TS_TmrRd:
  68              	.LFB142:
  68:User/delay/core_delay.c **** 
  69:User/delay/core_delay.c **** /**
  70:User/delay/core_delay.c ****   * @brief  读取当前时间戳
  71:User/delay/core_delay.c ****   * @param  无
  72:User/delay/core_delay.c ****   * @retval 当前时间戳，即DWT_CYCCNT寄存器的值
  73:User/delay/core_delay.c ****   */
  74:User/delay/core_delay.c **** uint32_t CPU_TS_TmrRd(void)
  75:User/delay/core_delay.c **** {        
  69              		.loc 1 75 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  76:User/delay/core_delay.c ****   return ((uint32_t)DWT_CYCCNT);
  74              		.loc 1 76 0
  75 0000 014B     		ldr	r3, .L5
  76 0002 1868     		ldr	r0, [r3]
  77:User/delay/core_delay.c **** }
  77              		.loc 1 77 0
  78 0004 7047     		bx	lr
  79              	.L6:
  80 0006 00BF     		.align	2
  81              	.L5:
  82 0008 041000E0 		.word	-536866812
  83              		.cfi_endproc
  84              	.LFE142:
  86              		.section	.text.HAL_GetTick,"ax",%progbits
  87              		.align	1
  88              		.global	HAL_GetTick
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu fpv5-d16
  94              	HAL_GetTick:
  95              	.LFB143:
  78:User/delay/core_delay.c **** 
  79:User/delay/core_delay.c **** /**
  80:User/delay/core_delay.c ****   * @brief  读取当前时间戳
  81:User/delay/core_delay.c ****   * @param  无
ARM GAS  /tmp/ccw1ovlW.s 			page 4


  82:User/delay/core_delay.c ****   * @retval 当前时间戳，即DWT_CYCCNT寄存器的值
  83:User/delay/core_delay.c ****   */
  84:User/delay/core_delay.c **** uint32_t HAL_GetTick(void)
  85:User/delay/core_delay.c **** {        
  96              		.loc 1 85 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		@ link register save eliminated.
  86:User/delay/core_delay.c ****   return ((uint32_t)DWT_CYCCNT/SysClockFreq*1000);
 101              		.loc 1 86 0
 102 0000 054B     		ldr	r3, .L8
 103 0002 1B68     		ldr	r3, [r3]
 104 0004 DB0A     		lsrs	r3, r3, #11
 105 0006 0548     		ldr	r0, .L8+4
 106 0008 A0FB0323 		umull	r2, r3, r0, r3
 107 000c DB09     		lsrs	r3, r3, #7
  87:User/delay/core_delay.c **** }
 108              		.loc 1 87 0
 109 000e 4FF47A70 		mov	r0, #1000
 110 0012 00FB03F0 		mul	r0, r0, r3
 111 0016 7047     		bx	lr
 112              	.L9:
 113              		.align	2
 114              	.L8:
 115 0018 041000E0 		.word	-536866812
 116 001c 99CA2300 		.word	2345625
 117              		.cfi_endproc
 118              	.LFE143:
 120              		.section	.text.CPU_TS_Tmr_Delay_US,"ax",%progbits
 121              		.align	1
 122              		.global	CPU_TS_Tmr_Delay_US
 123              		.syntax unified
 124              		.thumb
 125              		.thumb_func
 126              		.fpu fpv5-d16
 128              	CPU_TS_Tmr_Delay_US:
 129              	.LFB144:
  88:User/delay/core_delay.c **** 
  89:User/delay/core_delay.c **** 
  90:User/delay/core_delay.c **** /**
  91:User/delay/core_delay.c ****   * @brief  采用CPU的内部计数实现精确延时，32位计数器
  92:User/delay/core_delay.c ****   * @param  us : 延迟长度，单位1 us
  93:User/delay/core_delay.c ****   * @retval 无
  94:User/delay/core_delay.c ****   * @note   使用本函数前必须先调用CPU_TS_TmrInit函数使能计数器，
  95:User/delay/core_delay.c ****             或使能宏CPU_TS_INIT_IN_DELAY_FUNCTION
  96:User/delay/core_delay.c ****             最大延时值为8秒，即8*1000*1000
  97:User/delay/core_delay.c ****   */
  98:User/delay/core_delay.c **** void CPU_TS_Tmr_Delay_US(uint32_t us)
  99:User/delay/core_delay.c **** {
 130              		.loc 1 99 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              	.LVL2:
 135 0000 70B5     		push	{r4, r5, r6, lr}
 136              	.LCFI0:
ARM GAS  /tmp/ccw1ovlW.s 			page 5


 137              		.cfi_def_cfa_offset 16
 138              		.cfi_offset 4, -16
 139              		.cfi_offset 5, -12
 140              		.cfi_offset 6, -8
 141              		.cfi_offset 14, -4
 142 0002 0646     		mov	r6, r0
 143              	.LVL3:
 100:User/delay/core_delay.c ****   uint32_t ticks;
 101:User/delay/core_delay.c ****   uint32_t told,tnow,tcnt=0;
 102:User/delay/core_delay.c **** 
 103:User/delay/core_delay.c ****   /* 在函数内部初始化时间戳寄存器， */  
 104:User/delay/core_delay.c **** #if (CPU_TS_INIT_IN_DELAY_FUNCTION)  
 105:User/delay/core_delay.c ****   /* 初始化时间戳并清零 */
 106:User/delay/core_delay.c ****   HAL_InitTick(5);
 107:User/delay/core_delay.c **** #endif
 108:User/delay/core_delay.c ****   
 109:User/delay/core_delay.c ****   ticks = us * (GET_CPU_ClkFreq() / 1000000);  /* 需要的节拍数 */      
 144              		.loc 1 109 0
 145 0004 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 146              	.LVL4:
 147 0008 0C4B     		ldr	r3, .L18
 148 000a A3FB0030 		umull	r3, r0, r3, r0
 149 000e 800C     		lsrs	r0, r0, #18
 150 0010 06FB00F6 		mul	r6, r6, r0
 151              	.LVL5:
 110:User/delay/core_delay.c ****   tcnt = 0;
 111:User/delay/core_delay.c ****   told = (uint32_t)CPU_TS_TmrRd();         /* 刚进入时的计数器值 */
 152              		.loc 1 111 0
 153 0014 FFF7FEFF 		bl	CPU_TS_TmrRd
 154              	.LVL6:
 155 0018 0446     		mov	r4, r0
 156              	.LVL7:
 110:User/delay/core_delay.c ****   tcnt = 0;
 157              		.loc 1 110 0
 158 001a 0025     		movs	r5, #0
 159 001c 05E0     		b	.L11
 160              	.LVL8:
 161              	.L13:
 112:User/delay/core_delay.c **** 
 113:User/delay/core_delay.c ****   while(1)
 114:User/delay/core_delay.c ****   {
 115:User/delay/core_delay.c ****     tnow = (uint32_t)CPU_TS_TmrRd();  
 116:User/delay/core_delay.c ****     if(tnow != told)
 117:User/delay/core_delay.c ****     { 
 118:User/delay/core_delay.c ****         /* 32位计数器是递增计数器 */    
 119:User/delay/core_delay.c ****       if(tnow > told)
 120:User/delay/core_delay.c ****       {
 121:User/delay/core_delay.c ****         tcnt += tnow - told;  
 122:User/delay/core_delay.c ****       }
 123:User/delay/core_delay.c ****       /* 重新装载 */
 124:User/delay/core_delay.c ****       else 
 125:User/delay/core_delay.c ****       {
 126:User/delay/core_delay.c ****         tcnt += UINT32_MAX - told + tnow; 
 162              		.loc 1 126 0
 163 001e 041B     		subs	r4, r0, r4
 164              	.LVL9:
 165 0020 2C44     		add	r4, r4, r5
ARM GAS  /tmp/ccw1ovlW.s 			page 6


 166 0022 651E     		subs	r5, r4, #1
 167              	.LVL10:
 168              	.L14:
 127:User/delay/core_delay.c ****       } 
 128:User/delay/core_delay.c ****       
 129:User/delay/core_delay.c ****       told = tnow;
 130:User/delay/core_delay.c **** 
 131:User/delay/core_delay.c ****       /*时间超过/等于要延迟的时间,则退出 */
 132:User/delay/core_delay.c ****       if(tcnt >= ticks)break;
 169              		.loc 1 132 0
 170 0024 B542     		cmp	r5, r6
 171 0026 08D2     		bcs	.L17
 129:User/delay/core_delay.c **** 
 172              		.loc 1 129 0
 173 0028 0446     		mov	r4, r0
 174              	.LVL11:
 175              	.L11:
 115:User/delay/core_delay.c ****     if(tnow != told)
 176              		.loc 1 115 0
 177 002a FFF7FEFF 		bl	CPU_TS_TmrRd
 178              	.LVL12:
 116:User/delay/core_delay.c ****     { 
 179              		.loc 1 116 0
 180 002e 8442     		cmp	r4, r0
 181 0030 FBD0     		beq	.L11
 119:User/delay/core_delay.c ****       {
 182              		.loc 1 119 0
 183 0032 F4D2     		bcs	.L13
 121:User/delay/core_delay.c ****       }
 184              		.loc 1 121 0
 185 0034 031B     		subs	r3, r0, r4
 186 0036 1D44     		add	r5, r5, r3
 187              	.LVL13:
 188 0038 F4E7     		b	.L14
 189              	.LVL14:
 190              	.L17:
 133:User/delay/core_delay.c ****     }  
 134:User/delay/core_delay.c ****   }
 135:User/delay/core_delay.c **** }
 191              		.loc 1 135 0
 192 003a 70BD     		pop	{r4, r5, r6, pc}
 193              	.LVL15:
 194              	.L19:
 195              		.align	2
 196              	.L18:
 197 003c 83DE1B43 		.word	1125899907
 198              		.cfi_endproc
 199              	.LFE144:
 201              		.text
 202              	.Letext0:
 203              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 204              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 205              		.file 4 "Libraries/CMSIS/Include/core_cm7.h"
 206              		.file 5 "Libraries/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 207              		.file 6 "/usr/include/newlib/sys/lock.h"
 208              		.file 7 "/usr/include/newlib/sys/_types.h"
 209              		.file 8 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
ARM GAS  /tmp/ccw1ovlW.s 			page 7


 210              		.file 9 "/usr/include/newlib/sys/reent.h"
 211              		.file 10 "/usr/include/newlib/math.h"
 212              		.file 11 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 213              		.file 12 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 214              		.file 13 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 215              		.file 14 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
ARM GAS  /tmp/ccw1ovlW.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 core_delay.c
     /tmp/ccw1ovlW.s:17     .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccw1ovlW.s:24     .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccw1ovlW.s:53     .text.HAL_InitTick:000000000000001c $d
     /tmp/ccw1ovlW.s:60     .text.CPU_TS_TmrRd:0000000000000000 $t
     /tmp/ccw1ovlW.s:67     .text.CPU_TS_TmrRd:0000000000000000 CPU_TS_TmrRd
     /tmp/ccw1ovlW.s:82     .text.CPU_TS_TmrRd:0000000000000008 $d
     /tmp/ccw1ovlW.s:87     .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccw1ovlW.s:94     .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccw1ovlW.s:115    .text.HAL_GetTick:0000000000000018 $d
     /tmp/ccw1ovlW.s:121    .text.CPU_TS_Tmr_Delay_US:0000000000000000 $t
     /tmp/ccw1ovlW.s:128    .text.CPU_TS_Tmr_Delay_US:0000000000000000 CPU_TS_Tmr_Delay_US
     /tmp/ccw1ovlW.s:197    .text.CPU_TS_Tmr_Delay_US:000000000000003c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_RCC_GetSysClockFreq
