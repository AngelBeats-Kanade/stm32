ARM GAS  /tmp/ccyzRlcj.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.SystemClock_Config,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	SystemClock_Config:
  24              	.LFB144:
  25              		.file 1 "User/main.c"
   1:User/main.c   **** /**
   2:User/main.c   ****  ******************************************************************
   3:User/main.c   ****  * @file    main.c
   4:User/main.c   ****  * @author  fire
   5:User/main.c   ****  * @version V1.0
   6:User/main.c   ****  * @date    2018-xx-xx
   7:User/main.c   ****  * @brief   LTDC―液晶显示英文
   8:User/main.c   ****  ******************************************************************
   9:User/main.c   ****  * @attention
  10:User/main.c   ****  *
  11:User/main.c   ****  * 实验平台:野火 STM32H743 开发板
  12:User/main.c   ****  * 论坛    :http://www.firebbs.cn
  13:User/main.c   ****  * 淘宝    :http://firestm32.taobao.com
  14:User/main.c   ****  *
  15:User/main.c   ****  ******************************************************************
  16:User/main.c   ****  */
  17:User/main.c   **** #include "main.h"
  18:User/main.c   **** #include "./delay/core_delay.h"
  19:User/main.c   **** #include "./lcd/bsp_lcd.h"
  20:User/main.c   **** #include "./led/bsp_led.h"
  21:User/main.c   **** #include "./mpu/bsp_mpu.h"
  22:User/main.c   **** #include "./sdram/bsp_sdram.h"
  23:User/main.c   **** #include "./usart/bsp_debug_usart.h"
  24:User/main.c   **** #include "stm32h7xx.h"
  25:User/main.c   **** #include <string.h>
  26:User/main.c   **** 
  27:User/main.c   **** void Delay(__IO uint32_t nCount);
  28:User/main.c   **** 
  29:User/main.c   **** void LCD_Test(void);
  30:User/main.c   **** 
  31:User/main.c   **** /**
  32:User/main.c   ****  * @brief  主函数
  33:User/main.c   ****  * @param  无
ARM GAS  /tmp/ccyzRlcj.s 			page 2


  34:User/main.c   ****  * @retval 无
  35:User/main.c   ****  */
  36:User/main.c   **** int main(void)
  37:User/main.c   **** {
  38:User/main.c   ****   /* 系统时钟初始化成480MHz */
  39:User/main.c   ****   SystemClock_Config();
  40:User/main.c   **** 
  41:User/main.c   ****   /* 配置 MPU */
  42:User/main.c   ****   Board_MPU_Config(0, MPU_Normal_WT, 0xD0000000, MPU_32MB);
  43:User/main.c   ****   Board_MPU_Config(1, MPU_Normal_WT, 0x24000000, MPU_512KB);
  44:User/main.c   **** 
  45:User/main.c   ****   SCB_EnableICache(); // 使能指令 Cache
  46:User/main.c   ****   SCB_EnableDCache(); // 使能数据 Cache
  47:User/main.c   **** 
  48:User/main.c   ****   /* H750XBH6的ADC3_CH1使用的是PC3_C，与PC3是两个不同的引脚，通过一个模拟开关连接，使用时需要切换 *
  49:User/main.c   ****   /* PC3_C ------> ADC3_INP1  */
  50:User/main.c   ****   HAL_SYSCFG_AnalogSwitchConfig(SYSCFG_SWITCH_PA0, SYSCFG_SWITCH_PA0_CLOSE);
  51:User/main.c   **** 
  52:User/main.c   ****   /* LED 端口初始化 */
  53:User/main.c   ****   LED_GPIO_Config();
  54:User/main.c   ****   /* 配置串口1为：115200 8-N-1 */
  55:User/main.c   ****   DEBUG_USART_Config();
  56:User/main.c   **** 
  57:User/main.c   ****   printf("\r\n 欢迎使用野火  STM32 H743 开发板。\r\n");
  58:User/main.c   ****   printf("\r\n野火STM32H750 LTDC液晶显示英文测试例程\r\n");
  59:User/main.c   ****   /*蓝灯亮*/
  60:User/main.c   ****   LED_BLUE;
  61:User/main.c   ****   /* LCD 端口初始化 */
  62:User/main.c   ****   LCD_Init();
  63:User/main.c   ****   /* LCD 第一层初始化 */
  64:User/main.c   ****   LCD_LayerInit(0, LCD_FB_START_ADDRESS, ARGB8888);
  65:User/main.c   ****   /* LCD 第二层初始化 */
  66:User/main.c   ****   LCD_LayerInit(1, LCD_FB_START_ADDRESS + (LCD_GetXSize() * LCD_GetYSize() * 4), ARGB8888);
  67:User/main.c   ****   /* 使能LCD，包括开背光 */
  68:User/main.c   ****   LCD_DisplayOn();
  69:User/main.c   **** 
  70:User/main.c   ****   /* 选择LCD第一层 */
  71:User/main.c   ****   LCD_SelectLayer(0);
  72:User/main.c   **** 
  73:User/main.c   ****   /* 第一层清屏，显示全白 */
  74:User/main.c   ****   LCD_Clear(LCD_COLOR_WHITE);
  75:User/main.c   **** 
  76:User/main.c   ****   /* 选择LCD第二层 */
  77:User/main.c   ****   LCD_SelectLayer(1);
  78:User/main.c   **** 
  79:User/main.c   ****   /* 第二层清屏，显示全白 */
  80:User/main.c   ****   LCD_Clear(LCD_COLOR_WHITE);
  81:User/main.c   **** 
  82:User/main.c   ****   /* 配置第一和第二层的透明度,最小值为0，最大值为255*/
  83:User/main.c   ****   LCD_SetTransparency(0, 255);
  84:User/main.c   ****   LCD_SetTransparency(1, 0);
  85:User/main.c   **** 
  86:User/main.c   ****   /* 设置字体颜色和大小 */
  87:User/main.c   ****   LCD_SelectLayer(0);
  88:User/main.c   ****   LCD_SetColors(LCD_COLOR_BLACK, LCD_COLOR_WHITE);
  89:User/main.c   ****   LCD_SetFont(&LCD_DEFAULT_FONT);
  90:User/main.c   **** 
ARM GAS  /tmp/ccyzRlcj.s 			page 3


  91:User/main.c   ****   LCD_SelectLayer(1);
  92:User/main.c   ****   LCD_SetColors(LCD_COLOR_BLACK, LCD_COLOR_WHITE);
  93:User/main.c   ****   LCD_SetFont(&LCD_DEFAULT_FONT);
  94:User/main.c   **** 
  95:User/main.c   ****   uint8_t num = 0x20;
  96:User/main.c   **** 
  97:User/main.c   ****   while (1)
  98:User/main.c   ****   {
  99:User/main.c   ****     //  LCD_SelectLayer(0);
 100:User/main.c   ****     //  LCD_DisplayChar(17, 24, num);
 101:User/main.c   ****     //  num++;
 102:User/main.c   ****     //  HAL_Delay(1000);
 103:User/main.c   ****     LCD_Test();
 104:User/main.c   ****   }
 105:User/main.c   **** }
 106:User/main.c   **** 
 107:User/main.c   **** /*用于测试各种液晶的函数*/
 108:User/main.c   **** void LCD_Test(void)
 109:User/main.c   **** {
 110:User/main.c   ****   printf("123\n");
 111:User/main.c   ****   /*演示显示变量*/
 112:User/main.c   ****   static uint8_t testCNT = 0;
 113:User/main.c   ****   char dispBuff[100];
 114:User/main.c   **** 
 115:User/main.c   ****   /* 选择LCD第一层 */
 116:User/main.c   ****   LCD_SelectLayer(0);
 117:User/main.c   **** 
 118:User/main.c   ****   /* 清屏，显示全白 */
 119:User/main.c   ****   LCD_Clear(LCD_COLOR_WHITE);
 120:User/main.c   ****   /*设置字体颜色及字体的背景颜色(此处的背景不是指LCD的背景层！注意区分)*/
 121:User/main.c   ****   LCD_SetColors(LCD_COLOR_BLACK, LCD_COLOR_WHITE);
 122:User/main.c   ****   /*选择字体*/
 123:User/main.c   ****   LCD_SetFont(&LCD_DEFAULT_FONT);
 124:User/main.c   **** 
 125:User/main.c   ****   LCD_DisplayStringLine(1, (uint8_t *)"BH 5.0 inch LCD para:");
 126:User/main.c   ****   LCD_DisplayStringLine(2, (uint8_t *)"Image resolution:800x480 px");
 127:User/main.c   ****   LCD_DisplayStringLine(3, (uint8_t *)"Touch pad:5 point touch supported");
 128:User/main.c   ****   LCD_DisplayStringLine(4, (uint8_t *)"Use STM32-LTDC directed driver,");
 129:User/main.c   ****   LCD_DisplayStringLine(5, (uint8_t *)"no need extern driver,RGB888,24bits data bus");
 130:User/main.c   ****   LCD_DisplayStringLine(6, (uint8_t *)"Touch pad use IIC to communicate");
 131:User/main.c   **** 
 132:User/main.c   ****   //	{
 133:User/main.c   ****   testCNT++;
 134:User/main.c   ****   memset(dispBuff, 0, 100);
 135:User/main.c   ****   /*使用c标准库把变量转化成字符串*/
 136:User/main.c   ****   sprintf(dispBuff, "Display value demo: testCount = %d ", testCNT);
 137:User/main.c   ****   LCD_ClearLine(7);
 138:User/main.c   ****   /*设置字体颜色及字体的背景颜色(此处的背景不是指LCD的背景层！注意区分)*/
 139:User/main.c   ****   LCD_SetColors(LCD_COLOR_BLACK, LCD_COLOR_WHITE);
 140:User/main.c   ****   /*然后显示该字符串即可，其它变量也是这样处理*/
 141:User/main.c   ****   LCD_DisplayStringLine(7, (uint8_t *)dispBuff);
 142:User/main.c   **** 
 143:User/main.c   ****   /* 画直线 */
 144:User/main.c   ****   LCD_SetTextColor(LCD_COLOR_BLUE);
 145:User/main.c   **** 
 146:User/main.c   ****   LCD_ClearLine(8);
 147:User/main.c   ****   LCD_DisplayStringLine(8, (uint8_t *)"Draw line:");
ARM GAS  /tmp/ccyzRlcj.s 			page 4


 148:User/main.c   **** 
 149:User/main.c   ****   LCD_SetColors(LCD_COLOR_RED, LCD_COLOR_BLACK);
 150:User/main.c   ****   LCD_DrawLine(50, 250, 750, 250);
 151:User/main.c   ****   LCD_DrawLine(50, 300, 750, 300);
 152:User/main.c   **** 
 153:User/main.c   ****   LCD_SetColors(LCD_COLOR_GREEN, LCD_COLOR_BLACK);
 154:User/main.c   ****   LCD_DrawLine(300, 250, 400, 400);
 155:User/main.c   ****   LCD_DrawLine(600, 250, 600, 400);
 156:User/main.c   **** 
 157:User/main.c   ****   Delay(0x1FFFFFF);
 158:User/main.c   **** 
 159:User/main.c   ****   LCD_SetColors(LCD_COLOR_WHITE, LCD_COLOR_WHITE);
 160:User/main.c   ****   LCD_FillRect(0, 200, LCD_PIXEL_WIDTH, LCD_PIXEL_HEIGHT - 200);
 161:User/main.c   **** 
 162:User/main.c   ****   /*画矩形*/
 163:User/main.c   ****   LCD_SetTextColor(LCD_COLOR_BLUE);
 164:User/main.c   ****   LCD_ClearLine(8);
 165:User/main.c   ****   LCD_DisplayStringLine(8, (uint8_t *)"Draw Rect:");
 166:User/main.c   **** 
 167:User/main.c   ****   LCD_SetColors(LCD_COLOR_RED, LCD_COLOR_BLACK);
 168:User/main.c   ****   LCD_DrawRect(200, 250, 200, 100);
 169:User/main.c   **** 
 170:User/main.c   ****   LCD_SetColors(LCD_COLOR_GREEN, LCD_COLOR_BLACK);
 171:User/main.c   ****   LCD_DrawRect(350, 250, 200, 50);
 172:User/main.c   **** 
 173:User/main.c   ****   LCD_SetColors(LCD_COLOR_BLUE, LCD_COLOR_BLACK);
 174:User/main.c   ****   LCD_DrawRect(200, 350, 50, 200);
 175:User/main.c   **** 
 176:User/main.c   ****   Delay(0x1FFFFFF);
 177:User/main.c   **** 
 178:User/main.c   ****   LCD_SetColors(LCD_COLOR_WHITE, LCD_COLOR_WHITE);
 179:User/main.c   ****   LCD_FillRect(0, 200, LCD_PIXEL_WIDTH, LCD_PIXEL_HEIGHT - 200);
 180:User/main.c   **** 
 181:User/main.c   ****   /*填充矩形*/
 182:User/main.c   ****   LCD_SetTextColor(LCD_COLOR_BLUE);
 183:User/main.c   ****   LCD_ClearLine(8);
 184:User/main.c   ****   LCD_DisplayStringLine(8, (uint8_t *)"Draw Full Rect:");
 185:User/main.c   **** 
 186:User/main.c   ****   LCD_SetColors(LCD_COLOR_RED, LCD_COLOR_BLACK);
 187:User/main.c   ****   LCD_FillRect(200, 250, 200, 100);
 188:User/main.c   **** 
 189:User/main.c   ****   LCD_SetColors(LCD_COLOR_GREEN, LCD_COLOR_BLACK);
 190:User/main.c   ****   LCD_FillRect(350, 250, 200, 50);
 191:User/main.c   **** 
 192:User/main.c   ****   LCD_SetColors(LCD_COLOR_BLUE, LCD_COLOR_BLACK);
 193:User/main.c   ****   LCD_FillRect(200, 350, 50, 200);
 194:User/main.c   **** 
 195:User/main.c   ****   Delay(0x1FFFFFF);
 196:User/main.c   **** 
 197:User/main.c   ****   LCD_SetColors(LCD_COLOR_WHITE, LCD_COLOR_WHITE);
 198:User/main.c   ****   LCD_FillRect(0, 200, LCD_PIXEL_WIDTH, LCD_PIXEL_HEIGHT - 200);
 199:User/main.c   **** 
 200:User/main.c   ****   /* 画圆 */
 201:User/main.c   ****   LCD_SetTextColor(LCD_COLOR_BLUE);
 202:User/main.c   ****   LCD_ClearLine(8);
 203:User/main.c   ****   LCD_ClearLine(8);
 204:User/main.c   ****   LCD_DisplayStringLine(8, (uint8_t *)"Draw circle:");
ARM GAS  /tmp/ccyzRlcj.s 			page 5


 205:User/main.c   **** 
 206:User/main.c   ****   LCD_SetColors(LCD_COLOR_RED, LCD_COLOR_RED);
 207:User/main.c   ****   LCD_DrawCircle(200, 350, 50);
 208:User/main.c   **** 
 209:User/main.c   ****   LCD_SetColors(LCD_COLOR_GREEN, LCD_COLOR_GREEN);
 210:User/main.c   ****   LCD_DrawCircle(350, 350, 75);
 211:User/main.c   **** 
 212:User/main.c   ****   Delay(0x1FFFFFF);
 213:User/main.c   **** 
 214:User/main.c   ****   LCD_SetColors(LCD_COLOR_WHITE, LCD_COLOR_WHITE);
 215:User/main.c   ****   LCD_FillRect(0, 200, LCD_PIXEL_WIDTH, LCD_PIXEL_HEIGHT - 200);
 216:User/main.c   **** 
 217:User/main.c   ****   /*填充圆*/
 218:User/main.c   ****   LCD_SetTextColor(LCD_COLOR_BLUE);
 219:User/main.c   ****   LCD_ClearLine(8);
 220:User/main.c   ****   LCD_DisplayStringLine(8, (uint8_t *)"Draw full circle:");
 221:User/main.c   **** 
 222:User/main.c   ****   LCD_SetColors(LCD_COLOR_RED, LCD_COLOR_BLACK);
 223:User/main.c   ****   LCD_FillCircle(300, 350, 50);
 224:User/main.c   **** 
 225:User/main.c   ****   LCD_SetColors(LCD_COLOR_GREEN, LCD_COLOR_BLACK);
 226:User/main.c   ****   LCD_FillCircle(450, 350, 75);
 227:User/main.c   **** 
 228:User/main.c   ****   Delay(0x1FFFFFF);
 229:User/main.c   **** 
 230:User/main.c   ****   LCD_SetColors(LCD_COLOR_WHITE, LCD_COLOR_WHITE);
 231:User/main.c   ****   LCD_FillRect(0, 200, LCD_PIXEL_WIDTH, LCD_PIXEL_HEIGHT - 200);
 232:User/main.c   **** 
 233:User/main.c   ****   LCD_ClearLine(8);
 234:User/main.c   **** 
 235:User/main.c   ****   /*透明效果 前景层操作*/
 236:User/main.c   ****   LCD_SetTextColor(LCD_COLOR_BLUE);
 237:User/main.c   ****   LCD_ClearLine(8);
 238:User/main.c   ****   LCD_DisplayStringLine(8, (uint8_t *)"Transparency effect:");
 239:User/main.c   **** 
 240:User/main.c   ****   /*设置前景层不透明度*/
 241:User/main.c   ****   LCD_SetTransparency(1, 100);
 242:User/main.c   **** 
 243:User/main.c   ****   /* 选择LCD第一层 */
 244:User/main.c   ****   LCD_SelectLayer(1);
 245:User/main.c   **** 
 246:User/main.c   ****   /* 清屏，显示全白 */
 247:User/main.c   ****   LCD_Clear(LCD_COLOR_WHITE);
 248:User/main.c   ****   /*在前景画一个红色圆*/
 249:User/main.c   ****   LCD_SetColors(LCD_COLOR_RED, LCD_COLOR_TRANSPARENT);
 250:User/main.c   ****   LCD_FillCircle(400, 350, 75);
 251:User/main.c   **** 
 252:User/main.c   ****   Delay(0x1FFFFFF);
 253:User/main.c   **** 
 254:User/main.c   ****   /*透明效果 背景层操作*/
 255:User/main.c   **** 
 256:User/main.c   ****   /* 选择LCD背景层 */
 257:User/main.c   ****   LCD_SelectLayer(0);
 258:User/main.c   ****   LCD_Clear(LCD_COLOR_WHITE);
 259:User/main.c   ****   /*设置背景层不透明*/
 260:User/main.c   ****   LCD_SetTransparency(1, 0);
 261:User/main.c   **** 
ARM GAS  /tmp/ccyzRlcj.s 			page 6


 262:User/main.c   ****   /*在背景画一个绿色圆*/
 263:User/main.c   ****   LCD_SetColors(LCD_COLOR_GREEN, LCD_COLOR_BLACK);
 264:User/main.c   ****   LCD_FillCircle(450, 350, 75);
 265:User/main.c   **** 
 266:User/main.c   ****   /*在背景画一个蓝色圆*/
 267:User/main.c   ****   LCD_SetColors(LCD_COLOR_BLUE, LCD_COLOR_BLACK);
 268:User/main.c   ****   LCD_FillCircle(350, 350, 75);
 269:User/main.c   **** 
 270:User/main.c   ****   Delay(0x1FFFFFF);
 271:User/main.c   ****   LCD_SetColors(LCD_COLOR_WHITE, LCD_COLOR_WHITE);
 272:User/main.c   ****   LCD_FillRect(0, 200, LCD_PIXEL_WIDTH, LCD_PIXEL_HEIGHT - 200);
 273:User/main.c   ****   //	}
 274:User/main.c   **** }
 275:User/main.c   **** 
 276:User/main.c   **** /**
 277:User/main.c   ****  * @brief  System Clock 配置
 278:User/main.c   ****  *         system Clock 配置如下:
 279:User/main.c   ****  *            System Clock source  = PLL (HSE)
 280:User/main.c   ****  *            SYSCLK(Hz)           = 480000000 (CPU Clock)
 281:User/main.c   ****  *            HCLK(Hz)             = 240000000 (AXI and AHBs Clock)
 282:User/main.c   ****  *            AHB Prescaler        = 2
 283:User/main.c   ****  *            D1 APB3 Prescaler    = 2 (APB3 Clock  120MHz)
 284:User/main.c   ****  *            D2 APB1 Prescaler    = 2 (APB1 Clock  120MHz)
 285:User/main.c   ****  *            D2 APB2 Prescaler    = 2 (APB2 Clock  120MHz)
 286:User/main.c   ****  *            D3 APB4 Prescaler    = 2 (APB4 Clock  120MHz)
 287:User/main.c   ****  *            HSE Frequency(Hz)    = 25000000
 288:User/main.c   ****  *            PLL_M                = 5
 289:User/main.c   ****  *            PLL_N                = 192
 290:User/main.c   ****  *            PLL_P                = 2
 291:User/main.c   ****  *            PLL_Q                = 4
 292:User/main.c   ****  *            PLL_R                = 2
 293:User/main.c   ****  *            VDD(V)               = 3.3
 294:User/main.c   ****  *            Flash Latency(WS)    = 4
 295:User/main.c   ****  * @param  None
 296:User/main.c   ****  * @retval None
 297:User/main.c   ****  */
 298:User/main.c   **** /**
 299:User/main.c   ****  * @brief System Clock Configuration
 300:User/main.c   ****  * @retval None
 301:User/main.c   ****  */
 302:User/main.c   **** void SystemClock_Config(void)
 303:User/main.c   **** {
  26              		.loc 1 303 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 112
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 00B5     		push	{lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 4
  33              		.cfi_offset 14, -4
  34 0002 9DB0     		sub	sp, sp, #116
  35              	.LCFI1:
  36              		.cfi_def_cfa_offset 120
 304:User/main.c   ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  37              		.loc 1 304 0
  38 0004 4C22     		movs	r2, #76
  39 0006 0021     		movs	r1, #0
ARM GAS  /tmp/ccyzRlcj.s 			page 7


  40 0008 09A8     		add	r0, sp, #36
  41 000a FFF7FEFF 		bl	memset
  42              	.LVL0:
 305:User/main.c   ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  43              		.loc 1 305 0
  44 000e 2022     		movs	r2, #32
  45 0010 0021     		movs	r1, #0
  46 0012 01A8     		add	r0, sp, #4
  47 0014 FFF7FEFF 		bl	memset
  48              	.LVL1:
 306:User/main.c   **** 
 307:User/main.c   ****   /** 启用电源配置更新
 308:User/main.c   ****    */
 309:User/main.c   ****   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
  49              		.loc 1 309 0
  50 0018 0220     		movs	r0, #2
  51 001a FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
  52              	.LVL2:
  53              	.LBB36:
 310:User/main.c   ****   /** 配置主内稳压器输出电压
 311:User/main.c   ****    */
 312:User/main.c   ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
  54              		.loc 1 312 0
  55 001e 0023     		movs	r3, #0
  56 0020 0093     		str	r3, [sp]
  57 0022 254B     		ldr	r3, .L8
  58 0024 9A69     		ldr	r2, [r3, #24]
  59 0026 42F44042 		orr	r2, r2, #49152
  60 002a 9A61     		str	r2, [r3, #24]
  61 002c 9B69     		ldr	r3, [r3, #24]
  62 002e 03F44043 		and	r3, r3, #49152
  63 0032 0093     		str	r3, [sp]
  64 0034 214B     		ldr	r3, .L8+4
  65 0036 DA6A     		ldr	r2, [r3, #44]
  66 0038 42F00102 		orr	r2, r2, #1
  67 003c DA62     		str	r2, [r3, #44]
  68 003e DB6A     		ldr	r3, [r3, #44]
  69 0040 03F00103 		and	r3, r3, #1
  70 0044 0093     		str	r3, [sp]
  71 0046 009B     		ldr	r3, [sp]
  72              	.L2:
  73              	.LBE36:
 313:User/main.c   **** 
 314:User/main.c   ****   while (!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY))
  74              		.loc 1 314 0 discriminator 1
  75 0048 1B4B     		ldr	r3, .L8
  76 004a 9B69     		ldr	r3, [r3, #24]
  77 004c 13F4005F 		tst	r3, #8192
  78 0050 FAD0     		beq	.L2
 315:User/main.c   ****   {
 316:User/main.c   ****   }
 317:User/main.c   ****   /** 初始化CPU、AHB和APB总线时钟
 318:User/main.c   ****    */
 319:User/main.c   ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  79              		.loc 1 319 0
  80 0052 0123     		movs	r3, #1
  81 0054 0993     		str	r3, [sp, #36]
ARM GAS  /tmp/ccyzRlcj.s 			page 8


 320:User/main.c   ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  82              		.loc 1 320 0
  83 0056 4FF48033 		mov	r3, #65536
  84 005a 0A93     		str	r3, [sp, #40]
 321:User/main.c   ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  85              		.loc 1 321 0
  86 005c 0223     		movs	r3, #2
  87 005e 1293     		str	r3, [sp, #72]
 322:User/main.c   ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  88              		.loc 1 322 0
  89 0060 1393     		str	r3, [sp, #76]
 323:User/main.c   ****   RCC_OscInitStruct.PLL.PLLM = 5;
  90              		.loc 1 323 0
  91 0062 0522     		movs	r2, #5
  92 0064 1492     		str	r2, [sp, #80]
 324:User/main.c   ****   RCC_OscInitStruct.PLL.PLLN = 192;
  93              		.loc 1 324 0
  94 0066 C022     		movs	r2, #192
  95 0068 1592     		str	r2, [sp, #84]
 325:User/main.c   ****   RCC_OscInitStruct.PLL.PLLP = 2;
  96              		.loc 1 325 0
  97 006a 1693     		str	r3, [sp, #88]
 326:User/main.c   ****   RCC_OscInitStruct.PLL.PLLQ = 2;
  98              		.loc 1 326 0
  99 006c 1793     		str	r3, [sp, #92]
 327:User/main.c   ****   RCC_OscInitStruct.PLL.PLLR = 2;
 100              		.loc 1 327 0
 101 006e 1893     		str	r3, [sp, #96]
 328:User/main.c   ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
 102              		.loc 1 328 0
 103 0070 0823     		movs	r3, #8
 104 0072 1993     		str	r3, [sp, #100]
 329:User/main.c   ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 105              		.loc 1 329 0
 106 0074 0023     		movs	r3, #0
 107 0076 1A93     		str	r3, [sp, #104]
 330:User/main.c   ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 108              		.loc 1 330 0
 109 0078 1B93     		str	r3, [sp, #108]
 331:User/main.c   ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 110              		.loc 1 331 0
 111 007a 09A8     		add	r0, sp, #36
 112 007c FFF7FEFF 		bl	HAL_RCC_OscConfig
 113              	.LVL3:
 114 0080 00B1     		cbz	r0, .L3
 115              	.L4:
 116 0082 FEE7     		b	.L4
 117              	.L3:
 332:User/main.c   ****   {
 333:User/main.c   ****     while (1)
 334:User/main.c   ****       ;
 335:User/main.c   ****   }
 336:User/main.c   ****   /** 初始化CPU、AHB和APB总线时钟
 337:User/main.c   ****    */
 338:User/main.c   ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 118              		.loc 1 338 0
 119 0084 3F23     		movs	r3, #63
ARM GAS  /tmp/ccyzRlcj.s 			page 9


 120 0086 0193     		str	r3, [sp, #4]
 339:User/main.c   ****                                 RCC_CLOCKTYPE_D3PCLK1 | RCC_CLOCKTYPE_D1PCLK1;
 340:User/main.c   ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 121              		.loc 1 340 0
 122 0088 0323     		movs	r3, #3
 123 008a 0293     		str	r3, [sp, #8]
 341:User/main.c   ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 124              		.loc 1 341 0
 125 008c 0023     		movs	r3, #0
 126 008e 0393     		str	r3, [sp, #12]
 342:User/main.c   ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 127              		.loc 1 342 0
 128 0090 0823     		movs	r3, #8
 129 0092 0493     		str	r3, [sp, #16]
 343:User/main.c   ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 130              		.loc 1 343 0
 131 0094 4023     		movs	r3, #64
 132 0096 0593     		str	r3, [sp, #20]
 344:User/main.c   ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 133              		.loc 1 344 0
 134 0098 0693     		str	r3, [sp, #24]
 345:User/main.c   ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 135              		.loc 1 345 0
 136 009a 4FF48062 		mov	r2, #1024
 137 009e 0792     		str	r2, [sp, #28]
 346:User/main.c   ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 138              		.loc 1 346 0
 139 00a0 0893     		str	r3, [sp, #32]
 347:User/main.c   **** 
 348:User/main.c   ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 140              		.loc 1 348 0
 141 00a2 0421     		movs	r1, #4
 142 00a4 0DEB0100 		add	r0, sp, r1
 143 00a8 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 144              	.LVL4:
 145 00ac 00B1     		cbz	r0, .L1
 146              	.L6:
 147 00ae FEE7     		b	.L6
 148              	.L1:
 349:User/main.c   ****   {
 350:User/main.c   ****     while (1)
 351:User/main.c   ****       ;
 352:User/main.c   ****   }
 353:User/main.c   **** }
 149              		.loc 1 353 0
 150 00b0 1DB0     		add	sp, sp, #116
 151              	.LCFI2:
 152              		.cfi_def_cfa_offset 4
 153              		@ sp needed
 154 00b2 5DF804FB 		ldr	pc, [sp], #4
 155              	.L9:
 156 00b6 00BF     		.align	2
 157              	.L8:
 158 00b8 00480258 		.word	1476544512
 159 00bc 00040058 		.word	1476396032
 160              		.cfi_endproc
 161              	.LFE144:
ARM GAS  /tmp/ccyzRlcj.s 			page 10


 163              		.section	.text.Delay,"ax",%progbits
 164              		.align	1
 165              		.global	Delay
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 169              		.fpu fpv5-d16
 171              	Delay:
 172              	.LFB145:
 354:User/main.c   **** 
 355:User/main.c   **** void Delay(__IO uint32_t nCount) //简单的延时函数
 356:User/main.c   **** {
 173              		.loc 1 356 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 8
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178              	.LVL5:
 179 0000 82B0     		sub	sp, sp, #8
 180              	.LCFI3:
 181              		.cfi_def_cfa_offset 8
 182 0002 0190     		str	r0, [sp, #4]
 357:User/main.c   ****   for (; nCount != 0; nCount--)
 183              		.loc 1 357 0
 184 0004 02E0     		b	.L11
 185              	.L12:
 186              		.loc 1 357 0 is_stmt 0 discriminator 2
 187 0006 019B     		ldr	r3, [sp, #4]
 188 0008 013B     		subs	r3, r3, #1
 189 000a 0193     		str	r3, [sp, #4]
 190              	.L11:
 191              		.loc 1 357 0 discriminator 1
 192 000c 019B     		ldr	r3, [sp, #4]
 193 000e 002B     		cmp	r3, #0
 194 0010 F9D1     		bne	.L12
 358:User/main.c   ****     ;
 359:User/main.c   **** }
 195              		.loc 1 359 0 is_stmt 1
 196 0012 02B0     		add	sp, sp, #8
 197              	.LCFI4:
 198              		.cfi_def_cfa_offset 0
 199              		@ sp needed
 200 0014 7047     		bx	lr
 201              		.cfi_endproc
 202              	.LFE145:
 204              		.section	.text.LCD_Test,"ax",%progbits
 205              		.align	1
 206              		.global	LCD_Test
 207              		.syntax unified
 208              		.thumb
 209              		.thumb_func
 210              		.fpu fpv5-d16
 212              	LCD_Test:
 213              	.LFB143:
 109:User/main.c   ****   printf("123\n");
 214              		.loc 1 109 0
 215              		.cfi_startproc
ARM GAS  /tmp/ccyzRlcj.s 			page 11


 216              		@ args = 0, pretend = 0, frame = 104
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218 0000 70B5     		push	{r4, r5, r6, lr}
 219              	.LCFI5:
 220              		.cfi_def_cfa_offset 16
 221              		.cfi_offset 4, -16
 222              		.cfi_offset 5, -12
 223              		.cfi_offset 6, -8
 224              		.cfi_offset 14, -4
 225 0002 9AB0     		sub	sp, sp, #104
 226              	.LCFI6:
 227              		.cfi_def_cfa_offset 120
 110:User/main.c   ****   /*演示显示变量*/
 228              		.loc 1 110 0
 229 0004 E848     		ldr	r0, .L16
 230 0006 FFF7FEFF 		bl	puts
 231              	.LVL6:
 116:User/main.c   **** 
 232              		.loc 1 116 0
 233 000a 0020     		movs	r0, #0
 234 000c FFF7FEFF 		bl	LCD_SelectLayer
 235              	.LVL7:
 119:User/main.c   ****   /*设置字体颜色及字体的背景颜色(此处的背景不是指LCD的背景层！注意区分)*/
 236              		.loc 1 119 0
 237 0010 4FF0FF30 		mov	r0, #-1
 238 0014 FFF7FEFF 		bl	LCD_Clear
 239              	.LVL8:
 121:User/main.c   ****   /*选择字体*/
 240              		.loc 1 121 0
 241 0018 4FF0FF31 		mov	r1, #-1
 242 001c 4FF07F40 		mov	r0, #-16777216
 243 0020 FFF7FEFF 		bl	LCD_SetColors
 244              	.LVL9:
 123:User/main.c   **** 
 245              		.loc 1 123 0
 246 0024 E148     		ldr	r0, .L16+4
 247 0026 FFF7FEFF 		bl	LCD_SetFont
 248              	.LVL10:
 125:User/main.c   ****   LCD_DisplayStringLine(2, (uint8_t *)"Image resolution:800x480 px");
 249              		.loc 1 125 0
 250 002a E149     		ldr	r1, .L16+8
 251 002c 0120     		movs	r0, #1
 252 002e FFF7FEFF 		bl	LCD_DisplayStringLine
 253              	.LVL11:
 126:User/main.c   ****   LCD_DisplayStringLine(3, (uint8_t *)"Touch pad:5 point touch supported");
 254              		.loc 1 126 0
 255 0032 E049     		ldr	r1, .L16+12
 256 0034 0220     		movs	r0, #2
 257 0036 FFF7FEFF 		bl	LCD_DisplayStringLine
 258              	.LVL12:
 127:User/main.c   ****   LCD_DisplayStringLine(4, (uint8_t *)"Use STM32-LTDC directed driver,");
 259              		.loc 1 127 0
 260 003a DF49     		ldr	r1, .L16+16
 261 003c 0320     		movs	r0, #3
 262 003e FFF7FEFF 		bl	LCD_DisplayStringLine
 263              	.LVL13:
 128:User/main.c   ****   LCD_DisplayStringLine(5, (uint8_t *)"no need extern driver,RGB888,24bits data bus");
ARM GAS  /tmp/ccyzRlcj.s 			page 12


 264              		.loc 1 128 0
 265 0042 DE49     		ldr	r1, .L16+20
 266 0044 0420     		movs	r0, #4
 267 0046 FFF7FEFF 		bl	LCD_DisplayStringLine
 268              	.LVL14:
 129:User/main.c   ****   LCD_DisplayStringLine(6, (uint8_t *)"Touch pad use IIC to communicate");
 269              		.loc 1 129 0
 270 004a DD49     		ldr	r1, .L16+24
 271 004c 0520     		movs	r0, #5
 272 004e FFF7FEFF 		bl	LCD_DisplayStringLine
 273              	.LVL15:
 130:User/main.c   **** 
 274              		.loc 1 130 0
 275 0052 DC49     		ldr	r1, .L16+28
 276 0054 0620     		movs	r0, #6
 277 0056 FFF7FEFF 		bl	LCD_DisplayStringLine
 278              	.LVL16:
 133:User/main.c   ****   memset(dispBuff, 0, 100);
 279              		.loc 1 133 0
 280 005a DB4B     		ldr	r3, .L16+32
 281 005c 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 282 005e 0134     		adds	r4, r4, #1
 283 0060 E4B2     		uxtb	r4, r4
 284 0062 1C70     		strb	r4, [r3]
 134:User/main.c   ****   /*使用c标准库把变量转化成字符串*/
 285              		.loc 1 134 0
 286 0064 6426     		movs	r6, #100
 287 0066 3246     		mov	r2, r6
 288 0068 0021     		movs	r1, #0
 289 006a 01A8     		add	r0, sp, #4
 290 006c FFF7FEFF 		bl	memset
 291              	.LVL17:
 136:User/main.c   ****   LCD_ClearLine(7);
 292              		.loc 1 136 0
 293 0070 2246     		mov	r2, r4
 294 0072 D649     		ldr	r1, .L16+36
 295 0074 01A8     		add	r0, sp, #4
 296 0076 FFF7FEFF 		bl	sprintf
 297              	.LVL18:
 137:User/main.c   ****   /*设置字体颜色及字体的背景颜色(此处的背景不是指LCD的背景层！注意区分)*/
 298              		.loc 1 137 0
 299 007a 0720     		movs	r0, #7
 300 007c FFF7FEFF 		bl	LCD_ClearLine
 301              	.LVL19:
 139:User/main.c   ****   /*然后显示该字符串即可，其它变量也是这样处理*/
 302              		.loc 1 139 0
 303 0080 4FF0FF31 		mov	r1, #-1
 304 0084 4FF07F40 		mov	r0, #-16777216
 305 0088 FFF7FEFF 		bl	LCD_SetColors
 306              	.LVL20:
 141:User/main.c   **** 
 307              		.loc 1 141 0
 308 008c 01A9     		add	r1, sp, #4
 309 008e 0720     		movs	r0, #7
 310 0090 FFF7FEFF 		bl	LCD_DisplayStringLine
 311              	.LVL21:
 144:User/main.c   **** 
ARM GAS  /tmp/ccyzRlcj.s 			page 13


 312              		.loc 1 144 0
 313 0094 CE4C     		ldr	r4, .L16+40
 314 0096 2046     		mov	r0, r4
 315 0098 FFF7FEFF 		bl	LCD_SetTextColor
 316              	.LVL22:
 146:User/main.c   ****   LCD_DisplayStringLine(8, (uint8_t *)"Draw line:");
 317              		.loc 1 146 0
 318 009c 0820     		movs	r0, #8
 319 009e FFF7FEFF 		bl	LCD_ClearLine
 320              	.LVL23:
 147:User/main.c   **** 
 321              		.loc 1 147 0
 322 00a2 CC49     		ldr	r1, .L16+44
 323 00a4 0820     		movs	r0, #8
 324 00a6 FFF7FEFF 		bl	LCD_DisplayStringLine
 325              	.LVL24:
 149:User/main.c   ****   LCD_DrawLine(50, 250, 750, 250);
 326              		.loc 1 149 0
 327 00aa CB4D     		ldr	r5, .L16+48
 328 00ac 4FF07F41 		mov	r1, #-16777216
 329 00b0 2846     		mov	r0, r5
 330 00b2 FFF7FEFF 		bl	LCD_SetColors
 331              	.LVL25:
 150:User/main.c   ****   LCD_DrawLine(50, 300, 750, 300);
 332              		.loc 1 150 0
 333 00b6 FA23     		movs	r3, #250
 334 00b8 40F2EE22 		movw	r2, #750
 335 00bc 1946     		mov	r1, r3
 336 00be 3220     		movs	r0, #50
 337 00c0 FFF7FEFF 		bl	LCD_DrawLine
 338              	.LVL26:
 151:User/main.c   **** 
 339              		.loc 1 151 0
 340 00c4 4FF49673 		mov	r3, #300
 341 00c8 40F2EE22 		movw	r2, #750
 342 00cc 1946     		mov	r1, r3
 343 00ce 3220     		movs	r0, #50
 344 00d0 FFF7FEFF 		bl	LCD_DrawLine
 345              	.LVL27:
 153:User/main.c   ****   LCD_DrawLine(300, 250, 400, 400);
 346              		.loc 1 153 0
 347 00d4 4FF07F41 		mov	r1, #-16777216
 348 00d8 4FF0FF20 		mov	r0, #-16711936
 349 00dc FFF7FEFF 		bl	LCD_SetColors
 350              	.LVL28:
 154:User/main.c   ****   LCD_DrawLine(600, 250, 600, 400);
 351              		.loc 1 154 0
 352 00e0 4FF4C873 		mov	r3, #400
 353 00e4 1A46     		mov	r2, r3
 354 00e6 FA21     		movs	r1, #250
 355 00e8 4FF49670 		mov	r0, #300
 356 00ec FFF7FEFF 		bl	LCD_DrawLine
 357              	.LVL29:
 155:User/main.c   **** 
 358              		.loc 1 155 0
 359 00f0 4FF4C873 		mov	r3, #400
 360 00f4 4FF41672 		mov	r2, #600
ARM GAS  /tmp/ccyzRlcj.s 			page 14


 361 00f8 FA21     		movs	r1, #250
 362 00fa 1046     		mov	r0, r2
 363 00fc FFF7FEFF 		bl	LCD_DrawLine
 364              	.LVL30:
 157:User/main.c   **** 
 365              		.loc 1 157 0
 366 0100 6FF07E40 		mvn	r0, #-33554432
 367 0104 FFF7FEFF 		bl	Delay
 368              	.LVL31:
 159:User/main.c   ****   LCD_FillRect(0, 200, LCD_PIXEL_WIDTH, LCD_PIXEL_HEIGHT - 200);
 369              		.loc 1 159 0
 370 0108 4FF0FF31 		mov	r1, #-1
 371 010c 0846     		mov	r0, r1
 372 010e FFF7FEFF 		bl	LCD_SetColors
 373              	.LVL32:
 160:User/main.c   **** 
 374              		.loc 1 160 0
 375 0112 4FF48C73 		mov	r3, #280
 376 0116 4FF44872 		mov	r2, #800
 377 011a C821     		movs	r1, #200
 378 011c 0020     		movs	r0, #0
 379 011e FFF7FEFF 		bl	LCD_FillRect
 380              	.LVL33:
 163:User/main.c   ****   LCD_ClearLine(8);
 381              		.loc 1 163 0
 382 0122 2046     		mov	r0, r4
 383 0124 FFF7FEFF 		bl	LCD_SetTextColor
 384              	.LVL34:
 164:User/main.c   ****   LCD_DisplayStringLine(8, (uint8_t *)"Draw Rect:");
 385              		.loc 1 164 0
 386 0128 0820     		movs	r0, #8
 387 012a FFF7FEFF 		bl	LCD_ClearLine
 388              	.LVL35:
 165:User/main.c   **** 
 389              		.loc 1 165 0
 390 012e AB49     		ldr	r1, .L16+52
 391 0130 0820     		movs	r0, #8
 392 0132 FFF7FEFF 		bl	LCD_DisplayStringLine
 393              	.LVL36:
 167:User/main.c   ****   LCD_DrawRect(200, 250, 200, 100);
 394              		.loc 1 167 0
 395 0136 4FF07F41 		mov	r1, #-16777216
 396 013a 2846     		mov	r0, r5
 397 013c FFF7FEFF 		bl	LCD_SetColors
 398              	.LVL37:
 168:User/main.c   **** 
 399              		.loc 1 168 0
 400 0140 3346     		mov	r3, r6
 401 0142 C822     		movs	r2, #200
 402 0144 FA21     		movs	r1, #250
 403 0146 1046     		mov	r0, r2
 404 0148 FFF7FEFF 		bl	LCD_DrawRect
 405              	.LVL38:
 170:User/main.c   ****   LCD_DrawRect(350, 250, 200, 50);
 406              		.loc 1 170 0
 407 014c 4FF07F41 		mov	r1, #-16777216
 408 0150 4FF0FF20 		mov	r0, #-16711936
ARM GAS  /tmp/ccyzRlcj.s 			page 15


 409 0154 FFF7FEFF 		bl	LCD_SetColors
 410              	.LVL39:
 171:User/main.c   **** 
 411              		.loc 1 171 0
 412 0158 3223     		movs	r3, #50
 413 015a C822     		movs	r2, #200
 414 015c FA21     		movs	r1, #250
 415 015e 4FF4AF70 		mov	r0, #350
 416 0162 FFF7FEFF 		bl	LCD_DrawRect
 417              	.LVL40:
 173:User/main.c   ****   LCD_DrawRect(200, 350, 50, 200);
 418              		.loc 1 173 0
 419 0166 4FF07F41 		mov	r1, #-16777216
 420 016a 2046     		mov	r0, r4
 421 016c FFF7FEFF 		bl	LCD_SetColors
 422              	.LVL41:
 174:User/main.c   **** 
 423              		.loc 1 174 0
 424 0170 C823     		movs	r3, #200
 425 0172 3222     		movs	r2, #50
 426 0174 4FF4AF71 		mov	r1, #350
 427 0178 1846     		mov	r0, r3
 428 017a FFF7FEFF 		bl	LCD_DrawRect
 429              	.LVL42:
 176:User/main.c   **** 
 430              		.loc 1 176 0
 431 017e 6FF07E40 		mvn	r0, #-33554432
 432 0182 FFF7FEFF 		bl	Delay
 433              	.LVL43:
 178:User/main.c   ****   LCD_FillRect(0, 200, LCD_PIXEL_WIDTH, LCD_PIXEL_HEIGHT - 200);
 434              		.loc 1 178 0
 435 0186 4FF0FF31 		mov	r1, #-1
 436 018a 0846     		mov	r0, r1
 437 018c FFF7FEFF 		bl	LCD_SetColors
 438              	.LVL44:
 179:User/main.c   **** 
 439              		.loc 1 179 0
 440 0190 4FF48C73 		mov	r3, #280
 441 0194 4FF44872 		mov	r2, #800
 442 0198 C821     		movs	r1, #200
 443 019a 0020     		movs	r0, #0
 444 019c FFF7FEFF 		bl	LCD_FillRect
 445              	.LVL45:
 182:User/main.c   ****   LCD_ClearLine(8);
 446              		.loc 1 182 0
 447 01a0 2046     		mov	r0, r4
 448 01a2 FFF7FEFF 		bl	LCD_SetTextColor
 449              	.LVL46:
 183:User/main.c   ****   LCD_DisplayStringLine(8, (uint8_t *)"Draw Full Rect:");
 450              		.loc 1 183 0
 451 01a6 0820     		movs	r0, #8
 452 01a8 FFF7FEFF 		bl	LCD_ClearLine
 453              	.LVL47:
 184:User/main.c   **** 
 454              		.loc 1 184 0
 455 01ac 8C49     		ldr	r1, .L16+56
 456 01ae 0820     		movs	r0, #8
ARM GAS  /tmp/ccyzRlcj.s 			page 16


 457 01b0 FFF7FEFF 		bl	LCD_DisplayStringLine
 458              	.LVL48:
 186:User/main.c   ****   LCD_FillRect(200, 250, 200, 100);
 459              		.loc 1 186 0
 460 01b4 4FF07F41 		mov	r1, #-16777216
 461 01b8 2846     		mov	r0, r5
 462 01ba FFF7FEFF 		bl	LCD_SetColors
 463              	.LVL49:
 187:User/main.c   **** 
 464              		.loc 1 187 0
 465 01be 3346     		mov	r3, r6
 466 01c0 C822     		movs	r2, #200
 467 01c2 FA21     		movs	r1, #250
 468 01c4 1046     		mov	r0, r2
 469 01c6 FFF7FEFF 		bl	LCD_FillRect
 470              	.LVL50:
 189:User/main.c   ****   LCD_FillRect(350, 250, 200, 50);
 471              		.loc 1 189 0
 472 01ca 4FF07F41 		mov	r1, #-16777216
 473 01ce 4FF0FF20 		mov	r0, #-16711936
 474 01d2 FFF7FEFF 		bl	LCD_SetColors
 475              	.LVL51:
 190:User/main.c   **** 
 476              		.loc 1 190 0
 477 01d6 3223     		movs	r3, #50
 478 01d8 C822     		movs	r2, #200
 479 01da FA21     		movs	r1, #250
 480 01dc 4FF4AF70 		mov	r0, #350
 481 01e0 FFF7FEFF 		bl	LCD_FillRect
 482              	.LVL52:
 192:User/main.c   ****   LCD_FillRect(200, 350, 50, 200);
 483              		.loc 1 192 0
 484 01e4 4FF07F41 		mov	r1, #-16777216
 485 01e8 2046     		mov	r0, r4
 486 01ea FFF7FEFF 		bl	LCD_SetColors
 487              	.LVL53:
 193:User/main.c   **** 
 488              		.loc 1 193 0
 489 01ee C823     		movs	r3, #200
 490 01f0 3222     		movs	r2, #50
 491 01f2 4FF4AF71 		mov	r1, #350
 492 01f6 1846     		mov	r0, r3
 493 01f8 FFF7FEFF 		bl	LCD_FillRect
 494              	.LVL54:
 195:User/main.c   **** 
 495              		.loc 1 195 0
 496 01fc 6FF07E40 		mvn	r0, #-33554432
 497 0200 FFF7FEFF 		bl	Delay
 498              	.LVL55:
 197:User/main.c   ****   LCD_FillRect(0, 200, LCD_PIXEL_WIDTH, LCD_PIXEL_HEIGHT - 200);
 499              		.loc 1 197 0
 500 0204 4FF0FF31 		mov	r1, #-1
 501 0208 0846     		mov	r0, r1
 502 020a FFF7FEFF 		bl	LCD_SetColors
 503              	.LVL56:
 198:User/main.c   **** 
 504              		.loc 1 198 0
ARM GAS  /tmp/ccyzRlcj.s 			page 17


 505 020e 4FF48C73 		mov	r3, #280
 506 0212 4FF44872 		mov	r2, #800
 507 0216 C821     		movs	r1, #200
 508 0218 0020     		movs	r0, #0
 509 021a FFF7FEFF 		bl	LCD_FillRect
 510              	.LVL57:
 201:User/main.c   ****   LCD_ClearLine(8);
 511              		.loc 1 201 0
 512 021e 2046     		mov	r0, r4
 513 0220 FFF7FEFF 		bl	LCD_SetTextColor
 514              	.LVL58:
 202:User/main.c   ****   LCD_ClearLine(8);
 515              		.loc 1 202 0
 516 0224 0820     		movs	r0, #8
 517 0226 FFF7FEFF 		bl	LCD_ClearLine
 518              	.LVL59:
 203:User/main.c   ****   LCD_DisplayStringLine(8, (uint8_t *)"Draw circle:");
 519              		.loc 1 203 0
 520 022a 0820     		movs	r0, #8
 521 022c FFF7FEFF 		bl	LCD_ClearLine
 522              	.LVL60:
 204:User/main.c   **** 
 523              		.loc 1 204 0
 524 0230 6C49     		ldr	r1, .L16+60
 525 0232 0820     		movs	r0, #8
 526 0234 FFF7FEFF 		bl	LCD_DisplayStringLine
 527              	.LVL61:
 206:User/main.c   ****   LCD_DrawCircle(200, 350, 50);
 528              		.loc 1 206 0
 529 0238 2946     		mov	r1, r5
 530 023a 2846     		mov	r0, r5
 531 023c FFF7FEFF 		bl	LCD_SetColors
 532              	.LVL62:
 207:User/main.c   **** 
 533              		.loc 1 207 0
 534 0240 3222     		movs	r2, #50
 535 0242 4FF4AF71 		mov	r1, #350
 536 0246 C820     		movs	r0, #200
 537 0248 FFF7FEFF 		bl	LCD_DrawCircle
 538              	.LVL63:
 209:User/main.c   ****   LCD_DrawCircle(350, 350, 75);
 539              		.loc 1 209 0
 540 024c 4FF0FF21 		mov	r1, #-16711936
 541 0250 0846     		mov	r0, r1
 542 0252 FFF7FEFF 		bl	LCD_SetColors
 543              	.LVL64:
 210:User/main.c   **** 
 544              		.loc 1 210 0
 545 0256 4B22     		movs	r2, #75
 546 0258 4FF4AF71 		mov	r1, #350
 547 025c 0846     		mov	r0, r1
 548 025e FFF7FEFF 		bl	LCD_DrawCircle
 549              	.LVL65:
 212:User/main.c   **** 
 550              		.loc 1 212 0
 551 0262 6FF07E40 		mvn	r0, #-33554432
 552 0266 FFF7FEFF 		bl	Delay
ARM GAS  /tmp/ccyzRlcj.s 			page 18


 553              	.LVL66:
 214:User/main.c   ****   LCD_FillRect(0, 200, LCD_PIXEL_WIDTH, LCD_PIXEL_HEIGHT - 200);
 554              		.loc 1 214 0
 555 026a 4FF0FF31 		mov	r1, #-1
 556 026e 0846     		mov	r0, r1
 557 0270 FFF7FEFF 		bl	LCD_SetColors
 558              	.LVL67:
 215:User/main.c   **** 
 559              		.loc 1 215 0
 560 0274 4FF48C73 		mov	r3, #280
 561 0278 4FF44872 		mov	r2, #800
 562 027c C821     		movs	r1, #200
 563 027e 0020     		movs	r0, #0
 564 0280 FFF7FEFF 		bl	LCD_FillRect
 565              	.LVL68:
 218:User/main.c   ****   LCD_ClearLine(8);
 566              		.loc 1 218 0
 567 0284 2046     		mov	r0, r4
 568 0286 FFF7FEFF 		bl	LCD_SetTextColor
 569              	.LVL69:
 219:User/main.c   ****   LCD_DisplayStringLine(8, (uint8_t *)"Draw full circle:");
 570              		.loc 1 219 0
 571 028a 0820     		movs	r0, #8
 572 028c FFF7FEFF 		bl	LCD_ClearLine
 573              	.LVL70:
 220:User/main.c   **** 
 574              		.loc 1 220 0
 575 0290 5549     		ldr	r1, .L16+64
 576 0292 0820     		movs	r0, #8
 577 0294 FFF7FEFF 		bl	LCD_DisplayStringLine
 578              	.LVL71:
 222:User/main.c   ****   LCD_FillCircle(300, 350, 50);
 579              		.loc 1 222 0
 580 0298 4FF07F41 		mov	r1, #-16777216
 581 029c 2846     		mov	r0, r5
 582 029e FFF7FEFF 		bl	LCD_SetColors
 583              	.LVL72:
 223:User/main.c   **** 
 584              		.loc 1 223 0
 585 02a2 3222     		movs	r2, #50
 586 02a4 4FF4AF71 		mov	r1, #350
 587 02a8 4FF49670 		mov	r0, #300
 588 02ac FFF7FEFF 		bl	LCD_FillCircle
 589              	.LVL73:
 225:User/main.c   ****   LCD_FillCircle(450, 350, 75);
 590              		.loc 1 225 0
 591 02b0 4FF07F41 		mov	r1, #-16777216
 592 02b4 4FF0FF20 		mov	r0, #-16711936
 593 02b8 FFF7FEFF 		bl	LCD_SetColors
 594              	.LVL74:
 226:User/main.c   **** 
 595              		.loc 1 226 0
 596 02bc 4B22     		movs	r2, #75
 597 02be 4FF4AF71 		mov	r1, #350
 598 02c2 4FF4E170 		mov	r0, #450
 599 02c6 FFF7FEFF 		bl	LCD_FillCircle
 600              	.LVL75:
ARM GAS  /tmp/ccyzRlcj.s 			page 19


 228:User/main.c   **** 
 601              		.loc 1 228 0
 602 02ca 6FF07E40 		mvn	r0, #-33554432
 603 02ce FFF7FEFF 		bl	Delay
 604              	.LVL76:
 230:User/main.c   ****   LCD_FillRect(0, 200, LCD_PIXEL_WIDTH, LCD_PIXEL_HEIGHT - 200);
 605              		.loc 1 230 0
 606 02d2 4FF0FF31 		mov	r1, #-1
 607 02d6 0846     		mov	r0, r1
 608 02d8 FFF7FEFF 		bl	LCD_SetColors
 609              	.LVL77:
 231:User/main.c   **** 
 610              		.loc 1 231 0
 611 02dc 4FF48C73 		mov	r3, #280
 612 02e0 4FF44872 		mov	r2, #800
 613 02e4 C821     		movs	r1, #200
 614 02e6 0020     		movs	r0, #0
 615 02e8 FFF7FEFF 		bl	LCD_FillRect
 616              	.LVL78:
 233:User/main.c   **** 
 617              		.loc 1 233 0
 618 02ec 0820     		movs	r0, #8
 619 02ee FFF7FEFF 		bl	LCD_ClearLine
 620              	.LVL79:
 236:User/main.c   ****   LCD_ClearLine(8);
 621              		.loc 1 236 0
 622 02f2 2046     		mov	r0, r4
 623 02f4 FFF7FEFF 		bl	LCD_SetTextColor
 624              	.LVL80:
 237:User/main.c   ****   LCD_DisplayStringLine(8, (uint8_t *)"Transparency effect:");
 625              		.loc 1 237 0
 626 02f8 0820     		movs	r0, #8
 627 02fa FFF7FEFF 		bl	LCD_ClearLine
 628              	.LVL81:
 238:User/main.c   **** 
 629              		.loc 1 238 0
 630 02fe 3B49     		ldr	r1, .L16+68
 631 0300 0820     		movs	r0, #8
 632 0302 FFF7FEFF 		bl	LCD_DisplayStringLine
 633              	.LVL82:
 241:User/main.c   **** 
 634              		.loc 1 241 0
 635 0306 3146     		mov	r1, r6
 636 0308 0120     		movs	r0, #1
 637 030a FFF7FEFF 		bl	LCD_SetTransparency
 638              	.LVL83:
 244:User/main.c   **** 
 639              		.loc 1 244 0
 640 030e 0120     		movs	r0, #1
 641 0310 FFF7FEFF 		bl	LCD_SelectLayer
 642              	.LVL84:
 247:User/main.c   ****   /*在前景画一个红色圆*/
 643              		.loc 1 247 0
 644 0314 4FF0FF30 		mov	r0, #-1
 645 0318 FFF7FEFF 		bl	LCD_Clear
 646              	.LVL85:
 249:User/main.c   ****   LCD_FillCircle(400, 350, 75);
ARM GAS  /tmp/ccyzRlcj.s 			page 20


 647              		.loc 1 249 0
 648 031c 4FF07F41 		mov	r1, #-16777216
 649 0320 2846     		mov	r0, r5
 650 0322 FFF7FEFF 		bl	LCD_SetColors
 651              	.LVL86:
 250:User/main.c   **** 
 652              		.loc 1 250 0
 653 0326 4B22     		movs	r2, #75
 654 0328 4FF4AF71 		mov	r1, #350
 655 032c 4FF4C870 		mov	r0, #400
 656 0330 FFF7FEFF 		bl	LCD_FillCircle
 657              	.LVL87:
 252:User/main.c   **** 
 658              		.loc 1 252 0
 659 0334 6FF07E40 		mvn	r0, #-33554432
 660 0338 FFF7FEFF 		bl	Delay
 661              	.LVL88:
 257:User/main.c   ****   LCD_Clear(LCD_COLOR_WHITE);
 662              		.loc 1 257 0
 663 033c 0020     		movs	r0, #0
 664 033e FFF7FEFF 		bl	LCD_SelectLayer
 665              	.LVL89:
 258:User/main.c   ****   /*设置背景层不透明*/
 666              		.loc 1 258 0
 667 0342 4FF0FF30 		mov	r0, #-1
 668 0346 FFF7FEFF 		bl	LCD_Clear
 669              	.LVL90:
 260:User/main.c   **** 
 670              		.loc 1 260 0
 671 034a 0021     		movs	r1, #0
 672 034c 0120     		movs	r0, #1
 673 034e FFF7FEFF 		bl	LCD_SetTransparency
 674              	.LVL91:
 263:User/main.c   ****   LCD_FillCircle(450, 350, 75);
 675              		.loc 1 263 0
 676 0352 4FF07F41 		mov	r1, #-16777216
 677 0356 4FF0FF20 		mov	r0, #-16711936
 678 035a FFF7FEFF 		bl	LCD_SetColors
 679              	.LVL92:
 264:User/main.c   **** 
 680              		.loc 1 264 0
 681 035e 4B22     		movs	r2, #75
 682 0360 4FF4AF71 		mov	r1, #350
 683 0364 4FF4E170 		mov	r0, #450
 684 0368 FFF7FEFF 		bl	LCD_FillCircle
 685              	.LVL93:
 267:User/main.c   ****   LCD_FillCircle(350, 350, 75);
 686              		.loc 1 267 0
 687 036c 4FF07F41 		mov	r1, #-16777216
 688 0370 2046     		mov	r0, r4
 689 0372 FFF7FEFF 		bl	LCD_SetColors
 690              	.LVL94:
 268:User/main.c   **** 
 691              		.loc 1 268 0
 692 0376 4B22     		movs	r2, #75
 693 0378 4FF4AF71 		mov	r1, #350
 694 037c 0846     		mov	r0, r1
ARM GAS  /tmp/ccyzRlcj.s 			page 21


 695 037e FFF7FEFF 		bl	LCD_FillCircle
 696              	.LVL95:
 270:User/main.c   ****   LCD_SetColors(LCD_COLOR_WHITE, LCD_COLOR_WHITE);
 697              		.loc 1 270 0
 698 0382 6FF07E40 		mvn	r0, #-33554432
 699 0386 FFF7FEFF 		bl	Delay
 700              	.LVL96:
 271:User/main.c   ****   LCD_FillRect(0, 200, LCD_PIXEL_WIDTH, LCD_PIXEL_HEIGHT - 200);
 701              		.loc 1 271 0
 702 038a 4FF0FF31 		mov	r1, #-1
 703 038e 0846     		mov	r0, r1
 704 0390 FFF7FEFF 		bl	LCD_SetColors
 705              	.LVL97:
 272:User/main.c   ****   //	}
 706              		.loc 1 272 0
 707 0394 4FF48C73 		mov	r3, #280
 708 0398 4FF44872 		mov	r2, #800
 709 039c C821     		movs	r1, #200
 710 039e 0020     		movs	r0, #0
 711 03a0 FFF7FEFF 		bl	LCD_FillRect
 712              	.LVL98:
 274:User/main.c   **** 
 713              		.loc 1 274 0
 714 03a4 1AB0     		add	sp, sp, #104
 715              	.LCFI7:
 716              		.cfi_def_cfa_offset 16
 717              		@ sp needed
 718 03a6 70BD     		pop	{r4, r5, r6, pc}
 719              	.L17:
 720              		.align	2
 721              	.L16:
 722 03a8 00000000 		.word	.LC0
 723 03ac 00000000 		.word	Font24
 724 03b0 04000000 		.word	.LC1
 725 03b4 1C000000 		.word	.LC2
 726 03b8 38000000 		.word	.LC3
 727 03bc 5C000000 		.word	.LC4
 728 03c0 7C000000 		.word	.LC5
 729 03c4 AC000000 		.word	.LC6
 730 03c8 00000000 		.word	.LANCHOR0
 731 03cc D0000000 		.word	.LC7
 732 03d0 FF0000FF 		.word	-16776961
 733 03d4 F4000000 		.word	.LC8
 734 03d8 0000FFFF 		.word	-65536
 735 03dc 00010000 		.word	.LC9
 736 03e0 0C010000 		.word	.LC10
 737 03e4 1C010000 		.word	.LC11
 738 03e8 2C010000 		.word	.LC12
 739 03ec 40010000 		.word	.LC13
 740              		.cfi_endproc
 741              	.LFE143:
 743              		.section	.text.main,"ax",%progbits
 744              		.align	1
 745              		.global	main
 746              		.syntax unified
 747              		.thumb
 748              		.thumb_func
ARM GAS  /tmp/ccyzRlcj.s 			page 22


 749              		.fpu fpv5-d16
 751              	main:
 752              	.LFB142:
  37:User/main.c   ****   /* 系统时钟初始化成480MHz */
 753              		.loc 1 37 0
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 0
 756              		@ frame_needed = 0, uses_anonymous_args = 0
 757 0000 38B5     		push	{r3, r4, r5, lr}
 758              	.LCFI8:
 759              		.cfi_def_cfa_offset 16
 760              		.cfi_offset 3, -16
 761              		.cfi_offset 4, -12
 762              		.cfi_offset 5, -8
 763              		.cfi_offset 14, -4
  39:User/main.c   **** 
 764              		.loc 1 39 0
 765 0002 FFF7FEFF 		bl	SystemClock_Config
 766              	.LVL99:
  42:User/main.c   ****   Board_MPU_Config(1, MPU_Normal_WT, 0x24000000, MPU_512KB);
 767              		.loc 1 42 0
 768 0006 1823     		movs	r3, #24
 769 0008 4FF05042 		mov	r2, #-805306368
 770 000c 0221     		movs	r1, #2
 771 000e 0020     		movs	r0, #0
 772 0010 FFF7FEFF 		bl	Board_MPU_Config
 773              	.LVL100:
  43:User/main.c   **** 
 774              		.loc 1 43 0
 775 0014 1223     		movs	r3, #18
 776 0016 4FF01052 		mov	r2, #603979776
 777 001a 0221     		movs	r1, #2
 778 001c 0120     		movs	r0, #1
 779 001e FFF7FEFF 		bl	Board_MPU_Config
 780              	.LVL101:
 781              	.LBB61:
 782              	.LBB62:
 783              	.LBB63:
 784              	.LBB64:
 785              		.file 2 "Libraries/CMSIS/Include/cmsis_gcc.h"
   1:Libraries/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Libraries/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Libraries/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Libraries/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Libraries/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Libraries/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Libraries/CMSIS/Include/cmsis_gcc.h **** /*
   8:Libraries/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Libraries/CMSIS/Include/cmsis_gcc.h ****  *
  10:Libraries/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Libraries/CMSIS/Include/cmsis_gcc.h ****  *
  12:Libraries/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Libraries/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Libraries/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Libraries/CMSIS/Include/cmsis_gcc.h ****  *
  16:Libraries/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Libraries/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  /tmp/ccyzRlcj.s 			page 23


  18:Libraries/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Libraries/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Libraries/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Libraries/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Libraries/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
  24:Libraries/CMSIS/Include/cmsis_gcc.h **** 
  25:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Libraries/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Libraries/CMSIS/Include/cmsis_gcc.h **** 
  28:Libraries/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Libraries/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Libraries/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Libraries/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Libraries/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Libraries/CMSIS/Include/cmsis_gcc.h **** 
  34:Libraries/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Libraries/CMSIS/Include/cmsis_gcc.h **** 
  39:Libraries/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Libraries/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
ARM GAS  /tmp/ccyzRlcj.s 			page 24


  75:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Libraries/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Libraries/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Libraries/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Libraries/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 117:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 118:Libraries/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Libraries/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Libraries/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Libraries/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 123:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 124:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 125:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Libraries/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 129:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 131:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
ARM GAS  /tmp/ccyzRlcj.s 			page 25


 132:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 133:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 134:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 135:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 136:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Libraries/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 140:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 142:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 144:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 145:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 146:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 147:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 151:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 153:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 155:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 158:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 159:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 160:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 162:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 166:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 168:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 170:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 173:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 175:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 176:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 177:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 181:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 183:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 185:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 186:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 187:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccyzRlcj.s 			page 26


 189:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 193:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 195:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 197:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 199:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 200:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 201:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 205:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 207:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 209:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 212:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 213:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 214:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 215:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 219:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 221:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 223:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 226:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 227:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 228:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 229:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 233:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 235:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 237:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 240:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 241:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 242:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 243:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
ARM GAS  /tmp/ccyzRlcj.s 			page 27


 246:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 247:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 249:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 251:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 254:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 255:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 256:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 258:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 262:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 264:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 266:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 269:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 271:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 272:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 273:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 277:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 279:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 281:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 282:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 283:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 285:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 289:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 291:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 293:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 295:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 296:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 297:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 301:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Libraries/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccyzRlcj.s 			page 28


 303:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 305:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 308:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 309:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 310:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 312:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 316:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 318:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 320:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 323:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 325:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 326:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 327:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 331:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 333:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 335:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 336:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 337:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 339:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 343:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 345:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 347:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 349:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 350:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 352:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 356:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 358:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Libraries/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccyzRlcj.s 			page 29


 360:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 363:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 364:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 365:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 366:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 370:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 372:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 374:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 376:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 377:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 378:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 382:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 384:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 386:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 389:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 390:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 391:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 393:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 397:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 399:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 401:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 404:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 406:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 407:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 408:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 412:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 414:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 416:Libraries/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccyzRlcj.s 			page 30


 417:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 418:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 420:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 424:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 426:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 428:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 430:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 431:Libraries/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Libraries/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Libraries/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 435:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Libraries/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 439:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 441:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 443:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 444:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 445:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 446:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Libraries/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 450:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 452:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 454:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 455:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 456:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 457:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 461:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 463:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 465:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 468:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 469:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 470:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 472:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
ARM GAS  /tmp/ccyzRlcj.s 			page 31


 474:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 476:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 478:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 480:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 483:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 485:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 486:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 487:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 491:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 493:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 495:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 496:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 497:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 499:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 503:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 505:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 507:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 509:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 510:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 511:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Libraries/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 516:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 518:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 520:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 521:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 522:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 523:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 527:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 529:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Libraries/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccyzRlcj.s 			page 32


 531:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 534:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 535:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 536:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 538:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 542:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 544:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 546:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 549:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 551:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 552:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 553:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 557:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 559:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 561:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 562:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 563:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 565:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 569:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 571:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 573:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 575:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Libraries/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Libraries/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 579:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 580:Libraries/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Libraries/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 583:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 584:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Libraries/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Libraries/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Libraries/CMSIS/Include/cmsis_gcc.h ****   mode.
ARM GAS  /tmp/ccyzRlcj.s 			page 33


 588:Libraries/CMSIS/Include/cmsis_gcc.h ****   
 589:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 592:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 594:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Libraries/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Libraries/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Libraries/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
 599:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Libraries/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 604:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 605:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 607:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Libraries/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Libraries/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 611:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 614:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 616:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Libraries/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Libraries/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
 620:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Libraries/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 625:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 627:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 628:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 629:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Libraries/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Libraries/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Libraries/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Libraries/CMSIS/Include/cmsis_gcc.h ****   
 634:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 637:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 639:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Libraries/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Libraries/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Libraries/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
 644:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
ARM GAS  /tmp/ccyzRlcj.s 			page 34


 645:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 647:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 648:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 649:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 651:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Libraries/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Libraries/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 655:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 658:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 660:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Libraries/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Libraries/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
 664:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 667:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 669:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 670:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 671:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Libraries/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Libraries/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Libraries/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 676:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 679:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 681:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Libraries/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Libraries/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Libraries/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
 686:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Libraries/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 691:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 692:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 693:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 695:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Libraries/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Libraries/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 699:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccyzRlcj.s 			page 35


 702:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 704:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Libraries/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Libraries/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
 708:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Libraries/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 713:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 715:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 716:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 717:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Libraries/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Libraries/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Libraries/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 722:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 725:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 727:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Libraries/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Libraries/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Libraries/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
 732:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 735:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 736:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 737:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 739:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Libraries/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Libraries/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 743:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 746:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 748:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Libraries/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Libraries/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
 752:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 755:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 757:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Libraries/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
ARM GAS  /tmp/ccyzRlcj.s 			page 36


 759:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 760:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 761:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 762:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 766:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 768:Libraries/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Libraries/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Libraries/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Libraries/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Libraries/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Libraries/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Libraries/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
 776:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 778:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
 782:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 785:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 786:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 787:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 788:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 792:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 794:Libraries/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Libraries/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Libraries/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Libraries/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Libraries/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Libraries/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Libraries/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
 802:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
 805:Libraries/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 808:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 809:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 810:Libraries/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 812:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 813:Libraries/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Libraries/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Libraries/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
ARM GAS  /tmp/ccyzRlcj.s 			page 37


 816:Libraries/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Libraries/CMSIS/Include/cmsis_gcc.h **** */
 818:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 819:Libraries/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Libraries/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Libraries/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Libraries/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Libraries/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Libraries/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Libraries/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
 827:Libraries/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Libraries/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Libraries/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 832:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 833:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 836:Libraries/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 838:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 839:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 842:Libraries/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 844:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 845:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 846:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Libraries/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 850:Libraries/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 852:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 853:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 854:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 857:Libraries/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 859:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 860:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 861:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Libraries/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Libraries/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 866:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 868:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 870:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 871:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 872:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccyzRlcj.s 			page 38


 873:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Libraries/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 877:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 879:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 786              		.loc 2 879 0
 787              		.syntax unified
 788              	@ 879 "Libraries/CMSIS/Include/cmsis_gcc.h" 1
 789 0022 BFF34F8F 		dsb 0xF
 790              	@ 0 "" 2
 791              		.thumb
 792              		.syntax unified
 793              	.LBE64:
 794              	.LBE63:
 795              	.LBB65:
 796              	.LBB66:
 868:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 797              		.loc 2 868 0
 798              		.syntax unified
 799              	@ 868 "Libraries/CMSIS/Include/cmsis_gcc.h" 1
 800 0026 BFF36F8F 		isb 0xF
 801              	@ 0 "" 2
 802              		.thumb
 803              		.syntax unified
 804              	.LBE66:
 805              	.LBE65:
 806              		.file 3 "Libraries/CMSIS/Include/core_cm7.h"
   1:Libraries/CMSIS/Include/core_cm7.h **** /**************************************************************************//**
   2:Libraries/CMSIS/Include/core_cm7.h ****  * @file     core_cm7.h
   3:Libraries/CMSIS/Include/core_cm7.h ****  * @brief    CMSIS Cortex-M7 Core Peripheral Access Layer Header File
   4:Libraries/CMSIS/Include/core_cm7.h ****  * @version  V5.0.8
   5:Libraries/CMSIS/Include/core_cm7.h ****  * @date     04. June 2018
   6:Libraries/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
   7:Libraries/CMSIS/Include/core_cm7.h **** /*
   8:Libraries/CMSIS/Include/core_cm7.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Libraries/CMSIS/Include/core_cm7.h ****  *
  10:Libraries/CMSIS/Include/core_cm7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Libraries/CMSIS/Include/core_cm7.h ****  *
  12:Libraries/CMSIS/Include/core_cm7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Libraries/CMSIS/Include/core_cm7.h ****  * not use this file except in compliance with the License.
  14:Libraries/CMSIS/Include/core_cm7.h ****  * You may obtain a copy of the License at
  15:Libraries/CMSIS/Include/core_cm7.h ****  *
  16:Libraries/CMSIS/Include/core_cm7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Libraries/CMSIS/Include/core_cm7.h ****  *
  18:Libraries/CMSIS/Include/core_cm7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Libraries/CMSIS/Include/core_cm7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Libraries/CMSIS/Include/core_cm7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Libraries/CMSIS/Include/core_cm7.h ****  * See the License for the specific language governing permissions and
  22:Libraries/CMSIS/Include/core_cm7.h ****  * limitations under the License.
  23:Libraries/CMSIS/Include/core_cm7.h ****  */
  24:Libraries/CMSIS/Include/core_cm7.h **** 
  25:Libraries/CMSIS/Include/core_cm7.h **** #if   defined ( __ICCARM__ )
  26:Libraries/CMSIS/Include/core_cm7.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Libraries/CMSIS/Include/core_cm7.h **** #elif defined (__clang__)
  28:Libraries/CMSIS/Include/core_cm7.h ****   #pragma clang system_header   /* treat file as system include file */
ARM GAS  /tmp/ccyzRlcj.s 			page 39


  29:Libraries/CMSIS/Include/core_cm7.h **** #endif
  30:Libraries/CMSIS/Include/core_cm7.h **** 
  31:Libraries/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_GENERIC
  32:Libraries/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_GENERIC
  33:Libraries/CMSIS/Include/core_cm7.h **** 
  34:Libraries/CMSIS/Include/core_cm7.h **** #include <stdint.h>
  35:Libraries/CMSIS/Include/core_cm7.h **** 
  36:Libraries/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
  37:Libraries/CMSIS/Include/core_cm7.h ****  extern "C" {
  38:Libraries/CMSIS/Include/core_cm7.h **** #endif
  39:Libraries/CMSIS/Include/core_cm7.h **** 
  40:Libraries/CMSIS/Include/core_cm7.h **** /**
  41:Libraries/CMSIS/Include/core_cm7.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Libraries/CMSIS/Include/core_cm7.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Libraries/CMSIS/Include/core_cm7.h **** 
  44:Libraries/CMSIS/Include/core_cm7.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Libraries/CMSIS/Include/core_cm7.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Libraries/CMSIS/Include/core_cm7.h **** 
  47:Libraries/CMSIS/Include/core_cm7.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Libraries/CMSIS/Include/core_cm7.h ****      Unions are used for effective representation of core registers.
  49:Libraries/CMSIS/Include/core_cm7.h **** 
  50:Libraries/CMSIS/Include/core_cm7.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Libraries/CMSIS/Include/core_cm7.h ****      Function-like macros are used to allow more efficient code.
  52:Libraries/CMSIS/Include/core_cm7.h ****  */
  53:Libraries/CMSIS/Include/core_cm7.h **** 
  54:Libraries/CMSIS/Include/core_cm7.h **** 
  55:Libraries/CMSIS/Include/core_cm7.h **** /*******************************************************************************
  56:Libraries/CMSIS/Include/core_cm7.h ****  *                 CMSIS definitions
  57:Libraries/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
  58:Libraries/CMSIS/Include/core_cm7.h **** /**
  59:Libraries/CMSIS/Include/core_cm7.h ****   \ingroup Cortex_M7
  60:Libraries/CMSIS/Include/core_cm7.h ****   @{
  61:Libraries/CMSIS/Include/core_cm7.h ****  */
  62:Libraries/CMSIS/Include/core_cm7.h **** 
  63:Libraries/CMSIS/Include/core_cm7.h **** #include "cmsis_version.h"
  64:Libraries/CMSIS/Include/core_cm7.h **** 
  65:Libraries/CMSIS/Include/core_cm7.h **** /* CMSIS CM7 definitions */
  66:Libraries/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)                  /*!< \deprecated [31:1
  67:Libraries/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_SUB   ( __CM_CMSIS_VERSION_SUB)                  /*!< \deprecated [15:0
  68:Libraries/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION       ((__CM7_CMSIS_VERSION_MAIN << 16U) | \
  69:Libraries/CMSIS/Include/core_cm7.h ****                                     __CM7_CMSIS_VERSION_SUB           )      /*!< \deprecated CMSIS
  70:Libraries/CMSIS/Include/core_cm7.h **** 
  71:Libraries/CMSIS/Include/core_cm7.h **** #define __CORTEX_M                (7U)                                       /*!< Cortex-M Core */
  72:Libraries/CMSIS/Include/core_cm7.h **** 
  73:Libraries/CMSIS/Include/core_cm7.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Libraries/CMSIS/Include/core_cm7.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:Libraries/CMSIS/Include/core_cm7.h **** */
  76:Libraries/CMSIS/Include/core_cm7.h **** #if defined ( __CC_ARM )
  77:Libraries/CMSIS/Include/core_cm7.h ****   #if defined __TARGET_FPU_VFP
  78:Libraries/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:Libraries/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
  80:Libraries/CMSIS/Include/core_cm7.h ****     #else
  81:Libraries/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:Libraries/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  83:Libraries/CMSIS/Include/core_cm7.h ****     #endif
  84:Libraries/CMSIS/Include/core_cm7.h ****   #else
  85:Libraries/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
ARM GAS  /tmp/ccyzRlcj.s 			page 40


  86:Libraries/CMSIS/Include/core_cm7.h ****   #endif
  87:Libraries/CMSIS/Include/core_cm7.h **** 
  88:Libraries/CMSIS/Include/core_cm7.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:Libraries/CMSIS/Include/core_cm7.h ****   #if defined __ARM_PCS_VFP
  90:Libraries/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:Libraries/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
  92:Libraries/CMSIS/Include/core_cm7.h ****     #else
  93:Libraries/CMSIS/Include/core_cm7.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:Libraries/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  95:Libraries/CMSIS/Include/core_cm7.h ****     #endif
  96:Libraries/CMSIS/Include/core_cm7.h ****   #else
  97:Libraries/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  98:Libraries/CMSIS/Include/core_cm7.h ****   #endif
  99:Libraries/CMSIS/Include/core_cm7.h **** 
 100:Libraries/CMSIS/Include/core_cm7.h **** #elif defined ( __GNUC__ )
 101:Libraries/CMSIS/Include/core_cm7.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:Libraries/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:Libraries/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 104:Libraries/CMSIS/Include/core_cm7.h ****     #else
 105:Libraries/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:Libraries/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 107:Libraries/CMSIS/Include/core_cm7.h ****     #endif
 108:Libraries/CMSIS/Include/core_cm7.h ****   #else
 109:Libraries/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 110:Libraries/CMSIS/Include/core_cm7.h ****   #endif
 111:Libraries/CMSIS/Include/core_cm7.h **** 
 112:Libraries/CMSIS/Include/core_cm7.h **** #elif defined ( __ICCARM__ )
 113:Libraries/CMSIS/Include/core_cm7.h ****   #if defined __ARMVFP__
 114:Libraries/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:Libraries/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 116:Libraries/CMSIS/Include/core_cm7.h ****     #else
 117:Libraries/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:Libraries/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 119:Libraries/CMSIS/Include/core_cm7.h ****     #endif
 120:Libraries/CMSIS/Include/core_cm7.h ****   #else
 121:Libraries/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 122:Libraries/CMSIS/Include/core_cm7.h ****   #endif
 123:Libraries/CMSIS/Include/core_cm7.h **** 
 124:Libraries/CMSIS/Include/core_cm7.h **** #elif defined ( __TI_ARM__ )
 125:Libraries/CMSIS/Include/core_cm7.h ****   #if defined __TI_VFP_SUPPORT__
 126:Libraries/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:Libraries/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 128:Libraries/CMSIS/Include/core_cm7.h ****     #else
 129:Libraries/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:Libraries/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 131:Libraries/CMSIS/Include/core_cm7.h ****     #endif
 132:Libraries/CMSIS/Include/core_cm7.h ****   #else
 133:Libraries/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 134:Libraries/CMSIS/Include/core_cm7.h ****   #endif
 135:Libraries/CMSIS/Include/core_cm7.h **** 
 136:Libraries/CMSIS/Include/core_cm7.h **** #elif defined ( __TASKING__ )
 137:Libraries/CMSIS/Include/core_cm7.h ****   #if defined __FPU_VFP__
 138:Libraries/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:Libraries/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 140:Libraries/CMSIS/Include/core_cm7.h ****     #else
 141:Libraries/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:Libraries/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
ARM GAS  /tmp/ccyzRlcj.s 			page 41


 143:Libraries/CMSIS/Include/core_cm7.h ****     #endif
 144:Libraries/CMSIS/Include/core_cm7.h ****   #else
 145:Libraries/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 146:Libraries/CMSIS/Include/core_cm7.h ****   #endif
 147:Libraries/CMSIS/Include/core_cm7.h **** 
 148:Libraries/CMSIS/Include/core_cm7.h **** #elif defined ( __CSMC__ )
 149:Libraries/CMSIS/Include/core_cm7.h ****   #if ( __CSMC__ & 0x400U)
 150:Libraries/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:Libraries/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 152:Libraries/CMSIS/Include/core_cm7.h ****     #else
 153:Libraries/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:Libraries/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 155:Libraries/CMSIS/Include/core_cm7.h ****     #endif
 156:Libraries/CMSIS/Include/core_cm7.h ****   #else
 157:Libraries/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 158:Libraries/CMSIS/Include/core_cm7.h ****   #endif
 159:Libraries/CMSIS/Include/core_cm7.h **** 
 160:Libraries/CMSIS/Include/core_cm7.h **** #endif
 161:Libraries/CMSIS/Include/core_cm7.h **** 
 162:Libraries/CMSIS/Include/core_cm7.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:Libraries/CMSIS/Include/core_cm7.h **** 
 164:Libraries/CMSIS/Include/core_cm7.h **** 
 165:Libraries/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 166:Libraries/CMSIS/Include/core_cm7.h **** }
 167:Libraries/CMSIS/Include/core_cm7.h **** #endif
 168:Libraries/CMSIS/Include/core_cm7.h **** 
 169:Libraries/CMSIS/Include/core_cm7.h **** #endif /* __CORE_CM7_H_GENERIC */
 170:Libraries/CMSIS/Include/core_cm7.h **** 
 171:Libraries/CMSIS/Include/core_cm7.h **** #ifndef __CMSIS_GENERIC
 172:Libraries/CMSIS/Include/core_cm7.h **** 
 173:Libraries/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_DEPENDANT
 174:Libraries/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_DEPENDANT
 175:Libraries/CMSIS/Include/core_cm7.h **** 
 176:Libraries/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 177:Libraries/CMSIS/Include/core_cm7.h ****  extern "C" {
 178:Libraries/CMSIS/Include/core_cm7.h **** #endif
 179:Libraries/CMSIS/Include/core_cm7.h **** 
 180:Libraries/CMSIS/Include/core_cm7.h **** /* check device defines and use defaults */
 181:Libraries/CMSIS/Include/core_cm7.h **** #if defined __CHECK_DEVICE_DEFINES
 182:Libraries/CMSIS/Include/core_cm7.h ****   #ifndef __CM7_REV
 183:Libraries/CMSIS/Include/core_cm7.h ****     #define __CM7_REV               0x0000U
 184:Libraries/CMSIS/Include/core_cm7.h ****     #warning "__CM7_REV not defined in device header file; using default!"
 185:Libraries/CMSIS/Include/core_cm7.h ****   #endif
 186:Libraries/CMSIS/Include/core_cm7.h **** 
 187:Libraries/CMSIS/Include/core_cm7.h ****   #ifndef __FPU_PRESENT
 188:Libraries/CMSIS/Include/core_cm7.h ****     #define __FPU_PRESENT             0U
 189:Libraries/CMSIS/Include/core_cm7.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:Libraries/CMSIS/Include/core_cm7.h ****   #endif
 191:Libraries/CMSIS/Include/core_cm7.h **** 
 192:Libraries/CMSIS/Include/core_cm7.h ****   #ifndef __MPU_PRESENT
 193:Libraries/CMSIS/Include/core_cm7.h ****     #define __MPU_PRESENT             0U
 194:Libraries/CMSIS/Include/core_cm7.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:Libraries/CMSIS/Include/core_cm7.h ****   #endif
 196:Libraries/CMSIS/Include/core_cm7.h **** 
 197:Libraries/CMSIS/Include/core_cm7.h ****   #ifndef __ICACHE_PRESENT
 198:Libraries/CMSIS/Include/core_cm7.h ****     #define __ICACHE_PRESENT          0U
 199:Libraries/CMSIS/Include/core_cm7.h ****     #warning "__ICACHE_PRESENT not defined in device header file; using default!"
ARM GAS  /tmp/ccyzRlcj.s 			page 42


 200:Libraries/CMSIS/Include/core_cm7.h ****   #endif
 201:Libraries/CMSIS/Include/core_cm7.h **** 
 202:Libraries/CMSIS/Include/core_cm7.h ****   #ifndef __DCACHE_PRESENT
 203:Libraries/CMSIS/Include/core_cm7.h ****     #define __DCACHE_PRESENT          0U
 204:Libraries/CMSIS/Include/core_cm7.h ****     #warning "__DCACHE_PRESENT not defined in device header file; using default!"
 205:Libraries/CMSIS/Include/core_cm7.h ****   #endif
 206:Libraries/CMSIS/Include/core_cm7.h **** 
 207:Libraries/CMSIS/Include/core_cm7.h ****   #ifndef __DTCM_PRESENT
 208:Libraries/CMSIS/Include/core_cm7.h ****     #define __DTCM_PRESENT            0U
 209:Libraries/CMSIS/Include/core_cm7.h ****     #warning "__DTCM_PRESENT        not defined in device header file; using default!"
 210:Libraries/CMSIS/Include/core_cm7.h ****   #endif
 211:Libraries/CMSIS/Include/core_cm7.h **** 
 212:Libraries/CMSIS/Include/core_cm7.h ****   #ifndef __NVIC_PRIO_BITS
 213:Libraries/CMSIS/Include/core_cm7.h ****     #define __NVIC_PRIO_BITS          3U
 214:Libraries/CMSIS/Include/core_cm7.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 215:Libraries/CMSIS/Include/core_cm7.h ****   #endif
 216:Libraries/CMSIS/Include/core_cm7.h **** 
 217:Libraries/CMSIS/Include/core_cm7.h ****   #ifndef __Vendor_SysTickConfig
 218:Libraries/CMSIS/Include/core_cm7.h ****     #define __Vendor_SysTickConfig    0U
 219:Libraries/CMSIS/Include/core_cm7.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 220:Libraries/CMSIS/Include/core_cm7.h ****   #endif
 221:Libraries/CMSIS/Include/core_cm7.h **** #endif
 222:Libraries/CMSIS/Include/core_cm7.h **** 
 223:Libraries/CMSIS/Include/core_cm7.h **** /* IO definitions (access restrictions to peripheral registers) */
 224:Libraries/CMSIS/Include/core_cm7.h **** /**
 225:Libraries/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 226:Libraries/CMSIS/Include/core_cm7.h **** 
 227:Libraries/CMSIS/Include/core_cm7.h ****     <strong>IO Type Qualifiers</strong> are used
 228:Libraries/CMSIS/Include/core_cm7.h ****     \li to specify the access to peripheral variables.
 229:Libraries/CMSIS/Include/core_cm7.h ****     \li for automatic generation of peripheral register debug information.
 230:Libraries/CMSIS/Include/core_cm7.h **** */
 231:Libraries/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 232:Libraries/CMSIS/Include/core_cm7.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 233:Libraries/CMSIS/Include/core_cm7.h **** #else
 234:Libraries/CMSIS/Include/core_cm7.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 235:Libraries/CMSIS/Include/core_cm7.h **** #endif
 236:Libraries/CMSIS/Include/core_cm7.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 237:Libraries/CMSIS/Include/core_cm7.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 238:Libraries/CMSIS/Include/core_cm7.h **** 
 239:Libraries/CMSIS/Include/core_cm7.h **** /* following defines should be used for structure members */
 240:Libraries/CMSIS/Include/core_cm7.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 241:Libraries/CMSIS/Include/core_cm7.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 242:Libraries/CMSIS/Include/core_cm7.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 243:Libraries/CMSIS/Include/core_cm7.h **** 
 244:Libraries/CMSIS/Include/core_cm7.h **** /*@} end of group Cortex_M7 */
 245:Libraries/CMSIS/Include/core_cm7.h **** 
 246:Libraries/CMSIS/Include/core_cm7.h **** 
 247:Libraries/CMSIS/Include/core_cm7.h **** 
 248:Libraries/CMSIS/Include/core_cm7.h **** /*******************************************************************************
 249:Libraries/CMSIS/Include/core_cm7.h ****  *                 Register Abstraction
 250:Libraries/CMSIS/Include/core_cm7.h ****   Core Register contain:
 251:Libraries/CMSIS/Include/core_cm7.h ****   - Core Register
 252:Libraries/CMSIS/Include/core_cm7.h ****   - Core NVIC Register
 253:Libraries/CMSIS/Include/core_cm7.h ****   - Core SCB Register
 254:Libraries/CMSIS/Include/core_cm7.h ****   - Core SysTick Register
 255:Libraries/CMSIS/Include/core_cm7.h ****   - Core Debug Register
 256:Libraries/CMSIS/Include/core_cm7.h ****   - Core MPU Register
ARM GAS  /tmp/ccyzRlcj.s 			page 43


 257:Libraries/CMSIS/Include/core_cm7.h ****   - Core FPU Register
 258:Libraries/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
 259:Libraries/CMSIS/Include/core_cm7.h **** /**
 260:Libraries/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 261:Libraries/CMSIS/Include/core_cm7.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 262:Libraries/CMSIS/Include/core_cm7.h **** */
 263:Libraries/CMSIS/Include/core_cm7.h **** 
 264:Libraries/CMSIS/Include/core_cm7.h **** /**
 265:Libraries/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 266:Libraries/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 267:Libraries/CMSIS/Include/core_cm7.h ****   \brief      Core Register type definitions.
 268:Libraries/CMSIS/Include/core_cm7.h ****   @{
 269:Libraries/CMSIS/Include/core_cm7.h ****  */
 270:Libraries/CMSIS/Include/core_cm7.h **** 
 271:Libraries/CMSIS/Include/core_cm7.h **** /**
 272:Libraries/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 273:Libraries/CMSIS/Include/core_cm7.h ****  */
 274:Libraries/CMSIS/Include/core_cm7.h **** typedef union
 275:Libraries/CMSIS/Include/core_cm7.h **** {
 276:Libraries/CMSIS/Include/core_cm7.h ****   struct
 277:Libraries/CMSIS/Include/core_cm7.h ****   {
 278:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 279:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 280:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 281:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 282:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 283:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 284:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 285:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 286:Libraries/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 287:Libraries/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 288:Libraries/CMSIS/Include/core_cm7.h **** } APSR_Type;
 289:Libraries/CMSIS/Include/core_cm7.h **** 
 290:Libraries/CMSIS/Include/core_cm7.h **** /* APSR Register Definitions */
 291:Libraries/CMSIS/Include/core_cm7.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 292:Libraries/CMSIS/Include/core_cm7.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 293:Libraries/CMSIS/Include/core_cm7.h **** 
 294:Libraries/CMSIS/Include/core_cm7.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 295:Libraries/CMSIS/Include/core_cm7.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 296:Libraries/CMSIS/Include/core_cm7.h **** 
 297:Libraries/CMSIS/Include/core_cm7.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 298:Libraries/CMSIS/Include/core_cm7.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 299:Libraries/CMSIS/Include/core_cm7.h **** 
 300:Libraries/CMSIS/Include/core_cm7.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 301:Libraries/CMSIS/Include/core_cm7.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 302:Libraries/CMSIS/Include/core_cm7.h **** 
 303:Libraries/CMSIS/Include/core_cm7.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 304:Libraries/CMSIS/Include/core_cm7.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 305:Libraries/CMSIS/Include/core_cm7.h **** 
 306:Libraries/CMSIS/Include/core_cm7.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 307:Libraries/CMSIS/Include/core_cm7.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 308:Libraries/CMSIS/Include/core_cm7.h **** 
 309:Libraries/CMSIS/Include/core_cm7.h **** 
 310:Libraries/CMSIS/Include/core_cm7.h **** /**
 311:Libraries/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 312:Libraries/CMSIS/Include/core_cm7.h ****  */
 313:Libraries/CMSIS/Include/core_cm7.h **** typedef union
ARM GAS  /tmp/ccyzRlcj.s 			page 44


 314:Libraries/CMSIS/Include/core_cm7.h **** {
 315:Libraries/CMSIS/Include/core_cm7.h ****   struct
 316:Libraries/CMSIS/Include/core_cm7.h ****   {
 317:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 318:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 319:Libraries/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 320:Libraries/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 321:Libraries/CMSIS/Include/core_cm7.h **** } IPSR_Type;
 322:Libraries/CMSIS/Include/core_cm7.h **** 
 323:Libraries/CMSIS/Include/core_cm7.h **** /* IPSR Register Definitions */
 324:Libraries/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 325:Libraries/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 326:Libraries/CMSIS/Include/core_cm7.h **** 
 327:Libraries/CMSIS/Include/core_cm7.h **** 
 328:Libraries/CMSIS/Include/core_cm7.h **** /**
 329:Libraries/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 330:Libraries/CMSIS/Include/core_cm7.h ****  */
 331:Libraries/CMSIS/Include/core_cm7.h **** typedef union
 332:Libraries/CMSIS/Include/core_cm7.h **** {
 333:Libraries/CMSIS/Include/core_cm7.h ****   struct
 334:Libraries/CMSIS/Include/core_cm7.h ****   {
 335:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 336:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 337:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 338:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 339:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 340:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 341:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 342:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 343:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 344:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 345:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 346:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 347:Libraries/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 348:Libraries/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 349:Libraries/CMSIS/Include/core_cm7.h **** } xPSR_Type;
 350:Libraries/CMSIS/Include/core_cm7.h **** 
 351:Libraries/CMSIS/Include/core_cm7.h **** /* xPSR Register Definitions */
 352:Libraries/CMSIS/Include/core_cm7.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 353:Libraries/CMSIS/Include/core_cm7.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 354:Libraries/CMSIS/Include/core_cm7.h **** 
 355:Libraries/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 356:Libraries/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 357:Libraries/CMSIS/Include/core_cm7.h **** 
 358:Libraries/CMSIS/Include/core_cm7.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 359:Libraries/CMSIS/Include/core_cm7.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 360:Libraries/CMSIS/Include/core_cm7.h **** 
 361:Libraries/CMSIS/Include/core_cm7.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 362:Libraries/CMSIS/Include/core_cm7.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 363:Libraries/CMSIS/Include/core_cm7.h **** 
 364:Libraries/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 365:Libraries/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 366:Libraries/CMSIS/Include/core_cm7.h **** 
 367:Libraries/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 368:Libraries/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 369:Libraries/CMSIS/Include/core_cm7.h **** 
 370:Libraries/CMSIS/Include/core_cm7.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
ARM GAS  /tmp/ccyzRlcj.s 			page 45


 371:Libraries/CMSIS/Include/core_cm7.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 372:Libraries/CMSIS/Include/core_cm7.h **** 
 373:Libraries/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 374:Libraries/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 375:Libraries/CMSIS/Include/core_cm7.h **** 
 376:Libraries/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 377:Libraries/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 378:Libraries/CMSIS/Include/core_cm7.h **** 
 379:Libraries/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 380:Libraries/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 381:Libraries/CMSIS/Include/core_cm7.h **** 
 382:Libraries/CMSIS/Include/core_cm7.h **** 
 383:Libraries/CMSIS/Include/core_cm7.h **** /**
 384:Libraries/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Control Registers (CONTROL).
 385:Libraries/CMSIS/Include/core_cm7.h ****  */
 386:Libraries/CMSIS/Include/core_cm7.h **** typedef union
 387:Libraries/CMSIS/Include/core_cm7.h **** {
 388:Libraries/CMSIS/Include/core_cm7.h ****   struct
 389:Libraries/CMSIS/Include/core_cm7.h ****   {
 390:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 391:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 392:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 393:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 394:Libraries/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 395:Libraries/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 396:Libraries/CMSIS/Include/core_cm7.h **** } CONTROL_Type;
 397:Libraries/CMSIS/Include/core_cm7.h **** 
 398:Libraries/CMSIS/Include/core_cm7.h **** /* CONTROL Register Definitions */
 399:Libraries/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 400:Libraries/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 401:Libraries/CMSIS/Include/core_cm7.h **** 
 402:Libraries/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 403:Libraries/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 404:Libraries/CMSIS/Include/core_cm7.h **** 
 405:Libraries/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 406:Libraries/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 407:Libraries/CMSIS/Include/core_cm7.h **** 
 408:Libraries/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CORE */
 409:Libraries/CMSIS/Include/core_cm7.h **** 
 410:Libraries/CMSIS/Include/core_cm7.h **** 
 411:Libraries/CMSIS/Include/core_cm7.h **** /**
 412:Libraries/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 413:Libraries/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 414:Libraries/CMSIS/Include/core_cm7.h ****   \brief      Type definitions for the NVIC Registers
 415:Libraries/CMSIS/Include/core_cm7.h ****   @{
 416:Libraries/CMSIS/Include/core_cm7.h ****  */
 417:Libraries/CMSIS/Include/core_cm7.h **** 
 418:Libraries/CMSIS/Include/core_cm7.h **** /**
 419:Libraries/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 420:Libraries/CMSIS/Include/core_cm7.h ****  */
 421:Libraries/CMSIS/Include/core_cm7.h **** typedef struct
 422:Libraries/CMSIS/Include/core_cm7.h **** {
 423:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 424:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[24U];
 425:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 426:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RSERVED1[24U];
 427:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
ARM GAS  /tmp/ccyzRlcj.s 			page 46


 428:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[24U];
 429:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 430:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[24U];
 431:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 432:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[56U];
 433:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 434:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[644U];
 435:Libraries/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 436:Libraries/CMSIS/Include/core_cm7.h **** }  NVIC_Type;
 437:Libraries/CMSIS/Include/core_cm7.h **** 
 438:Libraries/CMSIS/Include/core_cm7.h **** /* Software Triggered Interrupt Register Definitions */
 439:Libraries/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 440:Libraries/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 441:Libraries/CMSIS/Include/core_cm7.h **** 
 442:Libraries/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_NVIC */
 443:Libraries/CMSIS/Include/core_cm7.h **** 
 444:Libraries/CMSIS/Include/core_cm7.h **** 
 445:Libraries/CMSIS/Include/core_cm7.h **** /**
 446:Libraries/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 447:Libraries/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 448:Libraries/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control Block Registers
 449:Libraries/CMSIS/Include/core_cm7.h ****   @{
 450:Libraries/CMSIS/Include/core_cm7.h ****  */
 451:Libraries/CMSIS/Include/core_cm7.h **** 
 452:Libraries/CMSIS/Include/core_cm7.h **** /**
 453:Libraries/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control Block (SCB).
 454:Libraries/CMSIS/Include/core_cm7.h ****  */
 455:Libraries/CMSIS/Include/core_cm7.h **** typedef struct
 456:Libraries/CMSIS/Include/core_cm7.h **** {
 457:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 458:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 459:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 460:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 461:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 462:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 463:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  SHPR[12U];              /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 464:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 465:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 466:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 467:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 468:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 469:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 470:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 471:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_PFR[2U];             /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 472:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_DFR;                 /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 473:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_AFR;                 /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 474:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_MFR[4U];             /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 475:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_ISAR[5U];            /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 476:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 477:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CLIDR;                  /*!< Offset: 0x078 (R/ )  Cache Level ID register */
 478:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CTR;                    /*!< Offset: 0x07C (R/ )  Cache Type register */
 479:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CCSIDR;                 /*!< Offset: 0x080 (R/ )  Cache Size ID Register */
 480:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSSELR;                 /*!< Offset: 0x084 (R/W)  Cache Size Selection Register */
 481:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 482:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[93U];
 483:Libraries/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0x200 ( /W)  Software Triggered Interrupt Reg
 484:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[15U];
ARM GAS  /tmp/ccyzRlcj.s 			page 47


 485:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x240 (R/ )  Media and VFP Feature Register 0
 486:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x244 (R/ )  Media and VFP Feature Register 1
 487:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x248 (R/ )  Media and VFP Feature Register 2
 488:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[1U];
 489:Libraries/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIALLU;                /*!< Offset: 0x250 ( /W)  I-Cache Invalidate All to PoU */
 490:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED6[1U];
 491:Libraries/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIMVAU;                /*!< Offset: 0x258 ( /W)  I-Cache Invalidate by MVA to PoU
 492:Libraries/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCIMVAC;                /*!< Offset: 0x25C ( /W)  D-Cache Invalidate by MVA to PoC
 493:Libraries/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCISW;                  /*!< Offset: 0x260 ( /W)  D-Cache Invalidate by Set-way */
 494:Libraries/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAU;                /*!< Offset: 0x264 ( /W)  D-Cache Clean by MVA to PoU */
 495:Libraries/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAC;                /*!< Offset: 0x268 ( /W)  D-Cache Clean by MVA to PoC */
 496:Libraries/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCSW;                  /*!< Offset: 0x26C ( /W)  D-Cache Clean by Set-way */
 497:Libraries/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCIMVAC;               /*!< Offset: 0x270 ( /W)  D-Cache Clean and Invalidate by 
 498:Libraries/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCISW;                 /*!< Offset: 0x274 ( /W)  D-Cache Clean and Invalidate by 
 499:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[6U];
 500:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCMCR;                 /*!< Offset: 0x290 (R/W)  Instruction Tightly-Coupled Memo
 501:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DTCMCR;                 /*!< Offset: 0x294 (R/W)  Data Tightly-Coupled Memory Cont
 502:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBPCR;                 /*!< Offset: 0x298 (R/W)  AHBP Control Register */
 503:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CACR;                   /*!< Offset: 0x29C (R/W)  L1 Cache Control Register */
 504:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBSCR;                 /*!< Offset: 0x2A0 (R/W)  AHB Slave Control Register */
 505:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED8[1U];
 506:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ABFSR;                  /*!< Offset: 0x2A8 (R/W)  Auxiliary Bus Fault Status Regis
 507:Libraries/CMSIS/Include/core_cm7.h **** } SCB_Type;
 508:Libraries/CMSIS/Include/core_cm7.h **** 
 509:Libraries/CMSIS/Include/core_cm7.h **** /* SCB CPUID Register Definitions */
 510:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 511:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 512:Libraries/CMSIS/Include/core_cm7.h **** 
 513:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 514:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 515:Libraries/CMSIS/Include/core_cm7.h **** 
 516:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 517:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 518:Libraries/CMSIS/Include/core_cm7.h **** 
 519:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 520:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 521:Libraries/CMSIS/Include/core_cm7.h **** 
 522:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 523:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 524:Libraries/CMSIS/Include/core_cm7.h **** 
 525:Libraries/CMSIS/Include/core_cm7.h **** /* SCB Interrupt Control State Register Definitions */
 526:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 527:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 528:Libraries/CMSIS/Include/core_cm7.h **** 
 529:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 530:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 531:Libraries/CMSIS/Include/core_cm7.h **** 
 532:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 533:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 534:Libraries/CMSIS/Include/core_cm7.h **** 
 535:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 536:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 537:Libraries/CMSIS/Include/core_cm7.h **** 
 538:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 539:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 540:Libraries/CMSIS/Include/core_cm7.h **** 
 541:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
ARM GAS  /tmp/ccyzRlcj.s 			page 48


 542:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 543:Libraries/CMSIS/Include/core_cm7.h **** 
 544:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 545:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 546:Libraries/CMSIS/Include/core_cm7.h **** 
 547:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 548:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 549:Libraries/CMSIS/Include/core_cm7.h **** 
 550:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 551:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 552:Libraries/CMSIS/Include/core_cm7.h **** 
 553:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 554:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 555:Libraries/CMSIS/Include/core_cm7.h **** 
 556:Libraries/CMSIS/Include/core_cm7.h **** /* SCB Vector Table Offset Register Definitions */
 557:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 558:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 559:Libraries/CMSIS/Include/core_cm7.h **** 
 560:Libraries/CMSIS/Include/core_cm7.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 561:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 562:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 563:Libraries/CMSIS/Include/core_cm7.h **** 
 564:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 565:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 566:Libraries/CMSIS/Include/core_cm7.h **** 
 567:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 568:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 569:Libraries/CMSIS/Include/core_cm7.h **** 
 570:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 571:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 572:Libraries/CMSIS/Include/core_cm7.h **** 
 573:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 574:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 575:Libraries/CMSIS/Include/core_cm7.h **** 
 576:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 577:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 578:Libraries/CMSIS/Include/core_cm7.h **** 
 579:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 580:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 581:Libraries/CMSIS/Include/core_cm7.h **** 
 582:Libraries/CMSIS/Include/core_cm7.h **** /* SCB System Control Register Definitions */
 583:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 584:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 585:Libraries/CMSIS/Include/core_cm7.h **** 
 586:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 587:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 588:Libraries/CMSIS/Include/core_cm7.h **** 
 589:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 590:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 591:Libraries/CMSIS/Include/core_cm7.h **** 
 592:Libraries/CMSIS/Include/core_cm7.h **** /* SCB Configuration Control Register Definitions */
 593:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Pos                      18U                                           /*!< SCB 
 594:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Msk                     (1UL << SCB_CCR_BP_Pos)                        /*!< SCB 
 595:Libraries/CMSIS/Include/core_cm7.h **** 
 596:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Pos                      17U                                           /*!< SCB 
 597:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Msk                     (1UL << SCB_CCR_IC_Pos)                        /*!< SCB 
 598:Libraries/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccyzRlcj.s 			page 49


 599:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Pos                      16U                                           /*!< SCB 
 600:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Msk                     (1UL << SCB_CCR_DC_Pos)                        /*!< SCB 
 601:Libraries/CMSIS/Include/core_cm7.h **** 
 602:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 603:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 604:Libraries/CMSIS/Include/core_cm7.h **** 
 605:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 606:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 607:Libraries/CMSIS/Include/core_cm7.h **** 
 608:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 609:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 610:Libraries/CMSIS/Include/core_cm7.h **** 
 611:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 612:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 613:Libraries/CMSIS/Include/core_cm7.h **** 
 614:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 615:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 616:Libraries/CMSIS/Include/core_cm7.h **** 
 617:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 618:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 619:Libraries/CMSIS/Include/core_cm7.h **** 
 620:Libraries/CMSIS/Include/core_cm7.h **** /* SCB System Handler Control and State Register Definitions */
 621:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 622:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 623:Libraries/CMSIS/Include/core_cm7.h **** 
 624:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 625:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 626:Libraries/CMSIS/Include/core_cm7.h **** 
 627:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 628:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 629:Libraries/CMSIS/Include/core_cm7.h **** 
 630:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 631:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 632:Libraries/CMSIS/Include/core_cm7.h **** 
 633:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 634:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 635:Libraries/CMSIS/Include/core_cm7.h **** 
 636:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 637:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 638:Libraries/CMSIS/Include/core_cm7.h **** 
 639:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 640:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 641:Libraries/CMSIS/Include/core_cm7.h **** 
 642:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 643:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 644:Libraries/CMSIS/Include/core_cm7.h **** 
 645:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 646:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 647:Libraries/CMSIS/Include/core_cm7.h **** 
 648:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 649:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 650:Libraries/CMSIS/Include/core_cm7.h **** 
 651:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 652:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 653:Libraries/CMSIS/Include/core_cm7.h **** 
 654:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 655:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
ARM GAS  /tmp/ccyzRlcj.s 			page 50


 656:Libraries/CMSIS/Include/core_cm7.h **** 
 657:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 658:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 659:Libraries/CMSIS/Include/core_cm7.h **** 
 660:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 661:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 662:Libraries/CMSIS/Include/core_cm7.h **** 
 663:Libraries/CMSIS/Include/core_cm7.h **** /* SCB Configurable Fault Status Register Definitions */
 664:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 665:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 666:Libraries/CMSIS/Include/core_cm7.h **** 
 667:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 668:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 669:Libraries/CMSIS/Include/core_cm7.h **** 
 670:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 671:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 672:Libraries/CMSIS/Include/core_cm7.h **** 
 673:Libraries/CMSIS/Include/core_cm7.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 674:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 675:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 676:Libraries/CMSIS/Include/core_cm7.h **** 
 677:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 678:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 679:Libraries/CMSIS/Include/core_cm7.h **** 
 680:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 681:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 682:Libraries/CMSIS/Include/core_cm7.h **** 
 683:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 684:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 685:Libraries/CMSIS/Include/core_cm7.h **** 
 686:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 687:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 688:Libraries/CMSIS/Include/core_cm7.h **** 
 689:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 690:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 691:Libraries/CMSIS/Include/core_cm7.h **** 
 692:Libraries/CMSIS/Include/core_cm7.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 693:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 694:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 695:Libraries/CMSIS/Include/core_cm7.h **** 
 696:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 697:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 698:Libraries/CMSIS/Include/core_cm7.h **** 
 699:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 700:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 701:Libraries/CMSIS/Include/core_cm7.h **** 
 702:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 703:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 704:Libraries/CMSIS/Include/core_cm7.h **** 
 705:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 706:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 707:Libraries/CMSIS/Include/core_cm7.h **** 
 708:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 709:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 710:Libraries/CMSIS/Include/core_cm7.h **** 
 711:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 712:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
ARM GAS  /tmp/ccyzRlcj.s 			page 51


 713:Libraries/CMSIS/Include/core_cm7.h **** 
 714:Libraries/CMSIS/Include/core_cm7.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 715:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 716:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 717:Libraries/CMSIS/Include/core_cm7.h **** 
 718:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 719:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 720:Libraries/CMSIS/Include/core_cm7.h **** 
 721:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 722:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 723:Libraries/CMSIS/Include/core_cm7.h **** 
 724:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 725:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 726:Libraries/CMSIS/Include/core_cm7.h **** 
 727:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 728:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 729:Libraries/CMSIS/Include/core_cm7.h **** 
 730:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 731:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 732:Libraries/CMSIS/Include/core_cm7.h **** 
 733:Libraries/CMSIS/Include/core_cm7.h **** /* SCB Hard Fault Status Register Definitions */
 734:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 735:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 736:Libraries/CMSIS/Include/core_cm7.h **** 
 737:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 738:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 739:Libraries/CMSIS/Include/core_cm7.h **** 
 740:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 741:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 742:Libraries/CMSIS/Include/core_cm7.h **** 
 743:Libraries/CMSIS/Include/core_cm7.h **** /* SCB Debug Fault Status Register Definitions */
 744:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 745:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 746:Libraries/CMSIS/Include/core_cm7.h **** 
 747:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 748:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 749:Libraries/CMSIS/Include/core_cm7.h **** 
 750:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 751:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 752:Libraries/CMSIS/Include/core_cm7.h **** 
 753:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 754:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 755:Libraries/CMSIS/Include/core_cm7.h **** 
 756:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 757:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 758:Libraries/CMSIS/Include/core_cm7.h **** 
 759:Libraries/CMSIS/Include/core_cm7.h **** /* SCB Cache Level ID Register Definitions */
 760:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Pos                 27U                                            /*!< SCB 
 761:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Msk                 (7UL << SCB_CLIDR_LOUU_Pos)                    /*!< SCB 
 762:Libraries/CMSIS/Include/core_cm7.h **** 
 763:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Pos                  24U                                            /*!< SCB 
 764:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Msk                  (7UL << SCB_CLIDR_LOC_Pos)                     /*!< SCB 
 765:Libraries/CMSIS/Include/core_cm7.h **** 
 766:Libraries/CMSIS/Include/core_cm7.h **** /* SCB Cache Type Register Definitions */
 767:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Pos                 29U                                            /*!< SCB 
 768:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Msk                 (7UL << SCB_CTR_FORMAT_Pos)                    /*!< SCB 
 769:Libraries/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccyzRlcj.s 			page 52


 770:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Pos                    24U                                            /*!< SCB 
 771:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Msk                    (0xFUL << SCB_CTR_CWG_Pos)                     /*!< SCB 
 772:Libraries/CMSIS/Include/core_cm7.h **** 
 773:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Pos                    20U                                            /*!< SCB 
 774:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Msk                    (0xFUL << SCB_CTR_ERG_Pos)                     /*!< SCB 
 775:Libraries/CMSIS/Include/core_cm7.h **** 
 776:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Pos               16U                                            /*!< SCB 
 777:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Msk               (0xFUL << SCB_CTR_DMINLINE_Pos)                /*!< SCB 
 778:Libraries/CMSIS/Include/core_cm7.h **** 
 779:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Pos                0U                                            /*!< SCB 
 780:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Msk               (0xFUL /*<< SCB_CTR_IMINLINE_Pos*/)            /*!< SCB 
 781:Libraries/CMSIS/Include/core_cm7.h **** 
 782:Libraries/CMSIS/Include/core_cm7.h **** /* SCB Cache Size ID Register Definitions */
 783:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Pos                  31U                                            /*!< SCB 
 784:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Msk                  (1UL << SCB_CCSIDR_WT_Pos)                     /*!< SCB 
 785:Libraries/CMSIS/Include/core_cm7.h **** 
 786:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Pos                  30U                                            /*!< SCB 
 787:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Msk                  (1UL << SCB_CCSIDR_WB_Pos)                     /*!< SCB 
 788:Libraries/CMSIS/Include/core_cm7.h **** 
 789:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Pos                  29U                                            /*!< SCB 
 790:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Msk                  (1UL << SCB_CCSIDR_RA_Pos)                     /*!< SCB 
 791:Libraries/CMSIS/Include/core_cm7.h **** 
 792:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Pos                  28U                                            /*!< SCB 
 793:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Msk                  (1UL << SCB_CCSIDR_WA_Pos)                     /*!< SCB 
 794:Libraries/CMSIS/Include/core_cm7.h **** 
 795:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Pos             13U                                            /*!< SCB 
 796:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Msk             (0x7FFFUL << SCB_CCSIDR_NUMSETS_Pos)           /*!< SCB 
 797:Libraries/CMSIS/Include/core_cm7.h **** 
 798:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Pos        3U                                            /*!< SCB 
 799:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Msk       (0x3FFUL << SCB_CCSIDR_ASSOCIATIVITY_Pos)      /*!< SCB 
 800:Libraries/CMSIS/Include/core_cm7.h **** 
 801:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Pos             0U                                            /*!< SCB 
 802:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Msk            (7UL /*<< SCB_CCSIDR_LINESIZE_Pos*/)           /*!< SCB 
 803:Libraries/CMSIS/Include/core_cm7.h **** 
 804:Libraries/CMSIS/Include/core_cm7.h **** /* SCB Cache Size Selection Register Definitions */
 805:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Pos                1U                                            /*!< SCB 
 806:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Msk               (7UL << SCB_CSSELR_LEVEL_Pos)                  /*!< SCB 
 807:Libraries/CMSIS/Include/core_cm7.h **** 
 808:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Pos                  0U                                            /*!< SCB 
 809:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Msk                 (1UL /*<< SCB_CSSELR_IND_Pos*/)                /*!< SCB 
 810:Libraries/CMSIS/Include/core_cm7.h **** 
 811:Libraries/CMSIS/Include/core_cm7.h **** /* SCB Software Triggered Interrupt Register Definitions */
 812:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Pos                  0U                                            /*!< SCB 
 813:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Msk                 (0x1FFUL /*<< SCB_STIR_INTID_Pos*/)            /*!< SCB 
 814:Libraries/CMSIS/Include/core_cm7.h **** 
 815:Libraries/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Invalidate by Set-way Register Definitions */
 816:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Pos                  30U                                            /*!< SCB 
 817:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Msk                  (3UL << SCB_DCISW_WAY_Pos)                     /*!< SCB 
 818:Libraries/CMSIS/Include/core_cm7.h **** 
 819:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Pos                   5U                                            /*!< SCB 
 820:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Msk                  (0x1FFUL << SCB_DCISW_SET_Pos)                 /*!< SCB 
 821:Libraries/CMSIS/Include/core_cm7.h **** 
 822:Libraries/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean by Set-way Register Definitions */
 823:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Pos                  30U                                            /*!< SCB 
 824:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Msk                  (3UL << SCB_DCCSW_WAY_Pos)                     /*!< SCB 
 825:Libraries/CMSIS/Include/core_cm7.h **** 
 826:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Pos                   5U                                            /*!< SCB 
ARM GAS  /tmp/ccyzRlcj.s 			page 53


 827:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Msk                  (0x1FFUL << SCB_DCCSW_SET_Pos)                 /*!< SCB 
 828:Libraries/CMSIS/Include/core_cm7.h **** 
 829:Libraries/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean and Invalidate by Set-way Register Definitions */
 830:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Pos                 30U                                            /*!< SCB 
 831:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Msk                 (3UL << SCB_DCCISW_WAY_Pos)                    /*!< SCB 
 832:Libraries/CMSIS/Include/core_cm7.h **** 
 833:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Pos                  5U                                            /*!< SCB 
 834:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Msk                 (0x1FFUL << SCB_DCCISW_SET_Pos)                /*!< SCB 
 835:Libraries/CMSIS/Include/core_cm7.h **** 
 836:Libraries/CMSIS/Include/core_cm7.h **** /* Instruction Tightly-Coupled Memory Control Register Definitions */
 837:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Pos                   3U                                            /*!< SCB 
 838:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Msk                  (0xFUL << SCB_ITCMCR_SZ_Pos)                   /*!< SCB 
 839:Libraries/CMSIS/Include/core_cm7.h **** 
 840:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Pos                2U                                            /*!< SCB 
 841:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Msk               (1UL << SCB_ITCMCR_RETEN_Pos)                  /*!< SCB 
 842:Libraries/CMSIS/Include/core_cm7.h **** 
 843:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Pos                  1U                                            /*!< SCB 
 844:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Msk                 (1UL << SCB_ITCMCR_RMW_Pos)                    /*!< SCB 
 845:Libraries/CMSIS/Include/core_cm7.h **** 
 846:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Pos                   0U                                            /*!< SCB 
 847:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Msk                  (1UL /*<< SCB_ITCMCR_EN_Pos*/)                 /*!< SCB 
 848:Libraries/CMSIS/Include/core_cm7.h **** 
 849:Libraries/CMSIS/Include/core_cm7.h **** /* Data Tightly-Coupled Memory Control Register Definitions */
 850:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Pos                   3U                                            /*!< SCB 
 851:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Msk                  (0xFUL << SCB_DTCMCR_SZ_Pos)                   /*!< SCB 
 852:Libraries/CMSIS/Include/core_cm7.h **** 
 853:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Pos                2U                                            /*!< SCB 
 854:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Msk               (1UL << SCB_DTCMCR_RETEN_Pos)                   /*!< SCB
 855:Libraries/CMSIS/Include/core_cm7.h **** 
 856:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Pos                  1U                                            /*!< SCB 
 857:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Msk                 (1UL << SCB_DTCMCR_RMW_Pos)                    /*!< SCB 
 858:Libraries/CMSIS/Include/core_cm7.h **** 
 859:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Pos                   0U                                            /*!< SCB 
 860:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Msk                  (1UL /*<< SCB_DTCMCR_EN_Pos*/)                 /*!< SCB 
 861:Libraries/CMSIS/Include/core_cm7.h **** 
 862:Libraries/CMSIS/Include/core_cm7.h **** /* AHBP Control Register Definitions */
 863:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Pos                   1U                                            /*!< SCB 
 864:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Msk                  (7UL << SCB_AHBPCR_SZ_Pos)                     /*!< SCB 
 865:Libraries/CMSIS/Include/core_cm7.h **** 
 866:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Pos                   0U                                            /*!< SCB 
 867:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Msk                  (1UL /*<< SCB_AHBPCR_EN_Pos*/)                 /*!< SCB 
 868:Libraries/CMSIS/Include/core_cm7.h **** 
 869:Libraries/CMSIS/Include/core_cm7.h **** /* L1 Cache Control Register Definitions */
 870:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Pos                2U                                            /*!< SCB 
 871:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Msk               (1UL << SCB_CACR_FORCEWT_Pos)                  /*!< SCB 
 872:Libraries/CMSIS/Include/core_cm7.h **** 
 873:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Pos                  1U                                            /*!< SCB 
 874:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Msk                 (1UL << SCB_CACR_ECCEN_Pos)                    /*!< SCB 
 875:Libraries/CMSIS/Include/core_cm7.h **** 
 876:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Pos                   0U                                            /*!< SCB 
 877:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Msk                  (1UL /*<< SCB_CACR_SIWT_Pos*/)                 /*!< SCB 
 878:Libraries/CMSIS/Include/core_cm7.h **** 
 879:Libraries/CMSIS/Include/core_cm7.h **** /* AHBS Control Register Definitions */
 880:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Pos           11U                                            /*!< SCB 
 881:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Msk           (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos)           /*!< SCB 
 882:Libraries/CMSIS/Include/core_cm7.h **** 
 883:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Pos                 2U                                            /*!< SCB 
ARM GAS  /tmp/ccyzRlcj.s 			page 54


 884:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Msk                (0x1FFUL << SCB_AHBPCR_TPRI_Pos)               /*!< SCB 
 885:Libraries/CMSIS/Include/core_cm7.h **** 
 886:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Pos                  0U                                            /*!< SCB 
 887:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Msk                 (3UL /*<< SCB_AHBPCR_CTL_Pos*/)                /*!< SCB 
 888:Libraries/CMSIS/Include/core_cm7.h **** 
 889:Libraries/CMSIS/Include/core_cm7.h **** /* Auxiliary Bus Fault Status Register Definitions */
 890:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Pos              8U                                            /*!< SCB 
 891:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Msk             (3UL << SCB_ABFSR_AXIMTYPE_Pos)                /*!< SCB 
 892:Libraries/CMSIS/Include/core_cm7.h **** 
 893:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Pos                  4U                                            /*!< SCB 
 894:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Msk                 (1UL << SCB_ABFSR_EPPB_Pos)                    /*!< SCB 
 895:Libraries/CMSIS/Include/core_cm7.h **** 
 896:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Pos                  3U                                            /*!< SCB 
 897:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Msk                 (1UL << SCB_ABFSR_AXIM_Pos)                    /*!< SCB 
 898:Libraries/CMSIS/Include/core_cm7.h **** 
 899:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Pos                  2U                                            /*!< SCB 
 900:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Msk                 (1UL << SCB_ABFSR_AHBP_Pos)                    /*!< SCB 
 901:Libraries/CMSIS/Include/core_cm7.h **** 
 902:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Pos                  1U                                            /*!< SCB 
 903:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Msk                 (1UL << SCB_ABFSR_DTCM_Pos)                    /*!< SCB 
 904:Libraries/CMSIS/Include/core_cm7.h **** 
 905:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Pos                  0U                                            /*!< SCB 
 906:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Msk                 (1UL /*<< SCB_ABFSR_ITCM_Pos*/)                /*!< SCB 
 907:Libraries/CMSIS/Include/core_cm7.h **** 
 908:Libraries/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCB */
 909:Libraries/CMSIS/Include/core_cm7.h **** 
 910:Libraries/CMSIS/Include/core_cm7.h **** 
 911:Libraries/CMSIS/Include/core_cm7.h **** /**
 912:Libraries/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 913:Libraries/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 914:Libraries/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 915:Libraries/CMSIS/Include/core_cm7.h ****   @{
 916:Libraries/CMSIS/Include/core_cm7.h ****  */
 917:Libraries/CMSIS/Include/core_cm7.h **** 
 918:Libraries/CMSIS/Include/core_cm7.h **** /**
 919:Libraries/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 920:Libraries/CMSIS/Include/core_cm7.h ****  */
 921:Libraries/CMSIS/Include/core_cm7.h **** typedef struct
 922:Libraries/CMSIS/Include/core_cm7.h **** {
 923:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 924:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 925:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 926:Libraries/CMSIS/Include/core_cm7.h **** } SCnSCB_Type;
 927:Libraries/CMSIS/Include/core_cm7.h **** 
 928:Libraries/CMSIS/Include/core_cm7.h **** /* Interrupt Controller Type Register Definitions */
 929:Libraries/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 930:Libraries/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 931:Libraries/CMSIS/Include/core_cm7.h **** 
 932:Libraries/CMSIS/Include/core_cm7.h **** /* Auxiliary Control Register Definitions */
 933:Libraries/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Pos    12U                                         /*!< ACTLR: 
 934:Libraries/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Msk    (1UL << SCnSCB_ACTLR_DISITMATBFLUSH_Pos)    /*!< ACTLR: 
 935:Libraries/CMSIS/Include/core_cm7.h **** 
 936:Libraries/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Pos         11U                                         /*!< ACTLR: 
 937:Libraries/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Msk         (1UL << SCnSCB_ACTLR_DISRAMODE_Pos)         /*!< ACTLR: 
 938:Libraries/CMSIS/Include/core_cm7.h **** 
 939:Libraries/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Pos         10U                                         /*!< ACTLR: 
 940:Libraries/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Msk         (1UL << SCnSCB_ACTLR_FPEXCODIS_Pos)         /*!< ACTLR: 
ARM GAS  /tmp/ccyzRlcj.s 			page 55


 941:Libraries/CMSIS/Include/core_cm7.h **** 
 942:Libraries/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 943:Libraries/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 944:Libraries/CMSIS/Include/core_cm7.h **** 
 945:Libraries/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 946:Libraries/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 947:Libraries/CMSIS/Include/core_cm7.h **** 
 948:Libraries/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCnotSCB */
 949:Libraries/CMSIS/Include/core_cm7.h **** 
 950:Libraries/CMSIS/Include/core_cm7.h **** 
 951:Libraries/CMSIS/Include/core_cm7.h **** /**
 952:Libraries/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 953:Libraries/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 954:Libraries/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Timer Registers.
 955:Libraries/CMSIS/Include/core_cm7.h ****   @{
 956:Libraries/CMSIS/Include/core_cm7.h ****  */
 957:Libraries/CMSIS/Include/core_cm7.h **** 
 958:Libraries/CMSIS/Include/core_cm7.h **** /**
 959:Libraries/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Timer (SysTick).
 960:Libraries/CMSIS/Include/core_cm7.h ****  */
 961:Libraries/CMSIS/Include/core_cm7.h **** typedef struct
 962:Libraries/CMSIS/Include/core_cm7.h **** {
 963:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 964:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 965:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 966:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 967:Libraries/CMSIS/Include/core_cm7.h **** } SysTick_Type;
 968:Libraries/CMSIS/Include/core_cm7.h **** 
 969:Libraries/CMSIS/Include/core_cm7.h **** /* SysTick Control / Status Register Definitions */
 970:Libraries/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 971:Libraries/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 972:Libraries/CMSIS/Include/core_cm7.h **** 
 973:Libraries/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 974:Libraries/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 975:Libraries/CMSIS/Include/core_cm7.h **** 
 976:Libraries/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 977:Libraries/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 978:Libraries/CMSIS/Include/core_cm7.h **** 
 979:Libraries/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 980:Libraries/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 981:Libraries/CMSIS/Include/core_cm7.h **** 
 982:Libraries/CMSIS/Include/core_cm7.h **** /* SysTick Reload Register Definitions */
 983:Libraries/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 984:Libraries/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 985:Libraries/CMSIS/Include/core_cm7.h **** 
 986:Libraries/CMSIS/Include/core_cm7.h **** /* SysTick Current Register Definitions */
 987:Libraries/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 988:Libraries/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 989:Libraries/CMSIS/Include/core_cm7.h **** 
 990:Libraries/CMSIS/Include/core_cm7.h **** /* SysTick Calibration Register Definitions */
 991:Libraries/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 992:Libraries/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 993:Libraries/CMSIS/Include/core_cm7.h **** 
 994:Libraries/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 995:Libraries/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 996:Libraries/CMSIS/Include/core_cm7.h **** 
 997:Libraries/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
ARM GAS  /tmp/ccyzRlcj.s 			page 56


 998:Libraries/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 999:Libraries/CMSIS/Include/core_cm7.h **** 
1000:Libraries/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SysTick */
1001:Libraries/CMSIS/Include/core_cm7.h **** 
1002:Libraries/CMSIS/Include/core_cm7.h **** 
1003:Libraries/CMSIS/Include/core_cm7.h **** /**
1004:Libraries/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1005:Libraries/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
1006:Libraries/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
1007:Libraries/CMSIS/Include/core_cm7.h ****   @{
1008:Libraries/CMSIS/Include/core_cm7.h ****  */
1009:Libraries/CMSIS/Include/core_cm7.h **** 
1010:Libraries/CMSIS/Include/core_cm7.h **** /**
1011:Libraries/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
1012:Libraries/CMSIS/Include/core_cm7.h ****  */
1013:Libraries/CMSIS/Include/core_cm7.h **** typedef struct
1014:Libraries/CMSIS/Include/core_cm7.h **** {
1015:Libraries/CMSIS/Include/core_cm7.h ****   __OM  union
1016:Libraries/CMSIS/Include/core_cm7.h ****   {
1017:Libraries/CMSIS/Include/core_cm7.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
1018:Libraries/CMSIS/Include/core_cm7.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
1019:Libraries/CMSIS/Include/core_cm7.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
1020:Libraries/CMSIS/Include/core_cm7.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
1021:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[864U];
1022:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
1023:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[15U];
1024:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
1025:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[15U];
1026:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
1027:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[29U];
1028:Libraries/CMSIS/Include/core_cm7.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
1029:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
1030:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
1031:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[43U];
1032:Libraries/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
1033:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
1034:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[6U];
1035:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
1036:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
1037:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
1038:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
1039:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
1040:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
1041:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
1042:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
1043:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
1044:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
1045:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
1046:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
1047:Libraries/CMSIS/Include/core_cm7.h **** } ITM_Type;
1048:Libraries/CMSIS/Include/core_cm7.h **** 
1049:Libraries/CMSIS/Include/core_cm7.h **** /* ITM Trace Privilege Register Definitions */
1050:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
1051:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
1052:Libraries/CMSIS/Include/core_cm7.h **** 
1053:Libraries/CMSIS/Include/core_cm7.h **** /* ITM Trace Control Register Definitions */
1054:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
ARM GAS  /tmp/ccyzRlcj.s 			page 57


1055:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
1056:Libraries/CMSIS/Include/core_cm7.h **** 
1057:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
1058:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
1059:Libraries/CMSIS/Include/core_cm7.h **** 
1060:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
1061:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
1062:Libraries/CMSIS/Include/core_cm7.h **** 
1063:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
1064:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
1065:Libraries/CMSIS/Include/core_cm7.h **** 
1066:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
1067:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
1068:Libraries/CMSIS/Include/core_cm7.h **** 
1069:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
1070:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
1071:Libraries/CMSIS/Include/core_cm7.h **** 
1072:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
1073:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
1074:Libraries/CMSIS/Include/core_cm7.h **** 
1075:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
1076:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
1077:Libraries/CMSIS/Include/core_cm7.h **** 
1078:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
1079:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
1080:Libraries/CMSIS/Include/core_cm7.h **** 
1081:Libraries/CMSIS/Include/core_cm7.h **** /* ITM Integration Write Register Definitions */
1082:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
1083:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
1084:Libraries/CMSIS/Include/core_cm7.h **** 
1085:Libraries/CMSIS/Include/core_cm7.h **** /* ITM Integration Read Register Definitions */
1086:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
1087:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
1088:Libraries/CMSIS/Include/core_cm7.h **** 
1089:Libraries/CMSIS/Include/core_cm7.h **** /* ITM Integration Mode Control Register Definitions */
1090:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
1091:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
1092:Libraries/CMSIS/Include/core_cm7.h **** 
1093:Libraries/CMSIS/Include/core_cm7.h **** /* ITM Lock Status Register Definitions */
1094:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
1095:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
1096:Libraries/CMSIS/Include/core_cm7.h **** 
1097:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
1098:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
1099:Libraries/CMSIS/Include/core_cm7.h **** 
1100:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
1101:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
1102:Libraries/CMSIS/Include/core_cm7.h **** 
1103:Libraries/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_ITM */
1104:Libraries/CMSIS/Include/core_cm7.h **** 
1105:Libraries/CMSIS/Include/core_cm7.h **** 
1106:Libraries/CMSIS/Include/core_cm7.h **** /**
1107:Libraries/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1108:Libraries/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
1109:Libraries/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
1110:Libraries/CMSIS/Include/core_cm7.h ****   @{
1111:Libraries/CMSIS/Include/core_cm7.h ****  */
ARM GAS  /tmp/ccyzRlcj.s 			page 58


1112:Libraries/CMSIS/Include/core_cm7.h **** 
1113:Libraries/CMSIS/Include/core_cm7.h **** /**
1114:Libraries/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
1115:Libraries/CMSIS/Include/core_cm7.h ****  */
1116:Libraries/CMSIS/Include/core_cm7.h **** typedef struct
1117:Libraries/CMSIS/Include/core_cm7.h **** {
1118:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
1119:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
1120:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
1121:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
1122:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
1123:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
1124:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
1125:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
1126:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
1127:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
1128:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
1129:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1130:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
1131:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
1132:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
1133:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[1U];
1134:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
1135:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
1136:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
1137:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[1U];
1138:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
1139:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
1140:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
1141:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[981U];
1142:Libraries/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 (  W)  Lock Access Register */
1143:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R  )  Lock Status Register */
1144:Libraries/CMSIS/Include/core_cm7.h **** } DWT_Type;
1145:Libraries/CMSIS/Include/core_cm7.h **** 
1146:Libraries/CMSIS/Include/core_cm7.h **** /* DWT Control Register Definitions */
1147:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
1148:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
1149:Libraries/CMSIS/Include/core_cm7.h **** 
1150:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
1151:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
1152:Libraries/CMSIS/Include/core_cm7.h **** 
1153:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
1154:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
1155:Libraries/CMSIS/Include/core_cm7.h **** 
1156:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
1157:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
1158:Libraries/CMSIS/Include/core_cm7.h **** 
1159:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
1160:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
1161:Libraries/CMSIS/Include/core_cm7.h **** 
1162:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
1163:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
1164:Libraries/CMSIS/Include/core_cm7.h **** 
1165:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
1166:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
1167:Libraries/CMSIS/Include/core_cm7.h **** 
1168:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
ARM GAS  /tmp/ccyzRlcj.s 			page 59


1169:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
1170:Libraries/CMSIS/Include/core_cm7.h **** 
1171:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
1172:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
1173:Libraries/CMSIS/Include/core_cm7.h **** 
1174:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
1175:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
1176:Libraries/CMSIS/Include/core_cm7.h **** 
1177:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
1178:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
1179:Libraries/CMSIS/Include/core_cm7.h **** 
1180:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
1181:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
1182:Libraries/CMSIS/Include/core_cm7.h **** 
1183:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
1184:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
1185:Libraries/CMSIS/Include/core_cm7.h **** 
1186:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
1187:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
1188:Libraries/CMSIS/Include/core_cm7.h **** 
1189:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
1190:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
1191:Libraries/CMSIS/Include/core_cm7.h **** 
1192:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
1193:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
1194:Libraries/CMSIS/Include/core_cm7.h **** 
1195:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
1196:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
1197:Libraries/CMSIS/Include/core_cm7.h **** 
1198:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
1199:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
1200:Libraries/CMSIS/Include/core_cm7.h **** 
1201:Libraries/CMSIS/Include/core_cm7.h **** /* DWT CPI Count Register Definitions */
1202:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
1203:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
1204:Libraries/CMSIS/Include/core_cm7.h **** 
1205:Libraries/CMSIS/Include/core_cm7.h **** /* DWT Exception Overhead Count Register Definitions */
1206:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1207:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1208:Libraries/CMSIS/Include/core_cm7.h **** 
1209:Libraries/CMSIS/Include/core_cm7.h **** /* DWT Sleep Count Register Definitions */
1210:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1211:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1212:Libraries/CMSIS/Include/core_cm7.h **** 
1213:Libraries/CMSIS/Include/core_cm7.h **** /* DWT LSU Count Register Definitions */
1214:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1215:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1216:Libraries/CMSIS/Include/core_cm7.h **** 
1217:Libraries/CMSIS/Include/core_cm7.h **** /* DWT Folded-instruction Count Register Definitions */
1218:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1219:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1220:Libraries/CMSIS/Include/core_cm7.h **** 
1221:Libraries/CMSIS/Include/core_cm7.h **** /* DWT Comparator Mask Register Definitions */
1222:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1223:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1224:Libraries/CMSIS/Include/core_cm7.h **** 
1225:Libraries/CMSIS/Include/core_cm7.h **** /* DWT Comparator Function Register Definitions */
ARM GAS  /tmp/ccyzRlcj.s 			page 60


1226:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1227:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1228:Libraries/CMSIS/Include/core_cm7.h **** 
1229:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1230:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1231:Libraries/CMSIS/Include/core_cm7.h **** 
1232:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1233:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1234:Libraries/CMSIS/Include/core_cm7.h **** 
1235:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1236:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1237:Libraries/CMSIS/Include/core_cm7.h **** 
1238:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1239:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1240:Libraries/CMSIS/Include/core_cm7.h **** 
1241:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1242:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1243:Libraries/CMSIS/Include/core_cm7.h **** 
1244:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1245:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1246:Libraries/CMSIS/Include/core_cm7.h **** 
1247:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1248:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1249:Libraries/CMSIS/Include/core_cm7.h **** 
1250:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1251:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1252:Libraries/CMSIS/Include/core_cm7.h **** 
1253:Libraries/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_DWT */
1254:Libraries/CMSIS/Include/core_cm7.h **** 
1255:Libraries/CMSIS/Include/core_cm7.h **** 
1256:Libraries/CMSIS/Include/core_cm7.h **** /**
1257:Libraries/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1258:Libraries/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1259:Libraries/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1260:Libraries/CMSIS/Include/core_cm7.h ****   @{
1261:Libraries/CMSIS/Include/core_cm7.h ****  */
1262:Libraries/CMSIS/Include/core_cm7.h **** 
1263:Libraries/CMSIS/Include/core_cm7.h **** /**
1264:Libraries/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1265:Libraries/CMSIS/Include/core_cm7.h ****  */
1266:Libraries/CMSIS/Include/core_cm7.h **** typedef struct
1267:Libraries/CMSIS/Include/core_cm7.h **** {
1268:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1269:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1270:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[2U];
1271:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1272:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[55U];
1273:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1274:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[131U];
1275:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1276:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1277:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1278:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[759U];
1279:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1280:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1281:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1282:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[1U];
ARM GAS  /tmp/ccyzRlcj.s 			page 61


1283:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1284:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1285:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1286:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[39U];
1287:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1288:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1289:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[8U];
1290:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1291:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1292:Libraries/CMSIS/Include/core_cm7.h **** } TPI_Type;
1293:Libraries/CMSIS/Include/core_cm7.h **** 
1294:Libraries/CMSIS/Include/core_cm7.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1295:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1296:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1297:Libraries/CMSIS/Include/core_cm7.h **** 
1298:Libraries/CMSIS/Include/core_cm7.h **** /* TPI Selected Pin Protocol Register Definitions */
1299:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1300:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1301:Libraries/CMSIS/Include/core_cm7.h **** 
1302:Libraries/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Status Register Definitions */
1303:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1304:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1305:Libraries/CMSIS/Include/core_cm7.h **** 
1306:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1307:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1308:Libraries/CMSIS/Include/core_cm7.h **** 
1309:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1310:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1311:Libraries/CMSIS/Include/core_cm7.h **** 
1312:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1313:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1314:Libraries/CMSIS/Include/core_cm7.h **** 
1315:Libraries/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Control Register Definitions */
1316:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1317:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1318:Libraries/CMSIS/Include/core_cm7.h **** 
1319:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1320:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1321:Libraries/CMSIS/Include/core_cm7.h **** 
1322:Libraries/CMSIS/Include/core_cm7.h **** /* TPI TRIGGER Register Definitions */
1323:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1324:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1325:Libraries/CMSIS/Include/core_cm7.h **** 
1326:Libraries/CMSIS/Include/core_cm7.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1327:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1328:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1329:Libraries/CMSIS/Include/core_cm7.h **** 
1330:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1331:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1332:Libraries/CMSIS/Include/core_cm7.h **** 
1333:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1334:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1335:Libraries/CMSIS/Include/core_cm7.h **** 
1336:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1337:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1338:Libraries/CMSIS/Include/core_cm7.h **** 
1339:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
ARM GAS  /tmp/ccyzRlcj.s 			page 62


1340:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1341:Libraries/CMSIS/Include/core_cm7.h **** 
1342:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1343:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1344:Libraries/CMSIS/Include/core_cm7.h **** 
1345:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1346:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1347:Libraries/CMSIS/Include/core_cm7.h **** 
1348:Libraries/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR2 Register Definitions */
1349:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1350:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1351:Libraries/CMSIS/Include/core_cm7.h **** 
1352:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1353:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1354:Libraries/CMSIS/Include/core_cm7.h **** 
1355:Libraries/CMSIS/Include/core_cm7.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1356:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1357:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1358:Libraries/CMSIS/Include/core_cm7.h **** 
1359:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1360:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1361:Libraries/CMSIS/Include/core_cm7.h **** 
1362:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1363:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1364:Libraries/CMSIS/Include/core_cm7.h **** 
1365:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1366:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1367:Libraries/CMSIS/Include/core_cm7.h **** 
1368:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1369:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1370:Libraries/CMSIS/Include/core_cm7.h **** 
1371:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1372:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1373:Libraries/CMSIS/Include/core_cm7.h **** 
1374:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1375:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1376:Libraries/CMSIS/Include/core_cm7.h **** 
1377:Libraries/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR0 Register Definitions */
1378:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1379:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1380:Libraries/CMSIS/Include/core_cm7.h **** 
1381:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1382:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1383:Libraries/CMSIS/Include/core_cm7.h **** 
1384:Libraries/CMSIS/Include/core_cm7.h **** /* TPI Integration Mode Control Register Definitions */
1385:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1386:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1387:Libraries/CMSIS/Include/core_cm7.h **** 
1388:Libraries/CMSIS/Include/core_cm7.h **** /* TPI DEVID Register Definitions */
1389:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1390:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1391:Libraries/CMSIS/Include/core_cm7.h **** 
1392:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1393:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1394:Libraries/CMSIS/Include/core_cm7.h **** 
1395:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1396:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
ARM GAS  /tmp/ccyzRlcj.s 			page 63


1397:Libraries/CMSIS/Include/core_cm7.h **** 
1398:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1399:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1400:Libraries/CMSIS/Include/core_cm7.h **** 
1401:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1402:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1403:Libraries/CMSIS/Include/core_cm7.h **** 
1404:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1405:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1406:Libraries/CMSIS/Include/core_cm7.h **** 
1407:Libraries/CMSIS/Include/core_cm7.h **** /* TPI DEVTYPE Register Definitions */
1408:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1409:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1410:Libraries/CMSIS/Include/core_cm7.h **** 
1411:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1412:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1413:Libraries/CMSIS/Include/core_cm7.h **** 
1414:Libraries/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_TPI */
1415:Libraries/CMSIS/Include/core_cm7.h **** 
1416:Libraries/CMSIS/Include/core_cm7.h **** 
1417:Libraries/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1418:Libraries/CMSIS/Include/core_cm7.h **** /**
1419:Libraries/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1420:Libraries/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1421:Libraries/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1422:Libraries/CMSIS/Include/core_cm7.h ****   @{
1423:Libraries/CMSIS/Include/core_cm7.h ****  */
1424:Libraries/CMSIS/Include/core_cm7.h **** 
1425:Libraries/CMSIS/Include/core_cm7.h **** /**
1426:Libraries/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1427:Libraries/CMSIS/Include/core_cm7.h ****  */
1428:Libraries/CMSIS/Include/core_cm7.h **** typedef struct
1429:Libraries/CMSIS/Include/core_cm7.h **** {
1430:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1431:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1432:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1433:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1434:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1435:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1436:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1437:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1438:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1439:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1440:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1441:Libraries/CMSIS/Include/core_cm7.h **** } MPU_Type;
1442:Libraries/CMSIS/Include/core_cm7.h **** 
1443:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_RALIASES                  4U
1444:Libraries/CMSIS/Include/core_cm7.h **** 
1445:Libraries/CMSIS/Include/core_cm7.h **** /* MPU Type Register Definitions */
1446:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1447:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1448:Libraries/CMSIS/Include/core_cm7.h **** 
1449:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1450:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1451:Libraries/CMSIS/Include/core_cm7.h **** 
1452:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1453:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
ARM GAS  /tmp/ccyzRlcj.s 			page 64


1454:Libraries/CMSIS/Include/core_cm7.h **** 
1455:Libraries/CMSIS/Include/core_cm7.h **** /* MPU Control Register Definitions */
1456:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1457:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1458:Libraries/CMSIS/Include/core_cm7.h **** 
1459:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1460:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1461:Libraries/CMSIS/Include/core_cm7.h **** 
1462:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1463:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1464:Libraries/CMSIS/Include/core_cm7.h **** 
1465:Libraries/CMSIS/Include/core_cm7.h **** /* MPU Region Number Register Definitions */
1466:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1467:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1468:Libraries/CMSIS/Include/core_cm7.h **** 
1469:Libraries/CMSIS/Include/core_cm7.h **** /* MPU Region Base Address Register Definitions */
1470:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1471:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1472:Libraries/CMSIS/Include/core_cm7.h **** 
1473:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1474:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1475:Libraries/CMSIS/Include/core_cm7.h **** 
1476:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1477:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1478:Libraries/CMSIS/Include/core_cm7.h **** 
1479:Libraries/CMSIS/Include/core_cm7.h **** /* MPU Region Attribute and Size Register Definitions */
1480:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1481:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1482:Libraries/CMSIS/Include/core_cm7.h **** 
1483:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1484:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1485:Libraries/CMSIS/Include/core_cm7.h **** 
1486:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1487:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1488:Libraries/CMSIS/Include/core_cm7.h **** 
1489:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1490:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1491:Libraries/CMSIS/Include/core_cm7.h **** 
1492:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1493:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1494:Libraries/CMSIS/Include/core_cm7.h **** 
1495:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1496:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1497:Libraries/CMSIS/Include/core_cm7.h **** 
1498:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1499:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1500:Libraries/CMSIS/Include/core_cm7.h **** 
1501:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1502:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1503:Libraries/CMSIS/Include/core_cm7.h **** 
1504:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1505:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1506:Libraries/CMSIS/Include/core_cm7.h **** 
1507:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1508:Libraries/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1509:Libraries/CMSIS/Include/core_cm7.h **** 
1510:Libraries/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_MPU */
ARM GAS  /tmp/ccyzRlcj.s 			page 65


1511:Libraries/CMSIS/Include/core_cm7.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1512:Libraries/CMSIS/Include/core_cm7.h **** 
1513:Libraries/CMSIS/Include/core_cm7.h **** 
1514:Libraries/CMSIS/Include/core_cm7.h **** /**
1515:Libraries/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1516:Libraries/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1517:Libraries/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1518:Libraries/CMSIS/Include/core_cm7.h ****   @{
1519:Libraries/CMSIS/Include/core_cm7.h ****  */
1520:Libraries/CMSIS/Include/core_cm7.h **** 
1521:Libraries/CMSIS/Include/core_cm7.h **** /**
1522:Libraries/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1523:Libraries/CMSIS/Include/core_cm7.h ****  */
1524:Libraries/CMSIS/Include/core_cm7.h **** typedef struct
1525:Libraries/CMSIS/Include/core_cm7.h **** {
1526:Libraries/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1527:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1528:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1529:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1530:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1531:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1532:Libraries/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1533:Libraries/CMSIS/Include/core_cm7.h **** } FPU_Type;
1534:Libraries/CMSIS/Include/core_cm7.h **** 
1535:Libraries/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Control Register Definitions */
1536:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1537:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1538:Libraries/CMSIS/Include/core_cm7.h **** 
1539:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1540:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1541:Libraries/CMSIS/Include/core_cm7.h **** 
1542:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1543:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1544:Libraries/CMSIS/Include/core_cm7.h **** 
1545:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1546:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1547:Libraries/CMSIS/Include/core_cm7.h **** 
1548:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1549:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1550:Libraries/CMSIS/Include/core_cm7.h **** 
1551:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1552:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1553:Libraries/CMSIS/Include/core_cm7.h **** 
1554:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1555:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1556:Libraries/CMSIS/Include/core_cm7.h **** 
1557:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1558:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1559:Libraries/CMSIS/Include/core_cm7.h **** 
1560:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1561:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1562:Libraries/CMSIS/Include/core_cm7.h **** 
1563:Libraries/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Address Register Definitions */
1564:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1565:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1566:Libraries/CMSIS/Include/core_cm7.h **** 
1567:Libraries/CMSIS/Include/core_cm7.h **** /* Floating-Point Default Status Control Register Definitions */
ARM GAS  /tmp/ccyzRlcj.s 			page 66


1568:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1569:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1570:Libraries/CMSIS/Include/core_cm7.h **** 
1571:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1572:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1573:Libraries/CMSIS/Include/core_cm7.h **** 
1574:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1575:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1576:Libraries/CMSIS/Include/core_cm7.h **** 
1577:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1578:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1579:Libraries/CMSIS/Include/core_cm7.h **** 
1580:Libraries/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 0 Definitions */
1581:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1582:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1583:Libraries/CMSIS/Include/core_cm7.h **** 
1584:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1585:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1586:Libraries/CMSIS/Include/core_cm7.h **** 
1587:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1588:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1589:Libraries/CMSIS/Include/core_cm7.h **** 
1590:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1591:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1592:Libraries/CMSIS/Include/core_cm7.h **** 
1593:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1594:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1595:Libraries/CMSIS/Include/core_cm7.h **** 
1596:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1597:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1598:Libraries/CMSIS/Include/core_cm7.h **** 
1599:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1600:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1601:Libraries/CMSIS/Include/core_cm7.h **** 
1602:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1603:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1604:Libraries/CMSIS/Include/core_cm7.h **** 
1605:Libraries/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 1 Definitions */
1606:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1607:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1608:Libraries/CMSIS/Include/core_cm7.h **** 
1609:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1610:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1611:Libraries/CMSIS/Include/core_cm7.h **** 
1612:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1613:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1614:Libraries/CMSIS/Include/core_cm7.h **** 
1615:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1616:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1617:Libraries/CMSIS/Include/core_cm7.h **** 
1618:Libraries/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 2 Definitions */
1619:Libraries/CMSIS/Include/core_cm7.h **** 
1620:Libraries/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_FPU */
1621:Libraries/CMSIS/Include/core_cm7.h **** 
1622:Libraries/CMSIS/Include/core_cm7.h **** 
1623:Libraries/CMSIS/Include/core_cm7.h **** /**
1624:Libraries/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
ARM GAS  /tmp/ccyzRlcj.s 			page 67


1625:Libraries/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1626:Libraries/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Core Debug Registers
1627:Libraries/CMSIS/Include/core_cm7.h ****   @{
1628:Libraries/CMSIS/Include/core_cm7.h ****  */
1629:Libraries/CMSIS/Include/core_cm7.h **** 
1630:Libraries/CMSIS/Include/core_cm7.h **** /**
1631:Libraries/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1632:Libraries/CMSIS/Include/core_cm7.h ****  */
1633:Libraries/CMSIS/Include/core_cm7.h **** typedef struct
1634:Libraries/CMSIS/Include/core_cm7.h **** {
1635:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1636:Libraries/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1637:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1638:Libraries/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1639:Libraries/CMSIS/Include/core_cm7.h **** } CoreDebug_Type;
1640:Libraries/CMSIS/Include/core_cm7.h **** 
1641:Libraries/CMSIS/Include/core_cm7.h **** /* Debug Halting Control and Status Register Definitions */
1642:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1643:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1644:Libraries/CMSIS/Include/core_cm7.h **** 
1645:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1646:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1647:Libraries/CMSIS/Include/core_cm7.h **** 
1648:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1649:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1650:Libraries/CMSIS/Include/core_cm7.h **** 
1651:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1652:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1653:Libraries/CMSIS/Include/core_cm7.h **** 
1654:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1655:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1656:Libraries/CMSIS/Include/core_cm7.h **** 
1657:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1658:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1659:Libraries/CMSIS/Include/core_cm7.h **** 
1660:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1661:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1662:Libraries/CMSIS/Include/core_cm7.h **** 
1663:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1664:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1665:Libraries/CMSIS/Include/core_cm7.h **** 
1666:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1667:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1668:Libraries/CMSIS/Include/core_cm7.h **** 
1669:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1670:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1671:Libraries/CMSIS/Include/core_cm7.h **** 
1672:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1673:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1674:Libraries/CMSIS/Include/core_cm7.h **** 
1675:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1676:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1677:Libraries/CMSIS/Include/core_cm7.h **** 
1678:Libraries/CMSIS/Include/core_cm7.h **** /* Debug Core Register Selector Register Definitions */
1679:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1680:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1681:Libraries/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccyzRlcj.s 			page 68


1682:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1683:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1684:Libraries/CMSIS/Include/core_cm7.h **** 
1685:Libraries/CMSIS/Include/core_cm7.h **** /* Debug Exception and Monitor Control Register Definitions */
1686:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1687:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1688:Libraries/CMSIS/Include/core_cm7.h **** 
1689:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1690:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1691:Libraries/CMSIS/Include/core_cm7.h **** 
1692:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1693:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1694:Libraries/CMSIS/Include/core_cm7.h **** 
1695:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1696:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1697:Libraries/CMSIS/Include/core_cm7.h **** 
1698:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1699:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1700:Libraries/CMSIS/Include/core_cm7.h **** 
1701:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1702:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1703:Libraries/CMSIS/Include/core_cm7.h **** 
1704:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1705:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1706:Libraries/CMSIS/Include/core_cm7.h **** 
1707:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1708:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1709:Libraries/CMSIS/Include/core_cm7.h **** 
1710:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1711:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1712:Libraries/CMSIS/Include/core_cm7.h **** 
1713:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1714:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1715:Libraries/CMSIS/Include/core_cm7.h **** 
1716:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1717:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1718:Libraries/CMSIS/Include/core_cm7.h **** 
1719:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1720:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1721:Libraries/CMSIS/Include/core_cm7.h **** 
1722:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1723:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1724:Libraries/CMSIS/Include/core_cm7.h **** 
1725:Libraries/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CoreDebug */
1726:Libraries/CMSIS/Include/core_cm7.h **** 
1727:Libraries/CMSIS/Include/core_cm7.h **** 
1728:Libraries/CMSIS/Include/core_cm7.h **** /**
1729:Libraries/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1730:Libraries/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1731:Libraries/CMSIS/Include/core_cm7.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1732:Libraries/CMSIS/Include/core_cm7.h ****   @{
1733:Libraries/CMSIS/Include/core_cm7.h ****  */
1734:Libraries/CMSIS/Include/core_cm7.h **** 
1735:Libraries/CMSIS/Include/core_cm7.h **** /**
1736:Libraries/CMSIS/Include/core_cm7.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1737:Libraries/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1738:Libraries/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
ARM GAS  /tmp/ccyzRlcj.s 			page 69


1739:Libraries/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted value.
1740:Libraries/CMSIS/Include/core_cm7.h **** */
1741:Libraries/CMSIS/Include/core_cm7.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1742:Libraries/CMSIS/Include/core_cm7.h **** 
1743:Libraries/CMSIS/Include/core_cm7.h **** /**
1744:Libraries/CMSIS/Include/core_cm7.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1745:Libraries/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1746:Libraries/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1747:Libraries/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted bit field value.
1748:Libraries/CMSIS/Include/core_cm7.h **** */
1749:Libraries/CMSIS/Include/core_cm7.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1750:Libraries/CMSIS/Include/core_cm7.h **** 
1751:Libraries/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_core_bitfield */
1752:Libraries/CMSIS/Include/core_cm7.h **** 
1753:Libraries/CMSIS/Include/core_cm7.h **** 
1754:Libraries/CMSIS/Include/core_cm7.h **** /**
1755:Libraries/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1756:Libraries/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_base     Core Definitions
1757:Libraries/CMSIS/Include/core_cm7.h ****   \brief      Definitions for base addresses, unions, and structures.
1758:Libraries/CMSIS/Include/core_cm7.h ****   @{
1759:Libraries/CMSIS/Include/core_cm7.h ****  */
1760:Libraries/CMSIS/Include/core_cm7.h **** 
1761:Libraries/CMSIS/Include/core_cm7.h **** /* Memory mapping of Core Hardware */
1762:Libraries/CMSIS/Include/core_cm7.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1763:Libraries/CMSIS/Include/core_cm7.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1764:Libraries/CMSIS/Include/core_cm7.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1765:Libraries/CMSIS/Include/core_cm7.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1766:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1767:Libraries/CMSIS/Include/core_cm7.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1768:Libraries/CMSIS/Include/core_cm7.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1769:Libraries/CMSIS/Include/core_cm7.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1770:Libraries/CMSIS/Include/core_cm7.h **** 
1771:Libraries/CMSIS/Include/core_cm7.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1772:Libraries/CMSIS/Include/core_cm7.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1773:Libraries/CMSIS/Include/core_cm7.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1774:Libraries/CMSIS/Include/core_cm7.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1775:Libraries/CMSIS/Include/core_cm7.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1776:Libraries/CMSIS/Include/core_cm7.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1777:Libraries/CMSIS/Include/core_cm7.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1778:Libraries/CMSIS/Include/core_cm7.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1779:Libraries/CMSIS/Include/core_cm7.h **** 
1780:Libraries/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1781:Libraries/CMSIS/Include/core_cm7.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1782:Libraries/CMSIS/Include/core_cm7.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1783:Libraries/CMSIS/Include/core_cm7.h **** #endif
1784:Libraries/CMSIS/Include/core_cm7.h **** 
1785:Libraries/CMSIS/Include/core_cm7.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1786:Libraries/CMSIS/Include/core_cm7.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1787:Libraries/CMSIS/Include/core_cm7.h **** 
1788:Libraries/CMSIS/Include/core_cm7.h **** /*@} */
1789:Libraries/CMSIS/Include/core_cm7.h **** 
1790:Libraries/CMSIS/Include/core_cm7.h **** 
1791:Libraries/CMSIS/Include/core_cm7.h **** 
1792:Libraries/CMSIS/Include/core_cm7.h **** /*******************************************************************************
1793:Libraries/CMSIS/Include/core_cm7.h ****  *                Hardware Abstraction Layer
1794:Libraries/CMSIS/Include/core_cm7.h ****   Core Function Interface contains:
1795:Libraries/CMSIS/Include/core_cm7.h ****   - Core NVIC Functions
ARM GAS  /tmp/ccyzRlcj.s 			page 70


1796:Libraries/CMSIS/Include/core_cm7.h ****   - Core SysTick Functions
1797:Libraries/CMSIS/Include/core_cm7.h ****   - Core Debug Functions
1798:Libraries/CMSIS/Include/core_cm7.h ****   - Core Register Access Functions
1799:Libraries/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
1800:Libraries/CMSIS/Include/core_cm7.h **** /**
1801:Libraries/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1802:Libraries/CMSIS/Include/core_cm7.h **** */
1803:Libraries/CMSIS/Include/core_cm7.h **** 
1804:Libraries/CMSIS/Include/core_cm7.h **** 
1805:Libraries/CMSIS/Include/core_cm7.h **** 
1806:Libraries/CMSIS/Include/core_cm7.h **** /* ##########################   NVIC functions  #################################### */
1807:Libraries/CMSIS/Include/core_cm7.h **** /**
1808:Libraries/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
1809:Libraries/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1810:Libraries/CMSIS/Include/core_cm7.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1811:Libraries/CMSIS/Include/core_cm7.h ****   @{
1812:Libraries/CMSIS/Include/core_cm7.h ****  */
1813:Libraries/CMSIS/Include/core_cm7.h **** 
1814:Libraries/CMSIS/Include/core_cm7.h **** #ifdef CMSIS_NVIC_VIRTUAL
1815:Libraries/CMSIS/Include/core_cm7.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1816:Libraries/CMSIS/Include/core_cm7.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1817:Libraries/CMSIS/Include/core_cm7.h ****   #endif
1818:Libraries/CMSIS/Include/core_cm7.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1819:Libraries/CMSIS/Include/core_cm7.h **** #else
1820:Libraries/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1821:Libraries/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1822:Libraries/CMSIS/Include/core_cm7.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1823:Libraries/CMSIS/Include/core_cm7.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1824:Libraries/CMSIS/Include/core_cm7.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1825:Libraries/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1826:Libraries/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1827:Libraries/CMSIS/Include/core_cm7.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1828:Libraries/CMSIS/Include/core_cm7.h ****   #define NVIC_GetActive              __NVIC_GetActive
1829:Libraries/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1830:Libraries/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1831:Libraries/CMSIS/Include/core_cm7.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1832:Libraries/CMSIS/Include/core_cm7.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1833:Libraries/CMSIS/Include/core_cm7.h **** 
1834:Libraries/CMSIS/Include/core_cm7.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1835:Libraries/CMSIS/Include/core_cm7.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1836:Libraries/CMSIS/Include/core_cm7.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1837:Libraries/CMSIS/Include/core_cm7.h ****   #endif
1838:Libraries/CMSIS/Include/core_cm7.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1839:Libraries/CMSIS/Include/core_cm7.h **** #else
1840:Libraries/CMSIS/Include/core_cm7.h ****   #define NVIC_SetVector              __NVIC_SetVector
1841:Libraries/CMSIS/Include/core_cm7.h ****   #define NVIC_GetVector              __NVIC_GetVector
1842:Libraries/CMSIS/Include/core_cm7.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1843:Libraries/CMSIS/Include/core_cm7.h **** 
1844:Libraries/CMSIS/Include/core_cm7.h **** #define NVIC_USER_IRQ_OFFSET          16
1845:Libraries/CMSIS/Include/core_cm7.h **** 
1846:Libraries/CMSIS/Include/core_cm7.h **** 
1847:Libraries/CMSIS/Include/core_cm7.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1848:Libraries/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1849:Libraries/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1850:Libraries/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1851:Libraries/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1852:Libraries/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
ARM GAS  /tmp/ccyzRlcj.s 			page 71


1853:Libraries/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1854:Libraries/CMSIS/Include/core_cm7.h **** 
1855:Libraries/CMSIS/Include/core_cm7.h **** 
1856:Libraries/CMSIS/Include/core_cm7.h **** /**
1857:Libraries/CMSIS/Include/core_cm7.h ****   \brief   Set Priority Grouping
1858:Libraries/CMSIS/Include/core_cm7.h ****   \details Sets the priority grouping field using the required unlock sequence.
1859:Libraries/CMSIS/Include/core_cm7.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1860:Libraries/CMSIS/Include/core_cm7.h ****            Only values from 0..7 are used.
1861:Libraries/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
1862:Libraries/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1863:Libraries/CMSIS/Include/core_cm7.h ****   \param [in]      PriorityGroup  Priority grouping field.
1864:Libraries/CMSIS/Include/core_cm7.h ****  */
1865:Libraries/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1866:Libraries/CMSIS/Include/core_cm7.h **** {
1867:Libraries/CMSIS/Include/core_cm7.h ****   uint32_t reg_value;
1868:Libraries/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1869:Libraries/CMSIS/Include/core_cm7.h **** 
1870:Libraries/CMSIS/Include/core_cm7.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1871:Libraries/CMSIS/Include/core_cm7.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1872:Libraries/CMSIS/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
1873:Libraries/CMSIS/Include/core_cm7.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1874:Libraries/CMSIS/Include/core_cm7.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1875:Libraries/CMSIS/Include/core_cm7.h ****   SCB->AIRCR =  reg_value;
1876:Libraries/CMSIS/Include/core_cm7.h **** }
1877:Libraries/CMSIS/Include/core_cm7.h **** 
1878:Libraries/CMSIS/Include/core_cm7.h **** 
1879:Libraries/CMSIS/Include/core_cm7.h **** /**
1880:Libraries/CMSIS/Include/core_cm7.h ****   \brief   Get Priority Grouping
1881:Libraries/CMSIS/Include/core_cm7.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1882:Libraries/CMSIS/Include/core_cm7.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1883:Libraries/CMSIS/Include/core_cm7.h ****  */
1884:Libraries/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1885:Libraries/CMSIS/Include/core_cm7.h **** {
1886:Libraries/CMSIS/Include/core_cm7.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1887:Libraries/CMSIS/Include/core_cm7.h **** }
1888:Libraries/CMSIS/Include/core_cm7.h **** 
1889:Libraries/CMSIS/Include/core_cm7.h **** 
1890:Libraries/CMSIS/Include/core_cm7.h **** /**
1891:Libraries/CMSIS/Include/core_cm7.h ****   \brief   Enable Interrupt
1892:Libraries/CMSIS/Include/core_cm7.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1893:Libraries/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1894:Libraries/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1895:Libraries/CMSIS/Include/core_cm7.h ****  */
1896:Libraries/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1897:Libraries/CMSIS/Include/core_cm7.h **** {
1898:Libraries/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1899:Libraries/CMSIS/Include/core_cm7.h ****   {
1900:Libraries/CMSIS/Include/core_cm7.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1901:Libraries/CMSIS/Include/core_cm7.h ****   }
1902:Libraries/CMSIS/Include/core_cm7.h **** }
1903:Libraries/CMSIS/Include/core_cm7.h **** 
1904:Libraries/CMSIS/Include/core_cm7.h **** 
1905:Libraries/CMSIS/Include/core_cm7.h **** /**
1906:Libraries/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Enable status
1907:Libraries/CMSIS/Include/core_cm7.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1908:Libraries/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1909:Libraries/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt is not enabled.
ARM GAS  /tmp/ccyzRlcj.s 			page 72


1910:Libraries/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt is enabled.
1911:Libraries/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1912:Libraries/CMSIS/Include/core_cm7.h ****  */
1913:Libraries/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1914:Libraries/CMSIS/Include/core_cm7.h **** {
1915:Libraries/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1916:Libraries/CMSIS/Include/core_cm7.h ****   {
1917:Libraries/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1918:Libraries/CMSIS/Include/core_cm7.h ****   }
1919:Libraries/CMSIS/Include/core_cm7.h ****   else
1920:Libraries/CMSIS/Include/core_cm7.h ****   {
1921:Libraries/CMSIS/Include/core_cm7.h ****     return(0U);
1922:Libraries/CMSIS/Include/core_cm7.h ****   }
1923:Libraries/CMSIS/Include/core_cm7.h **** }
1924:Libraries/CMSIS/Include/core_cm7.h **** 
1925:Libraries/CMSIS/Include/core_cm7.h **** 
1926:Libraries/CMSIS/Include/core_cm7.h **** /**
1927:Libraries/CMSIS/Include/core_cm7.h ****   \brief   Disable Interrupt
1928:Libraries/CMSIS/Include/core_cm7.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1929:Libraries/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1930:Libraries/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1931:Libraries/CMSIS/Include/core_cm7.h ****  */
1932:Libraries/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1933:Libraries/CMSIS/Include/core_cm7.h **** {
1934:Libraries/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1935:Libraries/CMSIS/Include/core_cm7.h ****   {
1936:Libraries/CMSIS/Include/core_cm7.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1937:Libraries/CMSIS/Include/core_cm7.h ****     __DSB();
1938:Libraries/CMSIS/Include/core_cm7.h ****     __ISB();
1939:Libraries/CMSIS/Include/core_cm7.h ****   }
1940:Libraries/CMSIS/Include/core_cm7.h **** }
1941:Libraries/CMSIS/Include/core_cm7.h **** 
1942:Libraries/CMSIS/Include/core_cm7.h **** 
1943:Libraries/CMSIS/Include/core_cm7.h **** /**
1944:Libraries/CMSIS/Include/core_cm7.h ****   \brief   Get Pending Interrupt
1945:Libraries/CMSIS/Include/core_cm7.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1946:Libraries/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1947:Libraries/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not pending.
1948:Libraries/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is pending.
1949:Libraries/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1950:Libraries/CMSIS/Include/core_cm7.h ****  */
1951:Libraries/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1952:Libraries/CMSIS/Include/core_cm7.h **** {
1953:Libraries/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1954:Libraries/CMSIS/Include/core_cm7.h ****   {
1955:Libraries/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1956:Libraries/CMSIS/Include/core_cm7.h ****   }
1957:Libraries/CMSIS/Include/core_cm7.h ****   else
1958:Libraries/CMSIS/Include/core_cm7.h ****   {
1959:Libraries/CMSIS/Include/core_cm7.h ****     return(0U);
1960:Libraries/CMSIS/Include/core_cm7.h ****   }
1961:Libraries/CMSIS/Include/core_cm7.h **** }
1962:Libraries/CMSIS/Include/core_cm7.h **** 
1963:Libraries/CMSIS/Include/core_cm7.h **** 
1964:Libraries/CMSIS/Include/core_cm7.h **** /**
1965:Libraries/CMSIS/Include/core_cm7.h ****   \brief   Set Pending Interrupt
1966:Libraries/CMSIS/Include/core_cm7.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
ARM GAS  /tmp/ccyzRlcj.s 			page 73


1967:Libraries/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1968:Libraries/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1969:Libraries/CMSIS/Include/core_cm7.h ****  */
1970:Libraries/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1971:Libraries/CMSIS/Include/core_cm7.h **** {
1972:Libraries/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1973:Libraries/CMSIS/Include/core_cm7.h ****   {
1974:Libraries/CMSIS/Include/core_cm7.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1975:Libraries/CMSIS/Include/core_cm7.h ****   }
1976:Libraries/CMSIS/Include/core_cm7.h **** }
1977:Libraries/CMSIS/Include/core_cm7.h **** 
1978:Libraries/CMSIS/Include/core_cm7.h **** 
1979:Libraries/CMSIS/Include/core_cm7.h **** /**
1980:Libraries/CMSIS/Include/core_cm7.h ****   \brief   Clear Pending Interrupt
1981:Libraries/CMSIS/Include/core_cm7.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1982:Libraries/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1983:Libraries/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1984:Libraries/CMSIS/Include/core_cm7.h ****  */
1985:Libraries/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1986:Libraries/CMSIS/Include/core_cm7.h **** {
1987:Libraries/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1988:Libraries/CMSIS/Include/core_cm7.h ****   {
1989:Libraries/CMSIS/Include/core_cm7.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1990:Libraries/CMSIS/Include/core_cm7.h ****   }
1991:Libraries/CMSIS/Include/core_cm7.h **** }
1992:Libraries/CMSIS/Include/core_cm7.h **** 
1993:Libraries/CMSIS/Include/core_cm7.h **** 
1994:Libraries/CMSIS/Include/core_cm7.h **** /**
1995:Libraries/CMSIS/Include/core_cm7.h ****   \brief   Get Active Interrupt
1996:Libraries/CMSIS/Include/core_cm7.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1997:Libraries/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1998:Libraries/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not active.
1999:Libraries/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is active.
2000:Libraries/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
2001:Libraries/CMSIS/Include/core_cm7.h ****  */
2002:Libraries/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
2003:Libraries/CMSIS/Include/core_cm7.h **** {
2004:Libraries/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2005:Libraries/CMSIS/Include/core_cm7.h ****   {
2006:Libraries/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
2007:Libraries/CMSIS/Include/core_cm7.h ****   }
2008:Libraries/CMSIS/Include/core_cm7.h ****   else
2009:Libraries/CMSIS/Include/core_cm7.h ****   {
2010:Libraries/CMSIS/Include/core_cm7.h ****     return(0U);
2011:Libraries/CMSIS/Include/core_cm7.h ****   }
2012:Libraries/CMSIS/Include/core_cm7.h **** }
2013:Libraries/CMSIS/Include/core_cm7.h **** 
2014:Libraries/CMSIS/Include/core_cm7.h **** 
2015:Libraries/CMSIS/Include/core_cm7.h **** /**
2016:Libraries/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Priority
2017:Libraries/CMSIS/Include/core_cm7.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
2018:Libraries/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2019:Libraries/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2020:Libraries/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
2021:Libraries/CMSIS/Include/core_cm7.h ****   \param [in]  priority  Priority to set.
2022:Libraries/CMSIS/Include/core_cm7.h ****   \note    The priority cannot be set for every processor exception.
2023:Libraries/CMSIS/Include/core_cm7.h ****  */
ARM GAS  /tmp/ccyzRlcj.s 			page 74


2024:Libraries/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
2025:Libraries/CMSIS/Include/core_cm7.h **** {
2026:Libraries/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2027:Libraries/CMSIS/Include/core_cm7.h ****   {
2028:Libraries/CMSIS/Include/core_cm7.h ****     NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2029:Libraries/CMSIS/Include/core_cm7.h ****   }
2030:Libraries/CMSIS/Include/core_cm7.h ****   else
2031:Libraries/CMSIS/Include/core_cm7.h ****   {
2032:Libraries/CMSIS/Include/core_cm7.h ****     SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2033:Libraries/CMSIS/Include/core_cm7.h ****   }
2034:Libraries/CMSIS/Include/core_cm7.h **** }
2035:Libraries/CMSIS/Include/core_cm7.h **** 
2036:Libraries/CMSIS/Include/core_cm7.h **** 
2037:Libraries/CMSIS/Include/core_cm7.h **** /**
2038:Libraries/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Priority
2039:Libraries/CMSIS/Include/core_cm7.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
2040:Libraries/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2041:Libraries/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2042:Libraries/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn  Interrupt number.
2043:Libraries/CMSIS/Include/core_cm7.h ****   \return             Interrupt Priority.
2044:Libraries/CMSIS/Include/core_cm7.h ****                       Value is aligned automatically to the implemented priority bits of the microc
2045:Libraries/CMSIS/Include/core_cm7.h ****  */
2046:Libraries/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
2047:Libraries/CMSIS/Include/core_cm7.h **** {
2048:Libraries/CMSIS/Include/core_cm7.h **** 
2049:Libraries/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2050:Libraries/CMSIS/Include/core_cm7.h ****   {
2051:Libraries/CMSIS/Include/core_cm7.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]                >> (8U - __NVIC_PRIO_BITS)));
2052:Libraries/CMSIS/Include/core_cm7.h ****   }
2053:Libraries/CMSIS/Include/core_cm7.h ****   else
2054:Libraries/CMSIS/Include/core_cm7.h ****   {
2055:Libraries/CMSIS/Include/core_cm7.h ****     return(((uint32_t)SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
2056:Libraries/CMSIS/Include/core_cm7.h ****   }
2057:Libraries/CMSIS/Include/core_cm7.h **** }
2058:Libraries/CMSIS/Include/core_cm7.h **** 
2059:Libraries/CMSIS/Include/core_cm7.h **** 
2060:Libraries/CMSIS/Include/core_cm7.h **** /**
2061:Libraries/CMSIS/Include/core_cm7.h ****   \brief   Encode Priority
2062:Libraries/CMSIS/Include/core_cm7.h ****   \details Encodes the priority for an interrupt with the given priority group,
2063:Libraries/CMSIS/Include/core_cm7.h ****            preemptive priority value, and subpriority value.
2064:Libraries/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2065:Libraries/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
2066:Libraries/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2067:Libraries/CMSIS/Include/core_cm7.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
2068:Libraries/CMSIS/Include/core_cm7.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
2069:Libraries/CMSIS/Include/core_cm7.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
2070:Libraries/CMSIS/Include/core_cm7.h ****  */
2071:Libraries/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
2072:Libraries/CMSIS/Include/core_cm7.h **** {
2073:Libraries/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2074:Libraries/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2075:Libraries/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2076:Libraries/CMSIS/Include/core_cm7.h **** 
2077:Libraries/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2078:Libraries/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2079:Libraries/CMSIS/Include/core_cm7.h **** 
2080:Libraries/CMSIS/Include/core_cm7.h ****   return (
ARM GAS  /tmp/ccyzRlcj.s 			page 75


2081:Libraries/CMSIS/Include/core_cm7.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
2082:Libraries/CMSIS/Include/core_cm7.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
2083:Libraries/CMSIS/Include/core_cm7.h ****          );
2084:Libraries/CMSIS/Include/core_cm7.h **** }
2085:Libraries/CMSIS/Include/core_cm7.h **** 
2086:Libraries/CMSIS/Include/core_cm7.h **** 
2087:Libraries/CMSIS/Include/core_cm7.h **** /**
2088:Libraries/CMSIS/Include/core_cm7.h ****   \brief   Decode Priority
2089:Libraries/CMSIS/Include/core_cm7.h ****   \details Decodes an interrupt priority value with a given priority group to
2090:Libraries/CMSIS/Include/core_cm7.h ****            preemptive priority value and subpriority value.
2091:Libraries/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2092:Libraries/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
2093:Libraries/CMSIS/Include/core_cm7.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
2094:Libraries/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2095:Libraries/CMSIS/Include/core_cm7.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
2096:Libraries/CMSIS/Include/core_cm7.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
2097:Libraries/CMSIS/Include/core_cm7.h ****  */
2098:Libraries/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
2099:Libraries/CMSIS/Include/core_cm7.h **** {
2100:Libraries/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2101:Libraries/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2102:Libraries/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2103:Libraries/CMSIS/Include/core_cm7.h **** 
2104:Libraries/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2105:Libraries/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2106:Libraries/CMSIS/Include/core_cm7.h **** 
2107:Libraries/CMSIS/Include/core_cm7.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
2108:Libraries/CMSIS/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
2109:Libraries/CMSIS/Include/core_cm7.h **** }
2110:Libraries/CMSIS/Include/core_cm7.h **** 
2111:Libraries/CMSIS/Include/core_cm7.h **** 
2112:Libraries/CMSIS/Include/core_cm7.h **** /**
2113:Libraries/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Vector
2114:Libraries/CMSIS/Include/core_cm7.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
2115:Libraries/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2116:Libraries/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2117:Libraries/CMSIS/Include/core_cm7.h ****            VTOR must been relocated to SRAM before.
2118:Libraries/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number
2119:Libraries/CMSIS/Include/core_cm7.h ****   \param [in]   vector    Address of interrupt handler function
2120:Libraries/CMSIS/Include/core_cm7.h ****  */
2121:Libraries/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
2122:Libraries/CMSIS/Include/core_cm7.h **** {
2123:Libraries/CMSIS/Include/core_cm7.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
2124:Libraries/CMSIS/Include/core_cm7.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
2125:Libraries/CMSIS/Include/core_cm7.h **** }
2126:Libraries/CMSIS/Include/core_cm7.h **** 
2127:Libraries/CMSIS/Include/core_cm7.h **** 
2128:Libraries/CMSIS/Include/core_cm7.h **** /**
2129:Libraries/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Vector
2130:Libraries/CMSIS/Include/core_cm7.h ****   \details Reads an interrupt vector from interrupt vector table.
2131:Libraries/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2132:Libraries/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2133:Libraries/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number.
2134:Libraries/CMSIS/Include/core_cm7.h ****   \return                 Address of interrupt handler function
2135:Libraries/CMSIS/Include/core_cm7.h ****  */
2136:Libraries/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
2137:Libraries/CMSIS/Include/core_cm7.h **** {
ARM GAS  /tmp/ccyzRlcj.s 			page 76


2138:Libraries/CMSIS/Include/core_cm7.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
2139:Libraries/CMSIS/Include/core_cm7.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
2140:Libraries/CMSIS/Include/core_cm7.h **** }
2141:Libraries/CMSIS/Include/core_cm7.h **** 
2142:Libraries/CMSIS/Include/core_cm7.h **** 
2143:Libraries/CMSIS/Include/core_cm7.h **** /**
2144:Libraries/CMSIS/Include/core_cm7.h ****   \brief   System Reset
2145:Libraries/CMSIS/Include/core_cm7.h ****   \details Initiates a system reset request to reset the MCU.
2146:Libraries/CMSIS/Include/core_cm7.h ****  */
2147:Libraries/CMSIS/Include/core_cm7.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
2148:Libraries/CMSIS/Include/core_cm7.h **** {
2149:Libraries/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure all outstanding memor
2150:Libraries/CMSIS/Include/core_cm7.h ****                                                                        buffered write are completed
2151:Libraries/CMSIS/Include/core_cm7.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
2152:Libraries/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
2153:Libraries/CMSIS/Include/core_cm7.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
2154:Libraries/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure completion of memory 
2155:Libraries/CMSIS/Include/core_cm7.h **** 
2156:Libraries/CMSIS/Include/core_cm7.h ****   for(;;)                                                           /* wait until reset */
2157:Libraries/CMSIS/Include/core_cm7.h ****   {
2158:Libraries/CMSIS/Include/core_cm7.h ****     __NOP();
2159:Libraries/CMSIS/Include/core_cm7.h ****   }
2160:Libraries/CMSIS/Include/core_cm7.h **** }
2161:Libraries/CMSIS/Include/core_cm7.h **** 
2162:Libraries/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_NVICFunctions */
2163:Libraries/CMSIS/Include/core_cm7.h **** 
2164:Libraries/CMSIS/Include/core_cm7.h **** /* ##########################  MPU functions  #################################### */
2165:Libraries/CMSIS/Include/core_cm7.h **** 
2166:Libraries/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
2167:Libraries/CMSIS/Include/core_cm7.h **** 
2168:Libraries/CMSIS/Include/core_cm7.h **** #include "mpu_armv7.h"
2169:Libraries/CMSIS/Include/core_cm7.h **** 
2170:Libraries/CMSIS/Include/core_cm7.h **** #endif
2171:Libraries/CMSIS/Include/core_cm7.h **** 
2172:Libraries/CMSIS/Include/core_cm7.h **** /* ##########################  FPU functions  #################################### */
2173:Libraries/CMSIS/Include/core_cm7.h **** /**
2174:Libraries/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2175:Libraries/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
2176:Libraries/CMSIS/Include/core_cm7.h ****   \brief    Function that provides FPU type.
2177:Libraries/CMSIS/Include/core_cm7.h ****   @{
2178:Libraries/CMSIS/Include/core_cm7.h ****  */
2179:Libraries/CMSIS/Include/core_cm7.h **** 
2180:Libraries/CMSIS/Include/core_cm7.h **** /**
2181:Libraries/CMSIS/Include/core_cm7.h ****   \brief   get FPU type
2182:Libraries/CMSIS/Include/core_cm7.h ****   \details returns the FPU type
2183:Libraries/CMSIS/Include/core_cm7.h ****   \returns
2184:Libraries/CMSIS/Include/core_cm7.h ****    - \b  0: No FPU
2185:Libraries/CMSIS/Include/core_cm7.h ****    - \b  1: Single precision FPU
2186:Libraries/CMSIS/Include/core_cm7.h ****    - \b  2: Double + Single precision FPU
2187:Libraries/CMSIS/Include/core_cm7.h ****  */
2188:Libraries/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
2189:Libraries/CMSIS/Include/core_cm7.h **** {
2190:Libraries/CMSIS/Include/core_cm7.h ****   uint32_t mvfr0;
2191:Libraries/CMSIS/Include/core_cm7.h **** 
2192:Libraries/CMSIS/Include/core_cm7.h ****   mvfr0 = SCB->MVFR0;
2193:Libraries/CMSIS/Include/core_cm7.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x220U)
2194:Libraries/CMSIS/Include/core_cm7.h ****   {
ARM GAS  /tmp/ccyzRlcj.s 			page 77


2195:Libraries/CMSIS/Include/core_cm7.h ****     return 2U;           /* Double + Single precision FPU */
2196:Libraries/CMSIS/Include/core_cm7.h ****   }
2197:Libraries/CMSIS/Include/core_cm7.h ****   else if ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
2198:Libraries/CMSIS/Include/core_cm7.h ****   {
2199:Libraries/CMSIS/Include/core_cm7.h ****     return 1U;           /* Single precision FPU */
2200:Libraries/CMSIS/Include/core_cm7.h ****   }
2201:Libraries/CMSIS/Include/core_cm7.h ****   else
2202:Libraries/CMSIS/Include/core_cm7.h ****   {
2203:Libraries/CMSIS/Include/core_cm7.h ****     return 0U;           /* No FPU */
2204:Libraries/CMSIS/Include/core_cm7.h ****   }
2205:Libraries/CMSIS/Include/core_cm7.h **** }
2206:Libraries/CMSIS/Include/core_cm7.h **** 
2207:Libraries/CMSIS/Include/core_cm7.h **** 
2208:Libraries/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_FpuFunctions */
2209:Libraries/CMSIS/Include/core_cm7.h **** 
2210:Libraries/CMSIS/Include/core_cm7.h **** 
2211:Libraries/CMSIS/Include/core_cm7.h **** 
2212:Libraries/CMSIS/Include/core_cm7.h **** /* ##########################  Cache functions  #################################### */
2213:Libraries/CMSIS/Include/core_cm7.h **** /**
2214:Libraries/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2215:Libraries/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
2216:Libraries/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure Instruction and Data cache.
2217:Libraries/CMSIS/Include/core_cm7.h ****   @{
2218:Libraries/CMSIS/Include/core_cm7.h ****  */
2219:Libraries/CMSIS/Include/core_cm7.h **** 
2220:Libraries/CMSIS/Include/core_cm7.h **** /* Cache Size ID Register Macros */
2221:Libraries/CMSIS/Include/core_cm7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
2222:Libraries/CMSIS/Include/core_cm7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
2223:Libraries/CMSIS/Include/core_cm7.h **** 
2224:Libraries/CMSIS/Include/core_cm7.h **** 
2225:Libraries/CMSIS/Include/core_cm7.h **** /**
2226:Libraries/CMSIS/Include/core_cm7.h ****   \brief   Enable I-Cache
2227:Libraries/CMSIS/Include/core_cm7.h ****   \details Turns on I-Cache
2228:Libraries/CMSIS/Include/core_cm7.h ****   */
2229:Libraries/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableICache (void)
2230:Libraries/CMSIS/Include/core_cm7.h **** {
2231:Libraries/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2232:Libraries/CMSIS/Include/core_cm7.h ****     __DSB();
2233:Libraries/CMSIS/Include/core_cm7.h ****     __ISB();
2234:Libraries/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 807              		.loc 3 2234 0
 808 002a 4C4B     		ldr	r3, .L26
 809 002c 0021     		movs	r1, #0
 810 002e C3F85012 		str	r1, [r3, #592]
 811              	.LBB67:
 812              	.LBB68:
 813              		.loc 2 879 0
 814              		.syntax unified
 815              	@ 879 "Libraries/CMSIS/Include/cmsis_gcc.h" 1
 816 0032 BFF34F8F 		dsb 0xF
 817              	@ 0 "" 2
 818              		.thumb
 819              		.syntax unified
 820              	.LBE68:
 821              	.LBE67:
 822              	.LBB69:
 823              	.LBB70:
ARM GAS  /tmp/ccyzRlcj.s 			page 78


 868:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 824              		.loc 2 868 0
 825              		.syntax unified
 826              	@ 868 "Libraries/CMSIS/Include/cmsis_gcc.h" 1
 827 0036 BFF36F8F 		isb 0xF
 828              	@ 0 "" 2
 829              		.thumb
 830              		.syntax unified
 831              	.LBE70:
 832              	.LBE69:
2235:Libraries/CMSIS/Include/core_cm7.h ****     __DSB();
2236:Libraries/CMSIS/Include/core_cm7.h ****     __ISB();
2237:Libraries/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 833              		.loc 3 2237 0
 834 003a 5A69     		ldr	r2, [r3, #20]
 835 003c 42F40032 		orr	r2, r2, #131072
 836 0040 5A61     		str	r2, [r3, #20]
 837              	.LBB71:
 838              	.LBB72:
 839              		.loc 2 879 0
 840              		.syntax unified
 841              	@ 879 "Libraries/CMSIS/Include/cmsis_gcc.h" 1
 842 0042 BFF34F8F 		dsb 0xF
 843              	@ 0 "" 2
 844              		.thumb
 845              		.syntax unified
 846              	.LBE72:
 847              	.LBE71:
 848              	.LBB73:
 849              	.LBB74:
 868:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 850              		.loc 2 868 0
 851              		.syntax unified
 852              	@ 868 "Libraries/CMSIS/Include/cmsis_gcc.h" 1
 853 0046 BFF36F8F 		isb 0xF
 854              	@ 0 "" 2
 855              		.thumb
 856              		.syntax unified
 857              	.LBE74:
 858              	.LBE73:
 859              	.LBE62:
 860              	.LBE61:
 861              	.LBB75:
 862              	.LBB76:
2238:Libraries/CMSIS/Include/core_cm7.h ****     __DSB();
2239:Libraries/CMSIS/Include/core_cm7.h ****     __ISB();
2240:Libraries/CMSIS/Include/core_cm7.h ****   #endif
2241:Libraries/CMSIS/Include/core_cm7.h **** }
2242:Libraries/CMSIS/Include/core_cm7.h **** 
2243:Libraries/CMSIS/Include/core_cm7.h **** 
2244:Libraries/CMSIS/Include/core_cm7.h **** /**
2245:Libraries/CMSIS/Include/core_cm7.h ****   \brief   Disable I-Cache
2246:Libraries/CMSIS/Include/core_cm7.h ****   \details Turns off I-Cache
2247:Libraries/CMSIS/Include/core_cm7.h ****   */
2248:Libraries/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_DisableICache (void)
2249:Libraries/CMSIS/Include/core_cm7.h **** {
2250:Libraries/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
ARM GAS  /tmp/ccyzRlcj.s 			page 79


2251:Libraries/CMSIS/Include/core_cm7.h ****     __DSB();
2252:Libraries/CMSIS/Include/core_cm7.h ****     __ISB();
2253:Libraries/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
2254:Libraries/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2255:Libraries/CMSIS/Include/core_cm7.h ****     __DSB();
2256:Libraries/CMSIS/Include/core_cm7.h ****     __ISB();
2257:Libraries/CMSIS/Include/core_cm7.h ****   #endif
2258:Libraries/CMSIS/Include/core_cm7.h **** }
2259:Libraries/CMSIS/Include/core_cm7.h **** 
2260:Libraries/CMSIS/Include/core_cm7.h **** 
2261:Libraries/CMSIS/Include/core_cm7.h **** /**
2262:Libraries/CMSIS/Include/core_cm7.h ****   \brief   Invalidate I-Cache
2263:Libraries/CMSIS/Include/core_cm7.h ****   \details Invalidates I-Cache
2264:Libraries/CMSIS/Include/core_cm7.h ****   */
2265:Libraries/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateICache (void)
2266:Libraries/CMSIS/Include/core_cm7.h **** {
2267:Libraries/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2268:Libraries/CMSIS/Include/core_cm7.h ****     __DSB();
2269:Libraries/CMSIS/Include/core_cm7.h ****     __ISB();
2270:Libraries/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;
2271:Libraries/CMSIS/Include/core_cm7.h ****     __DSB();
2272:Libraries/CMSIS/Include/core_cm7.h ****     __ISB();
2273:Libraries/CMSIS/Include/core_cm7.h ****   #endif
2274:Libraries/CMSIS/Include/core_cm7.h **** }
2275:Libraries/CMSIS/Include/core_cm7.h **** 
2276:Libraries/CMSIS/Include/core_cm7.h **** 
2277:Libraries/CMSIS/Include/core_cm7.h **** /**
2278:Libraries/CMSIS/Include/core_cm7.h ****   \brief   Enable D-Cache
2279:Libraries/CMSIS/Include/core_cm7.h ****   \details Turns on D-Cache
2280:Libraries/CMSIS/Include/core_cm7.h ****   */
2281:Libraries/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableDCache (void)
2282:Libraries/CMSIS/Include/core_cm7.h **** {
2283:Libraries/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2284:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2285:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2286:Libraries/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2287:Libraries/CMSIS/Include/core_cm7.h **** 
2288:Libraries/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 863              		.loc 3 2288 0
 864 004a C3F88410 		str	r1, [r3, #132]
 865              	.LBB77:
 866              	.LBB78:
 867              		.loc 2 879 0
 868              		.syntax unified
 869              	@ 879 "Libraries/CMSIS/Include/cmsis_gcc.h" 1
 870 004e BFF34F8F 		dsb 0xF
 871              	@ 0 "" 2
 872              		.thumb
 873              		.syntax unified
 874              	.LBE78:
 875              	.LBE77:
2289:Libraries/CMSIS/Include/core_cm7.h ****     __DSB();
2290:Libraries/CMSIS/Include/core_cm7.h **** 
2291:Libraries/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
 876              		.loc 3 2291 0
 877 0052 D3F88040 		ldr	r4, [r3, #128]
 878              	.LVL102:
ARM GAS  /tmp/ccyzRlcj.s 			page 80


2292:Libraries/CMSIS/Include/core_cm7.h **** 
2293:Libraries/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2294:Libraries/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 879              		.loc 3 2294 0
 880 0056 C4F34E30 		ubfx	r0, r4, #13, #15
 881              	.LVL103:
 882 005a 0FE0     		b	.L20
 883              	.LVL104:
 884              	.L22:
2295:Libraries/CMSIS/Include/core_cm7.h ****     do {
2296:Libraries/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2297:Libraries/CMSIS/Include/core_cm7.h ****       do {
2298:Libraries/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2299:Libraries/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
2300:Libraries/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2301:Libraries/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2302:Libraries/CMSIS/Include/core_cm7.h ****         #endif
2303:Libraries/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
 885              		.loc 3 2303 0
 886 005c 1A46     		mov	r2, r3
 887              	.LVL105:
 888              	.L19:
2298:Libraries/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 889              		.loc 3 2298 0
 890 005e 43F6E073 		movw	r3, #16352
 891 0062 03EA4013 		and	r3, r3, r0, lsl #5
 892 0066 43EA8273 		orr	r3, r3, r2, lsl #30
 893 006a 3C49     		ldr	r1, .L26
 894 006c C1F86032 		str	r3, [r1, #608]
 895              		.loc 3 2303 0
 896 0070 531E     		subs	r3, r2, #1
 897              	.LVL106:
 898 0072 002A     		cmp	r2, #0
 899 0074 F2D1     		bne	.L22
2304:Libraries/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
 900              		.loc 3 2304 0
 901 0076 431E     		subs	r3, r0, #1
 902              	.LVL107:
 903 0078 18B1     		cbz	r0, .L25
 904 007a 1846     		mov	r0, r3
 905              	.LVL108:
 906              	.L20:
2296:Libraries/CMSIS/Include/core_cm7.h ****       do {
 907              		.loc 3 2296 0
 908 007c C4F3C902 		ubfx	r2, r4, #3, #10
 909              	.LVL109:
 910 0080 EDE7     		b	.L19
 911              	.LVL110:
 912              	.L25:
 913              	.LBB79:
 914              	.LBB80:
 915              		.loc 2 879 0
 916              		.syntax unified
 917              	@ 879 "Libraries/CMSIS/Include/cmsis_gcc.h" 1
 918 0082 BFF34F8F 		dsb 0xF
 919              	@ 0 "" 2
 920              		.thumb
ARM GAS  /tmp/ccyzRlcj.s 			page 81


 921              		.syntax unified
 922              	.LBE80:
 923              	.LBE79:
2305:Libraries/CMSIS/Include/core_cm7.h ****     __DSB();
2306:Libraries/CMSIS/Include/core_cm7.h **** 
2307:Libraries/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 924              		.loc 3 2307 0
 925 0086 4B69     		ldr	r3, [r1, #20]
 926              	.LVL111:
 927 0088 43F48033 		orr	r3, r3, #65536
 928 008c 4B61     		str	r3, [r1, #20]
 929              	.LBB81:
 930              	.LBB82:
 931              		.loc 2 879 0
 932              		.syntax unified
 933              	@ 879 "Libraries/CMSIS/Include/cmsis_gcc.h" 1
 934 008e BFF34F8F 		dsb 0xF
 935              	@ 0 "" 2
 936              		.thumb
 937              		.syntax unified
 938              	.LBE82:
 939              	.LBE81:
 940              	.LBB83:
 941              	.LBB84:
 868:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 942              		.loc 2 868 0
 943              		.syntax unified
 944              	@ 868 "Libraries/CMSIS/Include/cmsis_gcc.h" 1
 945 0092 BFF36F8F 		isb 0xF
 946              	@ 0 "" 2
 947              	.LVL112:
 948              		.thumb
 949              		.syntax unified
 950              	.LBE84:
 951              	.LBE83:
 952              	.LBE76:
 953              	.LBE75:
  50:User/main.c   **** 
 954              		.loc 1 50 0
 955 0096 0021     		movs	r1, #0
 956 0098 4FF08070 		mov	r0, #16777216
 957 009c FFF7FEFF 		bl	HAL_SYSCFG_AnalogSwitchConfig
 958              	.LVL113:
  53:User/main.c   ****   /* 配置串口1为：115200 8-N-1 */
 959              		.loc 1 53 0
 960 00a0 FFF7FEFF 		bl	LED_GPIO_Config
 961              	.LVL114:
  55:User/main.c   **** 
 962              		.loc 1 55 0
 963 00a4 FFF7FEFF 		bl	DEBUG_USART_Config
 964              	.LVL115:
  57:User/main.c   ****   printf("\r\n野火STM32H750 LTDC液晶显示英文测试例程\r\n");
 965              		.loc 1 57 0
 966 00a8 2D48     		ldr	r0, .L26+4
 967 00aa FFF7FEFF 		bl	puts
 968              	.LVL116:
  58:User/main.c   ****   /*蓝灯亮*/
ARM GAS  /tmp/ccyzRlcj.s 			page 82


 969              		.loc 1 58 0
 970 00ae 2D48     		ldr	r0, .L26+8
 971 00b0 FFF7FEFF 		bl	puts
 972              	.LVL117:
  60:User/main.c   ****   /* LCD 端口初始化 */
 973              		.loc 1 60 0
 974 00b4 2C4B     		ldr	r3, .L26+12
 975 00b6 0124     		movs	r4, #1
 976 00b8 9C61     		str	r4, [r3, #24]
 977 00ba 0222     		movs	r2, #2
 978 00bc 9A61     		str	r2, [r3, #24]
 979 00be 4FF40022 		mov	r2, #524288
 980 00c2 A3F58063 		sub	r3, r3, #1024
 981 00c6 9A61     		str	r2, [r3, #24]
  62:User/main.c   ****   /* LCD 第一层初始化 */
 982              		.loc 1 62 0
 983 00c8 FFF7FEFF 		bl	LCD_Init
 984              	.LVL118:
  64:User/main.c   ****   /* LCD 第二层初始化 */
 985              		.loc 1 64 0
 986 00cc 0022     		movs	r2, #0
 987 00ce 4FF05241 		mov	r1, #-771751936
 988 00d2 1046     		mov	r0, r2
 989 00d4 FFF7FEFF 		bl	LCD_LayerInit
 990              	.LVL119:
  66:User/main.c   ****   /* 使能LCD，包括开背光 */
 991              		.loc 1 66 0
 992 00d8 FFF7FEFF 		bl	LCD_GetXSize
 993              	.LVL120:
 994 00dc 0546     		mov	r5, r0
 995 00de FFF7FEFF 		bl	LCD_GetYSize
 996              	.LVL121:
 997 00e2 00FB05F1 		mul	r1, r0, r5
 998 00e6 01F15251 		add	r1, r1, #880803840
 999 00ea 0022     		movs	r2, #0
 1000 00ec 8900     		lsls	r1, r1, #2
 1001 00ee 2046     		mov	r0, r4
 1002 00f0 FFF7FEFF 		bl	LCD_LayerInit
 1003              	.LVL122:
  68:User/main.c   **** 
 1004              		.loc 1 68 0
 1005 00f4 FFF7FEFF 		bl	LCD_DisplayOn
 1006              	.LVL123:
  71:User/main.c   **** 
 1007              		.loc 1 71 0
 1008 00f8 0020     		movs	r0, #0
 1009 00fa FFF7FEFF 		bl	LCD_SelectLayer
 1010              	.LVL124:
  74:User/main.c   **** 
 1011              		.loc 1 74 0
 1012 00fe 4FF0FF30 		mov	r0, #-1
 1013 0102 FFF7FEFF 		bl	LCD_Clear
 1014              	.LVL125:
  77:User/main.c   **** 
 1015              		.loc 1 77 0
 1016 0106 2046     		mov	r0, r4
 1017 0108 FFF7FEFF 		bl	LCD_SelectLayer
ARM GAS  /tmp/ccyzRlcj.s 			page 83


 1018              	.LVL126:
  80:User/main.c   **** 
 1019              		.loc 1 80 0
 1020 010c 4FF0FF30 		mov	r0, #-1
 1021 0110 FFF7FEFF 		bl	LCD_Clear
 1022              	.LVL127:
  83:User/main.c   ****   LCD_SetTransparency(1, 0);
 1023              		.loc 1 83 0
 1024 0114 FF21     		movs	r1, #255
 1025 0116 0020     		movs	r0, #0
 1026 0118 FFF7FEFF 		bl	LCD_SetTransparency
 1027              	.LVL128:
  84:User/main.c   **** 
 1028              		.loc 1 84 0
 1029 011c 0021     		movs	r1, #0
 1030 011e 2046     		mov	r0, r4
 1031 0120 FFF7FEFF 		bl	LCD_SetTransparency
 1032              	.LVL129:
  87:User/main.c   ****   LCD_SetColors(LCD_COLOR_BLACK, LCD_COLOR_WHITE);
 1033              		.loc 1 87 0
 1034 0124 0020     		movs	r0, #0
 1035 0126 FFF7FEFF 		bl	LCD_SelectLayer
 1036              	.LVL130:
  88:User/main.c   ****   LCD_SetFont(&LCD_DEFAULT_FONT);
 1037              		.loc 1 88 0
 1038 012a 4FF0FF31 		mov	r1, #-1
 1039 012e 4FF07F40 		mov	r0, #-16777216
 1040 0132 FFF7FEFF 		bl	LCD_SetColors
 1041              	.LVL131:
  89:User/main.c   **** 
 1042              		.loc 1 89 0
 1043 0136 0D4D     		ldr	r5, .L26+16
 1044 0138 2846     		mov	r0, r5
 1045 013a FFF7FEFF 		bl	LCD_SetFont
 1046              	.LVL132:
  91:User/main.c   ****   LCD_SetColors(LCD_COLOR_BLACK, LCD_COLOR_WHITE);
 1047              		.loc 1 91 0
 1048 013e 2046     		mov	r0, r4
 1049 0140 FFF7FEFF 		bl	LCD_SelectLayer
 1050              	.LVL133:
  92:User/main.c   ****   LCD_SetFont(&LCD_DEFAULT_FONT);
 1051              		.loc 1 92 0
 1052 0144 4FF0FF31 		mov	r1, #-1
 1053 0148 4FF07F40 		mov	r0, #-16777216
 1054 014c FFF7FEFF 		bl	LCD_SetColors
 1055              	.LVL134:
  93:User/main.c   **** 
 1056              		.loc 1 93 0
 1057 0150 2846     		mov	r0, r5
 1058 0152 FFF7FEFF 		bl	LCD_SetFont
 1059              	.LVL135:
 1060              	.L21:
 103:User/main.c   ****   }
 1061              		.loc 1 103 0 discriminator 1
 1062 0156 FFF7FEFF 		bl	LCD_Test
 1063              	.LVL136:
 1064 015a FCE7     		b	.L21
ARM GAS  /tmp/ccyzRlcj.s 			page 84


 1065              	.L27:
 1066              		.align	2
 1067              	.L26:
 1068 015c 00ED00E0 		.word	-536810240
 1069 0160 00000000 		.word	.LC14
 1070 0164 28000000 		.word	.LC15
 1071 0168 00040258 		.word	1476527104
 1072 016c 00000000 		.word	Font24
 1073              		.cfi_endproc
 1074              	.LFE142:
 1076              		.section	.bss.testCNT.12462,"aw",%nobits
 1077              		.set	.LANCHOR0,. + 0
 1080              	testCNT.12462:
 1081 0000 00       		.space	1
 1082              		.section	.rodata.LCD_Test.str1.4,"aMS",%progbits,1
 1083              		.align	2
 1084              	.LC0:
 1085 0000 31323300 		.ascii	"123\000"
 1086              	.LC1:
 1087 0004 42482035 		.ascii	"BH 5.0 inch LCD para:\000"
 1087      2E302069 
 1087      6E636820 
 1087      4C434420 
 1087      70617261 
 1088 001a 0000     		.space	2
 1089              	.LC2:
 1090 001c 496D6167 		.ascii	"Image resolution:800x480 px\000"
 1090      65207265 
 1090      736F6C75 
 1090      74696F6E 
 1090      3A383030 
 1091              	.LC3:
 1092 0038 546F7563 		.ascii	"Touch pad:5 point touch supported\000"
 1092      68207061 
 1092      643A3520 
 1092      706F696E 
 1092      7420746F 
 1093 005a 0000     		.space	2
 1094              	.LC4:
 1095 005c 55736520 		.ascii	"Use STM32-LTDC directed driver,\000"
 1095      53544D33 
 1095      322D4C54 
 1095      44432064 
 1095      69726563 
 1096              	.LC5:
 1097 007c 6E6F206E 		.ascii	"no need extern driver,RGB888,24bits data bus\000"
 1097      65656420 
 1097      65787465 
 1097      726E2064 
 1097      72697665 
 1098 00a9 000000   		.space	3
 1099              	.LC6:
 1100 00ac 546F7563 		.ascii	"Touch pad use IIC to communicate\000"
 1100      68207061 
 1100      64207573 
 1100      65204949 
 1100      4320746F 
ARM GAS  /tmp/ccyzRlcj.s 			page 85


 1101 00cd 000000   		.space	3
 1102              	.LC7:
 1103 00d0 44697370 		.ascii	"Display value demo: testCount = %d \000"
 1103      6C617920 
 1103      76616C75 
 1103      65206465 
 1103      6D6F3A20 
 1104              	.LC8:
 1105 00f4 44726177 		.ascii	"Draw line:\000"
 1105      206C696E 
 1105      653A00
 1106 00ff 00       		.space	1
 1107              	.LC9:
 1108 0100 44726177 		.ascii	"Draw Rect:\000"
 1108      20526563 
 1108      743A00
 1109 010b 00       		.space	1
 1110              	.LC10:
 1111 010c 44726177 		.ascii	"Draw Full Rect:\000"
 1111      2046756C 
 1111      6C205265 
 1111      63743A00 
 1112              	.LC11:
 1113 011c 44726177 		.ascii	"Draw circle:\000"
 1113      20636972 
 1113      636C653A 
 1113      00
 1114 0129 000000   		.space	3
 1115              	.LC12:
 1116 012c 44726177 		.ascii	"Draw full circle:\000"
 1116      2066756C 
 1116      6C206369 
 1116      72636C65 
 1116      3A00
 1117 013e 0000     		.space	2
 1118              	.LC13:
 1119 0140 5472616E 		.ascii	"Transparency effect:\000"
 1119      73706172 
 1119      656E6379 
 1119      20656666 
 1119      6563743A 
 1120              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1121              		.align	2
 1122              	.LC14:
 1123 0000 0D0A20BB 		.ascii	"\015\012 \273\266\323\255\312\271\323\303\322\260\273"
 1123      B6D3ADCA 
 1123      B9D3C3D2 
 1123      B0BB
 1124 000e F0202053 		.ascii	"\360  STM32 H743 \277\252\267\242\260\345\241\243\015"
 1124      544D3332 
 1124      20483734 
 1124      3320BFAA 
 1124      B7A2B0E5 
 1125 0025 00       		.ascii	"\000"
 1126 0026 0000     		.space	2
 1127              	.LC15:
 1128 0028 0D0AD2B0 		.ascii	"\015\012\322\260\273\360STM32H750 LTDC\322\272\276\247"
ARM GAS  /tmp/ccyzRlcj.s 			page 86


 1128      BBF05354 
 1128      4D333248 
 1128      37353020 
 1128      4C544443 
 1129 0040 CFD4CABE 		.ascii	"\317\324\312\276\323\242\316\304\262\342\312\324\300"
 1129      D3A2CEC4 
 1129      B2E2CAD4 
 1129      C0
 1130 004d FDB3CC0D 		.ascii	"\375\263\314\015\000"
 1130      00
 1131              		.text
 1132              	.Letext0:
 1133              		.file 4 "/usr/include/newlib/machine/_default_types.h"
 1134              		.file 5 "/usr/include/newlib/sys/_stdint.h"
 1135              		.file 6 "Libraries/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 1136              		.file 7 "Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 1137              		.file 8 "/usr/include/newlib/sys/lock.h"
 1138              		.file 9 "/usr/include/newlib/sys/_types.h"
 1139              		.file 10 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 1140              		.file 11 "/usr/include/newlib/sys/reent.h"
 1141              		.file 12 "/usr/include/newlib/math.h"
 1142              		.file 13 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1143              		.file 14 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 1144              		.file 15 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 1145              		.file 16 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 1146              		.file 17 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 1147              		.file 18 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 1148              		.file 19 "User/./fonts/fonts.h"
 1149              		.file 20 "User/./usart/bsp_debug_usart.h"
 1150              		.file 21 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_pwr_ex.h"
 1151              		.file 22 "User/./lcd/bsp_lcd.h"
 1152              		.file 23 "/usr/include/newlib/stdio.h"
 1153              		.file 24 "User/./mpu/bsp_mpu.h"
 1154              		.file 25 "User/./led/bsp_led.h"
 1155              		.file 26 "<built-in>"
ARM GAS  /tmp/ccyzRlcj.s 			page 87


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccyzRlcj.s:17     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccyzRlcj.s:23     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccyzRlcj.s:158    .text.SystemClock_Config:00000000000000b8 $d
     /tmp/ccyzRlcj.s:164    .text.Delay:0000000000000000 $t
     /tmp/ccyzRlcj.s:171    .text.Delay:0000000000000000 Delay
     /tmp/ccyzRlcj.s:205    .text.LCD_Test:0000000000000000 $t
     /tmp/ccyzRlcj.s:212    .text.LCD_Test:0000000000000000 LCD_Test
     /tmp/ccyzRlcj.s:722    .text.LCD_Test:00000000000003a8 $d
     /tmp/ccyzRlcj.s:744    .text.main:0000000000000000 $t
     /tmp/ccyzRlcj.s:751    .text.main:0000000000000000 main
     /tmp/ccyzRlcj.s:1068   .text.main:000000000000015c $d
     /tmp/ccyzRlcj.s:1080   .bss.testCNT.12462:0000000000000000 testCNT.12462
     /tmp/ccyzRlcj.s:1081   .bss.testCNT.12462:0000000000000000 $d
     /tmp/ccyzRlcj.s:1083   .rodata.LCD_Test.str1.4:0000000000000000 $d
     /tmp/ccyzRlcj.s:1121   .rodata.main.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
memset
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
puts
LCD_SelectLayer
LCD_Clear
LCD_SetColors
LCD_SetFont
LCD_DisplayStringLine
sprintf
LCD_ClearLine
LCD_SetTextColor
LCD_DrawLine
LCD_FillRect
LCD_DrawRect
LCD_DrawCircle
LCD_FillCircle
LCD_SetTransparency
Font24
Board_MPU_Config
HAL_SYSCFG_AnalogSwitchConfig
LED_GPIO_Config
DEBUG_USART_Config
LCD_Init
LCD_LayerInit
LCD_GetXSize
LCD_GetYSize
LCD_DisplayOn
