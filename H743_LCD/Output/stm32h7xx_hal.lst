ARM GAS  /tmp/ccIHdivw.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_MspInit,"ax",%progbits
  17              		.align	1
  18              		.weak	HAL_MspInit
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	HAL_MspInit:
  25              	.LFB143:
  26              		.file 1 "Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c"
   1:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
   2:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   ******************************************************************************
   3:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @file    stm32h7xx_hal.c
   4:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @author  MCD Application Team
   5:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief   HAL module driver.
   6:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
   8:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   @verbatim
   9:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   ==============================================================================
  10:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****                      ##### How to use this driver #####
  11:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   ==============================================================================
  12:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     [..]
  13:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL.
  15:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     [..]
  16:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     The HAL contains two APIs' categories:
  17:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****          (+) Common HAL APIs
  18:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****          (+) Services HAL APIs
  19:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  20:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   @endverbatim
  21:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   ******************************************************************************
  22:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @attention
  23:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
  24:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  25:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * All rights reserved.</center></h2>
  26:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
  27:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  28:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * the "License"; You may not use this file except in compliance with the
  29:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * License. You may obtain a copy of the License at:
  30:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *                        opensource.org/licenses/BSD-3-Clause
  31:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
  32:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   ******************************************************************************
ARM GAS  /tmp/ccIHdivw.s 			page 2


  33:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  34:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  35:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #include "stm32h7xx_hal.h"
  37:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  38:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @addtogroup STM32H7xx_HAL_Driver
  39:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
  40:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  41:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  42:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @defgroup HAL  HAL
  43:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief HAL module driver.
  44:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
  45:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  46:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  47:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  48:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private define ------------------------------------------------------------*/
  49:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
  50:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  * @brief STM32H7xx HAL Driver version number V1.6.0
  51:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    */
  52:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define __STM32H7xx_HAL_VERSION_MAIN   (0x01UL) /*!< [31:24] main version */
  53:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define __STM32H7xx_HAL_VERSION_SUB1   (0x06UL) /*!< [23:16] sub1 version */
  54:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define __STM32H7xx_HAL_VERSION_SUB2   (0x00UL) /*!< [15:8]  sub2 version */
  55:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define __STM32H7xx_HAL_VERSION_RC     (0x00UL) /*!< [7:0]  release candidate */
  56:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define __STM32H7xx_HAL_VERSION         ((__STM32H7xx_HAL_VERSION_MAIN << 24)\
  57:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****                                         |(__STM32H7xx_HAL_VERSION_SUB1 << 16)\
  58:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****                                         |(__STM32H7xx_HAL_VERSION_SUB2 << 8 )\
  59:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****                                         |(__STM32H7xx_HAL_VERSION_RC))
  60:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  61:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define IDCODE_DEVID_MASK    ((uint32_t)0x00000FFF)
  62:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define VREFBUF_TIMEOUT_VALUE     (uint32_t)10   /* 10 ms  */
  63:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  64:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  65:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  66:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Exported variables --------------------------------------------------------*/
  67:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  68:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @defgroup HAL_Exported_Variables HAL Exported Variables
  69:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
  70:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  71:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __IO uint32_t uwTick;
  72:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  73:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  74:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
  75:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @}
  76:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  77:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  78:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  79:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private functions ---------------------------------------------------------*/
  80:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  81:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @defgroup HAL_Private_Functions  HAL Private Functions
  82:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
  83:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  84:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  85:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @defgroup HAL_Group1 Initialization and de-initialization Functions
  86:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  *  @brief    Initialization and de-initialization functions
  87:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  *
  88:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** @verbatim
  89:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  ===============================================================================
ARM GAS  /tmp/ccIHdivw.s 			page 3


  90:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****               ##### Initialization and de-initialization functions #####
  91:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  ===============================================================================
  92:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     [..]  This section provides functions allowing to:
  93:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Initializes the Flash interface the NVIC allocation and initial clock
  94:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****           configuration. It initializes the systick also when timeout is needed
  95:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****           and the backup domain when enabled.
  96:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) De-Initializes common part of the HAL.
  97:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated
  98:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****           Tick interrupt priority.
  99:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 100:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              can eventually implement his proper time base source (a general purpose
 101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              timer for example or other time source), keeping in mind that Time base
 102:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and
 103:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              handled in milliseconds basis.
 104:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically
 105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time
 106:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig().
 107:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular
 108:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a
 109:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority
 110:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller
 111:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             ISR process will be blocked.
 112:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak
 113:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 114:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** @endverbatim
 115:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
 116:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 117:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 118:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 119:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first
 120:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 121:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         HAL function), it performs the following:
 122:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
 123:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 124:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 125:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           Set NVIC Group Priority to 4.
 126:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file
 127:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           "stm32h7xx_hal_msp.c" to do the global low level hardware initialization
 128:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
 129:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 130:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 131:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         to have correct HAL operation.
 132:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval HAL status
 133:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 134:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 135:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 136:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 137:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 138:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    /* Configure Cortex-M4 Instruction cache through ART accelerator */
 139:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_RCC_ART_CLK_ENABLE();                   /* Enable the Cortex-M4 ART Clock */
 140:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the
 141:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
 142:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* DUAL_CORE &&  CORE_CM4 */
 143:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 144:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Set Interrupt Group Priority */
 145:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 146:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
ARM GAS  /tmp/ccIHdivw.s 			page 4


 147:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Update the SystemCoreClock global variable */
 148:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPR
 149:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 150:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Update the SystemD2Clock global variable */
 151:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SystemD2Clock = (SystemCoreClock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CF
 152:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 153:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 154:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 155:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 156:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     return HAL_ERROR;
 157:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 158:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 159:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Init the low level hardware */
 160:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_MspInit();
 161:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 162:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Return function status */
 163:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return HAL_OK;
 164:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 165:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 166:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 167:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  This function de-Initializes common part of the HAL and stops the systick.
 168:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         This function is optional.
 169:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval HAL status
 170:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 171:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 172:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 173:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Reset of all peripherals */
 174:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB3_FORCE_RESET();
 175:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
 176:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 177:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB1_FORCE_RESET();
 178:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
 179:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 180:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB2_FORCE_RESET();
 181:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
 182:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 183:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB4_FORCE_RESET();
 184:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  __HAL_RCC_AHB4_RELEASE_RESET();
 185:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 186:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB3_FORCE_RESET();
 187:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB3_RELEASE_RESET();
 188:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 189:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1L_FORCE_RESET();
 190:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1L_RELEASE_RESET();
 191:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 192:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1H_FORCE_RESET();
 193:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1H_RELEASE_RESET();
 194:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 195:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_RCC_APB2_FORCE_RESET();
 196:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_RCC_APB2_RELEASE_RESET();
 197:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 198:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB4_FORCE_RESET();
 199:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB4_RELEASE_RESET();
 200:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 201:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* De-Init the low level hardware */
 202:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_MspDeInit();
 203:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
ARM GAS  /tmp/ccIHdivw.s 			page 5


 204:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Return function status */
 205:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return HAL_OK;
 206:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 207:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 208:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 209:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Initializes the MSP.
 210:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 211:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 212:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_MspInit(void)
 213:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
  27              		.loc 1 213 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 7047     		bx	lr
  33              		.cfi_endproc
  34              	.LFE143:
  36              		.section	.text.HAL_MspDeInit,"ax",%progbits
  37              		.align	1
  38              		.weak	HAL_MspDeInit
  39              		.syntax unified
  40              		.thumb
  41              		.thumb_func
  42              		.fpu fpv5-d16
  44              	HAL_MspDeInit:
  45              	.LFB144:
 214:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 215:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 216:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    */
 217:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 218:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 219:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 220:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  DeInitializes the MSP.
 221:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 222:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 223:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_MspDeInit(void)
 224:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
  46              		.loc 1 224 0
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 0
  49              		@ frame_needed = 0, uses_anonymous_args = 0
  50              		@ link register save eliminated.
  51 0000 7047     		bx	lr
  52              		.cfi_endproc
  53              	.LFE144:
  55              		.section	.text.HAL_DeInit,"ax",%progbits
  56              		.align	1
  57              		.global	HAL_DeInit
  58              		.syntax unified
  59              		.thumb
  60              		.thumb_func
  61              		.fpu fpv5-d16
  63              	HAL_DeInit:
  64              	.LFB142:
 172:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Reset of all peripherals */
  65              		.loc 1 172 0
ARM GAS  /tmp/ccIHdivw.s 			page 6


  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
 172:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Reset of all peripherals */
  69              		.loc 1 172 0
  70 0000 10B5     		push	{r4, lr}
  71              	.LCFI0:
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 4, -8
  74              		.cfi_offset 14, -4
 174:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
  75              		.loc 1 174 0
  76 0002 154B     		ldr	r3, .L5
  77 0004 4FF0FF32 		mov	r2, #-1
  78 0008 DA67     		str	r2, [r3, #124]
 175:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  79              		.loc 1 175 0
  80 000a 0024     		movs	r4, #0
  81 000c DC67     		str	r4, [r3, #124]
 177:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
  82              		.loc 1 177 0
  83 000e C3F88020 		str	r2, [r3, #128]
 178:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  84              		.loc 1 178 0
  85 0012 C3F88040 		str	r4, [r3, #128]
 180:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
  86              		.loc 1 180 0
  87 0016 C3F88420 		str	r2, [r3, #132]
 181:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  88              		.loc 1 181 0
  89 001a C3F88440 		str	r4, [r3, #132]
 183:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  __HAL_RCC_AHB4_RELEASE_RESET();
  90              		.loc 1 183 0
  91 001e C3F88820 		str	r2, [r3, #136]
 184:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  92              		.loc 1 184 0
  93 0022 C3F88840 		str	r4, [r3, #136]
 186:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB3_RELEASE_RESET();
  94              		.loc 1 186 0
  95 0026 C3F88C20 		str	r2, [r3, #140]
 187:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  96              		.loc 1 187 0
  97 002a C3F88C40 		str	r4, [r3, #140]
 189:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1L_RELEASE_RESET();
  98              		.loc 1 189 0
  99 002e C3F89020 		str	r2, [r3, #144]
 190:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 100              		.loc 1 190 0
 101 0032 C3F89040 		str	r4, [r3, #144]
 192:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1H_RELEASE_RESET();
 102              		.loc 1 192 0
 103 0036 C3F89420 		str	r2, [r3, #148]
 193:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 104              		.loc 1 193 0
 105 003a C3F89440 		str	r4, [r3, #148]
 195:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_RCC_APB2_RELEASE_RESET();
 106              		.loc 1 195 0
ARM GAS  /tmp/ccIHdivw.s 			page 7


 107 003e C3F89820 		str	r2, [r3, #152]
 196:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 108              		.loc 1 196 0
 109 0042 C3F89840 		str	r4, [r3, #152]
 198:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB4_RELEASE_RESET();
 110              		.loc 1 198 0
 111 0046 C3F89C20 		str	r2, [r3, #156]
 199:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 112              		.loc 1 199 0
 113 004a C3F89C40 		str	r4, [r3, #156]
 202:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 114              		.loc 1 202 0
 115 004e FFF7FEFF 		bl	HAL_MspDeInit
 116              	.LVL0:
 206:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 117              		.loc 1 206 0
 118 0052 2046     		mov	r0, r4
 119 0054 10BD     		pop	{r4, pc}
 120              	.L6:
 121 0056 00BF     		.align	2
 122              	.L5:
 123 0058 00440258 		.word	1476543488
 124              		.cfi_endproc
 125              	.LFE142:
 127              		.section	.text.HAL_InitTick,"ax",%progbits
 128              		.align	1
 129              		.weak	HAL_InitTick
 130              		.syntax unified
 131              		.thumb
 132              		.thumb_func
 133              		.fpu fpv5-d16
 135              	HAL_InitTick:
 136              	.LFB145:
 225:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 226:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 227:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    */
 228:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 229:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 230:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 231:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief This function configures the source of the time base.
 232:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated
 233:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *        Tick interrupt priority.
 234:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 235:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 236:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base.
 237:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals.
 238:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process,
 239:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       The the SysTick interrupt must have higher priority (numerically lower)
 240:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 241:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 242:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       implementation  in user file.
 243:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param TickPriority: Tick interrupt priority.
 244:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval HAL status
 245:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 246:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 247:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 137              		.loc 1 247 0
ARM GAS  /tmp/ccIHdivw.s 			page 8


 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141              	.LVL1:
 248:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value 
 249:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if((uint32_t)uwTickFreq == 0UL)
 142              		.loc 1 249 0
 143 0000 104B     		ldr	r3, .L18
 144 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 145 0004 0BB9     		cbnz	r3, .L16
 250:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 251:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     return HAL_ERROR;
 146              		.loc 1 251 0
 147 0006 0120     		movs	r0, #1
 148              	.LVL2:
 149 0008 7047     		bx	lr
 150              	.LVL3:
 151              	.L16:
 247:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value 
 152              		.loc 1 247 0
 153 000a 10B5     		push	{r4, lr}
 154              	.LCFI1:
 155              		.cfi_def_cfa_offset 8
 156              		.cfi_offset 4, -8
 157              		.cfi_offset 14, -4
 158 000c 0446     		mov	r4, r0
 252:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 253:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 254:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
 255:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if (HAL_GetCurrentCPUID() == CM7_CPUID)
 256:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 257:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Cortex-M7 detected */
 258:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Configure the SysTick to have interrupt in 1ms time basis*/
 259:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if (HAL_SYSTICK_Config(SystemCoreClock / (1000UL / (uint32_t)uwTickFreq)) > 0U)
 260:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
 261:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       return HAL_ERROR;
 262:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 263:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 264:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   else
 265:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 266:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Cortex-M4 detected */
 267:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Configure the SysTick to have interrupt in 1ms time basis*/
 268:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if (HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq() / (1000UL / (uint32_t)uwTickFreq)) > 0U)
 269:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
 270:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       return HAL_ERROR;
 271:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 272:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 273:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 274:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 275:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000UL / (uint32_t)uwTickFreq)) > 0U)
 159              		.loc 1 275 0
 160 000e 4FF47A70 		mov	r0, #1000
 161              	.LVL4:
 162 0012 B0FBF3F3 		udiv	r3, r0, r3
 163 0016 0C4A     		ldr	r2, .L18+4
 164 0018 1068     		ldr	r0, [r2]
 165 001a B0FBF3F0 		udiv	r0, r0, r3
ARM GAS  /tmp/ccIHdivw.s 			page 9


 166 001e FFF7FEFF 		bl	HAL_SYSTICK_Config
 167              	.LVL5:
 168 0022 68B9     		cbnz	r0, .L10
 276:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 277:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     return HAL_ERROR;
 278:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 279:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif
 280:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 281:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Configure the SysTick IRQ priority */
 282:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 169              		.loc 1 282 0
 170 0024 0F2C     		cmp	r4, #15
 171 0026 01D9     		bls	.L17
 283:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 284:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 285:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     uwTickPrio = TickPriority;
 286:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 287:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   else
 288:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 289:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     return HAL_ERROR;
 172              		.loc 1 289 0
 173 0028 0120     		movs	r0, #1
 290:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 291:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 292:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Return function status */
 293:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return HAL_OK;
 294:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 174              		.loc 1 294 0
 175 002a 10BD     		pop	{r4, pc}
 176              	.LVL6:
 177              	.L17:
 284:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     uwTickPrio = TickPriority;
 178              		.loc 1 284 0
 179 002c 0022     		movs	r2, #0
 180 002e 2146     		mov	r1, r4
 181 0030 4FF0FF30 		mov	r0, #-1
 182 0034 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 183              	.LVL7:
 285:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 184              		.loc 1 285 0
 185 0038 044B     		ldr	r3, .L18+8
 186 003a 1C60     		str	r4, [r3]
 293:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 187              		.loc 1 293 0
 188 003c 0020     		movs	r0, #0
 189 003e 10BD     		pop	{r4, pc}
 190              	.LVL8:
 191              	.L10:
 277:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 192              		.loc 1 277 0
 193 0040 0120     		movs	r0, #1
 194 0042 10BD     		pop	{r4, pc}
 195              	.LVL9:
 196              	.L19:
 197              		.align	2
 198              	.L18:
 199 0044 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccIHdivw.s 			page 10


 200 0048 00000000 		.word	SystemCoreClock
 201 004c 00000000 		.word	.LANCHOR1
 202              		.cfi_endproc
 203              	.LFE145:
 205              		.section	.text.HAL_Init,"ax",%progbits
 206              		.align	1
 207              		.global	HAL_Init
 208              		.syntax unified
 209              		.thumb
 210              		.thumb_func
 211              		.fpu fpv5-d16
 213              	HAL_Init:
 214              	.LFB141:
 135:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 215              		.loc 1 135 0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219 0000 10B5     		push	{r4, lr}
 220              	.LCFI2:
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 4, -8
 223              		.cfi_offset 14, -4
 145:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 224              		.loc 1 145 0
 225 0002 0320     		movs	r0, #3
 226 0004 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 227              	.LVL10:
 148:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 228              		.loc 1 148 0
 229 0008 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 230              	.LVL11:
 231 000c 0F49     		ldr	r1, .L25
 232 000e 8B69     		ldr	r3, [r1, #24]
 233 0010 C3F30323 		ubfx	r3, r3, #8, #4
 234 0014 0E4A     		ldr	r2, .L25+4
 235 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 236 0018 03F01F03 		and	r3, r3, #31
 237 001c D840     		lsrs	r0, r0, r3
 238 001e 0D4B     		ldr	r3, .L25+8
 239 0020 1860     		str	r0, [r3]
 151:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 240              		.loc 1 151 0
 241 0022 8B69     		ldr	r3, [r1, #24]
 242 0024 03F00F03 		and	r3, r3, #15
 243 0028 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 244 002a 03F01F03 		and	r3, r3, #31
 245 002e D840     		lsrs	r0, r0, r3
 246 0030 094B     		ldr	r3, .L25+12
 247 0032 1860     		str	r0, [r3]
 154:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 248              		.loc 1 154 0
 249 0034 0020     		movs	r0, #0
 250 0036 FFF7FEFF 		bl	HAL_InitTick
 251              	.LVL12:
 252 003a 10B1     		cbz	r0, .L24
 156:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
ARM GAS  /tmp/ccIHdivw.s 			page 11


 253              		.loc 1 156 0
 254 003c 0124     		movs	r4, #1
 255              	.L21:
 164:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 256              		.loc 1 164 0
 257 003e 2046     		mov	r0, r4
 258 0040 10BD     		pop	{r4, pc}
 259              	.L24:
 260 0042 0446     		mov	r4, r0
 160:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 261              		.loc 1 160 0
 262 0044 FFF7FEFF 		bl	HAL_MspInit
 263              	.LVL13:
 163:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 264              		.loc 1 163 0
 265 0048 F9E7     		b	.L21
 266              	.L26:
 267 004a 00BF     		.align	2
 268              	.L25:
 269 004c 00440258 		.word	1476543488
 270 0050 00000000 		.word	D1CorePrescTable
 271 0054 00000000 		.word	SystemCoreClock
 272 0058 00000000 		.word	SystemD2Clock
 273              		.cfi_endproc
 274              	.LFE141:
 276              		.section	.text.HAL_IncTick,"ax",%progbits
 277              		.align	1
 278              		.weak	HAL_IncTick
 279              		.syntax unified
 280              		.thumb
 281              		.thumb_func
 282              		.fpu fpv5-d16
 284              	HAL_IncTick:
 285              	.LFB146:
 295:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 296:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 297:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @}
 298:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 299:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 300:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @defgroup HAL_Group2 HAL Control functions
 301:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  *  @brief    HAL Control functions
 302:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  *
 303:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** @verbatim
 304:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  ===============================================================================
 305:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****                       ##### HAL Control functions #####
 306:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  ===============================================================================
 307:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     [..]  This section provides functions allowing to:
 308:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Provide a tick value in millisecond
 309:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Provide a blocking delay in millisecond
 310:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Suspend the time base source interrupt
 311:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Resume the time base source interrupt
 312:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Get the HAL API driver version
 313:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Get the device identifier
 314:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Get the device revision identifier
 315:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 316:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 317:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
ARM GAS  /tmp/ccIHdivw.s 			page 12


 318:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 319:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** @endverbatim
 320:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
 321:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 322:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 323:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 324:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 325:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *        used as application time base.
 326:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 327:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       in Systick ISR.
 328:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  * @note This function is declared as __weak to be overwritten in case of other
 329:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *      implementations in user file.
 330:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 331:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 332:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_IncTick(void)
 333:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 286              		.loc 1 333 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290              		@ link register save eliminated.
 334:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   uwTick += (uint32_t)uwTickFreq;
 291              		.loc 1 334 0
 292 0000 034B     		ldr	r3, .L28
 293 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 294 0004 034A     		ldr	r2, .L28+4
 295 0006 1168     		ldr	r1, [r2]
 296 0008 0B44     		add	r3, r3, r1
 297 000a 1360     		str	r3, [r2]
 298 000c 7047     		bx	lr
 299              	.L29:
 300 000e 00BF     		.align	2
 301              	.L28:
 302 0010 00000000 		.word	.LANCHOR0
 303 0014 00000000 		.word	uwTick
 304              		.cfi_endproc
 305              	.LFE146:
 307              		.section	.text.HAL_GetTick,"ax",%progbits
 308              		.align	1
 309              		.weak	HAL_GetTick
 310              		.syntax unified
 311              		.thumb
 312              		.thumb_func
 313              		.fpu fpv5-d16
 315              	HAL_GetTick:
 316              	.LFB147:
 335:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 336:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 337:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 338:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Provides a tick value in millisecond.
 339:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 340:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       implementations in user file.
 341:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval tick value
 342:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 343:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 344:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 317              		.loc 1 344 0
ARM GAS  /tmp/ccIHdivw.s 			page 13


 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321              		@ link register save eliminated.
 345:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return uwTick;
 322              		.loc 1 345 0
 323 0000 014B     		ldr	r3, .L31
 324 0002 1868     		ldr	r0, [r3]
 346:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 325              		.loc 1 346 0
 326 0004 7047     		bx	lr
 327              	.L32:
 328 0006 00BF     		.align	2
 329              	.L31:
 330 0008 00000000 		.word	uwTick
 331              		.cfi_endproc
 332              	.LFE147:
 334              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 335              		.align	1
 336              		.global	HAL_GetTickPrio
 337              		.syntax unified
 338              		.thumb
 339              		.thumb_func
 340              		.fpu fpv5-d16
 342              	HAL_GetTickPrio:
 343              	.LFB148:
 347:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 348:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 349:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief This function returns a tick priority.
 350:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval tick priority
 351:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 352:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 353:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 344              		.loc 1 353 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              		@ link register save eliminated.
 354:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return uwTickPrio;
 355:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 349              		.loc 1 355 0
 350 0000 014B     		ldr	r3, .L34
 351 0002 1868     		ldr	r0, [r3]
 352 0004 7047     		bx	lr
 353              	.L35:
 354 0006 00BF     		.align	2
 355              	.L34:
 356 0008 00000000 		.word	.LANCHOR1
 357              		.cfi_endproc
 358              	.LFE148:
 360              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 361              		.align	1
 362              		.global	HAL_SetTickFreq
 363              		.syntax unified
 364              		.thumb
 365              		.thumb_func
 366              		.fpu fpv5-d16
ARM GAS  /tmp/ccIHdivw.s 			page 14


 368              	HAL_SetTickFreq:
 369              	.LFB149:
 356:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 357:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 358:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Set new tick Freq.
 359:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Status
 360:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 361:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 362:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 370              		.loc 1 362 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374              	.LVL14:
 375 0000 08B5     		push	{r3, lr}
 376              	.LCFI3:
 377              		.cfi_def_cfa_offset 8
 378              		.cfi_offset 3, -8
 379              		.cfi_offset 14, -4
 380              	.LVL15:
 363:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 364:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 365:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 366:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if (uwTickFreq != Freq)
 381              		.loc 1 366 0
 382 0002 064B     		ldr	r3, .L40
 383 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 384 0006 8342     		cmp	r3, r0
 385 0008 06D0     		beq	.L38
 367:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 368:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     uwTickFreq = Freq;
 386              		.loc 1 368 0
 387 000a 044B     		ldr	r3, .L40
 388 000c 1870     		strb	r0, [r3]
 369:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 370:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Apply the new tick Freq  */
 371:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 389              		.loc 1 371 0
 390 000e 044B     		ldr	r3, .L40+4
 391 0010 1868     		ldr	r0, [r3]
 392              	.LVL16:
 393 0012 FFF7FEFF 		bl	HAL_InitTick
 394              	.LVL17:
 395 0016 08BD     		pop	{r3, pc}
 396              	.LVL18:
 397              	.L38:
 363:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 398              		.loc 1 363 0
 399 0018 0020     		movs	r0, #0
 400              	.LVL19:
 372:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 373:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 374:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return status;
 375:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 401              		.loc 1 375 0
 402 001a 08BD     		pop	{r3, pc}
 403              	.L41:
ARM GAS  /tmp/ccIHdivw.s 			page 15


 404              		.align	2
 405              	.L40:
 406 001c 00000000 		.word	.LANCHOR0
 407 0020 00000000 		.word	.LANCHOR1
 408              		.cfi_endproc
 409              	.LFE149:
 411              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 412              		.align	1
 413              		.global	HAL_GetTickFreq
 414              		.syntax unified
 415              		.thumb
 416              		.thumb_func
 417              		.fpu fpv5-d16
 419              	HAL_GetTickFreq:
 420              	.LFB150:
 376:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 377:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 378:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Return tick frequency.
 379:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval tick period in Hz
 380:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 381:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 382:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 421              		.loc 1 382 0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425              		@ link register save eliminated.
 383:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return uwTickFreq;
 384:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 426              		.loc 1 384 0
 427 0000 014B     		ldr	r3, .L43
 428 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 429 0004 7047     		bx	lr
 430              	.L44:
 431 0006 00BF     		.align	2
 432              	.L43:
 433 0008 00000000 		.word	.LANCHOR0
 434              		.cfi_endproc
 435              	.LFE150:
 437              		.section	.text.HAL_Delay,"ax",%progbits
 438              		.align	1
 439              		.weak	HAL_Delay
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 443              		.fpu fpv5-d16
 445              	HAL_Delay:
 446              	.LFB151:
 385:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 386:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 387:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 388:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *        on variable incremented.
 389:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 390:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 391:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       is incremented.
 392:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 393:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       implementations in user file.
ARM GAS  /tmp/ccIHdivw.s 			page 16


 394:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param Delay  specifies the delay time length, in milliseconds.
 395:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 396:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 397:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 398:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 447              		.loc 1 398 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451              	.LVL20:
 452 0000 38B5     		push	{r3, r4, r5, lr}
 453              	.LCFI4:
 454              		.cfi_def_cfa_offset 16
 455              		.cfi_offset 3, -16
 456              		.cfi_offset 4, -12
 457              		.cfi_offset 5, -8
 458              		.cfi_offset 14, -4
 459 0002 0446     		mov	r4, r0
 399:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 460              		.loc 1 399 0
 461 0004 FFF7FEFF 		bl	HAL_GetTick
 462              	.LVL21:
 463 0008 0546     		mov	r5, r0
 464              	.LVL22:
 400:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   uint32_t wait = Delay;
 401:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 402:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 403:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 465              		.loc 1 403 0
 466 000a B4F1FF3F 		cmp	r4, #-1
 467 000e 02D0     		beq	.L47
 404:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 405:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 468              		.loc 1 405 0
 469 0010 044B     		ldr	r3, .L49
 470 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 471 0014 1C44     		add	r4, r4, r3
 472              	.LVL23:
 473              	.L47:
 406:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 407:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 408:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   while ((HAL_GetTick() - tickstart) < wait)
 474              		.loc 1 408 0 discriminator 1
 475 0016 FFF7FEFF 		bl	HAL_GetTick
 476              	.LVL24:
 477 001a 401B     		subs	r0, r0, r5
 478 001c 8442     		cmp	r4, r0
 479 001e FAD8     		bhi	.L47
 409:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 410:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 411:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 480              		.loc 1 411 0
 481 0020 38BD     		pop	{r3, r4, r5, pc}
 482              	.LVL25:
 483              	.L50:
 484 0022 00BF     		.align	2
 485              	.L49:
ARM GAS  /tmp/ccIHdivw.s 			page 17


 486 0024 00000000 		.word	.LANCHOR0
 487              		.cfi_endproc
 488              	.LFE151:
 490              		.section	.text.HAL_SuspendTick,"ax",%progbits
 491              		.align	1
 492              		.weak	HAL_SuspendTick
 493              		.syntax unified
 494              		.thumb
 495              		.thumb_func
 496              		.fpu fpv5-d16
 498              	HAL_SuspendTick:
 499              	.LFB152:
 412:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 413:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 414:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Suspend Tick increment.
 415:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 416:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 417:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       is called, the the SysTick interrupt will be disabled and so Tick increment
 418:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       is suspended.
 419:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 420:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       implementations in user file.
 421:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 422:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 423:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_SuspendTick(void)
 424:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 500              		.loc 1 424 0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 0, uses_anonymous_args = 0
 504              		@ link register save eliminated.
 425:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Disable SysTick Interrupt */
 426:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 505              		.loc 1 426 0
 506 0000 024A     		ldr	r2, .L52
 507 0002 1368     		ldr	r3, [r2]
 508 0004 23F00203 		bic	r3, r3, #2
 509 0008 1360     		str	r3, [r2]
 510 000a 7047     		bx	lr
 511              	.L53:
 512              		.align	2
 513              	.L52:
 514 000c 10E000E0 		.word	-536813552
 515              		.cfi_endproc
 516              	.LFE152:
 518              		.section	.text.HAL_ResumeTick,"ax",%progbits
 519              		.align	1
 520              		.weak	HAL_ResumeTick
 521              		.syntax unified
 522              		.thumb
 523              		.thumb_func
 524              		.fpu fpv5-d16
 526              	HAL_ResumeTick:
 527              	.LFB153:
 427:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 428:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 429:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 430:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Resume Tick increment.
ARM GAS  /tmp/ccIHdivw.s 			page 18


 431:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 432:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 433:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       is called, the the SysTick interrupt will be enabled and so Tick increment
 434:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       is resumed.
 435:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 436:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       implementations in user file.
 437:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 438:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 439:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_ResumeTick(void)
 440:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 528              		.loc 1 440 0
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 0
 531              		@ frame_needed = 0, uses_anonymous_args = 0
 532              		@ link register save eliminated.
 441:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Enable SysTick Interrupt */
 442:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 533              		.loc 1 442 0
 534 0000 024A     		ldr	r2, .L55
 535 0002 1368     		ldr	r3, [r2]
 536 0004 43F00203 		orr	r3, r3, #2
 537 0008 1360     		str	r3, [r2]
 538 000a 7047     		bx	lr
 539              	.L56:
 540              		.align	2
 541              	.L55:
 542 000c 10E000E0 		.word	-536813552
 543              		.cfi_endproc
 544              	.LFE153:
 546              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 547              		.align	1
 548              		.global	HAL_GetHalVersion
 549              		.syntax unified
 550              		.thumb
 551              		.thumb_func
 552              		.fpu fpv5-d16
 554              	HAL_GetHalVersion:
 555              	.LFB154:
 443:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 444:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 445:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 446:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Returns the HAL revision
 447:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 448:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 449:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 450:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 556              		.loc 1 450 0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 0, uses_anonymous_args = 0
 560              		@ link register save eliminated.
 451:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  return __STM32H7xx_HAL_VERSION;
 452:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 561              		.loc 1 452 0
 562 0000 4FF08370 		mov	r0, #17170432
 563 0004 7047     		bx	lr
 564              		.cfi_endproc
ARM GAS  /tmp/ccIHdivw.s 			page 19


 565              	.LFE154:
 567              		.section	.text.HAL_GetREVID,"ax",%progbits
 568              		.align	1
 569              		.global	HAL_GetREVID
 570              		.syntax unified
 571              		.thumb
 572              		.thumb_func
 573              		.fpu fpv5-d16
 575              	HAL_GetREVID:
 576              	.LFB155:
 453:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 454:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 455:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Returns the device revision identifier.
 456:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Device revision identifier
 457:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 458:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetREVID(void)
 459:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 577              		.loc 1 459 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 581              		@ link register save eliminated.
 460:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    return((DBGMCU->IDCODE) >> 16);
 582              		.loc 1 460 0
 583 0000 014B     		ldr	r3, .L59
 584 0002 1868     		ldr	r0, [r3]
 461:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 585              		.loc 1 461 0
 586 0004 000C     		lsrs	r0, r0, #16
 587 0006 7047     		bx	lr
 588              	.L60:
 589              		.align	2
 590              	.L59:
 591 0008 0010005C 		.word	1543507968
 592              		.cfi_endproc
 593              	.LFE155:
 595              		.section	.text.HAL_GetDEVID,"ax",%progbits
 596              		.align	1
 597              		.global	HAL_GetDEVID
 598              		.syntax unified
 599              		.thumb
 600              		.thumb_func
 601              		.fpu fpv5-d16
 603              	HAL_GetDEVID:
 604              	.LFB156:
 462:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 463:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 464:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Returns the device identifier.
 465:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Device identifier
 466:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 467:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetDEVID(void)
 468:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 605              		.loc 1 468 0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 0, uses_anonymous_args = 0
 609              		@ link register save eliminated.
ARM GAS  /tmp/ccIHdivw.s 			page 20


 469:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 610              		.loc 1 469 0
 611 0000 024B     		ldr	r3, .L62
 612 0002 1868     		ldr	r0, [r3]
 470:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 613              		.loc 1 470 0
 614 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 615 0008 7047     		bx	lr
 616              	.L63:
 617 000a 00BF     		.align	2
 618              	.L62:
 619 000c 0010005C 		.word	1543507968
 620              		.cfi_endproc
 621              	.LFE156:
 623              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 624              		.align	1
 625              		.global	HAL_GetUIDw0
 626              		.syntax unified
 627              		.thumb
 628              		.thumb_func
 629              		.fpu fpv5-d16
 631              	HAL_GetUIDw0:
 632              	.LFB157:
 471:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 472:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 473:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Return the first word of the unique device identifier (UID based on 96 bits)
 474:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Device identifier
 475:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 476:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 477:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 633              		.loc 1 477 0
 634              		.cfi_startproc
 635              		@ args = 0, pretend = 0, frame = 0
 636              		@ frame_needed = 0, uses_anonymous_args = 0
 637              		@ link register save eliminated.
 478:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return(READ_REG(*((uint32_t *)UID_BASE)));
 479:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 638              		.loc 1 479 0
 639 0000 014B     		ldr	r3, .L65
 640 0002 1868     		ldr	r0, [r3]
 641 0004 7047     		bx	lr
 642              	.L66:
 643 0006 00BF     		.align	2
 644              	.L65:
 645 0008 00E8F11F 		.word	535947264
 646              		.cfi_endproc
 647              	.LFE157:
 649              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 650              		.align	1
 651              		.global	HAL_GetUIDw1
 652              		.syntax unified
 653              		.thumb
 654              		.thumb_func
 655              		.fpu fpv5-d16
 657              	HAL_GetUIDw1:
 658              	.LFB158:
 480:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
ARM GAS  /tmp/ccIHdivw.s 			page 21


 481:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 482:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Return the second word of the unique device identifier (UID based on 96 bits)
 483:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Device identifier
 484:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 485:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 486:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 659              		.loc 1 486 0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 0
 662              		@ frame_needed = 0, uses_anonymous_args = 0
 663              		@ link register save eliminated.
 487:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 488:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 664              		.loc 1 488 0
 665 0000 014B     		ldr	r3, .L68
 666 0002 1868     		ldr	r0, [r3]
 667 0004 7047     		bx	lr
 668              	.L69:
 669 0006 00BF     		.align	2
 670              	.L68:
 671 0008 04E8F11F 		.word	535947268
 672              		.cfi_endproc
 673              	.LFE158:
 675              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 676              		.align	1
 677              		.global	HAL_GetUIDw2
 678              		.syntax unified
 679              		.thumb
 680              		.thumb_func
 681              		.fpu fpv5-d16
 683              	HAL_GetUIDw2:
 684              	.LFB159:
 489:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 490:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 491:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Return the third word of the unique device identifier (UID based on 96 bits)
 492:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Device identifier
 493:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 494:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 495:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 685              		.loc 1 495 0
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 0
 688              		@ frame_needed = 0, uses_anonymous_args = 0
 689              		@ link register save eliminated.
 496:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 497:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 690              		.loc 1 497 0
 691 0000 014B     		ldr	r3, .L71
 692 0002 1868     		ldr	r0, [r3]
 693 0004 7047     		bx	lr
 694              	.L72:
 695 0006 00BF     		.align	2
 696              	.L71:
 697 0008 08E8F11F 		.word	535947272
 698              		.cfi_endproc
 699              	.LFE159:
 701              		.section	.text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig,"ax",%progbits
ARM GAS  /tmp/ccIHdivw.s 			page 22


 702              		.align	1
 703              		.global	HAL_SYSCFG_VREFBUF_VoltageScalingConfig
 704              		.syntax unified
 705              		.thumb
 706              		.thumb_func
 707              		.fpu fpv5-d16
 709              	HAL_SYSCFG_VREFBUF_VoltageScalingConfig:
 710              	.LFB160:
 498:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 499:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 500:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Configure the internal voltage reference buffer voltage scale.
 501:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param VoltageScaling  specifies the output voltage to achieve
 502:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one of the following values:
 503:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_VOLTAGE_SCALE0: VREF_OUT1 around 2.048 V.
 504:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *                                                This requires VDDA equal to or higher than 2.4 V
 505:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_VOLTAGE_SCALE1: VREF_OUT2 around 2.5 V.
 506:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *                                                This requires VDDA equal to or higher than 2.8 V
 507:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_VOLTAGE_SCALE2: VREF_OUT3 around 1.5 V.
 508:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *                                                This requires VDDA equal to or higher than 1.8 V
 509:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_VOLTAGE_SCALE3: VREF_OUT4 around 1.8 V.
 510:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *                                                This requires VDDA equal to or higher than 2.1 V
 511:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 512:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 513:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_VREFBUF_VoltageScalingConfig(uint32_t VoltageScaling)
 514:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 711              		.loc 1 514 0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 0, uses_anonymous_args = 0
 715              		@ link register save eliminated.
 716              	.LVL26:
 515:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 516:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_VREFBUF_VOLTAGE_SCALE(VoltageScaling));
 517:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 518:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(VREFBUF->CSR, VREFBUF_CSR_VRS, VoltageScaling);
 717              		.loc 1 518 0
 718 0000 034A     		ldr	r2, .L74
 719 0002 1368     		ldr	r3, [r2]
 720 0004 23F07003 		bic	r3, r3, #112
 721 0008 1843     		orrs	r0, r0, r3
 722              	.LVL27:
 723 000a 1060     		str	r0, [r2]
 724 000c 7047     		bx	lr
 725              	.L75:
 726 000e 00BF     		.align	2
 727              	.L74:
 728 0010 003C0058 		.word	1476410368
 729              		.cfi_endproc
 730              	.LFE160:
 732              		.section	.text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig,"ax",%progbits
 733              		.align	1
 734              		.global	HAL_SYSCFG_VREFBUF_HighImpedanceConfig
 735              		.syntax unified
 736              		.thumb
 737              		.thumb_func
 738              		.fpu fpv5-d16
 740              	HAL_SYSCFG_VREFBUF_HighImpedanceConfig:
ARM GAS  /tmp/ccIHdivw.s 			page 23


 741              	.LFB161:
 519:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 520:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 521:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 522:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Configure the internal voltage reference buffer high impedance mode.
 523:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param Mode  specifies the high impedance mode
 524:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one of the following values:
 525:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_HIGH_IMPEDANCE_DISABLE: VREF+ pin is internally connect to VREFI
 526:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_HIGH_IMPEDANCE_ENABLE: VREF+ pin is high impedance.
 527:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 528:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 529:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_VREFBUF_HighImpedanceConfig(uint32_t Mode)
 530:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 742              		.loc 1 530 0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              		@ link register save eliminated.
 747              	.LVL28:
 531:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 532:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_VREFBUF_HIGH_IMPEDANCE(Mode));
 533:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 534:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(VREFBUF->CSR, VREFBUF_CSR_HIZ, Mode);
 748              		.loc 1 534 0
 749 0000 034A     		ldr	r2, .L77
 750 0002 1368     		ldr	r3, [r2]
 751 0004 23F00203 		bic	r3, r3, #2
 752 0008 1843     		orrs	r0, r0, r3
 753              	.LVL29:
 754 000a 1060     		str	r0, [r2]
 755 000c 7047     		bx	lr
 756              	.L78:
 757 000e 00BF     		.align	2
 758              	.L77:
 759 0010 003C0058 		.word	1476410368
 760              		.cfi_endproc
 761              	.LFE161:
 763              		.section	.text.HAL_SYSCFG_VREFBUF_TrimmingConfig,"ax",%progbits
 764              		.align	1
 765              		.global	HAL_SYSCFG_VREFBUF_TrimmingConfig
 766              		.syntax unified
 767              		.thumb
 768              		.thumb_func
 769              		.fpu fpv5-d16
 771              	HAL_SYSCFG_VREFBUF_TrimmingConfig:
 772              	.LFB162:
 535:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 536:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 537:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 538:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Tune the Internal Voltage Reference buffer (VREFBUF).
 539:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 540:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 541:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_VREFBUF_TrimmingConfig(uint32_t TrimmingValue)
 542:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 773              		.loc 1 542 0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccIHdivw.s 			page 24


 776              		@ frame_needed = 0, uses_anonymous_args = 0
 777              		@ link register save eliminated.
 778              	.LVL30:
 543:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 544:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_VREFBUF_TRIMMING(TrimmingValue));
 545:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 546:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(VREFBUF->CCR, VREFBUF_CCR_TRIM, TrimmingValue);
 779              		.loc 1 546 0
 780 0000 034A     		ldr	r2, .L80
 781 0002 5368     		ldr	r3, [r2, #4]
 782 0004 23F03F03 		bic	r3, r3, #63
 783 0008 1843     		orrs	r0, r0, r3
 784              	.LVL31:
 785 000a 5060     		str	r0, [r2, #4]
 786 000c 7047     		bx	lr
 787              	.L81:
 788 000e 00BF     		.align	2
 789              	.L80:
 790 0010 003C0058 		.word	1476410368
 791              		.cfi_endproc
 792              	.LFE162:
 794              		.section	.text.HAL_SYSCFG_EnableVREFBUF,"ax",%progbits
 795              		.align	1
 796              		.global	HAL_SYSCFG_EnableVREFBUF
 797              		.syntax unified
 798              		.thumb
 799              		.thumb_func
 800              		.fpu fpv5-d16
 802              	HAL_SYSCFG_EnableVREFBUF:
 803              	.LFB163:
 547:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 548:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 549:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 550:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Internal Voltage Reference buffer (VREFBUF).
 551:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval HAL_OK/HAL_TIMEOUT
 552:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 553:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_StatusTypeDef HAL_SYSCFG_EnableVREFBUF(void)
 554:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 804              		.loc 1 554 0
 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 0
 807              		@ frame_needed = 0, uses_anonymous_args = 0
 808 0000 10B5     		push	{r4, lr}
 809              	.LCFI5:
 810              		.cfi_def_cfa_offset 8
 811              		.cfi_offset 4, -8
 812              		.cfi_offset 14, -4
 555:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   uint32_t  tickstart;
 556:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 557:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(VREFBUF->CSR, VREFBUF_CSR_ENVR);
 813              		.loc 1 557 0
 814 0002 0B4A     		ldr	r2, .L89
 815 0004 1368     		ldr	r3, [r2]
 816 0006 43F00103 		orr	r3, r3, #1
 817 000a 1360     		str	r3, [r2]
 558:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 559:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Get Start Tick*/
ARM GAS  /tmp/ccIHdivw.s 			page 25


 560:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   tickstart = HAL_GetTick();
 818              		.loc 1 560 0
 819 000c FFF7FEFF 		bl	HAL_GetTick
 820              	.LVL32:
 821 0010 0446     		mov	r4, r0
 822              	.LVL33:
 823              	.L83:
 561:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 562:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Wait for VRR bit  */
 563:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   while(READ_BIT(VREFBUF->CSR, VREFBUF_CSR_VRR) == 0UL)
 824              		.loc 1 563 0
 825 0012 074B     		ldr	r3, .L89
 826 0014 1B68     		ldr	r3, [r3]
 827 0016 13F0080F 		tst	r3, #8
 828 001a 06D1     		bne	.L88
 564:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 565:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if((HAL_GetTick() - tickstart) > VREFBUF_TIMEOUT_VALUE)
 829              		.loc 1 565 0
 830 001c FFF7FEFF 		bl	HAL_GetTick
 831              	.LVL34:
 832 0020 001B     		subs	r0, r0, r4
 833 0022 0A28     		cmp	r0, #10
 834 0024 F5D9     		bls	.L83
 566:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
 567:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       return HAL_TIMEOUT;
 835              		.loc 1 567 0
 836 0026 0320     		movs	r0, #3
 568:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 569:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 570:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 571:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return HAL_OK;
 572:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 837              		.loc 1 572 0
 838 0028 10BD     		pop	{r4, pc}
 839              	.LVL35:
 840              	.L88:
 571:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 841              		.loc 1 571 0
 842 002a 0020     		movs	r0, #0
 843 002c 10BD     		pop	{r4, pc}
 844              	.LVL36:
 845              	.L90:
 846 002e 00BF     		.align	2
 847              	.L89:
 848 0030 003C0058 		.word	1476410368
 849              		.cfi_endproc
 850              	.LFE163:
 852              		.section	.text.HAL_SYSCFG_DisableVREFBUF,"ax",%progbits
 853              		.align	1
 854              		.global	HAL_SYSCFG_DisableVREFBUF
 855              		.syntax unified
 856              		.thumb
 857              		.thumb_func
 858              		.fpu fpv5-d16
 860              	HAL_SYSCFG_DisableVREFBUF:
 861              	.LFB164:
 573:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
ARM GAS  /tmp/ccIHdivw.s 			page 26


 574:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 575:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Internal Voltage Reference buffer (VREFBUF).
 576:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
 577:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 578:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 579:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_DisableVREFBUF(void)
 580:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 862              		.loc 1 580 0
 863              		.cfi_startproc
 864              		@ args = 0, pretend = 0, frame = 0
 865              		@ frame_needed = 0, uses_anonymous_args = 0
 866              		@ link register save eliminated.
 581:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(VREFBUF->CSR, VREFBUF_CSR_ENVR);
 867              		.loc 1 581 0
 868 0000 024A     		ldr	r2, .L92
 869 0002 1368     		ldr	r3, [r2]
 870 0004 23F00103 		bic	r3, r3, #1
 871 0008 1360     		str	r3, [r2]
 872 000a 7047     		bx	lr
 873              	.L93:
 874              		.align	2
 875              	.L92:
 876 000c 003C0058 		.word	1476410368
 877              		.cfi_endproc
 878              	.LFE164:
 880              		.section	.text.HAL_SYSCFG_ETHInterfaceSelect,"ax",%progbits
 881              		.align	1
 882              		.global	HAL_SYSCFG_ETHInterfaceSelect
 883              		.syntax unified
 884              		.thumb
 885              		.thumb_func
 886              		.fpu fpv5-d16
 888              	HAL_SYSCFG_ETHInterfaceSelect:
 889              	.LFB165:
 582:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 583:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 584:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 585:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Ethernet PHY Interface Selection either MII or RMII
 586:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_ETHInterface: Selects the Ethernet PHY interface
 587:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one of the following values:
 588:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_ETH_MII : Select the Media Independent Interface
 589:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_ETH_RMII: Select the Reduced Media Independent Interface
 590:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 591:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 592:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_ETHInterfaceSelect(uint32_t SYSCFG_ETHInterface)
 593:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 890              		.loc 1 593 0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 0
 893              		@ frame_needed = 0, uses_anonymous_args = 0
 894              		@ link register save eliminated.
 895              	.LVL37:
 594:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
 595:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_ETHERNET_CONFIG(SYSCFG_ETHInterface));
 596:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 597:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->PMCR, SYSCFG_PMCR_EPIS_SEL, (uint32_t)(SYSCFG_ETHInterface));
 896              		.loc 1 597 0
ARM GAS  /tmp/ccIHdivw.s 			page 27


 897 0000 034A     		ldr	r2, .L95
 898 0002 5368     		ldr	r3, [r2, #4]
 899 0004 23F46003 		bic	r3, r3, #14680064
 900 0008 1843     		orrs	r0, r0, r3
 901              	.LVL38:
 902 000a 5060     		str	r0, [r2, #4]
 903 000c 7047     		bx	lr
 904              	.L96:
 905 000e 00BF     		.align	2
 906              	.L95:
 907 0010 00040058 		.word	1476396032
 908              		.cfi_endproc
 909              	.LFE165:
 911              		.section	.text.HAL_SYSCFG_AnalogSwitchConfig,"ax",%progbits
 912              		.align	1
 913              		.global	HAL_SYSCFG_AnalogSwitchConfig
 914              		.syntax unified
 915              		.thumb
 916              		.thumb_func
 917              		.fpu fpv5-d16
 919              	HAL_SYSCFG_AnalogSwitchConfig:
 920              	.LFB166:
 598:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 599:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 600:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 601:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 602:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Analog Switch control for dual analog pads.
 603:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_AnalogSwitch: Selects the analog pad
 604:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one or a combination of the following values:
 605:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA0 : Select PA0 analog switch
 606:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA1:  Select PA1 analog switch
 607:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC2 : Select PC2 analog switch
 608:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC3:  Select PC3 analog switch
 609:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_SwitchState: Open or Close the analog switch between dual pads (PXn and PXn_C)
 610:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one or a combination of the following values:
 611:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA0_OPEN
 612:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA0_CLOSE
 613:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA1_OPEN
 614:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA1_CLOSE
 615:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC2_OPEN
 616:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC2_CLOSE
 617:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC3_OPEN
 618:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC3_CLOSE
 619:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 620:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 621:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 622:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_AnalogSwitchConfig(uint32_t SYSCFG_AnalogSwitch , uint32_t SYSCFG_SwitchState )
 623:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 921              		.loc 1 623 0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 0
 924              		@ frame_needed = 0, uses_anonymous_args = 0
 925              		@ link register save eliminated.
 926              	.LVL39:
 624:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
 625:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_ANALOG_SWITCH(SYSCFG_AnalogSwitch));
 626:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_SWITCH_STATE(SYSCFG_SwitchState));
ARM GAS  /tmp/ccIHdivw.s 			page 28


 627:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 628:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->PMCR, (uint32_t) SYSCFG_AnalogSwitch, (uint32_t)(SYSCFG_SwitchState));
 927              		.loc 1 628 0
 928 0000 034A     		ldr	r2, .L98
 929 0002 5368     		ldr	r3, [r2, #4]
 930 0004 23EA0000 		bic	r0, r3, r0
 931              	.LVL40:
 932 0008 0843     		orrs	r0, r0, r1
 933 000a 5060     		str	r0, [r2, #4]
 934 000c 7047     		bx	lr
 935              	.L99:
 936 000e 00BF     		.align	2
 937              	.L98:
 938 0010 00040058 		.word	1476396032
 939              		.cfi_endproc
 940              	.LFE166:
 942              		.section	.text.HAL_SYSCFG_EnableBOOST,"ax",%progbits
 943              		.align	1
 944              		.global	HAL_SYSCFG_EnableBOOST
 945              		.syntax unified
 946              		.thumb
 947              		.thumb_func
 948              		.fpu fpv5-d16
 950              	HAL_SYSCFG_EnableBOOST:
 951              	.LFB167:
 629:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 630:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 631:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 632:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 633:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enables the booster to reduce the total harmonic distortion of the analog
 634:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         switch when the supply voltage is lower than 2.7 V.
 635:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   Activating the booster allows to guaranty the analog switch AC performance
 636:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         when the supply voltage is below 2.7 V: in this case, the analog switch
 637:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         performance is the same on the full voltage range
 638:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 639:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 640:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_EnableBOOST(void)
 641:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 952              		.loc 1 641 0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 0
 955              		@ frame_needed = 0, uses_anonymous_args = 0
 956              		@ link register save eliminated.
 642:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  SET_BIT(SYSCFG->PMCR, SYSCFG_PMCR_BOOSTEN) ;
 957              		.loc 1 642 0
 958 0000 024A     		ldr	r2, .L101
 959 0002 5368     		ldr	r3, [r2, #4]
 960 0004 43F48073 		orr	r3, r3, #256
 961 0008 5360     		str	r3, [r2, #4]
 962 000a 7047     		bx	lr
 963              	.L102:
 964              		.align	2
 965              	.L101:
 966 000c 00040058 		.word	1476396032
 967              		.cfi_endproc
 968              	.LFE167:
 970              		.section	.text.HAL_SYSCFG_DisableBOOST,"ax",%progbits
ARM GAS  /tmp/ccIHdivw.s 			page 29


 971              		.align	1
 972              		.global	HAL_SYSCFG_DisableBOOST
 973              		.syntax unified
 974              		.thumb
 975              		.thumb_func
 976              		.fpu fpv5-d16
 978              	HAL_SYSCFG_DisableBOOST:
 979              	.LFB168:
 643:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 644:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 645:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 646:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disables the booster
 647:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   Activating the booster allows to guaranty the analog switch AC performance
 648:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         when the supply voltage is below 2.7 V: in this case, the analog switch
 649:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         performance is the same on the full voltage range
 650:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 651:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 652:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_DisableBOOST(void)
 653:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 980              		.loc 1 653 0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 0
 983              		@ frame_needed = 0, uses_anonymous_args = 0
 984              		@ link register save eliminated.
 654:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  CLEAR_BIT(SYSCFG->PMCR, SYSCFG_PMCR_BOOSTEN) ;
 985              		.loc 1 654 0
 986 0000 024A     		ldr	r2, .L104
 987 0002 5368     		ldr	r3, [r2, #4]
 988 0004 23F48073 		bic	r3, r3, #256
 989 0008 5360     		str	r3, [r2, #4]
 990 000a 7047     		bx	lr
 991              	.L105:
 992              		.align	2
 993              	.L104:
 994 000c 00040058 		.word	1476396032
 995              		.cfi_endproc
 996              	.LFE168:
 998              		.section	.text.HAL_SYSCFG_CM7BootAddConfig,"ax",%progbits
 999              		.align	1
 1000              		.global	HAL_SYSCFG_CM7BootAddConfig
 1001              		.syntax unified
 1002              		.thumb
 1003              		.thumb_func
 1004              		.fpu fpv5-d16
 1006              	HAL_SYSCFG_CM7BootAddConfig:
 1007              	.LFB169:
 655:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 656:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 657:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 658:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 659:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  BootCM7 address 0 configuration
 660:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  BootRegister :Specifies the Boot Address register (Address0 or Address1)
 661:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one of the following values:
 662:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_BOOT_ADDR0 : Select the boot address0
 663:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_BOOT_ADDR1:  Select the boot address1
 664:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  BootAddress :Specifies the CM7 Boot Address to be loaded in Address0 or Address1
 665:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
ARM GAS  /tmp/ccIHdivw.s 			page 30


 666:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 667:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_CM7BootAddConfig(uint32_t BootRegister, uint32_t BootAddress)
 668:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1008              		.loc 1 668 0
 1009              		.cfi_startproc
 1010              		@ args = 0, pretend = 0, frame = 0
 1011              		@ frame_needed = 0, uses_anonymous_args = 0
 1012              		@ link register save eliminated.
 1013              	.LVL41:
 669:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 670:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_BOOT_REGISTER(BootRegister));
 671:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_BOOT_ADDRESS(BootAddress));
 672:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if ( BootRegister == SYSCFG_BOOT_ADDR0 )
 1014              		.loc 1 672 0
 1015 0000 48B1     		cbz	r0, .L109
 673:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 674:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Configure CM7 BOOT ADD0 */
 675:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
 676:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR2, SYSCFG_UR2_BCM7_ADD0, ((BootAddress >> 16) << SYSCFG_UR2_BCM7_ADD0_Pos)
 677:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 678:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR2, SYSCFG_UR2_BOOT_ADD0, ((BootAddress >> 16) << SYSCFG_UR2_BOOT_ADD0_Pos)
 679:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
 680:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 681:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   else
 682:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 683:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Configure CM7 BOOT ADD1 */
 684:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
 685:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR3, SYSCFG_UR3_BCM7_ADD1, (BootAddress >> 16));
 686:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 687:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR3, SYSCFG_UR3_BOOT_ADD1, (BootAddress >> 16));
 1016              		.loc 1 687 0
 1017 0002 0A4A     		ldr	r2, .L110
 1018 0004 D2F80C03 		ldr	r0, [r2, #780]
 1019              	.LVL42:
 1020 0008 094B     		ldr	r3, .L110+4
 1021 000a 0340     		ands	r3, r3, r0
 1022 000c 43EA1143 		orr	r3, r3, r1, lsr #16
 1023 0010 C2F80C33 		str	r3, [r2, #780]
 1024 0014 7047     		bx	lr
 1025              	.LVL43:
 1026              	.L109:
 678:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
 1027              		.loc 1 678 0
 1028 0016 0548     		ldr	r0, .L110
 1029              	.LVL44:
 1030 0018 D0F80823 		ldr	r2, [r0, #776]
 1031 001c 92B2     		uxth	r2, r2
 1032 001e 044B     		ldr	r3, .L110+4
 1033 0020 0B40     		ands	r3, r3, r1
 1034 0022 1343     		orrs	r3, r3, r2
 1035 0024 C0F80833 		str	r3, [r0, #776]
 1036 0028 7047     		bx	lr
 1037              	.L111:
 1038 002a 00BF     		.align	2
 1039              	.L110:
 1040 002c 00040058 		.word	1476396032
 1041 0030 0000FFFF 		.word	-65536
ARM GAS  /tmp/ccIHdivw.s 			page 31


 1042              		.cfi_endproc
 1043              	.LFE169:
 1045              		.section	.text.HAL_EnableCompensationCell,"ax",%progbits
 1046              		.align	1
 1047              		.global	HAL_EnableCompensationCell
 1048              		.syntax unified
 1049              		.thumb
 1050              		.thumb_func
 1051              		.fpu fpv5-d16
 1053              	HAL_EnableCompensationCell:
 1054              	.LFB170:
 688:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
 689:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 690:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 691:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 692:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 693:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
 694:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 695:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  BootCM4 address 0 configuration
 696:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  BootRegister :Specifies the Boot Address register (Address0 or Address1)
 697:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one of the following values:
 698:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_BOOT_ADDR0 : Select the boot address0
 699:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_BOOT_ADDR1:  Select the boot address1
 700:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  BootAddress :Specifies the CM4 Boot Address to be loaded in Address0 or Address1
 701:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 702:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 703:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_CM4BootAddConfig(uint32_t BootRegister, uint32_t BootAddress)
 704:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 705:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 706:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_BOOT_REGISTER(BootRegister));
 707:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_BOOT_ADDRESS(BootAddress));
 708:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 709:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if ( BootRegister == SYSCFG_BOOT_ADDR0 )
 710:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 711:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Configure CM4 BOOT ADD0 */
 712:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR3, SYSCFG_UR3_BCM4_ADD0, ((BootAddress >> 16)<< SYSCFG_UR3_BCM4_ADD0_Pos))
 713:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 714:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 715:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   else
 716:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 717:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Configure CM4 BOOT ADD1 */
 718:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR4, SYSCFG_UR4_BCM4_ADD1, (BootAddress >> 16));
 719:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 720:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 721:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 722:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 723:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enables the Cortex-M7 boot
 724:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 725:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 726:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_EnableCM7BOOT(void)
 727:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 728:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  SET_BIT(SYSCFG->UR1, SYSCFG_UR1_BCM7);
 729:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 730:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 731:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 732:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disables the Cortex-M7 boot
 733:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   Disabling the boot will gate the CPU clock
ARM GAS  /tmp/ccIHdivw.s 			page 32


 734:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 735:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 736:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_DisableCM7BOOT(void)
 737:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 738:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  CLEAR_BIT(SYSCFG->UR1, SYSCFG_UR1_BCM7) ;
 739:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 740:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 741:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 742:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enables the Cortex-M4 boot
 743:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 744:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 745:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_EnableCM4BOOT(void)
 746:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 747:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  SET_BIT(SYSCFG->UR1, SYSCFG_UR1_BCM4);
 748:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 749:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 750:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 751:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disables the Cortex-M4 boot
 752:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   Disabling the boot will gate the CPU clock
 753:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 754:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 755:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_DisableCM4BOOT(void)
 756:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 757:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(SYSCFG->UR1, SYSCFG_UR1_BCM4);
 758:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 759:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
 760:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 761:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 762:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enables the I/O Compensation Cell.
 763:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 764:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.
 765:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 766:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 767:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableCompensationCell(void)
 768:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1055              		.loc 1 768 0
 1056              		.cfi_startproc
 1057              		@ args = 0, pretend = 0, frame = 0
 1058              		@ frame_needed = 0, uses_anonymous_args = 0
 1059              		@ link register save eliminated.
 769:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(SYSCFG->CCCSR, SYSCFG_CCCSR_EN) ;
 1060              		.loc 1 769 0
 1061 0000 024A     		ldr	r2, .L113
 1062 0002 136A     		ldr	r3, [r2, #32]
 1063 0004 43F00103 		orr	r3, r3, #1
 1064 0008 1362     		str	r3, [r2, #32]
 1065 000a 7047     		bx	lr
 1066              	.L114:
 1067              		.align	2
 1068              	.L113:
 1069 000c 00040058 		.word	1476396032
 1070              		.cfi_endproc
 1071              	.LFE170:
 1073              		.section	.text.HAL_DisableCompensationCell,"ax",%progbits
 1074              		.align	1
 1075              		.global	HAL_DisableCompensationCell
 1076              		.syntax unified
ARM GAS  /tmp/ccIHdivw.s 			page 33


 1077              		.thumb
 1078              		.thumb_func
 1079              		.fpu fpv5-d16
 1081              	HAL_DisableCompensationCell:
 1082              	.LFB171:
 770:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 771:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 772:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 773:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Power-down the I/O Compensation Cell.
 774:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 775:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.
 776:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 777:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 778:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableCompensationCell(void)
 779:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1083              		.loc 1 779 0
 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 0
 1086              		@ frame_needed = 0, uses_anonymous_args = 0
 1087              		@ link register save eliminated.
 780:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(SYSCFG->CCCSR, SYSCFG_CCCSR_EN);
 1088              		.loc 1 780 0
 1089 0000 024A     		ldr	r2, .L116
 1090 0002 136A     		ldr	r3, [r2, #32]
 1091 0004 23F00103 		bic	r3, r3, #1
 1092 0008 1362     		str	r3, [r2, #32]
 1093 000a 7047     		bx	lr
 1094              	.L117:
 1095              		.align	2
 1096              	.L116:
 1097 000c 00040058 		.word	1476396032
 1098              		.cfi_endproc
 1099              	.LFE171:
 1101              		.section	.text.HAL_SYSCFG_EnableIOSpeedOptimize,"ax",%progbits
 1102              		.align	1
 1103              		.global	HAL_SYSCFG_EnableIOSpeedOptimize
 1104              		.syntax unified
 1105              		.thumb
 1106              		.thumb_func
 1107              		.fpu fpv5-d16
 1109              	HAL_SYSCFG_EnableIOSpeedOptimize:
 1110              	.LFB172:
 781:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 782:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 783:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 784:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 785:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  To Enable optimize the I/O speed when the product voltage is low.
 786:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   This bit is active only if PRODUCT_BELOW_25V user option bit is set. It must be
 787:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         used only if the product supply voltage is below 2.5 V. Setting this bit when VDD is
 788:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         higher than 2.5 V might be destructive.
 789:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 790:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 791:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_EnableIOSpeedOptimize(void)
 792:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1111              		.loc 1 792 0
 1112              		.cfi_startproc
 1113              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccIHdivw.s 			page 34


 1114              		@ frame_needed = 0, uses_anonymous_args = 0
 1115              		@ link register save eliminated.
 793:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(SYSCFG->CCCSR, SYSCFG_CCCSR_HSLV);
 1116              		.loc 1 793 0
 1117 0000 024A     		ldr	r2, .L119
 1118 0002 136A     		ldr	r3, [r2, #32]
 1119 0004 43F48033 		orr	r3, r3, #65536
 1120 0008 1362     		str	r3, [r2, #32]
 1121 000a 7047     		bx	lr
 1122              	.L120:
 1123              		.align	2
 1124              	.L119:
 1125 000c 00040058 		.word	1476396032
 1126              		.cfi_endproc
 1127              	.LFE172:
 1129              		.section	.text.HAL_SYSCFG_DisableIOSpeedOptimize,"ax",%progbits
 1130              		.align	1
 1131              		.global	HAL_SYSCFG_DisableIOSpeedOptimize
 1132              		.syntax unified
 1133              		.thumb
 1134              		.thumb_func
 1135              		.fpu fpv5-d16
 1137              	HAL_SYSCFG_DisableIOSpeedOptimize:
 1138              	.LFB173:
 794:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 795:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 796:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 797:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  To Disable optimize the I/O speed when the product voltage is low.
 798:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   This bit is active only if PRODUCT_BELOW_25V user option bit is set. It must be
 799:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         used only if the product supply voltage is below 2.5 V. Setting this bit when VDD is
 800:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         higher than 2.5 V might be destructive.
 801:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 802:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 803:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_DisableIOSpeedOptimize(void)
 804:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1139              		.loc 1 804 0
 1140              		.cfi_startproc
 1141              		@ args = 0, pretend = 0, frame = 0
 1142              		@ frame_needed = 0, uses_anonymous_args = 0
 1143              		@ link register save eliminated.
 805:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(SYSCFG->CCCSR, SYSCFG_CCCSR_HSLV);
 1144              		.loc 1 805 0
 1145 0000 024A     		ldr	r2, .L122
 1146 0002 136A     		ldr	r3, [r2, #32]
 1147 0004 23F48033 		bic	r3, r3, #65536
 1148 0008 1362     		str	r3, [r2, #32]
 1149 000a 7047     		bx	lr
 1150              	.L123:
 1151              		.align	2
 1152              	.L122:
 1153 000c 00040058 		.word	1476396032
 1154              		.cfi_endproc
 1155              	.LFE173:
 1157              		.section	.text.HAL_SYSCFG_CompensationCodeSelect,"ax",%progbits
 1158              		.align	1
 1159              		.global	HAL_SYSCFG_CompensationCodeSelect
 1160              		.syntax unified
ARM GAS  /tmp/ccIHdivw.s 			page 35


 1161              		.thumb
 1162              		.thumb_func
 1163              		.fpu fpv5-d16
 1165              	HAL_SYSCFG_CompensationCodeSelect:
 1166              	.LFB174:
 806:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 807:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 808:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 809:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Code selection for the I/O Compensation cell
 810:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_CompCode: Selects the code to be applied for the I/O compensation cell
 811:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one of the following values:
 812:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_CELL_CODE : Select Code from the cell (available in the SYSCFG_CCVR)
 813:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_REGISTER_CODE: Select Code from the SYSCFG compensation cell code register (SYSCF
 814:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 815:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 816:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_CompensationCodeSelect(uint32_t SYSCFG_CompCode)
 817:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1167              		.loc 1 817 0
 1168              		.cfi_startproc
 1169              		@ args = 0, pretend = 0, frame = 0
 1170              		@ frame_needed = 0, uses_anonymous_args = 0
 1171              		@ link register save eliminated.
 1172              	.LVL45:
 818:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
 819:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_CODE_SELECT(SYSCFG_CompCode));
 820:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->CCCSR, SYSCFG_CCCSR_CS, (uint32_t)(SYSCFG_CompCode));
 1173              		.loc 1 820 0
 1174 0000 034A     		ldr	r2, .L125
 1175 0002 136A     		ldr	r3, [r2, #32]
 1176 0004 23F00203 		bic	r3, r3, #2
 1177 0008 1843     		orrs	r0, r0, r3
 1178              	.LVL46:
 1179 000a 1062     		str	r0, [r2, #32]
 1180 000c 7047     		bx	lr
 1181              	.L126:
 1182 000e 00BF     		.align	2
 1183              	.L125:
 1184 0010 00040058 		.word	1476396032
 1185              		.cfi_endproc
 1186              	.LFE174:
 1188              		.section	.text.HAL_SYSCFG_CompensationCodeConfig,"ax",%progbits
 1189              		.align	1
 1190              		.global	HAL_SYSCFG_CompensationCodeConfig
 1191              		.syntax unified
 1192              		.thumb
 1193              		.thumb_func
 1194              		.fpu fpv5-d16
 1196              	HAL_SYSCFG_CompensationCodeConfig:
 1197              	.LFB175:
 821:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 822:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 823:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 824:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Code selection for the I/O Compensation cell
 825:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_PMOSCode: PMOS compensation code
 826:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         This code is applied to the I/O compensation cell when the CS bit of the
 827:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          SYSCFG_CMPCR is set
 828:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_NMOSCode: NMOS compensation code
ARM GAS  /tmp/ccIHdivw.s 			page 36


 829:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         This code is applied to the I/O compensation cell when the CS bit of the
 830:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          SYSCFG_CMPCR is set
 831:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 832:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 833:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_CompensationCodeConfig(uint32_t SYSCFG_PMOSCode, uint32_t SYSCFG_NMOSCode )
 834:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1198              		.loc 1 834 0
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 0
 1201              		@ frame_needed = 0, uses_anonymous_args = 0
 1202              		@ link register save eliminated.
 1203              	.LVL47:
 835:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
 836:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_CODE_CONFIG(SYSCFG_PMOSCode));
 837:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_CODE_CONFIG(SYSCFG_NMOSCode));
 838:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->CCCR, SYSCFG_CCCR_NCC|SYSCFG_CCCR_PCC, (((uint32_t)(SYSCFG_PMOSCode)<< 4)|(uin
 1204              		.loc 1 838 0
 1205 0000 044A     		ldr	r2, .L128
 1206 0002 936A     		ldr	r3, [r2, #40]
 1207 0004 23F0FF03 		bic	r3, r3, #255
 1208 0008 41EA0010 		orr	r0, r1, r0, lsl #4
 1209              	.LVL48:
 1210 000c 0343     		orrs	r3, r3, r0
 1211 000e 9362     		str	r3, [r2, #40]
 1212 0010 7047     		bx	lr
 1213              	.L129:
 1214 0012 00BF     		.align	2
 1215              	.L128:
 1216 0014 00040058 		.word	1476396032
 1217              		.cfi_endproc
 1218              	.LFE175:
 1220              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 1221              		.align	1
 1222              		.global	HAL_DBGMCU_EnableDBGSleepMode
 1223              		.syntax unified
 1224              		.thumb
 1225              		.thumb_func
 1226              		.fpu fpv5-d16
 1228              	HAL_DBGMCU_EnableDBGSleepMode:
 1229              	.LFB176:
 839:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 840:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 841:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 842:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 843:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain1 SLEEP mode
 844:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 845:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 846:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDBGSleepMode(void)
 847:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1230              		.loc 1 847 0
 1231              		.cfi_startproc
 1232              		@ args = 0, pretend = 0, frame = 0
 1233              		@ frame_needed = 0, uses_anonymous_args = 0
 1234              		@ link register save eliminated.
 848:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEPD1);
 1235              		.loc 1 848 0
 1236 0000 024A     		ldr	r2, .L131
ARM GAS  /tmp/ccIHdivw.s 			page 37


 1237 0002 5368     		ldr	r3, [r2, #4]
 1238 0004 43F00103 		orr	r3, r3, #1
 1239 0008 5360     		str	r3, [r2, #4]
 1240 000a 7047     		bx	lr
 1241              	.L132:
 1242              		.align	2
 1243              	.L131:
 1244 000c 0010005C 		.word	1543507968
 1245              		.cfi_endproc
 1246              	.LFE176:
 1248              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 1249              		.align	1
 1250              		.global	HAL_DBGMCU_DisableDBGSleepMode
 1251              		.syntax unified
 1252              		.thumb
 1253              		.thumb_func
 1254              		.fpu fpv5-d16
 1256              	HAL_DBGMCU_DisableDBGSleepMode:
 1257              	.LFB177:
 849:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 850:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 851:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 852:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain1 SLEEP mode
 853:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 854:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 855:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDBGSleepMode(void)
 856:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1258              		.loc 1 856 0
 1259              		.cfi_startproc
 1260              		@ args = 0, pretend = 0, frame = 0
 1261              		@ frame_needed = 0, uses_anonymous_args = 0
 1262              		@ link register save eliminated.
 857:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEPD1);
 1263              		.loc 1 857 0
 1264 0000 024A     		ldr	r2, .L134
 1265 0002 5368     		ldr	r3, [r2, #4]
 1266 0004 23F00103 		bic	r3, r3, #1
 1267 0008 5360     		str	r3, [r2, #4]
 1268 000a 7047     		bx	lr
 1269              	.L135:
 1270              		.align	2
 1271              	.L134:
 1272 000c 0010005C 		.word	1543507968
 1273              		.cfi_endproc
 1274              	.LFE177:
 1276              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 1277              		.align	1
 1278              		.global	HAL_DBGMCU_EnableDBGStopMode
 1279              		.syntax unified
 1280              		.thumb
 1281              		.thumb_func
 1282              		.fpu fpv5-d16
 1284              	HAL_DBGMCU_EnableDBGStopMode:
 1285              	.LFB178:
 858:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 859:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 860:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
ARM GAS  /tmp/ccIHdivw.s 			page 38


 861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain1 STOP mode
 862:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 863:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 864:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDBGStopMode(void)
 865:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1286              		.loc 1 865 0
 1287              		.cfi_startproc
 1288              		@ args = 0, pretend = 0, frame = 0
 1289              		@ frame_needed = 0, uses_anonymous_args = 0
 1290              		@ link register save eliminated.
 866:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD1);
 1291              		.loc 1 866 0
 1292 0000 024A     		ldr	r2, .L137
 1293 0002 5368     		ldr	r3, [r2, #4]
 1294 0004 43F00203 		orr	r3, r3, #2
 1295 0008 5360     		str	r3, [r2, #4]
 1296 000a 7047     		bx	lr
 1297              	.L138:
 1298              		.align	2
 1299              	.L137:
 1300 000c 0010005C 		.word	1543507968
 1301              		.cfi_endproc
 1302              	.LFE178:
 1304              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 1305              		.align	1
 1306              		.global	HAL_DBGMCU_DisableDBGStopMode
 1307              		.syntax unified
 1308              		.thumb
 1309              		.thumb_func
 1310              		.fpu fpv5-d16
 1312              	HAL_DBGMCU_DisableDBGStopMode:
 1313              	.LFB179:
 867:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 868:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 869:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 870:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain1 STOP mode
 871:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 872:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 873:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDBGStopMode(void)
 874:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1314              		.loc 1 874 0
 1315              		.cfi_startproc
 1316              		@ args = 0, pretend = 0, frame = 0
 1317              		@ frame_needed = 0, uses_anonymous_args = 0
 1318              		@ link register save eliminated.
 875:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD1);
 1319              		.loc 1 875 0
 1320 0000 024A     		ldr	r2, .L140
 1321 0002 5368     		ldr	r3, [r2, #4]
 1322 0004 23F00203 		bic	r3, r3, #2
 1323 0008 5360     		str	r3, [r2, #4]
 1324 000a 7047     		bx	lr
 1325              	.L141:
 1326              		.align	2
 1327              	.L140:
 1328 000c 0010005C 		.word	1543507968
 1329              		.cfi_endproc
ARM GAS  /tmp/ccIHdivw.s 			page 39


 1330              	.LFE179:
 1332              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 1333              		.align	1
 1334              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 1335              		.syntax unified
 1336              		.thumb
 1337              		.thumb_func
 1338              		.fpu fpv5-d16
 1340              	HAL_DBGMCU_EnableDBGStandbyMode:
 1341              	.LFB180:
 876:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 877:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 878:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 879:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain1 STANDBY mode
 880:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 881:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 882:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDBGStandbyMode(void)
 883:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1342              		.loc 1 883 0
 1343              		.cfi_startproc
 1344              		@ args = 0, pretend = 0, frame = 0
 1345              		@ frame_needed = 0, uses_anonymous_args = 0
 1346              		@ link register save eliminated.
 884:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD1);
 1347              		.loc 1 884 0
 1348 0000 024A     		ldr	r2, .L143
 1349 0002 5368     		ldr	r3, [r2, #4]
 1350 0004 43F00403 		orr	r3, r3, #4
 1351 0008 5360     		str	r3, [r2, #4]
 1352 000a 7047     		bx	lr
 1353              	.L144:
 1354              		.align	2
 1355              	.L143:
 1356 000c 0010005C 		.word	1543507968
 1357              		.cfi_endproc
 1358              	.LFE180:
 1360              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 1361              		.align	1
 1362              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 1363              		.syntax unified
 1364              		.thumb
 1365              		.thumb_func
 1366              		.fpu fpv5-d16
 1368              	HAL_DBGMCU_DisableDBGStandbyMode:
 1369              	.LFB181:
 885:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 886:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 887:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 888:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain1 STANDBY mode
 889:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 890:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 891:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDBGStandbyMode(void)
 892:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1370              		.loc 1 892 0
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 0
 1373              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccIHdivw.s 			page 40


 1374              		@ link register save eliminated.
 893:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD1);
 1375              		.loc 1 893 0
 1376 0000 024A     		ldr	r2, .L146
 1377 0002 5368     		ldr	r3, [r2, #4]
 1378 0004 23F00403 		bic	r3, r3, #4
 1379 0008 5360     		str	r3, [r2, #4]
 1380 000a 7047     		bx	lr
 1381              	.L147:
 1382              		.align	2
 1383              	.L146:
 1384 000c 0010005C 		.word	1543507968
 1385              		.cfi_endproc
 1386              	.LFE181:
 1388              		.section	.text.HAL_EnableDomain3DBGStopMode,"ax",%progbits
 1389              		.align	1
 1390              		.global	HAL_EnableDomain3DBGStopMode
 1391              		.syntax unified
 1392              		.thumb
 1393              		.thumb_func
 1394              		.fpu fpv5-d16
 1396              	HAL_EnableDomain3DBGStopMode:
 1397              	.LFB182:
 894:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 895:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 896:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
 897:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 898:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain1 SLEEP mode
 899:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 900:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 901:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDomain2DBGSleepMode(void)
 902:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 903:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEPD2);
 904:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 905:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 906:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 907:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain2 SLEEP mode
 908:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 909:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 910:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDomain2DBGSleepMode(void)
 911:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 912:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEPD2);
 913:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 914:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 915:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 916:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain2 STOP mode
 917:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 918:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 919:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDomain2DBGStopMode(void)
 920:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 921:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD2);
 922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 923:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 924:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 925:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain2 STOP mode
 926:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 927:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
ARM GAS  /tmp/ccIHdivw.s 			page 41


 928:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDomain2DBGStopMode(void)
 929:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 930:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD2);
 931:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 932:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 933:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 934:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain2 STANDBY mode
 935:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 936:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 937:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDomain2DBGStandbyMode(void)
 938:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 939:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD2);
 940:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 941:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 942:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 943:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain2 STANDBY mode
 944:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 945:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 946:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDomain2DBGStandbyMode(void)
 947:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD2);
 949:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 950:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
 951:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 953:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 954:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain3 STOP mode
 955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 956:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 957:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDomain3DBGStopMode(void)
 958:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1398              		.loc 1 958 0
 1399              		.cfi_startproc
 1400              		@ args = 0, pretend = 0, frame = 0
 1401              		@ frame_needed = 0, uses_anonymous_args = 0
 1402              		@ link register save eliminated.
 959:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD3);
 1403              		.loc 1 959 0
 1404 0000 024A     		ldr	r2, .L149
 1405 0002 5368     		ldr	r3, [r2, #4]
 1406 0004 43F08003 		orr	r3, r3, #128
 1407 0008 5360     		str	r3, [r2, #4]
 1408 000a 7047     		bx	lr
 1409              	.L150:
 1410              		.align	2
 1411              	.L149:
 1412 000c 0010005C 		.word	1543507968
 1413              		.cfi_endproc
 1414              	.LFE182:
 1416              		.section	.text.HAL_DisableDomain3DBGStopMode,"ax",%progbits
 1417              		.align	1
 1418              		.global	HAL_DisableDomain3DBGStopMode
 1419              		.syntax unified
 1420              		.thumb
 1421              		.thumb_func
 1422              		.fpu fpv5-d16
 1424              	HAL_DisableDomain3DBGStopMode:
ARM GAS  /tmp/ccIHdivw.s 			page 42


 1425              	.LFB183:
 960:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 961:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 962:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 963:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain3 STOP mode
 964:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 965:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 966:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDomain3DBGStopMode(void)
 967:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1426              		.loc 1 967 0
 1427              		.cfi_startproc
 1428              		@ args = 0, pretend = 0, frame = 0
 1429              		@ frame_needed = 0, uses_anonymous_args = 0
 1430              		@ link register save eliminated.
 968:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD3);
 1431              		.loc 1 968 0
 1432 0000 024A     		ldr	r2, .L152
 1433 0002 5368     		ldr	r3, [r2, #4]
 1434 0004 23F08003 		bic	r3, r3, #128
 1435 0008 5360     		str	r3, [r2, #4]
 1436 000a 7047     		bx	lr
 1437              	.L153:
 1438              		.align	2
 1439              	.L152:
 1440 000c 0010005C 		.word	1543507968
 1441              		.cfi_endproc
 1442              	.LFE183:
 1444              		.section	.text.HAL_EnableDomain3DBGStandbyMode,"ax",%progbits
 1445              		.align	1
 1446              		.global	HAL_EnableDomain3DBGStandbyMode
 1447              		.syntax unified
 1448              		.thumb
 1449              		.thumb_func
 1450              		.fpu fpv5-d16
 1452              	HAL_EnableDomain3DBGStandbyMode:
 1453              	.LFB184:
 969:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 970:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 971:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 972:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain3 STANDBY mode
 973:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 974:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 975:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDomain3DBGStandbyMode(void)
 976:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1454              		.loc 1 976 0
 1455              		.cfi_startproc
 1456              		@ args = 0, pretend = 0, frame = 0
 1457              		@ frame_needed = 0, uses_anonymous_args = 0
 1458              		@ link register save eliminated.
 977:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD3);
 1459              		.loc 1 977 0
 1460 0000 024A     		ldr	r2, .L155
 1461 0002 5368     		ldr	r3, [r2, #4]
 1462 0004 43F48073 		orr	r3, r3, #256
 1463 0008 5360     		str	r3, [r2, #4]
 1464 000a 7047     		bx	lr
 1465              	.L156:
ARM GAS  /tmp/ccIHdivw.s 			page 43


 1466              		.align	2
 1467              	.L155:
 1468 000c 0010005C 		.word	1543507968
 1469              		.cfi_endproc
 1470              	.LFE184:
 1472              		.section	.text.HAL_DisableDomain3DBGStandbyMode,"ax",%progbits
 1473              		.align	1
 1474              		.global	HAL_DisableDomain3DBGStandbyMode
 1475              		.syntax unified
 1476              		.thumb
 1477              		.thumb_func
 1478              		.fpu fpv5-d16
 1480              	HAL_DisableDomain3DBGStandbyMode:
 1481              	.LFB185:
 978:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 979:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 980:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 981:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain3 STANDBY mode
 982:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 983:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 984:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDomain3DBGStandbyMode(void)
 985:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1482              		.loc 1 985 0
 1483              		.cfi_startproc
 1484              		@ args = 0, pretend = 0, frame = 0
 1485              		@ frame_needed = 0, uses_anonymous_args = 0
 1486              		@ link register save eliminated.
 986:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD3);
 1487              		.loc 1 986 0
 1488 0000 024A     		ldr	r2, .L158
 1489 0002 5368     		ldr	r3, [r2, #4]
 1490 0004 23F48073 		bic	r3, r3, #256
 1491 0008 5360     		str	r3, [r2, #4]
 1492 000a 7047     		bx	lr
 1493              	.L159:
 1494              		.align	2
 1495              	.L158:
 1496 000c 0010005C 		.word	1543507968
 1497              		.cfi_endproc
 1498              	.LFE185:
 1500              		.section	.text.HAL_SetFMCMemorySwappingConfig,"ax",%progbits
 1501              		.align	1
 1502              		.global	HAL_SetFMCMemorySwappingConfig
 1503              		.syntax unified
 1504              		.thumb
 1505              		.thumb_func
 1506              		.fpu fpv5-d16
 1508              	HAL_SetFMCMemorySwappingConfig:
 1509              	.LFB186:
 987:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 988:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 989:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 990:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Set the FMC Memory Mapping Swapping config.
 991:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  BankMapConfig: Defines the FMC Bank mapping configuration. This parameter can be
 992:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             FMC_SWAPBMAP_DISABLE, FMC_SWAPBMAP_SDRAM_SRAM, FMC_SWAPBMAP_SDRAMB2
 993:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval HAL state
 994:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
ARM GAS  /tmp/ccIHdivw.s 			page 44


 995:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SetFMCMemorySwappingConfig(uint32_t BankMapConfig)
 996:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1510              		.loc 1 996 0
 1511              		.cfi_startproc
 1512              		@ args = 0, pretend = 0, frame = 0
 1513              		@ frame_needed = 0, uses_anonymous_args = 0
 1514              		@ link register save eliminated.
 1515              	.LVL49:
 997:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
 998:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_FMC_SWAPBMAP_MODE(BankMapConfig));
 999:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(FMC_Bank1_R->BTCR[0], FMC_BCR1_BMAP, BankMapConfig);
 1516              		.loc 1 999 0
 1517 0000 034A     		ldr	r2, .L161
 1518 0002 1368     		ldr	r3, [r2]
 1519 0004 23F04073 		bic	r3, r3, #50331648
 1520 0008 1843     		orrs	r0, r0, r3
 1521              	.LVL50:
 1522 000a 1060     		str	r0, [r2]
 1523 000c 7047     		bx	lr
 1524              	.L162:
 1525 000e 00BF     		.align	2
 1526              	.L161:
 1527 0010 00400052 		.word	1375748096
 1528              		.cfi_endproc
 1529              	.LFE186:
 1531              		.section	.text.HAL_GetFMCMemorySwappingConfig,"ax",%progbits
 1532              		.align	1
 1533              		.global	HAL_GetFMCMemorySwappingConfig
 1534              		.syntax unified
 1535              		.thumb
 1536              		.thumb_func
 1537              		.fpu fpv5-d16
 1539              	HAL_GetFMCMemorySwappingConfig:
 1540              	.LFB187:
1000:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1001:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1002:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1003:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Get FMC Bank mapping mode.
1004:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval The FMC Bank mapping mode. This parameter can be
1005:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             FMC_SWAPBMAP_DISABLE, FMC_SWAPBMAP_SDRAM_SRAM, FMC_SWAPBMAP_SDRAMB2
1006:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** */
1007:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetFMCMemorySwappingConfig(void)
1008:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1541              		.loc 1 1008 0
 1542              		.cfi_startproc
 1543              		@ args = 0, pretend = 0, frame = 0
 1544              		@ frame_needed = 0, uses_anonymous_args = 0
 1545              		@ link register save eliminated.
1009:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return READ_BIT(FMC_Bank1_R->BTCR[0], FMC_BCR1_BMAP);
 1546              		.loc 1 1009 0
 1547 0000 024B     		ldr	r3, .L164
 1548 0002 1868     		ldr	r0, [r3]
1010:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1549              		.loc 1 1010 0
 1550 0004 00F04070 		and	r0, r0, #50331648
 1551 0008 7047     		bx	lr
 1552              	.L165:
ARM GAS  /tmp/ccIHdivw.s 			page 45


 1553 000a 00BF     		.align	2
 1554              	.L164:
 1555 000c 00400052 		.word	1375748096
 1556              		.cfi_endproc
 1557              	.LFE187:
 1559              		.section	.text.HAL_EXTI_EdgeConfig,"ax",%progbits
 1560              		.align	1
 1561              		.global	HAL_EXTI_EdgeConfig
 1562              		.syntax unified
 1563              		.thumb
 1564              		.thumb_func
 1565              		.fpu fpv5-d16
 1567              	HAL_EXTI_EdgeConfig:
 1568              	.LFB188:
1011:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1012:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1013:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Configure the EXTI input event line edge
1014:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note    No edge configuration for direct lines but for configurable lines:(EXTI_LINE0..EXTI_LI
1015:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          EXTI_LINE49,EXTI_LINE51,EXTI_LINE82,EXTI_LINE84,EXTI_LINE85 and EXTI_LINE86.
1016:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1017:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0....EXTI_LINE87)excluding :line45, line81,line83 which are reserved
1018:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Edge: Specifies  EXTI line Edge used.
1019:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one of the following values :
1020:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_RISING_EDGE : Configurable line, with Rising edge trigger detection
1021:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_FALLING_EDGE: Configurable line, with Falling edge trigger detection
1022:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1023:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1024:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_EdgeConfig(uint32_t EXTI_Line , uint32_t EXTI_Edge )
1025:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1569              		.loc 1 1025 0
 1570              		.cfi_startproc
 1571              		@ args = 0, pretend = 0, frame = 0
 1572              		@ frame_needed = 0, uses_anonymous_args = 0
 1573              		@ link register save eliminated.
 1574              	.LVL51:
 1575 0000 70B4     		push	{r4, r5, r6}
 1576              	.LCFI6:
 1577              		.cfi_def_cfa_offset 12
 1578              		.cfi_offset 4, -12
 1579              		.cfi_offset 5, -8
 1580              		.cfi_offset 6, -4
1026:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
1027:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_HAL_EXTI_CONFIG_LINE(EXTI_Line));
1028:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_EDGE_LINE(EXTI_Edge));
1029:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1030:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Clear Rising Falling edge configuration */
1031:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI->FTSR1)) + ((EXTI_Line >> 5 ) * 0x20UL)), (uint3
 1581              		.loc 1 1031 0
 1582 0002 4309     		lsrs	r3, r0, #5
 1583 0004 5D01     		lsls	r5, r3, #5
 1584 0006 0F4C     		ldr	r4, .L170
 1585 0008 2E59     		ldr	r6, [r5, r4]
 1586 000a 00F01F00 		and	r0, r0, #31
 1587              	.LVL52:
 1588 000e 0122     		movs	r2, #1
 1589 0010 02FA00F0 		lsl	r0, r2, r0
 1590 0014 C243     		mvns	r2, r0
ARM GAS  /tmp/ccIHdivw.s 			page 46


 1591 0016 1640     		ands	r6, r6, r2
 1592 0018 2E51     		str	r6, [r5, r4]
1032:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT( *(__IO uint32_t *) (((uint32_t) &(EXTI->RTSR1)) + ((EXTI_Line >> 5 ) * 0x20UL)), (uint
 1593              		.loc 1 1032 0
 1594 001a 03F13073 		add	r3, r3, #46137344
 1595 001e 5B01     		lsls	r3, r3, #5
 1596 0020 1E68     		ldr	r6, [r3]
 1597 0022 3240     		ands	r2, r2, r6
 1598 0024 1A60     		str	r2, [r3]
1033:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1034:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Edge & EXTI_RISING_EDGE) == EXTI_RISING_EDGE)
 1599              		.loc 1 1034 0
 1600 0026 11F4801F 		tst	r1, #1048576
 1601 002a 02D0     		beq	.L167
1035:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1036:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    SET_BIT( *(__IO uint32_t *) (((uint32_t) &(EXTI->RTSR1)) + ((EXTI_Line >> 5 ) * 0x20UL)), (uint3
 1602              		.loc 1 1036 0
 1603 002c 1A68     		ldr	r2, [r3]
 1604 002e 0243     		orrs	r2, r2, r0
 1605 0030 1A60     		str	r2, [r3]
 1606              	.L167:
1037:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1038:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Edge & EXTI_FALLING_EDGE) == EXTI_FALLING_EDGE)
 1607              		.loc 1 1038 0
 1608 0032 11F4001F 		tst	r1, #2097152
 1609 0036 02D0     		beq	.L166
1039:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1040:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    SET_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI->FTSR1)) + ((EXTI_Line >> 5 ) * 0x20UL)), (uint32
 1610              		.loc 1 1040 0
 1611 0038 2B59     		ldr	r3, [r5, r4]
 1612 003a 1843     		orrs	r0, r0, r3
 1613 003c 2851     		str	r0, [r5, r4]
 1614              	.L166:
1041:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1042:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1615              		.loc 1 1042 0
 1616 003e 70BC     		pop	{r4, r5, r6}
 1617              	.LCFI7:
 1618              		.cfi_restore 6
 1619              		.cfi_restore 5
 1620              		.cfi_restore 4
 1621              		.cfi_def_cfa_offset 0
 1622 0040 7047     		bx	lr
 1623              	.L171:
 1624 0042 00BF     		.align	2
 1625              	.L170:
 1626 0044 04000058 		.word	1476395012
 1627              		.cfi_endproc
 1628              	.LFE188:
 1630              		.section	.text.HAL_EXTI_GenerateSWInterrupt,"ax",%progbits
 1631              		.align	1
 1632              		.global	HAL_EXTI_GenerateSWInterrupt
 1633              		.syntax unified
 1634              		.thumb
 1635              		.thumb_func
 1636              		.fpu fpv5-d16
 1638              	HAL_EXTI_GenerateSWInterrupt:
ARM GAS  /tmp/ccIHdivw.s 			page 47


 1639              	.LFB189:
1043:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1044:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1045:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Generates a Software interrupt on selected EXTI line.
1046:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1047:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          (EXTI_LINE0..EXTI_LINE21),EXTI_LINE49,EXTI_LINE51,EXTI_LINE82,EXTI_LINE84,EXTI_LINE85 
1048:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1049:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1050:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
1051:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1640              		.loc 1 1051 0
 1641              		.cfi_startproc
 1642              		@ args = 0, pretend = 0, frame = 0
 1643              		@ frame_needed = 0, uses_anonymous_args = 0
 1644              		@ link register save eliminated.
 1645              	.LVL53:
 1646 0000 10B4     		push	{r4}
 1647              	.LCFI8:
 1648              		.cfi_def_cfa_offset 4
 1649              		.cfi_offset 4, -4
1052:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
1053:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_HAL_EXTI_CONFIG_LINE(EXTI_Line));
1054:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1055:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI->SWIER1)) + ((EXTI_Line >> 5 ) * 0x20UL)), (uint32
 1650              		.loc 1 1055 0
 1651 0002 20F01F04 		bic	r4, r0, #31
 1652 0006 0649     		ldr	r1, .L174
 1653 0008 6358     		ldr	r3, [r4, r1]
 1654 000a 00F01F00 		and	r0, r0, #31
 1655              	.LVL54:
 1656 000e 0122     		movs	r2, #1
 1657 0010 02FA00F0 		lsl	r0, r2, r0
 1658 0014 1843     		orrs	r0, r0, r3
 1659 0016 6050     		str	r0, [r4, r1]
1056:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1660              		.loc 1 1056 0
 1661 0018 5DF8044B 		ldr	r4, [sp], #4
 1662              	.LCFI9:
 1663              		.cfi_restore 4
 1664              		.cfi_def_cfa_offset 0
 1665 001c 7047     		bx	lr
 1666              	.L175:
 1667 001e 00BF     		.align	2
 1668              	.L174:
 1669 0020 08000058 		.word	1476395016
 1670              		.cfi_endproc
 1671              	.LFE189:
 1673              		.section	.text.HAL_EXTI_D1_ClearFlag,"ax",%progbits
 1674              		.align	1
 1675              		.global	HAL_EXTI_D1_ClearFlag
 1676              		.syntax unified
 1677              		.thumb
 1678              		.thumb_func
 1679              		.fpu fpv5-d16
 1681              	HAL_EXTI_D1_ClearFlag:
 1682              	.LFB190:
1057:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
ARM GAS  /tmp/ccIHdivw.s 			page 48


1058:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1059:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1060:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Clears the EXTI's line pending flags for Domain D1
1061:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1062:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0....EXTI_LINE87)excluding :line45, line81,line83 which are reserved
1063:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1064:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1065:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_D1_ClearFlag(uint32_t EXTI_Line)
1066:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1683              		.loc 1 1066 0
 1684              		.cfi_startproc
 1685              		@ args = 0, pretend = 0, frame = 0
 1686              		@ frame_needed = 0, uses_anonymous_args = 0
 1687              		@ link register save eliminated.
 1688              	.LVL55:
 1689 0000 10B4     		push	{r4}
 1690              	.LCFI10:
 1691              		.cfi_def_cfa_offset 4
 1692              		.cfi_offset 4, -4
1067:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
1068:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  assert_param(IS_EXTI_D1_LINE(EXTI_Line));
1069:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  SET_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI_D1->PR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), (uint32_
 1693              		.loc 1 1069 0
 1694 0002 4309     		lsrs	r3, r0, #5
 1695 0004 1B01     		lsls	r3, r3, #4
 1696 0006 064C     		ldr	r4, .L178
 1697 0008 1A59     		ldr	r2, [r3, r4]
 1698 000a 00F01F00 		and	r0, r0, #31
 1699              	.LVL56:
 1700 000e 0121     		movs	r1, #1
 1701 0010 01FA00F0 		lsl	r0, r1, r0
 1702 0014 1043     		orrs	r0, r0, r2
 1703 0016 1851     		str	r0, [r3, r4]
1070:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1071:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1704              		.loc 1 1071 0
 1705 0018 5DF8044B 		ldr	r4, [sp], #4
 1706              	.LCFI11:
 1707              		.cfi_restore 4
 1708              		.cfi_def_cfa_offset 0
 1709 001c 7047     		bx	lr
 1710              	.L179:
 1711 001e 00BF     		.align	2
 1712              	.L178:
 1713 0020 88000058 		.word	1476395144
 1714              		.cfi_endproc
 1715              	.LFE190:
 1717              		.section	.text.HAL_EXTI_D1_EventInputConfig,"ax",%progbits
 1718              		.align	1
 1719              		.global	HAL_EXTI_D1_EventInputConfig
 1720              		.syntax unified
 1721              		.thumb
 1722              		.thumb_func
 1723              		.fpu fpv5-d16
 1725              	HAL_EXTI_D1_EventInputConfig:
 1726              	.LFB191:
1072:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
ARM GAS  /tmp/ccIHdivw.s 			page 49


1073:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
1074:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1075:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Clears the EXTI's line pending flags for Domain D2
1076:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1077:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0....EXTI_LINE87)excluding :line45, line81,line83 which are reserved
1078:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1079:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1080:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_D2_ClearFlag(uint32_t EXTI_Line)
1081:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
1082:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
1083:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  assert_param(IS_EXTI_D2_LINE(EXTI_Line));
1084:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  SET_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI_D2->PR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), (uint32_
1085:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1086:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1087:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
1088:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1089:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Configure the EXTI input event line for Domain D1
1090:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1091:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0....EXTI_LINE87)excluding :line45, line81,line83 which are reserved
1092:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Mode: Specifies which EXTI line is used as interrupt or an event.
1093:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one or a combination of the following values :
1094:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_MODE_IT :  Interrupt Mode selected
1095:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_MODE_EVT : Event Mode selected
1096:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_LineCmd controls (Enable/Disable) the EXTI line.
1097:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1098:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1099:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1100:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_D1_EventInputConfig(uint32_t EXTI_Line , uint32_t EXTI_Mode,  uint32_t EXTI_LineCmd )
1101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1727              		.loc 1 1101 0
 1728              		.cfi_startproc
 1729              		@ args = 0, pretend = 0, frame = 0
 1730              		@ frame_needed = 0, uses_anonymous_args = 0
 1731              		@ link register save eliminated.
 1732              	.LVL57:
 1733 0000 70B4     		push	{r4, r5, r6}
 1734              	.LCFI12:
 1735              		.cfi_def_cfa_offset 12
 1736              		.cfi_offset 4, -12
 1737              		.cfi_offset 5, -8
 1738              		.cfi_offset 6, -4
1102:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
1103:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_D1_LINE(EXTI_Line));
1104:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_MODE_LINE(EXTI_Mode));
1105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1106:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Mode & EXTI_MODE_IT) == EXTI_MODE_IT)
 1739              		.loc 1 1106 0
 1740 0002 11F4803F 		tst	r1, #65536
 1741 0006 0CD0     		beq	.L181
1107:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1108:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      if( EXTI_LineCmd == 0UL)
 1742              		.loc 1 1108 0
 1743 0008 E2B9     		cbnz	r2, .L182
1109:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      {
1110:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****        /* Clear EXTI line configuration */
1111:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****         CLEAR_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI_D1->IMR1)) + ((EXTI_Line >> 5 ) * 0x10UL))
 1744              		.loc 1 1111 0
ARM GAS  /tmp/ccIHdivw.s 			page 50


 1745 000a 1A4B     		ldr	r3, .L187
 1746 000c 03EB5013 		add	r3, r3, r0, lsr #5
 1747 0010 1B01     		lsls	r3, r3, #4
 1748 0012 1C68     		ldr	r4, [r3]
 1749 0014 00F01F06 		and	r6, r0, #31
 1750 0018 0125     		movs	r5, #1
 1751 001a B540     		lsls	r5, r5, r6
 1752 001c 24EA0504 		bic	r4, r4, r5
 1753 0020 1C60     		str	r4, [r3]
 1754              	.L181:
1112:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      }
1113:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      else
1114:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      {
1115:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****         SET_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI_D1->IMR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), 
1116:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      }
1117:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1118:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1119:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Mode & EXTI_MODE_EVT) == EXTI_MODE_EVT)
 1755              		.loc 1 1119 0
 1756 0022 11F4003F 		tst	r1, #131072
 1757 0026 0BD0     		beq	.L180
1120:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1121:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if( EXTI_LineCmd == 0UL)
 1758              		.loc 1 1121 0
 1759 0028 C2B1     		cbz	r2, .L186
1122:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1123:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       /* Clear EXTI line configuration */
1124:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       CLEAR_BIT(  *(__IO uint32_t *) (((uint32_t) &(EXTI_D1->EMR1)) + ((EXTI_Line >> 5 ) * 0x10UL))
1125:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1126:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     else
1127:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1128:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       SET_BIT(  *(__IO uint32_t *) (((uint32_t) &(EXTI_D1->EMR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), 
 1760              		.loc 1 1128 0
 1761 002a 4309     		lsrs	r3, r0, #5
 1762 002c 1B01     		lsls	r3, r3, #4
 1763 002e 124C     		ldr	r4, .L187+4
 1764 0030 1A59     		ldr	r2, [r3, r4]
 1765              	.LVL58:
 1766 0032 00F01F00 		and	r0, r0, #31
 1767              	.LVL59:
 1768 0036 0121     		movs	r1, #1
 1769              	.LVL60:
 1770 0038 01FA00F0 		lsl	r0, r1, r0
 1771 003c 1043     		orrs	r0, r0, r2
 1772 003e 1851     		str	r0, [r3, r4]
 1773              	.L180:
1129:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1130:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1131:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1774              		.loc 1 1131 0
 1775 0040 70BC     		pop	{r4, r5, r6}
 1776              	.LCFI13:
 1777              		.cfi_remember_state
 1778              		.cfi_restore 6
 1779              		.cfi_restore 5
 1780              		.cfi_restore 4
 1781              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccIHdivw.s 			page 51


 1782 0042 7047     		bx	lr
 1783              	.LVL61:
 1784              	.L182:
 1785              	.LCFI14:
 1786              		.cfi_restore_state
1115:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      }
 1787              		.loc 1 1115 0
 1788 0044 0B4B     		ldr	r3, .L187
 1789 0046 03EB5013 		add	r3, r3, r0, lsr #5
 1790 004a 1B01     		lsls	r3, r3, #4
 1791 004c 1C68     		ldr	r4, [r3]
 1792 004e 00F01F06 		and	r6, r0, #31
 1793 0052 0125     		movs	r5, #1
 1794 0054 B540     		lsls	r5, r5, r6
 1795 0056 2C43     		orrs	r4, r4, r5
 1796 0058 1C60     		str	r4, [r3]
 1797 005a E2E7     		b	.L181
 1798              	.L186:
1124:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 1799              		.loc 1 1124 0
 1800 005c 4309     		lsrs	r3, r0, #5
 1801 005e 1B01     		lsls	r3, r3, #4
 1802 0060 0549     		ldr	r1, .L187+4
 1803              	.LVL62:
 1804 0062 5A58     		ldr	r2, [r3, r1]
 1805              	.LVL63:
 1806 0064 00F01F04 		and	r4, r0, #31
 1807 0068 0120     		movs	r0, #1
 1808              	.LVL64:
 1809 006a A040     		lsls	r0, r0, r4
 1810 006c 22EA0000 		bic	r0, r2, r0
 1811 0070 5850     		str	r0, [r3, r1]
 1812 0072 E5E7     		b	.L180
 1813              	.L188:
 1814              		.align	2
 1815              	.L187:
 1816 0074 08008005 		.word	92274696
 1817 0078 84000058 		.word	1476395140
 1818              		.cfi_endproc
 1819              	.LFE191:
 1821              		.section	.text.HAL_EXTI_D3_EventInputConfig,"ax",%progbits
 1822              		.align	1
 1823              		.global	HAL_EXTI_D3_EventInputConfig
 1824              		.syntax unified
 1825              		.thumb
 1826              		.thumb_func
 1827              		.fpu fpv5-d16
 1829              	HAL_EXTI_D3_EventInputConfig:
 1830              	.LFB192:
1132:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1133:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
1134:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1135:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Configure the EXTI input event line for Domain D2
1136:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1137:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0....EXTI_LINE87)excluding :line45, line81,line83 which are reserved
1138:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Mode: Specifies which EXTI line is used as interrupt or an event.
1139:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one or a combination of the following values :
ARM GAS  /tmp/ccIHdivw.s 			page 52


1140:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_MODE_IT :  Interrupt Mode selected
1141:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_MODE_EVT : Event Mode selected
1142:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_LineCmd controls (Enable/Disable) the EXTI line.
1143:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1144:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1145:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1146:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_D2_EventInputConfig(uint32_t EXTI_Line , uint32_t EXTI_Mode,  uint32_t EXTI_LineCmd )
1147:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
1148:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
1149:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_D2_LINE(EXTI_Line));
1150:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_MODE_LINE(EXTI_Mode));
1151:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1152:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Mode & EXTI_MODE_IT) == EXTI_MODE_IT)
1153:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1154:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if( EXTI_LineCmd == 0UL)
1155:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1156:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Clear EXTI line configuration */
1157:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      CLEAR_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI_D2->IMR1)) + ((EXTI_Line >> 5 ) * 0x10UL)),(u
1158:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1159:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     else
1160:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1161:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      SET_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI_D2->IMR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), (ui
1162:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1163:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1164:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1165:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Mode & EXTI_MODE_EVT) == EXTI_MODE_EVT)
1166:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1167:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if( EXTI_LineCmd == 0UL)
1168:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1169:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       /* Clear EXTI line configuration */
1170:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       CLEAR_BIT(  *(__IO uint32_t *) (((uint32_t) &(EXTI_D2->EMR1)) + ((EXTI_Line >> 5 ) * 0x10UL))
1171:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1172:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     else
1173:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1174:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       SET_BIT(  *(__IO uint32_t *) (((uint32_t) &(EXTI_D2->EMR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), 
1175:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1176:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1177:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1178:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
1179:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1180:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1181:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Configure the EXTI input event line for Domain D3
1182:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1183:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0...EXTI_LINE15),(EXTI_LINE19...EXTI_LINE21),EXTI_LINE25, EXTI_LINE34,
1184:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          EXTI_LINE35,EXTI_LINE41,(EXTI_LINE48...EXTI_LINE53)
1185:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_LineCmd controls (Enable/Disable) the EXTI line.
1186:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_ClearSrc: Specifies the clear source of D3 pending event.
1187:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one of the following values :
1188:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg BDMA_CH6_CLEAR : BDMA ch6 event selected as D3 domain pendclear source
1189:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg BDMA_CH7_CLEAR : BDMA ch7 event selected as D3 domain pendclear source
1190:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg LPTIM4_OUT_CLEAR : LPTIM4 out selected as D3 domain pendclear source
1191:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg LPTIM5_OUT_CLEAR : LPTIM5 out selected as D3 domain pendclear source
1192:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1193:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1194:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_D3_EventInputConfig(uint32_t EXTI_Line, uint32_t EXTI_LineCmd , uint32_t EXTI_ClearSr
1195:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1831              		.loc 1 1195 0
ARM GAS  /tmp/ccIHdivw.s 			page 53


 1832              		.cfi_startproc
 1833              		@ args = 0, pretend = 0, frame = 0
 1834              		@ frame_needed = 0, uses_anonymous_args = 0
 1835              		@ link register save eliminated.
 1836              	.LVL65:
 1837 0000 70B4     		push	{r4, r5, r6}
 1838              	.LCFI15:
 1839              		.cfi_def_cfa_offset 12
 1840              		.cfi_offset 4, -12
 1841              		.cfi_offset 5, -8
 1842              		.cfi_offset 6, -4
1196:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __IO uint32_t *pRegv;
1197:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1198:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
1199:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_D3_LINE(EXTI_Line));
1200:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_D3_CLEAR(EXTI_ClearSrc));
1201:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1202:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( EXTI_LineCmd == 0UL)
 1843              		.loc 1 1202 0
 1844 0002 F9B9     		cbnz	r1, .L190
1203:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1204:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Clear EXTI line configuration */
1205:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     CLEAR_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI->D3PMR1)) + ((EXTI_Line >> 5 ) * 0x20UL)),(uin
 1845              		.loc 1 1205 0
 1846 0004 20F01F03 		bic	r3, r0, #31
 1847 0008 164D     		ldr	r5, .L196
 1848 000a 5959     		ldr	r1, [r3, r5]
 1849              	.LVL66:
 1850 000c 00F01F06 		and	r6, r0, #31
 1851 0010 0124     		movs	r4, #1
 1852 0012 B440     		lsls	r4, r4, r6
 1853 0014 21EA0401 		bic	r1, r1, r4
 1854 0018 5951     		str	r1, [r3, r5]
 1855              	.L191:
1206:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1207:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   else
1208:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1209:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     SET_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI->D3PMR1)) +((EXTI_Line >> 5 ) * 0x20UL)), (uint3
1210:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1211:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1212:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if(((EXTI_Line>>4)%2UL) == 0UL)
 1856              		.loc 1 1212 0
 1857 001a 10F0100F 		tst	r0, #16
 1858 001e 1CD0     		beq	.L195
1213:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1214:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     pRegv = (__IO uint32_t *) (((uint32_t) &(EXTI->D3PCR1L)) + ((EXTI_Line >> 5 ) * 0x20UL));
1215:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1216:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   else
1217:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1218:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     pRegv = (__IO uint32_t *) (((uint32_t) &(EXTI->D3PCR1H)) + ((EXTI_Line >> 5 ) * 0x20UL));
 1859              		.loc 1 1218 0
 1860 0020 20F01F03 		bic	r3, r0, #31
 1861 0024 1049     		ldr	r1, .L196+4
 1862 0026 1944     		add	r1, r1, r3
 1863              	.LVL67:
 1864              	.L193:
1219:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
ARM GAS  /tmp/ccIHdivw.s 			page 54


1220:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(*pRegv, (uint32_t)(3UL << ((EXTI_Line*2UL) & 0x1FUL)), (uint32_t)(EXTI_ClearSrc << ((E
 1865              		.loc 1 1220 0
 1866 0028 0B68     		ldr	r3, [r1]
 1867 002a 4000     		lsls	r0, r0, #1
 1868              	.LVL68:
 1869 002c 00F01E00 		and	r0, r0, #30
 1870 0030 0324     		movs	r4, #3
 1871 0032 8440     		lsls	r4, r4, r0
 1872 0034 23EA0403 		bic	r3, r3, r4
 1873 0038 02FA00F0 		lsl	r0, r2, r0
 1874 003c 1843     		orrs	r0, r0, r3
 1875 003e 0860     		str	r0, [r1]
1221:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1222:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1876              		.loc 1 1222 0
 1877 0040 70BC     		pop	{r4, r5, r6}
 1878              	.LCFI16:
 1879              		.cfi_remember_state
 1880              		.cfi_restore 6
 1881              		.cfi_restore 5
 1882              		.cfi_restore 4
 1883              		.cfi_def_cfa_offset 0
 1884 0042 7047     		bx	lr
 1885              	.LVL69:
 1886              	.L190:
 1887              	.LCFI17:
 1888              		.cfi_restore_state
1209:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 1889              		.loc 1 1209 0
 1890 0044 20F01F03 		bic	r3, r0, #31
 1891 0048 064D     		ldr	r5, .L196
 1892 004a 5959     		ldr	r1, [r3, r5]
 1893              	.LVL70:
 1894 004c 00F01F06 		and	r6, r0, #31
 1895 0050 0124     		movs	r4, #1
 1896 0052 B440     		lsls	r4, r4, r6
 1897 0054 2143     		orrs	r1, r1, r4
 1898 0056 5951     		str	r1, [r3, r5]
 1899 0058 DFE7     		b	.L191
 1900              	.L195:
1214:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 1901              		.loc 1 1214 0
 1902 005a 20F01F03 		bic	r3, r0, #31
 1903 005e 0349     		ldr	r1, .L196+8
 1904 0060 1944     		add	r1, r1, r3
 1905              	.LVL71:
 1906 0062 E1E7     		b	.L193
 1907              	.L197:
 1908              		.align	2
 1909              	.L196:
 1910 0064 0C000058 		.word	1476395020
 1911 0068 14000058 		.word	1476395028
 1912 006c 10000058 		.word	1476395024
 1913              		.cfi_endproc
 1914              	.LFE192:
 1916              		.global	uwTickFreq
 1917              		.global	uwTickPrio
ARM GAS  /tmp/ccIHdivw.s 			page 55


 1918              		.comm	uwTick,4,4
 1919              		.section	.data.uwTickFreq,"aw",%progbits
 1920              		.set	.LANCHOR0,. + 0
 1923              	uwTickFreq:
 1924 0000 01       		.byte	1
 1925              		.section	.data.uwTickPrio,"aw",%progbits
 1926              		.align	2
 1927              		.set	.LANCHOR1,. + 0
 1930              	uwTickPrio:
 1931 0000 10000000 		.word	16
 1932              		.text
 1933              	.Letext0:
 1934              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1935              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1936              		.file 4 "Libraries/CMSIS/Include/core_cm7.h"
 1937              		.file 5 "Libraries/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 1938              		.file 6 "Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 1939              		.file 7 "/usr/include/newlib/sys/lock.h"
 1940              		.file 8 "/usr/include/newlib/sys/_types.h"
 1941              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 1942              		.file 10 "/usr/include/newlib/sys/reent.h"
 1943              		.file 11 "/usr/include/newlib/math.h"
 1944              		.file 12 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1945              		.file 13 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 1946              		.file 14 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 1947              		.file 15 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
 1948              		.file 16 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
ARM GAS  /tmp/ccIHdivw.s 			page 56


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal.c
     /tmp/ccIHdivw.s:17     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccIHdivw.s:24     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccIHdivw.s:37     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccIHdivw.s:44     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccIHdivw.s:56     .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccIHdivw.s:63     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccIHdivw.s:123    .text.HAL_DeInit:0000000000000058 $d
     /tmp/ccIHdivw.s:128    .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccIHdivw.s:135    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccIHdivw.s:199    .text.HAL_InitTick:0000000000000044 $d
     /tmp/ccIHdivw.s:206    .text.HAL_Init:0000000000000000 $t
     /tmp/ccIHdivw.s:213    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccIHdivw.s:269    .text.HAL_Init:000000000000004c $d
     /tmp/ccIHdivw.s:277    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccIHdivw.s:284    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccIHdivw.s:302    .text.HAL_IncTick:0000000000000010 $d
                            *COM*:0000000000000004 uwTick
     /tmp/ccIHdivw.s:308    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccIHdivw.s:315    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccIHdivw.s:330    .text.HAL_GetTick:0000000000000008 $d
     /tmp/ccIHdivw.s:335    .text.HAL_GetTickPrio:0000000000000000 $t
     /tmp/ccIHdivw.s:342    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
     /tmp/ccIHdivw.s:356    .text.HAL_GetTickPrio:0000000000000008 $d
     /tmp/ccIHdivw.s:361    .text.HAL_SetTickFreq:0000000000000000 $t
     /tmp/ccIHdivw.s:368    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
     /tmp/ccIHdivw.s:406    .text.HAL_SetTickFreq:000000000000001c $d
     /tmp/ccIHdivw.s:412    .text.HAL_GetTickFreq:0000000000000000 $t
     /tmp/ccIHdivw.s:419    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
     /tmp/ccIHdivw.s:433    .text.HAL_GetTickFreq:0000000000000008 $d
     /tmp/ccIHdivw.s:438    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccIHdivw.s:445    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccIHdivw.s:486    .text.HAL_Delay:0000000000000024 $d
     /tmp/ccIHdivw.s:491    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccIHdivw.s:498    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccIHdivw.s:514    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/ccIHdivw.s:519    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccIHdivw.s:526    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccIHdivw.s:542    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/ccIHdivw.s:547    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccIHdivw.s:554    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccIHdivw.s:568    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccIHdivw.s:575    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccIHdivw.s:591    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/ccIHdivw.s:596    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccIHdivw.s:603    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccIHdivw.s:619    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/ccIHdivw.s:624    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/ccIHdivw.s:631    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/ccIHdivw.s:645    .text.HAL_GetUIDw0:0000000000000008 $d
     /tmp/ccIHdivw.s:650    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/ccIHdivw.s:657    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/ccIHdivw.s:671    .text.HAL_GetUIDw1:0000000000000008 $d
     /tmp/ccIHdivw.s:676    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/ccIHdivw.s:683    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
     /tmp/ccIHdivw.s:697    .text.HAL_GetUIDw2:0000000000000008 $d
ARM GAS  /tmp/ccIHdivw.s 			page 57


     /tmp/ccIHdivw.s:702    .text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig:0000000000000000 $t
     /tmp/ccIHdivw.s:709    .text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig:0000000000000000 HAL_SYSCFG_VREFBUF_VoltageScalingConfig
     /tmp/ccIHdivw.s:728    .text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig:0000000000000010 $d
     /tmp/ccIHdivw.s:733    .text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig:0000000000000000 $t
     /tmp/ccIHdivw.s:740    .text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig:0000000000000000 HAL_SYSCFG_VREFBUF_HighImpedanceConfig
     /tmp/ccIHdivw.s:759    .text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig:0000000000000010 $d
     /tmp/ccIHdivw.s:764    .text.HAL_SYSCFG_VREFBUF_TrimmingConfig:0000000000000000 $t
     /tmp/ccIHdivw.s:771    .text.HAL_SYSCFG_VREFBUF_TrimmingConfig:0000000000000000 HAL_SYSCFG_VREFBUF_TrimmingConfig
     /tmp/ccIHdivw.s:790    .text.HAL_SYSCFG_VREFBUF_TrimmingConfig:0000000000000010 $d
     /tmp/ccIHdivw.s:795    .text.HAL_SYSCFG_EnableVREFBUF:0000000000000000 $t
     /tmp/ccIHdivw.s:802    .text.HAL_SYSCFG_EnableVREFBUF:0000000000000000 HAL_SYSCFG_EnableVREFBUF
     /tmp/ccIHdivw.s:848    .text.HAL_SYSCFG_EnableVREFBUF:0000000000000030 $d
     /tmp/ccIHdivw.s:853    .text.HAL_SYSCFG_DisableVREFBUF:0000000000000000 $t
     /tmp/ccIHdivw.s:860    .text.HAL_SYSCFG_DisableVREFBUF:0000000000000000 HAL_SYSCFG_DisableVREFBUF
     /tmp/ccIHdivw.s:876    .text.HAL_SYSCFG_DisableVREFBUF:000000000000000c $d
     /tmp/ccIHdivw.s:881    .text.HAL_SYSCFG_ETHInterfaceSelect:0000000000000000 $t
     /tmp/ccIHdivw.s:888    .text.HAL_SYSCFG_ETHInterfaceSelect:0000000000000000 HAL_SYSCFG_ETHInterfaceSelect
     /tmp/ccIHdivw.s:907    .text.HAL_SYSCFG_ETHInterfaceSelect:0000000000000010 $d
     /tmp/ccIHdivw.s:912    .text.HAL_SYSCFG_AnalogSwitchConfig:0000000000000000 $t
     /tmp/ccIHdivw.s:919    .text.HAL_SYSCFG_AnalogSwitchConfig:0000000000000000 HAL_SYSCFG_AnalogSwitchConfig
     /tmp/ccIHdivw.s:938    .text.HAL_SYSCFG_AnalogSwitchConfig:0000000000000010 $d
     /tmp/ccIHdivw.s:943    .text.HAL_SYSCFG_EnableBOOST:0000000000000000 $t
     /tmp/ccIHdivw.s:950    .text.HAL_SYSCFG_EnableBOOST:0000000000000000 HAL_SYSCFG_EnableBOOST
     /tmp/ccIHdivw.s:966    .text.HAL_SYSCFG_EnableBOOST:000000000000000c $d
     /tmp/ccIHdivw.s:971    .text.HAL_SYSCFG_DisableBOOST:0000000000000000 $t
     /tmp/ccIHdivw.s:978    .text.HAL_SYSCFG_DisableBOOST:0000000000000000 HAL_SYSCFG_DisableBOOST
     /tmp/ccIHdivw.s:994    .text.HAL_SYSCFG_DisableBOOST:000000000000000c $d
     /tmp/ccIHdivw.s:999    .text.HAL_SYSCFG_CM7BootAddConfig:0000000000000000 $t
     /tmp/ccIHdivw.s:1006   .text.HAL_SYSCFG_CM7BootAddConfig:0000000000000000 HAL_SYSCFG_CM7BootAddConfig
     /tmp/ccIHdivw.s:1040   .text.HAL_SYSCFG_CM7BootAddConfig:000000000000002c $d
     /tmp/ccIHdivw.s:1046   .text.HAL_EnableCompensationCell:0000000000000000 $t
     /tmp/ccIHdivw.s:1053   .text.HAL_EnableCompensationCell:0000000000000000 HAL_EnableCompensationCell
     /tmp/ccIHdivw.s:1069   .text.HAL_EnableCompensationCell:000000000000000c $d
     /tmp/ccIHdivw.s:1074   .text.HAL_DisableCompensationCell:0000000000000000 $t
     /tmp/ccIHdivw.s:1081   .text.HAL_DisableCompensationCell:0000000000000000 HAL_DisableCompensationCell
     /tmp/ccIHdivw.s:1097   .text.HAL_DisableCompensationCell:000000000000000c $d
     /tmp/ccIHdivw.s:1102   .text.HAL_SYSCFG_EnableIOSpeedOptimize:0000000000000000 $t
     /tmp/ccIHdivw.s:1109   .text.HAL_SYSCFG_EnableIOSpeedOptimize:0000000000000000 HAL_SYSCFG_EnableIOSpeedOptimize
     /tmp/ccIHdivw.s:1125   .text.HAL_SYSCFG_EnableIOSpeedOptimize:000000000000000c $d
     /tmp/ccIHdivw.s:1130   .text.HAL_SYSCFG_DisableIOSpeedOptimize:0000000000000000 $t
     /tmp/ccIHdivw.s:1137   .text.HAL_SYSCFG_DisableIOSpeedOptimize:0000000000000000 HAL_SYSCFG_DisableIOSpeedOptimize
     /tmp/ccIHdivw.s:1153   .text.HAL_SYSCFG_DisableIOSpeedOptimize:000000000000000c $d
     /tmp/ccIHdivw.s:1158   .text.HAL_SYSCFG_CompensationCodeSelect:0000000000000000 $t
     /tmp/ccIHdivw.s:1165   .text.HAL_SYSCFG_CompensationCodeSelect:0000000000000000 HAL_SYSCFG_CompensationCodeSelect
     /tmp/ccIHdivw.s:1184   .text.HAL_SYSCFG_CompensationCodeSelect:0000000000000010 $d
     /tmp/ccIHdivw.s:1189   .text.HAL_SYSCFG_CompensationCodeConfig:0000000000000000 $t
     /tmp/ccIHdivw.s:1196   .text.HAL_SYSCFG_CompensationCodeConfig:0000000000000000 HAL_SYSCFG_CompensationCodeConfig
     /tmp/ccIHdivw.s:1216   .text.HAL_SYSCFG_CompensationCodeConfig:0000000000000014 $d
     /tmp/ccIHdivw.s:1221   .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/ccIHdivw.s:1228   .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/ccIHdivw.s:1244   .text.HAL_DBGMCU_EnableDBGSleepMode:000000000000000c $d
     /tmp/ccIHdivw.s:1249   .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/ccIHdivw.s:1256   .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/ccIHdivw.s:1272   .text.HAL_DBGMCU_DisableDBGSleepMode:000000000000000c $d
     /tmp/ccIHdivw.s:1277   .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccIHdivw.s:1284   .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccIHdivw.s:1300   .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
ARM GAS  /tmp/ccIHdivw.s 			page 58


     /tmp/ccIHdivw.s:1305   .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccIHdivw.s:1312   .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccIHdivw.s:1328   .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/ccIHdivw.s:1333   .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccIHdivw.s:1340   .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccIHdivw.s:1356   .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/ccIHdivw.s:1361   .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/ccIHdivw.s:1368   .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccIHdivw.s:1384   .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
     /tmp/ccIHdivw.s:1389   .text.HAL_EnableDomain3DBGStopMode:0000000000000000 $t
     /tmp/ccIHdivw.s:1396   .text.HAL_EnableDomain3DBGStopMode:0000000000000000 HAL_EnableDomain3DBGStopMode
     /tmp/ccIHdivw.s:1412   .text.HAL_EnableDomain3DBGStopMode:000000000000000c $d
     /tmp/ccIHdivw.s:1417   .text.HAL_DisableDomain3DBGStopMode:0000000000000000 $t
     /tmp/ccIHdivw.s:1424   .text.HAL_DisableDomain3DBGStopMode:0000000000000000 HAL_DisableDomain3DBGStopMode
     /tmp/ccIHdivw.s:1440   .text.HAL_DisableDomain3DBGStopMode:000000000000000c $d
     /tmp/ccIHdivw.s:1445   .text.HAL_EnableDomain3DBGStandbyMode:0000000000000000 $t
     /tmp/ccIHdivw.s:1452   .text.HAL_EnableDomain3DBGStandbyMode:0000000000000000 HAL_EnableDomain3DBGStandbyMode
     /tmp/ccIHdivw.s:1468   .text.HAL_EnableDomain3DBGStandbyMode:000000000000000c $d
     /tmp/ccIHdivw.s:1473   .text.HAL_DisableDomain3DBGStandbyMode:0000000000000000 $t
     /tmp/ccIHdivw.s:1480   .text.HAL_DisableDomain3DBGStandbyMode:0000000000000000 HAL_DisableDomain3DBGStandbyMode
     /tmp/ccIHdivw.s:1496   .text.HAL_DisableDomain3DBGStandbyMode:000000000000000c $d
     /tmp/ccIHdivw.s:1501   .text.HAL_SetFMCMemorySwappingConfig:0000000000000000 $t
     /tmp/ccIHdivw.s:1508   .text.HAL_SetFMCMemorySwappingConfig:0000000000000000 HAL_SetFMCMemorySwappingConfig
     /tmp/ccIHdivw.s:1527   .text.HAL_SetFMCMemorySwappingConfig:0000000000000010 $d
     /tmp/ccIHdivw.s:1532   .text.HAL_GetFMCMemorySwappingConfig:0000000000000000 $t
     /tmp/ccIHdivw.s:1539   .text.HAL_GetFMCMemorySwappingConfig:0000000000000000 HAL_GetFMCMemorySwappingConfig
     /tmp/ccIHdivw.s:1555   .text.HAL_GetFMCMemorySwappingConfig:000000000000000c $d
     /tmp/ccIHdivw.s:1560   .text.HAL_EXTI_EdgeConfig:0000000000000000 $t
     /tmp/ccIHdivw.s:1567   .text.HAL_EXTI_EdgeConfig:0000000000000000 HAL_EXTI_EdgeConfig
     /tmp/ccIHdivw.s:1626   .text.HAL_EXTI_EdgeConfig:0000000000000044 $d
     /tmp/ccIHdivw.s:1631   .text.HAL_EXTI_GenerateSWInterrupt:0000000000000000 $t
     /tmp/ccIHdivw.s:1638   .text.HAL_EXTI_GenerateSWInterrupt:0000000000000000 HAL_EXTI_GenerateSWInterrupt
     /tmp/ccIHdivw.s:1669   .text.HAL_EXTI_GenerateSWInterrupt:0000000000000020 $d
     /tmp/ccIHdivw.s:1674   .text.HAL_EXTI_D1_ClearFlag:0000000000000000 $t
     /tmp/ccIHdivw.s:1681   .text.HAL_EXTI_D1_ClearFlag:0000000000000000 HAL_EXTI_D1_ClearFlag
     /tmp/ccIHdivw.s:1713   .text.HAL_EXTI_D1_ClearFlag:0000000000000020 $d
     /tmp/ccIHdivw.s:1718   .text.HAL_EXTI_D1_EventInputConfig:0000000000000000 $t
     /tmp/ccIHdivw.s:1725   .text.HAL_EXTI_D1_EventInputConfig:0000000000000000 HAL_EXTI_D1_EventInputConfig
     /tmp/ccIHdivw.s:1816   .text.HAL_EXTI_D1_EventInputConfig:0000000000000074 $d
     /tmp/ccIHdivw.s:1822   .text.HAL_EXTI_D3_EventInputConfig:0000000000000000 $t
     /tmp/ccIHdivw.s:1829   .text.HAL_EXTI_D3_EventInputConfig:0000000000000000 HAL_EXTI_D3_EventInputConfig
     /tmp/ccIHdivw.s:1910   .text.HAL_EXTI_D3_EventInputConfig:0000000000000064 $d
     /tmp/ccIHdivw.s:1923   .data.uwTickFreq:0000000000000000 uwTickFreq
     /tmp/ccIHdivw.s:1930   .data.uwTickPrio:0000000000000000 uwTickPrio
     /tmp/ccIHdivw.s:1926   .data.uwTickPrio:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
HAL_RCC_GetSysClockFreq
D1CorePrescTable
SystemD2Clock
