ARM GAS  /tmp/ccjUzxnW.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_it.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.NMI_Handler,"ax",%progbits
  17              		.align	1
  18              		.global	NMI_Handler
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	NMI_Handler:
  25              	.LFB141:
  26              		.file 1 "User/stm32h7xx_it.c"
   1:User/stm32h7xx_it.c **** /**
   2:User/stm32h7xx_it.c ****   ******************************************************************************
   3:User/stm32h7xx_it.c ****   * @file    stm32h7xx_it.c
   4:User/stm32h7xx_it.c ****   * @brief   Interrupt Service Routines.
   5:User/stm32h7xx_it.c ****   ******************************************************************************
   6:User/stm32h7xx_it.c ****   *
   7:User/stm32h7xx_it.c ****   * COPYRIGHT(c) 2018 STMicroelectronics
   8:User/stm32h7xx_it.c ****   *
   9:User/stm32h7xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:User/stm32h7xx_it.c ****   * are permitted provided that the following conditions are met:
  11:User/stm32h7xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:User/stm32h7xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:User/stm32h7xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:User/stm32h7xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:User/stm32h7xx_it.c ****   *      and/or other materials provided with the distribution.
  16:User/stm32h7xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:User/stm32h7xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:User/stm32h7xx_it.c ****   *      without specific prior written permission.
  19:User/stm32h7xx_it.c ****   *
  20:User/stm32h7xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:User/stm32h7xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:User/stm32h7xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:User/stm32h7xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:User/stm32h7xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:User/stm32h7xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:User/stm32h7xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:User/stm32h7xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:User/stm32h7xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:User/stm32h7xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:User/stm32h7xx_it.c ****   *
  31:User/stm32h7xx_it.c ****   ******************************************************************************
  32:User/stm32h7xx_it.c ****   */
ARM GAS  /tmp/ccjUzxnW.s 			page 2


  33:User/stm32h7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:User/stm32h7xx_it.c **** #include "stm32h7xx_hal.h"
  35:User/stm32h7xx_it.c **** #include "stm32h7xx.h"
  36:User/stm32h7xx_it.c **** #include "stm32h7xx_it.h"
  37:User/stm32h7xx_it.c **** 
  38:User/stm32h7xx_it.c **** /* USER CODE BEGIN 0 */
  39:User/stm32h7xx_it.c **** 
  40:User/stm32h7xx_it.c **** /* USER CODE END 0 */
  41:User/stm32h7xx_it.c **** 
  42:User/stm32h7xx_it.c **** /* External variables --------------------------------------------------------*/
  43:User/stm32h7xx_it.c **** 
  44:User/stm32h7xx_it.c **** /******************************************************************************/
  45:User/stm32h7xx_it.c **** /*            Cortex Processor Interruption and Exception Handlers         */ 
  46:User/stm32h7xx_it.c **** /******************************************************************************/
  47:User/stm32h7xx_it.c **** 
  48:User/stm32h7xx_it.c **** /**
  49:User/stm32h7xx_it.c **** * @brief This function handles Non maskable interrupt.
  50:User/stm32h7xx_it.c **** */
  51:User/stm32h7xx_it.c **** void NMI_Handler(void)
  52:User/stm32h7xx_it.c **** {
  27              		.loc 1 52 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 7047     		bx	lr
  33              		.cfi_endproc
  34              	.LFE141:
  36              		.section	.text.HardFault_Handler,"ax",%progbits
  37              		.align	1
  38              		.global	HardFault_Handler
  39              		.syntax unified
  40              		.thumb
  41              		.thumb_func
  42              		.fpu fpv5-d16
  44              	HardFault_Handler:
  45              	.LFB142:
  53:User/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  54:User/stm32h7xx_it.c **** 
  55:User/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  56:User/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  57:User/stm32h7xx_it.c **** 
  58:User/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  59:User/stm32h7xx_it.c **** }
  60:User/stm32h7xx_it.c **** 
  61:User/stm32h7xx_it.c **** /**
  62:User/stm32h7xx_it.c **** * @brief This function handles Hard fault interrupt.
  63:User/stm32h7xx_it.c **** */
  64:User/stm32h7xx_it.c **** void HardFault_Handler(void)
  65:User/stm32h7xx_it.c **** {
  46              		.loc 1 65 0
  47              		.cfi_startproc
  48              		@ Volatile: function does not return.
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52              	.L3:
ARM GAS  /tmp/ccjUzxnW.s 			page 3


  53 0000 FEE7     		b	.L3
  54              		.cfi_endproc
  55              	.LFE142:
  57              		.section	.text.MemManage_Handler,"ax",%progbits
  58              		.align	1
  59              		.global	MemManage_Handler
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu fpv5-d16
  65              	MemManage_Handler:
  66              	.LFB143:
  66:User/stm32h7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  67:User/stm32h7xx_it.c **** 
  68:User/stm32h7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  69:User/stm32h7xx_it.c ****   while (1)
  70:User/stm32h7xx_it.c ****   {
  71:User/stm32h7xx_it.c ****   }
  72:User/stm32h7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  73:User/stm32h7xx_it.c **** 
  74:User/stm32h7xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  75:User/stm32h7xx_it.c **** }
  76:User/stm32h7xx_it.c **** 
  77:User/stm32h7xx_it.c **** /**
  78:User/stm32h7xx_it.c **** * @brief This function handles Memory management fault.
  79:User/stm32h7xx_it.c **** */
  80:User/stm32h7xx_it.c **** void MemManage_Handler(void)
  81:User/stm32h7xx_it.c **** {
  67              		.loc 1 81 0
  68              		.cfi_startproc
  69              		@ Volatile: function does not return.
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              		@ link register save eliminated.
  73              	.L5:
  74 0000 FEE7     		b	.L5
  75              		.cfi_endproc
  76              	.LFE143:
  78              		.section	.text.BusFault_Handler,"ax",%progbits
  79              		.align	1
  80              		.global	BusFault_Handler
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu fpv5-d16
  86              	BusFault_Handler:
  87              	.LFB144:
  82:User/stm32h7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  83:User/stm32h7xx_it.c **** 
  84:User/stm32h7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
  85:User/stm32h7xx_it.c ****   while (1)
  86:User/stm32h7xx_it.c ****   {
  87:User/stm32h7xx_it.c ****   }
  88:User/stm32h7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 1 */
  89:User/stm32h7xx_it.c **** 
  90:User/stm32h7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 1 */
  91:User/stm32h7xx_it.c **** }
ARM GAS  /tmp/ccjUzxnW.s 			page 4


  92:User/stm32h7xx_it.c **** 
  93:User/stm32h7xx_it.c **** /**
  94:User/stm32h7xx_it.c **** * @brief This function handles Pre-fetch fault, memory access fault.
  95:User/stm32h7xx_it.c **** */
  96:User/stm32h7xx_it.c **** void BusFault_Handler(void)
  97:User/stm32h7xx_it.c **** {
  88              		.loc 1 97 0
  89              		.cfi_startproc
  90              		@ Volatile: function does not return.
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  94              	.L7:
  95 0000 FEE7     		b	.L7
  96              		.cfi_endproc
  97              	.LFE144:
  99              		.section	.text.UsageFault_Handler,"ax",%progbits
 100              		.align	1
 101              		.global	UsageFault_Handler
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 105              		.fpu fpv5-d16
 107              	UsageFault_Handler:
 108              	.LFB145:
  98:User/stm32h7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
  99:User/stm32h7xx_it.c **** 
 100:User/stm32h7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 101:User/stm32h7xx_it.c ****   while (1)
 102:User/stm32h7xx_it.c ****   {
 103:User/stm32h7xx_it.c ****   }
 104:User/stm32h7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 1 */
 105:User/stm32h7xx_it.c **** 
 106:User/stm32h7xx_it.c ****   /* USER CODE END BusFault_IRQn 1 */
 107:User/stm32h7xx_it.c **** }
 108:User/stm32h7xx_it.c **** 
 109:User/stm32h7xx_it.c **** /**
 110:User/stm32h7xx_it.c **** * @brief This function handles Undefined instruction or illegal state.
 111:User/stm32h7xx_it.c **** */
 112:User/stm32h7xx_it.c **** void UsageFault_Handler(void)
 113:User/stm32h7xx_it.c **** {
 109              		.loc 1 113 0
 110              		.cfi_startproc
 111              		@ Volatile: function does not return.
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114              		@ link register save eliminated.
 115              	.L9:
 116 0000 FEE7     		b	.L9
 117              		.cfi_endproc
 118              	.LFE145:
 120              		.section	.text.SVC_Handler,"ax",%progbits
 121              		.align	1
 122              		.global	SVC_Handler
 123              		.syntax unified
 124              		.thumb
 125              		.thumb_func
ARM GAS  /tmp/ccjUzxnW.s 			page 5


 126              		.fpu fpv5-d16
 128              	SVC_Handler:
 129              	.LFB146:
 114:User/stm32h7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 115:User/stm32h7xx_it.c **** 
 116:User/stm32h7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 117:User/stm32h7xx_it.c ****   while (1)
 118:User/stm32h7xx_it.c ****   {
 119:User/stm32h7xx_it.c ****   }
 120:User/stm32h7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 1 */
 121:User/stm32h7xx_it.c **** 
 122:User/stm32h7xx_it.c ****   /* USER CODE END UsageFault_IRQn 1 */
 123:User/stm32h7xx_it.c **** }
 124:User/stm32h7xx_it.c **** 
 125:User/stm32h7xx_it.c **** /**
 126:User/stm32h7xx_it.c **** * @brief This function handles System service call via SWI instruction.
 127:User/stm32h7xx_it.c **** */
 128:User/stm32h7xx_it.c **** void SVC_Handler(void)
 129:User/stm32h7xx_it.c **** {
 130              		.loc 1 129 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 135 0000 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE146:
 139              		.section	.text.DebugMon_Handler,"ax",%progbits
 140              		.align	1
 141              		.global	DebugMon_Handler
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv5-d16
 147              	DebugMon_Handler:
 148              	.LFB147:
 130:User/stm32h7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 131:User/stm32h7xx_it.c **** 
 132:User/stm32h7xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 133:User/stm32h7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 134:User/stm32h7xx_it.c **** 
 135:User/stm32h7xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 136:User/stm32h7xx_it.c **** }
 137:User/stm32h7xx_it.c **** 
 138:User/stm32h7xx_it.c **** /**
 139:User/stm32h7xx_it.c **** * @brief This function handles Debug monitor.
 140:User/stm32h7xx_it.c **** */
 141:User/stm32h7xx_it.c **** void DebugMon_Handler(void)
 142:User/stm32h7xx_it.c **** {
 149              		.loc 1 142 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 154 0000 7047     		bx	lr
 155              		.cfi_endproc
 156              	.LFE147:
ARM GAS  /tmp/ccjUzxnW.s 			page 6


 158              		.section	.text.PendSV_Handler,"ax",%progbits
 159              		.align	1
 160              		.global	PendSV_Handler
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 164              		.fpu fpv5-d16
 166              	PendSV_Handler:
 167              	.LFB148:
 143:User/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 144:User/stm32h7xx_it.c **** 
 145:User/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 146:User/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 147:User/stm32h7xx_it.c **** 
 148:User/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 149:User/stm32h7xx_it.c **** }
 150:User/stm32h7xx_it.c **** 
 151:User/stm32h7xx_it.c **** /**
 152:User/stm32h7xx_it.c **** * @brief This function handles Pendable request for system service.
 153:User/stm32h7xx_it.c **** */
 154:User/stm32h7xx_it.c **** void PendSV_Handler(void)
 155:User/stm32h7xx_it.c **** {
 168              		.loc 1 155 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 173 0000 7047     		bx	lr
 174              		.cfi_endproc
 175              	.LFE148:
 177              		.section	.text.SysTick_Handler,"ax",%progbits
 178              		.align	1
 179              		.global	SysTick_Handler
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 183              		.fpu fpv5-d16
 185              	SysTick_Handler:
 186              	.LFB149:
 156:User/stm32h7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 157:User/stm32h7xx_it.c **** 
 158:User/stm32h7xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 159:User/stm32h7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 160:User/stm32h7xx_it.c **** 
 161:User/stm32h7xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 162:User/stm32h7xx_it.c **** }
 163:User/stm32h7xx_it.c **** 
 164:User/stm32h7xx_it.c **** /**
 165:User/stm32h7xx_it.c **** * @brief This function handles System tick timer.
 166:User/stm32h7xx_it.c **** */
 167:User/stm32h7xx_it.c **** void SysTick_Handler(void)
 168:User/stm32h7xx_it.c **** {
 187              		.loc 1 168 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191              		.loc 1 168 0
ARM GAS  /tmp/ccjUzxnW.s 			page 7


 192 0000 08B5     		push	{r3, lr}
 193              	.LCFI0:
 194              		.cfi_def_cfa_offset 8
 195              		.cfi_offset 3, -8
 196              		.cfi_offset 14, -4
 169:User/stm32h7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 170:User/stm32h7xx_it.c **** 
 171:User/stm32h7xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 172:User/stm32h7xx_it.c ****   HAL_SYSTICK_IRQHandler();
 197              		.loc 1 172 0
 198 0002 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 199              	.LVL0:
 200 0006 08BD     		pop	{r3, pc}
 201              		.cfi_endproc
 202              	.LFE149:
 204              		.text
 205              	.Letext0:
 206              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 207              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 208              		.file 4 "Libraries/CMSIS/Include/core_cm7.h"
 209              		.file 5 "Libraries/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 210              		.file 6 "/usr/include/newlib/sys/lock.h"
 211              		.file 7 "/usr/include/newlib/sys/_types.h"
 212              		.file 8 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 213              		.file 9 "/usr/include/newlib/sys/reent.h"
 214              		.file 10 "/usr/include/newlib/math.h"
 215              		.file 11 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 216              		.file 12 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 217              		.file 13 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 218              		.file 14 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
ARM GAS  /tmp/ccjUzxnW.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_it.c
     /tmp/ccjUzxnW.s:17     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccjUzxnW.s:24     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccjUzxnW.s:37     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccjUzxnW.s:44     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccjUzxnW.s:58     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccjUzxnW.s:65     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccjUzxnW.s:79     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccjUzxnW.s:86     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccjUzxnW.s:100    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccjUzxnW.s:107    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccjUzxnW.s:121    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccjUzxnW.s:128    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccjUzxnW.s:140    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccjUzxnW.s:147    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccjUzxnW.s:159    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccjUzxnW.s:166    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccjUzxnW.s:178    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccjUzxnW.s:185    .text.SysTick_Handler:0000000000000000 SysTick_Handler
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_IRQHandler
