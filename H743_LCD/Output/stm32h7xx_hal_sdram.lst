ARM GAS  /tmp/ccXcuiRz.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_sdram.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_SDRAM_MspInit,"ax",%progbits
  17              		.align	1
  18              		.weak	HAL_SDRAM_MspInit
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	HAL_SDRAM_MspInit:
  25              	.LFB143:
  26              		.file 1 "Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c"
   1:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
   2:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   ******************************************************************************
   3:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @file    stm32h7xx_hal_sdram.c
   4:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @author  MCD Application Team
   5:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief   SDRAM HAL module driver.
   6:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *          This file provides a generic firmware to drive SDRAM memories mounted
   7:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *          as external device.
   8:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *
   9:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   @verbatim
  10:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   ==============================================================================
  11:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****                        ##### How to use this driver #####
  12:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   ==============================================================================
  13:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   [..]
  14:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     This driver is a generic layered driver which contains a set of APIs used to
  15:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     control SDRAM memories. It uses the FMC layer functions to interface
  16:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     with SDRAM devices.
  17:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     The following sequence should be followed to configure the FMC to interface
  18:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     with SDRAM memories:
  19:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  20:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****    (#) Declare a SDRAM_HandleTypeDef handle structure, for example:
  21:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****           SDRAM_HandleTypeDef  hsdram
  22:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  23:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        (++) Fill the SDRAM_HandleTypeDef handle "Init" field with the allowed
  24:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****             values of the structure member.
  25:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  26:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        (++) Fill the SDRAM_HandleTypeDef handle "Instance" field with a predefined
  27:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****             base register instance for NOR or SDRAM device
  28:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  29:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****    (#) Declare a FMC_SDRAM_TimingTypeDef structure; for example:
  30:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****           FMC_SDRAM_TimingTypeDef  Timing;
  31:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       and fill its fields with the allowed values of the structure member.
  32:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
ARM GAS  /tmp/ccXcuiRz.s 			page 2


  33:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****    (#) Initialize the SDRAM Controller by calling the function HAL_SDRAM_Init(). This function
  34:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        performs the following sequence:
  35:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  36:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        (##) MSP hardware layer configuration using the function HAL_SDRAM_MspInit()
  37:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        (##) Control register configuration using the FMC SDRAM interface function
  38:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****             FMC_SDRAM_Init()
  39:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        (##) Timing register configuration using the FMC SDRAM interface function
  40:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****             FMC_SDRAM_Timing_Init()
  41:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        (##) Program the SDRAM external device by applying its initialization sequence
  42:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****             according to the device plugged in your hardware. This step is mandatory
  43:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****             for accessing the SDRAM device.
  44:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  45:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****    (#) At this stage you can perform read/write accesses from/to the memory connected
  46:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        to the SDRAM Bank. You can perform either polling or DMA transfer using the
  47:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        following APIs:
  48:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        (++) HAL_SDRAM_Read()/HAL_SDRAM_Write() for polling read/write access
  49:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        (++) HAL_SDRAM_Read_DMA()/HAL_SDRAM_Write_DMA() for DMA read/write transfer
  50:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  51:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****    (#) You can also control the SDRAM device by calling the control APIs HAL_SDRAM_WriteOperation_E
  52:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        HAL_SDRAM_WriteOperation_Disable() to respectively enable/disable the SDRAM write operation 
  53:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        the function HAL_SDRAM_SendCommand() to send a specified command to the SDRAM
  54:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        device. The command to be sent must be configured with the FMC_SDRAM_CommandTypeDef
  55:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        structure.
  56:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  57:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****    (#) You can continuously monitor the SDRAM device HAL state by calling the function
  58:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        HAL_SDRAM_GetState()
  59:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  60:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****    *** Callback registration ***
  61:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     =============================================
  62:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     [..]
  63:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       The compilation define  USE_HAL_SDRAM_REGISTER_CALLBACKS when set to 1
  64:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       allows the user to configure dynamically the driver callbacks.
  65:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  66:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       Use Functions @ref HAL_SDRAM_RegisterCallback() to register a user callback,
  67:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       it allows to register following callbacks:
  68:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         (+) MspInitCallback    : SDRAM MspInit.
  69:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         (+) MspDeInitCallback  : SDRAM MspDeInit.
  70:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       This function takes as parameters the HAL peripheral handle, the Callback ID
  71:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       and a pointer to the user callback function.
  72:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  73:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       Use function @ref HAL_SDRAM_UnRegisterCallback() to reset a callback to the default
  74:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       weak (surcharged) function. It allows to reset following callbacks:
  75:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         (+) MspInitCallback    : SDRAM MspInit.
  76:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         (+) MspDeInitCallback  : SDRAM MspDeInit.
  77:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       This function) takes as parameters the HAL peripheral handle and the Callback ID.
  78:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  79:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       By default, after the @ref HAL_SDRAM_Init and if the state is HAL_SDRAM_STATE_RESET
  80:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       all callbacks are reset to the corresponding legacy weak (surcharged) functions.
  81:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       Exception done for MspInit and MspDeInit callbacks that are respectively
  82:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       reset to the legacy weak (surcharged) functions in the @ref HAL_SDRAM_Init
  83:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       and @ref  HAL_SDRAM_DeInit only when these callbacks are null (not registered beforehand).
  84:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       If not, MspInit or MspDeInit are not null, the @ref HAL_SDRAM_Init and @ref HAL_SDRAM_DeInit
  85:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
  86:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  87:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       Callbacks can be registered/unregistered in READY state only.
  88:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       Exception done for MspInit/MspDeInit callbacks that can be registered/unregistered
  89:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       in READY or RESET state, thus registered (user) MspInit/DeInit callbacks can be used
ARM GAS  /tmp/ccXcuiRz.s 			page 3


  90:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       during the Init/DeInit.
  91:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       In that case first register the MspInit/MspDeInit user callbacks
  92:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       using @ref HAL_SDRAM_RegisterCallback before calling @ref HAL_SDRAM_DeInit
  93:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       or @ref HAL_SDRAM_Init function.
  94:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  95:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       When The compilation define USE_HAL_SDRAM_REGISTER_CALLBACKS is set to 0 or
  96:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       not defined, the callback registering feature is not available
  97:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       and weak (surcharged) callbacks are used.
  98:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  99:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   @endverbatim
 100:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   ******************************************************************************
 101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @attention
 102:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *
 103:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 104:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *
 105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 106:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * the "License"; You may not use this file except in compliance with the
 107:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * License. You may obtain a copy of the License at:
 108:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                       opensource.org/licenses/BSD-3-Clause
 109:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *
 110:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   ******************************************************************************
 111:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 112:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 113:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /* Includes ------------------------------------------------------------------*/
 114:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #include "stm32h7xx_hal.h"
 115:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 116:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 117:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /** @addtogroup STM32H7xx_HAL_Driver
 118:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @{
 119:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 120:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 121:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #ifdef HAL_SDRAM_MODULE_ENABLED
 122:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 123:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /** @defgroup SDRAM SDRAM
 124:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief SDRAM driver modules
 125:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @{
 126:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 127:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 128:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 129:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   @cond 0
 130:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 131:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /* Private typedef -----------------------------------------------------------*/
 132:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /* Private define ------------------------------------------------------------*/
 133:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /* Private macro -------------------------------------------------------------*/
 134:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /* Private variables ---------------------------------------------------------*/
 135:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /* Private function prototypes -----------------------------------------------*/
 136:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** static void SDRAM_DMACplt    (MDMA_HandleTypeDef *hmdma);
 137:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** static void SDRAM_DMACpltProt(MDMA_HandleTypeDef *hmdma);
 138:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** static void SDRAM_DMAError   (MDMA_HandleTypeDef *hmdma);
 139:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 140:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   @endcond
 141:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 142:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 143:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /* Exported functions --------------------------------------------------------*/
 144:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /** @defgroup SDRAM_Exported_Functions SDRAM Exported Functions
 145:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @{
 146:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
ARM GAS  /tmp/ccXcuiRz.s 			page 4


 147:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 148:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /** @defgroup SDRAM_Exported_Functions_Group1 Initialization and de-initialization functions
 149:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief    Initialization and Configuration functions
 150:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *
 151:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   @verbatim
 152:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   ==============================================================================
 153:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****            ##### SDRAM Initialization and de_initialization functions #####
 154:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   ==============================================================================
 155:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   [..]
 156:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     This section provides functions allowing to initialize/de-initialize
 157:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     the SDRAM memory
 158:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 159:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** @endverbatim
 160:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @{
 161:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 162:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 163:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 164:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Performs the SDRAM device initialization sequence.
 165:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 166:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 167:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  Timing Pointer to SDRAM control timing structure
 168:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
 169:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 170:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
 171:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 172:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM handle parameter */
 173:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (hsdram == NULL)
 174:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 175:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_ERROR;
 176:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 177:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 178:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (hsdram->State == HAL_SDRAM_STATE_RESET)
 179:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 180:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Allocate lock resource and initialize it */
 181:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->Lock = HAL_UNLOCKED;
 182:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
 183:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     if(hsdram->MspInitCallback == NULL)
 184:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 185:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       hsdram->MspInitCallback = HAL_SDRAM_MspInit;
 186:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 187:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->RefreshErrorCallback = HAL_SDRAM_RefreshErrorCallback;
 188:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->DmaXferCpltCallback = HAL_SDRAM_DMA_XferCpltCallback;
 189:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->DmaXferErrorCallback = HAL_SDRAM_DMA_XferErrorCallback;
 190:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 191:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Init the low level hardware */
 192:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->MspInitCallback(hsdram);
 193:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #else
 194:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Initialize the low level hardware (MSP) */
 195:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     HAL_SDRAM_MspInit(hsdram);
 196:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #endif
 197:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 198:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 199:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Initialize the SDRAM controller state */
 200:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_BUSY;
 201:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 202:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Initialize SDRAM control Interface */
 203:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
ARM GAS  /tmp/ccXcuiRz.s 			page 5


 204:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 205:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Initialize SDRAM timing Interface */
 206:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 207:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 208:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Enable FMC Peripheral */
 209:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __FMC_ENABLE();
 210:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Update the SDRAM controller state */
 211:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_READY;
 212:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 213:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return HAL_OK;
 214:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 215:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 216:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 217:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Perform the SDRAM device initialization sequence.
 218:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 219:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 220:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
 221:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 222:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
 223:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 224:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
 225:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if(hsdram->MspDeInitCallback == NULL)
 226:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 227:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->MspDeInitCallback = HAL_SDRAM_MspDeInit;
 228:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 229:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 230:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* DeInit the low level hardware */
 231:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   hsdram->MspDeInitCallback(hsdram);
 232:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #else
 233:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Initialize the low level hardware (MSP) */
 234:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_MspDeInit(hsdram);
 235:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #endif
 236:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 237:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Configure the SDRAM registers with their reset values */
 238:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 239:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 240:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Reset the SDRAM controller state */
 241:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_RESET;
 242:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 243:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Release Lock */
 244:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);
 245:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 246:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return HAL_OK;
 247:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 248:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 249:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 250:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  SDRAM MSP Init.
 251:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 252:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 253:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval None
 254:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 255:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** __weak void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef *hsdram)
 256:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
  27              		.loc 1 256 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccXcuiRz.s 			page 6


  31              		@ link register save eliminated.
  32              	.LVL0:
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE143:
  37              		.section	.text.HAL_SDRAM_Init,"ax",%progbits
  38              		.align	1
  39              		.global	HAL_SDRAM_Init
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv5-d16
  45              	HAL_SDRAM_Init:
  46              	.LFB141:
 171:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM handle parameter */
  47              		.loc 1 171 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              	.LVL1:
 173:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
  52              		.loc 1 173 0
  53 0000 08B3     		cbz	r0, .L5
 171:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM handle parameter */
  54              		.loc 1 171 0
  55 0002 38B5     		push	{r3, r4, r5, lr}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 16
  58              		.cfi_offset 3, -16
  59              		.cfi_offset 4, -12
  60              		.cfi_offset 5, -8
  61              		.cfi_offset 14, -4
  62 0004 0446     		mov	r4, r0
  63 0006 0D46     		mov	r5, r1
 178:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
  64              		.loc 1 178 0
  65 0008 90F82C30 		ldrb	r3, [r0, #44]	@ zero_extendqisi2
  66 000c B3B1     		cbz	r3, .L10
  67              	.LVL2:
  68              	.L4:
 200:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  69              		.loc 1 200 0
  70 000e 0223     		movs	r3, #2
  71 0010 84F82C30 		strb	r3, [r4, #44]
 203:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  72              		.loc 1 203 0
  73 0014 2146     		mov	r1, r4
  74 0016 51F8040B 		ldr	r0, [r1], #4
  75 001a FFF7FEFF 		bl	FMC_SDRAM_Init
  76              	.LVL3:
 206:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  77              		.loc 1 206 0
  78 001e 6268     		ldr	r2, [r4, #4]
  79 0020 2946     		mov	r1, r5
  80 0022 2068     		ldr	r0, [r4]
  81 0024 FFF7FEFF 		bl	FMC_SDRAM_Timing_Init
  82              	.LVL4:
ARM GAS  /tmp/ccXcuiRz.s 			page 7


 209:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Update the SDRAM controller state */
  83              		.loc 1 209 0
  84 0028 084A     		ldr	r2, .L11
  85 002a 1368     		ldr	r3, [r2]
  86 002c 43F00043 		orr	r3, r3, #-2147483648
  87 0030 1360     		str	r3, [r2]
 211:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  88              		.loc 1 211 0
  89 0032 0123     		movs	r3, #1
  90 0034 84F82C30 		strb	r3, [r4, #44]
 213:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
  91              		.loc 1 213 0
  92 0038 0020     		movs	r0, #0
  93 003a 38BD     		pop	{r3, r4, r5, pc}
  94              	.LVL5:
  95              	.L10:
 181:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
  96              		.loc 1 181 0
  97 003c 80F82D30 		strb	r3, [r0, #45]
 195:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #endif
  98              		.loc 1 195 0
  99 0040 FFF7FEFF 		bl	HAL_SDRAM_MspInit
 100              	.LVL6:
 101 0044 E3E7     		b	.L4
 102              	.LVL7:
 103              	.L5:
 104              	.LCFI1:
 105              		.cfi_def_cfa_offset 0
 106              		.cfi_restore 3
 107              		.cfi_restore 4
 108              		.cfi_restore 5
 109              		.cfi_restore 14
 175:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 110              		.loc 1 175 0
 111 0046 0120     		movs	r0, #1
 112              	.LVL8:
 113 0048 7047     		bx	lr
 114              	.L12:
 115 004a 00BF     		.align	2
 116              	.L11:
 117 004c 00400052 		.word	1375748096
 118              		.cfi_endproc
 119              	.LFE141:
 121              		.section	.text.HAL_SDRAM_MspDeInit,"ax",%progbits
 122              		.align	1
 123              		.weak	HAL_SDRAM_MspDeInit
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu fpv5-d16
 129              	HAL_SDRAM_MspDeInit:
 130              	.LFB144:
 257:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Prevent unused argument(s) compilation warning */
 258:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   UNUSED(hsdram);
 259:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 260:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 261:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****             the HAL_SDRAM_MspInit could be implemented in the user file
ARM GAS  /tmp/ccXcuiRz.s 			page 8


 262:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****    */
 263:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 264:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 265:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 266:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  SDRAM MSP DeInit.
 267:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 268:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 269:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval None
 270:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 271:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** __weak void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef *hsdram)
 272:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 131              		.loc 1 272 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 136              	.LVL9:
 137 0000 7047     		bx	lr
 138              		.cfi_endproc
 139              	.LFE144:
 141              		.section	.text.HAL_SDRAM_DeInit,"ax",%progbits
 142              		.align	1
 143              		.global	HAL_SDRAM_DeInit
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 147              		.fpu fpv5-d16
 149              	HAL_SDRAM_DeInit:
 150              	.LFB142:
 223:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
 151              		.loc 1 223 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              	.LVL10:
 223:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
 156              		.loc 1 223 0
 157 0000 10B5     		push	{r4, lr}
 158              	.LCFI2:
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 4, -8
 161              		.cfi_offset 14, -4
 162 0002 0446     		mov	r4, r0
 234:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #endif
 163              		.loc 1 234 0
 164 0004 FFF7FEFF 		bl	HAL_SDRAM_MspDeInit
 165              	.LVL11:
 238:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 166              		.loc 1 238 0
 167 0008 6168     		ldr	r1, [r4, #4]
 168 000a 2068     		ldr	r0, [r4]
 169 000c FFF7FEFF 		bl	FMC_SDRAM_DeInit
 170              	.LVL12:
 241:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 171              		.loc 1 241 0
 172 0010 0020     		movs	r0, #0
 173 0012 84F82C00 		strb	r0, [r4, #44]
ARM GAS  /tmp/ccXcuiRz.s 			page 9


 244:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 174              		.loc 1 244 0
 175 0016 84F82D00 		strb	r0, [r4, #45]
 247:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 176              		.loc 1 247 0
 177 001a 10BD     		pop	{r4, pc}
 178              		.cfi_endproc
 179              	.LFE142:
 181              		.section	.text.HAL_SDRAM_RefreshErrorCallback,"ax",%progbits
 182              		.align	1
 183              		.weak	HAL_SDRAM_RefreshErrorCallback
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 187              		.fpu fpv5-d16
 189              	HAL_SDRAM_RefreshErrorCallback:
 190              	.LFB146:
 273:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Prevent unused argument(s) compilation warning */
 274:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   UNUSED(hsdram);
 275:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 276:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 277:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****             the HAL_SDRAM_MspDeInit could be implemented in the user file
 278:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****    */
 279:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 280:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 281:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 282:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  This function handles SDRAM refresh error interrupt request.
 283:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 284:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 285:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
 286:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** */
 287:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** void HAL_SDRAM_IRQHandler(SDRAM_HandleTypeDef *hsdram)
 288:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 289:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check SDRAM interrupt Rising edge flag */
 290:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (__FMC_SDRAM_GET_FLAG(hsdram->Instance, FMC_SDRAM_FLAG_REFRESH_IT))
 291:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 292:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* SDRAM refresh error interrupt callback */
 293:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
 294:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->RefreshErrorCallback(hsdram);
 295:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #else
 296:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     HAL_SDRAM_RefreshErrorCallback(hsdram);
 297:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #endif
 298:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 299:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Clear SDRAM refresh error interrupt pending bit */
 300:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __FMC_SDRAM_CLEAR_FLAG(hsdram->Instance, FMC_SDRAM_FLAG_REFRESH_ERROR);
 301:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 302:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 303:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 304:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 305:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  SDRAM Refresh error callback.
 306:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 307:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 308:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval None
 309:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 310:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** __weak void HAL_SDRAM_RefreshErrorCallback(SDRAM_HandleTypeDef *hsdram)
 311:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 191              		.loc 1 311 0
ARM GAS  /tmp/ccXcuiRz.s 			page 10


 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 196              	.LVL13:
 197 0000 7047     		bx	lr
 198              		.cfi_endproc
 199              	.LFE146:
 201              		.section	.text.HAL_SDRAM_IRQHandler,"ax",%progbits
 202              		.align	1
 203              		.global	HAL_SDRAM_IRQHandler
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 207              		.fpu fpv5-d16
 209              	HAL_SDRAM_IRQHandler:
 210              	.LFB145:
 288:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check SDRAM interrupt Rising edge flag */
 211              		.loc 1 288 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              	.LVL14:
 290:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 216              		.loc 1 290 0
 217 0000 0368     		ldr	r3, [r0]
 218 0002 9B69     		ldr	r3, [r3, #24]
 219 0004 13F0010F 		tst	r3, #1
 220 0008 00D1     		bne	.L23
 221 000a 7047     		bx	lr
 222              	.L23:
 288:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check SDRAM interrupt Rising edge flag */
 223              		.loc 1 288 0
 224 000c 10B5     		push	{r4, lr}
 225              	.LCFI3:
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 4, -8
 228              		.cfi_offset 14, -4
 229 000e 0446     		mov	r4, r0
 296:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #endif
 230              		.loc 1 296 0
 231 0010 FFF7FEFF 		bl	HAL_SDRAM_RefreshErrorCallback
 232              	.LVL15:
 300:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 233              		.loc 1 300 0
 234 0014 2268     		ldr	r2, [r4]
 235 0016 5369     		ldr	r3, [r2, #20]
 236 0018 43F00103 		orr	r3, r3, #1
 237 001c 5361     		str	r3, [r2, #20]
 238 001e 10BD     		pop	{r4, pc}
 239              		.cfi_endproc
 240              	.LFE145:
 242              		.section	.text.HAL_SDRAM_DMA_XferCpltCallback,"ax",%progbits
 243              		.align	1
 244              		.weak	HAL_SDRAM_DMA_XferCpltCallback
 245              		.syntax unified
 246              		.thumb
ARM GAS  /tmp/ccXcuiRz.s 			page 11


 247              		.thumb_func
 248              		.fpu fpv5-d16
 250              	HAL_SDRAM_DMA_XferCpltCallback:
 251              	.LFB147:
 312:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Prevent unused argument(s) compilation warning */
 313:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   UNUSED(hsdram);
 314:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 315:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 316:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****             the HAL_SDRAM_RefreshErrorCallback could be implemented in the user file
 317:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****    */
 318:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 319:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 320:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 321:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  DMA transfer complete callback.
 322:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hmdma pointer to a DMA_HandleTypeDef structure that contains
 323:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for the specified DMA module.
 324:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval None
 325:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 326:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** __weak void HAL_SDRAM_DMA_XferCpltCallback(MDMA_HandleTypeDef *hmdma)
 327:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 252              		.loc 1 327 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              		@ link register save eliminated.
 257              	.LVL16:
 258 0000 7047     		bx	lr
 259              		.cfi_endproc
 260              	.LFE147:
 262              		.section	.text.SDRAM_DMACpltProt,"ax",%progbits
 263              		.align	1
 264              		.syntax unified
 265              		.thumb
 266              		.thumb_func
 267              		.fpu fpv5-d16
 269              	SDRAM_DMACpltProt:
 270              	.LFB165:
 328:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Prevent unused argument(s) compilation warning */
 329:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   UNUSED(hmdma);
 330:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 331:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 332:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****             the HAL_SDRAM_DMA_XferCpltCallback could be implemented in the user file
 333:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****    */
 334:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 335:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 336:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 337:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  DMA transfer complete error callback.
 338:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hmdma DMA handle
 339:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval None
 340:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 341:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** __weak void HAL_SDRAM_DMA_XferErrorCallback(MDMA_HandleTypeDef *hmdma)
 342:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 343:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Prevent unused argument(s) compilation warning */
 344:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   UNUSED(hmdma);
 345:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 346:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 347:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****             the HAL_SDRAM_DMA_XferErrorCallback could be implemented in the user file
ARM GAS  /tmp/ccXcuiRz.s 			page 12


 348:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****    */
 349:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 350:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 351:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 352:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @}
 353:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 354:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 355:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /** @defgroup SDRAM_Exported_Functions_Group2 Input and Output functions
 356:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief    Input Output and memory control functions
 357:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *
 358:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   @verbatim
 359:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   ==============================================================================
 360:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****                     ##### SDRAM Input and Output functions #####
 361:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   ==============================================================================
 362:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   [..]
 363:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     This section provides functions allowing to use and control the SDRAM memory
 364:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 365:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** @endverbatim
 366:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @{
 367:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 368:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 369:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 370:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Reads 8-bit data buffer from the SDRAM memory.
 371:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 372:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 373:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pAddress Pointer to read start address
 374:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pDstBuffer Pointer to destination buffer
 375:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to read from memory
 376:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
 377:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 378:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Read_8b(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint8_t *pDstB
 379:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 380:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint32_t size;
 381:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __IO uint8_t *pSdramAddress = (uint8_t *)pAddress;
 382:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint8_t * pdestbuff = pDstBuffer;
 383:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_StateTypeDef state = hsdram->State;
 384:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 385:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 386:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (state == HAL_SDRAM_STATE_BUSY)
 387:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 388:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_BUSY;
 389:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 390:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_WRITE_PROTECTED))
 391:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 392:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Locked */
 393:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_LOCK(hsdram);
 394:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 395:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 396:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_BUSY;
 397:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 398:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Read data from source */
 399:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     for (size = BufferSize; size != 0U; size--)
 400:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 401:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       *pdestbuff = *(__IO uint8_t *)pSdramAddress;
 402:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       pdestbuff++;
 403:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       pSdramAddress++;
 404:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
ARM GAS  /tmp/ccXcuiRz.s 			page 13


 405:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 406:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 407:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = state;
 408:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 409:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Unlocked */
 410:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_UNLOCK(hsdram);
 411:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 412:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
 413:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 414:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return  HAL_ERROR;
 415:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 416:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 417:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return HAL_OK;
 418:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 419:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 420:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 421:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Writes 8-bit data buffer to SDRAM memory.
 422:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 423:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 424:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pAddress Pointer to write start address
 425:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pSrcBuffer Pointer to source buffer to write
 426:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to write to memory
 427:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
 428:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 429:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Write_8b(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint8_t *pSrc
 430:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 431:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint32_t size;
 432:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __IO uint8_t *pSdramAddress = (uint8_t *)pAddress;
 433:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint8_t * psrcbuff = pSrcBuffer;
 434:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   
 435:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 436:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 437:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 438:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_BUSY;
 439:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 440:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if (hsdram->State == HAL_SDRAM_STATE_READY)
 441:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 442:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Locked */
 443:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_LOCK(hsdram);
 444:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 445:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 446:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_BUSY;
 447:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 448:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Write data to memory */
 449:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     for (size = BufferSize; size != 0U; size--)
 450:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 451:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       *(__IO uint8_t *)pSdramAddress = *psrcbuff;
 452:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       psrcbuff++;
 453:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       pSdramAddress++;
 454:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 455:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 456:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 457:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_READY;
 458:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 	
 459:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Unlocked */
 460:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_UNLOCK(hsdram);
 461:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
ARM GAS  /tmp/ccXcuiRz.s 			page 14


 462:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
 463:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 464:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return  HAL_ERROR;
 465:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 466:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 467:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return HAL_OK;
 468:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 469:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 470:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 471:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Reads 16-bit data buffer from the SDRAM memory.
 472:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 473:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 474:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pAddress Pointer to read start address
 475:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pDstBuffer Pointer to destination buffer
 476:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to read from memory
 477:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
 478:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 479:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Read_16b(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint16_t *pDs
 480:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 481:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint32_t size;
 482:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __IO uint32_t *pSdramAddress = pAddress;
 483:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint16_t *pdestbuff = pDstBuffer;
 484:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_StateTypeDef state = hsdram->State;
 485:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 486:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 487:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (state == HAL_SDRAM_STATE_BUSY)
 488:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 489:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_BUSY;
 490:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 491:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_WRITE_PROTECTED))
 492:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 493:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Locked */
 494:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_LOCK(hsdram);
 495:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 496:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 497:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_BUSY;
 498:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 499:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Read data from memory */
 500:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     for (size = BufferSize; size >= 2U ; size-=2U)
 501:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 502:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       *pdestbuff = (uint16_t)((*pSdramAddress) & 0x0000FFFFU);
 503:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       pdestbuff++;
 504:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       *pdestbuff = (uint16_t)(((*pSdramAddress) & 0xFFFF0000U) >> 16U);
 505:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       pdestbuff++;
 506:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       pSdramAddress++;
 507:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 508:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 509:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Read last 16-bits if size is not 32-bits multiple */
 510:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     if ((BufferSize % 2U)!= 0U)
 511:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 512:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       *pdestbuff = (uint16_t)((*pSdramAddress) & 0x0000FFFFU);
 513:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 514:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 515:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 516:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = state;
 517:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 518:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Unlocked */
ARM GAS  /tmp/ccXcuiRz.s 			page 15


 519:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_UNLOCK(hsdram);
 520:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 521:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
 522:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 523:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return  HAL_ERROR;
 524:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 525:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 526:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return HAL_OK;
 527:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 528:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 529:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 530:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Writes 16-bit data buffer to SDRAM memory.
 531:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 532:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 533:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pAddress Pointer to write start address
 534:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pSrcBuffer Pointer to source buffer to write
 535:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to write to memory
 536:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
 537:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 538:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Write_16b(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint16_t *pS
 539:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 540:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint32_t size;
 541:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __IO uint32_t *psdramaddress = pAddress;
 542:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint16_t * psrcbuff = pSrcBuffer;
 543:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   
 544:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 545:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 546:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 547:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_BUSY;
 548:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 549:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if (hsdram->State == HAL_SDRAM_STATE_READY)
 550:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 551:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Locked */
 552:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_LOCK(hsdram);
 553:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 554:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 555:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_BUSY;
 556:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     
 557:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Write data to memory */
 558:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     for (size = BufferSize; size >= 2U ; size-=2U)
 559:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 560:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       *psdramaddress = (uint32_t)(*psrcbuff);
 561:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       psrcbuff++;
 562:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       *psdramaddress |= ((uint32_t)(*psrcbuff) << 16U);
 563:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       psrcbuff++;
 564:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       psdramaddress++;
 565:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 566:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 567:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Write last 16-bits if size is not 32-bits multiple */
 568:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     if ((BufferSize % 2U)!= 0U)
 569:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 570:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       *psdramaddress = ((uint32_t)(*psrcbuff) & 0x0000FFFFU) | ((*psdramaddress) & 0xFFFF0000U);
 571:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 572:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 573:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 574:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_READY;
 575:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 	
ARM GAS  /tmp/ccXcuiRz.s 			page 16


 576:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Unlocked */
 577:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_UNLOCK(hsdram);
 578:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 579:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
 580:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 581:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return  HAL_ERROR;
 582:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 583:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 584:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return HAL_OK;
 585:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 586:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 587:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 588:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Reads 32-bit data buffer from the SDRAM memory.
 589:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 590:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 591:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pAddress Pointer to read start address
 592:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pDstBuffer Pointer to destination buffer
 593:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to read from memory
 594:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
 595:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 596:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Read_32b(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint32_t *pDs
 597:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 598:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint32_t size;
 599:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __IO uint32_t *pSdramAddress = (uint32_t *)pAddress;
 600:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint32_t * pdestbuff = pDstBuffer;
 601:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_StateTypeDef state = hsdram->State;
 602:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 603:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 604:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (state == HAL_SDRAM_STATE_BUSY)
 605:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 606:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_BUSY;
 607:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 608:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_WRITE_PROTECTED))
 609:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 610:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Locked */
 611:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_LOCK(hsdram);
 612:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 613:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 614:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_BUSY;
 615:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 616:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Read data from source */
 617:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     for (size = BufferSize; size != 0U; size--)
 618:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 619:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       *pdestbuff = *(__IO uint32_t *)pSdramAddress;
 620:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       pdestbuff++;
 621:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       pSdramAddress++;
 622:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 623:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 624:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 625:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = state;
 626:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 627:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Unlocked */
 628:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_UNLOCK(hsdram);
 629:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 630:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
 631:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 632:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return  HAL_ERROR;
ARM GAS  /tmp/ccXcuiRz.s 			page 17


 633:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 634:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 635:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return HAL_OK;
 636:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 637:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 638:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 639:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Writes 32-bit data buffer to SDRAM memory.
 640:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 641:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 642:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pAddress Pointer to write start address
 643:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pSrcBuffer Pointer to source buffer to write
 644:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to write to memory
 645:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
 646:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 647:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Write_32b(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint32_t *pS
 648:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 649:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint32_t size;
 650:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __IO uint32_t *pSdramAddress = pAddress;
 651:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint32_t * psrcbuff = pSrcBuffer;
 652:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 653:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 654:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 655:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 656:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_BUSY;
 657:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 658:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if (hsdram->State == HAL_SDRAM_STATE_READY)
 659:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 660:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Locked */
 661:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_LOCK(hsdram);
 662:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 663:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 664:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_BUSY;
 665:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 666:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Write data to memory */
 667:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     for (size = BufferSize; size != 0U; size--)
 668:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 669:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       *pSdramAddress = *psrcbuff;
 670:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       psrcbuff++;
 671:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       pSdramAddress++;
 672:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 673:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 674:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 675:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_READY;
 676:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 	
 677:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Unlocked */
 678:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_UNLOCK(hsdram);
 679:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 680:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
 681:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 682:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return  HAL_ERROR;
 683:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 684:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 685:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return HAL_OK;
 686:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 687:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 688:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 689:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Reads a Words data from the SDRAM memory using DMA transfer.
ARM GAS  /tmp/ccXcuiRz.s 			page 18


 690:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 691:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 692:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pAddress Pointer to read start address
 693:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pDstBuffer Pointer to destination buffer
 694:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to read from memory
 695:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
 696:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 697:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Read_DMA(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint32_t *pDs
 698:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 699:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_StatusTypeDef status;
 700:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_StateTypeDef state = hsdram->State;
 701:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 702:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 703:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (state == HAL_SDRAM_STATE_BUSY)
 704:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 705:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_BUSY;
 706:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 707:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_WRITE_PROTECTED))
 708:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 709:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Locked */
 710:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_LOCK(hsdram);
 711:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 712:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 713:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_BUSY;
 714:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 715:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Configure DMA user callbacks */
 716:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     if (state == HAL_SDRAM_STATE_READY)
 717:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 718:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       hsdram->hmdma->XferCpltCallback = SDRAM_DMACplt;
 719:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 720:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     else
 721:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 722:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       hsdram->hmdma->XferCpltCallback = SDRAM_DMACpltProt;
 723:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 724:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->hmdma->XferErrorCallback = SDRAM_DMAError;
 725:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 726:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 	/* Enable the DMA Stream */
 727:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     status = HAL_MDMA_Start_IT(hsdram->hmdma, (uint32_t)pAddress, (uint32_t)pDstBuffer, (uint32_t)(
 728:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 729:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Unlocked */
 730:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_UNLOCK(hsdram);
 731:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 732:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
 733:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 734:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_ERROR;
 735:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 736:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 737:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return status;
 738:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 739:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 740:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 741:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Writes a Words data buffer to SDRAM memory using DMA transfer.
 742:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 743:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 744:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pAddress Pointer to write start address
 745:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pSrcBuffer Pointer to source buffer to write
 746:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to write to memory
ARM GAS  /tmp/ccXcuiRz.s 			page 19


 747:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
 748:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 749:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Write_DMA(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint32_t *pS
 750:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 751:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_StatusTypeDef status;
 752:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 753:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 754:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 755:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 756:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_BUSY;
 757:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 758:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if (hsdram->State == HAL_SDRAM_STATE_READY)
 759:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 760:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Locked */
 761:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_LOCK(hsdram);
 762:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 763:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 764:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_BUSY;
 765:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 766:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Configure DMA user callbacks */
 767:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->hmdma->XferCpltCallback = SDRAM_DMACplt;
 768:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->hmdma->XferErrorCallback = SDRAM_DMAError;
 769:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 770:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 	/* Enable the DMA Stream */
 771:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   status = HAL_MDMA_Start_IT(hsdram->hmdma, (uint32_t)pSrcBuffer, (uint32_t)pAddress, (uint32_t)(Bu
 772:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 773:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Unlocked */
 774:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_UNLOCK(hsdram);
 775:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 776:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
 777:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 778:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_ERROR;
 779:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 780:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 781:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return status;
 782:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 783:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 784:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
 785:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 786:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Register a User SDRAM Callback
 787:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *         To be used instead of the weak (surcharged) predefined callback
 788:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param hsdram : SDRAM handle
 789:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param CallbackId : ID of the callback to be registered
 790:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *        This parameter can be one of the following values:
 791:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_MSP_INIT_CB_ID       SDRAM MspInit callback ID
 792:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_MSP_DEINIT_CB_ID     SDRAM MspDeInit callback ID
 793:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_REFRESH_ERR_CB_ID    SDRAM Refresh Error callback ID
 794:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param pCallback : pointer to the Callback function
 795:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval status
 796:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 797:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_RegisterCallback (SDRAM_HandleTypeDef *hsdram, HAL_SDRAM_CallbackIDType
 798:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 799:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_StatusTypeDef status = HAL_OK;
 800:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_StateTypeDef state;
 801:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   
 802:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if(pCallback == NULL)
 803:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
ARM GAS  /tmp/ccXcuiRz.s 			page 20


 804:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_ERROR;
 805:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 806:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 807:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Process locked */
 808:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 809:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   
 810:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   state = hsdram->State;
 811:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_WRITE_PROTECTED))
 812:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 813:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     switch (CallbackId)
 814:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 815:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     case HAL_SDRAM_MSP_INIT_CB_ID :
 816:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       hsdram->MspInitCallback = pCallback;
 817:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       break;
 818:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     case HAL_SDRAM_MSP_DEINIT_CB_ID :
 819:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       hsdram->MspDeInitCallback = pCallback;
 820:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       break;
 821:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     case HAL_SDRAM_REFRESH_ERR_CB_ID :
 822:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       hsdram->RefreshErrorCallback = pCallback;
 823:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       break;
 824:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     default :
 825:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       /* update return status */
 826:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       status =  HAL_ERROR;
 827:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       break;
 828:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 829:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 830:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if(hsdram->State == HAL_SDRAM_STATE_RESET)
 831:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 832:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     switch (CallbackId)
 833:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 834:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     case HAL_SDRAM_MSP_INIT_CB_ID :
 835:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       hsdram->MspInitCallback = pCallback;
 836:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       break;
 837:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     case HAL_SDRAM_MSP_DEINIT_CB_ID :
 838:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       hsdram->MspDeInitCallback = pCallback;
 839:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       break;
 840:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     default :
 841:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       /* update return status */
 842:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       status =  HAL_ERROR;
 843:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       break;
 844:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 845:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 846:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
 847:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 848:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* update return status */
 849:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     status =  HAL_ERROR;
 850:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 851:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 852:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Release Lock */
 853:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);
 854:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return status;
 855:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 856:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 857:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 858:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Unregister a User SDRAM Callback
 859:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *         SDRAM Callback is redirected to the weak (surcharged) predefined callback
 860:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param hsdram : SDRAM handle
ARM GAS  /tmp/ccXcuiRz.s 			page 21


 861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param CallbackId : ID of the callback to be unregistered
 862:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *        This parameter can be one of the following values:
 863:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_MSP_INIT_CB_ID       SDRAM MspInit callback ID
 864:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_MSP_DEINIT_CB_ID     SDRAM MspDeInit callback ID
 865:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_REFRESH_ERR_CB_ID    SDRAM Refresh Error callback ID
 866:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_DMA_XFER_CPLT_CB_ID  SDRAM DMA Xfer Complete callback ID
 867:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_DMA_XFER_ERR_CB_ID   SDRAM DMA Xfer Error callback ID
 868:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval status
 869:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 870:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_UnRegisterCallback (SDRAM_HandleTypeDef *hsdram, HAL_SDRAM_CallbackIDTy
 871:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 872:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_StatusTypeDef status = HAL_OK;
 873:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_StateTypeDef state;
 874:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   
 875:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Process locked */
 876:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 877:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 878:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   state = hsdram->State;
 879:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_WRITE_PROTECTED))
 880:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 881:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     switch (CallbackId)
 882:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 883:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     case HAL_SDRAM_MSP_INIT_CB_ID :
 884:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       hsdram->MspInitCallback = HAL_SDRAM_MspInit;
 885:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       break;
 886:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     case HAL_SDRAM_MSP_DEINIT_CB_ID :
 887:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       hsdram->MspDeInitCallback = HAL_SDRAM_MspDeInit;
 888:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       break;
 889:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     case HAL_SDRAM_REFRESH_ERR_CB_ID :
 890:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       hsdram->RefreshErrorCallback = HAL_SDRAM_RefreshErrorCallback;
 891:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       break;
 892:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     case HAL_SDRAM_DMA_XFER_CPLT_CB_ID :
 893:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       hsdram->DmaXferCpltCallback = HAL_SDRAM_DMA_XferCpltCallback;
 894:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       break;
 895:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     case HAL_SDRAM_DMA_XFER_ERR_CB_ID :
 896:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       hsdram->DmaXferErrorCallback = HAL_SDRAM_DMA_XferErrorCallback;
 897:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       break;
 898:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     default :
 899:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       /* update return status */
 900:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       status =  HAL_ERROR;
 901:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       break;
 902:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 903:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 904:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if(hsdram->State == HAL_SDRAM_STATE_RESET)
 905:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 906:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     switch (CallbackId)
 907:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 908:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     case HAL_SDRAM_MSP_INIT_CB_ID :
 909:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       hsdram->MspInitCallback = HAL_SDRAM_MspInit;
 910:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       break;
 911:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     case HAL_SDRAM_MSP_DEINIT_CB_ID :
 912:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       hsdram->MspDeInitCallback = HAL_SDRAM_MspDeInit;
 913:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       break;
 914:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     default :
 915:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       /* update return status */
 916:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       status =  HAL_ERROR;
 917:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       break;
ARM GAS  /tmp/ccXcuiRz.s 			page 22


 918:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 919:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 920:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
 921:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* update return status */
 923:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     status =  HAL_ERROR;
 924:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 925:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 926:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Release Lock */
 927:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);
 928:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return status;
 929:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 930:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 931:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 932:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Register a User SDRAM Callback for DMA transfers
 933:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *         To be used instead of the weak (surcharged) predefined callback
 934:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param hsdram : SDRAM handle
 935:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param CallbackId : ID of the callback to be registered
 936:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *        This parameter can be one of the following values:
 937:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_DMA_XFER_CPLT_CB_ID  SDRAM DMA Xfer Complete callback ID
 938:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_DMA_XFER_ERR_CB_ID   SDRAM DMA Xfer Error callback ID
 939:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param pCallback : pointer to the Callback function
 940:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval status
 941:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 942:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_RegisterDmaCallback(SDRAM_HandleTypeDef *hsdram, HAL_SDRAM_CallbackIDTy
 943:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 944:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_StatusTypeDef status = HAL_OK;
 945:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_StateTypeDef state;
 946:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   
 947:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if(pCallback == NULL)
 948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 949:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_ERROR;
 950:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 951:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Process locked */
 953:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 954:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   state = hsdram->State;
 956:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_WRITE_PROTECTED))
 957:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 958:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     switch (CallbackId)
 959:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 960:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     case HAL_SDRAM_DMA_XFER_CPLT_CB_ID :
 961:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       hsdram->DmaXferCpltCallback = pCallback;
 962:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       break;
 963:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     case HAL_SDRAM_DMA_XFER_ERR_CB_ID :
 964:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       hsdram->DmaXferErrorCallback = pCallback;
 965:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       break;
 966:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     default :
 967:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       /* update return status */
 968:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       status =  HAL_ERROR;
 969:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       break;
 970:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 971:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 972:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
 973:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 974:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* update return status */
ARM GAS  /tmp/ccXcuiRz.s 			page 23


 975:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     status =  HAL_ERROR;
 976:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 977:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 978:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Release Lock */
 979:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);
 980:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return status;
 981:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 982:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #endif
 983:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 984:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 985:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @}
 986:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 987:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 988:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /** @defgroup SDRAM_Exported_Functions_Group3 Control functions
 989:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****  *  @brief   management functions
 990:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****  *
 991:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** @verbatim
 992:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   ==============================================================================
 993:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****                          ##### SDRAM Control functions #####
 994:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   ==============================================================================
 995:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   [..]
 996:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     This subsection provides a set of functions allowing to control dynamically
 997:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     the SDRAM interface.
 998:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 999:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** @endverbatim
1000:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @{
1001:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1002:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1003:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
1004:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Enables dynamically SDRAM write protection.
1005:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
1006:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
1007:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
1008:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1009:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_WriteProtection_Enable(SDRAM_HandleTypeDef *hsdram)
1010:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
1011:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
1012:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (hsdram->State == HAL_SDRAM_STATE_BUSY)
1013:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1014:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_BUSY;
1015:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1016:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if (hsdram->State == HAL_SDRAM_STATE_READY)
1017:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1018:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM state */
1019:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_BUSY;
1020:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1021:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Enable write protection */
1022:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     (void)FMC_SDRAM_WriteProtection_Enable(hsdram->Instance, hsdram->Init.SDBank);
1023:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1024:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM state */
1025:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_WRITE_PROTECTED;
1026:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1027:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
1028:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1029:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_ERROR;
1030:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1031:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
ARM GAS  /tmp/ccXcuiRz.s 			page 24


1032:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return HAL_OK;
1033:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
1034:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1035:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
1036:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Disables dynamically SDRAM write protection.
1037:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
1038:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
1039:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
1040:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1041:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_WriteProtection_Disable(SDRAM_HandleTypeDef *hsdram)
1042:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
1043:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_StateTypeDef state = hsdram->State;
1044:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   
1045:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
1046:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (state == HAL_SDRAM_STATE_BUSY)
1047:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1048:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_BUSY;
1049:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1050:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if (state == HAL_SDRAM_STATE_WRITE_PROTECTED)
1051:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1052:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM state */
1053:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_BUSY;
1054:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1055:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Disable write protection */
1056:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     (void)FMC_SDRAM_WriteProtection_Disable(hsdram->Instance, hsdram->Init.SDBank);
1057:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1058:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM state */
1059:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_READY;
1060:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1061:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
1062:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1063:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_ERROR;
1064:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1065:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1066:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return HAL_OK;
1067:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
1068:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1069:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
1070:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Sends Command to the SDRAM bank.
1071:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
1072:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
1073:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  Command SDRAM command structure
1074:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  Timeout Timeout duration
1075:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
1076:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1077:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Comm
1078:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
1079:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_StateTypeDef state = hsdram->State;
1080:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   
1081:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
1082:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (state == HAL_SDRAM_STATE_BUSY)
1083:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1084:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_BUSY;
1085:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1086:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
1087:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1088:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM state */
ARM GAS  /tmp/ccXcuiRz.s 			page 25


1089:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_BUSY;
1090:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1091:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Send SDRAM command */
1092:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
1093:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1094:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state state */
1095:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
1096:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
1097:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
1098:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
1099:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     else
1100:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
1101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       hsdram->State = HAL_SDRAM_STATE_READY;
1102:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
1103:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1104:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
1105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1106:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_ERROR;
1107:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1108:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1109:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return HAL_OK;
1110:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
1111:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1112:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
1113:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Programs the SDRAM Memory Refresh rate.
1114:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
1115:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
1116:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  RefreshRate The SDRAM refresh rate value
1117:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
1118:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1119:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
1120:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
1121:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
1122:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (hsdram->State == HAL_SDRAM_STATE_BUSY)
1123:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1124:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_BUSY;
1125:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1126:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if (hsdram->State == HAL_SDRAM_STATE_READY)
1127:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1128:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM state */
1129:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_BUSY;
1130:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1131:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Program the refresh rate */
1132:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
1133:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1134:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM state */
1135:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_READY;
1136:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1137:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
1138:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1139:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_ERROR;
1140:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1141:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1142:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return HAL_OK;
1143:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
1144:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1145:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
ARM GAS  /tmp/ccXcuiRz.s 			page 26


1146:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Sets the Number of consecutive SDRAM Memory auto Refresh commands.
1147:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
1148:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
1149:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  AutoRefreshNumber The SDRAM auto Refresh number
1150:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
1151:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1152:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_SetAutoRefreshNumber(SDRAM_HandleTypeDef *hsdram, uint32_t AutoRefreshN
1153:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
1154:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
1155:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (hsdram->State == HAL_SDRAM_STATE_BUSY)
1156:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1157:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_BUSY;
1158:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1159:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if (hsdram->State == HAL_SDRAM_STATE_READY)
1160:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1161:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM state */
1162:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_BUSY;
1163:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1164:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Set the Auto-Refresh number */
1165:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     (void)FMC_SDRAM_SetAutoRefreshNumber(hsdram->Instance, AutoRefreshNumber);
1166:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1167:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM state */
1168:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_READY;
1169:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1170:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
1171:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1172:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_ERROR;
1173:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1174:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1175:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return HAL_OK;
1176:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
1177:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1178:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
1179:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Returns the SDRAM memory current mode.
1180:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
1181:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
1182:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval The SDRAM memory mode.
1183:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1184:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** uint32_t HAL_SDRAM_GetModeStatus(SDRAM_HandleTypeDef *hsdram)
1185:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
1186:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Return the SDRAM memory current mode */
1187:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return (FMC_SDRAM_GetModeStatus(hsdram->Instance, hsdram->Init.SDBank));
1188:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
1189:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1190:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
1191:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @}
1192:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1193:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1194:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /** @defgroup SDRAM_Exported_Functions_Group4 State functions
1195:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****  *  @brief   Peripheral State functions
1196:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****  *
1197:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** @verbatim
1198:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   ==============================================================================
1199:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****                       ##### SDRAM State functions #####
1200:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   ==============================================================================
1201:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   [..]
1202:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     This subsection permits to get in run-time the status of the SDRAM controller
ARM GAS  /tmp/ccXcuiRz.s 			page 27


1203:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     and the data flow.
1204:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1205:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** @endverbatim
1206:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @{
1207:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1208:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1209:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
1210:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Returns the SDRAM state.
1211:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
1212:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
1213:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL state
1214:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1215:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_SDRAM_StateTypeDef HAL_SDRAM_GetState(SDRAM_HandleTypeDef *hsdram)
1216:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
1217:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return hsdram->State;
1218:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
1219:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1220:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
1221:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @}
1222:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1223:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1224:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
1225:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @}
1226:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1227:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1228:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
1229:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   @cond 0
1230:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1231:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
1232:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  MDMA SDRAM process complete callback.
1233:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hmdma : MDMA handle
1234:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval None
1235:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1236:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** static void SDRAM_DMACplt(MDMA_HandleTypeDef *hmdma)
1237:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
1238:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   SDRAM_HandleTypeDef* hsdram = ( SDRAM_HandleTypeDef* )(hmdma->Parent);
1239:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1240:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Disable the MDMA channel */
1241:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __HAL_MDMA_DISABLE(hmdma);
1242:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1243:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Update the SDRAM controller state */
1244:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_READY;
1245:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1246:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
1247:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   hsdram->DmaXferCpltCallback(hmdma);
1248:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #else
1249:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_DMA_XferCpltCallback(hmdma);
1250:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #endif
1251:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
1252:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1253:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
1254:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  MDMA SRAM process complete callback.
1255:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hmdma : MDMA handle
1256:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval None
1257:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1258:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** static void SDRAM_DMACpltProt(MDMA_HandleTypeDef *hmdma)
1259:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
ARM GAS  /tmp/ccXcuiRz.s 			page 28


 271              		.loc 1 1259 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              	.LVL17:
 276              		.loc 1 1259 0
 277 0000 08B5     		push	{r3, lr}
 278              	.LCFI4:
 279              		.cfi_def_cfa_offset 8
 280              		.cfi_offset 3, -8
 281              		.cfi_offset 14, -4
1260:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   SDRAM_HandleTypeDef* hsdram = ( SDRAM_HandleTypeDef* )(hmdma->Parent);
 282              		.loc 1 1260 0
 283 0002 016C     		ldr	r1, [r0, #64]
 284              	.LVL18:
1261:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1262:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Disable the MDMA channel */
1263:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __HAL_MDMA_DISABLE(hmdma);
 285              		.loc 1 1263 0
 286 0004 0268     		ldr	r2, [r0]
 287 0006 D368     		ldr	r3, [r2, #12]
 288 0008 23F00103 		bic	r3, r3, #1
 289 000c D360     		str	r3, [r2, #12]
1264:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1265:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Update the SDRAM controller state */
1266:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_WRITE_PROTECTED;
 290              		.loc 1 1266 0
 291 000e 0423     		movs	r3, #4
 292 0010 81F82C30 		strb	r3, [r1, #44]
1267:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1268:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
1269:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   hsdram->DmaXferCpltCallback(hmdma);
1270:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #else
1271:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_DMA_XferCpltCallback(hmdma);
 293              		.loc 1 1271 0
 294 0014 FFF7FEFF 		bl	HAL_SDRAM_DMA_XferCpltCallback
 295              	.LVL19:
 296 0018 08BD     		pop	{r3, pc}
 297              		.cfi_endproc
 298              	.LFE165:
 300              		.section	.text.SDRAM_DMACplt,"ax",%progbits
 301              		.align	1
 302              		.syntax unified
 303              		.thumb
 304              		.thumb_func
 305              		.fpu fpv5-d16
 307              	SDRAM_DMACplt:
 308              	.LFB164:
1237:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   SDRAM_HandleTypeDef* hsdram = ( SDRAM_HandleTypeDef* )(hmdma->Parent);
 309              		.loc 1 1237 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              	.LVL20:
 314 0000 08B5     		push	{r3, lr}
 315              	.LCFI5:
 316              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccXcuiRz.s 			page 29


 317              		.cfi_offset 3, -8
 318              		.cfi_offset 14, -4
1238:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 319              		.loc 1 1238 0
 320 0002 016C     		ldr	r1, [r0, #64]
 321              	.LVL21:
1241:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 322              		.loc 1 1241 0
 323 0004 0268     		ldr	r2, [r0]
 324 0006 D368     		ldr	r3, [r2, #12]
 325 0008 23F00103 		bic	r3, r3, #1
 326 000c D360     		str	r3, [r2, #12]
1244:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 327              		.loc 1 1244 0
 328 000e 0123     		movs	r3, #1
 329 0010 81F82C30 		strb	r3, [r1, #44]
1249:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #endif
 330              		.loc 1 1249 0
 331 0014 FFF7FEFF 		bl	HAL_SDRAM_DMA_XferCpltCallback
 332              	.LVL22:
 333 0018 08BD     		pop	{r3, pc}
 334              		.cfi_endproc
 335              	.LFE164:
 337              		.section	.text.HAL_SDRAM_DMA_XferErrorCallback,"ax",%progbits
 338              		.align	1
 339              		.weak	HAL_SDRAM_DMA_XferErrorCallback
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 343              		.fpu fpv5-d16
 345              	HAL_SDRAM_DMA_XferErrorCallback:
 346              	.LFB148:
 342:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Prevent unused argument(s) compilation warning */
 347              		.loc 1 342 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              		@ link register save eliminated.
 352              	.LVL23:
 353 0000 7047     		bx	lr
 354              		.cfi_endproc
 355              	.LFE148:
 357              		.section	.text.SDRAM_DMAError,"ax",%progbits
 358              		.align	1
 359              		.syntax unified
 360              		.thumb
 361              		.thumb_func
 362              		.fpu fpv5-d16
 364              	SDRAM_DMAError:
 365              	.LFB166:
1272:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #endif
1273:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
1274:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1275:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
1276:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  MDMA SDRAM error callback.
1277:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hmdma : MDMA handle
1278:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval None
ARM GAS  /tmp/ccXcuiRz.s 			page 30


1279:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1280:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** static void SDRAM_DMAError(MDMA_HandleTypeDef *hmdma)
1281:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 366              		.loc 1 1281 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370              	.LVL24:
 371              		.loc 1 1281 0
 372 0000 08B5     		push	{r3, lr}
 373              	.LCFI6:
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 3, -8
 376              		.cfi_offset 14, -4
1282:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   SDRAM_HandleTypeDef* hsdram = ( SDRAM_HandleTypeDef* )(hmdma->Parent);
 377              		.loc 1 1282 0
 378 0002 016C     		ldr	r1, [r0, #64]
 379              	.LVL25:
1283:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1284:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Disable the MDMA channel */
1285:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __HAL_MDMA_DISABLE(hmdma);
 380              		.loc 1 1285 0
 381 0004 0268     		ldr	r2, [r0]
 382 0006 D368     		ldr	r3, [r2, #12]
 383 0008 23F00103 		bic	r3, r3, #1
 384 000c D360     		str	r3, [r2, #12]
1286:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1287:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Update the SDRAM controller state */
1288:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_ERROR;
 385              		.loc 1 1288 0
 386 000e 0323     		movs	r3, #3
 387 0010 81F82C30 		strb	r3, [r1, #44]
1289:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1290:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
1291:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   hsdram->DmaXferErrorCallback(hmdma);
1292:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #else
1293:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_DMA_XferErrorCallback(hmdma);
 388              		.loc 1 1293 0
 389 0014 FFF7FEFF 		bl	HAL_SDRAM_DMA_XferErrorCallback
 390              	.LVL26:
 391 0018 08BD     		pop	{r3, pc}
 392              		.cfi_endproc
 393              	.LFE166:
 395              		.section	.text.HAL_SDRAM_Read_8b,"ax",%progbits
 396              		.align	1
 397              		.global	HAL_SDRAM_Read_8b
 398              		.syntax unified
 399              		.thumb
 400              		.thumb_func
 401              		.fpu fpv5-d16
 403              	HAL_SDRAM_Read_8b:
 404              	.LFB149:
 379:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint32_t size;
 405              		.loc 1 379 0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccXcuiRz.s 			page 31


 409              		@ link register save eliminated.
 410              	.LVL27:
 411 0000 30B4     		push	{r4, r5}
 412              	.LCFI7:
 413              		.cfi_def_cfa_offset 8
 414              		.cfi_offset 4, -8
 415              		.cfi_offset 5, -4
 416              	.LVL28:
 383:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 417              		.loc 1 383 0
 418 0002 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 419 0006 E4B2     		uxtb	r4, r4
 420              	.LVL29:
 386:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 421              		.loc 1 386 0
 422 0008 022C     		cmp	r4, #2
 423 000a 1BD0     		beq	.L36
 390:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 424              		.loc 1 390 0
 425 000c 042C     		cmp	r4, #4
 426 000e 18BF     		it	ne
 427 0010 012C     		cmpne	r4, #1
 428 0012 1AD1     		bne	.L37
 393:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 429              		.loc 1 393 0
 430 0014 90F82D50 		ldrb	r5, [r0, #45]	@ zero_extendqisi2
 431 0018 012D     		cmp	r5, #1
 432 001a 18D0     		beq	.L38
 393:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 433              		.loc 1 393 0 is_stmt 0 discriminator 2
 434 001c 0125     		movs	r5, #1
 435 001e 80F82D50 		strb	r5, [r0, #45]
 396:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 436              		.loc 1 396 0 is_stmt 1 discriminator 2
 437 0022 0225     		movs	r5, #2
 438 0024 80F82C50 		strb	r5, [r0, #44]
 439              	.LVL30:
 399:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 440              		.loc 1 399 0 discriminator 2
 441 0028 04E0     		b	.L34
 442              	.LVL31:
 443              	.L35:
 401:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       pdestbuff++;
 444              		.loc 1 401 0 discriminator 3
 445 002a 11F8015B 		ldrb	r5, [r1], #1	@ zero_extendqisi2
 446              	.LVL32:
 447 002e 02F8015B 		strb	r5, [r2], #1
 448              	.LVL33:
 399:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 449              		.loc 1 399 0 discriminator 3
 450 0032 013B     		subs	r3, r3, #1
 451              	.LVL34:
 452              	.L34:
 399:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 453              		.loc 1 399 0 is_stmt 0 discriminator 1
 454 0034 002B     		cmp	r3, #0
 455 0036 F8D1     		bne	.L35
ARM GAS  /tmp/ccXcuiRz.s 			page 32


 407:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 456              		.loc 1 407 0 is_stmt 1
 457 0038 80F82C40 		strb	r4, [r0, #44]
 410:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 458              		.loc 1 410 0
 459 003c 80F82D30 		strb	r3, [r0, #45]
 417:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 460              		.loc 1 417 0
 461 0040 1846     		mov	r0, r3
 462              	.LVL35:
 463 0042 00E0     		b	.L33
 464              	.LVL36:
 465              	.L36:
 388:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 466              		.loc 1 388 0
 467 0044 0220     		movs	r0, #2
 468              	.LVL37:
 469              	.L33:
 418:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 470              		.loc 1 418 0
 471 0046 30BC     		pop	{r4, r5}
 472              	.LCFI8:
 473              		.cfi_remember_state
 474              		.cfi_restore 5
 475              		.cfi_restore 4
 476              		.cfi_def_cfa_offset 0
 477              	.LVL38:
 478 0048 7047     		bx	lr
 479              	.LVL39:
 480              	.L37:
 481              	.LCFI9:
 482              		.cfi_restore_state
 414:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 483              		.loc 1 414 0
 484 004a 0120     		movs	r0, #1
 485              	.LVL40:
 486 004c FBE7     		b	.L33
 487              	.LVL41:
 488              	.L38:
 393:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 489              		.loc 1 393 0
 490 004e 0220     		movs	r0, #2
 491              	.LVL42:
 492 0050 F9E7     		b	.L33
 493              		.cfi_endproc
 494              	.LFE149:
 496              		.section	.text.HAL_SDRAM_Write_8b,"ax",%progbits
 497              		.align	1
 498              		.global	HAL_SDRAM_Write_8b
 499              		.syntax unified
 500              		.thumb
 501              		.thumb_func
 502              		.fpu fpv5-d16
 504              	HAL_SDRAM_Write_8b:
 505              	.LFB150:
 430:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint32_t size;
 506              		.loc 1 430 0
ARM GAS  /tmp/ccXcuiRz.s 			page 33


 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510              		@ link register save eliminated.
 511              	.LVL43:
 512 0000 10B4     		push	{r4}
 513              	.LCFI10:
 514              		.cfi_def_cfa_offset 4
 515              		.cfi_offset 4, -4
 516              	.LVL44:
 436:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 517              		.loc 1 436 0
 518 0002 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 519 0006 E4B2     		uxtb	r4, r4
 520 0008 022C     		cmp	r4, #2
 521 000a 20D0     		beq	.L44
 440:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 522              		.loc 1 440 0
 523 000c 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 524 0010 E4B2     		uxtb	r4, r4
 525 0012 012C     		cmp	r4, #1
 526 0014 01D0     		beq	.L48
 464:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 527              		.loc 1 464 0
 528 0016 0120     		movs	r0, #1
 529              	.LVL45:
 530 0018 1AE0     		b	.L41
 531              	.LVL46:
 532              	.L48:
 443:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 533              		.loc 1 443 0
 534 001a 90F82D40 		ldrb	r4, [r0, #45]	@ zero_extendqisi2
 535 001e 012C     		cmp	r4, #1
 536 0020 19D0     		beq	.L46
 443:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 537              		.loc 1 443 0 is_stmt 0 discriminator 2
 538 0022 0124     		movs	r4, #1
 539 0024 80F82D40 		strb	r4, [r0, #45]
 446:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 540              		.loc 1 446 0 is_stmt 1 discriminator 2
 541 0028 0224     		movs	r4, #2
 542 002a 80F82C40 		strb	r4, [r0, #44]
 543              	.LVL47:
 449:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 544              		.loc 1 449 0 discriminator 2
 545 002e 04E0     		b	.L42
 546              	.LVL48:
 547              	.L43:
 451:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       psrcbuff++;
 548              		.loc 1 451 0 discriminator 3
 549 0030 12F8014B 		ldrb	r4, [r2], #1	@ zero_extendqisi2
 550              	.LVL49:
 551 0034 01F8014B 		strb	r4, [r1], #1
 552              	.LVL50:
 449:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 553              		.loc 1 449 0 discriminator 3
 554 0038 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccXcuiRz.s 			page 34


 555              	.LVL51:
 556              	.L42:
 449:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 557              		.loc 1 449 0 is_stmt 0 discriminator 1
 558 003a 002B     		cmp	r3, #0
 559 003c F8D1     		bne	.L43
 457:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 	
 560              		.loc 1 457 0 is_stmt 1
 561 003e 0123     		movs	r3, #1
 562              	.LVL52:
 563 0040 80F82C30 		strb	r3, [r0, #44]
 460:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 564              		.loc 1 460 0
 565 0044 0023     		movs	r3, #0
 566 0046 80F82D30 		strb	r3, [r0, #45]
 467:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 567              		.loc 1 467 0
 568 004a 1846     		mov	r0, r3
 569              	.LVL53:
 570 004c 00E0     		b	.L41
 571              	.LVL54:
 572              	.L44:
 438:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 573              		.loc 1 438 0
 574 004e 0220     		movs	r0, #2
 575              	.LVL55:
 576              	.L41:
 468:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 577              		.loc 1 468 0
 578 0050 5DF8044B 		ldr	r4, [sp], #4
 579              	.LCFI11:
 580              		.cfi_remember_state
 581              		.cfi_restore 4
 582              		.cfi_def_cfa_offset 0
 583 0054 7047     		bx	lr
 584              	.LVL56:
 585              	.L46:
 586              	.LCFI12:
 587              		.cfi_restore_state
 443:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 588              		.loc 1 443 0
 589 0056 0220     		movs	r0, #2
 590              	.LVL57:
 591 0058 FAE7     		b	.L41
 592              		.cfi_endproc
 593              	.LFE150:
 595              		.section	.text.HAL_SDRAM_Read_16b,"ax",%progbits
 596              		.align	1
 597              		.global	HAL_SDRAM_Read_16b
 598              		.syntax unified
 599              		.thumb
 600              		.thumb_func
 601              		.fpu fpv5-d16
 603              	HAL_SDRAM_Read_16b:
 604              	.LFB151:
 480:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint32_t size;
 605              		.loc 1 480 0
ARM GAS  /tmp/ccXcuiRz.s 			page 35


 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 0, uses_anonymous_args = 0
 609              		@ link register save eliminated.
 610              	.LVL58:
 611 0000 70B4     		push	{r4, r5, r6}
 612              	.LCFI13:
 613              		.cfi_def_cfa_offset 12
 614              		.cfi_offset 4, -12
 615              		.cfi_offset 5, -8
 616              		.cfi_offset 6, -4
 617              	.LVL59:
 484:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 618              		.loc 1 484 0
 619 0002 90F82C60 		ldrb	r6, [r0, #44]	@ zero_extendqisi2
 620 0006 F6B2     		uxtb	r6, r6
 621              	.LVL60:
 487:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 622              		.loc 1 487 0
 623 0008 022E     		cmp	r6, #2
 624 000a 25D0     		beq	.L54
 491:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 625              		.loc 1 491 0
 626 000c 042E     		cmp	r6, #4
 627 000e 18BF     		it	ne
 628 0010 012E     		cmpne	r6, #1
 629 0012 24D1     		bne	.L55
 494:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 630              		.loc 1 494 0
 631 0014 90F82D40 		ldrb	r4, [r0, #45]	@ zero_extendqisi2
 632 0018 012C     		cmp	r4, #1
 633 001a 22D0     		beq	.L56
 494:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 634              		.loc 1 494 0 is_stmt 0 discriminator 2
 635 001c 0124     		movs	r4, #1
 636 001e 80F82D40 		strb	r4, [r0, #45]
 497:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 637              		.loc 1 497 0 is_stmt 1 discriminator 2
 638 0022 0224     		movs	r4, #2
 639 0024 80F82C40 		strb	r4, [r0, #44]
 640              	.LVL61:
 500:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 641              		.loc 1 500 0 discriminator 2
 642 0028 1D46     		mov	r5, r3
 643 002a 07E0     		b	.L51
 644              	.LVL62:
 645              	.L52:
 502:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       pdestbuff++;
 646              		.loc 1 502 0 discriminator 3
 647 002c 0C68     		ldr	r4, [r1]
 648 002e 1480     		strh	r4, [r2]	@ movhi
 649              	.LVL63:
 504:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       pdestbuff++;
 650              		.loc 1 504 0 discriminator 3
 651 0030 51F8044B 		ldr	r4, [r1], #4
 652              	.LVL64:
 653 0034 240C     		lsrs	r4, r4, #16
ARM GAS  /tmp/ccXcuiRz.s 			page 36


 654 0036 5480     		strh	r4, [r2, #2]	@ movhi
 505:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       pSdramAddress++;
 655              		.loc 1 505 0 discriminator 3
 656 0038 0432     		adds	r2, r2, #4
 657              	.LVL65:
 500:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 658              		.loc 1 500 0 discriminator 3
 659 003a 023D     		subs	r5, r5, #2
 660              	.LVL66:
 661              	.L51:
 500:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 662              		.loc 1 500 0 is_stmt 0 discriminator 1
 663 003c 012D     		cmp	r5, #1
 664 003e F5D8     		bhi	.L52
 510:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 665              		.loc 1 510 0 is_stmt 1
 666 0040 13F0010F 		tst	r3, #1
 667 0044 01D0     		beq	.L53
 512:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 668              		.loc 1 512 0
 669 0046 0B68     		ldr	r3, [r1]
 670              	.LVL67:
 671 0048 1380     		strh	r3, [r2]	@ movhi
 672              	.L53:
 516:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 673              		.loc 1 516 0
 674 004a 80F82C60 		strb	r6, [r0, #44]
 519:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 675              		.loc 1 519 0
 676 004e 0023     		movs	r3, #0
 677 0050 80F82D30 		strb	r3, [r0, #45]
 526:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 678              		.loc 1 526 0
 679 0054 1846     		mov	r0, r3
 680              	.LVL68:
 681 0056 00E0     		b	.L50
 682              	.LVL69:
 683              	.L54:
 489:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 684              		.loc 1 489 0
 685 0058 0220     		movs	r0, #2
 686              	.LVL70:
 687              	.L50:
 527:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 688              		.loc 1 527 0
 689 005a 70BC     		pop	{r4, r5, r6}
 690              	.LCFI14:
 691              		.cfi_remember_state
 692              		.cfi_restore 6
 693              		.cfi_restore 5
 694              		.cfi_restore 4
 695              		.cfi_def_cfa_offset 0
 696              	.LVL71:
 697 005c 7047     		bx	lr
 698              	.LVL72:
 699              	.L55:
 700              	.LCFI15:
ARM GAS  /tmp/ccXcuiRz.s 			page 37


 701              		.cfi_restore_state
 523:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 702              		.loc 1 523 0
 703 005e 0120     		movs	r0, #1
 704              	.LVL73:
 705 0060 FBE7     		b	.L50
 706              	.LVL74:
 707              	.L56:
 494:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 708              		.loc 1 494 0
 709 0062 0220     		movs	r0, #2
 710              	.LVL75:
 711 0064 F9E7     		b	.L50
 712              		.cfi_endproc
 713              	.LFE151:
 715              		.section	.text.HAL_SDRAM_Write_16b,"ax",%progbits
 716              		.align	1
 717              		.global	HAL_SDRAM_Write_16b
 718              		.syntax unified
 719              		.thumb
 720              		.thumb_func
 721              		.fpu fpv5-d16
 723              	HAL_SDRAM_Write_16b:
 724              	.LFB152:
 539:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint32_t size;
 725              		.loc 1 539 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 0
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729              		@ link register save eliminated.
 730              	.LVL76:
 731 0000 70B4     		push	{r4, r5, r6}
 732              	.LCFI16:
 733              		.cfi_def_cfa_offset 12
 734              		.cfi_offset 4, -12
 735              		.cfi_offset 5, -8
 736              		.cfi_offset 6, -4
 737              	.LVL77:
 545:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 738              		.loc 1 545 0
 739 0002 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 740 0006 E4B2     		uxtb	r4, r4
 741 0008 022C     		cmp	r4, #2
 742 000a 2FD0     		beq	.L63
 549:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 743              		.loc 1 549 0
 744 000c 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 745 0010 E4B2     		uxtb	r4, r4
 746 0012 012C     		cmp	r4, #1
 747 0014 01D0     		beq	.L67
 581:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 748              		.loc 1 581 0
 749 0016 0120     		movs	r0, #1
 750              	.LVL78:
 751 0018 29E0     		b	.L59
 752              	.LVL79:
 753              	.L67:
ARM GAS  /tmp/ccXcuiRz.s 			page 38


 552:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 754              		.loc 1 552 0
 755 001a 90F82D40 		ldrb	r4, [r0, #45]	@ zero_extendqisi2
 756 001e 012C     		cmp	r4, #1
 757 0020 27D0     		beq	.L65
 552:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 758              		.loc 1 552 0 is_stmt 0 discriminator 2
 759 0022 0124     		movs	r4, #1
 760 0024 80F82D40 		strb	r4, [r0, #45]
 555:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     
 761              		.loc 1 555 0 is_stmt 1 discriminator 2
 762 0028 0224     		movs	r4, #2
 763 002a 80F82C40 		strb	r4, [r0, #44]
 764              	.LVL80:
 558:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 765              		.loc 1 558 0 discriminator 2
 766 002e 1D46     		mov	r5, r3
 767 0030 09E0     		b	.L60
 768              	.LVL81:
 769              	.L61:
 560:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       psrcbuff++;
 770              		.loc 1 560 0 discriminator 3
 771 0032 1488     		ldrh	r4, [r2]
 772 0034 0C60     		str	r4, [r1]
 773              	.LVL82:
 562:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       psrcbuff++;
 774              		.loc 1 562 0 discriminator 3
 775 0036 0C68     		ldr	r4, [r1]
 776 0038 5688     		ldrh	r6, [r2, #2]
 777 003a 44EA0644 		orr	r4, r4, r6, lsl #16
 778 003e 41F8044B 		str	r4, [r1], #4
 779              	.LVL83:
 563:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       psdramaddress++;
 780              		.loc 1 563 0 discriminator 3
 781 0042 0432     		adds	r2, r2, #4
 782              	.LVL84:
 558:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 783              		.loc 1 558 0 discriminator 3
 784 0044 023D     		subs	r5, r5, #2
 785              	.LVL85:
 786              	.L60:
 558:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 787              		.loc 1 558 0 is_stmt 0 discriminator 1
 788 0046 012D     		cmp	r5, #1
 789 0048 F3D8     		bhi	.L61
 568:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 790              		.loc 1 568 0 is_stmt 1
 791 004a 13F0010F 		tst	r3, #1
 792 004e 05D0     		beq	.L62
 570:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 793              		.loc 1 570 0
 794 0050 1388     		ldrh	r3, [r2]
 795              	.LVL86:
 796 0052 0C68     		ldr	r4, [r1]
 797 0054 084A     		ldr	r2, .L68
 798              	.LVL87:
 799 0056 2240     		ands	r2, r2, r4
ARM GAS  /tmp/ccXcuiRz.s 			page 39


 800 0058 1343     		orrs	r3, r3, r2
 801 005a 0B60     		str	r3, [r1]
 802              	.L62:
 574:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 	
 803              		.loc 1 574 0
 804 005c 0123     		movs	r3, #1
 805 005e 80F82C30 		strb	r3, [r0, #44]
 577:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 806              		.loc 1 577 0
 807 0062 0023     		movs	r3, #0
 808 0064 80F82D30 		strb	r3, [r0, #45]
 584:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 809              		.loc 1 584 0
 810 0068 1846     		mov	r0, r3
 811              	.LVL88:
 812 006a 00E0     		b	.L59
 813              	.LVL89:
 814              	.L63:
 547:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 815              		.loc 1 547 0
 816 006c 0220     		movs	r0, #2
 817              	.LVL90:
 818              	.L59:
 585:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 819              		.loc 1 585 0
 820 006e 70BC     		pop	{r4, r5, r6}
 821              	.LCFI17:
 822              		.cfi_remember_state
 823              		.cfi_restore 6
 824              		.cfi_restore 5
 825              		.cfi_restore 4
 826              		.cfi_def_cfa_offset 0
 827 0070 7047     		bx	lr
 828              	.LVL91:
 829              	.L65:
 830              	.LCFI18:
 831              		.cfi_restore_state
 552:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 832              		.loc 1 552 0
 833 0072 0220     		movs	r0, #2
 834              	.LVL92:
 835 0074 FBE7     		b	.L59
 836              	.L69:
 837 0076 00BF     		.align	2
 838              	.L68:
 839 0078 0000FFFF 		.word	-65536
 840              		.cfi_endproc
 841              	.LFE152:
 843              		.section	.text.HAL_SDRAM_Read_32b,"ax",%progbits
 844              		.align	1
 845              		.global	HAL_SDRAM_Read_32b
 846              		.syntax unified
 847              		.thumb
 848              		.thumb_func
 849              		.fpu fpv5-d16
 851              	HAL_SDRAM_Read_32b:
 852              	.LFB153:
ARM GAS  /tmp/ccXcuiRz.s 			page 40


 597:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint32_t size;
 853              		.loc 1 597 0
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 0
 856              		@ frame_needed = 0, uses_anonymous_args = 0
 857              		@ link register save eliminated.
 858              	.LVL93:
 859 0000 30B4     		push	{r4, r5}
 860              	.LCFI19:
 861              		.cfi_def_cfa_offset 8
 862              		.cfi_offset 4, -8
 863              		.cfi_offset 5, -4
 864              	.LVL94:
 601:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 865              		.loc 1 601 0
 866 0002 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 867 0006 E4B2     		uxtb	r4, r4
 868              	.LVL95:
 604:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 869              		.loc 1 604 0
 870 0008 022C     		cmp	r4, #2
 871 000a 1BD0     		beq	.L74
 608:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 872              		.loc 1 608 0
 873 000c 042C     		cmp	r4, #4
 874 000e 18BF     		it	ne
 875 0010 012C     		cmpne	r4, #1
 876 0012 1AD1     		bne	.L75
 611:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 877              		.loc 1 611 0
 878 0014 90F82D50 		ldrb	r5, [r0, #45]	@ zero_extendqisi2
 879 0018 012D     		cmp	r5, #1
 880 001a 18D0     		beq	.L76
 611:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 881              		.loc 1 611 0 is_stmt 0 discriminator 2
 882 001c 0125     		movs	r5, #1
 883 001e 80F82D50 		strb	r5, [r0, #45]
 614:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 884              		.loc 1 614 0 is_stmt 1 discriminator 2
 885 0022 0225     		movs	r5, #2
 886 0024 80F82C50 		strb	r5, [r0, #44]
 887              	.LVL96:
 617:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 888              		.loc 1 617 0 discriminator 2
 889 0028 04E0     		b	.L72
 890              	.LVL97:
 891              	.L73:
 619:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       pdestbuff++;
 892              		.loc 1 619 0 discriminator 3
 893 002a 51F8045B 		ldr	r5, [r1], #4
 894              	.LVL98:
 895 002e 42F8045B 		str	r5, [r2], #4
 896              	.LVL99:
 617:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 897              		.loc 1 617 0 discriminator 3
 898 0032 013B     		subs	r3, r3, #1
 899              	.LVL100:
ARM GAS  /tmp/ccXcuiRz.s 			page 41


 900              	.L72:
 617:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 901              		.loc 1 617 0 is_stmt 0 discriminator 1
 902 0034 002B     		cmp	r3, #0
 903 0036 F8D1     		bne	.L73
 625:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 904              		.loc 1 625 0 is_stmt 1
 905 0038 80F82C40 		strb	r4, [r0, #44]
 628:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 906              		.loc 1 628 0
 907 003c 80F82D30 		strb	r3, [r0, #45]
 635:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 908              		.loc 1 635 0
 909 0040 1846     		mov	r0, r3
 910              	.LVL101:
 911 0042 00E0     		b	.L71
 912              	.LVL102:
 913              	.L74:
 606:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 914              		.loc 1 606 0
 915 0044 0220     		movs	r0, #2
 916              	.LVL103:
 917              	.L71:
 636:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 918              		.loc 1 636 0
 919 0046 30BC     		pop	{r4, r5}
 920              	.LCFI20:
 921              		.cfi_remember_state
 922              		.cfi_restore 5
 923              		.cfi_restore 4
 924              		.cfi_def_cfa_offset 0
 925              	.LVL104:
 926 0048 7047     		bx	lr
 927              	.LVL105:
 928              	.L75:
 929              	.LCFI21:
 930              		.cfi_restore_state
 632:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 931              		.loc 1 632 0
 932 004a 0120     		movs	r0, #1
 933              	.LVL106:
 934 004c FBE7     		b	.L71
 935              	.LVL107:
 936              	.L76:
 611:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 937              		.loc 1 611 0
 938 004e 0220     		movs	r0, #2
 939              	.LVL108:
 940 0050 F9E7     		b	.L71
 941              		.cfi_endproc
 942              	.LFE153:
 944              		.section	.text.HAL_SDRAM_Write_32b,"ax",%progbits
 945              		.align	1
 946              		.global	HAL_SDRAM_Write_32b
 947              		.syntax unified
 948              		.thumb
 949              		.thumb_func
ARM GAS  /tmp/ccXcuiRz.s 			page 42


 950              		.fpu fpv5-d16
 952              	HAL_SDRAM_Write_32b:
 953              	.LFB154:
 648:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint32_t size;
 954              		.loc 1 648 0
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 0
 957              		@ frame_needed = 0, uses_anonymous_args = 0
 958              		@ link register save eliminated.
 959              	.LVL109:
 960 0000 10B4     		push	{r4}
 961              	.LCFI22:
 962              		.cfi_def_cfa_offset 4
 963              		.cfi_offset 4, -4
 964              	.LVL110:
 654:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 965              		.loc 1 654 0
 966 0002 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 967 0006 E4B2     		uxtb	r4, r4
 968 0008 022C     		cmp	r4, #2
 969 000a 20D0     		beq	.L82
 658:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 970              		.loc 1 658 0
 971 000c 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 972 0010 E4B2     		uxtb	r4, r4
 973 0012 012C     		cmp	r4, #1
 974 0014 01D0     		beq	.L86
 682:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 975              		.loc 1 682 0
 976 0016 0120     		movs	r0, #1
 977              	.LVL111:
 978 0018 1AE0     		b	.L79
 979              	.LVL112:
 980              	.L86:
 661:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 981              		.loc 1 661 0
 982 001a 90F82D40 		ldrb	r4, [r0, #45]	@ zero_extendqisi2
 983 001e 012C     		cmp	r4, #1
 984 0020 19D0     		beq	.L84
 661:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 985              		.loc 1 661 0 is_stmt 0 discriminator 2
 986 0022 0124     		movs	r4, #1
 987 0024 80F82D40 		strb	r4, [r0, #45]
 664:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 988              		.loc 1 664 0 is_stmt 1 discriminator 2
 989 0028 0224     		movs	r4, #2
 990 002a 80F82C40 		strb	r4, [r0, #44]
 991              	.LVL113:
 667:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 992              		.loc 1 667 0 discriminator 2
 993 002e 04E0     		b	.L80
 994              	.LVL114:
 995              	.L81:
 669:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       psrcbuff++;
 996              		.loc 1 669 0 discriminator 3
 997 0030 52F8044B 		ldr	r4, [r2], #4
 998              	.LVL115:
ARM GAS  /tmp/ccXcuiRz.s 			page 43


 999 0034 41F8044B 		str	r4, [r1], #4
 1000              	.LVL116:
 667:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 1001              		.loc 1 667 0 discriminator 3
 1002 0038 013B     		subs	r3, r3, #1
 1003              	.LVL117:
 1004              	.L80:
 667:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 1005              		.loc 1 667 0 is_stmt 0 discriminator 1
 1006 003a 002B     		cmp	r3, #0
 1007 003c F8D1     		bne	.L81
 675:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 	
 1008              		.loc 1 675 0 is_stmt 1
 1009 003e 0123     		movs	r3, #1
 1010              	.LVL118:
 1011 0040 80F82C30 		strb	r3, [r0, #44]
 678:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1012              		.loc 1 678 0
 1013 0044 0023     		movs	r3, #0
 1014 0046 80F82D30 		strb	r3, [r0, #45]
 685:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 1015              		.loc 1 685 0
 1016 004a 1846     		mov	r0, r3
 1017              	.LVL119:
 1018 004c 00E0     		b	.L79
 1019              	.LVL120:
 1020              	.L82:
 656:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1021              		.loc 1 656 0
 1022 004e 0220     		movs	r0, #2
 1023              	.LVL121:
 1024              	.L79:
 686:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1025              		.loc 1 686 0
 1026 0050 5DF8044B 		ldr	r4, [sp], #4
 1027              	.LCFI23:
 1028              		.cfi_remember_state
 1029              		.cfi_restore 4
 1030              		.cfi_def_cfa_offset 0
 1031 0054 7047     		bx	lr
 1032              	.LVL122:
 1033              	.L84:
 1034              	.LCFI24:
 1035              		.cfi_restore_state
 661:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1036              		.loc 1 661 0
 1037 0056 0220     		movs	r0, #2
 1038              	.LVL123:
 1039 0058 FAE7     		b	.L79
 1040              		.cfi_endproc
 1041              	.LFE154:
 1043              		.section	.text.HAL_SDRAM_Read_DMA,"ax",%progbits
 1044              		.align	1
 1045              		.global	HAL_SDRAM_Read_DMA
 1046              		.syntax unified
 1047              		.thumb
 1048              		.thumb_func
ARM GAS  /tmp/ccXcuiRz.s 			page 44


 1049              		.fpu fpv5-d16
 1051              	HAL_SDRAM_Read_DMA:
 1052              	.LFB155:
 698:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_StatusTypeDef status;
 1053              		.loc 1 698 0
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 0
 1056              		@ frame_needed = 0, uses_anonymous_args = 0
 1057              	.LVL124:
 1058 0000 30B5     		push	{r4, r5, lr}
 1059              	.LCFI25:
 1060              		.cfi_def_cfa_offset 12
 1061              		.cfi_offset 4, -12
 1062              		.cfi_offset 5, -8
 1063              		.cfi_offset 14, -4
 1064 0002 83B0     		sub	sp, sp, #12
 1065              	.LCFI26:
 1066              		.cfi_def_cfa_offset 24
 700:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1067              		.loc 1 700 0
 1068 0004 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 1069 0008 E4B2     		uxtb	r4, r4
 1070              	.LVL125:
 703:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 1071              		.loc 1 703 0
 1072 000a 022C     		cmp	r4, #2
 1073 000c 24D0     		beq	.L91
 707:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 1074              		.loc 1 707 0
 1075 000e 042C     		cmp	r4, #4
 1076 0010 18BF     		it	ne
 1077 0012 012C     		cmpne	r4, #1
 1078 0014 23D1     		bne	.L92
 710:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1079              		.loc 1 710 0
 1080 0016 90F82D50 		ldrb	r5, [r0, #45]	@ zero_extendqisi2
 1081 001a 012D     		cmp	r5, #1
 1082 001c 21D0     		beq	.L93
 710:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1083              		.loc 1 710 0 is_stmt 0 discriminator 2
 1084 001e 0125     		movs	r5, #1
 1085 0020 80F82D50 		strb	r5, [r0, #45]
 713:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1086              		.loc 1 713 0 is_stmt 1 discriminator 2
 1087 0024 0225     		movs	r5, #2
 1088 0026 80F82C50 		strb	r5, [r0, #44]
 716:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 1089              		.loc 1 716 0 discriminator 2
 1090 002a 012C     		cmp	r4, #1
 1091 002c 10D0     		beq	.L95
 722:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 1092              		.loc 1 722 0
 1093 002e 046B     		ldr	r4, [r0, #48]
 1094              	.LVL126:
 1095 0030 0D4D     		ldr	r5, .L96
 1096 0032 6564     		str	r5, [r4, #68]
 1097              	.L90:
ARM GAS  /tmp/ccXcuiRz.s 			page 45


 1098 0034 0446     		mov	r4, r0
 724:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1099              		.loc 1 724 0
 1100 0036 006B     		ldr	r0, [r0, #48]
 1101              	.LVL127:
 1102 0038 0C4D     		ldr	r5, .L96+4
 1103 003a 4565     		str	r5, [r0, #84]
 727:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1104              		.loc 1 727 0
 1105 003c 0120     		movs	r0, #1
 1106 003e 0090     		str	r0, [sp]
 1107 0040 9B00     		lsls	r3, r3, #2
 1108              	.LVL128:
 1109 0042 206B     		ldr	r0, [r4, #48]
 1110 0044 FFF7FEFF 		bl	HAL_MDMA_Start_IT
 1111              	.LVL129:
 730:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1112              		.loc 1 730 0
 1113 0048 0023     		movs	r3, #0
 1114 004a 84F82D30 		strb	r3, [r4, #45]
 737:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 1115              		.loc 1 737 0
 1116 004e 04E0     		b	.L88
 1117              	.LVL130:
 1118              	.L95:
 718:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 1119              		.loc 1 718 0
 1120 0050 046B     		ldr	r4, [r0, #48]
 1121              	.LVL131:
 1122 0052 074D     		ldr	r5, .L96+8
 1123 0054 6564     		str	r5, [r4, #68]
 1124 0056 EDE7     		b	.L90
 1125              	.LVL132:
 1126              	.L91:
 705:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1127              		.loc 1 705 0
 1128 0058 0220     		movs	r0, #2
 1129              	.LVL133:
 1130              	.L88:
 738:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1131              		.loc 1 738 0
 1132 005a 03B0     		add	sp, sp, #12
 1133              	.LCFI27:
 1134              		.cfi_remember_state
 1135              		.cfi_def_cfa_offset 12
 1136              		@ sp needed
 1137 005c 30BD     		pop	{r4, r5, pc}
 1138              	.LVL134:
 1139              	.L92:
 1140              	.LCFI28:
 1141              		.cfi_restore_state
 734:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1142              		.loc 1 734 0
 1143 005e 0120     		movs	r0, #1
 1144              	.LVL135:
 1145 0060 FBE7     		b	.L88
 1146              	.LVL136:
ARM GAS  /tmp/ccXcuiRz.s 			page 46


 1147              	.L93:
 710:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1148              		.loc 1 710 0
 1149 0062 0220     		movs	r0, #2
 1150              	.LVL137:
 1151 0064 F9E7     		b	.L88
 1152              	.L97:
 1153 0066 00BF     		.align	2
 1154              	.L96:
 1155 0068 00000000 		.word	SDRAM_DMACpltProt
 1156 006c 00000000 		.word	SDRAM_DMAError
 1157 0070 00000000 		.word	SDRAM_DMACplt
 1158              		.cfi_endproc
 1159              	.LFE155:
 1161              		.section	.text.HAL_SDRAM_Write_DMA,"ax",%progbits
 1162              		.align	1
 1163              		.global	HAL_SDRAM_Write_DMA
 1164              		.syntax unified
 1165              		.thumb
 1166              		.thumb_func
 1167              		.fpu fpv5-d16
 1169              	HAL_SDRAM_Write_DMA:
 1170              	.LFB156:
 750:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_StatusTypeDef status;
 1171              		.loc 1 750 0
 1172              		.cfi_startproc
 1173              		@ args = 0, pretend = 0, frame = 0
 1174              		@ frame_needed = 0, uses_anonymous_args = 0
 1175              	.LVL138:
 1176 0000 70B5     		push	{r4, r5, r6, lr}
 1177              	.LCFI29:
 1178              		.cfi_def_cfa_offset 16
 1179              		.cfi_offset 4, -16
 1180              		.cfi_offset 5, -12
 1181              		.cfi_offset 6, -8
 1182              		.cfi_offset 14, -4
 1183 0002 82B0     		sub	sp, sp, #8
 1184              	.LCFI30:
 1185              		.cfi_def_cfa_offset 24
 754:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 1186              		.loc 1 754 0
 1187 0004 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 1188 0008 E4B2     		uxtb	r4, r4
 1189 000a 022C     		cmp	r4, #2
 1190 000c 25D0     		beq	.L100
 758:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 1191              		.loc 1 758 0
 1192 000e 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 1193 0012 E4B2     		uxtb	r4, r4
 1194 0014 012C     		cmp	r4, #1
 1195 0016 01D0     		beq	.L104
 778:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1196              		.loc 1 778 0
 1197 0018 0120     		movs	r0, #1
 1198              	.LVL139:
 1199 001a 1FE0     		b	.L99
 1200              	.LVL140:
ARM GAS  /tmp/ccXcuiRz.s 			page 47


 1201              	.L104:
 761:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1202              		.loc 1 761 0
 1203 001c 90F82D40 		ldrb	r4, [r0, #45]	@ zero_extendqisi2
 1204 0020 012C     		cmp	r4, #1
 1205 0022 01D1     		bne	.L105
 1206 0024 0220     		movs	r0, #2
 1207              	.LVL141:
 1208 0026 19E0     		b	.L99
 1209              	.LVL142:
 1210              	.L105:
 1211 0028 1446     		mov	r4, r2
 1212 002a 0A46     		mov	r2, r1
 1213              	.LVL143:
 1214 002c 0546     		mov	r5, r0
 761:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1215              		.loc 1 761 0 is_stmt 0 discriminator 2
 1216 002e 0121     		movs	r1, #1
 1217              	.LVL144:
 1218 0030 80F82D10 		strb	r1, [r0, #45]
 764:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1219              		.loc 1 764 0 is_stmt 1 discriminator 2
 1220 0034 0220     		movs	r0, #2
 1221              	.LVL145:
 1222 0036 85F82C00 		strb	r0, [r5, #44]
 767:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->hmdma->XferErrorCallback = SDRAM_DMAError;
 1223              		.loc 1 767 0 discriminator 2
 1224 003a 286B     		ldr	r0, [r5, #48]
 1225 003c 084E     		ldr	r6, .L106
 1226 003e 4664     		str	r6, [r0, #68]
 768:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1227              		.loc 1 768 0 discriminator 2
 1228 0040 286B     		ldr	r0, [r5, #48]
 1229 0042 084E     		ldr	r6, .L106+4
 1230 0044 4665     		str	r6, [r0, #84]
 771:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1231              		.loc 1 771 0 discriminator 2
 1232 0046 0091     		str	r1, [sp]
 1233 0048 9B00     		lsls	r3, r3, #2
 1234              	.LVL146:
 1235 004a 2146     		mov	r1, r4
 1236 004c 286B     		ldr	r0, [r5, #48]
 1237 004e FFF7FEFF 		bl	HAL_MDMA_Start_IT
 1238              	.LVL147:
 774:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1239              		.loc 1 774 0 discriminator 2
 1240 0052 0023     		movs	r3, #0
 1241 0054 85F82D30 		strb	r3, [r5, #45]
 781:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 1242              		.loc 1 781 0 discriminator 2
 1243 0058 00E0     		b	.L99
 1244              	.LVL148:
 1245              	.L100:
 756:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1246              		.loc 1 756 0
 1247 005a 0220     		movs	r0, #2
 1248              	.LVL149:
ARM GAS  /tmp/ccXcuiRz.s 			page 48


 1249              	.L99:
 782:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1250              		.loc 1 782 0
 1251 005c 02B0     		add	sp, sp, #8
 1252              	.LCFI31:
 1253              		.cfi_def_cfa_offset 16
 1254              		@ sp needed
 1255 005e 70BD     		pop	{r4, r5, r6, pc}
 1256              	.L107:
 1257              		.align	2
 1258              	.L106:
 1259 0060 00000000 		.word	SDRAM_DMACplt
 1260 0064 00000000 		.word	SDRAM_DMAError
 1261              		.cfi_endproc
 1262              	.LFE156:
 1264              		.section	.text.HAL_SDRAM_WriteProtection_Enable,"ax",%progbits
 1265              		.align	1
 1266              		.global	HAL_SDRAM_WriteProtection_Enable
 1267              		.syntax unified
 1268              		.thumb
 1269              		.thumb_func
 1270              		.fpu fpv5-d16
 1272              	HAL_SDRAM_WriteProtection_Enable:
 1273              	.LFB157:
1010:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 1274              		.loc 1 1010 0
 1275              		.cfi_startproc
 1276              		@ args = 0, pretend = 0, frame = 0
 1277              		@ frame_needed = 0, uses_anonymous_args = 0
 1278              	.LVL150:
1012:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 1279              		.loc 1 1012 0
 1280 0000 90F82C30 		ldrb	r3, [r0, #44]	@ zero_extendqisi2
 1281 0004 DBB2     		uxtb	r3, r3
 1282 0006 022B     		cmp	r3, #2
 1283 0008 14D0     		beq	.L110
1016:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 1284              		.loc 1 1016 0
 1285 000a 90F82C30 		ldrb	r3, [r0, #44]	@ zero_extendqisi2
 1286 000e DBB2     		uxtb	r3, r3
 1287 0010 012B     		cmp	r3, #1
 1288 0012 01D0     		beq	.L116
1029:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1289              		.loc 1 1029 0
 1290 0014 0120     		movs	r0, #1
 1291              	.LVL151:
 1292 0016 7047     		bx	lr
 1293              	.LVL152:
 1294              	.L116:
1010:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 1295              		.loc 1 1010 0
 1296 0018 10B5     		push	{r4, lr}
 1297              	.LCFI32:
 1298              		.cfi_def_cfa_offset 8
 1299              		.cfi_offset 4, -8
 1300              		.cfi_offset 14, -4
 1301 001a 0446     		mov	r4, r0
ARM GAS  /tmp/ccXcuiRz.s 			page 49


1019:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1302              		.loc 1 1019 0
 1303 001c 0223     		movs	r3, #2
 1304 001e 80F82C30 		strb	r3, [r0, #44]
1022:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1305              		.loc 1 1022 0
 1306 0022 4168     		ldr	r1, [r0, #4]
 1307 0024 0068     		ldr	r0, [r0]
 1308              	.LVL153:
 1309 0026 FFF7FEFF 		bl	FMC_SDRAM_WriteProtection_Enable
 1310              	.LVL154:
1025:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1311              		.loc 1 1025 0
 1312 002a 0423     		movs	r3, #4
 1313 002c 84F82C30 		strb	r3, [r4, #44]
1032:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 1314              		.loc 1 1032 0
 1315 0030 0020     		movs	r0, #0
 1316 0032 10BD     		pop	{r4, pc}
 1317              	.LVL155:
 1318              	.L110:
 1319              	.LCFI33:
 1320              		.cfi_def_cfa_offset 0
 1321              		.cfi_restore 4
 1322              		.cfi_restore 14
1014:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1323              		.loc 1 1014 0
 1324 0034 0220     		movs	r0, #2
 1325              	.LVL156:
 1326 0036 7047     		bx	lr
 1327              		.cfi_endproc
 1328              	.LFE157:
 1330              		.section	.text.HAL_SDRAM_WriteProtection_Disable,"ax",%progbits
 1331              		.align	1
 1332              		.global	HAL_SDRAM_WriteProtection_Disable
 1333              		.syntax unified
 1334              		.thumb
 1335              		.thumb_func
 1336              		.fpu fpv5-d16
 1338              	HAL_SDRAM_WriteProtection_Disable:
 1339              	.LFB158:
1042:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_StateTypeDef state = hsdram->State;
 1340              		.loc 1 1042 0
 1341              		.cfi_startproc
 1342              		@ args = 0, pretend = 0, frame = 0
 1343              		@ frame_needed = 0, uses_anonymous_args = 0
 1344              	.LVL157:
1043:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   
 1345              		.loc 1 1043 0
 1346 0000 90F82C30 		ldrb	r3, [r0, #44]	@ zero_extendqisi2
 1347 0004 DBB2     		uxtb	r3, r3
 1348              	.LVL158:
1046:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 1349              		.loc 1 1046 0
 1350 0006 022B     		cmp	r3, #2
 1351 0008 11D0     		beq	.L119
1050:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
ARM GAS  /tmp/ccXcuiRz.s 			page 50


 1352              		.loc 1 1050 0
 1353 000a 042B     		cmp	r3, #4
 1354 000c 01D0     		beq	.L125
1063:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1355              		.loc 1 1063 0
 1356 000e 0120     		movs	r0, #1
 1357              	.LVL159:
 1358 0010 7047     		bx	lr
 1359              	.LVL160:
 1360              	.L125:
1042:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_StateTypeDef state = hsdram->State;
 1361              		.loc 1 1042 0
 1362 0012 10B5     		push	{r4, lr}
 1363              	.LCFI34:
 1364              		.cfi_def_cfa_offset 8
 1365              		.cfi_offset 4, -8
 1366              		.cfi_offset 14, -4
 1367 0014 0446     		mov	r4, r0
1053:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1368              		.loc 1 1053 0
 1369 0016 0223     		movs	r3, #2
 1370              	.LVL161:
 1371 0018 80F82C30 		strb	r3, [r0, #44]
1056:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1372              		.loc 1 1056 0
 1373 001c 4168     		ldr	r1, [r0, #4]
 1374 001e 0068     		ldr	r0, [r0]
 1375              	.LVL162:
 1376 0020 FFF7FEFF 		bl	FMC_SDRAM_WriteProtection_Disable
 1377              	.LVL163:
1059:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1378              		.loc 1 1059 0
 1379 0024 0123     		movs	r3, #1
 1380 0026 84F82C30 		strb	r3, [r4, #44]
1066:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 1381              		.loc 1 1066 0
 1382 002a 0020     		movs	r0, #0
 1383 002c 10BD     		pop	{r4, pc}
 1384              	.LVL164:
 1385              	.L119:
 1386              	.LCFI35:
 1387              		.cfi_def_cfa_offset 0
 1388              		.cfi_restore 4
 1389              		.cfi_restore 14
1048:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1390              		.loc 1 1048 0
 1391 002e 0220     		movs	r0, #2
 1392              	.LVL165:
 1393 0030 7047     		bx	lr
 1394              		.cfi_endproc
 1395              	.LFE158:
 1397              		.section	.text.HAL_SDRAM_SendCommand,"ax",%progbits
 1398              		.align	1
 1399              		.global	HAL_SDRAM_SendCommand
 1400              		.syntax unified
 1401              		.thumb
 1402              		.thumb_func
ARM GAS  /tmp/ccXcuiRz.s 			page 51


 1403              		.fpu fpv5-d16
 1405              	HAL_SDRAM_SendCommand:
 1406              	.LFB159:
1078:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_StateTypeDef state = hsdram->State;
 1407              		.loc 1 1078 0
 1408              		.cfi_startproc
 1409              		@ args = 0, pretend = 0, frame = 0
 1410              		@ frame_needed = 0, uses_anonymous_args = 0
 1411              	.LVL166:
 1412 0000 38B5     		push	{r3, r4, r5, lr}
 1413              	.LCFI36:
 1414              		.cfi_def_cfa_offset 16
 1415              		.cfi_offset 3, -16
 1416              		.cfi_offset 4, -12
 1417              		.cfi_offset 5, -8
 1418              		.cfi_offset 14, -4
1079:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   
 1419              		.loc 1 1079 0
 1420 0002 90F82C30 		ldrb	r3, [r0, #44]	@ zero_extendqisi2
 1421 0006 DBB2     		uxtb	r3, r3
 1422              	.LVL167:
1082:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 1423              		.loc 1 1082 0
 1424 0008 022B     		cmp	r3, #2
 1425 000a 1AD0     		beq	.L129
1086:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 1426              		.loc 1 1086 0
 1427 000c 052B     		cmp	r3, #5
 1428 000e 18BF     		it	ne
 1429 0010 012B     		cmpne	r3, #1
 1430 0012 01D0     		beq	.L132
1106:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1431              		.loc 1 1106 0
 1432 0014 0120     		movs	r0, #1
 1433              	.LVL168:
1110:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1434              		.loc 1 1110 0
 1435 0016 38BD     		pop	{r3, r4, r5, pc}
 1436              	.LVL169:
 1437              	.L132:
 1438 0018 0D46     		mov	r5, r1
 1439 001a 0446     		mov	r4, r0
1089:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1440              		.loc 1 1089 0
 1441 001c 0223     		movs	r3, #2
 1442              	.LVL170:
 1443 001e 80F82C30 		strb	r3, [r0, #44]
1092:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1444              		.loc 1 1092 0
 1445 0022 0068     		ldr	r0, [r0]
 1446              	.LVL171:
 1447 0024 FFF7FEFF 		bl	FMC_SDRAM_SendCommand
 1448              	.LVL172:
1095:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 1449              		.loc 1 1095 0
 1450 0028 2B68     		ldr	r3, [r5]
 1451 002a 022B     		cmp	r3, #2
ARM GAS  /tmp/ccXcuiRz.s 			page 52


 1452 002c 04D0     		beq	.L133
1101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 1453              		.loc 1 1101 0
 1454 002e 0123     		movs	r3, #1
 1455 0030 84F82C30 		strb	r3, [r4, #44]
1109:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 1456              		.loc 1 1109 0
 1457 0034 0020     		movs	r0, #0
 1458 0036 38BD     		pop	{r3, r4, r5, pc}
 1459              	.LVL173:
 1460              	.L133:
1097:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 1461              		.loc 1 1097 0
 1462 0038 0523     		movs	r3, #5
 1463 003a 84F82C30 		strb	r3, [r4, #44]
1109:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 1464              		.loc 1 1109 0
 1465 003e 0020     		movs	r0, #0
 1466 0040 38BD     		pop	{r3, r4, r5, pc}
 1467              	.LVL174:
 1468              	.L129:
1084:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1469              		.loc 1 1084 0
 1470 0042 0220     		movs	r0, #2
 1471              	.LVL175:
 1472 0044 38BD     		pop	{r3, r4, r5, pc}
 1473              		.cfi_endproc
 1474              	.LFE159:
 1476              		.section	.text.HAL_SDRAM_ProgramRefreshRate,"ax",%progbits
 1477              		.align	1
 1478              		.global	HAL_SDRAM_ProgramRefreshRate
 1479              		.syntax unified
 1480              		.thumb
 1481              		.thumb_func
 1482              		.fpu fpv5-d16
 1484              	HAL_SDRAM_ProgramRefreshRate:
 1485              	.LFB160:
1120:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 1486              		.loc 1 1120 0
 1487              		.cfi_startproc
 1488              		@ args = 0, pretend = 0, frame = 0
 1489              		@ frame_needed = 0, uses_anonymous_args = 0
 1490              	.LVL176:
1122:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 1491              		.loc 1 1122 0
 1492 0000 90F82C30 		ldrb	r3, [r0, #44]	@ zero_extendqisi2
 1493 0004 DBB2     		uxtb	r3, r3
 1494 0006 022B     		cmp	r3, #2
 1495 0008 13D0     		beq	.L136
1126:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 1496              		.loc 1 1126 0
 1497 000a 90F82C30 		ldrb	r3, [r0, #44]	@ zero_extendqisi2
 1498 000e DBB2     		uxtb	r3, r3
 1499 0010 012B     		cmp	r3, #1
 1500 0012 01D0     		beq	.L142
1139:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1501              		.loc 1 1139 0
ARM GAS  /tmp/ccXcuiRz.s 			page 53


 1502 0014 0120     		movs	r0, #1
 1503              	.LVL177:
 1504 0016 7047     		bx	lr
 1505              	.LVL178:
 1506              	.L142:
1120:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 1507              		.loc 1 1120 0
 1508 0018 10B5     		push	{r4, lr}
 1509              	.LCFI37:
 1510              		.cfi_def_cfa_offset 8
 1511              		.cfi_offset 4, -8
 1512              		.cfi_offset 14, -4
 1513 001a 0446     		mov	r4, r0
1129:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1514              		.loc 1 1129 0
 1515 001c 0223     		movs	r3, #2
 1516 001e 80F82C30 		strb	r3, [r0, #44]
1132:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1517              		.loc 1 1132 0
 1518 0022 0068     		ldr	r0, [r0]
 1519              	.LVL179:
 1520 0024 FFF7FEFF 		bl	FMC_SDRAM_ProgramRefreshRate
 1521              	.LVL180:
1135:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1522              		.loc 1 1135 0
 1523 0028 0123     		movs	r3, #1
 1524 002a 84F82C30 		strb	r3, [r4, #44]
1142:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 1525              		.loc 1 1142 0
 1526 002e 0020     		movs	r0, #0
 1527 0030 10BD     		pop	{r4, pc}
 1528              	.LVL181:
 1529              	.L136:
 1530              	.LCFI38:
 1531              		.cfi_def_cfa_offset 0
 1532              		.cfi_restore 4
 1533              		.cfi_restore 14
1124:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1534              		.loc 1 1124 0
 1535 0032 0220     		movs	r0, #2
 1536              	.LVL182:
 1537 0034 7047     		bx	lr
 1538              		.cfi_endproc
 1539              	.LFE160:
 1541              		.section	.text.HAL_SDRAM_SetAutoRefreshNumber,"ax",%progbits
 1542              		.align	1
 1543              		.global	HAL_SDRAM_SetAutoRefreshNumber
 1544              		.syntax unified
 1545              		.thumb
 1546              		.thumb_func
 1547              		.fpu fpv5-d16
 1549              	HAL_SDRAM_SetAutoRefreshNumber:
 1550              	.LFB161:
1153:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 1551              		.loc 1 1153 0
 1552              		.cfi_startproc
 1553              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccXcuiRz.s 			page 54


 1554              		@ frame_needed = 0, uses_anonymous_args = 0
 1555              	.LVL183:
1155:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 1556              		.loc 1 1155 0
 1557 0000 90F82C30 		ldrb	r3, [r0, #44]	@ zero_extendqisi2
 1558 0004 DBB2     		uxtb	r3, r3
 1559 0006 022B     		cmp	r3, #2
 1560 0008 13D0     		beq	.L145
1159:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 1561              		.loc 1 1159 0
 1562 000a 90F82C30 		ldrb	r3, [r0, #44]	@ zero_extendqisi2
 1563 000e DBB2     		uxtb	r3, r3
 1564 0010 012B     		cmp	r3, #1
 1565 0012 01D0     		beq	.L151
1172:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1566              		.loc 1 1172 0
 1567 0014 0120     		movs	r0, #1
 1568              	.LVL184:
 1569 0016 7047     		bx	lr
 1570              	.LVL185:
 1571              	.L151:
1153:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 1572              		.loc 1 1153 0
 1573 0018 10B5     		push	{r4, lr}
 1574              	.LCFI39:
 1575              		.cfi_def_cfa_offset 8
 1576              		.cfi_offset 4, -8
 1577              		.cfi_offset 14, -4
 1578 001a 0446     		mov	r4, r0
1162:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1579              		.loc 1 1162 0
 1580 001c 0223     		movs	r3, #2
 1581 001e 80F82C30 		strb	r3, [r0, #44]
1165:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1582              		.loc 1 1165 0
 1583 0022 0068     		ldr	r0, [r0]
 1584              	.LVL186:
 1585 0024 FFF7FEFF 		bl	FMC_SDRAM_SetAutoRefreshNumber
 1586              	.LVL187:
1168:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1587              		.loc 1 1168 0
 1588 0028 0123     		movs	r3, #1
 1589 002a 84F82C30 		strb	r3, [r4, #44]
1175:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 1590              		.loc 1 1175 0
 1591 002e 0020     		movs	r0, #0
 1592 0030 10BD     		pop	{r4, pc}
 1593              	.LVL188:
 1594              	.L145:
 1595              	.LCFI40:
 1596              		.cfi_def_cfa_offset 0
 1597              		.cfi_restore 4
 1598              		.cfi_restore 14
1157:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1599              		.loc 1 1157 0
 1600 0032 0220     		movs	r0, #2
 1601              	.LVL189:
ARM GAS  /tmp/ccXcuiRz.s 			page 55


 1602 0034 7047     		bx	lr
 1603              		.cfi_endproc
 1604              	.LFE161:
 1606              		.section	.text.HAL_SDRAM_GetModeStatus,"ax",%progbits
 1607              		.align	1
 1608              		.global	HAL_SDRAM_GetModeStatus
 1609              		.syntax unified
 1610              		.thumb
 1611              		.thumb_func
 1612              		.fpu fpv5-d16
 1614              	HAL_SDRAM_GetModeStatus:
 1615              	.LFB162:
1185:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Return the SDRAM memory current mode */
 1616              		.loc 1 1185 0
 1617              		.cfi_startproc
 1618              		@ args = 0, pretend = 0, frame = 0
 1619              		@ frame_needed = 0, uses_anonymous_args = 0
 1620              	.LVL190:
 1621 0000 08B5     		push	{r3, lr}
 1622              	.LCFI41:
 1623              		.cfi_def_cfa_offset 8
 1624              		.cfi_offset 3, -8
 1625              		.cfi_offset 14, -4
1187:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 1626              		.loc 1 1187 0
 1627 0002 4168     		ldr	r1, [r0, #4]
 1628 0004 0068     		ldr	r0, [r0]
 1629              	.LVL191:
 1630 0006 FFF7FEFF 		bl	FMC_SDRAM_GetModeStatus
 1631              	.LVL192:
1188:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1632              		.loc 1 1188 0
 1633 000a 08BD     		pop	{r3, pc}
 1634              		.cfi_endproc
 1635              	.LFE162:
 1637              		.section	.text.HAL_SDRAM_GetState,"ax",%progbits
 1638              		.align	1
 1639              		.global	HAL_SDRAM_GetState
 1640              		.syntax unified
 1641              		.thumb
 1642              		.thumb_func
 1643              		.fpu fpv5-d16
 1645              	HAL_SDRAM_GetState:
 1646              	.LFB163:
1216:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return hsdram->State;
 1647              		.loc 1 1216 0
 1648              		.cfi_startproc
 1649              		@ args = 0, pretend = 0, frame = 0
 1650              		@ frame_needed = 0, uses_anonymous_args = 0
 1651              		@ link register save eliminated.
 1652              	.LVL193:
1217:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 1653              		.loc 1 1217 0
 1654 0000 90F82C00 		ldrb	r0, [r0, #44]	@ zero_extendqisi2
 1655              	.LVL194:
1218:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 1656              		.loc 1 1218 0
ARM GAS  /tmp/ccXcuiRz.s 			page 56


 1657 0004 7047     		bx	lr
 1658              		.cfi_endproc
 1659              	.LFE163:
 1661              		.text
 1662              	.Letext0:
 1663              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1664              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1665              		.file 4 "Libraries/CMSIS/Include/core_cm7.h"
 1666              		.file 5 "Libraries/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 1667              		.file 6 "Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 1668              		.file 7 "/usr/include/newlib/sys/lock.h"
 1669              		.file 8 "/usr/include/newlib/sys/_types.h"
 1670              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 1671              		.file 10 "/usr/include/newlib/sys/reent.h"
 1672              		.file 11 "/usr/include/newlib/math.h"
 1673              		.file 12 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1674              		.file 13 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_mdma.h"
 1675              		.file 14 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 1676              		.file 15 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_fmc.h"
 1677              		.file 16 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_sdram.h"
 1678              		.file 17 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccXcuiRz.s 			page 57


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_sdram.c
     /tmp/ccXcuiRz.s:17     .text.HAL_SDRAM_MspInit:0000000000000000 $t
     /tmp/ccXcuiRz.s:24     .text.HAL_SDRAM_MspInit:0000000000000000 HAL_SDRAM_MspInit
     /tmp/ccXcuiRz.s:38     .text.HAL_SDRAM_Init:0000000000000000 $t
     /tmp/ccXcuiRz.s:45     .text.HAL_SDRAM_Init:0000000000000000 HAL_SDRAM_Init
     /tmp/ccXcuiRz.s:117    .text.HAL_SDRAM_Init:000000000000004c $d
     /tmp/ccXcuiRz.s:122    .text.HAL_SDRAM_MspDeInit:0000000000000000 $t
     /tmp/ccXcuiRz.s:129    .text.HAL_SDRAM_MspDeInit:0000000000000000 HAL_SDRAM_MspDeInit
     /tmp/ccXcuiRz.s:142    .text.HAL_SDRAM_DeInit:0000000000000000 $t
     /tmp/ccXcuiRz.s:149    .text.HAL_SDRAM_DeInit:0000000000000000 HAL_SDRAM_DeInit
     /tmp/ccXcuiRz.s:182    .text.HAL_SDRAM_RefreshErrorCallback:0000000000000000 $t
     /tmp/ccXcuiRz.s:189    .text.HAL_SDRAM_RefreshErrorCallback:0000000000000000 HAL_SDRAM_RefreshErrorCallback
     /tmp/ccXcuiRz.s:202    .text.HAL_SDRAM_IRQHandler:0000000000000000 $t
     /tmp/ccXcuiRz.s:209    .text.HAL_SDRAM_IRQHandler:0000000000000000 HAL_SDRAM_IRQHandler
     /tmp/ccXcuiRz.s:243    .text.HAL_SDRAM_DMA_XferCpltCallback:0000000000000000 $t
     /tmp/ccXcuiRz.s:250    .text.HAL_SDRAM_DMA_XferCpltCallback:0000000000000000 HAL_SDRAM_DMA_XferCpltCallback
     /tmp/ccXcuiRz.s:263    .text.SDRAM_DMACpltProt:0000000000000000 $t
     /tmp/ccXcuiRz.s:269    .text.SDRAM_DMACpltProt:0000000000000000 SDRAM_DMACpltProt
     /tmp/ccXcuiRz.s:301    .text.SDRAM_DMACplt:0000000000000000 $t
     /tmp/ccXcuiRz.s:307    .text.SDRAM_DMACplt:0000000000000000 SDRAM_DMACplt
     /tmp/ccXcuiRz.s:338    .text.HAL_SDRAM_DMA_XferErrorCallback:0000000000000000 $t
     /tmp/ccXcuiRz.s:345    .text.HAL_SDRAM_DMA_XferErrorCallback:0000000000000000 HAL_SDRAM_DMA_XferErrorCallback
     /tmp/ccXcuiRz.s:358    .text.SDRAM_DMAError:0000000000000000 $t
     /tmp/ccXcuiRz.s:364    .text.SDRAM_DMAError:0000000000000000 SDRAM_DMAError
     /tmp/ccXcuiRz.s:396    .text.HAL_SDRAM_Read_8b:0000000000000000 $t
     /tmp/ccXcuiRz.s:403    .text.HAL_SDRAM_Read_8b:0000000000000000 HAL_SDRAM_Read_8b
     /tmp/ccXcuiRz.s:497    .text.HAL_SDRAM_Write_8b:0000000000000000 $t
     /tmp/ccXcuiRz.s:504    .text.HAL_SDRAM_Write_8b:0000000000000000 HAL_SDRAM_Write_8b
     /tmp/ccXcuiRz.s:596    .text.HAL_SDRAM_Read_16b:0000000000000000 $t
     /tmp/ccXcuiRz.s:603    .text.HAL_SDRAM_Read_16b:0000000000000000 HAL_SDRAM_Read_16b
     /tmp/ccXcuiRz.s:716    .text.HAL_SDRAM_Write_16b:0000000000000000 $t
     /tmp/ccXcuiRz.s:723    .text.HAL_SDRAM_Write_16b:0000000000000000 HAL_SDRAM_Write_16b
     /tmp/ccXcuiRz.s:839    .text.HAL_SDRAM_Write_16b:0000000000000078 $d
     /tmp/ccXcuiRz.s:844    .text.HAL_SDRAM_Read_32b:0000000000000000 $t
     /tmp/ccXcuiRz.s:851    .text.HAL_SDRAM_Read_32b:0000000000000000 HAL_SDRAM_Read_32b
     /tmp/ccXcuiRz.s:945    .text.HAL_SDRAM_Write_32b:0000000000000000 $t
     /tmp/ccXcuiRz.s:952    .text.HAL_SDRAM_Write_32b:0000000000000000 HAL_SDRAM_Write_32b
     /tmp/ccXcuiRz.s:1044   .text.HAL_SDRAM_Read_DMA:0000000000000000 $t
     /tmp/ccXcuiRz.s:1051   .text.HAL_SDRAM_Read_DMA:0000000000000000 HAL_SDRAM_Read_DMA
     /tmp/ccXcuiRz.s:1155   .text.HAL_SDRAM_Read_DMA:0000000000000068 $d
     /tmp/ccXcuiRz.s:1162   .text.HAL_SDRAM_Write_DMA:0000000000000000 $t
     /tmp/ccXcuiRz.s:1169   .text.HAL_SDRAM_Write_DMA:0000000000000000 HAL_SDRAM_Write_DMA
     /tmp/ccXcuiRz.s:1259   .text.HAL_SDRAM_Write_DMA:0000000000000060 $d
     /tmp/ccXcuiRz.s:1265   .text.HAL_SDRAM_WriteProtection_Enable:0000000000000000 $t
     /tmp/ccXcuiRz.s:1272   .text.HAL_SDRAM_WriteProtection_Enable:0000000000000000 HAL_SDRAM_WriteProtection_Enable
     /tmp/ccXcuiRz.s:1331   .text.HAL_SDRAM_WriteProtection_Disable:0000000000000000 $t
     /tmp/ccXcuiRz.s:1338   .text.HAL_SDRAM_WriteProtection_Disable:0000000000000000 HAL_SDRAM_WriteProtection_Disable
     /tmp/ccXcuiRz.s:1398   .text.HAL_SDRAM_SendCommand:0000000000000000 $t
     /tmp/ccXcuiRz.s:1405   .text.HAL_SDRAM_SendCommand:0000000000000000 HAL_SDRAM_SendCommand
     /tmp/ccXcuiRz.s:1477   .text.HAL_SDRAM_ProgramRefreshRate:0000000000000000 $t
     /tmp/ccXcuiRz.s:1484   .text.HAL_SDRAM_ProgramRefreshRate:0000000000000000 HAL_SDRAM_ProgramRefreshRate
     /tmp/ccXcuiRz.s:1542   .text.HAL_SDRAM_SetAutoRefreshNumber:0000000000000000 $t
     /tmp/ccXcuiRz.s:1549   .text.HAL_SDRAM_SetAutoRefreshNumber:0000000000000000 HAL_SDRAM_SetAutoRefreshNumber
     /tmp/ccXcuiRz.s:1607   .text.HAL_SDRAM_GetModeStatus:0000000000000000 $t
     /tmp/ccXcuiRz.s:1614   .text.HAL_SDRAM_GetModeStatus:0000000000000000 HAL_SDRAM_GetModeStatus
     /tmp/ccXcuiRz.s:1638   .text.HAL_SDRAM_GetState:0000000000000000 $t
ARM GAS  /tmp/ccXcuiRz.s 			page 58


     /tmp/ccXcuiRz.s:1645   .text.HAL_SDRAM_GetState:0000000000000000 HAL_SDRAM_GetState
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
FMC_SDRAM_Init
FMC_SDRAM_Timing_Init
FMC_SDRAM_DeInit
HAL_MDMA_Start_IT
FMC_SDRAM_WriteProtection_Enable
FMC_SDRAM_WriteProtection_Disable
FMC_SDRAM_SendCommand
FMC_SDRAM_ProgramRefreshRate
FMC_SDRAM_SetAutoRefreshNumber
FMC_SDRAM_GetModeStatus
