ARM GAS  /tmp/ccIpiKb7.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_rtc_ex.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_RTCEx_SetTimeStamp,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_RTCEx_SetTimeStamp
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	HAL_RTCEx_SetTimeStamp:
  25              	.LFB141:
  26              		.file 1 "Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c"
   1:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
   2:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ******************************************************************************
   3:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @file    stm32h7xx_hal_rtc_ex.c
   4:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @author  MCD Application Team
   5:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief   Extended RTC HAL module driver.
   6:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This file provides firmware functions to manage the following
   7:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          functionalities of the Real Time Clock (RTC) Extended peripheral:
   8:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *           + RTC Time Stamp functions
   9:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *           + RTC Tamper functions
  10:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *           + RTC Wake-up functions
  11:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *           + Extended Control functions
  12:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *           + Extended RTC features functions
  13:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
  14:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   @verbatim
  15:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ==============================================================================
  16:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****                   ##### How to use this driver #####
  17:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ==============================================================================
  18:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  19:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Enable the RTC domain access.
  20:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Configure the RTC Prescaler (Asynchronous and Synchronous) and RTC hour
  21:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         format using the HAL_RTC_Init() function.
  22:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  23:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** RTC Wakeup configuration ***
  24:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ================================
  25:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  26:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) To configure the RTC Wakeup Clock source and Counter use the HAL_RTCEx_SetWakeUpTimer()
  27:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function. You can also configure the RTC Wakeup timer with interrupt mode
  28:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         using the HAL_RTCEx_SetWakeUpTimer_IT() function.
  29:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) To read the RTC WakeUp Counter register, use the HAL_RTCEx_GetWakeUpTimer()
  30:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function.
  31:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  32:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** Outputs configuration ***
ARM GAS  /tmp/ccIpiKb7.s 			page 2


  33:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   =============================
  34:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]  The RTC has 2 different outputs:
  35:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) RTC_ALARM: this output is used to manage the RTC Alarm A, Alarm B
  36:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         and WaKeUp signals.
  37:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         To output the selected RTC signal, use the HAL_RTC_Init() function.
  38:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) RTC_CALIB: this output is 512Hz signal or 1Hz.
  39:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         To enable the RTC_CALIB, use the HAL_RTCEx_SetCalibrationOutPut() function.
  40:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Two pins can be used as RTC_ALARM or RTC_CALIB (PC13, PB2) managed on
  41:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         the RTC_OR register.
  42:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) When the RTC_CALIB or RTC_ALARM output is selected, the RTC_OUT pin is
  43:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         automatically configured in output alternate function.
  44:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  45:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** Smooth digital Calibration configuration ***
  46:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ================================================
  47:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  48:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Configure the RTC Original Digital Calibration Value and the corresponding
  49:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         calibration cycle period (32s,16s and 8s) using the HAL_RTCEx_SetSmoothCalib()
  50:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function.
  51:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  52:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** TimeStamp configuration ***
  53:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ===============================
  54:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  55:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Enable the RTC TimeStamp using the HAL_RTCEx_SetTimeStamp() function.
  56:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         You can also configure the RTC TimeStamp with interrupt mode using the
  57:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         HAL_RTCEx_SetTimeStamp_IT() function.
  58:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) To read the RTC TimeStamp Time and Date register, use the HAL_RTCEx_GetTimeStamp()
  59:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function.
  60:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  61:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** Internal TimeStamp configuration ***
  62:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ===============================
  63:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  64:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Enable the RTC internal TimeStamp using the HAL_RTCEx_SetInternalTimeStamp() function.
  65:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         User has to check internal timestamp occurrence using __HAL_RTC_INTERNAL_TIMESTAMP_GET_FLAG
  66:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) To read the RTC TimeStamp Time and Date register, use the HAL_RTCEx_GetTimeStamp()
  67:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function.
  68:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  69:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** Tamper configuration ***
  70:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ============================
  71:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  72:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Enable the RTC Tamper and configure the Tamper filter count, trigger Edge
  73:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         or Level according to the Tamper filter (if equal to 0 Edge else Level)
  74:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         value, sampling frequency, NoErase, MaskFlag,  precharge or discharge and
  75:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         Pull-UP using the HAL_RTCEx_SetTamper() function. You can configure RTC Tamper
  76:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         with interrupt mode using HAL_RTCEx_SetTamper_IT() function.
  77:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) The default configuration of the Tamper erases the backup registers. To avoid
  78:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         erase, enable the NoErase field on the RTC_TAMPCR register.
  79:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  80:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** Backup Data Registers configuration ***
  81:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ===========================================
  82:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  83:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) To write to the RTC Backup Data registers, use the HAL_RTCEx_BKUPWrite()
  84:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function.
  85:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) To read the RTC Backup Data registers, use the HAL_RTCEx_BKUPRead()
  86:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function.
  87:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  88:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    @endverbatim
  89:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ******************************************************************************
ARM GAS  /tmp/ccIpiKb7.s 			page 3


  90:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @attention
  91:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
  92:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  93:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * All rights reserved.</center></h2>
  94:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
  95:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  96:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * the "License"; You may not use this file except in compliance with the
  97:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * License. You may obtain a copy of the License at:
  98:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                        opensource.org/licenses/BSD-3-Clause
  99:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
 100:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ******************************************************************************
 101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 102:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 103:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Includes ------------------------------------------------------------------*/
 104:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #include "stm32h7xx_hal.h"
 105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 106:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup STM32H7xx_HAL_Driver
 107:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
 108:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 109:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 110:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @defgroup RTCEx RTCEx
 111:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief RTC Extended HAL module driver
 112:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
 113:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 114:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 115:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #ifdef HAL_RTC_MODULE_ENABLED
 116:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 117:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Private typedef -----------------------------------------------------------*/
 118:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Private define ------------------------------------------------------------*/
 119:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Private macro -------------------------------------------------------------*/
 120:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Private variables ---------------------------------------------------------*/
 121:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Private function prototypes -----------------------------------------------*/
 122:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Exported functions --------------------------------------------------------*/
 123:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 124:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @defgroup RTCEx_Exported_Functions RTCEx Exported Functions
 125:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
 126:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 127:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 128:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 129:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @defgroup RTCEx_Exported_Functions_Group1 RTC TimeStamp and Tamper functions
 130:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  *  @brief   RTC TimeStamp and Tamper functions
 131:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
 132:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @verbatim
 133:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
 134:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****                        ##### RTC TimeStamp and Tamper functions #####
 135:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
 136:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 137:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  [..] This section provides functions allowing to configure TimeStamp feature
 138:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 139:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @endverbatim
 140:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
 141:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 142:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 143:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 144:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set TimeStamp.
 145:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the TimeStamp feature.
 146:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
ARM GAS  /tmp/ccIpiKb7.s 			page 4


 147:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  TimeStampEdge Specifies the pin edge on which the TimeStamp is
 148:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         activated.
 149:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 150:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_RISING: the Time stamp event occurs on the
 151:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                                        rising edge of the related pin.
 152:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_FALLING: the Time stamp event occurs on the
 153:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                                         falling edge of the related pin.
 154:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  RTC_TimeStampPin specifies the RTC TimeStamp Pin.
 155:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 156:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_DEFAULT: PC13 is selected as RTC TimeStamp Pin.
 157:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *               The RTC TimeStamp Pin is per default PC13, but for reasons of
 158:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *               compatibility, this parameter is required.
 159:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 160:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 161:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTimeStamp(RTC_HandleTypeDef *hrtc, uint32_t TimeStampEdge, uint32_t 
 162:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
  27              		.loc 1 162 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 163:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 164:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 165:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 166:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_TIMESTAMP_EDGE(TimeStampEdge));
 167:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TIMESTAMP_PIN(RTC_TimeStampPin));
 168:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 169:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 170:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
  33              		.loc 1 170 0
  34 0000 90F82020 		ldrb	r2, [r0, #32]	@ zero_extendqisi2
  35              	.LVL1:
  36 0004 012A     		cmp	r2, #1
  37 0006 23D0     		beq	.L3
 162:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
  38              		.loc 1 162 0 discriminator 2
  39 0008 30B4     		push	{r4, r5}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 4, -8
  43              		.cfi_offset 5, -4
  44              		.loc 1 170 0 discriminator 2
  45 000a 0122     		movs	r2, #1
  46 000c 80F82020 		strb	r2, [r0, #32]
 171:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 172:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
  47              		.loc 1 172 0 discriminator 2
  48 0010 0223     		movs	r3, #2
  49 0012 80F82130 		strb	r3, [r0, #33]
 173:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 174:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 175:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
  50              		.loc 1 175 0 discriminator 2
  51 0016 0468     		ldr	r4, [r0]
  52 0018 A568     		ldr	r5, [r4, #8]
  53 001a A3F60B03 		subw	r3, r3, #2059
ARM GAS  /tmp/ccIpiKb7.s 			page 5


  54 001e 2B40     		ands	r3, r3, r5
  55              	.LVL2:
 176:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 177:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg|= TimeStampEdge;
  56              		.loc 1 177 0 discriminator 2
  57 0020 0B43     		orrs	r3, r3, r1
  58              	.LVL3:
 178:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 179:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 180:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
  59              		.loc 1 180 0 discriminator 2
  60 0022 CA21     		movs	r1, #202
  61              	.LVL4:
  62 0024 6162     		str	r1, [r4, #36]
  63 0026 0168     		ldr	r1, [r0]
  64 0028 5324     		movs	r4, #83
  65 002a 4C62     		str	r4, [r1, #36]
 181:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 182:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 183:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
  66              		.loc 1 183 0 discriminator 2
  67 002c 0168     		ldr	r1, [r0]
  68 002e 8B60     		str	r3, [r1, #8]
 184:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 185:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE(hrtc);
  69              		.loc 1 185 0 discriminator 2
  70 0030 0168     		ldr	r1, [r0]
  71 0032 8B68     		ldr	r3, [r1, #8]
  72              	.LVL5:
  73 0034 43F40063 		orr	r3, r3, #2048
  74 0038 8B60     		str	r3, [r1, #8]
 186:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 187:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 188:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
  75              		.loc 1 188 0 discriminator 2
  76 003a 0368     		ldr	r3, [r0]
  77 003c FF21     		movs	r1, #255
  78 003e 5962     		str	r1, [r3, #36]
 189:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 190:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
 191:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
  79              		.loc 1 191 0 discriminator 2
  80 0040 80F82120 		strb	r2, [r0, #33]
 192:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 193:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 194:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
  81              		.loc 1 194 0 discriminator 2
  82 0044 0023     		movs	r3, #0
  83 0046 80F82030 		strb	r3, [r0, #32]
 195:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 196:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
  84              		.loc 1 196 0 discriminator 2
  85 004a 1846     		mov	r0, r3
  86              	.LVL6:
 197:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
  87              		.loc 1 197 0 discriminator 2
  88 004c 30BC     		pop	{r4, r5}
ARM GAS  /tmp/ccIpiKb7.s 			page 6


  89              	.LCFI1:
  90              		.cfi_restore 5
  91              		.cfi_restore 4
  92              		.cfi_def_cfa_offset 0
  93              	.LVL7:
  94 004e 7047     		bx	lr
  95              	.LVL8:
  96              	.L3:
 170:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  97              		.loc 1 170 0
  98 0050 0220     		movs	r0, #2
  99              	.LVL9:
 100 0052 7047     		bx	lr
 101              		.cfi_endproc
 102              	.LFE141:
 104              		.section	.text.HAL_RTCEx_SetTimeStamp_IT,"ax",%progbits
 105              		.align	1
 106              		.global	HAL_RTCEx_SetTimeStamp_IT
 107              		.syntax unified
 108              		.thumb
 109              		.thumb_func
 110              		.fpu fpv5-d16
 112              	HAL_RTCEx_SetTimeStamp_IT:
 113              	.LFB142:
 198:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 199:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 200:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set TimeStamp with Interrupt.
 201:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 202:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the TimeStamp feature.
 203:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  TimeStampEdge Specifies the pin edge on which the TimeStamp is
 204:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         activated.
 205:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 206:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_RISING: the Time stamp event occurs on the
 207:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                                        rising edge of the related pin.
 208:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_FALLING: the Time stamp event occurs on the
 209:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                                         falling edge of the related pin.
 210:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  RTC_TimeStampPin Specifies the RTC TimeStamp Pin.
 211:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 212:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_DEFAULT: PC13 is selected as RTC TimeStamp Pin.
 213:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *               The RTC TimeStamp Pin is per default PC13, but for reasons of
 214:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *               compatibility, this parameter is required.
 215:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 216:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 217:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTimeStamp_IT(RTC_HandleTypeDef *hrtc, uint32_t TimeStampEdge, uint32
 218:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 114              		.loc 1 218 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118              		@ link register save eliminated.
 119              	.LVL10:
 219:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 220:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 221:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 222:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_TIMESTAMP_EDGE(TimeStampEdge));
 223:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TIMESTAMP_PIN(RTC_TimeStampPin));
 224:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccIpiKb7.s 			page 7


 225:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 226:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 120              		.loc 1 226 0
 121 0000 90F82020 		ldrb	r2, [r0, #32]	@ zero_extendqisi2
 122              	.LVL11:
 123 0004 012A     		cmp	r2, #1
 124 0006 33D0     		beq	.L10
 218:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 125              		.loc 1 218 0 discriminator 2
 126 0008 30B4     		push	{r4, r5}
 127              	.LCFI2:
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 4, -8
 130              		.cfi_offset 5, -4
 131              		.loc 1 226 0 discriminator 2
 132 000a 0122     		movs	r2, #1
 133 000c 80F82020 		strb	r2, [r0, #32]
 227:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 228:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 134              		.loc 1 228 0 discriminator 2
 135 0010 0223     		movs	r3, #2
 136 0012 80F82130 		strb	r3, [r0, #33]
 229:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 230:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 231:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
 137              		.loc 1 231 0 discriminator 2
 138 0016 0468     		ldr	r4, [r0]
 139 0018 A568     		ldr	r5, [r4, #8]
 140 001a A3F60B03 		subw	r3, r3, #2059
 141 001e 2B40     		ands	r3, r3, r5
 142              	.LVL12:
 232:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 233:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg |= TimeStampEdge;
 143              		.loc 1 233 0 discriminator 2
 144 0020 0B43     		orrs	r3, r3, r1
 145              	.LVL13:
 234:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 235:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 236:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 146              		.loc 1 236 0 discriminator 2
 147 0022 CA21     		movs	r1, #202
 148              	.LVL14:
 149 0024 6162     		str	r1, [r4, #36]
 150 0026 0168     		ldr	r1, [r0]
 151 0028 5324     		movs	r4, #83
 152 002a 4C62     		str	r4, [r1, #36]
 237:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 238:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 239:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
 153              		.loc 1 239 0 discriminator 2
 154 002c 0168     		ldr	r1, [r0]
 155 002e 8B60     		str	r3, [r1, #8]
 240:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 241:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE(hrtc);
 156              		.loc 1 241 0 discriminator 2
 157 0030 0168     		ldr	r1, [r0]
 158 0032 8B68     		ldr	r3, [r1, #8]
ARM GAS  /tmp/ccIpiKb7.s 			page 8


 159              	.LVL15:
 160 0034 43F40063 		orr	r3, r3, #2048
 161 0038 8B60     		str	r3, [r1, #8]
 242:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 243:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable IT timestamp */
 244:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE_IT(hrtc,RTC_IT_TS);
 162              		.loc 1 244 0 discriminator 2
 163 003a 0168     		ldr	r1, [r0]
 164 003c 8B68     		ldr	r3, [r1, #8]
 165 003e 43F40043 		orr	r3, r3, #32768
 166 0042 8B60     		str	r3, [r1, #8]
 245:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 246:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if !defined(DUAL_CORE)
 247:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* RTC timestamp Interrupt Configuration: EXTI configuration */
 248:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
 167              		.loc 1 248 0 discriminator 2
 168 0044 0B49     		ldr	r1, .L15
 169 0046 0B68     		ldr	r3, [r1]
 170 0048 43F48023 		orr	r3, r3, #262144
 171 004c 0B60     		str	r3, [r1]
 249:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
 250:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 251:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 252:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_EDGE();
 172              		.loc 1 252 0 discriminator 2
 173 004e 4FF0B041 		mov	r1, #1476395008
 174 0052 0B68     		ldr	r3, [r1]
 175 0054 43F48023 		orr	r3, r3, #262144
 176 0058 0B60     		str	r3, [r1]
 253:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 254:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 255:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 177              		.loc 1 255 0 discriminator 2
 178 005a 0368     		ldr	r3, [r0]
 179 005c FF21     		movs	r1, #255
 180 005e 5962     		str	r1, [r3, #36]
 256:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 257:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 181              		.loc 1 257 0 discriminator 2
 182 0060 80F82120 		strb	r2, [r0, #33]
 258:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 259:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 260:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 183              		.loc 1 260 0 discriminator 2
 184 0064 0023     		movs	r3, #0
 185 0066 80F82030 		strb	r3, [r0, #32]
 261:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 262:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 186              		.loc 1 262 0 discriminator 2
 187 006a 1846     		mov	r0, r3
 188              	.LVL16:
 263:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 189              		.loc 1 263 0 discriminator 2
 190 006c 30BC     		pop	{r4, r5}
 191              	.LCFI3:
 192              		.cfi_restore 5
 193              		.cfi_restore 4
ARM GAS  /tmp/ccIpiKb7.s 			page 9


 194              		.cfi_def_cfa_offset 0
 195              	.LVL17:
 196 006e 7047     		bx	lr
 197              	.LVL18:
 198              	.L10:
 226:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 199              		.loc 1 226 0
 200 0070 0220     		movs	r0, #2
 201              	.LVL19:
 202 0072 7047     		bx	lr
 203              	.L16:
 204              		.align	2
 205              	.L15:
 206 0074 80000058 		.word	1476395136
 207              		.cfi_endproc
 208              	.LFE142:
 210              		.section	.text.HAL_RTCEx_DeactivateTimeStamp,"ax",%progbits
 211              		.align	1
 212              		.global	HAL_RTCEx_DeactivateTimeStamp
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 216              		.fpu fpv5-d16
 218              	HAL_RTCEx_DeactivateTimeStamp:
 219              	.LFB143:
 264:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 265:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 266:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate TimeStamp.
 267:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 268:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 269:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 270:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateTimeStamp(RTC_HandleTypeDef *hrtc)
 271:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 220              		.loc 1 271 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224              		@ link register save eliminated.
 225              	.LVL20:
 272:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 273:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 274:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 275:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 226              		.loc 1 275 0
 227 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 228 0004 012B     		cmp	r3, #1
 229 0006 22D0     		beq	.L19
 271:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 230              		.loc 1 271 0 discriminator 2
 231 0008 10B4     		push	{r4}
 232              	.LCFI4:
 233              		.cfi_def_cfa_offset 4
 234              		.cfi_offset 4, -4
 235              		.loc 1 275 0 discriminator 2
 236 000a 0122     		movs	r2, #1
 237 000c 80F82020 		strb	r2, [r0, #32]
 276:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccIpiKb7.s 			page 10


 277:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 238              		.loc 1 277 0 discriminator 2
 239 0010 0223     		movs	r3, #2
 240 0012 80F82130 		strb	r3, [r0, #33]
 278:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 279:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 280:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 241              		.loc 1 280 0 discriminator 2
 242 0016 0368     		ldr	r3, [r0]
 243 0018 CA21     		movs	r1, #202
 244 001a 5962     		str	r1, [r3, #36]
 245 001c 0368     		ldr	r3, [r0]
 246 001e 5321     		movs	r1, #83
 247 0020 5962     		str	r1, [r3, #36]
 281:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 282:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */
 283:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_DISABLE_IT(hrtc, RTC_IT_TS);
 248              		.loc 1 283 0 discriminator 2
 249 0022 0168     		ldr	r1, [r0]
 250 0024 8B68     		ldr	r3, [r1, #8]
 251 0026 23F40043 		bic	r3, r3, #32768
 252 002a 8B60     		str	r3, [r1, #8]
 284:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 285:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 286:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
 253              		.loc 1 286 0 discriminator 2
 254 002c 0168     		ldr	r1, [r0]
 255 002e 8C68     		ldr	r4, [r1, #8]
 256 0030 084B     		ldr	r3, .L24
 257 0032 2340     		ands	r3, r3, r4
 258              	.LVL21:
 287:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 288:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 289:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
 259              		.loc 1 289 0 discriminator 2
 260 0034 8B60     		str	r3, [r1, #8]
 290:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 291:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 292:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 261              		.loc 1 292 0 discriminator 2
 262 0036 0368     		ldr	r3, [r0]
 263              	.LVL22:
 264 0038 FF21     		movs	r1, #255
 265              	.LVL23:
 266 003a 5962     		str	r1, [r3, #36]
 293:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 294:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 267              		.loc 1 294 0 discriminator 2
 268 003c 80F82120 		strb	r2, [r0, #33]
 295:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 296:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 297:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 269              		.loc 1 297 0 discriminator 2
 270 0040 0023     		movs	r3, #0
 271 0042 80F82030 		strb	r3, [r0, #32]
 298:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 299:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
ARM GAS  /tmp/ccIpiKb7.s 			page 11


 272              		.loc 1 299 0 discriminator 2
 273 0046 1846     		mov	r0, r3
 274              	.LVL24:
 300:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 275              		.loc 1 300 0 discriminator 2
 276 0048 5DF8044B 		ldr	r4, [sp], #4
 277              	.LCFI5:
 278              		.cfi_restore 4
 279              		.cfi_def_cfa_offset 0
 280              	.LVL25:
 281 004c 7047     		bx	lr
 282              	.LVL26:
 283              	.L19:
 275:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 284              		.loc 1 275 0
 285 004e 0220     		movs	r0, #2
 286              	.LVL27:
 287 0050 7047     		bx	lr
 288              	.L25:
 289 0052 00BF     		.align	2
 290              	.L24:
 291 0054 F7F7FFFF 		.word	-2057
 292              		.cfi_endproc
 293              	.LFE143:
 295              		.section	.text.HAL_RTCEx_SetInternalTimeStamp,"ax",%progbits
 296              		.align	1
 297              		.global	HAL_RTCEx_SetInternalTimeStamp
 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 301              		.fpu fpv5-d16
 303              	HAL_RTCEx_SetInternalTimeStamp:
 304              	.LFB144:
 301:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 302:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 303:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set Internal TimeStamp.
 304:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the internal TimeStamp feature.
 305:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 306:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 307:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 308:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 309:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetInternalTimeStamp(RTC_HandleTypeDef *hrtc)
 310:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 305              		.loc 1 310 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 310              	.LVL28:
 311:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 312:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 311              		.loc 1 312 0
 312 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 313 0004 012B     		cmp	r3, #1
 314 0006 1AD0     		beq	.L28
 315              		.loc 1 312 0 is_stmt 0 discriminator 2
 316 0008 0122     		movs	r2, #1
ARM GAS  /tmp/ccIpiKb7.s 			page 12


 317 000a 80F82020 		strb	r2, [r0, #32]
 313:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 314:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 318              		.loc 1 314 0 is_stmt 1 discriminator 2
 319 000e 0223     		movs	r3, #2
 320 0010 80F82130 		strb	r3, [r0, #33]
 315:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 316:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 317:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 321              		.loc 1 317 0 discriminator 2
 322 0014 0368     		ldr	r3, [r0]
 323 0016 CA21     		movs	r1, #202
 324 0018 5962     		str	r1, [r3, #36]
 325 001a 0368     		ldr	r3, [r0]
 326 001c 5321     		movs	r1, #83
 327 001e 5962     		str	r1, [r3, #36]
 318:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 319:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the internal Time Stamp Enable bits */
 320:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_INTERNAL_TIMESTAMP_ENABLE(hrtc);
 328              		.loc 1 320 0 discriminator 2
 329 0020 0168     		ldr	r1, [r0]
 330 0022 8B68     		ldr	r3, [r1, #8]
 331 0024 43F08073 		orr	r3, r3, #16777216
 332 0028 8B60     		str	r3, [r1, #8]
 321:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 322:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 323:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 333              		.loc 1 323 0 discriminator 2
 334 002a 0368     		ldr	r3, [r0]
 335 002c FF21     		movs	r1, #255
 336 002e 5962     		str	r1, [r3, #36]
 324:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 325:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
 326:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 337              		.loc 1 326 0 discriminator 2
 338 0030 80F82120 		strb	r2, [r0, #33]
 327:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 328:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 329:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 339              		.loc 1 329 0 discriminator 2
 340 0034 0023     		movs	r3, #0
 341 0036 80F82030 		strb	r3, [r0, #32]
 330:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 331:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 342              		.loc 1 331 0 discriminator 2
 343 003a 1846     		mov	r0, r3
 344              	.LVL29:
 345 003c 7047     		bx	lr
 346              	.LVL30:
 347              	.L28:
 312:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 348              		.loc 1 312 0
 349 003e 0220     		movs	r0, #2
 350              	.LVL31:
 332:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 351              		.loc 1 332 0
 352 0040 7047     		bx	lr
ARM GAS  /tmp/ccIpiKb7.s 			page 13


 353              		.cfi_endproc
 354              	.LFE144:
 356              		.section	.text.HAL_RTCEx_DeactivateInternalTimeStamp,"ax",%progbits
 357              		.align	1
 358              		.global	HAL_RTCEx_DeactivateInternalTimeStamp
 359              		.syntax unified
 360              		.thumb
 361              		.thumb_func
 362              		.fpu fpv5-d16
 364              	HAL_RTCEx_DeactivateInternalTimeStamp:
 365              	.LFB145:
 333:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 334:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 335:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 336:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate Internal TimeStamp.
 337:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 338:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 339:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 340:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 341:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateInternalTimeStamp(RTC_HandleTypeDef *hrtc)
 342:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 366              		.loc 1 342 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370              		@ link register save eliminated.
 371              	.LVL32:
 343:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 344:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 372              		.loc 1 344 0
 373 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 374 0004 012B     		cmp	r3, #1
 375 0006 1AD0     		beq	.L31
 376              		.loc 1 344 0 is_stmt 0 discriminator 2
 377 0008 0122     		movs	r2, #1
 378 000a 80F82020 		strb	r2, [r0, #32]
 345:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 346:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 379              		.loc 1 346 0 is_stmt 1 discriminator 2
 380 000e 0223     		movs	r3, #2
 381 0010 80F82130 		strb	r3, [r0, #33]
 347:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 348:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 349:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 382              		.loc 1 349 0 discriminator 2
 383 0014 0368     		ldr	r3, [r0]
 384 0016 CA21     		movs	r1, #202
 385 0018 5962     		str	r1, [r3, #36]
 386 001a 0368     		ldr	r3, [r0]
 387 001c 5321     		movs	r1, #83
 388 001e 5962     		str	r1, [r3, #36]
 350:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 351:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 352:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the internal Time Stamp Enable bits */
 353:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_INTERNAL_TIMESTAMP_DISABLE(hrtc);
 389              		.loc 1 353 0 discriminator 2
 390 0020 0168     		ldr	r1, [r0]
ARM GAS  /tmp/ccIpiKb7.s 			page 14


 391 0022 8B68     		ldr	r3, [r1, #8]
 392 0024 23F08073 		bic	r3, r3, #16777216
 393 0028 8B60     		str	r3, [r1, #8]
 354:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 355:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 356:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 394              		.loc 1 356 0 discriminator 2
 395 002a 0368     		ldr	r3, [r0]
 396 002c FF21     		movs	r1, #255
 397 002e 5962     		str	r1, [r3, #36]
 357:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 358:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 398              		.loc 1 358 0 discriminator 2
 399 0030 80F82120 		strb	r2, [r0, #33]
 359:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 360:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 361:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 400              		.loc 1 361 0 discriminator 2
 401 0034 0023     		movs	r3, #0
 402 0036 80F82030 		strb	r3, [r0, #32]
 362:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 363:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 403              		.loc 1 363 0 discriminator 2
 404 003a 1846     		mov	r0, r3
 405              	.LVL33:
 406 003c 7047     		bx	lr
 407              	.LVL34:
 408              	.L31:
 344:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 409              		.loc 1 344 0
 410 003e 0220     		movs	r0, #2
 411              	.LVL35:
 364:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 412              		.loc 1 364 0
 413 0040 7047     		bx	lr
 414              		.cfi_endproc
 415              	.LFE145:
 417              		.section	.text.HAL_RTCEx_GetTimeStamp,"ax",%progbits
 418              		.align	1
 419              		.global	HAL_RTCEx_GetTimeStamp
 420              		.syntax unified
 421              		.thumb
 422              		.thumb_func
 423              		.fpu fpv5-d16
 425              	HAL_RTCEx_GetTimeStamp:
 426              	.LFB146:
 365:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 366:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 367:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Get the RTC TimeStamp value.
 368:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 369:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sTimeStamp Pointer to Time structure
 370:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sTimeStampDate Pointer to Date structure
 371:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Format specifies the format of the entered parameters.
 372:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 373:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_FORMAT_BIN: Binary data format
 374:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
 375:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
ARM GAS  /tmp/ccIpiKb7.s 			page 15


 376:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 377:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_GetTimeStamp(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef* sTimeStamp, RTC_
 378:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 427              		.loc 1 378 0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 0, uses_anonymous_args = 0
 431              	.LVL36:
 432 0000 70B5     		push	{r4, r5, r6, lr}
 433              	.LCFI6:
 434              		.cfi_def_cfa_offset 16
 435              		.cfi_offset 4, -16
 436              		.cfi_offset 5, -12
 437              		.cfi_offset 6, -8
 438              		.cfi_offset 14, -4
 439 0002 0646     		mov	r6, r0
 440 0004 0C46     		mov	r4, r1
 441 0006 1546     		mov	r5, r2
 379:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmptime;
 380:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpdate;
 381:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 382:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 383:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_FORMAT(Format));
 384:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 385:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the TimeStamp time and date registers values */
 386:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmptime = (uint32_t)(hrtc->Instance->TSTR & RTC_TR_RESERVED_MASK);
 442              		.loc 1 386 0
 443 0008 0168     		ldr	r1, [r0]
 444              	.LVL37:
 445 000a 086B     		ldr	r0, [r1, #48]
 446              	.LVL38:
 447 000c 204A     		ldr	r2, .L36
 448              	.LVL39:
 449 000e 0240     		ands	r2, r2, r0
 450              	.LVL40:
 387:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpdate = (uint32_t)(hrtc->Instance->TSDR & RTC_DR_RESERVED_MASK);
 451              		.loc 1 387 0
 452 0010 486B     		ldr	r0, [r1, #52]
 453 0012 2049     		ldr	r1, .L36+4
 454 0014 0140     		ands	r1, r1, r0
 455              	.LVL41:
 388:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 389:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Fill the Time structure fields with the read parameters */
 390:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStamp->Hours      = (uint8_t)((tmptime & (RTC_TR_HT  | RTC_TR_HU))  >> RTC_TSTR_HU_Pos);
 456              		.loc 1 390 0
 457 0016 C2F30540 		ubfx	r0, r2, #16, #6
 458 001a 2070     		strb	r0, [r4]
 391:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStamp->Minutes    = (uint8_t)((tmptime & (RTC_TR_MNT | RTC_TR_MNU)) >> RTC_TSTR_MNU_Pos);
 459              		.loc 1 391 0
 460 001c C2F30620 		ubfx	r0, r2, #8, #7
 461 0020 6070     		strb	r0, [r4, #1]
 392:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStamp->Seconds    = (uint8_t) (tmptime & (RTC_TR_ST  | RTC_TR_SU));
 462              		.loc 1 392 0
 463 0022 A270     		strb	r2, [r4, #2]
 393:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStamp->TimeFormat = (uint8_t)((tmptime & (RTC_TR_PM))               >> RTC_TR_PM_Pos);
 464              		.loc 1 393 0
 465 0024 920D     		lsrs	r2, r2, #22
ARM GAS  /tmp/ccIpiKb7.s 			page 16


 466              	.LVL42:
 467 0026 E270     		strb	r2, [r4, #3]
 394:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStamp->SubSeconds = (uint32_t) hrtc->Instance->TSSSR;
 468              		.loc 1 394 0
 469 0028 3268     		ldr	r2, [r6]
 470 002a 926B     		ldr	r2, [r2, #56]
 471 002c 6260     		str	r2, [r4, #4]
 395:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 396:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Fill the Date structure fields with the read parameters */
 397:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStampDate->Year    = 0u;
 472              		.loc 1 397 0
 473 002e 0022     		movs	r2, #0
 474 0030 EA70     		strb	r2, [r5, #3]
 398:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStampDate->Month   = (uint8_t)((tmpdate & (RTC_DR_MT | RTC_DR_MU)) >> RTC_TSDR_MU_Pos);
 475              		.loc 1 398 0
 476 0032 C1F30422 		ubfx	r2, r1, #8, #5
 477 0036 6A70     		strb	r2, [r5, #1]
 399:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStampDate->Date    = (uint8_t) (tmpdate & (RTC_DR_DT | RTC_DR_DU));
 478              		.loc 1 399 0
 479 0038 A970     		strb	r1, [r5, #2]
 400:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStampDate->WeekDay = (uint8_t)((tmpdate & (RTC_DR_WDU))            >> RTC_TSDR_WDU_Pos);
 480              		.loc 1 400 0
 481 003a C1F34231 		ubfx	r1, r1, #13, #3
 482              	.LVL43:
 483 003e 2970     		strb	r1, [r5]
 401:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 402:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the input parameters format */
 403:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if(Format == RTC_FORMAT_BIN)
 484              		.loc 1 403 0
 485 0040 6BB1     		cbz	r3, .L35
 486              	.LVL44:
 487              	.L33:
 404:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 405:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Convert the TimeStamp structure parameters to Binary format */
 406:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStamp->Hours   = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Hours);
 407:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStamp->Minutes = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Minutes);
 408:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStamp->Seconds = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Seconds);
 409:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 410:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Convert the DateTimeStamp structure parameters to Binary format */
 411:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStampDate->Month   = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Month);
 412:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStampDate->Date    = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Date);
 413:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStampDate->WeekDay = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->WeekDay);
 414:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 415:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 416:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the TIMESTAMP Flags */
 417:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_INTERNAL_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_ITSF);
 488              		.loc 1 417 0
 489 0042 3168     		ldr	r1, [r6]
 490 0044 CA68     		ldr	r2, [r1, #12]
 491 0046 D2B2     		uxtb	r2, r2
 492 0048 134B     		ldr	r3, .L36+8
 493 004a 1343     		orrs	r3, r3, r2
 494 004c CB60     		str	r3, [r1, #12]
 418:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSF);
 495              		.loc 1 418 0
 496 004e 3268     		ldr	r2, [r6]
 497 0050 D368     		ldr	r3, [r2, #12]
ARM GAS  /tmp/ccIpiKb7.s 			page 17


 498 0052 DBB2     		uxtb	r3, r3
 499 0054 63F40863 		orn	r3, r3, #2176
 500 0058 D360     		str	r3, [r2, #12]
 419:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 420:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 421:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 501              		.loc 1 421 0
 502 005a 0020     		movs	r0, #0
 503 005c 70BD     		pop	{r4, r5, r6, pc}
 504              	.LVL45:
 505              	.L35:
 406:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStamp->Minutes = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Minutes);
 506              		.loc 1 406 0
 507 005e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 508 0060 FFF7FEFF 		bl	RTC_Bcd2ToByte
 509              	.LVL46:
 510 0064 2070     		strb	r0, [r4]
 407:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStamp->Seconds = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Seconds);
 511              		.loc 1 407 0
 512 0066 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 513 0068 FFF7FEFF 		bl	RTC_Bcd2ToByte
 514              	.LVL47:
 515 006c 6070     		strb	r0, [r4, #1]
 408:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 516              		.loc 1 408 0
 517 006e A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 518 0070 FFF7FEFF 		bl	RTC_Bcd2ToByte
 519              	.LVL48:
 520 0074 A070     		strb	r0, [r4, #2]
 411:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStampDate->Date    = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Date);
 521              		.loc 1 411 0
 522 0076 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 523 0078 FFF7FEFF 		bl	RTC_Bcd2ToByte
 524              	.LVL49:
 525 007c 6870     		strb	r0, [r5, #1]
 412:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStampDate->WeekDay = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->WeekDay);
 526              		.loc 1 412 0
 527 007e A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 528 0080 FFF7FEFF 		bl	RTC_Bcd2ToByte
 529              	.LVL50:
 530 0084 A870     		strb	r0, [r5, #2]
 413:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 531              		.loc 1 413 0
 532 0086 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 533 0088 FFF7FEFF 		bl	RTC_Bcd2ToByte
 534              	.LVL51:
 535 008c 2870     		strb	r0, [r5]
 536 008e D8E7     		b	.L33
 537              	.L37:
 538              		.align	2
 539              	.L36:
 540 0090 7F7F7F00 		.word	8355711
 541 0094 3FFFFF00 		.word	16777023
 542 0098 7FFFFDFF 		.word	-131201
 543              		.cfi_endproc
 544              	.LFE146:
 546              		.section	.text.HAL_RTCEx_SetTamper,"ax",%progbits
ARM GAS  /tmp/ccIpiKb7.s 			page 18


 547              		.align	1
 548              		.global	HAL_RTCEx_SetTamper
 549              		.syntax unified
 550              		.thumb
 551              		.thumb_func
 552              		.fpu fpv5-d16
 554              	HAL_RTCEx_SetTamper:
 555              	.LFB147:
 422:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 423:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 424:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 425:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set Tamper.
 426:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   By calling this API we disable the tamper interrupt for all tampers.
 427:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 428:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to Tamper Structure.
 429:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 430:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 431:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper(RTC_HandleTypeDef *hrtc, RTC_TamperTypeDef* sTamper)
 432:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 556              		.loc 1 432 0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 0, uses_anonymous_args = 0
 560              		@ link register save eliminated.
 561              	.LVL52:
 433:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 434:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 435:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 436:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper));
 437:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
 438:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_ERASE_MODE(sTamper->NoErase));
 439:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_MASKFLAG_STATE(sTamper->MaskFlag));
 440:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
 441:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));
 442:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
 443:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
 444:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
 445:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER_CONFIG_CORRECT(sTamper->Filter, sTamper->Trigger));
 446:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 447:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 448:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 562              		.loc 1 448 0
 563 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 564 0004 012B     		cmp	r3, #1
 565 0006 6ED0     		beq	.L54
 432:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 566              		.loc 1 432 0 discriminator 2
 567 0008 30B4     		push	{r4, r5}
 568              	.LCFI7:
 569              		.cfi_def_cfa_offset 8
 570              		.cfi_offset 4, -8
 571              		.cfi_offset 5, -4
 572              		.loc 1 448 0 discriminator 2
 573 000a 0123     		movs	r3, #1
 574 000c 80F82030 		strb	r3, [r0, #32]
 449:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 450:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
ARM GAS  /tmp/ccIpiKb7.s 			page 19


 575              		.loc 1 450 0 discriminator 2
 576 0010 0223     		movs	r3, #2
 577 0012 80F82130 		strb	r3, [r0, #33]
 451:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 452:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Copy control register into temporary variable */
 453:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg = hrtc->Instance->TAMPCR;
 578              		.loc 1 453 0 discriminator 2
 579 0016 0468     		ldr	r4, [r0]
 580 0018 236C     		ldr	r3, [r4, #64]
 581              	.LVL53:
 454:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 455:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable selected tamper */
 456:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg |= (sTamper->Tamper);
 582              		.loc 1 456 0 discriminator 2
 583 001a 0A68     		ldr	r2, [r1]
 584 001c 1343     		orrs	r3, r3, r2
 585              	.LVL54:
 457:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 458:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the bit (located just next to the tamper enable bit) */
 459:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if((sTamper->Trigger == RTC_TAMPERTRIGGER_HIGHLEVEL) || (sTamper->Trigger == RTC_TAMPERTRIGGER_FA
 586              		.loc 1 459 0 discriminator 2
 587 001e 8D68     		ldr	r5, [r1, #8]
 588 0020 022D     		cmp	r5, #2
 589 0022 18BF     		it	ne
 590 0024 082D     		cmpne	r5, #8
 591 0026 3BD1     		bne	.L40
 460:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 461:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Set the tamper trigger bit */
 462:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg |= (uint32_t) (sTamper->Tamper << 1u);
 592              		.loc 1 462 0
 593 0028 43EA4203 		orr	r3, r3, r2, lsl #1
 594              	.LVL55:
 595              	.L41:
 463:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 464:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
 465:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 466:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Clear the tamper trigger bit */
 467:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg &= (uint32_t)~(sTamper->Tamper << 1u);
 468:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 469:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 470:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper backup registers erasure bit */
 471:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if(sTamper->NoErase != RTC_TAMPER_ERASE_BACKUP_ENABLE)
 596              		.loc 1 471 0
 597 002c CD68     		ldr	r5, [r1, #12]
 598 002e 002D     		cmp	r5, #0
 599 0030 39D0     		beq	.L42
 472:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 473:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_1) != 0u)
 600              		.loc 1 473 0
 601 0032 12F0010F 		tst	r2, #1
 602 0036 01D0     		beq	.L43
 474:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 475:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t) (RTC_TAMPCR_TAMP1NOERASE);
 603              		.loc 1 475 0
 604 0038 43F40033 		orr	r3, r3, #131072
 605              	.LVL56:
 606              	.L43:
ARM GAS  /tmp/ccIpiKb7.s 			page 20


 476:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 477:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 478:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_2) != 0u)
 607              		.loc 1 478 0
 608 003c 12F0080F 		tst	r2, #8
 609 0040 01D0     		beq	.L44
 479:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 480:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t) (RTC_TAMPCR_TAMP2NOERASE);
 610              		.loc 1 480 0
 611 0042 43F48013 		orr	r3, r3, #1048576
 612              	.LVL57:
 613              	.L44:
 481:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 482:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 483:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_3) != 0u)
 614              		.loc 1 483 0
 615 0046 12F0200F 		tst	r2, #32
 616 004a 01D0     		beq	.L45
 484:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 485:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t) (RTC_TAMPCR_TAMP3NOERASE);
 617              		.loc 1 485 0
 618 004c 43F40003 		orr	r3, r3, #8388608
 619              	.LVL58:
 620              	.L45:
 486:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 487:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 488:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
 489:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 490:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_1) != 0u)
 491:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 492:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP1NOERASE);
 493:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 494:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 495:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_2) != 0u)
 496:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 497:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP2NOERASE);
 498:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 499:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 500:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_3) != 0u)
 501:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 502:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP3NOERASE);
 503:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 504:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 505:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 506:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper flags masking bit */
 507:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if(sTamper->MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE)
 621              		.loc 1 507 0
 622 0050 0D69     		ldr	r5, [r1, #16]
 623 0052 002D     		cmp	r5, #0
 624 0054 37D0     		beq	.L48
 508:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 509:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_1) != 0u)
 625              		.loc 1 509 0
 626 0056 12F0010F 		tst	r2, #1
 627 005a 01D0     		beq	.L49
 510:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 511:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t) (RTC_TAMPCR_TAMP1MF);
ARM GAS  /tmp/ccIpiKb7.s 			page 21


 628              		.loc 1 511 0
 629 005c 43F48023 		orr	r3, r3, #262144
 630              	.LVL59:
 631              	.L49:
 512:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 513:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 514:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_2) != 0u)
 632              		.loc 1 514 0
 633 0060 12F0080F 		tst	r2, #8
 634 0064 01D0     		beq	.L50
 515:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 516:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t) (RTC_TAMPCR_TAMP2MF);
 635              		.loc 1 516 0
 636 0066 43F40013 		orr	r3, r3, #2097152
 637              	.LVL60:
 638              	.L50:
 517:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 518:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 519:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_3) != 0u)
 639              		.loc 1 519 0
 640 006a 12F0200F 		tst	r2, #32
 641 006e 01D0     		beq	.L51
 520:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 521:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t) (RTC_TAMPCR_TAMP3MF);
 642              		.loc 1 521 0
 643 0070 43F08073 		orr	r3, r3, #16777216
 644              	.LVL61:
 645              	.L51:
 522:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 523:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 524:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
 525:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 526:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_1) != 0u)
 527:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 528:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP1MF);
 529:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 530:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 531:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_2) != 0u)
 532:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 533:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP2MF);
 534:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 535:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 536:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_3) != 0u)
 537:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 538:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP3MF);
 539:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 540:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 541:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 542:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clearing remaining fields before setting them */
 543:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg &= ~(RTC_TAMPERFILTER_MASK            | RTC_TAMPERSAMPLINGFREQ_RTCCLK_MASK |\
 646              		.loc 1 543 0
 647 0074 1D4A     		ldr	r2, .L59
 648 0076 1A40     		ands	r2, r2, r3
 649              	.LVL62:
 544:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****               RTC_TAMPERPRECHARGEDURATION_MASK | RTC_TAMPER_PULLUP_MASK             |\
 545:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****               RTC_TIMESTAMPONTAMPERDETECTION_MASK);
 546:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccIpiKb7.s 			page 22


 547:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Set remaining parameters of desired configuration into temporary variable */
 548:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg |= ((uint32_t)sTamper->Filter            |\
 650              		.loc 1 548 0
 651 0078 4B69     		ldr	r3, [r1, #20]
 549:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency |\
 652              		.loc 1 549 0
 653 007a 8D69     		ldr	r5, [r1, #24]
 548:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency |\
 654              		.loc 1 548 0
 655 007c 2B43     		orrs	r3, r3, r5
 550:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->PrechargeDuration |\
 656              		.loc 1 550 0
 657 007e CD69     		ldr	r5, [r1, #28]
 549:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency |\
 658              		.loc 1 549 0
 659 0080 2B43     		orrs	r3, r3, r5
 551:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->TamperPullUp      |\
 660              		.loc 1 551 0
 661 0082 0D6A     		ldr	r5, [r1, #32]
 550:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->PrechargeDuration |\
 662              		.loc 1 550 0
 663 0084 2B43     		orrs	r3, r3, r5
 552:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->TimeStampOnTamperDetection);
 664              		.loc 1 552 0
 665 0086 496A     		ldr	r1, [r1, #36]
 666              	.LVL63:
 551:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->TamperPullUp      |\
 667              		.loc 1 551 0
 668 0088 0B43     		orrs	r3, r3, r1
 548:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency |\
 669              		.loc 1 548 0
 670 008a 1343     		orrs	r3, r3, r2
 671              	.LVL64:
 553:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 554:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Copy desired configuration into configuration register */
 555:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR = tmpreg;
 672              		.loc 1 555 0
 673 008c 2364     		str	r3, [r4, #64]
 556:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 557:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 674              		.loc 1 557 0
 675 008e 0123     		movs	r3, #1
 676              	.LVL65:
 677 0090 80F82130 		strb	r3, [r0, #33]
 678              	.LVL66:
 558:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 559:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 560:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 679              		.loc 1 560 0
 680 0094 0023     		movs	r3, #0
 681 0096 80F82030 		strb	r3, [r0, #32]
 561:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 562:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 682              		.loc 1 562 0
 683 009a 1846     		mov	r0, r3
 684              	.LVL67:
 563:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
ARM GAS  /tmp/ccIpiKb7.s 			page 23


 685              		.loc 1 563 0
 686 009c 30BC     		pop	{r4, r5}
 687              	.LCFI8:
 688              		.cfi_remember_state
 689              		.cfi_restore 5
 690              		.cfi_restore 4
 691              		.cfi_def_cfa_offset 0
 692 009e 7047     		bx	lr
 693              	.LVL68:
 694              	.L40:
 695              	.LCFI9:
 696              		.cfi_restore_state
 467:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 697              		.loc 1 467 0
 698 00a0 23EA4203 		bic	r3, r3, r2, lsl #1
 699              	.LVL69:
 700 00a4 C2E7     		b	.L41
 701              	.L42:
 490:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 702              		.loc 1 490 0
 703 00a6 12F0010F 		tst	r2, #1
 704 00aa 01D0     		beq	.L46
 492:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 705              		.loc 1 492 0
 706 00ac 23F40033 		bic	r3, r3, #131072
 707              	.LVL70:
 708              	.L46:
 495:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 709              		.loc 1 495 0
 710 00b0 12F0080F 		tst	r2, #8
 711 00b4 01D0     		beq	.L47
 497:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 712              		.loc 1 497 0
 713 00b6 23F48013 		bic	r3, r3, #1048576
 714              	.LVL71:
 715              	.L47:
 500:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 716              		.loc 1 500 0
 717 00ba 12F0200F 		tst	r2, #32
 718 00be C7D0     		beq	.L45
 502:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 719              		.loc 1 502 0
 720 00c0 23F40003 		bic	r3, r3, #8388608
 721              	.LVL72:
 722 00c4 C4E7     		b	.L45
 723              	.L48:
 526:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 724              		.loc 1 526 0
 725 00c6 12F0010F 		tst	r2, #1
 726 00ca 01D0     		beq	.L52
 528:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 727              		.loc 1 528 0
 728 00cc 23F48023 		bic	r3, r3, #262144
 729              	.LVL73:
 730              	.L52:
 531:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 731              		.loc 1 531 0
ARM GAS  /tmp/ccIpiKb7.s 			page 24


 732 00d0 12F0080F 		tst	r2, #8
 733 00d4 01D0     		beq	.L53
 533:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 734              		.loc 1 533 0
 735 00d6 23F40013 		bic	r3, r3, #2097152
 736              	.LVL74:
 737              	.L53:
 536:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 738              		.loc 1 536 0
 739 00da 12F0200F 		tst	r2, #32
 740 00de C9D0     		beq	.L51
 538:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 741              		.loc 1 538 0
 742 00e0 23F08073 		bic	r3, r3, #16777216
 743              	.LVL75:
 744 00e4 C6E7     		b	.L51
 745              	.LVL76:
 746              	.L54:
 747              	.LCFI10:
 748              		.cfi_def_cfa_offset 0
 749              		.cfi_restore 4
 750              		.cfi_restore 5
 448:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 751              		.loc 1 448 0
 752 00e6 0220     		movs	r0, #2
 753              	.LVL77:
 754 00e8 7047     		bx	lr
 755              	.L60:
 756 00ea 00BF     		.align	2
 757              	.L59:
 758 00ec 7F00FFFF 		.word	-65409
 759              		.cfi_endproc
 760              	.LFE147:
 762              		.section	.text.HAL_RTCEx_SetTamper_IT,"ax",%progbits
 763              		.align	1
 764              		.global	HAL_RTCEx_SetTamper_IT
 765              		.syntax unified
 766              		.thumb
 767              		.thumb_func
 768              		.fpu fpv5-d16
 770              	HAL_RTCEx_SetTamper_IT:
 771              	.LFB148:
 564:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 565:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 566:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set Tamper with interrupt.
 567:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   By calling this API we force the tamper interrupt for all tampers.
 568:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 569:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to RTC Tamper.
 570:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 571:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 572:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper_IT(RTC_HandleTypeDef *hrtc, RTC_TamperTypeDef* sTamper)
 573:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 772              		.loc 1 573 0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 0
 775              		@ frame_needed = 0, uses_anonymous_args = 0
 776              		@ link register save eliminated.
ARM GAS  /tmp/ccIpiKb7.s 			page 25


 777              	.LVL78:
 574:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 575:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 576:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 577:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper));
 578:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_INTERRUPT(sTamper->Interrupt));
 579:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
 580:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_ERASE_MODE(sTamper->NoErase));
 581:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_MASKFLAG_STATE(sTamper->MaskFlag));
 582:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
 583:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));
 584:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
 585:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
 586:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
 587:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER_CONFIG_CORRECT(sTamper->Filter, sTamper->Trigger));
 588:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 589:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 590:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 778              		.loc 1 590 0
 779 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 780 0004 012B     		cmp	r3, #1
 781 0006 7BD0     		beq	.L77
 573:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 782              		.loc 1 573 0 discriminator 2
 783 0008 30B4     		push	{r4, r5}
 784              	.LCFI11:
 785              		.cfi_def_cfa_offset 8
 786              		.cfi_offset 4, -8
 787              		.cfi_offset 5, -4
 788              		.loc 1 590 0 discriminator 2
 789 000a 0123     		movs	r3, #1
 790 000c 80F82030 		strb	r3, [r0, #32]
 591:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 592:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 791              		.loc 1 592 0 discriminator 2
 792 0010 0223     		movs	r3, #2
 793 0012 80F82130 		strb	r3, [r0, #33]
 593:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 594:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Copy control register into temporary variable */
 595:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg = hrtc->Instance->TAMPCR;
 794              		.loc 1 595 0 discriminator 2
 795 0016 0468     		ldr	r4, [r0]
 796 0018 236C     		ldr	r3, [r4, #64]
 797              	.LVL79:
 596:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 597:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable selected tamper */
 598:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg |= (sTamper->Tamper);
 798              		.loc 1 598 0 discriminator 2
 799 001a 0A68     		ldr	r2, [r1]
 800 001c 1343     		orrs	r3, r3, r2
 801              	.LVL80:
 599:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 600:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper trigger bit (located just next to the tamper enable bit) */
 601:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if((sTamper->Trigger == RTC_TAMPERTRIGGER_HIGHLEVEL) || (sTamper->Trigger == RTC_TAMPERTRIGGER_FA
 802              		.loc 1 601 0 discriminator 2
 803 001e 8D68     		ldr	r5, [r1, #8]
 804 0020 022D     		cmp	r5, #2
ARM GAS  /tmp/ccIpiKb7.s 			page 26


 805 0022 18BF     		it	ne
 806 0024 082D     		cmpne	r5, #8
 807 0026 48D1     		bne	.L63
 602:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 603:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Set the tamper trigger bit */
 604:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg |= (uint32_t)(sTamper->Tamper << 1u);
 808              		.loc 1 604 0
 809 0028 43EA4203 		orr	r3, r3, r2, lsl #1
 810              	.LVL81:
 811              	.L64:
 605:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 606:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
 607:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 608:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Clear the tamper trigger bit */
 609:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg &= (uint32_t)~(sTamper->Tamper << 1u);
 610:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 611:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 612:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper backup registers erasure bit */
 613:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if(sTamper->NoErase != RTC_TAMPER_ERASE_BACKUP_ENABLE)
 812              		.loc 1 613 0
 813 002c CD68     		ldr	r5, [r1, #12]
 814 002e 002D     		cmp	r5, #0
 815 0030 46D0     		beq	.L65
 614:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 615:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_1) != 0u)
 816              		.loc 1 615 0
 817 0032 12F0010F 		tst	r2, #1
 818 0036 01D0     		beq	.L66
 616:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 617:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t) (RTC_TAMPCR_TAMP1NOERASE);
 819              		.loc 1 617 0
 820 0038 43F40033 		orr	r3, r3, #131072
 821              	.LVL82:
 822              	.L66:
 618:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 619:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 620:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_2) != 0u)
 823              		.loc 1 620 0
 824 003c 12F0080F 		tst	r2, #8
 825 0040 01D0     		beq	.L67
 621:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 622:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t) (RTC_TAMPCR_TAMP2NOERASE);
 826              		.loc 1 622 0
 827 0042 43F48013 		orr	r3, r3, #1048576
 828              	.LVL83:
 829              	.L67:
 623:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 624:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 625:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_3) != 0u)
 830              		.loc 1 625 0
 831 0046 12F0200F 		tst	r2, #32
 832 004a 01D0     		beq	.L68
 626:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 627:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t) (RTC_TAMPCR_TAMP3NOERASE);
 833              		.loc 1 627 0
 834 004c 43F40003 		orr	r3, r3, #8388608
 835              	.LVL84:
ARM GAS  /tmp/ccIpiKb7.s 			page 27


 836              	.L68:
 628:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 629:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 630:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
 631:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 632:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_1) != 0u)
 633:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 634:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP1NOERASE);
 635:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 636:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 637:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_2) != 0u)
 638:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 639:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP2NOERASE);
 640:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 641:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 642:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_3) != 0u)
 643:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 644:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP3NOERASE);
 645:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 646:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 647:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 648:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper flags masking bit */
 649:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if(sTamper->MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE)
 837              		.loc 1 649 0
 838 0050 0D69     		ldr	r5, [r1, #16]
 839 0052 002D     		cmp	r5, #0
 840 0054 44D0     		beq	.L71
 650:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 651:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_1) != 0u)
 841              		.loc 1 651 0
 842 0056 12F0010F 		tst	r2, #1
 843 005a 01D0     		beq	.L72
 652:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 653:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t) (RTC_TAMPCR_TAMP1MF);
 844              		.loc 1 653 0
 845 005c 43F48023 		orr	r3, r3, #262144
 846              	.LVL85:
 847              	.L72:
 654:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 655:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 656:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_2) != 0u)
 848              		.loc 1 656 0
 849 0060 12F0080F 		tst	r2, #8
 850 0064 01D0     		beq	.L73
 657:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 658:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t) (RTC_TAMPCR_TAMP2MF);
 851              		.loc 1 658 0
 852 0066 43F40013 		orr	r3, r3, #2097152
 853              	.LVL86:
 854              	.L73:
 659:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 660:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 661:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_3) != 0u)
 855              		.loc 1 661 0
 856 006a 12F0200F 		tst	r2, #32
 857 006e 01D0     		beq	.L74
 662:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
ARM GAS  /tmp/ccIpiKb7.s 			page 28


 663:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t) (RTC_TAMPCR_TAMP3MF);
 858              		.loc 1 663 0
 859 0070 43F08073 		orr	r3, r3, #16777216
 860              	.LVL87:
 861              	.L74:
 664:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 665:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 666:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
 667:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 668:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_1) != 0u)
 669:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 670:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP1MF);
 671:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 672:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 673:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_2) != 0u)
 674:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 675:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP2MF);
 676:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 677:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 678:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_3) != 0u)
 679:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 680:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP3MF);
 681:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 682:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 683:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 684:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clearing remaining fields before setting them */
 685:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg &= ~(RTC_TAMPERFILTER_MASK            | RTC_TAMPERSAMPLINGFREQ_RTCCLK_MASK |\
 862              		.loc 1 685 0
 863 0074 234A     		ldr	r2, .L82
 864 0076 1A40     		ands	r2, r2, r3
 865              	.LVL88:
 686:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****               RTC_TAMPERPRECHARGEDURATION_MASK | RTC_TAMPER_PULLUP_MASK             |\
 687:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****               RTC_TIMESTAMPONTAMPERDETECTION_MASK);
 688:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 689:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Set remaining parameters of desired configuration into temporary variable */
 690:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg |= ((uint32_t)sTamper->Filter            |\
 866              		.loc 1 690 0
 867 0078 4B69     		ldr	r3, [r1, #20]
 691:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency |\
 868              		.loc 1 691 0
 869 007a 8D69     		ldr	r5, [r1, #24]
 690:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency |\
 870              		.loc 1 690 0
 871 007c 2B43     		orrs	r3, r3, r5
 692:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->PrechargeDuration |\
 872              		.loc 1 692 0
 873 007e CD69     		ldr	r5, [r1, #28]
 691:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency |\
 874              		.loc 1 691 0
 875 0080 2B43     		orrs	r3, r3, r5
 693:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->TamperPullUp      |\
 876              		.loc 1 693 0
 877 0082 0D6A     		ldr	r5, [r1, #32]
 692:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->PrechargeDuration |\
 878              		.loc 1 692 0
 879 0084 2B43     		orrs	r3, r3, r5
 694:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->TimeStampOnTamperDetection);
ARM GAS  /tmp/ccIpiKb7.s 			page 29


 880              		.loc 1 694 0
 881 0086 4D6A     		ldr	r5, [r1, #36]
 693:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->TamperPullUp      |\
 882              		.loc 1 693 0
 883 0088 2B43     		orrs	r3, r3, r5
 690:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency |\
 884              		.loc 1 690 0
 885 008a 1343     		orrs	r3, r3, r2
 886              	.LVL89:
 695:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 696:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable interrupt on selected tamper */
 697:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg |= (uint32_t)sTamper->Interrupt;
 887              		.loc 1 697 0
 888 008c 4A68     		ldr	r2, [r1, #4]
 889 008e 1343     		orrs	r3, r3, r2
 890              	.LVL90:
 698:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 699:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Copy desired configuration into configuration register */
 700:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR = tmpreg;
 891              		.loc 1 700 0
 892 0090 2364     		str	r3, [r4, #64]
 701:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 702:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if !defined(DUAL_CORE)
 703:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****      /* RTC Tamper Interrupt Configuration: EXTI configuration */
 704:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****      __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
 893              		.loc 1 704 0
 894 0092 1D4A     		ldr	r2, .L82+4
 895 0094 1368     		ldr	r3, [r2]
 896              	.LVL91:
 897 0096 43F48023 		orr	r3, r3, #262144
 898 009a 1360     		str	r3, [r2]
 899              	.LVL92:
 705:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
 706:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 707:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_EDGE();
 900              		.loc 1 707 0
 901 009c 4FF0B042 		mov	r2, #1476395008
 902 00a0 1368     		ldr	r3, [r2]
 903 00a2 43F48023 		orr	r3, r3, #262144
 904 00a6 1360     		str	r3, [r2]
 708:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 709:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 905              		.loc 1 709 0
 906 00a8 0123     		movs	r3, #1
 907 00aa 80F82130 		strb	r3, [r0, #33]
 710:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 711:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 712:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 908              		.loc 1 712 0
 909 00ae 0023     		movs	r3, #0
 910 00b0 80F82030 		strb	r3, [r0, #32]
 713:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 714:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 911              		.loc 1 714 0
 912 00b4 1846     		mov	r0, r3
 913              	.LVL93:
 715:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
ARM GAS  /tmp/ccIpiKb7.s 			page 30


 914              		.loc 1 715 0
 915 00b6 30BC     		pop	{r4, r5}
 916              	.LCFI12:
 917              		.cfi_remember_state
 918              		.cfi_restore 5
 919              		.cfi_restore 4
 920              		.cfi_def_cfa_offset 0
 921 00b8 7047     		bx	lr
 922              	.LVL94:
 923              	.L63:
 924              	.LCFI13:
 925              		.cfi_restore_state
 609:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 926              		.loc 1 609 0
 927 00ba 23EA4203 		bic	r3, r3, r2, lsl #1
 928              	.LVL95:
 929 00be B5E7     		b	.L64
 930              	.L65:
 632:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 931              		.loc 1 632 0
 932 00c0 12F0010F 		tst	r2, #1
 933 00c4 01D0     		beq	.L69
 634:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 934              		.loc 1 634 0
 935 00c6 23F40033 		bic	r3, r3, #131072
 936              	.LVL96:
 937              	.L69:
 637:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 938              		.loc 1 637 0
 939 00ca 12F0080F 		tst	r2, #8
 940 00ce 01D0     		beq	.L70
 639:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 941              		.loc 1 639 0
 942 00d0 23F48013 		bic	r3, r3, #1048576
 943              	.LVL97:
 944              	.L70:
 642:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 945              		.loc 1 642 0
 946 00d4 12F0200F 		tst	r2, #32
 947 00d8 BAD0     		beq	.L68
 644:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 948              		.loc 1 644 0
 949 00da 23F40003 		bic	r3, r3, #8388608
 950              	.LVL98:
 951 00de B7E7     		b	.L68
 952              	.L71:
 668:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 953              		.loc 1 668 0
 954 00e0 12F0010F 		tst	r2, #1
 955 00e4 01D0     		beq	.L75
 670:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 956              		.loc 1 670 0
 957 00e6 23F48023 		bic	r3, r3, #262144
 958              	.LVL99:
 959              	.L75:
 673:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 960              		.loc 1 673 0
ARM GAS  /tmp/ccIpiKb7.s 			page 31


 961 00ea 12F0080F 		tst	r2, #8
 962 00ee 01D0     		beq	.L76
 675:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 963              		.loc 1 675 0
 964 00f0 23F40013 		bic	r3, r3, #2097152
 965              	.LVL100:
 966              	.L76:
 678:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 967              		.loc 1 678 0
 968 00f4 12F0200F 		tst	r2, #32
 969 00f8 BCD0     		beq	.L74
 680:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 970              		.loc 1 680 0
 971 00fa 23F08073 		bic	r3, r3, #16777216
 972              	.LVL101:
 973 00fe B9E7     		b	.L74
 974              	.LVL102:
 975              	.L77:
 976              	.LCFI14:
 977              		.cfi_def_cfa_offset 0
 978              		.cfi_restore 4
 979              		.cfi_restore 5
 590:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 980              		.loc 1 590 0
 981 0100 0220     		movs	r0, #2
 982              	.LVL103:
 983 0102 7047     		bx	lr
 984              	.L83:
 985              		.align	2
 986              	.L82:
 987 0104 7F00FFFF 		.word	-65409
 988 0108 80000058 		.word	1476395136
 989              		.cfi_endproc
 990              	.LFE148:
 992              		.section	.text.HAL_RTCEx_DeactivateTamper,"ax",%progbits
 993              		.align	1
 994              		.global	HAL_RTCEx_DeactivateTamper
 995              		.syntax unified
 996              		.thumb
 997              		.thumb_func
 998              		.fpu fpv5-d16
 1000              	HAL_RTCEx_DeactivateTamper:
 1001              	.LFB149:
 716:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 717:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 718:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate Tamper.
 719:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 720:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Tamper Selected tamper pin.
 721:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         This parameter can be any combination of the following values:
 722:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         @arg RTC_TAMPER_1
 723:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         @arg RTC_TAMPER_2
 724:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         @arg RTC_TAMPER_3
 725:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 726:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 727:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateTamper(RTC_HandleTypeDef *hrtc, uint32_t Tamper)
 728:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1002              		.loc 1 728 0
ARM GAS  /tmp/ccIpiKb7.s 			page 32


 1003              		.cfi_startproc
 1004              		@ args = 0, pretend = 0, frame = 0
 1005              		@ frame_needed = 0, uses_anonymous_args = 0
 1006              		@ link register save eliminated.
 1007              	.LVL104:
 729:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(Tamper));
 730:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 731:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 732:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1008              		.loc 1 732 0
 1009 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1010 0004 012B     		cmp	r3, #1
 1011 0006 2DD0     		beq	.L89
 728:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(Tamper));
 1012              		.loc 1 728 0 discriminator 2
 1013 0008 10B4     		push	{r4}
 1014              	.LCFI15:
 1015              		.cfi_def_cfa_offset 4
 1016              		.cfi_offset 4, -4
 1017              		.loc 1 732 0 discriminator 2
 1018 000a 0123     		movs	r3, #1
 1019 000c 80F82030 		strb	r3, [r0, #32]
 733:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 734:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1020              		.loc 1 734 0 discriminator 2
 1021 0010 0223     		movs	r3, #2
 1022 0012 80F82130 		strb	r3, [r0, #33]
 735:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 736:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the selected Tamper pin */
 737:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR &= ((uint32_t)~Tamper);
 1023              		.loc 1 737 0 discriminator 2
 1024 0016 0268     		ldr	r2, [r0]
 1025 0018 136C     		ldr	r3, [r2, #64]
 1026 001a 23EA0103 		bic	r3, r3, r1
 1027 001e 1364     		str	r3, [r2, #64]
 738:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 739:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the selected Tamper interrupt */
 740:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((Tamper & RTC_TAMPER_1) != 0u)
 1028              		.loc 1 740 0 discriminator 2
 1029 0020 11F0010F 		tst	r1, #1
 1030 0024 04D0     		beq	.L86
 741:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 742:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->TAMPCR &= ((uint32_t)~(RTC_IT_TAMP | RTC_IT_TAMP1));
 1031              		.loc 1 742 0
 1032 0026 0268     		ldr	r2, [r0]
 1033 0028 146C     		ldr	r4, [r2, #64]
 1034 002a 0F4B     		ldr	r3, .L94
 1035 002c 2340     		ands	r3, r3, r4
 1036 002e 1364     		str	r3, [r2, #64]
 1037              	.L86:
 743:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 744:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 745:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((Tamper & RTC_TAMPER_2) != 0u)
 1038              		.loc 1 745 0
 1039 0030 11F0080F 		tst	r1, #8
 1040 0034 04D0     		beq	.L87
 746:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
ARM GAS  /tmp/ccIpiKb7.s 			page 33


 747:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->TAMPCR &= ((uint32_t)~(RTC_IT_TAMP | RTC_IT_TAMP2));
 1041              		.loc 1 747 0
 1042 0036 0268     		ldr	r2, [r0]
 1043 0038 146C     		ldr	r4, [r2, #64]
 1044 003a 0C4B     		ldr	r3, .L94+4
 1045 003c 2340     		ands	r3, r3, r4
 1046 003e 1364     		str	r3, [r2, #64]
 1047              	.L87:
 748:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 749:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 750:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((Tamper & RTC_TAMPER_3) != 0u)
 1048              		.loc 1 750 0
 1049 0040 11F0200F 		tst	r1, #32
 1050 0044 04D0     		beq	.L88
 751:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 752:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->TAMPCR &= ((uint32_t)~(RTC_IT_TAMP | RTC_IT_TAMP3));
 1051              		.loc 1 752 0
 1052 0046 0268     		ldr	r2, [r0]
 1053 0048 116C     		ldr	r1, [r2, #64]
 1054              	.LVL105:
 1055 004a 094B     		ldr	r3, .L94+8
 1056 004c 0B40     		ands	r3, r3, r1
 1057 004e 1364     		str	r3, [r2, #64]
 1058              	.L88:
 753:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 754:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 755:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1059              		.loc 1 755 0
 1060 0050 0123     		movs	r3, #1
 1061 0052 80F82130 		strb	r3, [r0, #33]
 756:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 757:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 758:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1062              		.loc 1 758 0
 1063 0056 0023     		movs	r3, #0
 1064 0058 80F82030 		strb	r3, [r0, #32]
 759:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 760:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 1065              		.loc 1 760 0
 1066 005c 1846     		mov	r0, r3
 1067              	.LVL106:
 761:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1068              		.loc 1 761 0
 1069 005e 5DF8044B 		ldr	r4, [sp], #4
 1070              	.LCFI16:
 1071              		.cfi_restore 4
 1072              		.cfi_def_cfa_offset 0
 1073 0062 7047     		bx	lr
 1074              	.LVL107:
 1075              	.L89:
 732:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 1076              		.loc 1 732 0
 1077 0064 0220     		movs	r0, #2
 1078              	.LVL108:
 1079 0066 7047     		bx	lr
 1080              	.L95:
 1081              		.align	2
ARM GAS  /tmp/ccIpiKb7.s 			page 34


 1082              	.L94:
 1083 0068 FBFFFEFF 		.word	-65541
 1084 006c FBFFF7FF 		.word	-524293
 1085 0070 FBFFBFFF 		.word	-4194309
 1086              		.cfi_endproc
 1087              	.LFE149:
 1089              		.section	.text.HAL_RTCEx_TimeStampEventCallback,"ax",%progbits
 1090              		.align	1
 1091              		.weak	HAL_RTCEx_TimeStampEventCallback
 1092              		.syntax unified
 1093              		.thumb
 1094              		.thumb_func
 1095              		.fpu fpv5-d16
 1097              	HAL_RTCEx_TimeStampEventCallback:
 1098              	.LFB151:
 762:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 763:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 764:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle TimeStamp interrupt request.
 765:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 766:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
 767:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 768:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** void HAL_RTCEx_TamperTimeStampIRQHandler(RTC_HandleTypeDef *hrtc)
 769:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 770:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the EXTI's Flag for RTC TimeStamp and Tamper */
 771:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(DUAL_CORE)
 772:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (HAL_GetCurrentCPUID() == CM7_CPUID)
 773:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 774:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_TAMPER_TIMESTAMP_EXTI_CLEAR_FLAG();
 775:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 776:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
 777:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 778:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_TAMPER_TIMESTAMP_EXTID2_CLEAR_FLAG();
 779:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 780:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
 781:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_TAMPER_TIMESTAMP_EXTI_CLEAR_FLAG();
 782:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
 783:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 784:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the TimeStamp interrupt source enable status */
 785:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if(__HAL_RTC_TIMESTAMP_GET_IT_SOURCE(hrtc, RTC_IT_TS) != 0u)
 786:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 787:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Get the pending status of the TIMESTAMP Interrupt */
 788:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if(__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSF) != 0u)
 789:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 790:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 791:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****        /* TIMESTAMP callback */
 792:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 793:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->TimeStampEventCallback(hrtc);
 794:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
 795:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****        HAL_RTCEx_TimeStampEventCallback(hrtc);
 796:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 797:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 798:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Clear the TIMESTAMP interrupt pending bit */
 799:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSF);
 800:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 801:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 802:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 803:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the Tamper1 interrupts source enable status */
ARM GAS  /tmp/ccIpiKb7.s 			page 35


 804:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if(__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP | RTC_IT_TAMP1) != 0u)
 805:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 806:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Get the pending status of the Tamper1 Interrupt */
 807:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP1F) != 0u)
 808:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 809:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Tamper1 callback */
 810:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 811:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->Tamper1EventCallback(hrtc);
 812:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
 813:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper1EventCallback(hrtc);
 814:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 815:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 816:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Clear the Tamper1 interrupt pending bit */
 817:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP1F);
 818:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 819:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 820:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 821:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the Tamper2 interrupts source enable status */
 822:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if(__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP | RTC_IT_TAMP2) != 0u)
 823:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 824:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Get the pending status of the Tamper2 Interrupt */
 825:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP2F) != 0u)
 826:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 827:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Tamper2 callback */
 828:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 829:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->Tamper2EventCallback(hrtc);
 830:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
 831:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper2EventCallback(hrtc);
 832:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 833:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 834:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Clear the Tamper2 interrupt pending bit */
 835:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP2F);
 836:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 837:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 838:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 839:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the Tamper3 interrupts source enable status */
 840:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if(__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP | RTC_IT_TAMP3) != 0u)
 841:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 842:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Get the pending status of the Tamper3 Interrupt */
 843:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP3F) != 0u)
 844:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 845:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Tamper3 callback */
 846:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 847:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->Tamper3EventCallback(hrtc);
 848:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
 849:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper3EventCallback(hrtc);
 850:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 851:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 852:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Clear the Tamper3 interrupt pending bit */
 853:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP3F);
 854:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 855:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 856:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 857:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 858:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
 859:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 860:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
ARM GAS  /tmp/ccIpiKb7.s 			page 36


 861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 862:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 863:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  TimeStamp callback.
 864:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 865:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
 866:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 867:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_TimeStampEventCallback(RTC_HandleTypeDef *hrtc)
 868:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1099              		.loc 1 868 0
 1100              		.cfi_startproc
 1101              		@ args = 0, pretend = 0, frame = 0
 1102              		@ frame_needed = 0, uses_anonymous_args = 0
 1103              		@ link register save eliminated.
 1104              	.LVL109:
 1105 0000 7047     		bx	lr
 1106              		.cfi_endproc
 1107              	.LFE151:
 1109              		.section	.text.HAL_RTCEx_Tamper1EventCallback,"ax",%progbits
 1110              		.align	1
 1111              		.weak	HAL_RTCEx_Tamper1EventCallback
 1112              		.syntax unified
 1113              		.thumb
 1114              		.thumb_func
 1115              		.fpu fpv5-d16
 1117              	HAL_RTCEx_Tamper1EventCallback:
 1118              	.LFB152:
 869:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 870:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 871:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 872:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_TimeStampEventCallback could be implemented in the user file
 873:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 874:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 875:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 876:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 877:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Tamper 1 callback.
 878:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 879:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
 880:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 881:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper1EventCallback(RTC_HandleTypeDef *hrtc)
 882:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1119              		.loc 1 882 0
 1120              		.cfi_startproc
 1121              		@ args = 0, pretend = 0, frame = 0
 1122              		@ frame_needed = 0, uses_anonymous_args = 0
 1123              		@ link register save eliminated.
 1124              	.LVL110:
 1125 0000 7047     		bx	lr
 1126              		.cfi_endproc
 1127              	.LFE152:
 1129              		.section	.text.HAL_RTCEx_Tamper2EventCallback,"ax",%progbits
 1130              		.align	1
 1131              		.weak	HAL_RTCEx_Tamper2EventCallback
 1132              		.syntax unified
 1133              		.thumb
 1134              		.thumb_func
 1135              		.fpu fpv5-d16
 1137              	HAL_RTCEx_Tamper2EventCallback:
ARM GAS  /tmp/ccIpiKb7.s 			page 37


 1138              	.LFB153:
 883:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 884:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 885:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 886:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_Tamper1EventCallback could be implemented in the user file
 887:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
 888:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 889:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 890:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 891:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Tamper 2 callback.
 892:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 893:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
 894:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 895:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper2EventCallback(RTC_HandleTypeDef *hrtc)
 896:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1139              		.loc 1 896 0
 1140              		.cfi_startproc
 1141              		@ args = 0, pretend = 0, frame = 0
 1142              		@ frame_needed = 0, uses_anonymous_args = 0
 1143              		@ link register save eliminated.
 1144              	.LVL111:
 1145 0000 7047     		bx	lr
 1146              		.cfi_endproc
 1147              	.LFE153:
 1149              		.section	.text.HAL_RTCEx_Tamper3EventCallback,"ax",%progbits
 1150              		.align	1
 1151              		.weak	HAL_RTCEx_Tamper3EventCallback
 1152              		.syntax unified
 1153              		.thumb
 1154              		.thumb_func
 1155              		.fpu fpv5-d16
 1157              	HAL_RTCEx_Tamper3EventCallback:
 1158              	.LFB154:
 897:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 898:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 899:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 900:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_Tamper2EventCallback could be implemented in the user file
 901:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
 902:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 903:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 904:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 905:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Tamper 3 callback.
 906:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 907:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
 908:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 909:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper3EventCallback(RTC_HandleTypeDef *hrtc)
 910:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1159              		.loc 1 910 0
 1160              		.cfi_startproc
 1161              		@ args = 0, pretend = 0, frame = 0
 1162              		@ frame_needed = 0, uses_anonymous_args = 0
 1163              		@ link register save eliminated.
 1164              	.LVL112:
 1165 0000 7047     		bx	lr
 1166              		.cfi_endproc
 1167              	.LFE154:
 1169              		.section	.text.HAL_RTCEx_TamperTimeStampIRQHandler,"ax",%progbits
ARM GAS  /tmp/ccIpiKb7.s 			page 38


 1170              		.align	1
 1171              		.global	HAL_RTCEx_TamperTimeStampIRQHandler
 1172              		.syntax unified
 1173              		.thumb
 1174              		.thumb_func
 1175              		.fpu fpv5-d16
 1177              	HAL_RTCEx_TamperTimeStampIRQHandler:
 1178              	.LFB150:
 769:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the EXTI's Flag for RTC TimeStamp and Tamper */
 1179              		.loc 1 769 0
 1180              		.cfi_startproc
 1181              		@ args = 0, pretend = 0, frame = 0
 1182              		@ frame_needed = 0, uses_anonymous_args = 0
 1183              	.LVL113:
 769:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the EXTI's Flag for RTC TimeStamp and Tamper */
 1184              		.loc 1 769 0
 1185 0000 10B5     		push	{r4, lr}
 1186              	.LCFI17:
 1187              		.cfi_def_cfa_offset 8
 1188              		.cfi_offset 4, -8
 1189              		.cfi_offset 14, -4
 1190 0002 0446     		mov	r4, r0
 781:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
 1191              		.loc 1 781 0
 1192 0004 4FF48022 		mov	r2, #262144
 1193 0008 2B4B     		ldr	r3, .L110
 1194 000a 9A60     		str	r2, [r3, #8]
 785:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 1195              		.loc 1 785 0
 1196 000c 0368     		ldr	r3, [r0]
 1197 000e 9A68     		ldr	r2, [r3, #8]
 1198 0010 12F4004F 		tst	r2, #32768
 1199 0014 03D0     		beq	.L101
 788:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 1200              		.loc 1 788 0
 1201 0016 DB68     		ldr	r3, [r3, #12]
 1202 0018 13F4006F 		tst	r3, #2048
 1203 001c 1ED1     		bne	.L106
 1204              	.LVL114:
 1205              	.L101:
 804:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 1206              		.loc 1 804 0
 1207 001e 2268     		ldr	r2, [r4]
 1208 0020 116C     		ldr	r1, [r2, #64]
 1209 0022 264B     		ldr	r3, .L110+4
 1210 0024 0B40     		ands	r3, r3, r1
 1211 0026 1BB1     		cbz	r3, .L102
 807:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 1212              		.loc 1 807 0
 1213 0028 D368     		ldr	r3, [r2, #12]
 1214 002a 13F4005F 		tst	r3, #8192
 1215 002e 1ED1     		bne	.L107
 1216              	.L102:
 822:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 1217              		.loc 1 822 0
 1218 0030 2268     		ldr	r2, [r4]
 1219 0032 116C     		ldr	r1, [r2, #64]
ARM GAS  /tmp/ccIpiKb7.s 			page 39


 1220 0034 224B     		ldr	r3, .L110+8
 1221 0036 0B40     		ands	r3, r3, r1
 1222 0038 1BB1     		cbz	r3, .L103
 825:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 1223              		.loc 1 825 0
 1224 003a D368     		ldr	r3, [r2, #12]
 1225 003c 13F4804F 		tst	r3, #16384
 1226 0040 1FD1     		bne	.L108
 1227              	.L103:
 840:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 1228              		.loc 1 840 0
 1229 0042 2268     		ldr	r2, [r4]
 1230 0044 116C     		ldr	r1, [r2, #64]
 1231 0046 1F4B     		ldr	r3, .L110+12
 1232 0048 0B40     		ands	r3, r3, r1
 1233 004a 1BB1     		cbz	r3, .L104
 843:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 1234              		.loc 1 843 0
 1235 004c D368     		ldr	r3, [r2, #12]
 1236 004e 13F4004F 		tst	r3, #32768
 1237 0052 20D1     		bne	.L109
 1238              	.L104:
 859:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1239              		.loc 1 859 0
 1240 0054 0123     		movs	r3, #1
 1241 0056 84F82130 		strb	r3, [r4, #33]
 1242 005a 10BD     		pop	{r4, pc}
 1243              	.LVL115:
 1244              	.L106:
 795:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 1245              		.loc 1 795 0
 1246 005c FFF7FEFF 		bl	HAL_RTCEx_TimeStampEventCallback
 1247              	.LVL116:
 799:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 1248              		.loc 1 799 0
 1249 0060 2268     		ldr	r2, [r4]
 1250 0062 D368     		ldr	r3, [r2, #12]
 1251 0064 DBB2     		uxtb	r3, r3
 1252 0066 63F40863 		orn	r3, r3, #2176
 1253 006a D360     		str	r3, [r2, #12]
 1254 006c D7E7     		b	.L101
 1255              	.L107:
 813:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 1256              		.loc 1 813 0
 1257 006e 2046     		mov	r0, r4
 1258 0070 FFF7FEFF 		bl	HAL_RTCEx_Tamper1EventCallback
 1259              	.LVL117:
 817:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 1260              		.loc 1 817 0
 1261 0074 2268     		ldr	r2, [r4]
 1262 0076 D368     		ldr	r3, [r2, #12]
 1263 0078 DBB2     		uxtb	r3, r3
 1264 007a 63F40253 		orn	r3, r3, #8320
 1265 007e D360     		str	r3, [r2, #12]
 1266 0080 D6E7     		b	.L102
 1267              	.L108:
 831:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccIpiKb7.s 			page 40


 1268              		.loc 1 831 0
 1269 0082 2046     		mov	r0, r4
 1270 0084 FFF7FEFF 		bl	HAL_RTCEx_Tamper2EventCallback
 1271              	.LVL118:
 835:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 1272              		.loc 1 835 0
 1273 0088 2268     		ldr	r2, [r4]
 1274 008a D368     		ldr	r3, [r2, #12]
 1275 008c DBB2     		uxtb	r3, r3
 1276 008e 63F48143 		orn	r3, r3, #16512
 1277 0092 D360     		str	r3, [r2, #12]
 1278 0094 D5E7     		b	.L103
 1279              	.L109:
 849:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 1280              		.loc 1 849 0
 1281 0096 2046     		mov	r0, r4
 1282 0098 FFF7FEFF 		bl	HAL_RTCEx_Tamper3EventCallback
 1283              	.LVL119:
 853:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 1284              		.loc 1 853 0
 1285 009c 2268     		ldr	r2, [r4]
 1286 009e D368     		ldr	r3, [r2, #12]
 1287 00a0 DBB2     		uxtb	r3, r3
 1288 00a2 43F07F43 		orr	r3, r3, #-16777216
 1289 00a6 43F47F03 		orr	r3, r3, #16711680
 1290 00aa 43F4FE43 		orr	r3, r3, #32512
 1291 00ae 43F07F03 		orr	r3, r3, #127
 1292 00b2 D360     		str	r3, [r2, #12]
 1293 00b4 CEE7     		b	.L104
 1294              	.L111:
 1295 00b6 00BF     		.align	2
 1296              	.L110:
 1297 00b8 80000058 		.word	1476395136
 1298 00bc 04000100 		.word	65540
 1299 00c0 04000800 		.word	524292
 1300 00c4 04004000 		.word	4194308
 1301              		.cfi_endproc
 1302              	.LFE150:
 1304              		.section	.text.HAL_RTCEx_PollForTimeStampEvent,"ax",%progbits
 1305              		.align	1
 1306              		.global	HAL_RTCEx_PollForTimeStampEvent
 1307              		.syntax unified
 1308              		.thumb
 1309              		.thumb_func
 1310              		.fpu fpv5-d16
 1312              	HAL_RTCEx_PollForTimeStampEvent:
 1313              	.LFB155:
 911:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 912:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 913:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 914:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_Tamper3EventCallback could be implemented in the user file
 915:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
 916:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 917:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 918:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 919:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle TimeStamp polling request.
 920:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
ARM GAS  /tmp/ccIpiKb7.s 			page 41


 921:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 923:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 924:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTimeStampEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 925:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1314              		.loc 1 925 0
 1315              		.cfi_startproc
 1316              		@ args = 0, pretend = 0, frame = 0
 1317              		@ frame_needed = 0, uses_anonymous_args = 0
 1318              	.LVL120:
 1319 0000 70B5     		push	{r4, r5, r6, lr}
 1320              	.LCFI18:
 1321              		.cfi_def_cfa_offset 16
 1322              		.cfi_offset 4, -16
 1323              		.cfi_offset 5, -12
 1324              		.cfi_offset 6, -8
 1325              		.cfi_offset 14, -4
 1326 0002 0446     		mov	r4, r0
 1327 0004 0D46     		mov	r5, r1
 926:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 1328              		.loc 1 926 0
 1329 0006 FFF7FEFF 		bl	HAL_GetTick
 1330              	.LVL121:
 1331 000a 0646     		mov	r6, r0
 1332              	.LVL122:
 1333              	.L116:
 927:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 928:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while(__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSF) == 0u)
 1334              		.loc 1 928 0
 1335 000c 2368     		ldr	r3, [r4]
 1336 000e DA68     		ldr	r2, [r3, #12]
 1337 0010 12F4006F 		tst	r2, #2048
 1338 0014 1BD1     		bne	.L120
 929:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 930:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if(__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSOVF) != 0u)
 1339              		.loc 1 930 0
 1340 0016 DA68     		ldr	r2, [r3, #12]
 1341 0018 12F4805F 		tst	r2, #4096
 1342 001c 0DD1     		bne	.L121
 931:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 932:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Clear the TIMESTAMP OverRun Flag */
 933:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSOVF);
 934:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 935:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Change TIMESTAMP state */
 936:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
 937:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 938:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       return HAL_ERROR;
 939:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 940:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 941:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 1343              		.loc 1 941 0
 1344 001e B5F1FF3F 		cmp	r5, #-1
 1345 0022 F3D0     		beq	.L116
 942:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 943:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if(((HAL_GetTick() - tickstart ) > Timeout) || (Timeout == 0u))
 1346              		.loc 1 943 0
 1347 0024 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccIpiKb7.s 			page 42


 1348              	.LVL123:
 1349 0028 801B     		subs	r0, r0, r6
 1350 002a 8542     		cmp	r5, r0
 1351 002c 01D3     		bcc	.L117
 1352              		.loc 1 943 0 is_stmt 0 discriminator 1
 1353 002e 002D     		cmp	r5, #0
 1354 0030 ECD1     		bne	.L116
 1355              	.L117:
 944:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
 945:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1356              		.loc 1 945 0 is_stmt 1
 1357 0032 0320     		movs	r0, #3
 1358 0034 84F82100 		strb	r0, [r4, #33]
 946:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1359              		.loc 1 946 0
 1360 0038 70BD     		pop	{r4, r5, r6, pc}
 1361              	.LVL124:
 1362              	.L121:
 933:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 1363              		.loc 1 933 0
 1364 003a DA68     		ldr	r2, [r3, #12]
 1365 003c D2B2     		uxtb	r2, r2
 1366 003e 62F48452 		orn	r2, r2, #4224
 1367 0042 DA60     		str	r2, [r3, #12]
 936:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 1368              		.loc 1 936 0
 1369 0044 0423     		movs	r3, #4
 1370 0046 84F82130 		strb	r3, [r4, #33]
 938:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 1371              		.loc 1 938 0
 1372 004a 0120     		movs	r0, #1
 1373 004c 70BD     		pop	{r4, r5, r6, pc}
 1374              	.LVL125:
 1375              	.L120:
 947:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
 948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 949:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 950:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 951:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
 952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1376              		.loc 1 952 0
 1377 004e 0123     		movs	r3, #1
 1378 0050 84F82130 		strb	r3, [r4, #33]
 953:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 954:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 1379              		.loc 1 954 0
 1380 0054 0020     		movs	r0, #0
 955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1381              		.loc 1 955 0
 1382 0056 70BD     		pop	{r4, r5, r6, pc}
 1383              		.cfi_endproc
 1384              	.LFE155:
 1386              		.section	.text.HAL_RTCEx_PollForTamper1Event,"ax",%progbits
 1387              		.align	1
 1388              		.global	HAL_RTCEx_PollForTamper1Event
 1389              		.syntax unified
 1390              		.thumb
ARM GAS  /tmp/ccIpiKb7.s 			page 43


 1391              		.thumb_func
 1392              		.fpu fpv5-d16
 1394              	HAL_RTCEx_PollForTamper1Event:
 1395              	.LFB156:
 956:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 957:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 958:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle Tamper1 Polling.
 959:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 960:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 961:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 962:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 963:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper1Event(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 964:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1396              		.loc 1 964 0
 1397              		.cfi_startproc
 1398              		@ args = 0, pretend = 0, frame = 0
 1399              		@ frame_needed = 0, uses_anonymous_args = 0
 1400              	.LVL126:
 1401 0000 70B5     		push	{r4, r5, r6, lr}
 1402              	.LCFI19:
 1403              		.cfi_def_cfa_offset 16
 1404              		.cfi_offset 4, -16
 1405              		.cfi_offset 5, -12
 1406              		.cfi_offset 6, -8
 1407              		.cfi_offset 14, -4
 1408 0002 0446     		mov	r4, r0
 1409 0004 0D46     		mov	r5, r1
 965:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 1410              		.loc 1 965 0
 1411 0006 FFF7FEFF 		bl	HAL_GetTick
 1412              	.LVL127:
 1413 000a 0646     		mov	r6, r0
 1414              	.LVL128:
 1415              	.L124:
 966:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 967:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
 968:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP1F)== 0u)
 1416              		.loc 1 968 0
 1417 000c 2368     		ldr	r3, [r4]
 1418 000e DA68     		ldr	r2, [r3, #12]
 1419 0010 12F4005F 		tst	r2, #8192
 1420 0014 0DD1     		bne	.L129
 969:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 970:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 1421              		.loc 1 970 0
 1422 0016 B5F1FF3F 		cmp	r5, #-1
 1423 001a F7D0     		beq	.L124
 971:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 972:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if(((HAL_GetTick() - tickstart ) > Timeout) || (Timeout == 0u))
 1424              		.loc 1 972 0
 1425 001c FFF7FEFF 		bl	HAL_GetTick
 1426              	.LVL129:
 1427 0020 801B     		subs	r0, r0, r6
 1428 0022 8542     		cmp	r5, r0
 1429 0024 01D3     		bcc	.L125
 1430              		.loc 1 972 0 is_stmt 0 discriminator 1
 1431 0026 002D     		cmp	r5, #0
ARM GAS  /tmp/ccIpiKb7.s 			page 44


 1432 0028 F0D1     		bne	.L124
 1433              	.L125:
 973:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
 974:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1434              		.loc 1 974 0 is_stmt 1
 1435 002a 0320     		movs	r0, #3
 1436 002c 84F82100 		strb	r0, [r4, #33]
 975:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1437              		.loc 1 975 0
 1438 0030 70BD     		pop	{r4, r5, r6, pc}
 1439              	.LVL130:
 1440              	.L129:
 976:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
 977:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 978:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 979:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 980:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
 981:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP1F);
 1441              		.loc 1 981 0
 1442 0032 DA68     		ldr	r2, [r3, #12]
 1443 0034 D2B2     		uxtb	r2, r2
 1444 0036 62F40252 		orn	r2, r2, #8320
 1445 003a DA60     		str	r2, [r3, #12]
 982:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 983:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
 984:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1446              		.loc 1 984 0
 1447 003c 0123     		movs	r3, #1
 1448 003e 84F82130 		strb	r3, [r4, #33]
 985:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 986:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 1449              		.loc 1 986 0
 1450 0042 0020     		movs	r0, #0
 987:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1451              		.loc 1 987 0
 1452 0044 70BD     		pop	{r4, r5, r6, pc}
 1453              		.cfi_endproc
 1454              	.LFE156:
 1456              		.section	.text.HAL_RTCEx_PollForTamper2Event,"ax",%progbits
 1457              		.align	1
 1458              		.global	HAL_RTCEx_PollForTamper2Event
 1459              		.syntax unified
 1460              		.thumb
 1461              		.thumb_func
 1462              		.fpu fpv5-d16
 1464              	HAL_RTCEx_PollForTamper2Event:
 1465              	.LFB157:
 988:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 989:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 990:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle Tamper2 Polling.
 991:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 992:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 993:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 994:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 995:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper2Event(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 996:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1466              		.loc 1 996 0
ARM GAS  /tmp/ccIpiKb7.s 			page 45


 1467              		.cfi_startproc
 1468              		@ args = 0, pretend = 0, frame = 0
 1469              		@ frame_needed = 0, uses_anonymous_args = 0
 1470              	.LVL131:
 1471 0000 70B5     		push	{r4, r5, r6, lr}
 1472              	.LCFI20:
 1473              		.cfi_def_cfa_offset 16
 1474              		.cfi_offset 4, -16
 1475              		.cfi_offset 5, -12
 1476              		.cfi_offset 6, -8
 1477              		.cfi_offset 14, -4
 1478 0002 0446     		mov	r4, r0
 1479 0004 0D46     		mov	r5, r1
 997:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 1480              		.loc 1 997 0
 1481 0006 FFF7FEFF 		bl	HAL_GetTick
 1482              	.LVL132:
 1483 000a 0646     		mov	r6, r0
 1484              	.LVL133:
 1485              	.L132:
 998:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 999:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
1000:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP2F) == 0u)
 1486              		.loc 1 1000 0
 1487 000c 2368     		ldr	r3, [r4]
 1488 000e DA68     		ldr	r2, [r3, #12]
 1489 0010 12F4804F 		tst	r2, #16384
 1490 0014 0DD1     		bne	.L137
1001:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1002:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 1491              		.loc 1 1002 0
 1492 0016 B5F1FF3F 		cmp	r5, #-1
 1493 001a F7D0     		beq	.L132
1003:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1004:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if(((HAL_GetTick() - tickstart ) > Timeout) || (Timeout == 0u))
 1494              		.loc 1 1004 0
 1495 001c FFF7FEFF 		bl	HAL_GetTick
 1496              	.LVL134:
 1497 0020 801B     		subs	r0, r0, r6
 1498 0022 8542     		cmp	r5, r0
 1499 0024 01D3     		bcc	.L133
 1500              		.loc 1 1004 0 is_stmt 0 discriminator 1
 1501 0026 002D     		cmp	r5, #0
 1502 0028 F0D1     		bne	.L132
 1503              	.L133:
1005:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1006:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1504              		.loc 1 1006 0 is_stmt 1
 1505 002a 0320     		movs	r0, #3
 1506 002c 84F82100 		strb	r0, [r4, #33]
1007:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1507              		.loc 1 1007 0
 1508 0030 70BD     		pop	{r4, r5, r6, pc}
 1509              	.LVL135:
 1510              	.L137:
1008:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1009:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
ARM GAS  /tmp/ccIpiKb7.s 			page 46


1010:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1011:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1012:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
1013:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP2F);
 1511              		.loc 1 1013 0
 1512 0032 DA68     		ldr	r2, [r3, #12]
 1513 0034 D2B2     		uxtb	r2, r2
 1514 0036 62F48142 		orn	r2, r2, #16512
 1515 003a DA60     		str	r2, [r3, #12]
1014:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1015:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1016:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1516              		.loc 1 1016 0
 1517 003c 0123     		movs	r3, #1
 1518 003e 84F82130 		strb	r3, [r4, #33]
1017:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1018:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 1519              		.loc 1 1018 0
 1520 0042 0020     		movs	r0, #0
1019:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1521              		.loc 1 1019 0
 1522 0044 70BD     		pop	{r4, r5, r6, pc}
 1523              		.cfi_endproc
 1524              	.LFE157:
 1526              		.section	.text.HAL_RTCEx_PollForTamper3Event,"ax",%progbits
 1527              		.align	1
 1528              		.global	HAL_RTCEx_PollForTamper3Event
 1529              		.syntax unified
 1530              		.thumb
 1531              		.thumb_func
 1532              		.fpu fpv5-d16
 1534              	HAL_RTCEx_PollForTamper3Event:
 1535              	.LFB158:
1020:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1021:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1022:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle Tamper3 Polling.
1023:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1024:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1025:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1026:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1027:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper3Event(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1028:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1536              		.loc 1 1028 0
 1537              		.cfi_startproc
 1538              		@ args = 0, pretend = 0, frame = 0
 1539              		@ frame_needed = 0, uses_anonymous_args = 0
 1540              	.LVL136:
 1541 0000 70B5     		push	{r4, r5, r6, lr}
 1542              	.LCFI21:
 1543              		.cfi_def_cfa_offset 16
 1544              		.cfi_offset 4, -16
 1545              		.cfi_offset 5, -12
 1546              		.cfi_offset 6, -8
 1547              		.cfi_offset 14, -4
 1548 0002 0446     		mov	r4, r0
 1549 0004 0D46     		mov	r5, r1
1029:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
ARM GAS  /tmp/ccIpiKb7.s 			page 47


 1550              		.loc 1 1029 0
 1551 0006 FFF7FEFF 		bl	HAL_GetTick
 1552              	.LVL137:
 1553 000a 0646     		mov	r6, r0
 1554              	.LVL138:
 1555              	.L140:
1030:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1031:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
1032:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP3F) == 0u)
 1556              		.loc 1 1032 0
 1557 000c 2368     		ldr	r3, [r4]
 1558 000e DA68     		ldr	r2, [r3, #12]
 1559 0010 12F4004F 		tst	r2, #32768
 1560 0014 0DD1     		bne	.L145
1033:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1034:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 1561              		.loc 1 1034 0
 1562 0016 B5F1FF3F 		cmp	r5, #-1
 1563 001a F7D0     		beq	.L140
1035:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1036:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if(((HAL_GetTick() - tickstart ) > Timeout) || (Timeout == 0u))
 1564              		.loc 1 1036 0
 1565 001c FFF7FEFF 		bl	HAL_GetTick
 1566              	.LVL139:
 1567 0020 801B     		subs	r0, r0, r6
 1568 0022 8542     		cmp	r5, r0
 1569 0024 01D3     		bcc	.L141
 1570              		.loc 1 1036 0 is_stmt 0 discriminator 1
 1571 0026 002D     		cmp	r5, #0
 1572 0028 F0D1     		bne	.L140
 1573              	.L141:
1037:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1038:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1574              		.loc 1 1038 0 is_stmt 1
 1575 002a 0320     		movs	r0, #3
 1576 002c 84F82100 		strb	r0, [r4, #33]
1039:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1577              		.loc 1 1039 0
 1578 0030 70BD     		pop	{r4, r5, r6, pc}
 1579              	.LVL140:
 1580              	.L145:
1040:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1041:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1042:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1043:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1044:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
1045:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP3F);
 1581              		.loc 1 1045 0
 1582 0032 DA68     		ldr	r2, [r3, #12]
 1583 0034 D2B2     		uxtb	r2, r2
 1584 0036 42F07F42 		orr	r2, r2, #-16777216
 1585 003a 42F47F02 		orr	r2, r2, #16711680
 1586 003e 42F4FE42 		orr	r2, r2, #32512
 1587 0042 42F07F02 		orr	r2, r2, #127
 1588 0046 DA60     		str	r2, [r3, #12]
1046:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1047:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
ARM GAS  /tmp/ccIpiKb7.s 			page 48


1048:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1589              		.loc 1 1048 0
 1590 0048 0123     		movs	r3, #1
 1591 004a 84F82130 		strb	r3, [r4, #33]
1049:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1050:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 1592              		.loc 1 1050 0
 1593 004e 0020     		movs	r0, #0
1051:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1594              		.loc 1 1051 0
 1595 0050 70BD     		pop	{r4, r5, r6, pc}
 1596              		.cfi_endproc
 1597              	.LFE158:
 1599              		.section	.text.HAL_RTCEx_SetWakeUpTimer,"ax",%progbits
 1600              		.align	1
 1601              		.global	HAL_RTCEx_SetWakeUpTimer
 1602              		.syntax unified
 1603              		.thumb
 1604              		.thumb_func
 1605              		.fpu fpv5-d16
 1607              	HAL_RTCEx_SetWakeUpTimer:
 1608              	.LFB159:
1052:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1053:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1054:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
1055:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1056:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1057:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @defgroup RTCEx_Exported_Functions_Group2 RTC Wake-up functions
1058:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief    RTC Wake-up functions
1059:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
1060:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @verbatim
1061:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
1062:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****                         ##### RTC Wake-up functions #####
1063:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
1064:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1065:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  [..] This section provides functions allowing to configure Wake-up feature
1066:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1067:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @endverbatim
1068:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
1069:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1070:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1071:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1072:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set wake up timer.
1073:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1074:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  WakeUpCounter Wake up counter
1075:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  WakeUpClock Wake up clock
1076:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1077:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1078:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetWakeUpTimer(RTC_HandleTypeDef *hrtc, uint32_t WakeUpCounter, uint32_
1079:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1609              		.loc 1 1079 0
 1610              		.cfi_startproc
 1611              		@ args = 0, pretend = 0, frame = 0
 1612              		@ frame_needed = 0, uses_anonymous_args = 0
 1613              	.LVL141:
 1614 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1615              	.LCFI22:
ARM GAS  /tmp/ccIpiKb7.s 			page 49


 1616              		.cfi_def_cfa_offset 24
 1617              		.cfi_offset 3, -24
 1618              		.cfi_offset 4, -20
 1619              		.cfi_offset 5, -16
 1620              		.cfi_offset 6, -12
 1621              		.cfi_offset 7, -8
 1622              		.cfi_offset 14, -4
1080:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart;
1081:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1082:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
1083:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_CLOCK(WakeUpClock));
1084:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_COUNTER(WakeUpCounter));
1085:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1086:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
1087:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1623              		.loc 1 1087 0
 1624 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1625 0006 012B     		cmp	r3, #1
 1626 0008 61D0     		beq	.L153
 1627 000a 1646     		mov	r6, r2
 1628 000c 0D46     		mov	r5, r1
 1629 000e 0446     		mov	r4, r0
 1630              		.loc 1 1087 0 is_stmt 0 discriminator 2
 1631 0010 0123     		movs	r3, #1
 1632 0012 80F82030 		strb	r3, [r0, #32]
1088:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1089:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1633              		.loc 1 1089 0 is_stmt 1 discriminator 2
 1634 0016 0223     		movs	r3, #2
 1635 0018 80F82130 		strb	r3, [r0, #33]
1090:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1091:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1092:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1636              		.loc 1 1092 0 discriminator 2
 1637 001c 0368     		ldr	r3, [r0]
 1638 001e CA22     		movs	r2, #202
 1639              	.LVL142:
 1640 0020 5A62     		str	r2, [r3, #36]
 1641 0022 0368     		ldr	r3, [r0]
 1642 0024 5322     		movs	r2, #83
 1643 0026 5A62     		str	r2, [r3, #36]
1093:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1094:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /*Check RTC WUTWF flag is reset only when wake up timer enabled*/
1095:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if((hrtc->Instance->CR & RTC_CR_WUTE) != 0u)
 1644              		.loc 1 1095 0 discriminator 2
 1645 0028 0368     		ldr	r3, [r0]
 1646 002a 9B68     		ldr	r3, [r3, #8]
 1647 002c 13F4806F 		tst	r3, #1024
 1648 0030 17D0     		beq	.L148
1096:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1097:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tickstart = HAL_GetTick();
 1649              		.loc 1 1097 0
 1650 0032 FFF7FEFF 		bl	HAL_GetTick
 1651              	.LVL143:
 1652 0036 0746     		mov	r7, r0
 1653              	.LVL144:
 1654              	.L149:
ARM GAS  /tmp/ccIpiKb7.s 			page 50


1098:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1099:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Wait till RTC WUTWF flag is reset and if Time out is reached exit */
1100:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == 1u)
 1655              		.loc 1 1100 0
 1656 0038 2368     		ldr	r3, [r4]
 1657 003a DB68     		ldr	r3, [r3, #12]
 1658 003c 13F0040F 		tst	r3, #4
 1659 0040 0FD0     		beq	.L148
1101:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1102:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 1660              		.loc 1 1102 0
 1661 0042 FFF7FEFF 		bl	HAL_GetTick
 1662              	.LVL145:
 1663 0046 C01B     		subs	r0, r0, r7
 1664 0048 B0F57A7F 		cmp	r0, #1000
 1665 004c F4D9     		bls	.L149
1103:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1104:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
1105:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1666              		.loc 1 1105 0
 1667 004e 2368     		ldr	r3, [r4]
 1668 0050 FF22     		movs	r2, #255
 1669 0052 5A62     		str	r2, [r3, #36]
1106:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1107:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1670              		.loc 1 1107 0
 1671 0054 0320     		movs	r0, #3
 1672 0056 84F82100 		strb	r0, [r4, #33]
1108:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1109:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Process Unlocked */
1110:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
 1673              		.loc 1 1110 0
 1674 005a 0023     		movs	r3, #0
 1675 005c 84F82030 		strb	r3, [r4, #32]
1111:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1112:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1676              		.loc 1 1112 0
 1677 0060 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1678              	.LVL146:
 1679              	.L148:
1113:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1114:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1115:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1116:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1117:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
 1680              		.loc 1 1117 0
 1681 0062 2268     		ldr	r2, [r4]
 1682 0064 9368     		ldr	r3, [r2, #8]
 1683 0066 23F48063 		bic	r3, r3, #1024
 1684 006a 9360     		str	r3, [r2, #8]
1118:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1119:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 1685              		.loc 1 1119 0
 1686 006c FFF7FEFF 		bl	HAL_GetTick
 1687              	.LVL147:
 1688 0070 0746     		mov	r7, r0
 1689              	.LVL148:
ARM GAS  /tmp/ccIpiKb7.s 			page 51


 1690              	.L151:
1120:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1121:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
1122:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == 0u)
 1691              		.loc 1 1122 0
 1692 0072 2368     		ldr	r3, [r4]
 1693 0074 D868     		ldr	r0, [r3, #12]
 1694 0076 10F0040F 		tst	r0, #4
 1695 007a 0FD1     		bne	.L155
1123:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1124:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 1696              		.loc 1 1124 0
 1697 007c FFF7FEFF 		bl	HAL_GetTick
 1698              	.LVL149:
 1699 0080 C01B     		subs	r0, r0, r7
 1700 0082 B0F57A7F 		cmp	r0, #1000
 1701 0086 F4D9     		bls	.L151
1125:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1126:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
1127:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1702              		.loc 1 1127 0
 1703 0088 2368     		ldr	r3, [r4]
 1704 008a FF22     		movs	r2, #255
 1705 008c 5A62     		str	r2, [r3, #36]
1128:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1129:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1706              		.loc 1 1129 0
 1707 008e 0320     		movs	r0, #3
 1708 0090 84F82100 		strb	r0, [r4, #33]
1130:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1131:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Process Unlocked */
1132:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
 1709              		.loc 1 1132 0
 1710 0094 0023     		movs	r3, #0
 1711 0096 84F82030 		strb	r3, [r4, #32]
1133:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1134:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
 1712              		.loc 1 1134 0
 1713 009a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1714              	.LVL150:
 1715              	.L155:
1135:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1136:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1137:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1138:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the Wakeup Timer clock source bits in CR register */
1139:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint32_t)~RTC_CR_WUCKSEL;
 1716              		.loc 1 1139 0
 1717 009c 9A68     		ldr	r2, [r3, #8]
 1718 009e 22F00702 		bic	r2, r2, #7
 1719 00a2 9A60     		str	r2, [r3, #8]
1140:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1141:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the clock source */
1142:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint32_t)WakeUpClock;
 1720              		.loc 1 1142 0
 1721 00a4 2268     		ldr	r2, [r4]
 1722 00a6 9368     		ldr	r3, [r2, #8]
 1723 00a8 1E43     		orrs	r6, r6, r3
ARM GAS  /tmp/ccIpiKb7.s 			page 52


 1724              	.LVL151:
 1725 00aa 9660     		str	r6, [r2, #8]
1143:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1144:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Wakeup Timer counter */
1145:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->WUTR = (uint32_t)WakeUpCounter;
 1726              		.loc 1 1145 0
 1727 00ac 2368     		ldr	r3, [r4]
 1728 00ae 5D61     		str	r5, [r3, #20]
1146:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1147:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    /* Enable the Wakeup Timer */
1148:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE(hrtc);
 1729              		.loc 1 1148 0
 1730 00b0 2268     		ldr	r2, [r4]
 1731 00b2 9368     		ldr	r3, [r2, #8]
 1732 00b4 43F48063 		orr	r3, r3, #1024
 1733 00b8 9360     		str	r3, [r2, #8]
1149:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1150:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1151:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1734              		.loc 1 1151 0
 1735 00ba 2368     		ldr	r3, [r4]
 1736 00bc FF22     		movs	r2, #255
 1737 00be 5A62     		str	r2, [r3, #36]
1152:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1153:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1738              		.loc 1 1153 0
 1739 00c0 0123     		movs	r3, #1
 1740 00c2 84F82130 		strb	r3, [r4, #33]
1154:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1155:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
1156:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1741              		.loc 1 1156 0
 1742 00c6 0020     		movs	r0, #0
 1743 00c8 84F82000 		strb	r0, [r4, #32]
1157:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1158:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 1744              		.loc 1 1158 0
 1745 00cc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1746              	.LVL152:
 1747              	.L153:
1087:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 1748              		.loc 1 1087 0
 1749 00ce 0220     		movs	r0, #2
 1750              	.LVL153:
1159:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1751              		.loc 1 1159 0
 1752 00d0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1753              		.cfi_endproc
 1754              	.LFE159:
 1756              		.section	.text.HAL_RTCEx_SetWakeUpTimer_IT,"ax",%progbits
 1757              		.align	1
 1758              		.global	HAL_RTCEx_SetWakeUpTimer_IT
 1759              		.syntax unified
 1760              		.thumb
 1761              		.thumb_func
 1762              		.fpu fpv5-d16
 1764              	HAL_RTCEx_SetWakeUpTimer_IT:
ARM GAS  /tmp/ccIpiKb7.s 			page 53


 1765              	.LFB160:
1160:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1161:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1162:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set wake up timer with interrupt.
1163:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1164:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  WakeUpCounter Wake up counter
1165:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  WakeUpClock Wake up clock
1166:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1167:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1168:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetWakeUpTimer_IT(RTC_HandleTypeDef *hrtc, uint32_t WakeUpCounter, uint
1169:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1766              		.loc 1 1169 0
 1767              		.cfi_startproc
 1768              		@ args = 0, pretend = 0, frame = 0
 1769              		@ frame_needed = 0, uses_anonymous_args = 0
 1770              	.LVL154:
 1771 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1772              	.LCFI23:
 1773              		.cfi_def_cfa_offset 24
 1774              		.cfi_offset 3, -24
 1775              		.cfi_offset 4, -20
 1776              		.cfi_offset 5, -16
 1777              		.cfi_offset 6, -12
 1778              		.cfi_offset 7, -8
 1779              		.cfi_offset 14, -4
1170:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart;
1171:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1172:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
1173:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_CLOCK(WakeUpClock));
1174:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_COUNTER(WakeUpCounter));
1175:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1176:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
1177:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1780              		.loc 1 1177 0
 1781 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1782 0006 012B     		cmp	r3, #1
 1783 0008 77D0     		beq	.L163
 1784 000a 1546     		mov	r5, r2
 1785 000c 0E46     		mov	r6, r1
 1786 000e 0446     		mov	r4, r0
 1787              		.loc 1 1177 0 is_stmt 0 discriminator 2
 1788 0010 0123     		movs	r3, #1
 1789 0012 80F82030 		strb	r3, [r0, #32]
1178:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1179:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1790              		.loc 1 1179 0 is_stmt 1 discriminator 2
 1791 0016 0223     		movs	r3, #2
 1792 0018 80F82130 		strb	r3, [r0, #33]
1180:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1181:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1182:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1793              		.loc 1 1182 0 discriminator 2
 1794 001c 0368     		ldr	r3, [r0]
 1795 001e CA22     		movs	r2, #202
 1796              	.LVL155:
 1797 0020 5A62     		str	r2, [r3, #36]
 1798 0022 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccIpiKb7.s 			page 54


 1799 0024 5322     		movs	r2, #83
 1800 0026 5A62     		str	r2, [r3, #36]
1183:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1184:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /*Check RTC WUTWF flag is reset only when wake up timer enabled*/
1185:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if((hrtc->Instance->CR & RTC_CR_WUTE) != 0u)
 1801              		.loc 1 1185 0 discriminator 2
 1802 0028 0368     		ldr	r3, [r0]
 1803 002a 9B68     		ldr	r3, [r3, #8]
 1804 002c 13F4806F 		tst	r3, #1024
 1805 0030 17D0     		beq	.L158
1186:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1187:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tickstart = HAL_GetTick();
 1806              		.loc 1 1187 0
 1807 0032 FFF7FEFF 		bl	HAL_GetTick
 1808              	.LVL156:
 1809 0036 0746     		mov	r7, r0
 1810              	.LVL157:
 1811              	.L159:
1188:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1189:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Wait till RTC WUTWF flag is reset and if Time out is reached exit */
1190:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == 1u)
 1812              		.loc 1 1190 0
 1813 0038 2368     		ldr	r3, [r4]
 1814 003a DB68     		ldr	r3, [r3, #12]
 1815 003c 13F0040F 		tst	r3, #4
 1816 0040 0FD0     		beq	.L158
1191:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1192:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 1817              		.loc 1 1192 0
 1818 0042 FFF7FEFF 		bl	HAL_GetTick
 1819              	.LVL158:
 1820 0046 C01B     		subs	r0, r0, r7
 1821 0048 B0F57A7F 		cmp	r0, #1000
 1822 004c F4D9     		bls	.L159
1193:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1194:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
1195:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1823              		.loc 1 1195 0
 1824 004e 2368     		ldr	r3, [r4]
 1825 0050 FF22     		movs	r2, #255
 1826 0052 5A62     		str	r2, [r3, #36]
1196:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1197:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1827              		.loc 1 1197 0
 1828 0054 0320     		movs	r0, #3
 1829 0056 84F82100 		strb	r0, [r4, #33]
1198:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1199:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Process Unlocked */
1200:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
 1830              		.loc 1 1200 0
 1831 005a 0023     		movs	r3, #0
 1832 005c 84F82030 		strb	r3, [r4, #32]
1201:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1202:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1833              		.loc 1 1202 0
 1834 0060 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1835              	.LVL159:
ARM GAS  /tmp/ccIpiKb7.s 			page 55


 1836              	.L158:
1203:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1204:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1205:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1206:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the Wake-Up timer */
1207:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
 1837              		.loc 1 1207 0
 1838 0062 2268     		ldr	r2, [r4]
 1839 0064 9368     		ldr	r3, [r2, #8]
 1840 0066 23F48063 		bic	r3, r3, #1024
 1841 006a 9360     		str	r3, [r2, #8]
1208:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1209:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear flag Wake-Up */
1210:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
 1842              		.loc 1 1210 0
 1843 006c 2268     		ldr	r2, [r4]
 1844 006e D368     		ldr	r3, [r2, #12]
 1845 0070 DBB2     		uxtb	r3, r3
 1846 0072 63F49063 		orn	r3, r3, #1152
 1847 0076 D360     		str	r3, [r2, #12]
1211:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1212:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 1848              		.loc 1 1212 0
 1849 0078 FFF7FEFF 		bl	HAL_GetTick
 1850              	.LVL160:
 1851 007c 0746     		mov	r7, r0
 1852              	.LVL161:
 1853              	.L161:
1213:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1214:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
1215:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == 0u)
 1854              		.loc 1 1215 0
 1855 007e 2368     		ldr	r3, [r4]
 1856 0080 D868     		ldr	r0, [r3, #12]
 1857 0082 10F0040F 		tst	r0, #4
 1858 0086 0FD1     		bne	.L165
1216:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1217:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 1859              		.loc 1 1217 0
 1860 0088 FFF7FEFF 		bl	HAL_GetTick
 1861              	.LVL162:
 1862 008c C01B     		subs	r0, r0, r7
 1863 008e B0F57A7F 		cmp	r0, #1000
 1864 0092 F4D9     		bls	.L161
1218:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1219:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
1220:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1865              		.loc 1 1220 0
 1866 0094 2368     		ldr	r3, [r4]
 1867 0096 FF22     		movs	r2, #255
 1868 0098 5A62     		str	r2, [r3, #36]
1221:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1222:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1869              		.loc 1 1222 0
 1870 009a 0320     		movs	r0, #3
 1871 009c 84F82100 		strb	r0, [r4, #33]
1223:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccIpiKb7.s 			page 56


1224:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Process Unlocked */
1225:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
 1872              		.loc 1 1225 0
 1873 00a0 0023     		movs	r3, #0
 1874 00a2 84F82030 		strb	r3, [r4, #32]
1226:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1227:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
 1875              		.loc 1 1227 0
 1876 00a6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1877              	.LVL163:
 1878              	.L165:
1228:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1229:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1230:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1231:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Wakeup Timer counter */
1232:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->WUTR = (uint32_t)WakeUpCounter;
 1879              		.loc 1 1232 0
 1880 00a8 5E61     		str	r6, [r3, #20]
1233:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1234:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the Wakeup Timer clock source bits in CR register */
1235:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint32_t)~RTC_CR_WUCKSEL;
 1881              		.loc 1 1235 0
 1882 00aa 2268     		ldr	r2, [r4]
 1883 00ac 9368     		ldr	r3, [r2, #8]
 1884 00ae 23F00703 		bic	r3, r3, #7
 1885 00b2 9360     		str	r3, [r2, #8]
1236:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1237:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the clock source */
1238:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint32_t)WakeUpClock;
 1886              		.loc 1 1238 0
 1887 00b4 2268     		ldr	r2, [r4]
 1888 00b6 9368     		ldr	r3, [r2, #8]
 1889 00b8 1D43     		orrs	r5, r5, r3
 1890              	.LVL164:
 1891 00ba 9560     		str	r5, [r2, #8]
1239:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1240:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if !defined(DUAL_CORE)
1241:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* RTC WakeUpTimer Interrupt Configuration: EXTI configuration */
1242:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    __HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_IT();
 1892              		.loc 1 1242 0
 1893 00bc 104A     		ldr	r2, .L166
 1894 00be 1368     		ldr	r3, [r2]
 1895 00c0 43F40023 		orr	r3, r3, #524288
 1896 00c4 1360     		str	r3, [r2]
1243:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
1244:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1245:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    __HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_RISING_EDGE();
 1897              		.loc 1 1245 0
 1898 00c6 4FF0B042 		mov	r2, #1476395008
 1899 00ca 1368     		ldr	r3, [r2]
 1900 00cc 43F40023 		orr	r3, r3, #524288
 1901 00d0 1360     		str	r3, [r2]
1246:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Interrupt in the RTC_CR register */
1247:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE_IT(hrtc,RTC_IT_WUT);
 1902              		.loc 1 1247 0
 1903 00d2 2268     		ldr	r2, [r4]
 1904 00d4 9368     		ldr	r3, [r2, #8]
ARM GAS  /tmp/ccIpiKb7.s 			page 57


 1905 00d6 43F48043 		orr	r3, r3, #16384
 1906 00da 9360     		str	r3, [r2, #8]
1248:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1249:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the Wakeup Timer */
1250:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE(hrtc);
 1907              		.loc 1 1250 0
 1908 00dc 2268     		ldr	r2, [r4]
 1909 00de 9368     		ldr	r3, [r2, #8]
 1910 00e0 43F48063 		orr	r3, r3, #1024
 1911 00e4 9360     		str	r3, [r2, #8]
1251:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1252:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1253:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1912              		.loc 1 1253 0
 1913 00e6 2368     		ldr	r3, [r4]
 1914 00e8 FF22     		movs	r2, #255
 1915 00ea 5A62     		str	r2, [r3, #36]
1254:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1255:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1916              		.loc 1 1255 0
 1917 00ec 0123     		movs	r3, #1
 1918 00ee 84F82130 		strb	r3, [r4, #33]
1256:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1257:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
1258:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1919              		.loc 1 1258 0
 1920 00f2 0020     		movs	r0, #0
 1921 00f4 84F82000 		strb	r0, [r4, #32]
1259:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1260:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 1922              		.loc 1 1260 0
 1923 00f8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1924              	.LVL165:
 1925              	.L163:
1177:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 1926              		.loc 1 1177 0
 1927 00fa 0220     		movs	r0, #2
 1928              	.LVL166:
1261:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1929              		.loc 1 1261 0
 1930 00fc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1931              	.L167:
 1932 00fe 00BF     		.align	2
 1933              	.L166:
 1934 0100 80000058 		.word	1476395136
 1935              		.cfi_endproc
 1936              	.LFE160:
 1938              		.section	.text.HAL_RTCEx_DeactivateWakeUpTimer,"ax",%progbits
 1939              		.align	1
 1940              		.global	HAL_RTCEx_DeactivateWakeUpTimer
 1941              		.syntax unified
 1942              		.thumb
 1943              		.thumb_func
 1944              		.fpu fpv5-d16
 1946              	HAL_RTCEx_DeactivateWakeUpTimer:
 1947              	.LFB161:
1262:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccIpiKb7.s 			page 58


1263:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1264:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate wake up timer counter.
1265:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1266:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1267:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1268:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateWakeUpTimer(RTC_HandleTypeDef *hrtc)
1269:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1948              		.loc 1 1269 0
 1949              		.cfi_startproc
 1950              		@ args = 0, pretend = 0, frame = 0
 1951              		@ frame_needed = 0, uses_anonymous_args = 0
 1952              	.LVL167:
 1953 0000 38B5     		push	{r3, r4, r5, lr}
 1954              	.LCFI24:
 1955              		.cfi_def_cfa_offset 16
 1956              		.cfi_offset 3, -16
 1957              		.cfi_offset 4, -12
 1958              		.cfi_offset 5, -8
 1959              		.cfi_offset 14, -4
1270:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart;
1271:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1272:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
1273:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1960              		.loc 1 1273 0
 1961 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1962 0006 012B     		cmp	r3, #1
 1963 0008 01D1     		bne	.L174
 1964 000a 0220     		movs	r0, #2
 1965              	.LVL168:
1274:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1275:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1276:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1277:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1278:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1279:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1280:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the Wakeup Timer */
1281:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
1282:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1283:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */
1284:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE_IT(hrtc,RTC_IT_WUT);
1285:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1286:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
1287:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
1288:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == 0u)
1289:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1290:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
1291:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1292:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
1293:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1294:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1295:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
1296:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1297:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Process Unlocked */
1298:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
1299:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1300:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
1301:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
ARM GAS  /tmp/ccIpiKb7.s 			page 59


1302:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1303:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1304:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1305:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1306:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1307:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
1308:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1309:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
1310:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
1311:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1312:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
1313:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1966              		.loc 1 1313 0
 1967 000c 38BD     		pop	{r3, r4, r5, pc}
 1968              	.LVL169:
 1969              	.L174:
 1970 000e 0446     		mov	r4, r0
1273:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 1971              		.loc 1 1273 0 discriminator 2
 1972 0010 0123     		movs	r3, #1
 1973 0012 80F82030 		strb	r3, [r0, #32]
1275:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 1974              		.loc 1 1275 0 discriminator 2
 1975 0016 0223     		movs	r3, #2
 1976 0018 80F82130 		strb	r3, [r0, #33]
1278:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 1977              		.loc 1 1278 0 discriminator 2
 1978 001c 0368     		ldr	r3, [r0]
 1979 001e CA22     		movs	r2, #202
 1980 0020 5A62     		str	r2, [r3, #36]
 1981 0022 0368     		ldr	r3, [r0]
 1982 0024 5322     		movs	r2, #83
 1983 0026 5A62     		str	r2, [r3, #36]
1281:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 1984              		.loc 1 1281 0 discriminator 2
 1985 0028 0268     		ldr	r2, [r0]
 1986 002a 9368     		ldr	r3, [r2, #8]
 1987 002c 23F48063 		bic	r3, r3, #1024
 1988 0030 9360     		str	r3, [r2, #8]
1284:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 1989              		.loc 1 1284 0 discriminator 2
 1990 0032 0268     		ldr	r2, [r0]
 1991 0034 9368     		ldr	r3, [r2, #8]
 1992 0036 23F48043 		bic	r3, r3, #16384
 1993 003a 9360     		str	r3, [r2, #8]
1286:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
 1994              		.loc 1 1286 0 discriminator 2
 1995 003c FFF7FEFF 		bl	HAL_GetTick
 1996              	.LVL170:
 1997 0040 0546     		mov	r5, r0
 1998              	.LVL171:
 1999              	.L170:
1288:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 2000              		.loc 1 1288 0
 2001 0042 2368     		ldr	r3, [r4]
 2002 0044 DA68     		ldr	r2, [r3, #12]
 2003 0046 12F0040F 		tst	r2, #4
ARM GAS  /tmp/ccIpiKb7.s 			page 60


 2004 004a 0FD1     		bne	.L175
1290:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 2005              		.loc 1 1290 0
 2006 004c FFF7FEFF 		bl	HAL_GetTick
 2007              	.LVL172:
 2008 0050 401B     		subs	r0, r0, r5
 2009 0052 B0F57A7F 		cmp	r0, #1000
 2010 0056 F4D9     		bls	.L170
1293:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2011              		.loc 1 1293 0
 2012 0058 2368     		ldr	r3, [r4]
 2013 005a FF22     		movs	r2, #255
 2014 005c 5A62     		str	r2, [r3, #36]
1295:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2015              		.loc 1 1295 0
 2016 005e 0320     		movs	r0, #3
 2017 0060 84F82100 		strb	r0, [r4, #33]
1298:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2018              		.loc 1 1298 0
 2019 0064 0023     		movs	r3, #0
 2020 0066 84F82030 		strb	r3, [r4, #32]
1300:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 2021              		.loc 1 1300 0
 2022 006a 38BD     		pop	{r3, r4, r5, pc}
 2023              	.LVL173:
 2024              	.L175:
1305:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2025              		.loc 1 1305 0
 2026 006c FF22     		movs	r2, #255
 2027 006e 5A62     		str	r2, [r3, #36]
1307:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2028              		.loc 1 1307 0
 2029 0070 0123     		movs	r3, #1
 2030 0072 84F82130 		strb	r3, [r4, #33]
1310:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2031              		.loc 1 1310 0
 2032 0076 0020     		movs	r0, #0
 2033 0078 84F82000 		strb	r0, [r4, #32]
1312:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2034              		.loc 1 1312 0
 2035 007c 38BD     		pop	{r3, r4, r5, pc}
 2036              		.cfi_endproc
 2037              	.LFE161:
 2039              		.section	.text.HAL_RTCEx_GetWakeUpTimer,"ax",%progbits
 2040              		.align	1
 2041              		.global	HAL_RTCEx_GetWakeUpTimer
 2042              		.syntax unified
 2043              		.thumb
 2044              		.thumb_func
 2045              		.fpu fpv5-d16
 2047              	HAL_RTCEx_GetWakeUpTimer:
 2048              	.LFB162:
1314:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1315:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1316:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Get wake up timer counter.
1317:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1318:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval Counter value
ARM GAS  /tmp/ccIpiKb7.s 			page 61


1319:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1320:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_GetWakeUpTimer(RTC_HandleTypeDef *hrtc)
1321:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2049              		.loc 1 1321 0
 2050              		.cfi_startproc
 2051              		@ args = 0, pretend = 0, frame = 0
 2052              		@ frame_needed = 0, uses_anonymous_args = 0
 2053              		@ link register save eliminated.
 2054              	.LVL174:
1322:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the counter value */
1323:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return ((uint32_t)(hrtc->Instance->WUTR & RTC_WUTR_WUT));
 2055              		.loc 1 1323 0
 2056 0000 0368     		ldr	r3, [r0]
 2057 0002 5869     		ldr	r0, [r3, #20]
 2058              	.LVL175:
1324:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2059              		.loc 1 1324 0
 2060 0004 80B2     		uxth	r0, r0
 2061 0006 7047     		bx	lr
 2062              		.cfi_endproc
 2063              	.LFE162:
 2065              		.section	.text.HAL_RTCEx_WakeUpTimerEventCallback,"ax",%progbits
 2066              		.align	1
 2067              		.weak	HAL_RTCEx_WakeUpTimerEventCallback
 2068              		.syntax unified
 2069              		.thumb
 2070              		.thumb_func
 2071              		.fpu fpv5-d16
 2073              	HAL_RTCEx_WakeUpTimerEventCallback:
 2074              	.LFB164:
1325:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1326:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1327:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle Wake Up Timer interrupt request.
1328:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1329:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1330:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1331:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** void HAL_RTCEx_WakeUpTimerIRQHandler(RTC_HandleTypeDef *hrtc)
1332:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1333:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Clear the EXTI's line Flag for RTC WakeUpTimer */
1334:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(DUAL_CORE)
1335:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    if (HAL_GetCurrentCPUID() == CM7_CPUID)
1336:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    {
1337:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****      __HAL_RTC_WAKEUPTIMER_EXTI_CLEAR_FLAG();
1338:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    }
1339:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    else
1340:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    {
1341:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****      __HAL_RTC_WAKEUPTIMER_EXTID2_CLEAR_FLAG();
1342:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    }
1343:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1344:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****      __HAL_RTC_WAKEUPTIMER_EXTI_CLEAR_FLAG();
1345:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
1346:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Get the pending status of the WAKEUPTIMER Interrupt */
1347:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTF) != 0u)
1348:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1349:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Clear the WAKEUPTIMER interrupt pending bit */
1350:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
1351:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccIpiKb7.s 			page 62


1352:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* WAKEUPTIMER callback */
1353:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1354:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->WakeUpTimerEventCallback(hrtc);
1355:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1356:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       HAL_RTCEx_WakeUpTimerEventCallback(hrtc);
1357:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
1358:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1359:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1360:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1361:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
1362:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1363:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1364:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1365:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Wake Up Timer callback.
1366:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1367:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1368:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1369:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_WakeUpTimerEventCallback(RTC_HandleTypeDef *hrtc)
1370:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2075              		.loc 1 1370 0
 2076              		.cfi_startproc
 2077              		@ args = 0, pretend = 0, frame = 0
 2078              		@ frame_needed = 0, uses_anonymous_args = 0
 2079              		@ link register save eliminated.
 2080              	.LVL176:
 2081 0000 7047     		bx	lr
 2082              		.cfi_endproc
 2083              	.LFE164:
 2085              		.section	.text.HAL_RTCEx_WakeUpTimerIRQHandler,"ax",%progbits
 2086              		.align	1
 2087              		.global	HAL_RTCEx_WakeUpTimerIRQHandler
 2088              		.syntax unified
 2089              		.thumb
 2090              		.thumb_func
 2091              		.fpu fpv5-d16
 2093              	HAL_RTCEx_WakeUpTimerIRQHandler:
 2094              	.LFB163:
1332:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Clear the EXTI's line Flag for RTC WakeUpTimer */
 2095              		.loc 1 1332 0
 2096              		.cfi_startproc
 2097              		@ args = 0, pretend = 0, frame = 0
 2098              		@ frame_needed = 0, uses_anonymous_args = 0
 2099              	.LVL177:
1332:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Clear the EXTI's line Flag for RTC WakeUpTimer */
 2100              		.loc 1 1332 0
 2101 0000 10B5     		push	{r4, lr}
 2102              	.LCFI25:
 2103              		.cfi_def_cfa_offset 8
 2104              		.cfi_offset 4, -8
 2105              		.cfi_offset 14, -4
 2106 0002 0446     		mov	r4, r0
1344:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
 2107              		.loc 1 1344 0
 2108 0004 4FF40022 		mov	r2, #524288
 2109 0008 094B     		ldr	r3, .L182
 2110 000a 9A60     		str	r2, [r3, #8]
1347:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
ARM GAS  /tmp/ccIpiKb7.s 			page 63


 2111              		.loc 1 1347 0
 2112 000c 0368     		ldr	r3, [r0]
 2113 000e DA68     		ldr	r2, [r3, #12]
 2114 0010 12F4806F 		tst	r2, #1024
 2115 0014 03D1     		bne	.L181
 2116              	.LVL178:
 2117              	.L179:
1361:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2118              		.loc 1 1361 0
 2119 0016 0123     		movs	r3, #1
 2120 0018 84F82130 		strb	r3, [r4, #33]
 2121 001c 10BD     		pop	{r4, pc}
 2122              	.LVL179:
 2123              	.L181:
1350:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2124              		.loc 1 1350 0
 2125 001e DA68     		ldr	r2, [r3, #12]
 2126 0020 D2B2     		uxtb	r2, r2
 2127 0022 62F49062 		orn	r2, r2, #1152
 2128 0026 DA60     		str	r2, [r3, #12]
1356:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 2129              		.loc 1 1356 0
 2130 0028 FFF7FEFF 		bl	HAL_RTCEx_WakeUpTimerEventCallback
 2131              	.LVL180:
 2132 002c F3E7     		b	.L179
 2133              	.L183:
 2134 002e 00BF     		.align	2
 2135              	.L182:
 2136 0030 80000058 		.word	1476395136
 2137              		.cfi_endproc
 2138              	.LFE163:
 2140              		.section	.text.HAL_RTCEx_PollForWakeUpTimerEvent,"ax",%progbits
 2141              		.align	1
 2142              		.global	HAL_RTCEx_PollForWakeUpTimerEvent
 2143              		.syntax unified
 2144              		.thumb
 2145              		.thumb_func
 2146              		.fpu fpv5-d16
 2148              	HAL_RTCEx_PollForWakeUpTimerEvent:
 2149              	.LFB165:
1371:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1372:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1373:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1374:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1375:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_WakeUpTimerEventCallback could be implemented in the user file
1376:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1377:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1378:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1379:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1380:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle Wake Up Timer Polling.
1381:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1382:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1383:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1384:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1385:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForWakeUpTimerEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1386:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2150              		.loc 1 1386 0
ARM GAS  /tmp/ccIpiKb7.s 			page 64


 2151              		.cfi_startproc
 2152              		@ args = 0, pretend = 0, frame = 0
 2153              		@ frame_needed = 0, uses_anonymous_args = 0
 2154              	.LVL181:
 2155 0000 70B5     		push	{r4, r5, r6, lr}
 2156              	.LCFI26:
 2157              		.cfi_def_cfa_offset 16
 2158              		.cfi_offset 4, -16
 2159              		.cfi_offset 5, -12
 2160              		.cfi_offset 6, -8
 2161              		.cfi_offset 14, -4
 2162 0002 0446     		mov	r4, r0
 2163 0004 0D46     		mov	r5, r1
1387:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 2164              		.loc 1 1387 0
 2165 0006 FFF7FEFF 		bl	HAL_GetTick
 2166              	.LVL182:
 2167 000a 0646     		mov	r6, r0
 2168              	.LVL183:
 2169              	.L186:
1388:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1389:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTF) == 0u)
 2170              		.loc 1 1389 0
 2171 000c 2368     		ldr	r3, [r4]
 2172 000e DA68     		ldr	r2, [r3, #12]
 2173 0010 12F4806F 		tst	r2, #1024
 2174 0014 0DD1     		bne	.L191
1390:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1391:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 2175              		.loc 1 1391 0
 2176 0016 B5F1FF3F 		cmp	r5, #-1
 2177 001a F7D0     		beq	.L186
1392:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1393:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if(((HAL_GetTick() - tickstart ) > Timeout) || (Timeout == 0u))
 2178              		.loc 1 1393 0
 2179 001c FFF7FEFF 		bl	HAL_GetTick
 2180              	.LVL184:
 2181 0020 801B     		subs	r0, r0, r6
 2182 0022 8542     		cmp	r5, r0
 2183 0024 01D3     		bcc	.L187
 2184              		.loc 1 1393 0 is_stmt 0 discriminator 1
 2185 0026 002D     		cmp	r5, #0
 2186 0028 F0D1     		bne	.L186
 2187              	.L187:
1394:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1395:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2188              		.loc 1 1395 0 is_stmt 1
 2189 002a 0320     		movs	r0, #3
 2190 002c 84F82100 		strb	r0, [r4, #33]
1396:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1397:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2191              		.loc 1 1397 0
 2192 0030 70BD     		pop	{r4, r5, r6, pc}
 2193              	.LVL185:
 2194              	.L191:
1398:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1399:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
ARM GAS  /tmp/ccIpiKb7.s 			page 65


1400:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1401:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1402:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the WAKEUPTIMER Flag */
1403:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
 2195              		.loc 1 1403 0
 2196 0032 DA68     		ldr	r2, [r3, #12]
 2197 0034 D2B2     		uxtb	r2, r2
 2198 0036 62F49062 		orn	r2, r2, #1152
 2199 003a DA60     		str	r2, [r3, #12]
1404:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1405:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1406:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2200              		.loc 1 1406 0
 2201 003c 0123     		movs	r3, #1
 2202 003e 84F82130 		strb	r3, [r4, #33]
1407:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1408:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 2203              		.loc 1 1408 0
 2204 0042 0020     		movs	r0, #0
1409:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2205              		.loc 1 1409 0
 2206 0044 70BD     		pop	{r4, r5, r6, pc}
 2207              		.cfi_endproc
 2208              	.LFE165:
 2210              		.section	.text.HAL_RTCEx_BKUPWrite,"ax",%progbits
 2211              		.align	1
 2212              		.global	HAL_RTCEx_BKUPWrite
 2213              		.syntax unified
 2214              		.thumb
 2215              		.thumb_func
 2216              		.fpu fpv5-d16
 2218              	HAL_RTCEx_BKUPWrite:
 2219              	.LFB166:
1410:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1411:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1412:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
1413:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1414:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1415:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1416:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @defgroup RTCEx_Exported_Functions_Group3 Extended Peripheral Control functions
1417:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief    Extended Peripheral Control functions
1418:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
1419:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @verbatim
1420:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
1421:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****               ##### Extended Peripheral Control functions #####
1422:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
1423:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     [..]
1424:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     This subsection provides functions allowing to
1425:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Write a data in a specified RTC Backup data register
1426:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Read a data in a specified RTC Backup data register
1427:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Set the Smooth calibration parameters.
1428:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Configure the Synchronization Shift Control Settings.
1429:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Configure the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1430:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Deactivate the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1431:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Enable the RTC reference clock detection.
1432:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Disable the RTC reference clock detection.
1433:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Enable the Bypass Shadow feature.
ARM GAS  /tmp/ccIpiKb7.s 			page 66


1434:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Disable the Bypass Shadow feature.
1435:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1436:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @endverbatim
1437:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
1438:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1439:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1440:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1441:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Write a data in a specified RTC Backup data register.
1442:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1443:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  BackupRegister RTC Backup data Register number.
1444:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 31 to
1445:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                                 specify the register.
1446:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Data: Data to be written in the specified RTC Backup data register.
1447:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1448:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1449:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** void HAL_RTCEx_BKUPWrite(RTC_HandleTypeDef *hrtc, uint32_t BackupRegister, uint32_t Data)
1450:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2220              		.loc 1 1450 0
 2221              		.cfi_startproc
 2222              		@ args = 0, pretend = 0, frame = 0
 2223              		@ frame_needed = 0, uses_anonymous_args = 0
 2224              		@ link register save eliminated.
 2225              	.LVL186:
1451:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmp;
1452:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1453:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
1454:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_BKP(BackupRegister));
1455:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1456:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Point on address of first backup register */
1457:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmp = (uint32_t)&(hrtc->Instance->BKP0R);
 2226              		.loc 1 1457 0
 2227 0000 0368     		ldr	r3, [r0]
 2228 0002 5033     		adds	r3, r3, #80
 2229              	.LVL187:
1458:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Advance to address of targeted backup register */
1459:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmp += (BackupRegister * 4u);
1460:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1461:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Write the specified register */
1462:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *(__IO uint32_t *)tmp = (uint32_t)Data;
 2230              		.loc 1 1462 0
 2231 0004 43F82120 		str	r2, [r3, r1, lsl #2]
 2232 0008 7047     		bx	lr
 2233              		.cfi_endproc
 2234              	.LFE166:
 2236              		.section	.text.HAL_RTCEx_BKUPRead,"ax",%progbits
 2237              		.align	1
 2238              		.global	HAL_RTCEx_BKUPRead
 2239              		.syntax unified
 2240              		.thumb
 2241              		.thumb_func
 2242              		.fpu fpv5-d16
 2244              	HAL_RTCEx_BKUPRead:
 2245              	.LFB167:
1463:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1464:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1465:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1466:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Read data from the specified RTC Backup data Register.
ARM GAS  /tmp/ccIpiKb7.s 			page 67


1467:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1468:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  BackupRegister RTC Backup data Register number.
1469:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 31 to
1470:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                                 specify the register.
1471:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval Read value
1472:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1473:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_BKUPRead(RTC_HandleTypeDef *hrtc, uint32_t BackupRegister)
1474:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2246              		.loc 1 1474 0
 2247              		.cfi_startproc
 2248              		@ args = 0, pretend = 0, frame = 0
 2249              		@ frame_needed = 0, uses_anonymous_args = 0
 2250              		@ link register save eliminated.
 2251              	.LVL188:
1475:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmp;
1476:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1477:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
1478:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_BKP(BackupRegister));
1479:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1480:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Point on address of first backup register */
1481:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmp = (uint32_t)&(hrtc->Instance->BKP0R);
 2252              		.loc 1 1481 0
 2253 0000 0368     		ldr	r3, [r0]
 2254 0002 5033     		adds	r3, r3, #80
 2255              	.LVL189:
1482:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Advance to address of targeted backup register */
1483:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmp += (BackupRegister * 4u);
1484:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1485:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Read the specified register */
1486:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return (*(__IO uint32_t *)tmp);
 2256              		.loc 1 1486 0
 2257 0004 53F82100 		ldr	r0, [r3, r1, lsl #2]
 2258              	.LVL190:
1487:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2259              		.loc 1 1487 0
 2260 0008 7047     		bx	lr
 2261              		.cfi_endproc
 2262              	.LFE167:
 2264              		.section	.text.HAL_RTCEx_SetSmoothCalib,"ax",%progbits
 2265              		.align	1
 2266              		.global	HAL_RTCEx_SetSmoothCalib
 2267              		.syntax unified
 2268              		.thumb
 2269              		.thumb_func
 2270              		.fpu fpv5-d16
 2272              	HAL_RTCEx_SetSmoothCalib:
 2273              	.LFB168:
1488:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1489:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1490:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set the Smooth calibration parameters.
1491:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1492:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  SmoothCalibPeriod Select the Smooth Calibration Period.
1493:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be can be one of the following values :
1494:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_32SEC: The smooth calibration period is 32s.
1495:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_16SEC: The smooth calibration period is 16s.
1496:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_8SEC: The smooth calibration period is 8s.
1497:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  SmoothCalibPlusPulses Select to Set or reset the CALP bit.
ARM GAS  /tmp/ccIpiKb7.s 			page 68


1498:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
1499:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PLUSPULSES_SET: Add one RTCCLK pulse every 2*11 pulses.
1500:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PLUSPULSES_RESET: No RTCCLK pulses are added.
1501:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  SmoothCalibMinusPulsesValue Select the value of CALM[8:0] bits.
1502:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one any value from 0 to 0x000001FF.
1503:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   To deactivate the smooth calibration, the field SmoothCalibPlusPulses
1504:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         must be equal to SMOOTHCALIB_PLUSPULSES_RESET and the field
1505:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         SmoothCalibMinusPulsesValue must be equal to 0.
1506:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1507:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1508:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetSmoothCalib(RTC_HandleTypeDef* hrtc, uint32_t SmoothCalibPeriod, uin
1509:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2274              		.loc 1 1509 0
 2275              		.cfi_startproc
 2276              		@ args = 0, pretend = 0, frame = 0
 2277              		@ frame_needed = 0, uses_anonymous_args = 0
 2278              	.LVL191:
 2279 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2280              	.LCFI27:
 2281              		.cfi_def_cfa_offset 24
 2282              		.cfi_offset 4, -24
 2283              		.cfi_offset 5, -20
 2284              		.cfi_offset 6, -16
 2285              		.cfi_offset 7, -12
 2286              		.cfi_offset 8, -8
 2287              		.cfi_offset 14, -4
1510:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart;
1511:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1512:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
1513:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PERIOD(SmoothCalibPeriod));
1514:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PLUS(SmoothCalibPlusPulses));
1515:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_MINUS(SmoothCalibMinusPulsesValue));
1516:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1517:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
1518:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2288              		.loc 1 1518 0
 2289 0004 90F82040 		ldrb	r4, [r0, #32]	@ zero_extendqisi2
 2290 0008 012C     		cmp	r4, #1
 2291 000a 3DD0     		beq	.L199
 2292 000c 1E46     		mov	r6, r3
 2293 000e 1746     		mov	r7, r2
 2294 0010 0D46     		mov	r5, r1
 2295 0012 0446     		mov	r4, r0
 2296              		.loc 1 1518 0 is_stmt 0 discriminator 2
 2297 0014 0123     		movs	r3, #1
 2298              	.LVL192:
 2299 0016 80F82030 		strb	r3, [r0, #32]
1519:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1520:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2300              		.loc 1 1520 0 is_stmt 1 discriminator 2
 2301 001a 0223     		movs	r3, #2
 2302 001c 80F82130 		strb	r3, [r0, #33]
1521:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1522:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1523:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2303              		.loc 1 1523 0 discriminator 2
 2304 0020 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccIpiKb7.s 			page 69


 2305 0022 CA22     		movs	r2, #202
 2306              	.LVL193:
 2307 0024 5A62     		str	r2, [r3, #36]
 2308 0026 0368     		ldr	r3, [r0]
 2309 0028 5322     		movs	r2, #83
 2310 002a 5A62     		str	r2, [r3, #36]
1524:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1525:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* check if a calibration operation is pending */
1526:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if((hrtc->Instance->ISR & RTC_ISR_RECALPF) != 0u)
 2311              		.loc 1 1526 0 discriminator 2
 2312 002c 0368     		ldr	r3, [r0]
 2313 002e DB68     		ldr	r3, [r3, #12]
 2314 0030 13F4803F 		tst	r3, #65536
 2315 0034 0ED1     		bne	.L201
 2316              	.LVL194:
 2317              	.L196:
1527:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1528:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tickstart = HAL_GetTick();
1529:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1530:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Wait for pending calibration operation to finish */
1531:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     while((hrtc->Instance->ISR & RTC_ISR_RECALPF) != 0u)
1532:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1533:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
1534:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1535:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
1536:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1537:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1538:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Change RTC state */
1539:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
1540:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1541:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Process Unlocked */
1542:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
1543:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1544:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
1545:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1546:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1547:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1548:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1549:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Smooth calibration settings */
1550:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CALR = (uint32_t)(SmoothCalibPeriod | SmoothCalibPlusPulses | SmoothCalibMinusPul
 2318              		.loc 1 1550 0
 2319 0036 2368     		ldr	r3, [r4]
 2320 0038 3D43     		orrs	r5, r5, r7
 2321              	.LVL195:
 2322 003a 3543     		orrs	r5, r5, r6
 2323 003c DD63     		str	r5, [r3, #60]
1551:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1552:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1553:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2324              		.loc 1 1553 0
 2325 003e 2368     		ldr	r3, [r4]
 2326 0040 FF22     		movs	r2, #255
 2327 0042 5A62     		str	r2, [r3, #36]
1554:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1555:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1556:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2328              		.loc 1 1556 0
ARM GAS  /tmp/ccIpiKb7.s 			page 70


 2329 0044 0123     		movs	r3, #1
 2330 0046 84F82130 		strb	r3, [r4, #33]
1557:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1558:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
1559:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2331              		.loc 1 1559 0
 2332 004a 0020     		movs	r0, #0
 2333 004c 84F82000 		strb	r0, [r4, #32]
1560:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1561:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 2334              		.loc 1 1561 0
 2335 0050 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2336              	.LVL196:
 2337              	.L201:
1528:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2338              		.loc 1 1528 0
 2339 0054 FFF7FEFF 		bl	HAL_GetTick
 2340              	.LVL197:
 2341 0058 8046     		mov	r8, r0
 2342              	.LVL198:
 2343              	.L197:
1531:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 2344              		.loc 1 1531 0
 2345 005a 2168     		ldr	r1, [r4]
 2346 005c C968     		ldr	r1, [r1, #12]
 2347 005e 11F4803F 		tst	r1, #65536
 2348 0062 E8D0     		beq	.L196
1533:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
 2349              		.loc 1 1533 0
 2350 0064 FFF7FEFF 		bl	HAL_GetTick
 2351              	.LVL199:
 2352 0068 A0EB0800 		sub	r0, r0, r8
 2353 006c B0F57A7F 		cmp	r0, #1000
 2354 0070 F3D9     		bls	.L197
1536:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2355              		.loc 1 1536 0
 2356 0072 2368     		ldr	r3, [r4]
 2357 0074 FF22     		movs	r2, #255
 2358 0076 5A62     		str	r2, [r3, #36]
1539:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2359              		.loc 1 1539 0
 2360 0078 0320     		movs	r0, #3
 2361 007a 84F82100 		strb	r0, [r4, #33]
1542:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2362              		.loc 1 1542 0
 2363 007e 0023     		movs	r3, #0
 2364 0080 84F82030 		strb	r3, [r4, #32]
1544:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
 2365              		.loc 1 1544 0
 2366 0084 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2367              	.LVL200:
 2368              	.L199:
1518:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2369              		.loc 1 1518 0
 2370 0088 0220     		movs	r0, #2
 2371              	.LVL201:
1562:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
ARM GAS  /tmp/ccIpiKb7.s 			page 71


 2372              		.loc 1 1562 0
 2373 008a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2374              		.cfi_endproc
 2375              	.LFE168:
 2377              		.section	.text.HAL_RTCEx_SetSynchroShift,"ax",%progbits
 2378              		.align	1
 2379              		.global	HAL_RTCEx_SetSynchroShift
 2380              		.syntax unified
 2381              		.thumb
 2382              		.thumb_func
 2383              		.fpu fpv5-d16
 2385              	HAL_RTCEx_SetSynchroShift:
 2386              	.LFB169:
1563:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1564:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1565:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Configure the Synchronization Shift Control Settings.
1566:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   When REFCKON is set, firmware must not write to Shift control register.
1567:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1568:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  ShiftAdd1S Select to add or not 1 second to the time calendar.
1569:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values :
1570:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SHIFTADD1S_SET: Add one second to the clock calendar.
1571:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SHIFTADD1S_RESET: No effect.
1572:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  ShiftSubFS Select the number of Second Fractions to substitute.
1573:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one any value from 0 to 0x7FFF.
1574:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1575:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1576:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetSynchroShift(RTC_HandleTypeDef* hrtc, uint32_t ShiftAdd1S, uint32_t 
1577:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2387              		.loc 1 1577 0
 2388              		.cfi_startproc
 2389              		@ args = 0, pretend = 0, frame = 0
 2390              		@ frame_needed = 0, uses_anonymous_args = 0
 2391              	.LVL202:
 2392 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2393              	.LCFI28:
 2394              		.cfi_def_cfa_offset 24
 2395              		.cfi_offset 3, -24
 2396              		.cfi_offset 4, -20
 2397              		.cfi_offset 5, -16
 2398              		.cfi_offset 6, -12
 2399              		.cfi_offset 7, -8
 2400              		.cfi_offset 14, -4
1578:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart;
1579:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1580:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
1581:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SHIFT_ADD1S(ShiftAdd1S));
1582:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SHIFT_SUBFS(ShiftSubFS));
1583:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1584:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
1585:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2401              		.loc 1 1585 0
 2402 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2403 0006 012B     		cmp	r3, #1
 2404 0008 01D1     		bne	.L210
 2405 000a 0220     		movs	r0, #2
 2406              	.LVL203:
1586:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccIpiKb7.s 			page 72


1587:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1588:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1589:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1590:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1591:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1592:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tickstart = HAL_GetTick();
1593:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1594:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Wait until the shift is completed*/
1595:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     while((hrtc->Instance->ISR & RTC_ISR_SHPF) != 0u)
1596:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1597:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
1598:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1599:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
1600:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1601:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1602:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
1603:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1604:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Process Unlocked */
1605:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
1606:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1607:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
1608:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1609:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1610:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1611:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Check if the reference clock detection is disabled */
1612:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if((hrtc->Instance->CR & RTC_CR_REFCKON) == 0u)
1613:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1614:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Configure the Shift settings */
1615:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->Instance->SHIFTR = (uint32_t)(uint32_t)(ShiftSubFS) | (uint32_t)(ShiftAdd1S);
1616:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1617:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* If  RTC_CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
1618:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == 0u)
1619:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1620:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
1621:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         {
1622:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           /* Enable the write protection for RTC registers */
1623:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1624:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1625:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           hrtc->State = HAL_RTC_STATE_ERROR;
1626:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1627:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           /* Process Unlocked */
1628:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           __HAL_UNLOCK(hrtc);
1629:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1630:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           return HAL_ERROR;
1631:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         }
1632:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1633:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1634:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     else
1635:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1636:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
1637:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1638:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1639:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Change RTC state */
1640:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
1641:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1642:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Process Unlocked */
1643:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
ARM GAS  /tmp/ccIpiKb7.s 			page 73


1644:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1645:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       return HAL_ERROR;
1646:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1647:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1648:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1649:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1650:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1651:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1652:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
1653:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1654:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
1655:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
1656:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1657:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
1658:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2407              		.loc 1 1658 0
 2408 000c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2409              	.LVL204:
 2410              	.L210:
 2411 000e 1646     		mov	r6, r2
 2412 0010 0F46     		mov	r7, r1
 2413 0012 0446     		mov	r4, r0
1585:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2414              		.loc 1 1585 0 discriminator 2
 2415 0014 0123     		movs	r3, #1
 2416 0016 80F82030 		strb	r3, [r0, #32]
1587:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2417              		.loc 1 1587 0 discriminator 2
 2418 001a 0223     		movs	r3, #2
 2419 001c 80F82130 		strb	r3, [r0, #33]
1590:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2420              		.loc 1 1590 0 discriminator 2
 2421 0020 0368     		ldr	r3, [r0]
 2422 0022 CA22     		movs	r2, #202
 2423              	.LVL205:
 2424 0024 5A62     		str	r2, [r3, #36]
 2425 0026 0368     		ldr	r3, [r0]
 2426 0028 5322     		movs	r2, #83
 2427 002a 5A62     		str	r2, [r3, #36]
1592:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2428              		.loc 1 1592 0 discriminator 2
 2429 002c FFF7FEFF 		bl	HAL_GetTick
 2430              	.LVL206:
 2431 0030 0546     		mov	r5, r0
 2432              	.LVL207:
 2433              	.L204:
1595:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 2434              		.loc 1 1595 0
 2435 0032 2368     		ldr	r3, [r4]
 2436 0034 D868     		ldr	r0, [r3, #12]
 2437 0036 10F0080F 		tst	r0, #8
 2438 003a 0FD0     		beq	.L211
1597:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
 2439              		.loc 1 1597 0
 2440 003c FFF7FEFF 		bl	HAL_GetTick
 2441              	.LVL208:
 2442 0040 401B     		subs	r0, r0, r5
ARM GAS  /tmp/ccIpiKb7.s 			page 74


 2443 0042 B0F57A7F 		cmp	r0, #1000
 2444 0046 F4D9     		bls	.L204
1600:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2445              		.loc 1 1600 0
 2446 0048 2368     		ldr	r3, [r4]
 2447 004a FF22     		movs	r2, #255
 2448 004c 5A62     		str	r2, [r3, #36]
1602:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2449              		.loc 1 1602 0
 2450 004e 0320     		movs	r0, #3
 2451 0050 84F82100 		strb	r0, [r4, #33]
1605:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2452              		.loc 1 1605 0
 2453 0054 0023     		movs	r3, #0
 2454 0056 84F82030 		strb	r3, [r4, #32]
1607:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
 2455              		.loc 1 1607 0
 2456 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2457              	.LVL209:
 2458              	.L211:
1612:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 2459              		.loc 1 1612 0
 2460 005c 9A68     		ldr	r2, [r3, #8]
 2461 005e 12F0100F 		tst	r2, #16
 2462 0062 20D1     		bne	.L206
1615:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2463              		.loc 1 1615 0
 2464 0064 3E43     		orrs	r6, r6, r7
 2465              	.LVL210:
 2466 0066 DE62     		str	r6, [r3, #44]
1618:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
 2467              		.loc 1 1618 0
 2468 0068 2368     		ldr	r3, [r4]
 2469 006a 9B68     		ldr	r3, [r3, #8]
 2470 006c 13F0200F 		tst	r3, #32
 2471 0070 09D0     		beq	.L212
 2472              	.L207:
1649:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2473              		.loc 1 1649 0
 2474 0072 2368     		ldr	r3, [r4]
 2475 0074 FF22     		movs	r2, #255
 2476 0076 5A62     		str	r2, [r3, #36]
1652:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2477              		.loc 1 1652 0
 2478 0078 0123     		movs	r3, #1
 2479 007a 84F82130 		strb	r3, [r4, #33]
1655:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2480              		.loc 1 1655 0
 2481 007e 0020     		movs	r0, #0
 2482 0080 84F82000 		strb	r0, [r4, #32]
1657:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2483              		.loc 1 1657 0
 2484 0084 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2485              	.LVL211:
 2486              	.L212:
1620:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         {
 2487              		.loc 1 1620 0
ARM GAS  /tmp/ccIpiKb7.s 			page 75


 2488 0086 2046     		mov	r0, r4
 2489 0088 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 2490              	.LVL212:
 2491 008c 0028     		cmp	r0, #0
 2492 008e F0D0     		beq	.L207
1623:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2493              		.loc 1 1623 0
 2494 0090 2368     		ldr	r3, [r4]
 2495 0092 FF22     		movs	r2, #255
 2496 0094 5A62     		str	r2, [r3, #36]
1625:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2497              		.loc 1 1625 0
 2498 0096 0423     		movs	r3, #4
 2499 0098 84F82130 		strb	r3, [r4, #33]
1628:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2500              		.loc 1 1628 0
 2501 009c 0023     		movs	r3, #0
 2502 009e 84F82030 		strb	r3, [r4, #32]
1630:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         }
 2503              		.loc 1 1630 0
 2504 00a2 0120     		movs	r0, #1
 2505 00a4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2506              	.LVL213:
 2507              	.L206:
1637:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2508              		.loc 1 1637 0
 2509 00a6 FF22     		movs	r2, #255
 2510 00a8 5A62     		str	r2, [r3, #36]
1640:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2511              		.loc 1 1640 0
 2512 00aa 0423     		movs	r3, #4
 2513 00ac 84F82130 		strb	r3, [r4, #33]
1643:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2514              		.loc 1 1643 0
 2515 00b0 0023     		movs	r3, #0
 2516 00b2 84F82030 		strb	r3, [r4, #32]
1645:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 2517              		.loc 1 1645 0
 2518 00b6 0120     		movs	r0, #1
 2519 00b8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2520              		.cfi_endproc
 2521              	.LFE169:
 2523              		.section	.text.HAL_RTCEx_SetCalibrationOutPut,"ax",%progbits
 2524              		.align	1
 2525              		.global	HAL_RTCEx_SetCalibrationOutPut
 2526              		.syntax unified
 2527              		.thumb
 2528              		.thumb_func
 2529              		.fpu fpv5-d16
 2531              	HAL_RTCEx_SetCalibrationOutPut:
 2532              	.LFB170:
1659:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1660:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1661:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Configure the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1662:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1663:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  CalibOutput : Select the Calibration output Selection .
1664:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
ARM GAS  /tmp/ccIpiKb7.s 			page 76


1665:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_CALIBOUTPUT_512HZ: A signal has a regular waveform at 512Hz.
1666:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_CALIBOUTPUT_1HZ: A signal has a regular waveform at 1Hz.
1667:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1668:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1669:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetCalibrationOutPut(RTC_HandleTypeDef* hrtc, uint32_t CalibOutput)
1670:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2533              		.loc 1 1670 0
 2534              		.cfi_startproc
 2535              		@ args = 0, pretend = 0, frame = 0
 2536              		@ frame_needed = 0, uses_anonymous_args = 0
 2537              		@ link register save eliminated.
 2538              	.LVL214:
1671:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
1672:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_CALIB_OUTPUT(CalibOutput));
1673:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1674:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
1675:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2539              		.loc 1 1675 0
 2540 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2541 0004 012B     		cmp	r3, #1
 2542 0006 26D0     		beq	.L215
1670:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 2543              		.loc 1 1670 0 discriminator 2
 2544 0008 10B4     		push	{r4}
 2545              	.LCFI29:
 2546              		.cfi_def_cfa_offset 4
 2547              		.cfi_offset 4, -4
 2548              		.loc 1 1675 0 discriminator 2
 2549 000a 0122     		movs	r2, #1
 2550 000c 80F82020 		strb	r2, [r0, #32]
1676:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1677:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2551              		.loc 1 1677 0 discriminator 2
 2552 0010 0223     		movs	r3, #2
 2553 0012 80F82130 		strb	r3, [r0, #33]
1678:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1679:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1680:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2554              		.loc 1 1680 0 discriminator 2
 2555 0016 0368     		ldr	r3, [r0]
 2556 0018 CA24     		movs	r4, #202
 2557 001a 5C62     		str	r4, [r3, #36]
 2558 001c 0368     		ldr	r3, [r0]
 2559 001e 5324     		movs	r4, #83
 2560 0020 5C62     		str	r4, [r3, #36]
1681:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1682:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear flags before config */
1683:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint32_t)~RTC_CR_COSEL;
 2561              		.loc 1 1683 0 discriminator 2
 2562 0022 0468     		ldr	r4, [r0]
 2563 0024 A368     		ldr	r3, [r4, #8]
 2564 0026 23F40023 		bic	r3, r3, #524288
 2565 002a A360     		str	r3, [r4, #8]
1684:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1685:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the RTC_CR register */
1686:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint32_t)CalibOutput;
 2566              		.loc 1 1686 0 discriminator 2
ARM GAS  /tmp/ccIpiKb7.s 			page 77


 2567 002c 0468     		ldr	r4, [r0]
 2568 002e A368     		ldr	r3, [r4, #8]
 2569 0030 1943     		orrs	r1, r1, r3
 2570              	.LVL215:
 2571 0032 A160     		str	r1, [r4, #8]
1687:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1688:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_CALIBRATION_OUTPUT_ENABLE(hrtc);
 2572              		.loc 1 1688 0 discriminator 2
 2573 0034 0168     		ldr	r1, [r0]
 2574 0036 8B68     		ldr	r3, [r1, #8]
 2575 0038 43F40003 		orr	r3, r3, #8388608
 2576 003c 8B60     		str	r3, [r1, #8]
1689:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1690:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1691:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2577              		.loc 1 1691 0 discriminator 2
 2578 003e 0368     		ldr	r3, [r0]
 2579 0040 FF21     		movs	r1, #255
 2580 0042 5962     		str	r1, [r3, #36]
1692:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1693:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1694:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2581              		.loc 1 1694 0 discriminator 2
 2582 0044 80F82120 		strb	r2, [r0, #33]
1695:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1696:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
1697:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2583              		.loc 1 1697 0 discriminator 2
 2584 0048 0023     		movs	r3, #0
 2585 004a 80F82030 		strb	r3, [r0, #32]
1698:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1699:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 2586              		.loc 1 1699 0 discriminator 2
 2587 004e 1846     		mov	r0, r3
 2588              	.LVL216:
1700:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2589              		.loc 1 1700 0 discriminator 2
 2590 0050 5DF8044B 		ldr	r4, [sp], #4
 2591              	.LCFI30:
 2592              		.cfi_restore 4
 2593              		.cfi_def_cfa_offset 0
 2594 0054 7047     		bx	lr
 2595              	.LVL217:
 2596              	.L215:
1675:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2597              		.loc 1 1675 0
 2598 0056 0220     		movs	r0, #2
 2599              	.LVL218:
 2600 0058 7047     		bx	lr
 2601              		.cfi_endproc
 2602              	.LFE170:
 2604              		.section	.text.HAL_RTCEx_DeactivateCalibrationOutPut,"ax",%progbits
 2605              		.align	1
 2606              		.global	HAL_RTCEx_DeactivateCalibrationOutPut
 2607              		.syntax unified
 2608              		.thumb
 2609              		.thumb_func
ARM GAS  /tmp/ccIpiKb7.s 			page 78


 2610              		.fpu fpv5-d16
 2612              	HAL_RTCEx_DeactivateCalibrationOutPut:
 2613              	.LFB171:
1701:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1702:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1703:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1704:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1705:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1706:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1707:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateCalibrationOutPut(RTC_HandleTypeDef* hrtc)
1708:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2614              		.loc 1 1708 0
 2615              		.cfi_startproc
 2616              		@ args = 0, pretend = 0, frame = 0
 2617              		@ frame_needed = 0, uses_anonymous_args = 0
 2618              		@ link register save eliminated.
 2619              	.LVL219:
1709:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
1710:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2620              		.loc 1 1710 0
 2621 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2622 0004 012B     		cmp	r3, #1
 2623 0006 1AD0     		beq	.L222
 2624              		.loc 1 1710 0 is_stmt 0 discriminator 2
 2625 0008 0122     		movs	r2, #1
 2626 000a 80F82020 		strb	r2, [r0, #32]
1711:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1712:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2627              		.loc 1 1712 0 is_stmt 1 discriminator 2
 2628 000e 0223     		movs	r3, #2
 2629 0010 80F82130 		strb	r3, [r0, #33]
1713:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1714:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1715:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2630              		.loc 1 1715 0 discriminator 2
 2631 0014 0368     		ldr	r3, [r0]
 2632 0016 CA21     		movs	r1, #202
 2633 0018 5962     		str	r1, [r3, #36]
 2634 001a 0368     		ldr	r3, [r0]
 2635 001c 5321     		movs	r1, #83
 2636 001e 5962     		str	r1, [r3, #36]
1716:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1717:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_CALIBRATION_OUTPUT_DISABLE(hrtc);
 2637              		.loc 1 1717 0 discriminator 2
 2638 0020 0168     		ldr	r1, [r0]
 2639 0022 8B68     		ldr	r3, [r1, #8]
 2640 0024 23F40003 		bic	r3, r3, #8388608
 2641 0028 8B60     		str	r3, [r1, #8]
1718:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1719:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1720:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2642              		.loc 1 1720 0 discriminator 2
 2643 002a 0368     		ldr	r3, [r0]
 2644 002c FF21     		movs	r1, #255
 2645 002e 5962     		str	r1, [r3, #36]
1721:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1722:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
ARM GAS  /tmp/ccIpiKb7.s 			page 79


1723:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2646              		.loc 1 1723 0 discriminator 2
 2647 0030 80F82120 		strb	r2, [r0, #33]
1724:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1725:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
1726:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2648              		.loc 1 1726 0 discriminator 2
 2649 0034 0023     		movs	r3, #0
 2650 0036 80F82030 		strb	r3, [r0, #32]
1727:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1728:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 2651              		.loc 1 1728 0 discriminator 2
 2652 003a 1846     		mov	r0, r3
 2653              	.LVL220:
 2654 003c 7047     		bx	lr
 2655              	.LVL221:
 2656              	.L222:
1710:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2657              		.loc 1 1710 0
 2658 003e 0220     		movs	r0, #2
 2659              	.LVL222:
1729:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2660              		.loc 1 1729 0
 2661 0040 7047     		bx	lr
 2662              		.cfi_endproc
 2663              	.LFE171:
 2665              		.section	.text.HAL_RTCEx_SetRefClock,"ax",%progbits
 2666              		.align	1
 2667              		.global	HAL_RTCEx_SetRefClock
 2668              		.syntax unified
 2669              		.thumb
 2670              		.thumb_func
 2671              		.fpu fpv5-d16
 2673              	HAL_RTCEx_SetRefClock:
 2674              	.LFB172:
1730:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1731:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1732:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Enable the RTC reference clock detection.
1733:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1734:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1735:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1736:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetRefClock(RTC_HandleTypeDef* hrtc)
1737:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2675              		.loc 1 1737 0
 2676              		.cfi_startproc
 2677              		@ args = 0, pretend = 0, frame = 0
 2678              		@ frame_needed = 0, uses_anonymous_args = 0
 2679              	.LVL223:
1738:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
1739:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2680              		.loc 1 1739 0
 2681 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2682 0004 012B     		cmp	r3, #1
 2683 0006 02D1     		bne	.L231
 2684 0008 0223     		movs	r3, #2
1740:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1741:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
ARM GAS  /tmp/ccIpiKb7.s 			page 80


1742:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1743:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1744:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1745:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1746:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Set Initialization mode */
1747:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
1748:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1749:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Enable the write protection for RTC registers */
1750:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1751:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1752:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Set RTC state*/
1753:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
1754:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1755:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Process Unlocked */
1756:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_UNLOCK(hrtc);
1757:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1758:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     return HAL_ERROR;
1759:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1760:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
1761:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1762:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_CLOCKREF_DETECTION_ENABLE(hrtc);
1763:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1764:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Exit Initialization mode */
1765:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT;
1766:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1767:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1768:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1769:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1770:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1771:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    /* Change RTC state */
1772:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
1773:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1774:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
1775:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
1776:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1777:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
1778:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2685              		.loc 1 1778 0
 2686 000a 1846     		mov	r0, r3
 2687              	.LVL224:
 2688 000c 7047     		bx	lr
 2689              	.LVL225:
 2690              	.L231:
1737:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 2691              		.loc 1 1737 0 discriminator 2
 2692 000e 10B5     		push	{r4, lr}
 2693              	.LCFI31:
 2694              		.cfi_def_cfa_offset 8
 2695              		.cfi_offset 4, -8
 2696              		.cfi_offset 14, -4
 2697 0010 0446     		mov	r4, r0
1739:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2698              		.loc 1 1739 0 discriminator 2
 2699 0012 0123     		movs	r3, #1
 2700 0014 80F82030 		strb	r3, [r0, #32]
1741:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2701              		.loc 1 1741 0 discriminator 2
ARM GAS  /tmp/ccIpiKb7.s 			page 81


 2702 0018 0223     		movs	r3, #2
 2703 001a 80F82130 		strb	r3, [r0, #33]
1744:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2704              		.loc 1 1744 0 discriminator 2
 2705 001e 0368     		ldr	r3, [r0]
 2706 0020 CA22     		movs	r2, #202
 2707 0022 5A62     		str	r2, [r3, #36]
 2708 0024 0368     		ldr	r3, [r0]
 2709 0026 5322     		movs	r2, #83
 2710 0028 5A62     		str	r2, [r3, #36]
1747:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 2711              		.loc 1 1747 0 discriminator 2
 2712 002a FFF7FEFF 		bl	RTC_EnterInitMode
 2713              	.LVL226:
 2714 002e 0346     		mov	r3, r0
 2715 0030 A0B9     		cbnz	r0, .L232
1762:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2716              		.loc 1 1762 0
 2717 0032 2168     		ldr	r1, [r4]
 2718 0034 8A68     		ldr	r2, [r1, #8]
 2719 0036 42F01002 		orr	r2, r2, #16
 2720 003a 8A60     		str	r2, [r1, #8]
1765:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 2721              		.loc 1 1765 0
 2722 003c 2168     		ldr	r1, [r4]
 2723 003e CA68     		ldr	r2, [r1, #12]
 2724 0040 22F08002 		bic	r2, r2, #128
 2725 0044 CA60     		str	r2, [r1, #12]
1769:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2726              		.loc 1 1769 0
 2727 0046 2268     		ldr	r2, [r4]
 2728 0048 FF21     		movs	r1, #255
 2729 004a 5162     		str	r1, [r2, #36]
1772:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2730              		.loc 1 1772 0
 2731 004c 0122     		movs	r2, #1
 2732 004e 84F82120 		strb	r2, [r4, #33]
1775:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2733              		.loc 1 1775 0
 2734 0052 0022     		movs	r2, #0
 2735 0054 84F82020 		strb	r2, [r4, #32]
 2736              	.L224:
 2737              		.loc 1 1778 0
 2738 0058 1846     		mov	r0, r3
 2739 005a 10BD     		pop	{r4, pc}
 2740              	.LVL227:
 2741              	.L232:
1750:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2742              		.loc 1 1750 0
 2743 005c 2368     		ldr	r3, [r4]
 2744 005e FF22     		movs	r2, #255
 2745 0060 5A62     		str	r2, [r3, #36]
1753:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2746              		.loc 1 1753 0
 2747 0062 0423     		movs	r3, #4
 2748 0064 84F82130 		strb	r3, [r4, #33]
1756:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccIpiKb7.s 			page 82


 2749              		.loc 1 1756 0
 2750 0068 0023     		movs	r3, #0
 2751 006a 84F82030 		strb	r3, [r4, #32]
1758:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 2752              		.loc 1 1758 0
 2753 006e 0123     		movs	r3, #1
 2754 0070 F2E7     		b	.L224
 2755              		.cfi_endproc
 2756              	.LFE172:
 2758              		.section	.text.HAL_RTCEx_DeactivateRefClock,"ax",%progbits
 2759              		.align	1
 2760              		.global	HAL_RTCEx_DeactivateRefClock
 2761              		.syntax unified
 2762              		.thumb
 2763              		.thumb_func
 2764              		.fpu fpv5-d16
 2766              	HAL_RTCEx_DeactivateRefClock:
 2767              	.LFB173:
1779:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1780:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1781:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Disable the RTC reference clock detection.
1782:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1783:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1784:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1785:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateRefClock(RTC_HandleTypeDef* hrtc)
1786:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2768              		.loc 1 1786 0
 2769              		.cfi_startproc
 2770              		@ args = 0, pretend = 0, frame = 0
 2771              		@ frame_needed = 0, uses_anonymous_args = 0
 2772              	.LVL228:
1787:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
1788:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2773              		.loc 1 1788 0
 2774 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2775 0004 012B     		cmp	r3, #1
 2776 0006 02D1     		bne	.L241
 2777 0008 0223     		movs	r3, #2
1789:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1790:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1791:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1792:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1793:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1794:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1795:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Set Initialization mode */
1796:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
1797:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1798:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Enable the write protection for RTC registers */
1799:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1800:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1801:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Set RTC state*/
1802:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
1803:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1804:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Process Unlocked */
1805:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_UNLOCK(hrtc);
1806:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1807:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     return HAL_ERROR;
ARM GAS  /tmp/ccIpiKb7.s 			page 83


1808:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1809:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
1810:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1811:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_CLOCKREF_DETECTION_DISABLE(hrtc);
1812:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1813:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Exit Initialization mode */
1814:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT;
1815:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1816:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1817:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1818:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1819:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1820:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1821:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
1822:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1823:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
1824:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
1825:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1826:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
1827:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2778              		.loc 1 1827 0
 2779 000a 1846     		mov	r0, r3
 2780              	.LVL229:
 2781 000c 7047     		bx	lr
 2782              	.LVL230:
 2783              	.L241:
1786:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 2784              		.loc 1 1786 0 discriminator 2
 2785 000e 10B5     		push	{r4, lr}
 2786              	.LCFI32:
 2787              		.cfi_def_cfa_offset 8
 2788              		.cfi_offset 4, -8
 2789              		.cfi_offset 14, -4
 2790 0010 0446     		mov	r4, r0
1788:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2791              		.loc 1 1788 0 discriminator 2
 2792 0012 0123     		movs	r3, #1
 2793 0014 80F82030 		strb	r3, [r0, #32]
1790:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2794              		.loc 1 1790 0 discriminator 2
 2795 0018 0223     		movs	r3, #2
 2796 001a 80F82130 		strb	r3, [r0, #33]
1793:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2797              		.loc 1 1793 0 discriminator 2
 2798 001e 0368     		ldr	r3, [r0]
 2799 0020 CA22     		movs	r2, #202
 2800 0022 5A62     		str	r2, [r3, #36]
 2801 0024 0368     		ldr	r3, [r0]
 2802 0026 5322     		movs	r2, #83
 2803 0028 5A62     		str	r2, [r3, #36]
1796:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 2804              		.loc 1 1796 0 discriminator 2
 2805 002a FFF7FEFF 		bl	RTC_EnterInitMode
 2806              	.LVL231:
 2807 002e 0346     		mov	r3, r0
 2808 0030 A0B9     		cbnz	r0, .L242
1811:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccIpiKb7.s 			page 84


 2809              		.loc 1 1811 0
 2810 0032 2168     		ldr	r1, [r4]
 2811 0034 8A68     		ldr	r2, [r1, #8]
 2812 0036 22F01002 		bic	r2, r2, #16
 2813 003a 8A60     		str	r2, [r1, #8]
1814:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 2814              		.loc 1 1814 0
 2815 003c 2168     		ldr	r1, [r4]
 2816 003e CA68     		ldr	r2, [r1, #12]
 2817 0040 22F08002 		bic	r2, r2, #128
 2818 0044 CA60     		str	r2, [r1, #12]
1818:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2819              		.loc 1 1818 0
 2820 0046 2268     		ldr	r2, [r4]
 2821 0048 FF21     		movs	r1, #255
 2822 004a 5162     		str	r1, [r2, #36]
1821:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2823              		.loc 1 1821 0
 2824 004c 0122     		movs	r2, #1
 2825 004e 84F82120 		strb	r2, [r4, #33]
1824:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2826              		.loc 1 1824 0
 2827 0052 0022     		movs	r2, #0
 2828 0054 84F82020 		strb	r2, [r4, #32]
 2829              	.L234:
 2830              		.loc 1 1827 0
 2831 0058 1846     		mov	r0, r3
 2832 005a 10BD     		pop	{r4, pc}
 2833              	.LVL232:
 2834              	.L242:
1799:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2835              		.loc 1 1799 0
 2836 005c 2368     		ldr	r3, [r4]
 2837 005e FF22     		movs	r2, #255
 2838 0060 5A62     		str	r2, [r3, #36]
1802:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2839              		.loc 1 1802 0
 2840 0062 0423     		movs	r3, #4
 2841 0064 84F82130 		strb	r3, [r4, #33]
1805:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2842              		.loc 1 1805 0
 2843 0068 0023     		movs	r3, #0
 2844 006a 84F82030 		strb	r3, [r4, #32]
1807:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 2845              		.loc 1 1807 0
 2846 006e 0123     		movs	r3, #1
 2847 0070 F2E7     		b	.L234
 2848              		.cfi_endproc
 2849              	.LFE173:
 2851              		.section	.text.HAL_RTCEx_EnableBypassShadow,"ax",%progbits
 2852              		.align	1
 2853              		.global	HAL_RTCEx_EnableBypassShadow
 2854              		.syntax unified
 2855              		.thumb
 2856              		.thumb_func
 2857              		.fpu fpv5-d16
 2859              	HAL_RTCEx_EnableBypassShadow:
ARM GAS  /tmp/ccIpiKb7.s 			page 85


 2860              	.LFB174:
1828:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1829:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1830:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Enable the Bypass Shadow feature.
1831:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1832:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   When the Bypass Shadow is enabled the calendar value are taken
1833:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         directly from the Calendar counter.
1834:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1835:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1836:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_EnableBypassShadow(RTC_HandleTypeDef* hrtc)
1837:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2861              		.loc 1 1837 0
 2862              		.cfi_startproc
 2863              		@ args = 0, pretend = 0, frame = 0
 2864              		@ frame_needed = 0, uses_anonymous_args = 0
 2865              		@ link register save eliminated.
 2866              	.LVL233:
1838:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
1839:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2867              		.loc 1 1839 0
 2868 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2869 0004 012B     		cmp	r3, #1
 2870 0006 1AD0     		beq	.L245
 2871              		.loc 1 1839 0 is_stmt 0 discriminator 2
 2872 0008 0122     		movs	r2, #1
 2873 000a 80F82020 		strb	r2, [r0, #32]
1840:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1841:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2874              		.loc 1 1841 0 is_stmt 1 discriminator 2
 2875 000e 0223     		movs	r3, #2
 2876 0010 80F82130 		strb	r3, [r0, #33]
1842:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1843:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1844:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2877              		.loc 1 1844 0 discriminator 2
 2878 0014 0368     		ldr	r3, [r0]
 2879 0016 CA21     		movs	r1, #202
 2880 0018 5962     		str	r1, [r3, #36]
 2881 001a 0368     		ldr	r3, [r0]
 2882 001c 5321     		movs	r1, #83
 2883 001e 5962     		str	r1, [r3, #36]
1845:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1846:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Set the BYPSHAD bit */
1847:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint8_t)RTC_CR_BYPSHAD;
 2884              		.loc 1 1847 0 discriminator 2
 2885 0020 0168     		ldr	r1, [r0]
 2886 0022 8B68     		ldr	r3, [r1, #8]
 2887 0024 43F02003 		orr	r3, r3, #32
 2888 0028 8B60     		str	r3, [r1, #8]
1848:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1849:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1850:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2889              		.loc 1 1850 0 discriminator 2
 2890 002a 0368     		ldr	r3, [r0]
 2891 002c FF21     		movs	r1, #255
 2892 002e 5962     		str	r1, [r3, #36]
1851:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccIpiKb7.s 			page 86


1852:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1853:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2893              		.loc 1 1853 0 discriminator 2
 2894 0030 80F82120 		strb	r2, [r0, #33]
1854:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1855:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
1856:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2895              		.loc 1 1856 0 discriminator 2
 2896 0034 0023     		movs	r3, #0
 2897 0036 80F82030 		strb	r3, [r0, #32]
1857:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1858:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 2898              		.loc 1 1858 0 discriminator 2
 2899 003a 1846     		mov	r0, r3
 2900              	.LVL234:
 2901 003c 7047     		bx	lr
 2902              	.LVL235:
 2903              	.L245:
1839:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2904              		.loc 1 1839 0
 2905 003e 0220     		movs	r0, #2
 2906              	.LVL236:
1859:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2907              		.loc 1 1859 0
 2908 0040 7047     		bx	lr
 2909              		.cfi_endproc
 2910              	.LFE174:
 2912              		.section	.text.HAL_RTCEx_DisableBypassShadow,"ax",%progbits
 2913              		.align	1
 2914              		.global	HAL_RTCEx_DisableBypassShadow
 2915              		.syntax unified
 2916              		.thumb
 2917              		.thumb_func
 2918              		.fpu fpv5-d16
 2920              	HAL_RTCEx_DisableBypassShadow:
 2921              	.LFB175:
1860:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1861:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1862:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Disable the Bypass Shadow feature.
1863:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1864:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   When the Bypass Shadow is enabled the calendar value are taken
1865:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         directly from the Calendar counter.
1866:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1867:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1868:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DisableBypassShadow(RTC_HandleTypeDef* hrtc)
1869:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2922              		.loc 1 1869 0
 2923              		.cfi_startproc
 2924              		@ args = 0, pretend = 0, frame = 0
 2925              		@ frame_needed = 0, uses_anonymous_args = 0
 2926              		@ link register save eliminated.
 2927              	.LVL237:
1870:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
1871:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2928              		.loc 1 1871 0
 2929 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2930 0004 012B     		cmp	r3, #1
ARM GAS  /tmp/ccIpiKb7.s 			page 87


 2931 0006 1AD0     		beq	.L248
 2932              		.loc 1 1871 0 is_stmt 0 discriminator 2
 2933 0008 0122     		movs	r2, #1
 2934 000a 80F82020 		strb	r2, [r0, #32]
1872:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1873:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2935              		.loc 1 1873 0 is_stmt 1 discriminator 2
 2936 000e 0223     		movs	r3, #2
 2937 0010 80F82130 		strb	r3, [r0, #33]
1874:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1875:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1876:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2938              		.loc 1 1876 0 discriminator 2
 2939 0014 0368     		ldr	r3, [r0]
 2940 0016 CA21     		movs	r1, #202
 2941 0018 5962     		str	r1, [r3, #36]
 2942 001a 0368     		ldr	r3, [r0]
 2943 001c 5321     		movs	r1, #83
 2944 001e 5962     		str	r1, [r3, #36]
1877:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1878:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Reset the BYPSHAD bit */
1879:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= ((uint8_t)~RTC_CR_BYPSHAD);
 2945              		.loc 1 1879 0 discriminator 2
 2946 0020 0168     		ldr	r1, [r0]
 2947 0022 8B68     		ldr	r3, [r1, #8]
 2948 0024 03F0DF03 		and	r3, r3, #223
 2949 0028 8B60     		str	r3, [r1, #8]
1880:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1881:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1882:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2950              		.loc 1 1882 0 discriminator 2
 2951 002a 0368     		ldr	r3, [r0]
 2952 002c FF21     		movs	r1, #255
 2953 002e 5962     		str	r1, [r3, #36]
1883:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1884:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1885:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2954              		.loc 1 1885 0 discriminator 2
 2955 0030 80F82120 		strb	r2, [r0, #33]
1886:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1887:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
1888:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2956              		.loc 1 1888 0 discriminator 2
 2957 0034 0023     		movs	r3, #0
 2958 0036 80F82030 		strb	r3, [r0, #32]
1889:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1890:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 2959              		.loc 1 1890 0 discriminator 2
 2960 003a 1846     		mov	r0, r3
 2961              	.LVL238:
 2962 003c 7047     		bx	lr
 2963              	.LVL239:
 2964              	.L248:
1871:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2965              		.loc 1 1871 0
 2966 003e 0220     		movs	r0, #2
 2967              	.LVL240:
ARM GAS  /tmp/ccIpiKb7.s 			page 88


1891:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2968              		.loc 1 1891 0
 2969 0040 7047     		bx	lr
 2970              		.cfi_endproc
 2971              	.LFE175:
 2973              		.section	.text.HAL_RTCEx_AlarmBEventCallback,"ax",%progbits
 2974              		.align	1
 2975              		.weak	HAL_RTCEx_AlarmBEventCallback
 2976              		.syntax unified
 2977              		.thumb
 2978              		.thumb_func
 2979              		.fpu fpv5-d16
 2981              	HAL_RTCEx_AlarmBEventCallback:
 2982              	.LFB176:
1892:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1893:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1894:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
1895:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1896:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1897:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @defgroup RTCEx_Exported_Functions_Group4 Extended features functions
1898:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief    Extended features functions
1899:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
1900:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @verbatim
1901:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
1902:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****                  ##### Extended features functions #####
1903:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
1904:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     [..]  This section provides functions allowing to:
1905:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) RTC Alarm B callback
1906:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) RTC Poll for Alarm B request
1907:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1908:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @endverbatim
1909:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
1910:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1911:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1912:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1913:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Alarm B callback.
1914:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1915:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1916:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1917:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_AlarmBEventCallback(RTC_HandleTypeDef *hrtc)
1918:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2983              		.loc 1 1918 0
 2984              		.cfi_startproc
 2985              		@ args = 0, pretend = 0, frame = 0
 2986              		@ frame_needed = 0, uses_anonymous_args = 0
 2987              		@ link register save eliminated.
 2988              	.LVL241:
 2989 0000 7047     		bx	lr
 2990              		.cfi_endproc
 2991              	.LFE176:
 2993              		.section	.text.HAL_RTCEx_PollForAlarmBEvent,"ax",%progbits
 2994              		.align	1
 2995              		.global	HAL_RTCEx_PollForAlarmBEvent
 2996              		.syntax unified
 2997              		.thumb
 2998              		.thumb_func
 2999              		.fpu fpv5-d16
ARM GAS  /tmp/ccIpiKb7.s 			page 89


 3001              	HAL_RTCEx_PollForAlarmBEvent:
 3002              	.LFB177:
1919:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1920:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1921:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1922:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1923:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_AlarmBEventCallback could be implemented in the user file
1924:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1925:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1926:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1927:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1928:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle Alarm B Polling request.
1929:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1930:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1931:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1932:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1933:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForAlarmBEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1934:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 3003              		.loc 1 1934 0
 3004              		.cfi_startproc
 3005              		@ args = 0, pretend = 0, frame = 0
 3006              		@ frame_needed = 0, uses_anonymous_args = 0
 3007              	.LVL242:
 3008              		.loc 1 1934 0
 3009 0000 70B5     		push	{r4, r5, r6, lr}
 3010              	.LCFI33:
 3011              		.cfi_def_cfa_offset 16
 3012              		.cfi_offset 4, -16
 3013              		.cfi_offset 5, -12
 3014              		.cfi_offset 6, -8
 3015              		.cfi_offset 14, -4
 3016 0002 0446     		mov	r4, r0
 3017 0004 0D46     		mov	r5, r1
1935:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 3018              		.loc 1 1935 0
 3019 0006 FFF7FEFF 		bl	HAL_GetTick
 3020              	.LVL243:
 3021 000a 0646     		mov	r6, r0
 3022              	.LVL244:
 3023              	.L252:
1936:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1937:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBF) == 0u)
 3024              		.loc 1 1937 0
 3025 000c 2368     		ldr	r3, [r4]
 3026 000e DA68     		ldr	r2, [r3, #12]
 3027 0010 12F4007F 		tst	r2, #512
 3028 0014 0DD1     		bne	.L257
1938:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1939:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 3029              		.loc 1 1939 0
 3030 0016 B5F1FF3F 		cmp	r5, #-1
 3031 001a F7D0     		beq	.L252
1940:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1941:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if(((HAL_GetTick() - tickstart ) > Timeout) || (Timeout == 0u))
 3032              		.loc 1 1941 0
 3033 001c FFF7FEFF 		bl	HAL_GetTick
 3034              	.LVL245:
ARM GAS  /tmp/ccIpiKb7.s 			page 90


 3035 0020 801B     		subs	r0, r0, r6
 3036 0022 8542     		cmp	r5, r0
 3037 0024 01D3     		bcc	.L253
 3038              		.loc 1 1941 0 is_stmt 0 discriminator 1
 3039 0026 002D     		cmp	r5, #0
 3040 0028 F0D1     		bne	.L252
 3041              	.L253:
1942:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1943:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 3042              		.loc 1 1943 0 is_stmt 1
 3043 002a 0320     		movs	r0, #3
 3044 002c 84F82100 		strb	r0, [r4, #33]
1944:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 3045              		.loc 1 1944 0
 3046 0030 70BD     		pop	{r4, r5, r6, pc}
 3047              	.LVL246:
 3048              	.L257:
1945:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1946:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1947:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1948:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1949:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the Alarm Flag */
1950:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
 3049              		.loc 1 1950 0
 3050 0032 DA68     		ldr	r2, [r3, #12]
 3051 0034 D2B2     		uxtb	r2, r2
 3052 0036 62F42072 		orn	r2, r2, #640
 3053 003a DA60     		str	r2, [r3, #12]
1951:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1952:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1953:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 3054              		.loc 1 1953 0
 3055 003c 0123     		movs	r3, #1
 3056 003e 84F82130 		strb	r3, [r4, #33]
1954:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1955:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 3057              		.loc 1 1955 0
 3058 0042 0020     		movs	r0, #0
1956:Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 3059              		.loc 1 1956 0
 3060 0044 70BD     		pop	{r4, r5, r6, pc}
 3061              		.cfi_endproc
 3062              	.LFE177:
 3064              		.text
 3065              	.Letext0:
 3066              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 3067              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 3068              		.file 4 "Libraries/CMSIS/Include/core_cm7.h"
 3069              		.file 5 "Libraries/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 3070              		.file 6 "Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 3071              		.file 7 "/usr/include/newlib/sys/lock.h"
 3072              		.file 8 "/usr/include/newlib/sys/_types.h"
 3073              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 3074              		.file 10 "/usr/include/newlib/sys/reent.h"
 3075              		.file 11 "/usr/include/newlib/math.h"
 3076              		.file 12 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 3077              		.file 13 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
ARM GAS  /tmp/ccIpiKb7.s 			page 91


 3078              		.file 14 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rtc.h"
 3079              		.file 15 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rtc_ex.h"
 3080              		.file 16 "Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccIpiKb7.s 			page 92


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_rtc_ex.c
     /tmp/ccIpiKb7.s:17     .text.HAL_RTCEx_SetTimeStamp:0000000000000000 $t
     /tmp/ccIpiKb7.s:24     .text.HAL_RTCEx_SetTimeStamp:0000000000000000 HAL_RTCEx_SetTimeStamp
     /tmp/ccIpiKb7.s:105    .text.HAL_RTCEx_SetTimeStamp_IT:0000000000000000 $t
     /tmp/ccIpiKb7.s:112    .text.HAL_RTCEx_SetTimeStamp_IT:0000000000000000 HAL_RTCEx_SetTimeStamp_IT
     /tmp/ccIpiKb7.s:206    .text.HAL_RTCEx_SetTimeStamp_IT:0000000000000074 $d
     /tmp/ccIpiKb7.s:211    .text.HAL_RTCEx_DeactivateTimeStamp:0000000000000000 $t
     /tmp/ccIpiKb7.s:218    .text.HAL_RTCEx_DeactivateTimeStamp:0000000000000000 HAL_RTCEx_DeactivateTimeStamp
     /tmp/ccIpiKb7.s:291    .text.HAL_RTCEx_DeactivateTimeStamp:0000000000000054 $d
     /tmp/ccIpiKb7.s:296    .text.HAL_RTCEx_SetInternalTimeStamp:0000000000000000 $t
     /tmp/ccIpiKb7.s:303    .text.HAL_RTCEx_SetInternalTimeStamp:0000000000000000 HAL_RTCEx_SetInternalTimeStamp
     /tmp/ccIpiKb7.s:357    .text.HAL_RTCEx_DeactivateInternalTimeStamp:0000000000000000 $t
     /tmp/ccIpiKb7.s:364    .text.HAL_RTCEx_DeactivateInternalTimeStamp:0000000000000000 HAL_RTCEx_DeactivateInternalTimeStamp
     /tmp/ccIpiKb7.s:418    .text.HAL_RTCEx_GetTimeStamp:0000000000000000 $t
     /tmp/ccIpiKb7.s:425    .text.HAL_RTCEx_GetTimeStamp:0000000000000000 HAL_RTCEx_GetTimeStamp
     /tmp/ccIpiKb7.s:540    .text.HAL_RTCEx_GetTimeStamp:0000000000000090 $d
     /tmp/ccIpiKb7.s:547    .text.HAL_RTCEx_SetTamper:0000000000000000 $t
     /tmp/ccIpiKb7.s:554    .text.HAL_RTCEx_SetTamper:0000000000000000 HAL_RTCEx_SetTamper
     /tmp/ccIpiKb7.s:758    .text.HAL_RTCEx_SetTamper:00000000000000ec $d
     /tmp/ccIpiKb7.s:763    .text.HAL_RTCEx_SetTamper_IT:0000000000000000 $t
     /tmp/ccIpiKb7.s:770    .text.HAL_RTCEx_SetTamper_IT:0000000000000000 HAL_RTCEx_SetTamper_IT
     /tmp/ccIpiKb7.s:987    .text.HAL_RTCEx_SetTamper_IT:0000000000000104 $d
     /tmp/ccIpiKb7.s:993    .text.HAL_RTCEx_DeactivateTamper:0000000000000000 $t
     /tmp/ccIpiKb7.s:1000   .text.HAL_RTCEx_DeactivateTamper:0000000000000000 HAL_RTCEx_DeactivateTamper
     /tmp/ccIpiKb7.s:1083   .text.HAL_RTCEx_DeactivateTamper:0000000000000068 $d
     /tmp/ccIpiKb7.s:1090   .text.HAL_RTCEx_TimeStampEventCallback:0000000000000000 $t
     /tmp/ccIpiKb7.s:1097   .text.HAL_RTCEx_TimeStampEventCallback:0000000000000000 HAL_RTCEx_TimeStampEventCallback
     /tmp/ccIpiKb7.s:1110   .text.HAL_RTCEx_Tamper1EventCallback:0000000000000000 $t
     /tmp/ccIpiKb7.s:1117   .text.HAL_RTCEx_Tamper1EventCallback:0000000000000000 HAL_RTCEx_Tamper1EventCallback
     /tmp/ccIpiKb7.s:1130   .text.HAL_RTCEx_Tamper2EventCallback:0000000000000000 $t
     /tmp/ccIpiKb7.s:1137   .text.HAL_RTCEx_Tamper2EventCallback:0000000000000000 HAL_RTCEx_Tamper2EventCallback
     /tmp/ccIpiKb7.s:1150   .text.HAL_RTCEx_Tamper3EventCallback:0000000000000000 $t
     /tmp/ccIpiKb7.s:1157   .text.HAL_RTCEx_Tamper3EventCallback:0000000000000000 HAL_RTCEx_Tamper3EventCallback
     /tmp/ccIpiKb7.s:1170   .text.HAL_RTCEx_TamperTimeStampIRQHandler:0000000000000000 $t
     /tmp/ccIpiKb7.s:1177   .text.HAL_RTCEx_TamperTimeStampIRQHandler:0000000000000000 HAL_RTCEx_TamperTimeStampIRQHandler
     /tmp/ccIpiKb7.s:1297   .text.HAL_RTCEx_TamperTimeStampIRQHandler:00000000000000b8 $d
     /tmp/ccIpiKb7.s:1305   .text.HAL_RTCEx_PollForTimeStampEvent:0000000000000000 $t
     /tmp/ccIpiKb7.s:1312   .text.HAL_RTCEx_PollForTimeStampEvent:0000000000000000 HAL_RTCEx_PollForTimeStampEvent
     /tmp/ccIpiKb7.s:1387   .text.HAL_RTCEx_PollForTamper1Event:0000000000000000 $t
     /tmp/ccIpiKb7.s:1394   .text.HAL_RTCEx_PollForTamper1Event:0000000000000000 HAL_RTCEx_PollForTamper1Event
     /tmp/ccIpiKb7.s:1457   .text.HAL_RTCEx_PollForTamper2Event:0000000000000000 $t
     /tmp/ccIpiKb7.s:1464   .text.HAL_RTCEx_PollForTamper2Event:0000000000000000 HAL_RTCEx_PollForTamper2Event
     /tmp/ccIpiKb7.s:1527   .text.HAL_RTCEx_PollForTamper3Event:0000000000000000 $t
     /tmp/ccIpiKb7.s:1534   .text.HAL_RTCEx_PollForTamper3Event:0000000000000000 HAL_RTCEx_PollForTamper3Event
     /tmp/ccIpiKb7.s:1600   .text.HAL_RTCEx_SetWakeUpTimer:0000000000000000 $t
     /tmp/ccIpiKb7.s:1607   .text.HAL_RTCEx_SetWakeUpTimer:0000000000000000 HAL_RTCEx_SetWakeUpTimer
     /tmp/ccIpiKb7.s:1757   .text.HAL_RTCEx_SetWakeUpTimer_IT:0000000000000000 $t
     /tmp/ccIpiKb7.s:1764   .text.HAL_RTCEx_SetWakeUpTimer_IT:0000000000000000 HAL_RTCEx_SetWakeUpTimer_IT
     /tmp/ccIpiKb7.s:1934   .text.HAL_RTCEx_SetWakeUpTimer_IT:0000000000000100 $d
     /tmp/ccIpiKb7.s:1939   .text.HAL_RTCEx_DeactivateWakeUpTimer:0000000000000000 $t
     /tmp/ccIpiKb7.s:1946   .text.HAL_RTCEx_DeactivateWakeUpTimer:0000000000000000 HAL_RTCEx_DeactivateWakeUpTimer
     /tmp/ccIpiKb7.s:2040   .text.HAL_RTCEx_GetWakeUpTimer:0000000000000000 $t
     /tmp/ccIpiKb7.s:2047   .text.HAL_RTCEx_GetWakeUpTimer:0000000000000000 HAL_RTCEx_GetWakeUpTimer
     /tmp/ccIpiKb7.s:2066   .text.HAL_RTCEx_WakeUpTimerEventCallback:0000000000000000 $t
     /tmp/ccIpiKb7.s:2073   .text.HAL_RTCEx_WakeUpTimerEventCallback:0000000000000000 HAL_RTCEx_WakeUpTimerEventCallback
     /tmp/ccIpiKb7.s:2086   .text.HAL_RTCEx_WakeUpTimerIRQHandler:0000000000000000 $t
ARM GAS  /tmp/ccIpiKb7.s 			page 93


     /tmp/ccIpiKb7.s:2093   .text.HAL_RTCEx_WakeUpTimerIRQHandler:0000000000000000 HAL_RTCEx_WakeUpTimerIRQHandler
     /tmp/ccIpiKb7.s:2136   .text.HAL_RTCEx_WakeUpTimerIRQHandler:0000000000000030 $d
     /tmp/ccIpiKb7.s:2141   .text.HAL_RTCEx_PollForWakeUpTimerEvent:0000000000000000 $t
     /tmp/ccIpiKb7.s:2148   .text.HAL_RTCEx_PollForWakeUpTimerEvent:0000000000000000 HAL_RTCEx_PollForWakeUpTimerEvent
     /tmp/ccIpiKb7.s:2211   .text.HAL_RTCEx_BKUPWrite:0000000000000000 $t
     /tmp/ccIpiKb7.s:2218   .text.HAL_RTCEx_BKUPWrite:0000000000000000 HAL_RTCEx_BKUPWrite
     /tmp/ccIpiKb7.s:2237   .text.HAL_RTCEx_BKUPRead:0000000000000000 $t
     /tmp/ccIpiKb7.s:2244   .text.HAL_RTCEx_BKUPRead:0000000000000000 HAL_RTCEx_BKUPRead
     /tmp/ccIpiKb7.s:2265   .text.HAL_RTCEx_SetSmoothCalib:0000000000000000 $t
     /tmp/ccIpiKb7.s:2272   .text.HAL_RTCEx_SetSmoothCalib:0000000000000000 HAL_RTCEx_SetSmoothCalib
     /tmp/ccIpiKb7.s:2378   .text.HAL_RTCEx_SetSynchroShift:0000000000000000 $t
     /tmp/ccIpiKb7.s:2385   .text.HAL_RTCEx_SetSynchroShift:0000000000000000 HAL_RTCEx_SetSynchroShift
     /tmp/ccIpiKb7.s:2524   .text.HAL_RTCEx_SetCalibrationOutPut:0000000000000000 $t
     /tmp/ccIpiKb7.s:2531   .text.HAL_RTCEx_SetCalibrationOutPut:0000000000000000 HAL_RTCEx_SetCalibrationOutPut
     /tmp/ccIpiKb7.s:2605   .text.HAL_RTCEx_DeactivateCalibrationOutPut:0000000000000000 $t
     /tmp/ccIpiKb7.s:2612   .text.HAL_RTCEx_DeactivateCalibrationOutPut:0000000000000000 HAL_RTCEx_DeactivateCalibrationOutPut
     /tmp/ccIpiKb7.s:2666   .text.HAL_RTCEx_SetRefClock:0000000000000000 $t
     /tmp/ccIpiKb7.s:2673   .text.HAL_RTCEx_SetRefClock:0000000000000000 HAL_RTCEx_SetRefClock
     /tmp/ccIpiKb7.s:2759   .text.HAL_RTCEx_DeactivateRefClock:0000000000000000 $t
     /tmp/ccIpiKb7.s:2766   .text.HAL_RTCEx_DeactivateRefClock:0000000000000000 HAL_RTCEx_DeactivateRefClock
     /tmp/ccIpiKb7.s:2852   .text.HAL_RTCEx_EnableBypassShadow:0000000000000000 $t
     /tmp/ccIpiKb7.s:2859   .text.HAL_RTCEx_EnableBypassShadow:0000000000000000 HAL_RTCEx_EnableBypassShadow
     /tmp/ccIpiKb7.s:2913   .text.HAL_RTCEx_DisableBypassShadow:0000000000000000 $t
     /tmp/ccIpiKb7.s:2920   .text.HAL_RTCEx_DisableBypassShadow:0000000000000000 HAL_RTCEx_DisableBypassShadow
     /tmp/ccIpiKb7.s:2974   .text.HAL_RTCEx_AlarmBEventCallback:0000000000000000 $t
     /tmp/ccIpiKb7.s:2981   .text.HAL_RTCEx_AlarmBEventCallback:0000000000000000 HAL_RTCEx_AlarmBEventCallback
     /tmp/ccIpiKb7.s:2994   .text.HAL_RTCEx_PollForAlarmBEvent:0000000000000000 $t
     /tmp/ccIpiKb7.s:3001   .text.HAL_RTCEx_PollForAlarmBEvent:0000000000000000 HAL_RTCEx_PollForAlarmBEvent
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
RTC_Bcd2ToByte
HAL_GetTick
HAL_RTC_WaitForSynchro
RTC_EnterInitMode
