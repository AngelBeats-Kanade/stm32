ARM GAS  /tmp/cc7VkbOF.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	MX_GPIO_Init:
  23              	.LFB69:
  24              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****  ******************************************************************************
   4:Src/main.c    ****  * @file           : main.c
   5:Src/main.c    ****  * @brief          : Main program body
   6:Src/main.c    ****  ******************************************************************************
   7:Src/main.c    ****  * @attention
   8:Src/main.c    ****  *
   9:Src/main.c    ****  * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****  * All rights reserved.</center></h2>
  11:Src/main.c    ****  *
  12:Src/main.c    ****  * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****  * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****  * License. You may obtain a copy of the License at:
  15:Src/main.c    ****  *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****  *
  17:Src/main.c    ****  ******************************************************************************
  18:Src/main.c    ****  */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/cc7VkbOF.s 			page 2


  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** /* USER CODE END PD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PM */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* USER CODE END PM */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  44:Src/main.c    **** DAC_HandleTypeDef hdac;
  45:Src/main.c    **** 
  46:Src/main.c    **** TIM_HandleTypeDef htim6;
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE BEGIN PV */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END PV */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  53:Src/main.c    **** void SystemClock_Config(void);
  54:Src/main.c    **** static void MX_GPIO_Init(void);
  55:Src/main.c    **** static void MX_DAC_Init(void);
  56:Src/main.c    **** static void MX_TIM6_Init(void);
  57:Src/main.c    **** /* USER CODE BEGIN PFP */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE END PFP */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  62:Src/main.c    **** /* USER CODE BEGIN 0 */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE END 0 */
  65:Src/main.c    **** 
  66:Src/main.c    **** /**
  67:Src/main.c    ****  * @brief  The application entry point.
  68:Src/main.c    ****  * @retval int
  69:Src/main.c    ****  */
  70:Src/main.c    **** int main(void)
  71:Src/main.c    **** {
  72:Src/main.c    ****   /* USER CODE BEGIN 1 */
  73:Src/main.c    **** 
  74:Src/main.c    ****   /* USER CODE END 1 */
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  79:Src/main.c    ****   HAL_Init();
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* USER CODE BEGIN Init */
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* USER CODE END Init */
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* Configure the system clock */
  86:Src/main.c    ****   SystemClock_Config();
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  89:Src/main.c    **** 
  90:Src/main.c    ****   /* USER CODE END SysInit */
  91:Src/main.c    **** 
ARM GAS  /tmp/cc7VkbOF.s 			page 3


  92:Src/main.c    ****   /* Initialize all configured peripherals */
  93:Src/main.c    ****   MX_GPIO_Init();
  94:Src/main.c    ****   MX_DAC_Init();
  95:Src/main.c    ****   MX_TIM6_Init();
  96:Src/main.c    ****   /* USER CODE BEGIN 2 */
  97:Src/main.c    ****   HAL_TIM_Base_Start(&htim6);
  98:Src/main.c    ****   HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
  99:Src/main.c    ****   /* USER CODE END 2 */
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* Infinite loop */
 102:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 103:Src/main.c    ****   while (1)
 104:Src/main.c    ****   {
 105:Src/main.c    ****     /* USER CODE END WHILE */
 106:Src/main.c    **** 
 107:Src/main.c    ****     /* USER CODE BEGIN 3 */
 108:Src/main.c    ****   }
 109:Src/main.c    ****   /* USER CODE END 3 */
 110:Src/main.c    **** }
 111:Src/main.c    **** 
 112:Src/main.c    **** /**
 113:Src/main.c    ****  * @brief System Clock Configuration
 114:Src/main.c    ****  * @retval None
 115:Src/main.c    ****  */
 116:Src/main.c    **** void SystemClock_Config(void)
 117:Src/main.c    **** {
 118:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 119:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 120:Src/main.c    **** 
 121:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 122:Src/main.c    ****    */
 123:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 124:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 125:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 126:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 127:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 128:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 129:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 130:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 131:Src/main.c    ****   {
 132:Src/main.c    ****     Error_Handler();
 133:Src/main.c    ****   }
 134:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 135:Src/main.c    ****    */
 136:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 137:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 138:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 139:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 140:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 141:Src/main.c    **** 
 142:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 143:Src/main.c    ****   {
 144:Src/main.c    ****     Error_Handler();
 145:Src/main.c    ****   }
 146:Src/main.c    **** }
 147:Src/main.c    **** 
 148:Src/main.c    **** /**
ARM GAS  /tmp/cc7VkbOF.s 			page 4


 149:Src/main.c    ****  * @brief DAC Initialization Function
 150:Src/main.c    ****  * @param None
 151:Src/main.c    ****  * @retval None
 152:Src/main.c    ****  */
 153:Src/main.c    **** static void MX_DAC_Init(void)
 154:Src/main.c    **** {
 155:Src/main.c    **** 
 156:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 0 */
 157:Src/main.c    **** 
 158:Src/main.c    ****   /* USER CODE END DAC_Init 0 */
 159:Src/main.c    **** 
 160:Src/main.c    ****   DAC_ChannelConfTypeDef sConfig = {0};
 161:Src/main.c    **** 
 162:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 1 */
 163:Src/main.c    **** 
 164:Src/main.c    ****   /* USER CODE END DAC_Init 1 */
 165:Src/main.c    ****   /** DAC Initialization
 166:Src/main.c    ****    */
 167:Src/main.c    ****   hdac.Instance = DAC;
 168:Src/main.c    ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 169:Src/main.c    ****   {
 170:Src/main.c    ****     Error_Handler();
 171:Src/main.c    ****   }
 172:Src/main.c    ****   /** DAC channel OUT2 config
 173:Src/main.c    ****    */
 174:Src/main.c    ****   sConfig.DAC_Trigger = DAC_TRIGGER_T6_TRGO;
 175:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 176:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 177:Src/main.c    ****   {
 178:Src/main.c    ****     Error_Handler();
 179:Src/main.c    ****   }
 180:Src/main.c    ****   /** Configure Triangle wave generation on DAC OUT2
 181:Src/main.c    ****    */
 182:Src/main.c    ****   if (HAL_DACEx_TriangleWaveGenerate(&hdac, DAC_CHANNEL_2, DAC_TRIANGLEAMPLITUDE_4095) != HAL_OK)
 183:Src/main.c    ****   {
 184:Src/main.c    ****     Error_Handler();
 185:Src/main.c    ****   }
 186:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 2 */
 187:Src/main.c    **** 
 188:Src/main.c    ****   /* USER CODE END DAC_Init 2 */
 189:Src/main.c    **** }
 190:Src/main.c    **** 
 191:Src/main.c    **** /**
 192:Src/main.c    ****  * @brief TIM6 Initialization Function
 193:Src/main.c    ****  * @param None
 194:Src/main.c    ****  * @retval None
 195:Src/main.c    ****  */
 196:Src/main.c    **** static void MX_TIM6_Init(void)
 197:Src/main.c    **** {
 198:Src/main.c    **** 
 199:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 0 */
 200:Src/main.c    **** 
 201:Src/main.c    ****   /* USER CODE END TIM6_Init 0 */
 202:Src/main.c    **** 
 203:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 204:Src/main.c    **** 
 205:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 1 */
ARM GAS  /tmp/cc7VkbOF.s 			page 5


 206:Src/main.c    **** 
 207:Src/main.c    ****   /* USER CODE END TIM6_Init 1 */
 208:Src/main.c    ****   htim6.Instance = TIM6;
 209:Src/main.c    ****   htim6.Init.Prescaler = 0;
 210:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 211:Src/main.c    ****   htim6.Init.Period = 0;
 212:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 213:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 214:Src/main.c    ****   {
 215:Src/main.c    ****     Error_Handler();
 216:Src/main.c    ****   }
 217:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 218:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 219:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 220:Src/main.c    ****   {
 221:Src/main.c    ****     Error_Handler();
 222:Src/main.c    ****   }
 223:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 2 */
 224:Src/main.c    **** 
 225:Src/main.c    ****   /* USER CODE END TIM6_Init 2 */
 226:Src/main.c    **** }
 227:Src/main.c    **** 
 228:Src/main.c    **** /**
 229:Src/main.c    ****  * @brief GPIO Initialization Function
 230:Src/main.c    ****  * @param None
 231:Src/main.c    ****  * @retval None
 232:Src/main.c    ****  */
 233:Src/main.c    **** static void MX_GPIO_Init(void)
 234:Src/main.c    **** {
  25              		.loc 1 234 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 8
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30 0000 82B0     		sub	sp, sp, #8
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              	.LBB2:
 235:Src/main.c    **** 
 236:Src/main.c    ****   /* GPIO Ports Clock Enable */
 237:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  34              		.loc 1 237 0
  35 0002 0A4B     		ldr	r3, .L3
  36 0004 9A69     		ldr	r2, [r3, #24]
  37 0006 42F02002 		orr	r2, r2, #32
  38 000a 9A61     		str	r2, [r3, #24]
  39 000c 9A69     		ldr	r2, [r3, #24]
  40 000e 02F02002 		and	r2, r2, #32
  41 0012 0092     		str	r2, [sp]
  42 0014 009A     		ldr	r2, [sp]
  43              	.LBE2:
  44              	.LBB3:
 238:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  45              		.loc 1 238 0
  46 0016 9A69     		ldr	r2, [r3, #24]
  47 0018 42F00402 		orr	r2, r2, #4
  48 001c 9A61     		str	r2, [r3, #24]
ARM GAS  /tmp/cc7VkbOF.s 			page 6


  49 001e 9B69     		ldr	r3, [r3, #24]
  50 0020 03F00403 		and	r3, r3, #4
  51 0024 0193     		str	r3, [sp, #4]
  52 0026 019B     		ldr	r3, [sp, #4]
  53              	.LBE3:
 239:Src/main.c    **** }
  54              		.loc 1 239 0
  55 0028 02B0     		add	sp, sp, #8
  56              	.LCFI1:
  57              		.cfi_def_cfa_offset 0
  58              		@ sp needed
  59 002a 7047     		bx	lr
  60              	.L4:
  61              		.align	2
  62              	.L3:
  63 002c 00100240 		.word	1073876992
  64              		.cfi_endproc
  65              	.LFE69:
  67              		.section	.text.MX_DAC_Init,"ax",%progbits
  68              		.align	1
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  72              		.fpu softvfp
  74              	MX_DAC_Init:
  75              	.LFB67:
 154:Src/main.c    **** 
  76              		.loc 1 154 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 8
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80 0000 30B5     		push	{r4, r5, lr}
  81              	.LCFI2:
  82              		.cfi_def_cfa_offset 12
  83              		.cfi_offset 4, -12
  84              		.cfi_offset 5, -8
  85              		.cfi_offset 14, -4
  86 0002 83B0     		sub	sp, sp, #12
  87              	.LCFI3:
  88              		.cfi_def_cfa_offset 24
 160:Src/main.c    **** 
  89              		.loc 1 160 0
  90 0004 0025     		movs	r5, #0
  91 0006 0095     		str	r5, [sp]
  92 0008 0195     		str	r5, [sp, #4]
 167:Src/main.c    ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
  93              		.loc 1 167 0
  94 000a 0B4C     		ldr	r4, .L7
  95 000c 0B4B     		ldr	r3, .L7+4
  96 000e 2360     		str	r3, [r4]
 168:Src/main.c    ****   {
  97              		.loc 1 168 0
  98 0010 2046     		mov	r0, r4
  99 0012 FFF7FEFF 		bl	HAL_DAC_Init
 100              	.LVL0:
 174:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 101              		.loc 1 174 0
ARM GAS  /tmp/cc7VkbOF.s 			page 7


 102 0016 0423     		movs	r3, #4
 103 0018 0093     		str	r3, [sp]
 175:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 104              		.loc 1 175 0
 105 001a 0195     		str	r5, [sp, #4]
 176:Src/main.c    ****   {
 106              		.loc 1 176 0
 107 001c 1022     		movs	r2, #16
 108 001e 6946     		mov	r1, sp
 109 0020 2046     		mov	r0, r4
 110 0022 FFF7FEFF 		bl	HAL_DAC_ConfigChannel
 111              	.LVL1:
 182:Src/main.c    ****   {
 112              		.loc 1 182 0
 113 0026 4FF43062 		mov	r2, #2816
 114 002a 1021     		movs	r1, #16
 115 002c 2046     		mov	r0, r4
 116 002e FFF7FEFF 		bl	HAL_DACEx_TriangleWaveGenerate
 117              	.LVL2:
 189:Src/main.c    **** 
 118              		.loc 1 189 0
 119 0032 03B0     		add	sp, sp, #12
 120              	.LCFI4:
 121              		.cfi_def_cfa_offset 12
 122              		@ sp needed
 123 0034 30BD     		pop	{r4, r5, pc}
 124              	.L8:
 125 0036 00BF     		.align	2
 126              	.L7:
 127 0038 00000000 		.word	hdac
 128 003c 00740040 		.word	1073771520
 129              		.cfi_endproc
 130              	.LFE67:
 132              		.section	.text.MX_TIM6_Init,"ax",%progbits
 133              		.align	1
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu softvfp
 139              	MX_TIM6_Init:
 140              	.LFB68:
 197:Src/main.c    **** 
 141              		.loc 1 197 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 8
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145 0000 30B5     		push	{r4, r5, lr}
 146              	.LCFI5:
 147              		.cfi_def_cfa_offset 12
 148              		.cfi_offset 4, -12
 149              		.cfi_offset 5, -8
 150              		.cfi_offset 14, -4
 151 0002 83B0     		sub	sp, sp, #12
 152              	.LCFI6:
 153              		.cfi_def_cfa_offset 24
 203:Src/main.c    **** 
 154              		.loc 1 203 0
ARM GAS  /tmp/cc7VkbOF.s 			page 8


 155 0004 0025     		movs	r5, #0
 156 0006 0095     		str	r5, [sp]
 157 0008 0195     		str	r5, [sp, #4]
 208:Src/main.c    ****   htim6.Init.Prescaler = 0;
 158              		.loc 1 208 0
 159 000a 094C     		ldr	r4, .L11
 160 000c 094B     		ldr	r3, .L11+4
 161 000e 2360     		str	r3, [r4]
 209:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 162              		.loc 1 209 0
 163 0010 6560     		str	r5, [r4, #4]
 210:Src/main.c    ****   htim6.Init.Period = 0;
 164              		.loc 1 210 0
 165 0012 A560     		str	r5, [r4, #8]
 211:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 166              		.loc 1 211 0
 167 0014 E560     		str	r5, [r4, #12]
 212:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 168              		.loc 1 212 0
 169 0016 A561     		str	r5, [r4, #24]
 213:Src/main.c    ****   {
 170              		.loc 1 213 0
 171 0018 2046     		mov	r0, r4
 172 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 173              	.LVL3:
 217:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 174              		.loc 1 217 0
 175 001e 2023     		movs	r3, #32
 176 0020 0093     		str	r3, [sp]
 218:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 177              		.loc 1 218 0
 178 0022 0195     		str	r5, [sp, #4]
 219:Src/main.c    ****   {
 179              		.loc 1 219 0
 180 0024 6946     		mov	r1, sp
 181 0026 2046     		mov	r0, r4
 182 0028 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 183              	.LVL4:
 226:Src/main.c    **** 
 184              		.loc 1 226 0
 185 002c 03B0     		add	sp, sp, #12
 186              	.LCFI7:
 187              		.cfi_def_cfa_offset 12
 188              		@ sp needed
 189 002e 30BD     		pop	{r4, r5, pc}
 190              	.L12:
 191              		.align	2
 192              	.L11:
 193 0030 00000000 		.word	htim6
 194 0034 00100040 		.word	1073745920
 195              		.cfi_endproc
 196              	.LFE68:
 198              		.section	.text.SystemClock_Config,"ax",%progbits
 199              		.align	1
 200              		.global	SystemClock_Config
 201              		.syntax unified
 202              		.thumb
ARM GAS  /tmp/cc7VkbOF.s 			page 9


 203              		.thumb_func
 204              		.fpu softvfp
 206              	SystemClock_Config:
 207              	.LFB66:
 117:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 208              		.loc 1 117 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 64
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212 0000 30B5     		push	{r4, r5, lr}
 213              	.LCFI8:
 214              		.cfi_def_cfa_offset 12
 215              		.cfi_offset 4, -12
 216              		.cfi_offset 5, -8
 217              		.cfi_offset 14, -4
 218 0002 91B0     		sub	sp, sp, #68
 219              	.LCFI9:
 220              		.cfi_def_cfa_offset 80
 118:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 221              		.loc 1 118 0
 222 0004 2822     		movs	r2, #40
 223 0006 0021     		movs	r1, #0
 224 0008 06A8     		add	r0, sp, #24
 225 000a FFF7FEFF 		bl	memset
 226              	.LVL5:
 119:Src/main.c    **** 
 227              		.loc 1 119 0
 228 000e 0024     		movs	r4, #0
 229 0010 0194     		str	r4, [sp, #4]
 230 0012 0294     		str	r4, [sp, #8]
 231 0014 0394     		str	r4, [sp, #12]
 232 0016 0494     		str	r4, [sp, #16]
 233 0018 0594     		str	r4, [sp, #20]
 123:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 234              		.loc 1 123 0
 235 001a 0122     		movs	r2, #1
 236 001c 0692     		str	r2, [sp, #24]
 124:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 237              		.loc 1 124 0
 238 001e 4FF48033 		mov	r3, #65536
 239 0022 0793     		str	r3, [sp, #28]
 126:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 240              		.loc 1 126 0
 241 0024 0A92     		str	r2, [sp, #40]
 127:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 242              		.loc 1 127 0
 243 0026 0225     		movs	r5, #2
 244 0028 0D95     		str	r5, [sp, #52]
 128:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 245              		.loc 1 128 0
 246 002a 0E93     		str	r3, [sp, #56]
 129:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 247              		.loc 1 129 0
 248 002c 4FF4E013 		mov	r3, #1835008
 249 0030 0F93     		str	r3, [sp, #60]
 130:Src/main.c    ****   {
 250              		.loc 1 130 0
ARM GAS  /tmp/cc7VkbOF.s 			page 10


 251 0032 06A8     		add	r0, sp, #24
 252 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 253              	.LVL6:
 136:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 254              		.loc 1 136 0
 255 0038 0F23     		movs	r3, #15
 256 003a 0193     		str	r3, [sp, #4]
 137:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 257              		.loc 1 137 0
 258 003c 0295     		str	r5, [sp, #8]
 138:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 259              		.loc 1 138 0
 260 003e 0394     		str	r4, [sp, #12]
 139:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 261              		.loc 1 139 0
 262 0040 4FF48063 		mov	r3, #1024
 263 0044 0493     		str	r3, [sp, #16]
 140:Src/main.c    **** 
 264              		.loc 1 140 0
 265 0046 0594     		str	r4, [sp, #20]
 142:Src/main.c    ****   {
 266              		.loc 1 142 0
 267 0048 2946     		mov	r1, r5
 268 004a 01A8     		add	r0, sp, #4
 269 004c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 270              	.LVL7:
 146:Src/main.c    **** 
 271              		.loc 1 146 0
 272 0050 11B0     		add	sp, sp, #68
 273              	.LCFI10:
 274              		.cfi_def_cfa_offset 12
 275              		@ sp needed
 276 0052 30BD     		pop	{r4, r5, pc}
 277              		.cfi_endproc
 278              	.LFE66:
 280              		.section	.text.main,"ax",%progbits
 281              		.align	1
 282              		.global	main
 283              		.syntax unified
 284              		.thumb
 285              		.thumb_func
 286              		.fpu softvfp
 288              	main:
 289              	.LFB65:
  71:Src/main.c    ****   /* USER CODE BEGIN 1 */
 290              		.loc 1 71 0
 291              		.cfi_startproc
 292              		@ Volatile: function does not return.
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295 0000 08B5     		push	{r3, lr}
 296              	.LCFI11:
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 3, -8
 299              		.cfi_offset 14, -4
  79:Src/main.c    **** 
 300              		.loc 1 79 0
ARM GAS  /tmp/cc7VkbOF.s 			page 11


 301 0002 FFF7FEFF 		bl	HAL_Init
 302              	.LVL8:
  86:Src/main.c    **** 
 303              		.loc 1 86 0
 304 0006 FFF7FEFF 		bl	SystemClock_Config
 305              	.LVL9:
  93:Src/main.c    ****   MX_DAC_Init();
 306              		.loc 1 93 0
 307 000a FFF7FEFF 		bl	MX_GPIO_Init
 308              	.LVL10:
  94:Src/main.c    ****   MX_TIM6_Init();
 309              		.loc 1 94 0
 310 000e FFF7FEFF 		bl	MX_DAC_Init
 311              	.LVL11:
  95:Src/main.c    ****   /* USER CODE BEGIN 2 */
 312              		.loc 1 95 0
 313 0012 FFF7FEFF 		bl	MX_TIM6_Init
 314              	.LVL12:
  97:Src/main.c    ****   HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 315              		.loc 1 97 0
 316 0016 0448     		ldr	r0, .L18
 317 0018 FFF7FEFF 		bl	HAL_TIM_Base_Start
 318              	.LVL13:
  98:Src/main.c    ****   /* USER CODE END 2 */
 319              		.loc 1 98 0
 320 001c 1021     		movs	r1, #16
 321 001e 0348     		ldr	r0, .L18+4
 322 0020 FFF7FEFF 		bl	HAL_DAC_Start
 323              	.LVL14:
 324              	.L16:
 325 0024 FEE7     		b	.L16
 326              	.L19:
 327 0026 00BF     		.align	2
 328              	.L18:
 329 0028 00000000 		.word	htim6
 330 002c 00000000 		.word	hdac
 331              		.cfi_endproc
 332              	.LFE65:
 334              		.section	.text.Error_Handler,"ax",%progbits
 335              		.align	1
 336              		.global	Error_Handler
 337              		.syntax unified
 338              		.thumb
 339              		.thumb_func
 340              		.fpu softvfp
 342              	Error_Handler:
 343              	.LFB70:
 240:Src/main.c    **** 
 241:Src/main.c    **** /* USER CODE BEGIN 4 */
 242:Src/main.c    **** 
 243:Src/main.c    **** /* USER CODE END 4 */
 244:Src/main.c    **** 
 245:Src/main.c    **** /**
 246:Src/main.c    ****  * @brief  This function is executed in case of error occurrence.
 247:Src/main.c    ****  * @retval None
 248:Src/main.c    ****  */
 249:Src/main.c    **** void Error_Handler(void)
ARM GAS  /tmp/cc7VkbOF.s 			page 12


 250:Src/main.c    **** {
 344              		.loc 1 250 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              		@ link register save eliminated.
 349 0000 7047     		bx	lr
 350              		.cfi_endproc
 351              	.LFE70:
 353              		.comm	htim6,64,4
 354              		.comm	hdac,20,4
 355              		.text
 356              	.Letext0:
 357              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 358              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 359              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 360              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 361              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 362              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 363              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 364              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 365              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 366              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dac.h"
 367              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 368              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 369              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 370              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dac_ex.h"
ARM GAS  /tmp/cc7VkbOF.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc7VkbOF.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc7VkbOF.s:22     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc7VkbOF.s:63     .text.MX_GPIO_Init:000000000000002c $d
     /tmp/cc7VkbOF.s:68     .text.MX_DAC_Init:0000000000000000 $t
     /tmp/cc7VkbOF.s:74     .text.MX_DAC_Init:0000000000000000 MX_DAC_Init
     /tmp/cc7VkbOF.s:127    .text.MX_DAC_Init:0000000000000038 $d
                            *COM*:0000000000000014 hdac
     /tmp/cc7VkbOF.s:133    .text.MX_TIM6_Init:0000000000000000 $t
     /tmp/cc7VkbOF.s:139    .text.MX_TIM6_Init:0000000000000000 MX_TIM6_Init
     /tmp/cc7VkbOF.s:193    .text.MX_TIM6_Init:0000000000000030 $d
                            *COM*:0000000000000040 htim6
     /tmp/cc7VkbOF.s:199    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc7VkbOF.s:206    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc7VkbOF.s:281    .text.main:0000000000000000 $t
     /tmp/cc7VkbOF.s:288    .text.main:0000000000000000 main
     /tmp/cc7VkbOF.s:329    .text.main:0000000000000028 $d
     /tmp/cc7VkbOF.s:335    .text.Error_Handler:0000000000000000 $t
     /tmp/cc7VkbOF.s:342    .text.Error_Handler:0000000000000000 Error_Handler
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_DAC_Init
HAL_DAC_ConfigChannel
HAL_DACEx_TriangleWaveGenerate
HAL_TIM_Base_Init
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start
HAL_DAC_Start
