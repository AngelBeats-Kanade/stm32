ARM GAS  /tmp/ccD2Fa0Q.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"bsp_spi_flash.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.rodata.SPI_TIMEOUT_UserCallback.str1.4,"aMS",%progbits,1
  16              		.align	2
  17              	.LC0:
  18 0000 3C3C2D46 		.ascii	"<<-FLASH-ERROR->> SPI \265\310\264\375\263\254\312\261"
  18      4C415348 
  18      2D455252 
  18      4F522D3E 
  18      3E205350 
  19 001e 21657272 		.ascii	"!errorCode = %d\012\000"
  19      6F72436F 
  19      6465203D 
  19      2025640A 
  19      00
  20              		.section	.text.SPI_TIMEOUT_UserCallback,"ax",%progbits
  21              		.align	1
  22              		.arch armv7-m
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  26              		.fpu softvfp
  28              	SPI_TIMEOUT_UserCallback:
  29              	.LVL0:
  30              	.LFB85:
  31              		.file 1 "Src/bsp_spi_flash.c"
   1:Src/bsp_spi_flash.c **** /**
   2:Src/bsp_spi_flash.c ****  ******************************************************************************
   3:Src/bsp_spi_flash.c ****  * @file    bsp_spi_flash.c
   4:Src/bsp_spi_flash.c ****  * @author  fire
   5:Src/bsp_spi_flash.c ****  * @version V1.0
   6:Src/bsp_spi_flash.c ****  * @date    2015-xx-xx
   7:Src/bsp_spi_flash.c ****  * @brief   spi flash 底层应用函数bsp
   8:Src/bsp_spi_flash.c ****  ******************************************************************************
   9:Src/bsp_spi_flash.c ****  * @attention
  10:Src/bsp_spi_flash.c ****  *
  11:Src/bsp_spi_flash.c ****  * 实验平台:野火STM32 F103 开发板
  12:Src/bsp_spi_flash.c ****  * 论坛    :http://www.firebbs.cn
  13:Src/bsp_spi_flash.c ****  * 淘宝    :https://fire-stm32.taobao.com
  14:Src/bsp_spi_flash.c ****  *
  15:Src/bsp_spi_flash.c ****  ******************************************************************************
  16:Src/bsp_spi_flash.c ****  */
  17:Src/bsp_spi_flash.c **** 
  18:Src/bsp_spi_flash.c **** #include "bsp_spi_flash.h"
  19:Src/bsp_spi_flash.c **** 
ARM GAS  /tmp/ccD2Fa0Q.s 			page 2


  20:Src/bsp_spi_flash.c **** SPI_HandleTypeDef SpiHandle;
  21:Src/bsp_spi_flash.c **** 
  22:Src/bsp_spi_flash.c **** static __IO uint32_t SPITimeout = SPIT_LONG_TIMEOUT;
  23:Src/bsp_spi_flash.c **** 
  24:Src/bsp_spi_flash.c **** static uint16_t SPI_TIMEOUT_UserCallback(uint8_t errorCode);
  25:Src/bsp_spi_flash.c **** 
  26:Src/bsp_spi_flash.c **** /**
  27:Src/bsp_spi_flash.c ****  * @brief SPI MSP Initialization
  28:Src/bsp_spi_flash.c ****  *        This function configures the hardware resources used in this example:
  29:Src/bsp_spi_flash.c ****  *           - Peripheral's clock enable
  30:Src/bsp_spi_flash.c ****  *           - Peripheral's GPIO Configuration
  31:Src/bsp_spi_flash.c ****  * @param hspi: SPI handle pointer
  32:Src/bsp_spi_flash.c ****  * @retval None
  33:Src/bsp_spi_flash.c ****  */
  34:Src/bsp_spi_flash.c **** void HAL_SPI_MspInit(SPI_HandleTypeDef *hspi)
  35:Src/bsp_spi_flash.c **** {
  36:Src/bsp_spi_flash.c ****   GPIO_InitTypeDef GPIO_InitStruct;
  37:Src/bsp_spi_flash.c **** 
  38:Src/bsp_spi_flash.c ****   /*##-1- Enable peripherals and GPIO Clocks #################################*/
  39:Src/bsp_spi_flash.c ****   /* Enable GPIO TX/RX clock */
  40:Src/bsp_spi_flash.c ****   SPIx_SCK_GPIO_CLK_ENABLE();
  41:Src/bsp_spi_flash.c ****   SPIx_MISO_GPIO_CLK_ENABLE();
  42:Src/bsp_spi_flash.c ****   SPIx_MOSI_GPIO_CLK_ENABLE();
  43:Src/bsp_spi_flash.c ****   SPIx_CS_GPIO_CLK_ENABLE();
  44:Src/bsp_spi_flash.c ****   /* Enable SPI clock */
  45:Src/bsp_spi_flash.c ****   SPIx_CLK_ENABLE();
  46:Src/bsp_spi_flash.c **** 
  47:Src/bsp_spi_flash.c ****   /*##-2- Configure peripheral GPIO ##########################################*/
  48:Src/bsp_spi_flash.c ****   /* SPI SCK GPIO pin configuration  */
  49:Src/bsp_spi_flash.c ****   GPIO_InitStruct.Pin = SPIx_SCK_PIN;
  50:Src/bsp_spi_flash.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  51:Src/bsp_spi_flash.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
  52:Src/bsp_spi_flash.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
  53:Src/bsp_spi_flash.c **** 
  54:Src/bsp_spi_flash.c ****   HAL_GPIO_Init(SPIx_SCK_GPIO_PORT, &GPIO_InitStruct);
  55:Src/bsp_spi_flash.c **** 
  56:Src/bsp_spi_flash.c ****   /* SPI MISO GPIO pin configuration  */
  57:Src/bsp_spi_flash.c ****   GPIO_InitStruct.Pin = SPIx_MISO_PIN;
  58:Src/bsp_spi_flash.c ****   HAL_GPIO_Init(SPIx_MISO_GPIO_PORT, &GPIO_InitStruct);
  59:Src/bsp_spi_flash.c **** 
  60:Src/bsp_spi_flash.c ****   /* SPI MOSI GPIO pin configuration  */
  61:Src/bsp_spi_flash.c ****   GPIO_InitStruct.Pin = SPIx_MOSI_PIN;
  62:Src/bsp_spi_flash.c ****   HAL_GPIO_Init(SPIx_MOSI_GPIO_PORT, &GPIO_InitStruct);
  63:Src/bsp_spi_flash.c **** 
  64:Src/bsp_spi_flash.c ****   GPIO_InitStruct.Pin = FLASH_CS_PIN;
  65:Src/bsp_spi_flash.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  66:Src/bsp_spi_flash.c ****   HAL_GPIO_Init(FLASH_CS_GPIO_PORT, &GPIO_InitStruct);
  67:Src/bsp_spi_flash.c **** }
  68:Src/bsp_spi_flash.c **** 
  69:Src/bsp_spi_flash.c **** void SPI_FLASH_Init(void)
  70:Src/bsp_spi_flash.c **** {
  71:Src/bsp_spi_flash.c ****   /*##-1- Configure the SPI peripheral #######################################*/
  72:Src/bsp_spi_flash.c ****   /* Set the SPI parameters */
  73:Src/bsp_spi_flash.c ****   SpiHandle.Instance = SPIx;
  74:Src/bsp_spi_flash.c ****   SpiHandle.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
  75:Src/bsp_spi_flash.c ****   SpiHandle.Init.Direction = SPI_DIRECTION_2LINES;
  76:Src/bsp_spi_flash.c ****   SpiHandle.Init.CLKPhase = SPI_PHASE_2EDGE;
ARM GAS  /tmp/ccD2Fa0Q.s 			page 3


  77:Src/bsp_spi_flash.c ****   SpiHandle.Init.CLKPolarity = SPI_POLARITY_HIGH;
  78:Src/bsp_spi_flash.c ****   SpiHandle.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
  79:Src/bsp_spi_flash.c ****   SpiHandle.Init.CRCPolynomial = 7;
  80:Src/bsp_spi_flash.c ****   SpiHandle.Init.DataSize = SPI_DATASIZE_8BIT;
  81:Src/bsp_spi_flash.c ****   SpiHandle.Init.FirstBit = SPI_FIRSTBIT_MSB;
  82:Src/bsp_spi_flash.c ****   SpiHandle.Init.NSS = SPI_NSS_SOFT;
  83:Src/bsp_spi_flash.c ****   SpiHandle.Init.TIMode = SPI_TIMODE_DISABLE;
  84:Src/bsp_spi_flash.c **** 
  85:Src/bsp_spi_flash.c ****   SpiHandle.Init.Mode = SPI_MODE_MASTER;
  86:Src/bsp_spi_flash.c **** 
  87:Src/bsp_spi_flash.c ****   HAL_SPI_Init(&SpiHandle);
  88:Src/bsp_spi_flash.c **** 
  89:Src/bsp_spi_flash.c ****   __HAL_SPI_ENABLE(&SpiHandle);
  90:Src/bsp_spi_flash.c **** }
  91:Src/bsp_spi_flash.c **** 
  92:Src/bsp_spi_flash.c **** /**
  93:Src/bsp_spi_flash.c ****  * @brief  擦除FLASH扇区
  94:Src/bsp_spi_flash.c ****  * @param  SectorAddr：要擦除的扇区地址
  95:Src/bsp_spi_flash.c ****  * @retval 无
  96:Src/bsp_spi_flash.c ****  */
  97:Src/bsp_spi_flash.c **** void SPI_FLASH_SectorErase(uint32_t SectorAddr)
  98:Src/bsp_spi_flash.c **** {
  99:Src/bsp_spi_flash.c ****   /* 发送FLASH写使能命令 */
 100:Src/bsp_spi_flash.c ****   SPI_FLASH_WriteEnable();
 101:Src/bsp_spi_flash.c ****   SPI_FLASH_WaitForWriteEnd();
 102:Src/bsp_spi_flash.c ****   /* 擦除扇区 */
 103:Src/bsp_spi_flash.c ****   /* 选择FLASH: CS低电平 */
 104:Src/bsp_spi_flash.c ****   SPI_FLASH_CS_LOW();
 105:Src/bsp_spi_flash.c ****   /* 发送扇区擦除指令*/
 106:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte(W25X_SectorErase);
 107:Src/bsp_spi_flash.c ****   /*发送擦除扇区地址的高位*/
 108:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte((SectorAddr & 0xFF0000) >> 16);
 109:Src/bsp_spi_flash.c ****   /* 发送擦除扇区地址的中位 */
 110:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte((SectorAddr & 0xFF00) >> 8);
 111:Src/bsp_spi_flash.c ****   /* 发送擦除扇区地址的低位 */
 112:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte(SectorAddr & 0xFF);
 113:Src/bsp_spi_flash.c ****   /* 停止信号 FLASH: CS 高电平 */
 114:Src/bsp_spi_flash.c ****   SPI_FLASH_CS_HIGH();
 115:Src/bsp_spi_flash.c ****   /* 等待擦除完毕*/
 116:Src/bsp_spi_flash.c ****   SPI_FLASH_WaitForWriteEnd();
 117:Src/bsp_spi_flash.c **** }
 118:Src/bsp_spi_flash.c **** 
 119:Src/bsp_spi_flash.c **** /**
 120:Src/bsp_spi_flash.c ****  * @brief  擦除FLASH扇区，整片擦除
 121:Src/bsp_spi_flash.c ****  * @param  无
 122:Src/bsp_spi_flash.c ****  * @retval 无
 123:Src/bsp_spi_flash.c ****  */
 124:Src/bsp_spi_flash.c **** void SPI_FLASH_BulkErase(void)
 125:Src/bsp_spi_flash.c **** {
 126:Src/bsp_spi_flash.c ****   /* 发送FLASH写使能命令 */
 127:Src/bsp_spi_flash.c ****   SPI_FLASH_WriteEnable();
 128:Src/bsp_spi_flash.c **** 
 129:Src/bsp_spi_flash.c ****   /* 整块 Erase */
 130:Src/bsp_spi_flash.c ****   /* 选择FLASH: CS低电平 */
 131:Src/bsp_spi_flash.c ****   SPI_FLASH_CS_LOW();
 132:Src/bsp_spi_flash.c ****   /* 发送整块擦除指令*/
 133:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte(W25X_ChipErase);
ARM GAS  /tmp/ccD2Fa0Q.s 			page 4


 134:Src/bsp_spi_flash.c ****   /* 停止信号 FLASH: CS 高电平 */
 135:Src/bsp_spi_flash.c ****   SPI_FLASH_CS_HIGH();
 136:Src/bsp_spi_flash.c **** 
 137:Src/bsp_spi_flash.c ****   /* 等待擦除完毕*/
 138:Src/bsp_spi_flash.c ****   SPI_FLASH_WaitForWriteEnd();
 139:Src/bsp_spi_flash.c **** }
 140:Src/bsp_spi_flash.c **** 
 141:Src/bsp_spi_flash.c **** /**
 142:Src/bsp_spi_flash.c ****  * @brief  对FLASH按页写入数据，调用本函数写入数据前需要先擦除扇区
 143:Src/bsp_spi_flash.c ****  * @param	pBuffer，要写入数据的指针
 144:Src/bsp_spi_flash.c ****  * @param WriteAddr，写入地址
 145:Src/bsp_spi_flash.c ****  * @param  NumByteToWrite，写入数据长度，必须小于等于SPI_FLASH_PerWritePageSize
 146:Src/bsp_spi_flash.c ****  * @retval 无
 147:Src/bsp_spi_flash.c ****  */
 148:Src/bsp_spi_flash.c **** void SPI_FLASH_PageWrite(uint8_t *pBuffer, uint32_t WriteAddr, uint16_t NumByteToWrite)
 149:Src/bsp_spi_flash.c **** {
 150:Src/bsp_spi_flash.c ****   /* 发送FLASH写使能命令 */
 151:Src/bsp_spi_flash.c ****   SPI_FLASH_WriteEnable();
 152:Src/bsp_spi_flash.c **** 
 153:Src/bsp_spi_flash.c ****   /* 选择FLASH: CS低电平 */
 154:Src/bsp_spi_flash.c ****   SPI_FLASH_CS_LOW();
 155:Src/bsp_spi_flash.c ****   /* 写页写指令*/
 156:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte(W25X_PageProgram);
 157:Src/bsp_spi_flash.c ****   /*发送写地址的高位*/
 158:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte((WriteAddr & 0xFF0000) >> 16);
 159:Src/bsp_spi_flash.c ****   /*发送写地址的中位*/
 160:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte((WriteAddr & 0xFF00) >> 8);
 161:Src/bsp_spi_flash.c ****   /*发送写地址的低位*/
 162:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte(WriteAddr & 0xFF);
 163:Src/bsp_spi_flash.c **** 
 164:Src/bsp_spi_flash.c ****   if (NumByteToWrite > SPI_FLASH_PerWritePageSize)
 165:Src/bsp_spi_flash.c ****   {
 166:Src/bsp_spi_flash.c ****     NumByteToWrite = SPI_FLASH_PerWritePageSize;
 167:Src/bsp_spi_flash.c ****     FLASH_ERROR("SPI_FLASH_PageWrite too large!");
 168:Src/bsp_spi_flash.c ****   }
 169:Src/bsp_spi_flash.c **** 
 170:Src/bsp_spi_flash.c ****   /* 写入数据*/
 171:Src/bsp_spi_flash.c ****   while (NumByteToWrite--)
 172:Src/bsp_spi_flash.c ****   {
 173:Src/bsp_spi_flash.c ****     /* 发送当前要写入的字节数据 */
 174:Src/bsp_spi_flash.c ****     SPI_FLASH_SendByte(*pBuffer);
 175:Src/bsp_spi_flash.c ****     /* 指向下一字节数据 */
 176:Src/bsp_spi_flash.c ****     pBuffer++;
 177:Src/bsp_spi_flash.c ****   }
 178:Src/bsp_spi_flash.c **** 
 179:Src/bsp_spi_flash.c ****   /* 停止信号 FLASH: CS 高电平 */
 180:Src/bsp_spi_flash.c ****   SPI_FLASH_CS_HIGH();
 181:Src/bsp_spi_flash.c **** 
 182:Src/bsp_spi_flash.c ****   /* 等待写入完毕*/
 183:Src/bsp_spi_flash.c ****   SPI_FLASH_WaitForWriteEnd();
 184:Src/bsp_spi_flash.c **** }
 185:Src/bsp_spi_flash.c **** 
 186:Src/bsp_spi_flash.c **** /**
 187:Src/bsp_spi_flash.c ****  * @brief  对FLASH写入数据，调用本函数写入数据前需要先擦除扇区
 188:Src/bsp_spi_flash.c ****  * @param	pBuffer，要写入数据的指针
 189:Src/bsp_spi_flash.c ****  * @param  WriteAddr，写入地址
 190:Src/bsp_spi_flash.c ****  * @param  NumByteToWrite，写入数据长度
ARM GAS  /tmp/ccD2Fa0Q.s 			page 5


 191:Src/bsp_spi_flash.c ****  * @retval 无
 192:Src/bsp_spi_flash.c ****  */
 193:Src/bsp_spi_flash.c **** void SPI_FLASH_BufferWrite(uint8_t *pBuffer, uint32_t WriteAddr, uint16_t NumByteToWrite)
 194:Src/bsp_spi_flash.c **** {
 195:Src/bsp_spi_flash.c ****   uint8_t NumOfPage = 0, NumOfSingle = 0, Addr = 0, count = 0, temp = 0;
 196:Src/bsp_spi_flash.c **** 
 197:Src/bsp_spi_flash.c ****   /*mod运算求余，若writeAddr是SPI_FLASH_PageSize整数倍，运算结果Addr值为0*/
 198:Src/bsp_spi_flash.c ****   Addr = WriteAddr % SPI_FLASH_PageSize;
 199:Src/bsp_spi_flash.c **** 
 200:Src/bsp_spi_flash.c ****   /*差count个数据值，刚好可以对齐到页地址*/
 201:Src/bsp_spi_flash.c ****   count = SPI_FLASH_PageSize - Addr;
 202:Src/bsp_spi_flash.c ****   /*计算出要写多少整数页*/
 203:Src/bsp_spi_flash.c ****   NumOfPage = NumByteToWrite / SPI_FLASH_PageSize;
 204:Src/bsp_spi_flash.c ****   /*mod运算求余，计算出剩余不满一页的字节数*/
 205:Src/bsp_spi_flash.c ****   NumOfSingle = NumByteToWrite % SPI_FLASH_PageSize;
 206:Src/bsp_spi_flash.c **** 
 207:Src/bsp_spi_flash.c ****   /* Addr=0,则WriteAddr 刚好按页对齐 aligned  */
 208:Src/bsp_spi_flash.c ****   if (Addr == 0)
 209:Src/bsp_spi_flash.c ****   {
 210:Src/bsp_spi_flash.c ****     /* NumByteToWrite < SPI_FLASH_PageSize */
 211:Src/bsp_spi_flash.c ****     if (NumOfPage == 0)
 212:Src/bsp_spi_flash.c ****     {
 213:Src/bsp_spi_flash.c ****       SPI_FLASH_PageWrite(pBuffer, WriteAddr, NumByteToWrite);
 214:Src/bsp_spi_flash.c ****     }
 215:Src/bsp_spi_flash.c ****     else /* NumByteToWrite > SPI_FLASH_PageSize */
 216:Src/bsp_spi_flash.c ****     {
 217:Src/bsp_spi_flash.c ****       /*先把整数页都写了*/
 218:Src/bsp_spi_flash.c ****       while (NumOfPage--)
 219:Src/bsp_spi_flash.c ****       {
 220:Src/bsp_spi_flash.c ****         SPI_FLASH_PageWrite(pBuffer, WriteAddr, SPI_FLASH_PageSize);
 221:Src/bsp_spi_flash.c ****         WriteAddr += SPI_FLASH_PageSize;
 222:Src/bsp_spi_flash.c ****         pBuffer += SPI_FLASH_PageSize;
 223:Src/bsp_spi_flash.c ****       }
 224:Src/bsp_spi_flash.c **** 
 225:Src/bsp_spi_flash.c ****       /*若有多余的不满一页的数据，把它写完*/
 226:Src/bsp_spi_flash.c ****       SPI_FLASH_PageWrite(pBuffer, WriteAddr, NumOfSingle);
 227:Src/bsp_spi_flash.c ****     }
 228:Src/bsp_spi_flash.c ****   }
 229:Src/bsp_spi_flash.c ****   /* 若地址与 SPI_FLASH_PageSize 不对齐  */
 230:Src/bsp_spi_flash.c ****   else
 231:Src/bsp_spi_flash.c ****   {
 232:Src/bsp_spi_flash.c ****     /* NumByteToWrite < SPI_FLASH_PageSize */
 233:Src/bsp_spi_flash.c ****     if (NumOfPage == 0)
 234:Src/bsp_spi_flash.c ****     {
 235:Src/bsp_spi_flash.c ****       /*当前页剩余的count个位置比NumOfSingle小，写不完*/
 236:Src/bsp_spi_flash.c ****       if (NumOfSingle > count)
 237:Src/bsp_spi_flash.c ****       {
 238:Src/bsp_spi_flash.c ****         temp = NumOfSingle - count;
 239:Src/bsp_spi_flash.c **** 
 240:Src/bsp_spi_flash.c ****         /*先写满当前页*/
 241:Src/bsp_spi_flash.c ****         SPI_FLASH_PageWrite(pBuffer, WriteAddr, count);
 242:Src/bsp_spi_flash.c ****         WriteAddr += count;
 243:Src/bsp_spi_flash.c ****         pBuffer += count;
 244:Src/bsp_spi_flash.c **** 
 245:Src/bsp_spi_flash.c ****         /*再写剩余的数据*/
 246:Src/bsp_spi_flash.c ****         SPI_FLASH_PageWrite(pBuffer, WriteAddr, temp);
 247:Src/bsp_spi_flash.c ****       }
ARM GAS  /tmp/ccD2Fa0Q.s 			page 6


 248:Src/bsp_spi_flash.c ****       else /*当前页剩余的count个位置能写完NumOfSingle个数据*/
 249:Src/bsp_spi_flash.c ****       {
 250:Src/bsp_spi_flash.c ****         SPI_FLASH_PageWrite(pBuffer, WriteAddr, NumByteToWrite);
 251:Src/bsp_spi_flash.c ****       }
 252:Src/bsp_spi_flash.c ****     }
 253:Src/bsp_spi_flash.c ****     else /* NumByteToWrite > SPI_FLASH_PageSize */
 254:Src/bsp_spi_flash.c ****     {
 255:Src/bsp_spi_flash.c ****       /*地址不对齐多出的count分开处理，不加入这个运算*/
 256:Src/bsp_spi_flash.c ****       NumByteToWrite -= count;
 257:Src/bsp_spi_flash.c ****       NumOfPage = NumByteToWrite / SPI_FLASH_PageSize;
 258:Src/bsp_spi_flash.c ****       NumOfSingle = NumByteToWrite % SPI_FLASH_PageSize;
 259:Src/bsp_spi_flash.c **** 
 260:Src/bsp_spi_flash.c ****       SPI_FLASH_PageWrite(pBuffer, WriteAddr, count);
 261:Src/bsp_spi_flash.c ****       WriteAddr += count;
 262:Src/bsp_spi_flash.c ****       pBuffer += count;
 263:Src/bsp_spi_flash.c **** 
 264:Src/bsp_spi_flash.c ****       /*把整数页都写了*/
 265:Src/bsp_spi_flash.c ****       while (NumOfPage--)
 266:Src/bsp_spi_flash.c ****       {
 267:Src/bsp_spi_flash.c ****         SPI_FLASH_PageWrite(pBuffer, WriteAddr, SPI_FLASH_PageSize);
 268:Src/bsp_spi_flash.c ****         WriteAddr += SPI_FLASH_PageSize;
 269:Src/bsp_spi_flash.c ****         pBuffer += SPI_FLASH_PageSize;
 270:Src/bsp_spi_flash.c ****       }
 271:Src/bsp_spi_flash.c ****       /*若有多余的不满一页的数据，把它写完*/
 272:Src/bsp_spi_flash.c ****       if (NumOfSingle != 0)
 273:Src/bsp_spi_flash.c ****       {
 274:Src/bsp_spi_flash.c ****         SPI_FLASH_PageWrite(pBuffer, WriteAddr, NumOfSingle);
 275:Src/bsp_spi_flash.c ****       }
 276:Src/bsp_spi_flash.c ****     }
 277:Src/bsp_spi_flash.c ****   }
 278:Src/bsp_spi_flash.c **** }
 279:Src/bsp_spi_flash.c **** 
 280:Src/bsp_spi_flash.c **** /**
 281:Src/bsp_spi_flash.c ****  * @brief  读取FLASH数据
 282:Src/bsp_spi_flash.c ****  * @param 	pBuffer，存储读出数据的指针
 283:Src/bsp_spi_flash.c ****  * @param   ReadAddr，读取地址
 284:Src/bsp_spi_flash.c ****  * @param   NumByteToRead，读取数据长度
 285:Src/bsp_spi_flash.c ****  * @retval 无
 286:Src/bsp_spi_flash.c ****  */
 287:Src/bsp_spi_flash.c **** void SPI_FLASH_BufferRead(uint8_t *pBuffer, uint32_t ReadAddr, uint16_t NumByteToRead)
 288:Src/bsp_spi_flash.c **** {
 289:Src/bsp_spi_flash.c ****   /* 选择FLASH: CS低电平 */
 290:Src/bsp_spi_flash.c ****   SPI_FLASH_CS_LOW();
 291:Src/bsp_spi_flash.c **** 
 292:Src/bsp_spi_flash.c ****   /* 发送 读 指令 */
 293:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte(W25X_ReadData);
 294:Src/bsp_spi_flash.c **** 
 295:Src/bsp_spi_flash.c ****   /* 发送 读 地址高位 */
 296:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte((ReadAddr & 0xFF0000) >> 16);
 297:Src/bsp_spi_flash.c ****   /* 发送 读 地址中位 */
 298:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte((ReadAddr & 0xFF00) >> 8);
 299:Src/bsp_spi_flash.c ****   /* 发送 读 地址低位 */
 300:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte(ReadAddr & 0xFF);
 301:Src/bsp_spi_flash.c **** 
 302:Src/bsp_spi_flash.c ****   /* 读取数据 */
 303:Src/bsp_spi_flash.c ****   while (NumByteToRead--)
 304:Src/bsp_spi_flash.c ****   {
ARM GAS  /tmp/ccD2Fa0Q.s 			page 7


 305:Src/bsp_spi_flash.c ****     /* 读取一个字节*/
 306:Src/bsp_spi_flash.c ****     *pBuffer = SPI_FLASH_SendByte(Dummy_Byte);
 307:Src/bsp_spi_flash.c ****     /* 指向下一个字节缓冲区 */
 308:Src/bsp_spi_flash.c ****     pBuffer++;
 309:Src/bsp_spi_flash.c ****   }
 310:Src/bsp_spi_flash.c **** 
 311:Src/bsp_spi_flash.c ****   /* 停止信号 FLASH: CS 高电平 */
 312:Src/bsp_spi_flash.c ****   SPI_FLASH_CS_HIGH();
 313:Src/bsp_spi_flash.c **** }
 314:Src/bsp_spi_flash.c **** 
 315:Src/bsp_spi_flash.c **** /**
 316:Src/bsp_spi_flash.c ****  * @brief  读取FLASH ID
 317:Src/bsp_spi_flash.c ****  * @param 	无
 318:Src/bsp_spi_flash.c ****  * @retval FLASH ID
 319:Src/bsp_spi_flash.c ****  */
 320:Src/bsp_spi_flash.c **** uint32_t SPI_FLASH_ReadID(void)
 321:Src/bsp_spi_flash.c **** {
 322:Src/bsp_spi_flash.c ****   uint32_t Temp = 0, Temp0 = 0, Temp1 = 0, Temp2 = 0;
 323:Src/bsp_spi_flash.c **** 
 324:Src/bsp_spi_flash.c ****   /* 开始通讯：CS低电平 */
 325:Src/bsp_spi_flash.c ****   SPI_FLASH_CS_LOW();
 326:Src/bsp_spi_flash.c **** 
 327:Src/bsp_spi_flash.c ****   /* 发送JEDEC指令，读取ID */
 328:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte(W25X_JedecDeviceID);
 329:Src/bsp_spi_flash.c **** 
 330:Src/bsp_spi_flash.c ****   /* 读取一个字节数据 */
 331:Src/bsp_spi_flash.c ****   Temp0 = SPI_FLASH_SendByte(Dummy_Byte);
 332:Src/bsp_spi_flash.c **** 
 333:Src/bsp_spi_flash.c ****   /* 读取一个字节数据 */
 334:Src/bsp_spi_flash.c ****   Temp1 = SPI_FLASH_SendByte(Dummy_Byte);
 335:Src/bsp_spi_flash.c **** 
 336:Src/bsp_spi_flash.c ****   /* 读取一个字节数据 */
 337:Src/bsp_spi_flash.c ****   Temp2 = SPI_FLASH_SendByte(Dummy_Byte);
 338:Src/bsp_spi_flash.c **** 
 339:Src/bsp_spi_flash.c ****   /* 停止通讯：CS高电平 */
 340:Src/bsp_spi_flash.c ****   SPI_FLASH_CS_HIGH();
 341:Src/bsp_spi_flash.c **** 
 342:Src/bsp_spi_flash.c ****   /*把数据组合起来，作为函数的返回值*/
 343:Src/bsp_spi_flash.c ****   Temp = (Temp0 << 16) | (Temp1 << 8) | Temp2;
 344:Src/bsp_spi_flash.c **** 
 345:Src/bsp_spi_flash.c ****   return Temp;
 346:Src/bsp_spi_flash.c **** }
 347:Src/bsp_spi_flash.c **** 
 348:Src/bsp_spi_flash.c **** /**
 349:Src/bsp_spi_flash.c ****  * @brief  读取FLASH Device ID
 350:Src/bsp_spi_flash.c ****  * @param 	无
 351:Src/bsp_spi_flash.c ****  * @retval FLASH Device ID
 352:Src/bsp_spi_flash.c ****  */
 353:Src/bsp_spi_flash.c **** uint32_t SPI_FLASH_ReadDeviceID(void)
 354:Src/bsp_spi_flash.c **** {
 355:Src/bsp_spi_flash.c ****   uint32_t Temp = 0;
 356:Src/bsp_spi_flash.c **** 
 357:Src/bsp_spi_flash.c ****   /* Select the FLASH: Chip Select low */
 358:Src/bsp_spi_flash.c ****   SPI_FLASH_CS_LOW();
 359:Src/bsp_spi_flash.c **** 
 360:Src/bsp_spi_flash.c ****   /* Send "RDID " instruction */
 361:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte(W25X_DeviceID);
ARM GAS  /tmp/ccD2Fa0Q.s 			page 8


 362:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte(Dummy_Byte);
 363:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte(Dummy_Byte);
 364:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte(Dummy_Byte);
 365:Src/bsp_spi_flash.c **** 
 366:Src/bsp_spi_flash.c ****   /* Read a byte from the FLASH */
 367:Src/bsp_spi_flash.c ****   Temp = SPI_FLASH_SendByte(Dummy_Byte);
 368:Src/bsp_spi_flash.c **** 
 369:Src/bsp_spi_flash.c ****   /* Deselect the FLASH: Chip Select high */
 370:Src/bsp_spi_flash.c ****   SPI_FLASH_CS_HIGH();
 371:Src/bsp_spi_flash.c **** 
 372:Src/bsp_spi_flash.c ****   return Temp;
 373:Src/bsp_spi_flash.c **** }
 374:Src/bsp_spi_flash.c **** /*******************************************************************************
 375:Src/bsp_spi_flash.c ****  * Function Name  : SPI_FLASH_StartReadSequence
 376:Src/bsp_spi_flash.c ****  * Description    : Initiates a read data byte (READ) sequence from the Flash.
 377:Src/bsp_spi_flash.c ****  *                  This is done by driving the /CS line low to select the device,
 378:Src/bsp_spi_flash.c ****  *                  then the READ instruction is transmitted followed by 3 bytes
 379:Src/bsp_spi_flash.c ****  *                  address. This function exit and keep the /CS line low, so the
 380:Src/bsp_spi_flash.c ****  *                  Flash still being selected. With this technique the whole
 381:Src/bsp_spi_flash.c ****  *                  content of the Flash is read with a single READ instruction.
 382:Src/bsp_spi_flash.c ****  * Input          : - ReadAddr : FLASH's internal address to read from.
 383:Src/bsp_spi_flash.c ****  * Output         : None
 384:Src/bsp_spi_flash.c ****  * Return         : None
 385:Src/bsp_spi_flash.c ****  *******************************************************************************/
 386:Src/bsp_spi_flash.c **** void SPI_FLASH_StartReadSequence(uint32_t ReadAddr)
 387:Src/bsp_spi_flash.c **** {
 388:Src/bsp_spi_flash.c ****   /* Select the FLASH: Chip Select low */
 389:Src/bsp_spi_flash.c ****   SPI_FLASH_CS_LOW();
 390:Src/bsp_spi_flash.c **** 
 391:Src/bsp_spi_flash.c ****   /* Send "Read from Memory " instruction */
 392:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte(W25X_ReadData);
 393:Src/bsp_spi_flash.c **** 
 394:Src/bsp_spi_flash.c ****   /* Send the 24-bit address of the address to read from -----------------------*/
 395:Src/bsp_spi_flash.c ****   /* Send ReadAddr high nibble address byte */
 396:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte((ReadAddr & 0xFF0000) >> 16);
 397:Src/bsp_spi_flash.c ****   /* Send ReadAddr medium nibble address byte */
 398:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte((ReadAddr & 0xFF00) >> 8);
 399:Src/bsp_spi_flash.c ****   /* Send ReadAddr low nibble address byte */
 400:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte(ReadAddr & 0xFF);
 401:Src/bsp_spi_flash.c **** }
 402:Src/bsp_spi_flash.c **** 
 403:Src/bsp_spi_flash.c **** /**
 404:Src/bsp_spi_flash.c ****  * @brief  使用SPI读取一个字节的数据
 405:Src/bsp_spi_flash.c ****  * @param  无
 406:Src/bsp_spi_flash.c ****  * @retval 返回接收到的数据
 407:Src/bsp_spi_flash.c ****  */
 408:Src/bsp_spi_flash.c **** uint8_t SPI_FLASH_ReadByte(void) { return (SPI_FLASH_SendByte(Dummy_Byte)); }
 409:Src/bsp_spi_flash.c **** 
 410:Src/bsp_spi_flash.c **** /**
 411:Src/bsp_spi_flash.c ****  * @brief  使用SPI发送一个字节的数据
 412:Src/bsp_spi_flash.c ****  * @param  byte：要发送的数据
 413:Src/bsp_spi_flash.c ****  * @retval 返回接收到的数据
 414:Src/bsp_spi_flash.c ****  */
 415:Src/bsp_spi_flash.c **** uint8_t SPI_FLASH_SendByte(uint8_t byte)
 416:Src/bsp_spi_flash.c **** {
 417:Src/bsp_spi_flash.c ****   SPITimeout = SPIT_FLAG_TIMEOUT;
 418:Src/bsp_spi_flash.c **** 
ARM GAS  /tmp/ccD2Fa0Q.s 			page 9


 419:Src/bsp_spi_flash.c ****   /* 等待发送缓冲区为空，TXE事件 */
 420:Src/bsp_spi_flash.c ****   while (__HAL_SPI_GET_FLAG(&SpiHandle, SPI_FLAG_TXE) == RESET)
 421:Src/bsp_spi_flash.c ****   {
 422:Src/bsp_spi_flash.c ****     if ((SPITimeout--) == 0)
 423:Src/bsp_spi_flash.c ****       return SPI_TIMEOUT_UserCallback(0);
 424:Src/bsp_spi_flash.c ****   }
 425:Src/bsp_spi_flash.c **** 
 426:Src/bsp_spi_flash.c ****   /* 写入数据寄存器，把要写入的数据写入发送缓冲区 */
 427:Src/bsp_spi_flash.c ****   WRITE_REG(SpiHandle.Instance->DR, byte);
 428:Src/bsp_spi_flash.c **** 
 429:Src/bsp_spi_flash.c ****   SPITimeout = SPIT_FLAG_TIMEOUT;
 430:Src/bsp_spi_flash.c **** 
 431:Src/bsp_spi_flash.c ****   /* 等待接收缓冲区非空，RXNE事件 */
 432:Src/bsp_spi_flash.c ****   while (__HAL_SPI_GET_FLAG(&SpiHandle, SPI_FLAG_RXNE) == RESET)
 433:Src/bsp_spi_flash.c ****   {
 434:Src/bsp_spi_flash.c ****     if ((SPITimeout--) == 0)
 435:Src/bsp_spi_flash.c ****       return SPI_TIMEOUT_UserCallback(1);
 436:Src/bsp_spi_flash.c ****   }
 437:Src/bsp_spi_flash.c **** 
 438:Src/bsp_spi_flash.c ****   /* 读取数据寄存器，获取接收缓冲区数据 */
 439:Src/bsp_spi_flash.c ****   return READ_REG(SpiHandle.Instance->DR);
 440:Src/bsp_spi_flash.c **** }
 441:Src/bsp_spi_flash.c **** 
 442:Src/bsp_spi_flash.c **** /*******************************************************************************
 443:Src/bsp_spi_flash.c ****  * Function Name  : SPI_FLASH_SendHalfWord
 444:Src/bsp_spi_flash.c ****  * Description    : Sends a Half Word through the SPI interface and return the
 445:Src/bsp_spi_flash.c ****  *                  Half Word received from the SPI bus.
 446:Src/bsp_spi_flash.c ****  * Input          : Half Word : Half Word to send.
 447:Src/bsp_spi_flash.c ****  * Output         : None
 448:Src/bsp_spi_flash.c ****  * Return         : The value of the received Half Word.
 449:Src/bsp_spi_flash.c ****  *******************************************************************************/
 450:Src/bsp_spi_flash.c **** uint16_t SPI_FLASH_SendHalfWord(uint16_t HalfWord)
 451:Src/bsp_spi_flash.c **** {
 452:Src/bsp_spi_flash.c **** 
 453:Src/bsp_spi_flash.c ****   SPITimeout = SPIT_FLAG_TIMEOUT;
 454:Src/bsp_spi_flash.c **** 
 455:Src/bsp_spi_flash.c ****   /* Loop while DR register in not emplty */
 456:Src/bsp_spi_flash.c ****   while (__HAL_SPI_GET_FLAG(&SpiHandle, SPI_FLAG_TXE) == RESET)
 457:Src/bsp_spi_flash.c ****   {
 458:Src/bsp_spi_flash.c ****     if ((SPITimeout--) == 0)
 459:Src/bsp_spi_flash.c ****       return SPI_TIMEOUT_UserCallback(2);
 460:Src/bsp_spi_flash.c ****   }
 461:Src/bsp_spi_flash.c **** 
 462:Src/bsp_spi_flash.c ****   /* Send Half Word through the SPIx peripheral */
 463:Src/bsp_spi_flash.c ****   WRITE_REG(SpiHandle.Instance->DR, HalfWord);
 464:Src/bsp_spi_flash.c **** 
 465:Src/bsp_spi_flash.c ****   SPITimeout = SPIT_FLAG_TIMEOUT;
 466:Src/bsp_spi_flash.c **** 
 467:Src/bsp_spi_flash.c ****   /* Wait to receive a Half Word */
 468:Src/bsp_spi_flash.c ****   while (__HAL_SPI_GET_FLAG(&SpiHandle, SPI_FLAG_RXNE) == RESET)
 469:Src/bsp_spi_flash.c ****   {
 470:Src/bsp_spi_flash.c ****     if ((SPITimeout--) == 0)
 471:Src/bsp_spi_flash.c ****       return SPI_TIMEOUT_UserCallback(3);
 472:Src/bsp_spi_flash.c ****   }
 473:Src/bsp_spi_flash.c ****   /* Return the Half Word read from the SPI bus */
 474:Src/bsp_spi_flash.c ****   return READ_REG(SpiHandle.Instance->DR);
 475:Src/bsp_spi_flash.c **** }
ARM GAS  /tmp/ccD2Fa0Q.s 			page 10


 476:Src/bsp_spi_flash.c **** 
 477:Src/bsp_spi_flash.c **** /**
 478:Src/bsp_spi_flash.c ****  * @brief  向FLASH发送 写使能 命令
 479:Src/bsp_spi_flash.c ****  * @param  none
 480:Src/bsp_spi_flash.c ****  * @retval none
 481:Src/bsp_spi_flash.c ****  */
 482:Src/bsp_spi_flash.c **** void SPI_FLASH_WriteEnable(void)
 483:Src/bsp_spi_flash.c **** {
 484:Src/bsp_spi_flash.c ****   /* 通讯开始：CS低 */
 485:Src/bsp_spi_flash.c ****   SPI_FLASH_CS_LOW();
 486:Src/bsp_spi_flash.c **** 
 487:Src/bsp_spi_flash.c ****   /* 发送写使能命令*/
 488:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte(W25X_WriteEnable);
 489:Src/bsp_spi_flash.c **** 
 490:Src/bsp_spi_flash.c ****   /*通讯结束：CS高 */
 491:Src/bsp_spi_flash.c ****   SPI_FLASH_CS_HIGH();
 492:Src/bsp_spi_flash.c **** }
 493:Src/bsp_spi_flash.c **** 
 494:Src/bsp_spi_flash.c **** /**
 495:Src/bsp_spi_flash.c ****  * @brief  等待WIP(BUSY)标志被置0，即等待到FLASH内部数据写入完毕
 496:Src/bsp_spi_flash.c ****  * @param  none
 497:Src/bsp_spi_flash.c ****  * @retval none
 498:Src/bsp_spi_flash.c ****  */
 499:Src/bsp_spi_flash.c **** void SPI_FLASH_WaitForWriteEnd(void)
 500:Src/bsp_spi_flash.c **** {
 501:Src/bsp_spi_flash.c ****   uint8_t FLASH_Status = 0;
 502:Src/bsp_spi_flash.c **** 
 503:Src/bsp_spi_flash.c ****   /* 选择 FLASH: CS 低 */
 504:Src/bsp_spi_flash.c ****   SPI_FLASH_CS_LOW();
 505:Src/bsp_spi_flash.c **** 
 506:Src/bsp_spi_flash.c ****   /* 发送 读状态寄存器 命令 */
 507:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte(W25X_ReadStatusReg);
 508:Src/bsp_spi_flash.c **** 
 509:Src/bsp_spi_flash.c ****   SPITimeout = SPIT_FLAG_TIMEOUT;
 510:Src/bsp_spi_flash.c ****   /* 若FLASH忙碌，则等待 */
 511:Src/bsp_spi_flash.c ****   do
 512:Src/bsp_spi_flash.c ****   {
 513:Src/bsp_spi_flash.c ****     /* 读取FLASH芯片的状态寄存器 */
 514:Src/bsp_spi_flash.c ****     FLASH_Status = SPI_FLASH_SendByte(Dummy_Byte);
 515:Src/bsp_spi_flash.c **** 
 516:Src/bsp_spi_flash.c ****     {
 517:Src/bsp_spi_flash.c ****       if ((SPITimeout--) == 0)
 518:Src/bsp_spi_flash.c ****       {
 519:Src/bsp_spi_flash.c ****         SPI_TIMEOUT_UserCallback(4);
 520:Src/bsp_spi_flash.c ****         return;
 521:Src/bsp_spi_flash.c ****       }
 522:Src/bsp_spi_flash.c ****     }
 523:Src/bsp_spi_flash.c ****   } while ((FLASH_Status & WIP_Flag) == SET); /* 正在写入标志 */
 524:Src/bsp_spi_flash.c **** 
 525:Src/bsp_spi_flash.c ****   /* 停止信号  FLASH: CS 高 */
 526:Src/bsp_spi_flash.c ****   SPI_FLASH_CS_HIGH();
 527:Src/bsp_spi_flash.c **** }
 528:Src/bsp_spi_flash.c **** 
 529:Src/bsp_spi_flash.c **** //进入掉电模式
 530:Src/bsp_spi_flash.c **** void SPI_Flash_PowerDown(void)
 531:Src/bsp_spi_flash.c **** {
 532:Src/bsp_spi_flash.c ****   /* 选择 FLASH: CS 低 */
ARM GAS  /tmp/ccD2Fa0Q.s 			page 11


 533:Src/bsp_spi_flash.c ****   SPI_FLASH_CS_LOW();
 534:Src/bsp_spi_flash.c **** 
 535:Src/bsp_spi_flash.c ****   /* 发送 掉电 命令 */
 536:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte(W25X_PowerDown);
 537:Src/bsp_spi_flash.c **** 
 538:Src/bsp_spi_flash.c ****   /* 停止信号  FLASH: CS 高 */
 539:Src/bsp_spi_flash.c ****   SPI_FLASH_CS_HIGH();
 540:Src/bsp_spi_flash.c **** }
 541:Src/bsp_spi_flash.c **** 
 542:Src/bsp_spi_flash.c **** //唤醒
 543:Src/bsp_spi_flash.c **** void SPI_Flash_WAKEUP(void)
 544:Src/bsp_spi_flash.c **** {
 545:Src/bsp_spi_flash.c ****   /*选择 FLASH: CS 低 */
 546:Src/bsp_spi_flash.c ****   SPI_FLASH_CS_LOW();
 547:Src/bsp_spi_flash.c **** 
 548:Src/bsp_spi_flash.c ****   /* 发上 上电 命令 */
 549:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte(W25X_ReleasePowerDown);
 550:Src/bsp_spi_flash.c **** 
 551:Src/bsp_spi_flash.c ****   /* 停止信号 FLASH: CS 高 */
 552:Src/bsp_spi_flash.c ****   SPI_FLASH_CS_HIGH(); //等待TRES1
 553:Src/bsp_spi_flash.c **** }
 554:Src/bsp_spi_flash.c **** 
 555:Src/bsp_spi_flash.c **** /**
 556:Src/bsp_spi_flash.c ****  * @brief  等待超时回调函数
 557:Src/bsp_spi_flash.c ****  * @param  None.
 558:Src/bsp_spi_flash.c ****  * @retval None.
 559:Src/bsp_spi_flash.c ****  */
 560:Src/bsp_spi_flash.c **** static uint16_t SPI_TIMEOUT_UserCallback(uint8_t errorCode)
 561:Src/bsp_spi_flash.c **** {
  32              		.loc 1 561 1 view -0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36              		.loc 1 561 1 is_stmt 0 view .LVU1
  37 0000 08B5     		push	{r3, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 3, -8
  41              		.cfi_offset 14, -4
  42 0002 0146     		mov	r1, r0
 562:Src/bsp_spi_flash.c ****   /* 等待超时后的处理,输出错误信息 */
 563:Src/bsp_spi_flash.c ****   FLASH_ERROR("SPI 等待超时!errorCode = %d", errorCode);
  43              		.loc 1 563 3 is_stmt 1 view .LVU2
  44 0004 0248     		ldr	r0, .L3
  45              	.LVL1:
  46              		.loc 1 563 3 is_stmt 0 view .LVU3
  47 0006 FFF7FEFF 		bl	printf
  48              	.LVL2:
 564:Src/bsp_spi_flash.c ****   return 0;
  49              		.loc 1 564 3 is_stmt 1 view .LVU4
 565:Src/bsp_spi_flash.c **** }
  50              		.loc 1 565 1 is_stmt 0 view .LVU5
  51 000a 0020     		movs	r0, #0
  52 000c 08BD     		pop	{r3, pc}
  53              	.L4:
  54 000e 00BF     		.align	2
  55              	.L3:
ARM GAS  /tmp/ccD2Fa0Q.s 			page 12


  56 0010 00000000 		.word	.LC0
  57              		.cfi_endproc
  58              	.LFE85:
  60              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
  61              		.align	1
  62              		.global	HAL_SPI_MspInit
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  66              		.fpu softvfp
  68              	HAL_SPI_MspInit:
  69              	.LVL3:
  70              	.LFB68:
  35:Src/bsp_spi_flash.c ****   GPIO_InitTypeDef GPIO_InitStruct;
  71              		.loc 1 35 1 is_stmt 1 view -0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 40
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  35:Src/bsp_spi_flash.c ****   GPIO_InitTypeDef GPIO_InitStruct;
  75              		.loc 1 35 1 is_stmt 0 view .LVU7
  76 0000 30B5     		push	{r4, r5, lr}
  77              	.LCFI1:
  78              		.cfi_def_cfa_offset 12
  79              		.cfi_offset 4, -12
  80              		.cfi_offset 5, -8
  81              		.cfi_offset 14, -4
  82 0002 8BB0     		sub	sp, sp, #44
  83              	.LCFI2:
  84              		.cfi_def_cfa_offset 56
  36:Src/bsp_spi_flash.c **** 
  85              		.loc 1 36 3 is_stmt 1 view .LVU8
  40:Src/bsp_spi_flash.c ****   SPIx_MISO_GPIO_CLK_ENABLE();
  86              		.loc 1 40 3 view .LVU9
  87              	.LBB2:
  40:Src/bsp_spi_flash.c ****   SPIx_MISO_GPIO_CLK_ENABLE();
  88              		.loc 1 40 3 view .LVU10
  40:Src/bsp_spi_flash.c ****   SPIx_MISO_GPIO_CLK_ENABLE();
  89              		.loc 1 40 3 view .LVU11
  90 0004 274B     		ldr	r3, .L7
  91 0006 9A69     		ldr	r2, [r3, #24]
  92 0008 42F00402 		orr	r2, r2, #4
  93 000c 9A61     		str	r2, [r3, #24]
  40:Src/bsp_spi_flash.c ****   SPIx_MISO_GPIO_CLK_ENABLE();
  94              		.loc 1 40 3 view .LVU12
  95 000e 9A69     		ldr	r2, [r3, #24]
  96 0010 02F00402 		and	r2, r2, #4
  97 0014 0192     		str	r2, [sp, #4]
  40:Src/bsp_spi_flash.c ****   SPIx_MISO_GPIO_CLK_ENABLE();
  98              		.loc 1 40 3 view .LVU13
  99 0016 019A     		ldr	r2, [sp, #4]
 100              	.LBE2:
  40:Src/bsp_spi_flash.c ****   SPIx_MISO_GPIO_CLK_ENABLE();
 101              		.loc 1 40 3 view .LVU14
  41:Src/bsp_spi_flash.c ****   SPIx_MOSI_GPIO_CLK_ENABLE();
 102              		.loc 1 41 3 view .LVU15
 103              	.LBB3:
  41:Src/bsp_spi_flash.c ****   SPIx_MOSI_GPIO_CLK_ENABLE();
ARM GAS  /tmp/ccD2Fa0Q.s 			page 13


 104              		.loc 1 41 3 view .LVU16
  41:Src/bsp_spi_flash.c ****   SPIx_MOSI_GPIO_CLK_ENABLE();
 105              		.loc 1 41 3 view .LVU17
 106 0018 9A69     		ldr	r2, [r3, #24]
 107 001a 42F00402 		orr	r2, r2, #4
 108 001e 9A61     		str	r2, [r3, #24]
  41:Src/bsp_spi_flash.c ****   SPIx_MOSI_GPIO_CLK_ENABLE();
 109              		.loc 1 41 3 view .LVU18
 110 0020 9A69     		ldr	r2, [r3, #24]
 111 0022 02F00402 		and	r2, r2, #4
 112 0026 0292     		str	r2, [sp, #8]
  41:Src/bsp_spi_flash.c ****   SPIx_MOSI_GPIO_CLK_ENABLE();
 113              		.loc 1 41 3 view .LVU19
 114 0028 029A     		ldr	r2, [sp, #8]
 115              	.LBE3:
  41:Src/bsp_spi_flash.c ****   SPIx_MOSI_GPIO_CLK_ENABLE();
 116              		.loc 1 41 3 view .LVU20
  42:Src/bsp_spi_flash.c ****   SPIx_CS_GPIO_CLK_ENABLE();
 117              		.loc 1 42 3 view .LVU21
 118              	.LBB4:
  42:Src/bsp_spi_flash.c ****   SPIx_CS_GPIO_CLK_ENABLE();
 119              		.loc 1 42 3 view .LVU22
  42:Src/bsp_spi_flash.c ****   SPIx_CS_GPIO_CLK_ENABLE();
 120              		.loc 1 42 3 view .LVU23
 121 002a 9A69     		ldr	r2, [r3, #24]
 122 002c 42F00402 		orr	r2, r2, #4
 123 0030 9A61     		str	r2, [r3, #24]
  42:Src/bsp_spi_flash.c ****   SPIx_CS_GPIO_CLK_ENABLE();
 124              		.loc 1 42 3 view .LVU24
 125 0032 9A69     		ldr	r2, [r3, #24]
 126 0034 02F00402 		and	r2, r2, #4
 127 0038 0392     		str	r2, [sp, #12]
  42:Src/bsp_spi_flash.c ****   SPIx_CS_GPIO_CLK_ENABLE();
 128              		.loc 1 42 3 view .LVU25
 129 003a 039A     		ldr	r2, [sp, #12]
 130              	.LBE4:
  42:Src/bsp_spi_flash.c ****   SPIx_CS_GPIO_CLK_ENABLE();
 131              		.loc 1 42 3 view .LVU26
  43:Src/bsp_spi_flash.c ****   /* Enable SPI clock */
 132              		.loc 1 43 3 view .LVU27
 133              	.LBB5:
  43:Src/bsp_spi_flash.c ****   /* Enable SPI clock */
 134              		.loc 1 43 3 view .LVU28
  43:Src/bsp_spi_flash.c ****   /* Enable SPI clock */
 135              		.loc 1 43 3 view .LVU29
 136 003c 9A69     		ldr	r2, [r3, #24]
 137 003e 42F00402 		orr	r2, r2, #4
 138 0042 9A61     		str	r2, [r3, #24]
  43:Src/bsp_spi_flash.c ****   /* Enable SPI clock */
 139              		.loc 1 43 3 view .LVU30
 140 0044 9A69     		ldr	r2, [r3, #24]
 141 0046 02F00402 		and	r2, r2, #4
 142 004a 0492     		str	r2, [sp, #16]
  43:Src/bsp_spi_flash.c ****   /* Enable SPI clock */
 143              		.loc 1 43 3 view .LVU31
 144 004c 049A     		ldr	r2, [sp, #16]
 145              	.LBE5:
ARM GAS  /tmp/ccD2Fa0Q.s 			page 14


  43:Src/bsp_spi_flash.c ****   /* Enable SPI clock */
 146              		.loc 1 43 3 view .LVU32
  45:Src/bsp_spi_flash.c **** 
 147              		.loc 1 45 3 view .LVU33
 148              	.LBB6:
  45:Src/bsp_spi_flash.c **** 
 149              		.loc 1 45 3 view .LVU34
  45:Src/bsp_spi_flash.c **** 
 150              		.loc 1 45 3 view .LVU35
 151 004e 9A69     		ldr	r2, [r3, #24]
 152 0050 42F48052 		orr	r2, r2, #4096
 153 0054 9A61     		str	r2, [r3, #24]
  45:Src/bsp_spi_flash.c **** 
 154              		.loc 1 45 3 view .LVU36
 155 0056 9B69     		ldr	r3, [r3, #24]
 156 0058 03F48053 		and	r3, r3, #4096
 157 005c 0593     		str	r3, [sp, #20]
  45:Src/bsp_spi_flash.c **** 
 158              		.loc 1 45 3 view .LVU37
 159 005e 059B     		ldr	r3, [sp, #20]
 160              	.LBE6:
  45:Src/bsp_spi_flash.c **** 
 161              		.loc 1 45 3 view .LVU38
  49:Src/bsp_spi_flash.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 162              		.loc 1 49 3 view .LVU39
  49:Src/bsp_spi_flash.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 163              		.loc 1 49 23 is_stmt 0 view .LVU40
 164 0060 2023     		movs	r3, #32
 165 0062 0693     		str	r3, [sp, #24]
  50:Src/bsp_spi_flash.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 166              		.loc 1 50 3 is_stmt 1 view .LVU41
  50:Src/bsp_spi_flash.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 167              		.loc 1 50 24 is_stmt 0 view .LVU42
 168 0064 0223     		movs	r3, #2
 169 0066 0793     		str	r3, [sp, #28]
  51:Src/bsp_spi_flash.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 170              		.loc 1 51 3 is_stmt 1 view .LVU43
  51:Src/bsp_spi_flash.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 171              		.loc 1 51 24 is_stmt 0 view .LVU44
 172 0068 0125     		movs	r5, #1
 173 006a 0895     		str	r5, [sp, #32]
  52:Src/bsp_spi_flash.c **** 
 174              		.loc 1 52 3 is_stmt 1 view .LVU45
  52:Src/bsp_spi_flash.c **** 
 175              		.loc 1 52 25 is_stmt 0 view .LVU46
 176 006c 0323     		movs	r3, #3
 177 006e 0993     		str	r3, [sp, #36]
  54:Src/bsp_spi_flash.c **** 
 178              		.loc 1 54 3 is_stmt 1 view .LVU47
 179 0070 0D4C     		ldr	r4, .L7+4
 180 0072 06A9     		add	r1, sp, #24
 181 0074 2046     		mov	r0, r4
 182              	.LVL4:
  54:Src/bsp_spi_flash.c **** 
 183              		.loc 1 54 3 is_stmt 0 view .LVU48
 184 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 185              	.LVL5:
ARM GAS  /tmp/ccD2Fa0Q.s 			page 15


  57:Src/bsp_spi_flash.c ****   HAL_GPIO_Init(SPIx_MISO_GPIO_PORT, &GPIO_InitStruct);
 186              		.loc 1 57 3 is_stmt 1 view .LVU49
  57:Src/bsp_spi_flash.c ****   HAL_GPIO_Init(SPIx_MISO_GPIO_PORT, &GPIO_InitStruct);
 187              		.loc 1 57 23 is_stmt 0 view .LVU50
 188 007a 4023     		movs	r3, #64
 189 007c 0693     		str	r3, [sp, #24]
  58:Src/bsp_spi_flash.c **** 
 190              		.loc 1 58 3 is_stmt 1 view .LVU51
 191 007e 06A9     		add	r1, sp, #24
 192 0080 2046     		mov	r0, r4
 193 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 194              	.LVL6:
  61:Src/bsp_spi_flash.c ****   HAL_GPIO_Init(SPIx_MOSI_GPIO_PORT, &GPIO_InitStruct);
 195              		.loc 1 61 3 view .LVU52
  61:Src/bsp_spi_flash.c ****   HAL_GPIO_Init(SPIx_MOSI_GPIO_PORT, &GPIO_InitStruct);
 196              		.loc 1 61 23 is_stmt 0 view .LVU53
 197 0086 8023     		movs	r3, #128
 198 0088 0693     		str	r3, [sp, #24]
  62:Src/bsp_spi_flash.c **** 
 199              		.loc 1 62 3 is_stmt 1 view .LVU54
 200 008a 06A9     		add	r1, sp, #24
 201 008c 2046     		mov	r0, r4
 202 008e FFF7FEFF 		bl	HAL_GPIO_Init
 203              	.LVL7:
  64:Src/bsp_spi_flash.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 204              		.loc 1 64 3 view .LVU55
  64:Src/bsp_spi_flash.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 205              		.loc 1 64 23 is_stmt 0 view .LVU56
 206 0092 1023     		movs	r3, #16
 207 0094 0693     		str	r3, [sp, #24]
  65:Src/bsp_spi_flash.c ****   HAL_GPIO_Init(FLASH_CS_GPIO_PORT, &GPIO_InitStruct);
 208              		.loc 1 65 3 is_stmt 1 view .LVU57
  65:Src/bsp_spi_flash.c ****   HAL_GPIO_Init(FLASH_CS_GPIO_PORT, &GPIO_InitStruct);
 209              		.loc 1 65 24 is_stmt 0 view .LVU58
 210 0096 0795     		str	r5, [sp, #28]
  66:Src/bsp_spi_flash.c **** }
 211              		.loc 1 66 3 is_stmt 1 view .LVU59
 212 0098 06A9     		add	r1, sp, #24
 213 009a 2046     		mov	r0, r4
 214 009c FFF7FEFF 		bl	HAL_GPIO_Init
 215              	.LVL8:
  67:Src/bsp_spi_flash.c **** 
 216              		.loc 1 67 1 is_stmt 0 view .LVU60
 217 00a0 0BB0     		add	sp, sp, #44
 218              	.LCFI3:
 219              		.cfi_def_cfa_offset 12
 220              		@ sp needed
 221 00a2 30BD     		pop	{r4, r5, pc}
 222              	.L8:
 223              		.align	2
 224              	.L7:
 225 00a4 00100240 		.word	1073876992
 226 00a8 00080140 		.word	1073809408
 227              		.cfi_endproc
 228              	.LFE68:
 230              		.section	.text.SPI_FLASH_Init,"ax",%progbits
 231              		.align	1
ARM GAS  /tmp/ccD2Fa0Q.s 			page 16


 232              		.global	SPI_FLASH_Init
 233              		.syntax unified
 234              		.thumb
 235              		.thumb_func
 236              		.fpu softvfp
 238              	SPI_FLASH_Init:
 239              	.LFB69:
  70:Src/bsp_spi_flash.c ****   /*##-1- Configure the SPI peripheral #######################################*/
 240              		.loc 1 70 1 is_stmt 1 view -0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244 0000 10B5     		push	{r4, lr}
 245              	.LCFI4:
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 4, -8
 248              		.cfi_offset 14, -4
  73:Src/bsp_spi_flash.c ****   SpiHandle.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 249              		.loc 1 73 3 view .LVU62
  73:Src/bsp_spi_flash.c ****   SpiHandle.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 250              		.loc 1 73 22 is_stmt 0 view .LVU63
 251 0002 104C     		ldr	r4, .L11
 252 0004 104B     		ldr	r3, .L11+4
 253 0006 2360     		str	r3, [r4]
  74:Src/bsp_spi_flash.c ****   SpiHandle.Init.Direction = SPI_DIRECTION_2LINES;
 254              		.loc 1 74 3 is_stmt 1 view .LVU64
  74:Src/bsp_spi_flash.c ****   SpiHandle.Init.Direction = SPI_DIRECTION_2LINES;
 255              		.loc 1 74 36 is_stmt 0 view .LVU65
 256 0008 0823     		movs	r3, #8
 257 000a E361     		str	r3, [r4, #28]
  75:Src/bsp_spi_flash.c ****   SpiHandle.Init.CLKPhase = SPI_PHASE_2EDGE;
 258              		.loc 1 75 3 is_stmt 1 view .LVU66
  75:Src/bsp_spi_flash.c ****   SpiHandle.Init.CLKPhase = SPI_PHASE_2EDGE;
 259              		.loc 1 75 28 is_stmt 0 view .LVU67
 260 000c 0023     		movs	r3, #0
 261 000e A360     		str	r3, [r4, #8]
  76:Src/bsp_spi_flash.c ****   SpiHandle.Init.CLKPolarity = SPI_POLARITY_HIGH;
 262              		.loc 1 76 3 is_stmt 1 view .LVU68
  76:Src/bsp_spi_flash.c ****   SpiHandle.Init.CLKPolarity = SPI_POLARITY_HIGH;
 263              		.loc 1 76 27 is_stmt 0 view .LVU69
 264 0010 0122     		movs	r2, #1
 265 0012 6261     		str	r2, [r4, #20]
  77:Src/bsp_spi_flash.c ****   SpiHandle.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 266              		.loc 1 77 3 is_stmt 1 view .LVU70
  77:Src/bsp_spi_flash.c ****   SpiHandle.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 267              		.loc 1 77 30 is_stmt 0 view .LVU71
 268 0014 0222     		movs	r2, #2
 269 0016 2261     		str	r2, [r4, #16]
  78:Src/bsp_spi_flash.c ****   SpiHandle.Init.CRCPolynomial = 7;
 270              		.loc 1 78 3 is_stmt 1 view .LVU72
  78:Src/bsp_spi_flash.c ****   SpiHandle.Init.CRCPolynomial = 7;
 271              		.loc 1 78 33 is_stmt 0 view .LVU73
 272 0018 A362     		str	r3, [r4, #40]
  79:Src/bsp_spi_flash.c ****   SpiHandle.Init.DataSize = SPI_DATASIZE_8BIT;
 273              		.loc 1 79 3 is_stmt 1 view .LVU74
  79:Src/bsp_spi_flash.c ****   SpiHandle.Init.DataSize = SPI_DATASIZE_8BIT;
 274              		.loc 1 79 32 is_stmt 0 view .LVU75
ARM GAS  /tmp/ccD2Fa0Q.s 			page 17


 275 001a 0722     		movs	r2, #7
 276 001c E262     		str	r2, [r4, #44]
  80:Src/bsp_spi_flash.c ****   SpiHandle.Init.FirstBit = SPI_FIRSTBIT_MSB;
 277              		.loc 1 80 3 is_stmt 1 view .LVU76
  80:Src/bsp_spi_flash.c ****   SpiHandle.Init.FirstBit = SPI_FIRSTBIT_MSB;
 278              		.loc 1 80 27 is_stmt 0 view .LVU77
 279 001e E360     		str	r3, [r4, #12]
  81:Src/bsp_spi_flash.c ****   SpiHandle.Init.NSS = SPI_NSS_SOFT;
 280              		.loc 1 81 3 is_stmt 1 view .LVU78
  81:Src/bsp_spi_flash.c ****   SpiHandle.Init.NSS = SPI_NSS_SOFT;
 281              		.loc 1 81 27 is_stmt 0 view .LVU79
 282 0020 2362     		str	r3, [r4, #32]
  82:Src/bsp_spi_flash.c ****   SpiHandle.Init.TIMode = SPI_TIMODE_DISABLE;
 283              		.loc 1 82 3 is_stmt 1 view .LVU80
  82:Src/bsp_spi_flash.c ****   SpiHandle.Init.TIMode = SPI_TIMODE_DISABLE;
 284              		.loc 1 82 22 is_stmt 0 view .LVU81
 285 0022 4FF40072 		mov	r2, #512
 286 0026 A261     		str	r2, [r4, #24]
  83:Src/bsp_spi_flash.c **** 
 287              		.loc 1 83 3 is_stmt 1 view .LVU82
  83:Src/bsp_spi_flash.c **** 
 288              		.loc 1 83 25 is_stmt 0 view .LVU83
 289 0028 6362     		str	r3, [r4, #36]
  85:Src/bsp_spi_flash.c **** 
 290              		.loc 1 85 3 is_stmt 1 view .LVU84
  85:Src/bsp_spi_flash.c **** 
 291              		.loc 1 85 23 is_stmt 0 view .LVU85
 292 002a 4FF48273 		mov	r3, #260
 293 002e 6360     		str	r3, [r4, #4]
  87:Src/bsp_spi_flash.c **** 
 294              		.loc 1 87 3 is_stmt 1 view .LVU86
 295 0030 2046     		mov	r0, r4
 296 0032 FFF7FEFF 		bl	HAL_SPI_Init
 297              	.LVL9:
  89:Src/bsp_spi_flash.c **** }
 298              		.loc 1 89 3 view .LVU87
 299 0036 2268     		ldr	r2, [r4]
 300 0038 1368     		ldr	r3, [r2]
 301 003a 43F04003 		orr	r3, r3, #64
 302 003e 1360     		str	r3, [r2]
  90:Src/bsp_spi_flash.c **** 
 303              		.loc 1 90 1 is_stmt 0 view .LVU88
 304 0040 10BD     		pop	{r4, pc}
 305              	.L12:
 306 0042 00BF     		.align	2
 307              	.L11:
 308 0044 00000000 		.word	SpiHandle
 309 0048 00300140 		.word	1073819648
 310              		.cfi_endproc
 311              	.LFE69:
 313              		.section	.text.SPI_FLASH_SendByte,"ax",%progbits
 314              		.align	1
 315              		.global	SPI_FLASH_SendByte
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 319              		.fpu softvfp
ARM GAS  /tmp/ccD2Fa0Q.s 			page 18


 321              	SPI_FLASH_SendByte:
 322              	.LVL10:
 323              	.LFB79:
 416:Src/bsp_spi_flash.c ****   SPITimeout = SPIT_FLAG_TIMEOUT;
 324              		.loc 1 416 1 is_stmt 1 view -0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 416:Src/bsp_spi_flash.c ****   SPITimeout = SPIT_FLAG_TIMEOUT;
 328              		.loc 1 416 1 is_stmt 0 view .LVU90
 329 0000 08B5     		push	{r3, lr}
 330              	.LCFI5:
 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 3, -8
 333              		.cfi_offset 14, -4
 417:Src/bsp_spi_flash.c **** 
 334              		.loc 1 417 3 is_stmt 1 view .LVU91
 417:Src/bsp_spi_flash.c **** 
 335              		.loc 1 417 14 is_stmt 0 view .LVU92
 336 0002 164B     		ldr	r3, .L22
 337 0004 4FF48052 		mov	r2, #4096
 338 0008 1A60     		str	r2, [r3]
 420:Src/bsp_spi_flash.c ****   {
 339              		.loc 1 420 3 is_stmt 1 view .LVU93
 340              	.L14:
 420:Src/bsp_spi_flash.c ****   {
 341              		.loc 1 420 9 view .LVU94
 420:Src/bsp_spi_flash.c ****   {
 342              		.loc 1 420 10 is_stmt 0 view .LVU95
 343 000a 154B     		ldr	r3, .L22+4
 344 000c 1B68     		ldr	r3, [r3]
 345 000e 9A68     		ldr	r2, [r3, #8]
 420:Src/bsp_spi_flash.c ****   {
 346              		.loc 1 420 9 view .LVU96
 347 0010 12F0020F 		tst	r2, #2
 348 0014 0AD1     		bne	.L20
 422:Src/bsp_spi_flash.c ****       return SPI_TIMEOUT_UserCallback(0);
 349              		.loc 1 422 5 is_stmt 1 view .LVU97
 422:Src/bsp_spi_flash.c ****       return SPI_TIMEOUT_UserCallback(0);
 350              		.loc 1 422 20 is_stmt 0 view .LVU98
 351 0016 114A     		ldr	r2, .L22
 352 0018 1368     		ldr	r3, [r2]
 353 001a 591E     		subs	r1, r3, #1
 354 001c 1160     		str	r1, [r2]
 422:Src/bsp_spi_flash.c ****       return SPI_TIMEOUT_UserCallback(0);
 355              		.loc 1 422 8 view .LVU99
 356 001e 002B     		cmp	r3, #0
 357 0020 F3D1     		bne	.L14
 423:Src/bsp_spi_flash.c ****   }
 358              		.loc 1 423 7 is_stmt 1 view .LVU100
 423:Src/bsp_spi_flash.c ****   }
 359              		.loc 1 423 14 is_stmt 0 view .LVU101
 360 0022 0020     		movs	r0, #0
 361              	.LVL11:
 423:Src/bsp_spi_flash.c ****   }
 362              		.loc 1 423 14 view .LVU102
 363 0024 FFF7FEFF 		bl	SPI_TIMEOUT_UserCallback
ARM GAS  /tmp/ccD2Fa0Q.s 			page 19


 364              	.LVL12:
 365 0028 C0B2     		uxtb	r0, r0
 366              	.L15:
 440:Src/bsp_spi_flash.c **** 
 367              		.loc 1 440 1 view .LVU103
 368 002a 08BD     		pop	{r3, pc}
 369              	.LVL13:
 370              	.L20:
 427:Src/bsp_spi_flash.c **** 
 371              		.loc 1 427 3 is_stmt 1 view .LVU104
 372 002c D860     		str	r0, [r3, #12]
 429:Src/bsp_spi_flash.c **** 
 373              		.loc 1 429 3 view .LVU105
 429:Src/bsp_spi_flash.c **** 
 374              		.loc 1 429 14 is_stmt 0 view .LVU106
 375 002e 0B4A     		ldr	r2, .L22
 376 0030 4FF48051 		mov	r1, #4096
 377 0034 1160     		str	r1, [r2]
 432:Src/bsp_spi_flash.c ****   {
 378              		.loc 1 432 3 is_stmt 1 view .LVU107
 379              	.LVL14:
 380              	.L17:
 432:Src/bsp_spi_flash.c ****   {
 381              		.loc 1 432 9 view .LVU108
 432:Src/bsp_spi_flash.c ****   {
 382              		.loc 1 432 10 is_stmt 0 view .LVU109
 383 0036 9A68     		ldr	r2, [r3, #8]
 432:Src/bsp_spi_flash.c ****   {
 384              		.loc 1 432 9 view .LVU110
 385 0038 12F0010F 		tst	r2, #1
 386 003c 0AD1     		bne	.L21
 434:Src/bsp_spi_flash.c ****       return SPI_TIMEOUT_UserCallback(1);
 387              		.loc 1 434 5 is_stmt 1 view .LVU111
 434:Src/bsp_spi_flash.c ****       return SPI_TIMEOUT_UserCallback(1);
 388              		.loc 1 434 20 is_stmt 0 view .LVU112
 389 003e 0749     		ldr	r1, .L22
 390 0040 0A68     		ldr	r2, [r1]
 391 0042 501E     		subs	r0, r2, #1
 392 0044 0860     		str	r0, [r1]
 434:Src/bsp_spi_flash.c ****       return SPI_TIMEOUT_UserCallback(1);
 393              		.loc 1 434 8 view .LVU113
 394 0046 002A     		cmp	r2, #0
 395 0048 F5D1     		bne	.L17
 435:Src/bsp_spi_flash.c ****   }
 396              		.loc 1 435 7 is_stmt 1 view .LVU114
 435:Src/bsp_spi_flash.c ****   }
 397              		.loc 1 435 14 is_stmt 0 view .LVU115
 398 004a 0120     		movs	r0, #1
 399 004c FFF7FEFF 		bl	SPI_TIMEOUT_UserCallback
 400              	.LVL15:
 401 0050 C0B2     		uxtb	r0, r0
 402 0052 EAE7     		b	.L15
 403              	.L21:
 439:Src/bsp_spi_flash.c **** }
 404              		.loc 1 439 3 is_stmt 1 view .LVU116
 439:Src/bsp_spi_flash.c **** }
 405              		.loc 1 439 10 is_stmt 0 view .LVU117
ARM GAS  /tmp/ccD2Fa0Q.s 			page 20


 406 0054 D868     		ldr	r0, [r3, #12]
 407 0056 C0B2     		uxtb	r0, r0
 408 0058 E7E7     		b	.L15
 409              	.L23:
 410 005a 00BF     		.align	2
 411              	.L22:
 412 005c 00000000 		.word	.LANCHOR0
 413 0060 00000000 		.word	SpiHandle
 414              		.cfi_endproc
 415              	.LFE79:
 417              		.section	.text.SPI_FLASH_BufferRead,"ax",%progbits
 418              		.align	1
 419              		.global	SPI_FLASH_BufferRead
 420              		.syntax unified
 421              		.thumb
 422              		.thumb_func
 423              		.fpu softvfp
 425              	SPI_FLASH_BufferRead:
 426              	.LVL16:
 427              	.LFB74:
 288:Src/bsp_spi_flash.c ****   /* 选择FLASH: CS低电平 */
 428              		.loc 1 288 1 is_stmt 1 view -0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 288:Src/bsp_spi_flash.c ****   /* 选择FLASH: CS低电平 */
 432              		.loc 1 288 1 is_stmt 0 view .LVU119
 433 0000 70B5     		push	{r4, r5, r6, lr}
 434              	.LCFI6:
 435              		.cfi_def_cfa_offset 16
 436              		.cfi_offset 4, -16
 437              		.cfi_offset 5, -12
 438              		.cfi_offset 6, -8
 439              		.cfi_offset 14, -4
 440 0002 0646     		mov	r6, r0
 441 0004 0C46     		mov	r4, r1
 442 0006 1546     		mov	r5, r2
 290:Src/bsp_spi_flash.c **** 
 443              		.loc 1 290 3 is_stmt 1 view .LVU120
 444 0008 0F4B     		ldr	r3, .L29
 445 000a 4FF48012 		mov	r2, #1048576
 446              	.LVL17:
 290:Src/bsp_spi_flash.c **** 
 447              		.loc 1 290 3 is_stmt 0 view .LVU121
 448 000e 1A61     		str	r2, [r3, #16]
 290:Src/bsp_spi_flash.c **** 
 449              		.loc 1 290 21 is_stmt 1 view .LVU122
 293:Src/bsp_spi_flash.c **** 
 450              		.loc 1 293 3 view .LVU123
 451 0010 0320     		movs	r0, #3
 452              	.LVL18:
 293:Src/bsp_spi_flash.c **** 
 453              		.loc 1 293 3 is_stmt 0 view .LVU124
 454 0012 FFF7FEFF 		bl	SPI_FLASH_SendByte
 455              	.LVL19:
 296:Src/bsp_spi_flash.c ****   /* 发送 读 地址中位 */
 456              		.loc 1 296 3 is_stmt 1 view .LVU125
ARM GAS  /tmp/ccD2Fa0Q.s 			page 21


 457 0016 C4F30740 		ubfx	r0, r4, #16, #8
 458 001a FFF7FEFF 		bl	SPI_FLASH_SendByte
 459              	.LVL20:
 298:Src/bsp_spi_flash.c ****   /* 发送 读 地址低位 */
 460              		.loc 1 298 3 view .LVU126
 461 001e C4F30720 		ubfx	r0, r4, #8, #8
 462 0022 FFF7FEFF 		bl	SPI_FLASH_SendByte
 463              	.LVL21:
 300:Src/bsp_spi_flash.c **** 
 464              		.loc 1 300 3 view .LVU127
 465 0026 E0B2     		uxtb	r0, r4
 466 0028 FFF7FEFF 		bl	SPI_FLASH_SendByte
 467              	.LVL22:
 303:Src/bsp_spi_flash.c ****   {
 468              		.loc 1 303 3 view .LVU128
 469              	.L25:
 303:Src/bsp_spi_flash.c ****   {
 470              		.loc 1 303 9 view .LVU129
 303:Src/bsp_spi_flash.c ****   {
 471              		.loc 1 303 23 is_stmt 0 view .LVU130
 472 002c 6B1E     		subs	r3, r5, #1
 473 002e 9CB2     		uxth	r4, r3
 474              	.LVL23:
 303:Src/bsp_spi_flash.c ****   {
 475              		.loc 1 303 9 view .LVU131
 476 0030 35B1     		cbz	r5, .L28
 306:Src/bsp_spi_flash.c ****     /* 指向下一个字节缓冲区 */
 477              		.loc 1 306 5 is_stmt 1 view .LVU132
 306:Src/bsp_spi_flash.c ****     /* 指向下一个字节缓冲区 */
 478              		.loc 1 306 16 is_stmt 0 view .LVU133
 479 0032 FF20     		movs	r0, #255
 480 0034 FFF7FEFF 		bl	SPI_FLASH_SendByte
 481              	.LVL24:
 306:Src/bsp_spi_flash.c ****     /* 指向下一个字节缓冲区 */
 482              		.loc 1 306 14 view .LVU134
 483 0038 06F8010B 		strb	r0, [r6], #1
 484              	.LVL25:
 308:Src/bsp_spi_flash.c ****   }
 485              		.loc 1 308 5 is_stmt 1 view .LVU135
 303:Src/bsp_spi_flash.c ****   {
 486              		.loc 1 303 23 is_stmt 0 view .LVU136
 487 003c 2546     		mov	r5, r4
 488 003e F5E7     		b	.L25
 489              	.L28:
 312:Src/bsp_spi_flash.c **** }
 490              		.loc 1 312 3 is_stmt 1 view .LVU137
 491 0040 014B     		ldr	r3, .L29
 492 0042 1022     		movs	r2, #16
 493 0044 1A61     		str	r2, [r3, #16]
 312:Src/bsp_spi_flash.c **** }
 494              		.loc 1 312 22 view .LVU138
 313:Src/bsp_spi_flash.c **** 
 495              		.loc 1 313 1 is_stmt 0 view .LVU139
 496 0046 70BD     		pop	{r4, r5, r6, pc}
 497              	.LVL26:
 498              	.L30:
 313:Src/bsp_spi_flash.c **** 
ARM GAS  /tmp/ccD2Fa0Q.s 			page 22


 499              		.loc 1 313 1 view .LVU140
 500              		.align	2
 501              	.L29:
 502 0048 00080140 		.word	1073809408
 503              		.cfi_endproc
 504              	.LFE74:
 506              		.section	.text.SPI_FLASH_ReadID,"ax",%progbits
 507              		.align	1
 508              		.global	SPI_FLASH_ReadID
 509              		.syntax unified
 510              		.thumb
 511              		.thumb_func
 512              		.fpu softvfp
 514              	SPI_FLASH_ReadID:
 515              	.LFB75:
 321:Src/bsp_spi_flash.c ****   uint32_t Temp = 0, Temp0 = 0, Temp1 = 0, Temp2 = 0;
 516              		.loc 1 321 1 is_stmt 1 view -0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 0
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520 0000 70B5     		push	{r4, r5, r6, lr}
 521              	.LCFI7:
 522              		.cfi_def_cfa_offset 16
 523              		.cfi_offset 4, -16
 524              		.cfi_offset 5, -12
 525              		.cfi_offset 6, -8
 526              		.cfi_offset 14, -4
 322:Src/bsp_spi_flash.c **** 
 527              		.loc 1 322 3 view .LVU142
 528              	.LVL27:
 325:Src/bsp_spi_flash.c **** 
 529              		.loc 1 325 3 view .LVU143
 530 0002 0C4E     		ldr	r6, .L33
 531 0004 4FF48013 		mov	r3, #1048576
 532 0008 3361     		str	r3, [r6, #16]
 325:Src/bsp_spi_flash.c **** 
 533              		.loc 1 325 21 view .LVU144
 328:Src/bsp_spi_flash.c **** 
 534              		.loc 1 328 3 view .LVU145
 535 000a 9F20     		movs	r0, #159
 536 000c FFF7FEFF 		bl	SPI_FLASH_SendByte
 537              	.LVL28:
 331:Src/bsp_spi_flash.c **** 
 538              		.loc 1 331 3 view .LVU146
 331:Src/bsp_spi_flash.c **** 
 539              		.loc 1 331 11 is_stmt 0 view .LVU147
 540 0010 FF20     		movs	r0, #255
 541 0012 FFF7FEFF 		bl	SPI_FLASH_SendByte
 542              	.LVL29:
 543 0016 0546     		mov	r5, r0
 544              	.LVL30:
 334:Src/bsp_spi_flash.c **** 
 545              		.loc 1 334 3 is_stmt 1 view .LVU148
 334:Src/bsp_spi_flash.c **** 
 546              		.loc 1 334 11 is_stmt 0 view .LVU149
 547 0018 FF20     		movs	r0, #255
 548              	.LVL31:
ARM GAS  /tmp/ccD2Fa0Q.s 			page 23


 334:Src/bsp_spi_flash.c **** 
 549              		.loc 1 334 11 view .LVU150
 550 001a FFF7FEFF 		bl	SPI_FLASH_SendByte
 551              	.LVL32:
 552 001e 0446     		mov	r4, r0
 553              	.LVL33:
 337:Src/bsp_spi_flash.c **** 
 554              		.loc 1 337 3 is_stmt 1 view .LVU151
 337:Src/bsp_spi_flash.c **** 
 555              		.loc 1 337 11 is_stmt 0 view .LVU152
 556 0020 FF20     		movs	r0, #255
 557              	.LVL34:
 337:Src/bsp_spi_flash.c **** 
 558              		.loc 1 337 11 view .LVU153
 559 0022 FFF7FEFF 		bl	SPI_FLASH_SendByte
 560              	.LVL35:
 340:Src/bsp_spi_flash.c **** 
 561              		.loc 1 340 3 is_stmt 1 view .LVU154
 562 0026 1023     		movs	r3, #16
 563 0028 3361     		str	r3, [r6, #16]
 340:Src/bsp_spi_flash.c **** 
 564              		.loc 1 340 22 view .LVU155
 343:Src/bsp_spi_flash.c **** 
 565              		.loc 1 343 3 view .LVU156
 343:Src/bsp_spi_flash.c **** 
 566              		.loc 1 343 33 is_stmt 0 view .LVU157
 567 002a 2402     		lsls	r4, r4, #8
 568              	.LVL36:
 343:Src/bsp_spi_flash.c **** 
 569              		.loc 1 343 24 view .LVU158
 570 002c 44EA0544 		orr	r4, r4, r5, lsl #16
 571              	.LVL37:
 345:Src/bsp_spi_flash.c **** }
 572              		.loc 1 345 3 is_stmt 1 view .LVU159
 346:Src/bsp_spi_flash.c **** 
 573              		.loc 1 346 1 is_stmt 0 view .LVU160
 574 0030 2043     		orrs	r0, r0, r4
 575              	.LVL38:
 346:Src/bsp_spi_flash.c **** 
 576              		.loc 1 346 1 view .LVU161
 577 0032 70BD     		pop	{r4, r5, r6, pc}
 578              	.LVL39:
 579              	.L34:
 346:Src/bsp_spi_flash.c **** 
 580              		.loc 1 346 1 view .LVU162
 581              		.align	2
 582              	.L33:
 583 0034 00080140 		.word	1073809408
 584              		.cfi_endproc
 585              	.LFE75:
 587              		.section	.text.SPI_FLASH_ReadDeviceID,"ax",%progbits
 588              		.align	1
 589              		.global	SPI_FLASH_ReadDeviceID
 590              		.syntax unified
 591              		.thumb
 592              		.thumb_func
 593              		.fpu softvfp
ARM GAS  /tmp/ccD2Fa0Q.s 			page 24


 595              	SPI_FLASH_ReadDeviceID:
 596              	.LFB76:
 354:Src/bsp_spi_flash.c ****   uint32_t Temp = 0;
 597              		.loc 1 354 1 is_stmt 1 view -0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 0, uses_anonymous_args = 0
 601 0000 10B5     		push	{r4, lr}
 602              	.LCFI8:
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 4, -8
 605              		.cfi_offset 14, -4
 355:Src/bsp_spi_flash.c **** 
 606              		.loc 1 355 3 view .LVU164
 607              	.LVL40:
 358:Src/bsp_spi_flash.c **** 
 608              		.loc 1 358 3 view .LVU165
 609 0002 0B4C     		ldr	r4, .L37
 610 0004 4FF48013 		mov	r3, #1048576
 611 0008 2361     		str	r3, [r4, #16]
 358:Src/bsp_spi_flash.c **** 
 612              		.loc 1 358 21 view .LVU166
 361:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte(Dummy_Byte);
 613              		.loc 1 361 3 view .LVU167
 614 000a AB20     		movs	r0, #171
 615 000c FFF7FEFF 		bl	SPI_FLASH_SendByte
 616              	.LVL41:
 362:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte(Dummy_Byte);
 617              		.loc 1 362 3 view .LVU168
 618 0010 FF20     		movs	r0, #255
 619 0012 FFF7FEFF 		bl	SPI_FLASH_SendByte
 620              	.LVL42:
 363:Src/bsp_spi_flash.c ****   SPI_FLASH_SendByte(Dummy_Byte);
 621              		.loc 1 363 3 view .LVU169
 622 0016 FF20     		movs	r0, #255
 623 0018 FFF7FEFF 		bl	SPI_FLASH_SendByte
 624              	.LVL43:
 364:Src/bsp_spi_flash.c **** 
 625              		.loc 1 364 3 view .LVU170
 626 001c FF20     		movs	r0, #255
 627 001e FFF7FEFF 		bl	SPI_FLASH_SendByte
 628              	.LVL44:
 367:Src/bsp_spi_flash.c **** 
 629              		.loc 1 367 3 view .LVU171
 367:Src/bsp_spi_flash.c **** 
 630              		.loc 1 367 10 is_stmt 0 view .LVU172
 631 0022 FF20     		movs	r0, #255
 632 0024 FFF7FEFF 		bl	SPI_FLASH_SendByte
 633              	.LVL45:
 370:Src/bsp_spi_flash.c **** 
 634              		.loc 1 370 3 is_stmt 1 view .LVU173
 635 0028 1023     		movs	r3, #16
 636 002a 2361     		str	r3, [r4, #16]
 370:Src/bsp_spi_flash.c **** 
 637              		.loc 1 370 22 view .LVU174
 372:Src/bsp_spi_flash.c **** }
 638              		.loc 1 372 3 view .LVU175
ARM GAS  /tmp/ccD2Fa0Q.s 			page 25


 373:Src/bsp_spi_flash.c **** /*******************************************************************************
 639              		.loc 1 373 1 is_stmt 0 view .LVU176
 640 002c 10BD     		pop	{r4, pc}
 641              	.L38:
 642 002e 00BF     		.align	2
 643              	.L37:
 644 0030 00080140 		.word	1073809408
 645              		.cfi_endproc
 646              	.LFE76:
 648              		.section	.text.SPI_FLASH_StartReadSequence,"ax",%progbits
 649              		.align	1
 650              		.global	SPI_FLASH_StartReadSequence
 651              		.syntax unified
 652              		.thumb
 653              		.thumb_func
 654              		.fpu softvfp
 656              	SPI_FLASH_StartReadSequence:
 657              	.LVL46:
 658              	.LFB77:
 387:Src/bsp_spi_flash.c ****   /* Select the FLASH: Chip Select low */
 659              		.loc 1 387 1 is_stmt 1 view -0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 0
 662              		@ frame_needed = 0, uses_anonymous_args = 0
 387:Src/bsp_spi_flash.c ****   /* Select the FLASH: Chip Select low */
 663              		.loc 1 387 1 is_stmt 0 view .LVU178
 664 0000 10B5     		push	{r4, lr}
 665              	.LCFI9:
 666              		.cfi_def_cfa_offset 8
 667              		.cfi_offset 4, -8
 668              		.cfi_offset 14, -4
 669 0002 0446     		mov	r4, r0
 389:Src/bsp_spi_flash.c **** 
 670              		.loc 1 389 3 is_stmt 1 view .LVU179
 671 0004 094B     		ldr	r3, .L41
 672 0006 4FF48012 		mov	r2, #1048576
 673 000a 1A61     		str	r2, [r3, #16]
 389:Src/bsp_spi_flash.c **** 
 674              		.loc 1 389 21 view .LVU180
 392:Src/bsp_spi_flash.c **** 
 675              		.loc 1 392 3 view .LVU181
 676 000c 0320     		movs	r0, #3
 677              	.LVL47:
 392:Src/bsp_spi_flash.c **** 
 678              		.loc 1 392 3 is_stmt 0 view .LVU182
 679 000e FFF7FEFF 		bl	SPI_FLASH_SendByte
 680              	.LVL48:
 396:Src/bsp_spi_flash.c ****   /* Send ReadAddr medium nibble address byte */
 681              		.loc 1 396 3 is_stmt 1 view .LVU183
 682 0012 C4F30740 		ubfx	r0, r4, #16, #8
 683 0016 FFF7FEFF 		bl	SPI_FLASH_SendByte
 684              	.LVL49:
 398:Src/bsp_spi_flash.c ****   /* Send ReadAddr low nibble address byte */
 685              		.loc 1 398 3 view .LVU184
 686 001a C4F30720 		ubfx	r0, r4, #8, #8
 687 001e FFF7FEFF 		bl	SPI_FLASH_SendByte
 688              	.LVL50:
ARM GAS  /tmp/ccD2Fa0Q.s 			page 26


 400:Src/bsp_spi_flash.c **** }
 689              		.loc 1 400 3 view .LVU185
 690 0022 E0B2     		uxtb	r0, r4
 691 0024 FFF7FEFF 		bl	SPI_FLASH_SendByte
 692              	.LVL51:
 401:Src/bsp_spi_flash.c **** 
 693              		.loc 1 401 1 is_stmt 0 view .LVU186
 694 0028 10BD     		pop	{r4, pc}
 695              	.LVL52:
 696              	.L42:
 401:Src/bsp_spi_flash.c **** 
 697              		.loc 1 401 1 view .LVU187
 698 002a 00BF     		.align	2
 699              	.L41:
 700 002c 00080140 		.word	1073809408
 701              		.cfi_endproc
 702              	.LFE77:
 704              		.section	.text.SPI_FLASH_ReadByte,"ax",%progbits
 705              		.align	1
 706              		.global	SPI_FLASH_ReadByte
 707              		.syntax unified
 708              		.thumb
 709              		.thumb_func
 710              		.fpu softvfp
 712              	SPI_FLASH_ReadByte:
 713              	.LFB78:
 408:Src/bsp_spi_flash.c **** 
 714              		.loc 1 408 34 is_stmt 1 view -0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 0
 717              		@ frame_needed = 0, uses_anonymous_args = 0
 718 0000 08B5     		push	{r3, lr}
 719              	.LCFI10:
 720              		.cfi_def_cfa_offset 8
 721              		.cfi_offset 3, -8
 722              		.cfi_offset 14, -4
 408:Src/bsp_spi_flash.c **** 
 723              		.loc 1 408 36 view .LVU189
 408:Src/bsp_spi_flash.c **** 
 724              		.loc 1 408 44 is_stmt 0 view .LVU190
 725 0002 FF20     		movs	r0, #255
 726 0004 FFF7FEFF 		bl	SPI_FLASH_SendByte
 727              	.LVL53:
 408:Src/bsp_spi_flash.c **** 
 728              		.loc 1 408 1 view .LVU191
 729 0008 08BD     		pop	{r3, pc}
 730              		.cfi_endproc
 731              	.LFE78:
 733              		.section	.text.SPI_FLASH_SendHalfWord,"ax",%progbits
 734              		.align	1
 735              		.global	SPI_FLASH_SendHalfWord
 736              		.syntax unified
 737              		.thumb
 738              		.thumb_func
 739              		.fpu softvfp
 741              	SPI_FLASH_SendHalfWord:
 742              	.LVL54:
ARM GAS  /tmp/ccD2Fa0Q.s 			page 27


 743              	.LFB80:
 451:Src/bsp_spi_flash.c **** 
 744              		.loc 1 451 1 is_stmt 1 view -0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
 451:Src/bsp_spi_flash.c **** 
 748              		.loc 1 451 1 is_stmt 0 view .LVU193
 749 0000 08B5     		push	{r3, lr}
 750              	.LCFI11:
 751              		.cfi_def_cfa_offset 8
 752              		.cfi_offset 3, -8
 753              		.cfi_offset 14, -4
 453:Src/bsp_spi_flash.c **** 
 754              		.loc 1 453 3 is_stmt 1 view .LVU194
 453:Src/bsp_spi_flash.c **** 
 755              		.loc 1 453 14 is_stmt 0 view .LVU195
 756 0002 154B     		ldr	r3, .L54
 757 0004 4FF48052 		mov	r2, #4096
 758 0008 1A60     		str	r2, [r3]
 456:Src/bsp_spi_flash.c ****   {
 759              		.loc 1 456 3 is_stmt 1 view .LVU196
 760              	.L46:
 456:Src/bsp_spi_flash.c ****   {
 761              		.loc 1 456 9 view .LVU197
 456:Src/bsp_spi_flash.c ****   {
 762              		.loc 1 456 10 is_stmt 0 view .LVU198
 763 000a 144B     		ldr	r3, .L54+4
 764 000c 1B68     		ldr	r3, [r3]
 765 000e 9A68     		ldr	r2, [r3, #8]
 456:Src/bsp_spi_flash.c ****   {
 766              		.loc 1 456 9 view .LVU199
 767 0010 12F0020F 		tst	r2, #2
 768 0014 09D1     		bne	.L52
 458:Src/bsp_spi_flash.c ****       return SPI_TIMEOUT_UserCallback(2);
 769              		.loc 1 458 5 is_stmt 1 view .LVU200
 458:Src/bsp_spi_flash.c ****       return SPI_TIMEOUT_UserCallback(2);
 770              		.loc 1 458 20 is_stmt 0 view .LVU201
 771 0016 104A     		ldr	r2, .L54
 772 0018 1368     		ldr	r3, [r2]
 773 001a 591E     		subs	r1, r3, #1
 774 001c 1160     		str	r1, [r2]
 458:Src/bsp_spi_flash.c ****       return SPI_TIMEOUT_UserCallback(2);
 775              		.loc 1 458 8 view .LVU202
 776 001e 002B     		cmp	r3, #0
 777 0020 F3D1     		bne	.L46
 459:Src/bsp_spi_flash.c ****   }
 778              		.loc 1 459 7 is_stmt 1 view .LVU203
 459:Src/bsp_spi_flash.c ****   }
 779              		.loc 1 459 14 is_stmt 0 view .LVU204
 780 0022 0220     		movs	r0, #2
 781              	.LVL55:
 459:Src/bsp_spi_flash.c ****   }
 782              		.loc 1 459 14 view .LVU205
 783 0024 FFF7FEFF 		bl	SPI_TIMEOUT_UserCallback
 784              	.LVL56:
 785              	.L47:
ARM GAS  /tmp/ccD2Fa0Q.s 			page 28


 475:Src/bsp_spi_flash.c **** 
 786              		.loc 1 475 1 view .LVU206
 787 0028 08BD     		pop	{r3, pc}
 788              	.LVL57:
 789              	.L52:
 463:Src/bsp_spi_flash.c **** 
 790              		.loc 1 463 3 is_stmt 1 view .LVU207
 791 002a D860     		str	r0, [r3, #12]
 465:Src/bsp_spi_flash.c **** 
 792              		.loc 1 465 3 view .LVU208
 465:Src/bsp_spi_flash.c **** 
 793              		.loc 1 465 14 is_stmt 0 view .LVU209
 794 002c 0A4A     		ldr	r2, .L54
 795 002e 4FF48051 		mov	r1, #4096
 796 0032 1160     		str	r1, [r2]
 468:Src/bsp_spi_flash.c ****   {
 797              		.loc 1 468 3 is_stmt 1 view .LVU210
 798              	.LVL58:
 799              	.L49:
 468:Src/bsp_spi_flash.c ****   {
 800              		.loc 1 468 9 view .LVU211
 468:Src/bsp_spi_flash.c ****   {
 801              		.loc 1 468 10 is_stmt 0 view .LVU212
 802 0034 9A68     		ldr	r2, [r3, #8]
 468:Src/bsp_spi_flash.c ****   {
 803              		.loc 1 468 9 view .LVU213
 804 0036 12F0010F 		tst	r2, #1
 805 003a 09D1     		bne	.L53
 470:Src/bsp_spi_flash.c ****       return SPI_TIMEOUT_UserCallback(3);
 806              		.loc 1 470 5 is_stmt 1 view .LVU214
 470:Src/bsp_spi_flash.c ****       return SPI_TIMEOUT_UserCallback(3);
 807              		.loc 1 470 20 is_stmt 0 view .LVU215
 808 003c 0649     		ldr	r1, .L54
 809 003e 0A68     		ldr	r2, [r1]
 810 0040 501E     		subs	r0, r2, #1
 811 0042 0860     		str	r0, [r1]
 470:Src/bsp_spi_flash.c ****       return SPI_TIMEOUT_UserCallback(3);
 812              		.loc 1 470 8 view .LVU216
 813 0044 002A     		cmp	r2, #0
 814 0046 F5D1     		bne	.L49
 471:Src/bsp_spi_flash.c ****   }
 815              		.loc 1 471 7 is_stmt 1 view .LVU217
 471:Src/bsp_spi_flash.c ****   }
 816              		.loc 1 471 14 is_stmt 0 view .LVU218
 817 0048 0320     		movs	r0, #3
 818 004a FFF7FEFF 		bl	SPI_TIMEOUT_UserCallback
 819              	.LVL59:
 820 004e EBE7     		b	.L47
 821              	.L53:
 474:Src/bsp_spi_flash.c **** }
 822              		.loc 1 474 3 is_stmt 1 view .LVU219
 474:Src/bsp_spi_flash.c **** }
 823              		.loc 1 474 10 is_stmt 0 view .LVU220
 824 0050 D868     		ldr	r0, [r3, #12]
 825 0052 80B2     		uxth	r0, r0
 826 0054 E8E7     		b	.L47
 827              	.L55:
ARM GAS  /tmp/ccD2Fa0Q.s 			page 29


 828 0056 00BF     		.align	2
 829              	.L54:
 830 0058 00000000 		.word	.LANCHOR0
 831 005c 00000000 		.word	SpiHandle
 832              		.cfi_endproc
 833              	.LFE80:
 835              		.section	.text.SPI_FLASH_WriteEnable,"ax",%progbits
 836              		.align	1
 837              		.global	SPI_FLASH_WriteEnable
 838              		.syntax unified
 839              		.thumb
 840              		.thumb_func
 841              		.fpu softvfp
 843              	SPI_FLASH_WriteEnable:
 844              	.LFB81:
 483:Src/bsp_spi_flash.c ****   /* 通讯开始：CS低 */
 845              		.loc 1 483 1 is_stmt 1 view -0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849 0000 10B5     		push	{r4, lr}
 850              	.LCFI12:
 851              		.cfi_def_cfa_offset 8
 852              		.cfi_offset 4, -8
 853              		.cfi_offset 14, -4
 485:Src/bsp_spi_flash.c **** 
 854              		.loc 1 485 3 view .LVU222
 855 0002 054C     		ldr	r4, .L58
 856 0004 4FF48013 		mov	r3, #1048576
 857 0008 2361     		str	r3, [r4, #16]
 485:Src/bsp_spi_flash.c **** 
 858              		.loc 1 485 21 view .LVU223
 488:Src/bsp_spi_flash.c **** 
 859              		.loc 1 488 3 view .LVU224
 860 000a 0620     		movs	r0, #6
 861 000c FFF7FEFF 		bl	SPI_FLASH_SendByte
 862              	.LVL60:
 491:Src/bsp_spi_flash.c **** }
 863              		.loc 1 491 3 view .LVU225
 864 0010 1023     		movs	r3, #16
 865 0012 2361     		str	r3, [r4, #16]
 491:Src/bsp_spi_flash.c **** }
 866              		.loc 1 491 22 view .LVU226
 492:Src/bsp_spi_flash.c **** 
 867              		.loc 1 492 1 is_stmt 0 view .LVU227
 868 0014 10BD     		pop	{r4, pc}
 869              	.L59:
 870 0016 00BF     		.align	2
 871              	.L58:
 872 0018 00080140 		.word	1073809408
 873              		.cfi_endproc
 874              	.LFE81:
 876              		.section	.text.SPI_FLASH_WaitForWriteEnd,"ax",%progbits
 877              		.align	1
 878              		.global	SPI_FLASH_WaitForWriteEnd
 879              		.syntax unified
 880              		.thumb
ARM GAS  /tmp/ccD2Fa0Q.s 			page 30


 881              		.thumb_func
 882              		.fpu softvfp
 884              	SPI_FLASH_WaitForWriteEnd:
 885              	.LFB82:
 500:Src/bsp_spi_flash.c ****   uint8_t FLASH_Status = 0;
 886              		.loc 1 500 1 is_stmt 1 view -0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 0
 889              		@ frame_needed = 0, uses_anonymous_args = 0
 890 0000 08B5     		push	{r3, lr}
 891              	.LCFI13:
 892              		.cfi_def_cfa_offset 8
 893              		.cfi_offset 3, -8
 894              		.cfi_offset 14, -4
 501:Src/bsp_spi_flash.c **** 
 895              		.loc 1 501 3 view .LVU229
 896              	.LVL61:
 504:Src/bsp_spi_flash.c **** 
 897              		.loc 1 504 3 view .LVU230
 898 0002 0F4B     		ldr	r3, .L66
 899 0004 4FF48012 		mov	r2, #1048576
 900 0008 1A61     		str	r2, [r3, #16]
 504:Src/bsp_spi_flash.c **** 
 901              		.loc 1 504 21 view .LVU231
 507:Src/bsp_spi_flash.c **** 
 902              		.loc 1 507 3 view .LVU232
 903 000a 0520     		movs	r0, #5
 904 000c FFF7FEFF 		bl	SPI_FLASH_SendByte
 905              	.LVL62:
 509:Src/bsp_spi_flash.c ****   /* 若FLASH忙碌，则等待 */
 906              		.loc 1 509 3 view .LVU233
 509:Src/bsp_spi_flash.c ****   /* 若FLASH忙碌，则等待 */
 907              		.loc 1 509 14 is_stmt 0 view .LVU234
 908 0010 0C4B     		ldr	r3, .L66+4
 909 0012 4FF48052 		mov	r2, #4096
 910 0016 1A60     		str	r2, [r3]
 911              	.LVL63:
 912              	.L63:
 511:Src/bsp_spi_flash.c ****   {
 913              		.loc 1 511 3 is_stmt 1 view .LVU235
 514:Src/bsp_spi_flash.c **** 
 914              		.loc 1 514 5 view .LVU236
 514:Src/bsp_spi_flash.c **** 
 915              		.loc 1 514 20 is_stmt 0 view .LVU237
 916 0018 FF20     		movs	r0, #255
 917 001a FFF7FEFF 		bl	SPI_FLASH_SendByte
 918              	.LVL64:
 517:Src/bsp_spi_flash.c ****       {
 919              		.loc 1 517 7 is_stmt 1 view .LVU238
 517:Src/bsp_spi_flash.c ****       {
 920              		.loc 1 517 22 is_stmt 0 view .LVU239
 921 001e 094A     		ldr	r2, .L66+4
 922 0020 1368     		ldr	r3, [r2]
 923 0022 591E     		subs	r1, r3, #1
 924 0024 1160     		str	r1, [r2]
 517:Src/bsp_spi_flash.c ****       {
 925              		.loc 1 517 10 view .LVU240
ARM GAS  /tmp/ccD2Fa0Q.s 			page 31


 926 0026 33B1     		cbz	r3, .L65
 523:Src/bsp_spi_flash.c **** 
 927              		.loc 1 523 11 is_stmt 1 view .LVU241
 523:Src/bsp_spi_flash.c **** 
 928              		.loc 1 523 3 is_stmt 0 view .LVU242
 929 0028 10F0010F 		tst	r0, #1
 930 002c F4D1     		bne	.L63
 526:Src/bsp_spi_flash.c **** }
 931              		.loc 1 526 3 is_stmt 1 view .LVU243
 932 002e 044B     		ldr	r3, .L66
 933 0030 1022     		movs	r2, #16
 934 0032 1A61     		str	r2, [r3, #16]
 526:Src/bsp_spi_flash.c **** }
 935              		.loc 1 526 22 view .LVU244
 936 0034 02E0     		b	.L60
 937              	.L65:
 519:Src/bsp_spi_flash.c ****         return;
 938              		.loc 1 519 9 view .LVU245
 939 0036 0420     		movs	r0, #4
 940              	.LVL65:
 519:Src/bsp_spi_flash.c ****         return;
 941              		.loc 1 519 9 is_stmt 0 view .LVU246
 942 0038 FFF7FEFF 		bl	SPI_TIMEOUT_UserCallback
 943              	.LVL66:
 520:Src/bsp_spi_flash.c ****       }
 944              		.loc 1 520 9 is_stmt 1 view .LVU247
 945              	.L60:
 527:Src/bsp_spi_flash.c **** 
 946              		.loc 1 527 1 is_stmt 0 view .LVU248
 947 003c 08BD     		pop	{r3, pc}
 948              	.L67:
 949 003e 00BF     		.align	2
 950              	.L66:
 951 0040 00080140 		.word	1073809408
 952 0044 00000000 		.word	.LANCHOR0
 953              		.cfi_endproc
 954              	.LFE82:
 956              		.section	.text.SPI_FLASH_SectorErase,"ax",%progbits
 957              		.align	1
 958              		.global	SPI_FLASH_SectorErase
 959              		.syntax unified
 960              		.thumb
 961              		.thumb_func
 962              		.fpu softvfp
 964              	SPI_FLASH_SectorErase:
 965              	.LVL67:
 966              	.LFB70:
  98:Src/bsp_spi_flash.c ****   /* 发送FLASH写使能命令 */
 967              		.loc 1 98 1 is_stmt 1 view -0
 968              		.cfi_startproc
 969              		@ args = 0, pretend = 0, frame = 0
 970              		@ frame_needed = 0, uses_anonymous_args = 0
  98:Src/bsp_spi_flash.c ****   /* 发送FLASH写使能命令 */
 971              		.loc 1 98 1 is_stmt 0 view .LVU250
 972 0000 38B5     		push	{r3, r4, r5, lr}
 973              	.LCFI14:
 974              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccD2Fa0Q.s 			page 32


 975              		.cfi_offset 3, -16
 976              		.cfi_offset 4, -12
 977              		.cfi_offset 5, -8
 978              		.cfi_offset 14, -4
 979 0002 0446     		mov	r4, r0
 100:Src/bsp_spi_flash.c ****   SPI_FLASH_WaitForWriteEnd();
 980              		.loc 1 100 3 is_stmt 1 view .LVU251
 981 0004 FFF7FEFF 		bl	SPI_FLASH_WriteEnable
 982              	.LVL68:
 101:Src/bsp_spi_flash.c ****   /* 擦除扇区 */
 983              		.loc 1 101 3 view .LVU252
 984 0008 FFF7FEFF 		bl	SPI_FLASH_WaitForWriteEnd
 985              	.LVL69:
 104:Src/bsp_spi_flash.c ****   /* 发送扇区擦除指令*/
 986              		.loc 1 104 3 view .LVU253
 987 000c 0B4D     		ldr	r5, .L70
 988 000e 4FF48013 		mov	r3, #1048576
 989 0012 2B61     		str	r3, [r5, #16]
 104:Src/bsp_spi_flash.c ****   /* 发送扇区擦除指令*/
 990              		.loc 1 104 21 view .LVU254
 106:Src/bsp_spi_flash.c ****   /*发送擦除扇区地址的高位*/
 991              		.loc 1 106 3 view .LVU255
 992 0014 2020     		movs	r0, #32
 993 0016 FFF7FEFF 		bl	SPI_FLASH_SendByte
 994              	.LVL70:
 108:Src/bsp_spi_flash.c ****   /* 发送擦除扇区地址的中位 */
 995              		.loc 1 108 3 view .LVU256
 996 001a C4F30740 		ubfx	r0, r4, #16, #8
 997 001e FFF7FEFF 		bl	SPI_FLASH_SendByte
 998              	.LVL71:
 110:Src/bsp_spi_flash.c ****   /* 发送擦除扇区地址的低位 */
 999              		.loc 1 110 3 view .LVU257
 1000 0022 C4F30720 		ubfx	r0, r4, #8, #8
 1001 0026 FFF7FEFF 		bl	SPI_FLASH_SendByte
 1002              	.LVL72:
 112:Src/bsp_spi_flash.c ****   /* 停止信号 FLASH: CS 高电平 */
 1003              		.loc 1 112 3 view .LVU258
 1004 002a E0B2     		uxtb	r0, r4
 1005 002c FFF7FEFF 		bl	SPI_FLASH_SendByte
 1006              	.LVL73:
 114:Src/bsp_spi_flash.c ****   /* 等待擦除完毕*/
 1007              		.loc 1 114 3 view .LVU259
 1008 0030 1023     		movs	r3, #16
 1009 0032 2B61     		str	r3, [r5, #16]
 114:Src/bsp_spi_flash.c ****   /* 等待擦除完毕*/
 1010              		.loc 1 114 22 view .LVU260
 116:Src/bsp_spi_flash.c **** }
 1011              		.loc 1 116 3 view .LVU261
 1012 0034 FFF7FEFF 		bl	SPI_FLASH_WaitForWriteEnd
 1013              	.LVL74:
 117:Src/bsp_spi_flash.c **** 
 1014              		.loc 1 117 1 is_stmt 0 view .LVU262
 1015 0038 38BD     		pop	{r3, r4, r5, pc}
 1016              	.LVL75:
 1017              	.L71:
 117:Src/bsp_spi_flash.c **** 
 1018              		.loc 1 117 1 view .LVU263
ARM GAS  /tmp/ccD2Fa0Q.s 			page 33


 1019 003a 00BF     		.align	2
 1020              	.L70:
 1021 003c 00080140 		.word	1073809408
 1022              		.cfi_endproc
 1023              	.LFE70:
 1025              		.section	.text.SPI_FLASH_BulkErase,"ax",%progbits
 1026              		.align	1
 1027              		.global	SPI_FLASH_BulkErase
 1028              		.syntax unified
 1029              		.thumb
 1030              		.thumb_func
 1031              		.fpu softvfp
 1033              	SPI_FLASH_BulkErase:
 1034              	.LFB71:
 125:Src/bsp_spi_flash.c ****   /* 发送FLASH写使能命令 */
 1035              		.loc 1 125 1 is_stmt 1 view -0
 1036              		.cfi_startproc
 1037              		@ args = 0, pretend = 0, frame = 0
 1038              		@ frame_needed = 0, uses_anonymous_args = 0
 1039 0000 10B5     		push	{r4, lr}
 1040              	.LCFI15:
 1041              		.cfi_def_cfa_offset 8
 1042              		.cfi_offset 4, -8
 1043              		.cfi_offset 14, -4
 127:Src/bsp_spi_flash.c **** 
 1044              		.loc 1 127 3 view .LVU265
 1045 0002 FFF7FEFF 		bl	SPI_FLASH_WriteEnable
 1046              	.LVL76:
 131:Src/bsp_spi_flash.c ****   /* 发送整块擦除指令*/
 1047              		.loc 1 131 3 view .LVU266
 1048 0006 064C     		ldr	r4, .L74
 1049 0008 4FF48013 		mov	r3, #1048576
 1050 000c 2361     		str	r3, [r4, #16]
 131:Src/bsp_spi_flash.c ****   /* 发送整块擦除指令*/
 1051              		.loc 1 131 21 view .LVU267
 133:Src/bsp_spi_flash.c ****   /* 停止信号 FLASH: CS 高电平 */
 1052              		.loc 1 133 3 view .LVU268
 1053 000e C720     		movs	r0, #199
 1054 0010 FFF7FEFF 		bl	SPI_FLASH_SendByte
 1055              	.LVL77:
 135:Src/bsp_spi_flash.c **** 
 1056              		.loc 1 135 3 view .LVU269
 1057 0014 1023     		movs	r3, #16
 1058 0016 2361     		str	r3, [r4, #16]
 135:Src/bsp_spi_flash.c **** 
 1059              		.loc 1 135 22 view .LVU270
 138:Src/bsp_spi_flash.c **** }
 1060              		.loc 1 138 3 view .LVU271
 1061 0018 FFF7FEFF 		bl	SPI_FLASH_WaitForWriteEnd
 1062              	.LVL78:
 139:Src/bsp_spi_flash.c **** 
 1063              		.loc 1 139 1 is_stmt 0 view .LVU272
 1064 001c 10BD     		pop	{r4, pc}
 1065              	.L75:
 1066 001e 00BF     		.align	2
 1067              	.L74:
 1068 0020 00080140 		.word	1073809408
ARM GAS  /tmp/ccD2Fa0Q.s 			page 34


 1069              		.cfi_endproc
 1070              	.LFE71:
 1072              		.section	.rodata.SPI_FLASH_PageWrite.str1.4,"aMS",%progbits,1
 1073              		.align	2
 1074              	.LC1:
 1075 0000 3C3C2D46 		.ascii	"<<-FLASH-ERROR->> SPI_FLASH_PageWrite too large!\000"
 1075      4C415348 
 1075      2D455252 
 1075      4F522D3E 
 1075      3E205350 
 1076              		.section	.text.SPI_FLASH_PageWrite,"ax",%progbits
 1077              		.align	1
 1078              		.global	SPI_FLASH_PageWrite
 1079              		.syntax unified
 1080              		.thumb
 1081              		.thumb_func
 1082              		.fpu softvfp
 1084              	SPI_FLASH_PageWrite:
 1085              	.LVL79:
 1086              	.LFB72:
 149:Src/bsp_spi_flash.c ****   /* 发送FLASH写使能命令 */
 1087              		.loc 1 149 1 is_stmt 1 view -0
 1088              		.cfi_startproc
 1089              		@ args = 0, pretend = 0, frame = 0
 1090              		@ frame_needed = 0, uses_anonymous_args = 0
 149:Src/bsp_spi_flash.c ****   /* 发送FLASH写使能命令 */
 1091              		.loc 1 149 1 is_stmt 0 view .LVU274
 1092 0000 70B5     		push	{r4, r5, r6, lr}
 1093              	.LCFI16:
 1094              		.cfi_def_cfa_offset 16
 1095              		.cfi_offset 4, -16
 1096              		.cfi_offset 5, -12
 1097              		.cfi_offset 6, -8
 1098              		.cfi_offset 14, -4
 1099 0002 0646     		mov	r6, r0
 1100 0004 0C46     		mov	r4, r1
 1101 0006 1546     		mov	r5, r2
 151:Src/bsp_spi_flash.c **** 
 1102              		.loc 1 151 3 is_stmt 1 view .LVU275
 1103 0008 FFF7FEFF 		bl	SPI_FLASH_WriteEnable
 1104              	.LVL80:
 154:Src/bsp_spi_flash.c ****   /* 写页写指令*/
 1105              		.loc 1 154 3 view .LVU276
 1106 000c 144B     		ldr	r3, .L83
 1107 000e 4FF48012 		mov	r2, #1048576
 1108 0012 1A61     		str	r2, [r3, #16]
 154:Src/bsp_spi_flash.c ****   /* 写页写指令*/
 1109              		.loc 1 154 21 view .LVU277
 156:Src/bsp_spi_flash.c ****   /*发送写地址的高位*/
 1110              		.loc 1 156 3 view .LVU278
 1111 0014 0220     		movs	r0, #2
 1112 0016 FFF7FEFF 		bl	SPI_FLASH_SendByte
 1113              	.LVL81:
 158:Src/bsp_spi_flash.c ****   /*发送写地址的中位*/
 1114              		.loc 1 158 3 view .LVU279
 1115 001a C4F30740 		ubfx	r0, r4, #16, #8
 1116 001e FFF7FEFF 		bl	SPI_FLASH_SendByte
ARM GAS  /tmp/ccD2Fa0Q.s 			page 35


 1117              	.LVL82:
 160:Src/bsp_spi_flash.c ****   /*发送写地址的低位*/
 1118              		.loc 1 160 3 view .LVU280
 1119 0022 C4F30720 		ubfx	r0, r4, #8, #8
 1120 0026 FFF7FEFF 		bl	SPI_FLASH_SendByte
 1121              	.LVL83:
 162:Src/bsp_spi_flash.c **** 
 1122              		.loc 1 162 3 view .LVU281
 1123 002a E0B2     		uxtb	r0, r4
 1124 002c FFF7FEFF 		bl	SPI_FLASH_SendByte
 1125              	.LVL84:
 164:Src/bsp_spi_flash.c ****   {
 1126              		.loc 1 164 3 view .LVU282
 164:Src/bsp_spi_flash.c ****   {
 1127              		.loc 1 164 6 is_stmt 0 view .LVU283
 1128 0030 B5F5807F 		cmp	r5, #256
 1129 0034 08D8     		bhi	.L81
 1130              	.LVL85:
 1131              	.L78:
 171:Src/bsp_spi_flash.c ****   {
 1132              		.loc 1 171 9 is_stmt 1 view .LVU284
 171:Src/bsp_spi_flash.c ****   {
 1133              		.loc 1 171 24 is_stmt 0 view .LVU285
 1134 0036 6B1E     		subs	r3, r5, #1
 1135 0038 9CB2     		uxth	r4, r3
 1136              	.LVL86:
 171:Src/bsp_spi_flash.c ****   {
 1137              		.loc 1 171 9 view .LVU286
 1138 003a 5DB1     		cbz	r5, .L82
 174:Src/bsp_spi_flash.c ****     /* 指向下一字节数据 */
 1139              		.loc 1 174 5 is_stmt 1 view .LVU287
 1140 003c 16F8010B 		ldrb	r0, [r6], #1	@ zero_extendqisi2
 1141              	.LVL87:
 174:Src/bsp_spi_flash.c ****     /* 指向下一字节数据 */
 1142              		.loc 1 174 5 is_stmt 0 view .LVU288
 1143 0040 FFF7FEFF 		bl	SPI_FLASH_SendByte
 1144              	.LVL88:
 176:Src/bsp_spi_flash.c ****   }
 1145              		.loc 1 176 5 is_stmt 1 view .LVU289
 171:Src/bsp_spi_flash.c ****   {
 1146              		.loc 1 171 24 is_stmt 0 view .LVU290
 1147 0044 2546     		mov	r5, r4
 1148 0046 F6E7     		b	.L78
 1149              	.LVL89:
 1150              	.L81:
 166:Src/bsp_spi_flash.c ****     FLASH_ERROR("SPI_FLASH_PageWrite too large!");
 1151              		.loc 1 166 5 is_stmt 1 view .LVU291
 167:Src/bsp_spi_flash.c ****   }
 1152              		.loc 1 167 5 view .LVU292
 1153 0048 0648     		ldr	r0, .L83+4
 1154 004a FFF7FEFF 		bl	puts
 1155              	.LVL90:
 166:Src/bsp_spi_flash.c ****     FLASH_ERROR("SPI_FLASH_PageWrite too large!");
 1156              		.loc 1 166 20 is_stmt 0 view .LVU293
 1157 004e 4FF48075 		mov	r5, #256
 1158 0052 F0E7     		b	.L78
 1159              	.LVL91:
ARM GAS  /tmp/ccD2Fa0Q.s 			page 36


 1160              	.L82:
 180:Src/bsp_spi_flash.c **** 
 1161              		.loc 1 180 3 is_stmt 1 view .LVU294
 1162 0054 024B     		ldr	r3, .L83
 1163 0056 1022     		movs	r2, #16
 1164 0058 1A61     		str	r2, [r3, #16]
 180:Src/bsp_spi_flash.c **** 
 1165              		.loc 1 180 22 view .LVU295
 183:Src/bsp_spi_flash.c **** }
 1166              		.loc 1 183 3 view .LVU296
 1167 005a FFF7FEFF 		bl	SPI_FLASH_WaitForWriteEnd
 1168              	.LVL92:
 184:Src/bsp_spi_flash.c **** 
 1169              		.loc 1 184 1 is_stmt 0 view .LVU297
 1170 005e 70BD     		pop	{r4, r5, r6, pc}
 1171              	.LVL93:
 1172              	.L84:
 184:Src/bsp_spi_flash.c **** 
 1173              		.loc 1 184 1 view .LVU298
 1174              		.align	2
 1175              	.L83:
 1176 0060 00080140 		.word	1073809408
 1177 0064 00000000 		.word	.LC1
 1178              		.cfi_endproc
 1179              	.LFE72:
 1181              		.section	.text.SPI_FLASH_BufferWrite,"ax",%progbits
 1182              		.align	1
 1183              		.global	SPI_FLASH_BufferWrite
 1184              		.syntax unified
 1185              		.thumb
 1186              		.thumb_func
 1187              		.fpu softvfp
 1189              	SPI_FLASH_BufferWrite:
 1190              	.LVL94:
 1191              	.LFB73:
 194:Src/bsp_spi_flash.c ****   uint8_t NumOfPage = 0, NumOfSingle = 0, Addr = 0, count = 0, temp = 0;
 1192              		.loc 1 194 1 is_stmt 1 view -0
 1193              		.cfi_startproc
 1194              		@ args = 0, pretend = 0, frame = 0
 1195              		@ frame_needed = 0, uses_anonymous_args = 0
 194:Src/bsp_spi_flash.c ****   uint8_t NumOfPage = 0, NumOfSingle = 0, Addr = 0, count = 0, temp = 0;
 1196              		.loc 1 194 1 is_stmt 0 view .LVU300
 1197 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1198              	.LCFI17:
 1199              		.cfi_def_cfa_offset 32
 1200              		.cfi_offset 3, -32
 1201              		.cfi_offset 4, -28
 1202              		.cfi_offset 5, -24
 1203              		.cfi_offset 6, -20
 1204              		.cfi_offset 7, -16
 1205              		.cfi_offset 8, -12
 1206              		.cfi_offset 9, -8
 1207              		.cfi_offset 14, -4
 1208 0004 0546     		mov	r5, r0
 1209 0006 0C46     		mov	r4, r1
 1210 0008 1746     		mov	r7, r2
 195:Src/bsp_spi_flash.c **** 
ARM GAS  /tmp/ccD2Fa0Q.s 			page 37


 1211              		.loc 1 195 3 is_stmt 1 view .LVU301
 1212              	.LVL95:
 198:Src/bsp_spi_flash.c **** 
 1213              		.loc 1 198 3 view .LVU302
 198:Src/bsp_spi_flash.c **** 
 1214              		.loc 1 198 8 is_stmt 0 view .LVU303
 1215 000a CBB2     		uxtb	r3, r1
 1216              	.LVL96:
 201:Src/bsp_spi_flash.c ****   /*计算出要写多少整数页*/
 1217              		.loc 1 201 3 is_stmt 1 view .LVU304
 203:Src/bsp_spi_flash.c ****   /*mod运算求余，计算出剩余不满一页的字节数*/
 1218              		.loc 1 203 3 view .LVU305
 203:Src/bsp_spi_flash.c ****   /*mod运算求余，计算出剩余不满一页的字节数*/
 1219              		.loc 1 203 13 is_stmt 0 view .LVU306
 1220 000c 110A     		lsrs	r1, r2, #8
 1221              	.LVL97:
 205:Src/bsp_spi_flash.c **** 
 1222              		.loc 1 205 3 is_stmt 1 view .LVU307
 208:Src/bsp_spi_flash.c ****   {
 1223              		.loc 1 208 3 view .LVU308
 208:Src/bsp_spi_flash.c ****   {
 1224              		.loc 1 208 6 is_stmt 0 view .LVU309
 1225 000e D3B9     		cbnz	r3, .L86
 211:Src/bsp_spi_flash.c ****     {
 1226              		.loc 1 211 5 is_stmt 1 view .LVU310
 211:Src/bsp_spi_flash.c ****     {
 1227              		.loc 1 211 8 is_stmt 0 view .LVU311
 1228 0010 71B9     		cbnz	r1, .L87
 213:Src/bsp_spi_flash.c ****     }
 1229              		.loc 1 213 7 is_stmt 1 view .LVU312
 1230 0012 2146     		mov	r1, r4
 1231              	.LVL98:
 213:Src/bsp_spi_flash.c ****     }
 1232              		.loc 1 213 7 is_stmt 0 view .LVU313
 1233 0014 FFF7FEFF 		bl	SPI_FLASH_PageWrite
 1234              	.LVL99:
 213:Src/bsp_spi_flash.c ****     }
 1235              		.loc 1 213 7 view .LVU314
 1236 0018 13E0     		b	.L85
 1237              	.LVL100:
 1238              	.L89:
 220:Src/bsp_spi_flash.c ****         WriteAddr += SPI_FLASH_PageSize;
 1239              		.loc 1 220 9 is_stmt 1 view .LVU315
 1240 001a 4FF48072 		mov	r2, #256
 1241 001e 2146     		mov	r1, r4
 1242 0020 2846     		mov	r0, r5
 1243 0022 FFF7FEFF 		bl	SPI_FLASH_PageWrite
 1244              	.LVL101:
 221:Src/bsp_spi_flash.c ****         pBuffer += SPI_FLASH_PageSize;
 1245              		.loc 1 221 9 view .LVU316
 221:Src/bsp_spi_flash.c ****         pBuffer += SPI_FLASH_PageSize;
 1246              		.loc 1 221 19 is_stmt 0 view .LVU317
 1247 0026 04F58074 		add	r4, r4, #256
 1248              	.LVL102:
 222:Src/bsp_spi_flash.c ****       }
 1249              		.loc 1 222 9 is_stmt 1 view .LVU318
 222:Src/bsp_spi_flash.c ****       }
ARM GAS  /tmp/ccD2Fa0Q.s 			page 38


 1250              		.loc 1 222 17 is_stmt 0 view .LVU319
 1251 002a 05F58075 		add	r5, r5, #256
 1252              	.LVL103:
 218:Src/bsp_spi_flash.c ****       {
 1253              		.loc 1 218 23 view .LVU320
 1254 002e 3146     		mov	r1, r6
 1255              	.LVL104:
 1256              	.L87:
 218:Src/bsp_spi_flash.c ****       {
 1257              		.loc 1 218 13 is_stmt 1 view .LVU321
 218:Src/bsp_spi_flash.c ****       {
 1258              		.loc 1 218 23 is_stmt 0 view .LVU322
 1259 0030 4B1E     		subs	r3, r1, #1
 1260 0032 DEB2     		uxtb	r6, r3
 1261              	.LVL105:
 218:Src/bsp_spi_flash.c ****       {
 1262              		.loc 1 218 13 view .LVU323
 1263 0034 0029     		cmp	r1, #0
 1264 0036 F0D1     		bne	.L89
 226:Src/bsp_spi_flash.c ****     }
 1265              		.loc 1 226 7 is_stmt 1 view .LVU324
 1266 0038 FAB2     		uxtb	r2, r7
 1267 003a 2146     		mov	r1, r4
 1268 003c 2846     		mov	r0, r5
 1269 003e FFF7FEFF 		bl	SPI_FLASH_PageWrite
 1270              	.LVL106:
 1271              	.L85:
 278:Src/bsp_spi_flash.c **** 
 1272              		.loc 1 278 1 is_stmt 0 view .LVU325
 1273 0042 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1274              	.LVL107:
 1275              	.L86:
 278:Src/bsp_spi_flash.c **** 
 1276              		.loc 1 278 1 view .LVU326
 1277 0046 C3F10008 		rsb	r8, r3, #0
 1278 004a 5FFA88F8 		uxtb	r8, r8
 1279 004e D6B2     		uxtb	r6, r2
 233:Src/bsp_spi_flash.c ****     {
 1280              		.loc 1 233 5 is_stmt 1 view .LVU327
 233:Src/bsp_spi_flash.c ****     {
 1281              		.loc 1 233 8 is_stmt 0 view .LVU328
 1282 0050 99B9     		cbnz	r1, .L90
 236:Src/bsp_spi_flash.c ****       {
 1283              		.loc 1 236 7 is_stmt 1 view .LVU329
 236:Src/bsp_spi_flash.c ****       {
 1284              		.loc 1 236 10 is_stmt 0 view .LVU330
 1285 0052 B045     		cmp	r8, r6
 1286 0054 0DD2     		bcs	.L91
 238:Src/bsp_spi_flash.c **** 
 1287              		.loc 1 238 9 is_stmt 1 view .LVU331
 238:Src/bsp_spi_flash.c **** 
 1288              		.loc 1 238 14 is_stmt 0 view .LVU332
 1289 0056 3344     		add	r3, r3, r6
 1290              	.LVL108:
 238:Src/bsp_spi_flash.c **** 
 1291              		.loc 1 238 14 view .LVU333
 1292 0058 DEB2     		uxtb	r6, r3
ARM GAS  /tmp/ccD2Fa0Q.s 			page 39


 1293              	.LVL109:
 241:Src/bsp_spi_flash.c ****         WriteAddr += count;
 1294              		.loc 1 241 9 is_stmt 1 view .LVU334
 1295 005a 4246     		mov	r2, r8
 1296              	.LVL110:
 241:Src/bsp_spi_flash.c ****         WriteAddr += count;
 1297              		.loc 1 241 9 is_stmt 0 view .LVU335
 1298 005c 2146     		mov	r1, r4
 1299              	.LVL111:
 241:Src/bsp_spi_flash.c ****         WriteAddr += count;
 1300              		.loc 1 241 9 view .LVU336
 1301 005e FFF7FEFF 		bl	SPI_FLASH_PageWrite
 1302              	.LVL112:
 242:Src/bsp_spi_flash.c ****         pBuffer += count;
 1303              		.loc 1 242 9 is_stmt 1 view .LVU337
 243:Src/bsp_spi_flash.c **** 
 1304              		.loc 1 243 9 view .LVU338
 246:Src/bsp_spi_flash.c ****       }
 1305              		.loc 1 246 9 view .LVU339
 1306 0062 3246     		mov	r2, r6
 1307 0064 08EB0401 		add	r1, r8, r4
 1308              	.LVL113:
 246:Src/bsp_spi_flash.c ****       }
 1309              		.loc 1 246 9 is_stmt 0 view .LVU340
 1310 0068 05EB0800 		add	r0, r5, r8
 1311              	.LVL114:
 246:Src/bsp_spi_flash.c ****       }
 1312              		.loc 1 246 9 view .LVU341
 1313 006c FFF7FEFF 		bl	SPI_FLASH_PageWrite
 1314              	.LVL115:
 246:Src/bsp_spi_flash.c ****       }
 1315              		.loc 1 246 9 view .LVU342
 1316 0070 E7E7     		b	.L85
 1317              	.LVL116:
 1318              	.L91:
 250:Src/bsp_spi_flash.c ****       }
 1319              		.loc 1 250 9 is_stmt 1 view .LVU343
 1320 0072 2146     		mov	r1, r4
 1321              	.LVL117:
 250:Src/bsp_spi_flash.c ****       }
 1322              		.loc 1 250 9 is_stmt 0 view .LVU344
 1323 0074 FFF7FEFF 		bl	SPI_FLASH_PageWrite
 1324              	.LVL118:
 250:Src/bsp_spi_flash.c ****       }
 1325              		.loc 1 250 9 view .LVU345
 1326 0078 E3E7     		b	.L85
 1327              	.LVL119:
 1328              	.L90:
 256:Src/bsp_spi_flash.c ****       NumOfPage = NumByteToWrite / SPI_FLASH_PageSize;
 1329              		.loc 1 256 7 is_stmt 1 view .LVU346
 256:Src/bsp_spi_flash.c ****       NumOfPage = NumByteToWrite / SPI_FLASH_PageSize;
 1330              		.loc 1 256 22 is_stmt 0 view .LVU347
 1331 007a A2EB0807 		sub	r7, r2, r8
 1332 007e 1FFA87F9 		uxth	r9, r7
 1333              	.LVL120:
 257:Src/bsp_spi_flash.c ****       NumOfSingle = NumByteToWrite % SPI_FLASH_PageSize;
 1334              		.loc 1 257 7 is_stmt 1 view .LVU348
ARM GAS  /tmp/ccD2Fa0Q.s 			page 40


 257:Src/bsp_spi_flash.c ****       NumOfSingle = NumByteToWrite % SPI_FLASH_PageSize;
 1335              		.loc 1 257 17 is_stmt 0 view .LVU349
 1336 0082 C7F30726 		ubfx	r6, r7, #8, #8
 1337              	.LVL121:
 258:Src/bsp_spi_flash.c **** 
 1338              		.loc 1 258 7 is_stmt 1 view .LVU350
 258:Src/bsp_spi_flash.c **** 
 1339              		.loc 1 258 19 is_stmt 0 view .LVU351
 1340 0086 FFB2     		uxtb	r7, r7
 1341              	.LVL122:
 260:Src/bsp_spi_flash.c ****       WriteAddr += count;
 1342              		.loc 1 260 7 is_stmt 1 view .LVU352
 1343 0088 4246     		mov	r2, r8
 1344 008a 2146     		mov	r1, r4
 1345 008c FFF7FEFF 		bl	SPI_FLASH_PageWrite
 1346              	.LVL123:
 261:Src/bsp_spi_flash.c ****       pBuffer += count;
 1347              		.loc 1 261 7 view .LVU353
 261:Src/bsp_spi_flash.c ****       pBuffer += count;
 1348              		.loc 1 261 17 is_stmt 0 view .LVU354
 1349 0090 4444     		add	r4, r4, r8
 1350              	.LVL124:
 262:Src/bsp_spi_flash.c **** 
 1351              		.loc 1 262 7 is_stmt 1 view .LVU355
 262:Src/bsp_spi_flash.c **** 
 1352              		.loc 1 262 15 is_stmt 0 view .LVU356
 1353 0092 4544     		add	r5, r5, r8
 1354              	.LVL125:
 265:Src/bsp_spi_flash.c ****       {
 1355              		.loc 1 265 7 is_stmt 1 view .LVU357
 1356              	.L92:
 265:Src/bsp_spi_flash.c ****       {
 1357              		.loc 1 265 13 view .LVU358
 265:Src/bsp_spi_flash.c ****       {
 1358              		.loc 1 265 23 is_stmt 0 view .LVU359
 1359 0094 731E     		subs	r3, r6, #1
 1360 0096 5FFA83F8 		uxtb	r8, r3
 1361              	.LVL126:
 265:Src/bsp_spi_flash.c ****       {
 1362              		.loc 1 265 13 view .LVU360
 1363 009a 5EB1     		cbz	r6, .L95
 267:Src/bsp_spi_flash.c ****         WriteAddr += SPI_FLASH_PageSize;
 1364              		.loc 1 267 9 is_stmt 1 view .LVU361
 1365 009c 4FF48072 		mov	r2, #256
 1366 00a0 2146     		mov	r1, r4
 1367 00a2 2846     		mov	r0, r5
 1368 00a4 FFF7FEFF 		bl	SPI_FLASH_PageWrite
 1369              	.LVL127:
 268:Src/bsp_spi_flash.c ****         pBuffer += SPI_FLASH_PageSize;
 1370              		.loc 1 268 9 view .LVU362
 268:Src/bsp_spi_flash.c ****         pBuffer += SPI_FLASH_PageSize;
 1371              		.loc 1 268 19 is_stmt 0 view .LVU363
 1372 00a8 04F58074 		add	r4, r4, #256
 1373              	.LVL128:
 269:Src/bsp_spi_flash.c ****       }
 1374              		.loc 1 269 9 is_stmt 1 view .LVU364
 269:Src/bsp_spi_flash.c ****       }
ARM GAS  /tmp/ccD2Fa0Q.s 			page 41


 1375              		.loc 1 269 17 is_stmt 0 view .LVU365
 1376 00ac 05F58075 		add	r5, r5, #256
 1377              	.LVL129:
 265:Src/bsp_spi_flash.c ****       {
 1378              		.loc 1 265 23 view .LVU366
 1379 00b0 4646     		mov	r6, r8
 1380 00b2 EFE7     		b	.L92
 1381              	.L95:
 272:Src/bsp_spi_flash.c ****       {
 1382              		.loc 1 272 7 is_stmt 1 view .LVU367
 272:Src/bsp_spi_flash.c ****       {
 1383              		.loc 1 272 10 is_stmt 0 view .LVU368
 1384 00b4 002F     		cmp	r7, #0
 1385 00b6 C4D0     		beq	.L85
 274:Src/bsp_spi_flash.c ****       }
 1386              		.loc 1 274 9 is_stmt 1 view .LVU369
 1387 00b8 5FFA89F2 		uxtb	r2, r9
 1388 00bc 2146     		mov	r1, r4
 1389 00be 2846     		mov	r0, r5
 1390 00c0 FFF7FEFF 		bl	SPI_FLASH_PageWrite
 1391              	.LVL130:
 278:Src/bsp_spi_flash.c **** 
 1392              		.loc 1 278 1 is_stmt 0 view .LVU370
 1393 00c4 BDE7     		b	.L85
 1394              		.cfi_endproc
 1395              	.LFE73:
 1397              		.section	.text.SPI_Flash_PowerDown,"ax",%progbits
 1398              		.align	1
 1399              		.global	SPI_Flash_PowerDown
 1400              		.syntax unified
 1401              		.thumb
 1402              		.thumb_func
 1403              		.fpu softvfp
 1405              	SPI_Flash_PowerDown:
 1406              	.LFB83:
 531:Src/bsp_spi_flash.c ****   /* 选择 FLASH: CS 低 */
 1407              		.loc 1 531 1 is_stmt 1 view -0
 1408              		.cfi_startproc
 1409              		@ args = 0, pretend = 0, frame = 0
 1410              		@ frame_needed = 0, uses_anonymous_args = 0
 1411 0000 10B5     		push	{r4, lr}
 1412              	.LCFI18:
 1413              		.cfi_def_cfa_offset 8
 1414              		.cfi_offset 4, -8
 1415              		.cfi_offset 14, -4
 533:Src/bsp_spi_flash.c **** 
 1416              		.loc 1 533 3 view .LVU372
 1417 0002 054C     		ldr	r4, .L98
 1418 0004 4FF48013 		mov	r3, #1048576
 1419 0008 2361     		str	r3, [r4, #16]
 533:Src/bsp_spi_flash.c **** 
 1420              		.loc 1 533 21 view .LVU373
 536:Src/bsp_spi_flash.c **** 
 1421              		.loc 1 536 3 view .LVU374
 1422 000a B920     		movs	r0, #185
 1423 000c FFF7FEFF 		bl	SPI_FLASH_SendByte
 1424              	.LVL131:
ARM GAS  /tmp/ccD2Fa0Q.s 			page 42


 539:Src/bsp_spi_flash.c **** }
 1425              		.loc 1 539 3 view .LVU375
 1426 0010 1023     		movs	r3, #16
 1427 0012 2361     		str	r3, [r4, #16]
 539:Src/bsp_spi_flash.c **** }
 1428              		.loc 1 539 22 view .LVU376
 540:Src/bsp_spi_flash.c **** 
 1429              		.loc 1 540 1 is_stmt 0 view .LVU377
 1430 0014 10BD     		pop	{r4, pc}
 1431              	.L99:
 1432 0016 00BF     		.align	2
 1433              	.L98:
 1434 0018 00080140 		.word	1073809408
 1435              		.cfi_endproc
 1436              	.LFE83:
 1438              		.section	.text.SPI_Flash_WAKEUP,"ax",%progbits
 1439              		.align	1
 1440              		.global	SPI_Flash_WAKEUP
 1441              		.syntax unified
 1442              		.thumb
 1443              		.thumb_func
 1444              		.fpu softvfp
 1446              	SPI_Flash_WAKEUP:
 1447              	.LFB84:
 544:Src/bsp_spi_flash.c ****   /*选择 FLASH: CS 低 */
 1448              		.loc 1 544 1 is_stmt 1 view -0
 1449              		.cfi_startproc
 1450              		@ args = 0, pretend = 0, frame = 0
 1451              		@ frame_needed = 0, uses_anonymous_args = 0
 1452 0000 10B5     		push	{r4, lr}
 1453              	.LCFI19:
 1454              		.cfi_def_cfa_offset 8
 1455              		.cfi_offset 4, -8
 1456              		.cfi_offset 14, -4
 546:Src/bsp_spi_flash.c **** 
 1457              		.loc 1 546 3 view .LVU379
 1458 0002 054C     		ldr	r4, .L102
 1459 0004 4FF48013 		mov	r3, #1048576
 1460 0008 2361     		str	r3, [r4, #16]
 546:Src/bsp_spi_flash.c **** 
 1461              		.loc 1 546 21 view .LVU380
 549:Src/bsp_spi_flash.c **** 
 1462              		.loc 1 549 3 view .LVU381
 1463 000a AB20     		movs	r0, #171
 1464 000c FFF7FEFF 		bl	SPI_FLASH_SendByte
 1465              	.LVL132:
 552:Src/bsp_spi_flash.c **** }
 1466              		.loc 1 552 3 view .LVU382
 1467 0010 1023     		movs	r3, #16
 1468 0012 2361     		str	r3, [r4, #16]
 552:Src/bsp_spi_flash.c **** }
 1469              		.loc 1 552 22 view .LVU383
 553:Src/bsp_spi_flash.c **** 
 1470              		.loc 1 553 1 is_stmt 0 view .LVU384
 1471 0014 10BD     		pop	{r4, pc}
 1472              	.L103:
 1473 0016 00BF     		.align	2
ARM GAS  /tmp/ccD2Fa0Q.s 			page 43


 1474              	.L102:
 1475 0018 00080140 		.word	1073809408
 1476              		.cfi_endproc
 1477              	.LFE84:
 1479              		.comm	SpiHandle,88,4
 1480              		.section	.data.SPITimeout,"aw"
 1481              		.align	2
 1482              		.set	.LANCHOR0,. + 0
 1485              	SPITimeout:
 1486 0000 00A00000 		.word	40960
 1487              		.text
 1488              	.Letext0:
 1489              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1490              		.file 3 "Drivers/CMSIS/Include/core_cm3.h"
 1491              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1492              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 1493              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1494              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1495              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1496              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1497              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 1498              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1499              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1500              		.file 13 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1501              		.file 14 "/usr/include/newlib/sys/_types.h"
 1502              		.file 15 "/usr/include/newlib/sys/reent.h"
 1503              		.file 16 "/usr/include/newlib/sys/lock.h"
 1504              		.file 17 "Inc/bsp_debug_usart.h"
 1505              		.file 18 "/usr/include/newlib/stdio.h"
 1506              		.file 19 "<built-in>"
ARM GAS  /tmp/ccD2Fa0Q.s 			page 44


DEFINED SYMBOLS
                            *ABS*:0000000000000000 bsp_spi_flash.c
     /tmp/ccD2Fa0Q.s:16     .rodata.SPI_TIMEOUT_UserCallback.str1.4:0000000000000000 $d
     /tmp/ccD2Fa0Q.s:21     .text.SPI_TIMEOUT_UserCallback:0000000000000000 $t
     /tmp/ccD2Fa0Q.s:28     .text.SPI_TIMEOUT_UserCallback:0000000000000000 SPI_TIMEOUT_UserCallback
     /tmp/ccD2Fa0Q.s:56     .text.SPI_TIMEOUT_UserCallback:0000000000000010 $d
     /tmp/ccD2Fa0Q.s:61     .text.HAL_SPI_MspInit:0000000000000000 $t
     /tmp/ccD2Fa0Q.s:68     .text.HAL_SPI_MspInit:0000000000000000 HAL_SPI_MspInit
     /tmp/ccD2Fa0Q.s:225    .text.HAL_SPI_MspInit:00000000000000a4 $d
     /tmp/ccD2Fa0Q.s:231    .text.SPI_FLASH_Init:0000000000000000 $t
     /tmp/ccD2Fa0Q.s:238    .text.SPI_FLASH_Init:0000000000000000 SPI_FLASH_Init
     /tmp/ccD2Fa0Q.s:308    .text.SPI_FLASH_Init:0000000000000044 $d
                            *COM*:0000000000000058 SpiHandle
     /tmp/ccD2Fa0Q.s:314    .text.SPI_FLASH_SendByte:0000000000000000 $t
     /tmp/ccD2Fa0Q.s:321    .text.SPI_FLASH_SendByte:0000000000000000 SPI_FLASH_SendByte
     /tmp/ccD2Fa0Q.s:412    .text.SPI_FLASH_SendByte:000000000000005c $d
     /tmp/ccD2Fa0Q.s:418    .text.SPI_FLASH_BufferRead:0000000000000000 $t
     /tmp/ccD2Fa0Q.s:425    .text.SPI_FLASH_BufferRead:0000000000000000 SPI_FLASH_BufferRead
     /tmp/ccD2Fa0Q.s:502    .text.SPI_FLASH_BufferRead:0000000000000048 $d
     /tmp/ccD2Fa0Q.s:507    .text.SPI_FLASH_ReadID:0000000000000000 $t
     /tmp/ccD2Fa0Q.s:514    .text.SPI_FLASH_ReadID:0000000000000000 SPI_FLASH_ReadID
     /tmp/ccD2Fa0Q.s:583    .text.SPI_FLASH_ReadID:0000000000000034 $d
     /tmp/ccD2Fa0Q.s:588    .text.SPI_FLASH_ReadDeviceID:0000000000000000 $t
     /tmp/ccD2Fa0Q.s:595    .text.SPI_FLASH_ReadDeviceID:0000000000000000 SPI_FLASH_ReadDeviceID
     /tmp/ccD2Fa0Q.s:644    .text.SPI_FLASH_ReadDeviceID:0000000000000030 $d
     /tmp/ccD2Fa0Q.s:649    .text.SPI_FLASH_StartReadSequence:0000000000000000 $t
     /tmp/ccD2Fa0Q.s:656    .text.SPI_FLASH_StartReadSequence:0000000000000000 SPI_FLASH_StartReadSequence
     /tmp/ccD2Fa0Q.s:700    .text.SPI_FLASH_StartReadSequence:000000000000002c $d
     /tmp/ccD2Fa0Q.s:705    .text.SPI_FLASH_ReadByte:0000000000000000 $t
     /tmp/ccD2Fa0Q.s:712    .text.SPI_FLASH_ReadByte:0000000000000000 SPI_FLASH_ReadByte
     /tmp/ccD2Fa0Q.s:734    .text.SPI_FLASH_SendHalfWord:0000000000000000 $t
     /tmp/ccD2Fa0Q.s:741    .text.SPI_FLASH_SendHalfWord:0000000000000000 SPI_FLASH_SendHalfWord
     /tmp/ccD2Fa0Q.s:830    .text.SPI_FLASH_SendHalfWord:0000000000000058 $d
     /tmp/ccD2Fa0Q.s:836    .text.SPI_FLASH_WriteEnable:0000000000000000 $t
     /tmp/ccD2Fa0Q.s:843    .text.SPI_FLASH_WriteEnable:0000000000000000 SPI_FLASH_WriteEnable
     /tmp/ccD2Fa0Q.s:872    .text.SPI_FLASH_WriteEnable:0000000000000018 $d
     /tmp/ccD2Fa0Q.s:877    .text.SPI_FLASH_WaitForWriteEnd:0000000000000000 $t
     /tmp/ccD2Fa0Q.s:884    .text.SPI_FLASH_WaitForWriteEnd:0000000000000000 SPI_FLASH_WaitForWriteEnd
     /tmp/ccD2Fa0Q.s:951    .text.SPI_FLASH_WaitForWriteEnd:0000000000000040 $d
     /tmp/ccD2Fa0Q.s:957    .text.SPI_FLASH_SectorErase:0000000000000000 $t
     /tmp/ccD2Fa0Q.s:964    .text.SPI_FLASH_SectorErase:0000000000000000 SPI_FLASH_SectorErase
     /tmp/ccD2Fa0Q.s:1021   .text.SPI_FLASH_SectorErase:000000000000003c $d
     /tmp/ccD2Fa0Q.s:1026   .text.SPI_FLASH_BulkErase:0000000000000000 $t
     /tmp/ccD2Fa0Q.s:1033   .text.SPI_FLASH_BulkErase:0000000000000000 SPI_FLASH_BulkErase
     /tmp/ccD2Fa0Q.s:1068   .text.SPI_FLASH_BulkErase:0000000000000020 $d
     /tmp/ccD2Fa0Q.s:1073   .rodata.SPI_FLASH_PageWrite.str1.4:0000000000000000 $d
     /tmp/ccD2Fa0Q.s:1077   .text.SPI_FLASH_PageWrite:0000000000000000 $t
     /tmp/ccD2Fa0Q.s:1084   .text.SPI_FLASH_PageWrite:0000000000000000 SPI_FLASH_PageWrite
     /tmp/ccD2Fa0Q.s:1176   .text.SPI_FLASH_PageWrite:0000000000000060 $d
     /tmp/ccD2Fa0Q.s:1182   .text.SPI_FLASH_BufferWrite:0000000000000000 $t
     /tmp/ccD2Fa0Q.s:1189   .text.SPI_FLASH_BufferWrite:0000000000000000 SPI_FLASH_BufferWrite
     /tmp/ccD2Fa0Q.s:1398   .text.SPI_Flash_PowerDown:0000000000000000 $t
     /tmp/ccD2Fa0Q.s:1405   .text.SPI_Flash_PowerDown:0000000000000000 SPI_Flash_PowerDown
     /tmp/ccD2Fa0Q.s:1434   .text.SPI_Flash_PowerDown:0000000000000018 $d
     /tmp/ccD2Fa0Q.s:1439   .text.SPI_Flash_WAKEUP:0000000000000000 $t
     /tmp/ccD2Fa0Q.s:1446   .text.SPI_Flash_WAKEUP:0000000000000000 SPI_Flash_WAKEUP
     /tmp/ccD2Fa0Q.s:1475   .text.SPI_Flash_WAKEUP:0000000000000018 $d
ARM GAS  /tmp/ccD2Fa0Q.s 			page 45


     /tmp/ccD2Fa0Q.s:1481   .data.SPITimeout:0000000000000000 $d
     /tmp/ccD2Fa0Q.s:1485   .data.SPITimeout:0000000000000000 SPITimeout

UNDEFINED SYMBOLS
printf
HAL_GPIO_Init
HAL_SPI_Init
puts
