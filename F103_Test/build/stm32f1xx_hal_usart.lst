ARM GAS  /tmp/cctb5cV2.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_hal_usart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.USART_EndTxTransfer,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	USART_EndTxTransfer:
  23              	.LFB99:
  24              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c"
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @file    stm32f1xx_hal_usart.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief   USART HAL module driver.
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *          functionalities of the Universal Synchronous/Asynchronous Receiver Transmitter
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *          Peripheral (USART).
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           + Initialization and de-initialization functions
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           + IO operation functions
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           + Peripheral Control functions
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   @verbatim
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   ==============================================================================
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****                         ##### How to use this driver #####
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   ==============================================================================
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   [..]
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     The USART HAL driver can be used as follows:
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (#) Declare a USART_HandleTypeDef handle structure (eg. USART_HandleTypeDef husart).
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (#) Initialize the USART low level resources by implementing the HAL_USART_MspInit() API:
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (##) Enable the USARTx interface clock.
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (##) USART pins configuration:
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              (+++) Enable the clock for the USART GPIOs.
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              (+++) Configure the USART pins as alternate function pull-up.
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_USART_Transmit_IT(),
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              HAL_USART_Receive_IT() and HAL_USART_TransmitReceive_IT() APIs):
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              (+++) Configure the USARTx interrupt priority.
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              (+++) Enable the NVIC USART IRQ handle.
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_USART_Transmit_DMA()
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              HAL_USART_Receive_DMA() and HAL_USART_TransmitReceive_DMA() APIs):
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              (+++) Declare a DMA handle structure for the Tx/Rx channel.
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              (+++) Enable the DMAx interface clock.
  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              (+++) Configure the DMA Tx/Rx channel.
ARM GAS  /tmp/cctb5cV2.s 			page 2


  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              (+++) Associate the initialized DMA handle to the USART DMA Tx/Rx handle.
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              (+++) Configure the priority and enable the NVIC for the transfer complete interrupt o
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              (+++) Configure the USARTx interrupt priority and enable the NVIC USART IRQ handle
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****                    (used for last byte sending completion detection in DMA non circular mode)
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         flow control and Mode(Receiver/Transmitter) in the husart Init structure.
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (#) Initialize the USART registers by calling the HAL_USART_Init() API:
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (++) These APIs configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              by calling the customized HAL_USART_MspInit(&husart) API.
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         -@@- The specific USART interrupts (Transmission complete interrupt,
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              RXNE interrupt and Error Interrupts) will be managed using the macros
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              __HAL_USART_ENABLE_IT() and __HAL_USART_DISABLE_IT() inside the transmit and receive p
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (#) Three operation modes are available within this driver :
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****      *** Polling mode IO operation ***
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****      =================================
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****      [..]
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        (+) Send an amount of data in blocking mode using HAL_USART_Transmit()
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        (+) Receive an amount of data in blocking mode using HAL_USART_Receive()
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****      *** Interrupt mode IO operation ***
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****      ===================================
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****      [..]
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        (+) Send an amount of data in non blocking mode using HAL_USART_Transmit_IT()
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        (+) At transmission end of transfer HAL_USART_TxHalfCpltCallback is executed and user can
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             add his own code by customization of function pointer HAL_USART_TxCpltCallback
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        (+) Receive an amount of data in non blocking mode using HAL_USART_Receive_IT()
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        (+) At reception end of transfer HAL_USART_RxCpltCallback is executed and user can
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             add his own code by customization of function pointer HAL_USART_RxCpltCallback
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        (+) In case of transfer Error, HAL_USART_ErrorCallback() function is executed and user can
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             add his own code by customization of function pointer HAL_USART_ErrorCallback
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****      *** DMA mode IO operation ***
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****      ==============================
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****      [..]
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_USART_Transmit_DMA()
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        (+) At transmission end of half transfer HAL_USART_TxHalfCpltCallback is executed and user c
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             add his own code by customization of function pointer HAL_USART_TxHalfCpltCallback
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        (+) At transmission end of transfer HAL_USART_TxCpltCallback is executed and user can
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             add his own code by customization of function pointer HAL_USART_TxCpltCallback
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_USART_Receive_DMA()
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        (+) At reception end of half transfer HAL_USART_RxHalfCpltCallback is executed and user can
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             add his own code by customization of function pointer HAL_USART_RxHalfCpltCallback
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        (+) At reception end of transfer HAL_USART_RxCpltCallback is executed and user can
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             add his own code by customization of function pointer HAL_USART_RxCpltCallback
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        (+) In case of transfer Error, HAL_USART_ErrorCallback() function is executed and user can
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             add his own code by customization of function pointer HAL_USART_ErrorCallback
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        (+) Pause the DMA Transfer using HAL_USART_DMAPause()
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        (+) Resume the DMA Transfer using HAL_USART_DMAResume()
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        (+) Stop the DMA Transfer using HAL_USART_DMAStop()
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****      *** USART HAL driver macros list ***
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****      =============================================
ARM GAS  /tmp/cctb5cV2.s 			page 3


  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****      [..]
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        Below the list of most used macros in USART HAL driver.
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        (+) __HAL_USART_ENABLE: Enable the USART peripheral
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        (+) __HAL_USART_DISABLE: Disable the USART peripheral
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        (+) __HAL_USART_GET_FLAG : Check whether the specified USART flag is set or not
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        (+) __HAL_USART_CLEAR_FLAG : Clear the specified USART pending flag
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        (+) __HAL_USART_ENABLE_IT: Enable the specified USART interrupt
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        (+) __HAL_USART_DISABLE_IT: Disable the specified USART interrupt
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****      [..]
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        (@) You can refer to the USART HAL driver header file for more useful macros
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     ##### Callback registration #####
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     ==================================
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     [..]
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     The compilation define USE_HAL_USART_REGISTER_CALLBACKS when set to 1
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     allows the user to configure dynamically the driver callbacks.
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     [..]
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     Use Function @ref HAL_USART_RegisterCallback() to register a user callback.
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     Function @ref HAL_USART_RegisterCallback() allows to register following callbacks:
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (+) TxRxCpltCallback          : Tx Rx Complete Callback.
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (+) ErrorCallback             : Error Callback.
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (+) MspInitCallback           : USART MspInit.
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (+) MspDeInitCallback         : USART MspDeInit.
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     and a pointer to the user callback function.
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     [..]
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     Use function @ref HAL_USART_UnRegisterCallback() to reset a callback to the default
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     weak (surcharged) function.
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     @ref HAL_USART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     and the Callback ID.
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     This function allows to reset following callbacks:
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (+) TxRxCpltCallback          : Tx Rx Complete Callback.
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (+) ErrorCallback             : Error Callback.
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (+) MspInitCallback           : USART MspInit.
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (+) MspDeInitCallback         : USART MspDeInit.
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     [..]
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     By default, after the @ref HAL_USART_Init() and when the state is HAL_USART_STATE_RESET
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     examples @ref HAL_USART_TxCpltCallback(), @ref HAL_USART_RxHalfCpltCallback().
 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_USART_Init()
ARM GAS  /tmp/cctb5cV2.s 			page 4


 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     and @ref HAL_USART_DeInit() only when these callbacks are null (not registered beforehand).
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_USART_Init() and @ref HAL_USART_DeInit(
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     [..]
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     Callbacks can be registered/unregistered in HAL_USART_STATE_READY state only.
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     in HAL_USART_STATE_READY or HAL_USART_STATE_RESET state, thus registered (user)
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     using @ref HAL_USART_RegisterCallback() before calling @ref HAL_USART_DeInit()
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     or @ref HAL_USART_Init() function.
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     [..]
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     When The compilation define USE_HAL_USART_REGISTER_CALLBACKS is set to 0 or
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     not defined, the callback registration feature is not available
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     and weak (surcharged) callbacks are used.
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   @endverbatim
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****      [..]
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        (@) Additionnal remark: If the parity is enabled, then the MSB bit of the data written
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****            in the data register is transmitted but is changed by the parity bit.
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****            Depending on the frame length defined by the M bit (8-bits or 9-bits),
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****            the possible USART frame formats are as listed in the following table:
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     +-------------------------------------------------------------+
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     |   M bit |  PCE bit  |            USART frame                 |
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     |---------------------|---------------------------------------|
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     |    0    |    0      |    | SB | 8 bit data | STB |          |
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     |---------|-----------|---------------------------------------|
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     |---------|-----------|---------------------------------------|
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     |    1    |    0      |    | SB | 9 bit data | STB |          |
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     |---------|-----------|---------------------------------------|
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     +-------------------------------------------------------------+
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   ******************************************************************************
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @attention
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * All rights reserved.</center></h2>
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * the "License"; You may not use this file except in compliance with the
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * License. You may obtain a copy of the License at:
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   ******************************************************************************
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /* Includes ------------------------------------------------------------------*/
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #include "stm32f1xx_hal.h"
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /** @addtogroup STM32F1xx_HAL_Driver
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @{
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /** @defgroup USART USART
ARM GAS  /tmp/cctb5cV2.s 			page 5


 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief HAL USART Synchronous module driver
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @{
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #ifdef HAL_USART_MODULE_ENABLED
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /* Private typedef -----------------------------------------------------------*/
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /* Private define ------------------------------------------------------------*/
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /** @addtogroup USART_Private_Constants
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @{
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #define DUMMY_DATA           0xFFFFU
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #define USART_TIMEOUT_VALUE  22000U
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @}
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /* Private macro -------------------------------------------------------------*/
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /* Private variables ---------------------------------------------------------*/
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /* Private function prototypes -----------------------------------------------*/
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /* Private functions ---------------------------------------------------------*/
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /** @addtogroup USART_Private_Functions
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @{
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** void USART_InitCallbacksToDefault(USART_HandleTypeDef *husart);
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static void USART_EndTxTransfer(USART_HandleTypeDef *husart);
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static void USART_EndRxTransfer(USART_HandleTypeDef *husart);
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static HAL_StatusTypeDef USART_Transmit_IT(USART_HandleTypeDef *husart);
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static HAL_StatusTypeDef USART_EndTransmit_IT(USART_HandleTypeDef *husart);
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static HAL_StatusTypeDef USART_Receive_IT(USART_HandleTypeDef *husart);
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static HAL_StatusTypeDef USART_TransmitReceive_IT(USART_HandleTypeDef *husart);
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static void USART_SetConfig(USART_HandleTypeDef *husart);
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static void USART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static void USART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static void USART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static void USART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static void USART_DMAError(DMA_HandleTypeDef *hdma);
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static void USART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static void USART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static void USART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static HAL_StatusTypeDef USART_WaitOnFlagUntilTimeout(USART_HandleTypeDef *husart, uint32_t Flag, F
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @}
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /* Exported functions --------------------------------------------------------*/
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /** @defgroup USART_Exported_Functions USART Exported Functions
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @{
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /** @defgroup USART_Exported_Functions_Group1 USART Initialization and de-initialization functions
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *  @brief    Initialization and Configuration functions
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** @verbatim
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   ==============================================================================
 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****               ##### Initialization and Configuration functions #####
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   ==============================================================================
ARM GAS  /tmp/cctb5cV2.s 			page 6


 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   [..]
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   This subsection provides a set of functions allowing to initialize the USART
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   in asynchronous and in synchronous modes.
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   (+) For the asynchronous mode only these parameters can be configured:
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       (++) Baud Rate
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       (++) Word Length
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       (++) Stop Bit
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       (++) Parity: If the parity is enabled, then the MSB bit of the data written
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****            in the data register is transmitted but is changed by the parity bit.
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****            Depending on the frame length defined by the M bit (8-bits or 9-bits),
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****            please refer to Reference manual for possible USART frame formats.
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       (++) USART polarity
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       (++) USART phase
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       (++) USART LastBit
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       (++) Receiver/transmitter modes
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   [..]
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     The HAL_USART_Init() function follows the USART  synchronous configuration
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     procedures (details for the procedures are available in reference manuals
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (RM0008 for STM32F10Xxx MCUs and RM0041 for STM32F100xx MCUs)).
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** @endverbatim
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @{
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Initialize the USART mode according to the specified
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         parameters in the USART_InitTypeDef and initialize the associated handle.
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart Pointer to a USART_HandleTypeDef structure that contains
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                the configuration information for the specified USART module.
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval HAL status
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Init(USART_HandleTypeDef *husart)
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Check the USART handle allocation */
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (husart == NULL)
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return HAL_ERROR;
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Check the parameters */
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   assert_param(IS_USART_INSTANCE(husart->Instance));
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_RESET)
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Allocate lock resource and initialize it */
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->Lock = HAL_UNLOCKED;
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     USART_InitCallbacksToDefault(husart);
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (husart->MspInitCallback == NULL)
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->MspInitCallback = HAL_USART_MspInit;
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Init the low level hardware */
ARM GAS  /tmp/cctb5cV2.s 			page 7


 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->MspInitCallback(husart);
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #else
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     HAL_USART_MspInit(husart);
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->State = HAL_USART_STATE_BUSY;
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Set the USART Communication parameters */
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   USART_SetConfig(husart);
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* In USART mode, the following bits must be kept cleared:
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****      - LINEN bit in the USART_CR2 register
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****      - HDSEL, SCEN and IREN bits in the USART_CR3 register */
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR2, USART_CR2_LINEN);
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Enable the Peripheral */
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   __HAL_USART_ENABLE(husart);
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Initialize the USART state */
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->ErrorCode = HAL_USART_ERROR_NONE;
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->State = HAL_USART_STATE_READY;
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   return HAL_OK;
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  DeInitializes the USART peripheral.
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart Pointer to a USART_HandleTypeDef structure that contains
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                the configuration information for the specified USART module.
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval HAL status
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_DeInit(USART_HandleTypeDef *husart)
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Check the USART handle allocation */
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (husart == NULL)
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return HAL_ERROR;
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Check the parameters */
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   assert_param(IS_USART_INSTANCE(husart->Instance));
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->State = HAL_USART_STATE_BUSY;
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Disable the Peripheral */
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   __HAL_USART_DISABLE(husart);
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (husart->MspDeInitCallback == NULL)
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->MspDeInitCallback = HAL_USART_MspDeInit;
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* DeInit the low level hardware */
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->MspDeInitCallback(husart);
ARM GAS  /tmp/cctb5cV2.s 			page 8


 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #else
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* DeInit the low level hardware */
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   HAL_USART_MspDeInit(husart);
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->ErrorCode = HAL_USART_ERROR_NONE;
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->State = HAL_USART_STATE_RESET;
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Release Lock */
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   __HAL_UNLOCK(husart);
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   return HAL_OK;
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  USART MSP Init.
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart Pointer to a USART_HandleTypeDef structure that contains
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                the configuration information for the specified USART module.
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval None
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** __weak void HAL_USART_MspInit(USART_HandleTypeDef *husart)
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   UNUSED(husart);
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****            the HAL_USART_MspInit could be implemented in the user file
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****    */
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  USART MSP DeInit.
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart Pointer to a USART_HandleTypeDef structure that contains
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                the configuration information for the specified USART module.
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval None
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** __weak void HAL_USART_MspDeInit(USART_HandleTypeDef *husart)
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   UNUSED(husart);
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****            the HAL_USART_MspDeInit could be implemented in the user file
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****    */
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Register a User USART Callback
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         To be used instead of the weak predefined callback
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart usart handle
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  CallbackID ID of the callback to be registered
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         This parameter can be one of the following values:
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           @arg @ref HAL_USART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           @arg @ref HAL_USART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           @arg @ref HAL_USART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           @arg @ref HAL_USART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           @arg @ref HAL_USART_TX_RX_COMPLETE_CB_ID Rx Complete Callback ID
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           @arg @ref HAL_USART_ERROR_CB_ID Error Callback ID
ARM GAS  /tmp/cctb5cV2.s 			page 9


 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           @arg @ref HAL_USART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           @arg @ref HAL_USART_MSPINIT_CB_ID MspInit Callback ID
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           @arg @ref HAL_USART_MSPDEINIT_CB_ID MspDeInit Callback ID
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  pCallback pointer to the Callback function
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval HAL status
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** +  */
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_RegisterCallback(USART_HandleTypeDef *husart, HAL_USART_CallbackIDTypeD
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   HAL_StatusTypeDef status = HAL_OK;
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (pCallback == NULL)
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Update the error code */
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->ErrorCode |= HAL_USART_ERROR_INVALID_CALLBACK;
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return HAL_ERROR;
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Process locked */
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   __HAL_LOCK(husart);
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_READY)
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     switch (CallbackID)
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       case HAL_USART_TX_HALFCOMPLETE_CB_ID :
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->TxHalfCpltCallback = pCallback;
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         break;
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       case HAL_USART_TX_COMPLETE_CB_ID :
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->TxCpltCallback = pCallback;
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         break;
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       case HAL_USART_RX_HALFCOMPLETE_CB_ID :
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->RxHalfCpltCallback = pCallback;
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         break;
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       case HAL_USART_RX_COMPLETE_CB_ID :
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->RxCpltCallback = pCallback;
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         break;
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       case HAL_USART_TX_RX_COMPLETE_CB_ID :
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->TxRxCpltCallback = pCallback;
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         break;
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       case HAL_USART_ERROR_CB_ID :
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->ErrorCallback = pCallback;
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         break;
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       case HAL_USART_ABORT_COMPLETE_CB_ID :
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->AbortCpltCallback = pCallback;
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         break;
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       case HAL_USART_MSPINIT_CB_ID :
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->MspInitCallback = pCallback;
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         break;
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       case HAL_USART_MSPDEINIT_CB_ID :
ARM GAS  /tmp/cctb5cV2.s 			page 10


 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->MspDeInitCallback = pCallback;
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         break;
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       default :
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Update the error code */
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->ErrorCode |= HAL_USART_ERROR_INVALID_CALLBACK;
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Return error status */
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         status =  HAL_ERROR;
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         break;
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   else if (husart->State == HAL_USART_STATE_RESET)
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     switch (CallbackID)
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       case HAL_USART_MSPINIT_CB_ID :
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->MspInitCallback = pCallback;
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         break;
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       case HAL_USART_MSPDEINIT_CB_ID :
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->MspDeInitCallback = pCallback;
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         break;
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       default :
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Update the error code */
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->ErrorCode |= HAL_USART_ERROR_INVALID_CALLBACK;
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Return error status */
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         status =  HAL_ERROR;
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         break;
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   else
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Update the error code */
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->ErrorCode |= HAL_USART_ERROR_INVALID_CALLBACK;
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Return error status */
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     status =  HAL_ERROR;
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Release Lock */
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   __HAL_UNLOCK(husart);
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   return status;
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Unregister an UART Callback
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         UART callaback is redirected to the weak predefined callback
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart uart handle
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  CallbackID ID of the callback to be unregistered
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         This parameter can be one of the following values:
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           @arg @ref HAL_USART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           @arg @ref HAL_USART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           @arg @ref HAL_USART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
ARM GAS  /tmp/cctb5cV2.s 			page 11


 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           @arg @ref HAL_USART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           @arg @ref HAL_USART_TX_RX_COMPLETE_CB_ID Rx Complete Callback ID
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           @arg @ref HAL_USART_ERROR_CB_ID Error Callback ID
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           @arg @ref HAL_USART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           @arg @ref HAL_USART_MSPINIT_CB_ID MspInit Callback ID
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           @arg @ref HAL_USART_MSPDEINIT_CB_ID MspDeInit Callback ID
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval HAL status
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_UnRegisterCallback(USART_HandleTypeDef *husart, HAL_USART_CallbackIDTyp
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   HAL_StatusTypeDef status = HAL_OK;
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Process locked */
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   __HAL_LOCK(husart);
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_READY)
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     switch (CallbackID)
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       case HAL_USART_TX_HALFCOMPLETE_CB_ID :
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->TxHalfCpltCallback = HAL_USART_TxHalfCpltCallback;               /* Legacy weak  Tx
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         break;
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       case HAL_USART_TX_COMPLETE_CB_ID :
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->TxCpltCallback = HAL_USART_TxCpltCallback;                       /* Legacy weak TxC
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         break;
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       case HAL_USART_RX_HALFCOMPLETE_CB_ID :
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->RxHalfCpltCallback = HAL_USART_RxHalfCpltCallback;               /* Legacy weak RxH
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         break;
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       case HAL_USART_RX_COMPLETE_CB_ID :
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->RxCpltCallback = HAL_USART_RxCpltCallback;                       /* Legacy weak RxC
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         break;
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       case HAL_USART_TX_RX_COMPLETE_CB_ID :
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->TxRxCpltCallback = HAL_USART_TxRxCpltCallback;                   /* Legacy weak TxR
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         break;
 586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       case HAL_USART_ERROR_CB_ID :
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->ErrorCallback = HAL_USART_ErrorCallback;                         /* Legacy weak Err
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         break;
 590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       case HAL_USART_ABORT_COMPLETE_CB_ID :
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->AbortCpltCallback = HAL_USART_AbortCpltCallback;                 /* Legacy weak Abo
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         break;
 594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       case HAL_USART_MSPINIT_CB_ID :
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->MspInitCallback = HAL_USART_MspInit;                             /* Legacy weak Msp
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         break;
 598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       case HAL_USART_MSPDEINIT_CB_ID :
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->MspDeInitCallback = HAL_USART_MspDeInit;                         /* Legacy weak Msp
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         break;
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       default :
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Update the error code */
ARM GAS  /tmp/cctb5cV2.s 			page 12


 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->ErrorCode |= HAL_USART_ERROR_INVALID_CALLBACK;
 606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Return error status */
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         status =  HAL_ERROR;
 609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         break;
 610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   else if (husart->State == HAL_USART_STATE_RESET)
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     switch (CallbackID)
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       case HAL_USART_MSPINIT_CB_ID :
 617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->MspInitCallback = HAL_USART_MspInit;
 618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         break;
 619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       case HAL_USART_MSPDEINIT_CB_ID :
 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->MspDeInitCallback = HAL_USART_MspDeInit;
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         break;
 623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       default :
 625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Update the error code */
 626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->ErrorCode |= HAL_USART_ERROR_INVALID_CALLBACK;
 627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Return error status */
 629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         status =  HAL_ERROR;
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         break;
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   else
 634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Update the error code */
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->ErrorCode |= HAL_USART_ERROR_INVALID_CALLBACK;
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Return error status */
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     status =  HAL_ERROR;
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Release Lock */
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   __HAL_UNLOCK(husart);
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   return status;
 646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @}
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /** @defgroup USART_Exported_Functions_Group2 IO operation functions
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *  @brief   USART Transmit and Receive functions
 655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *
 656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** @verbatim
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   ==============================================================================
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****                          ##### IO operation functions #####
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   ==============================================================================
 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   [..]
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     This subsection provides a set of functions allowing to manage the USART synchronous
ARM GAS  /tmp/cctb5cV2.s 			page 13


 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     data transfers.
 663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   [..]
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     The USART supports master mode only: it cannot receive or send data related to an input
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     clock (SCLK is always an output).
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (#) There are two modes of transfer:
 669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (++) Blocking mode: The communication is performed in polling mode.
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              The HAL status of all data processing is returned by the same function
 671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              after finishing transfer.
 672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (++) No-Blocking mode: The communication is performed using Interrupts
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              or DMA, These API's return the HAL status.
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              The end of the data processing will be indicated through the
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              dedicated USART IRQ when using Interrupt mode or the DMA IRQ when
 676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              using DMA mode.
 677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              The HAL_USART_TxCpltCallback(), HAL_USART_RxCpltCallback() and HAL_USART_TxRxCpltCallb
 678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****               user callbacks
 679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              will be executed respectively at the end of the transmit or Receive process
 680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              The HAL_USART_ErrorCallback() user callback will be executed when a communication
 681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              error is detected
 682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (#) Blocking mode APIs are :
 684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (++) HAL_USART_Transmit() in simplex mode
 685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (++) HAL_USART_Receive() in full duplex receive only
 686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (++) HAL_USART_TransmitReceive() in full duplex mode
 687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (#) Non Blocking mode APIs with Interrupt are :
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (++) HAL_USART_Transmit_IT()in simplex mode
 690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (++) HAL_USART_Receive_IT() in full duplex receive only
 691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (++) HAL_USART_TransmitReceive_IT() in full duplex mode
 692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (++) HAL_USART_IRQHandler()
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (#) Non Blocking mode functions with DMA are :
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (++) HAL_USART_Transmit_DMA()in simplex mode
 696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (++) HAL_USART_Receive_DMA() in full duplex receive only
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (++) HAL_USART_TransmitReceive_DMA() in full duplex mode
 698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (++) HAL_USART_DMAPause()
 699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (++) HAL_USART_DMAResume()
 700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (++) HAL_USART_DMAStop()
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (#) A set of Transfer Complete Callbacks are provided in non Blocking mode:
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (++) HAL_USART_TxHalfCpltCallback()
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (++) HAL_USART_TxCpltCallback()
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (++) HAL_USART_RxHalfCpltCallback()
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (++) HAL_USART_RxCpltCallback()
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (++) HAL_USART_ErrorCallback()
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (++) HAL_USART_TxRxCpltCallback()
 709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (++) HAL_USART_Abort()
 712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (++) HAL_USART_Abort_IT()
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (#) For Abort services based on interrupts (HAL_USART_Abort_IT), a Abort Complete Callbacks is 
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (++) HAL_USART_AbortCpltCallback()
 716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         Errors are handled as follows :
ARM GAS  /tmp/cctb5cV2.s 			page 14


 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (++) Error is considered as Recoverable and non blocking : Transfer could go till end, but 
 720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in In
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              Received character is then retrieved and stored in Rx buffer, Error code is set to all
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              and HAL_USART_ErrorCallback() user callback is executed. Transfer is kept ongoing on U
 723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              If user wants to abort it, Abort services should be called by user.
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         (++) Error is considered as Blocking : Transfer could not be completed properly and is abor
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****              Error code is set to allow user to identify error type, and HAL_USART_ErrorCallback() 
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** @endverbatim
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @{
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Simplex Send an amount of data in blocking mode.
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
 736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         of u16 provided through pTxData.
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart  Pointer to a USART_HandleTypeDef structure that contains
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                 the configuration information for the specified USART module.
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  pTxData Pointer to data buffer (u8 or u16 data elements).
 740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  Size    Amount of data elements (u8 or u16) to be sent.
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  Timeout Timeout duration.
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval HAL status
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Transmit(USART_HandleTypeDef *husart, uint8_t *pTxData, uint16_t Size, 
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint16_t *tmp;
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t tickstart = 0U;
 748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_READY)
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if ((pTxData == NULL) || (Size == 0))
 752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       return  HAL_ERROR;
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Process Locked */
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     __HAL_LOCK(husart);
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_TX;
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Init tickstart for timeout management */
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     tickstart = HAL_GetTick();
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->TxXferSize = Size;
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->TxXferCount = Size;
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     while (husart->TxXferCount > 0U)
 768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->TxXferCount--;
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       if (husart->Init.WordLength == USART_WORDLENGTH_9B)
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
 772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Wait for TC flag in order to write data in DR */
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         if (USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_
 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           return HAL_TIMEOUT;
ARM GAS  /tmp/cctb5cV2.s 			page 15


 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         tmp = (uint16_t *) pTxData;
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         if (husart->Init.Parity == USART_PARITY_NONE)
 780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           pTxData += 2U;
 782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         else
 784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           pTxData += 1U;
 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
 788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       else
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         if (USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_
 791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           return HAL_TIMEOUT;
 793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->Instance->DR = (*pTxData++ & (uint8_t)0xFF);
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       return HAL_TIMEOUT;
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->State = HAL_USART_STATE_READY;
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Process Unlocked */
 806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     __HAL_UNLOCK(husart);
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return HAL_OK;
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   else
 811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return HAL_BUSY;
 813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
 815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
 817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Full-Duplex Receive an amount of data in blocking mode.
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @note   To receive synchronous data, dummy data are simultaneously transmitted.
 819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
 821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         of u16 available through pRxData.
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart  Pointer to a USART_HandleTypeDef structure that contains
 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                 the configuration information for the specified USART module.
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  pRxData Pointer to data buffer (u8 or u16 data elements).
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  Size    Amount of data elements (u8 or u16) to be received.
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  Timeout Timeout duration.
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval HAL status
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Receive(USART_HandleTypeDef *husart, uint8_t *pRxData, uint16_t Size, u
 830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint16_t *tmp;
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t tickstart = 0U;
ARM GAS  /tmp/cctb5cV2.s 			page 16


 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_READY)
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if ((pRxData == NULL) || (Size == 0))
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       return  HAL_ERROR;
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Process Locked */
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     __HAL_LOCK(husart);
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_RX;
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Init tickstart for timeout management */
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     tickstart = HAL_GetTick();
 848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->RxXferSize = Size;
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->RxXferCount = Size;
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Check the remain data to be received */
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     while (husart->RxXferCount > 0U)
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->RxXferCount--;
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       if (husart->Init.WordLength == USART_WORDLENGTH_9B)
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Wait until TXE flag is set to send dummy byte in order to generate the clock for the sla
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         if (USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_
 859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           return HAL_TIMEOUT;
 861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Send dummy byte in order to generate clock */
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->Instance->DR = (DUMMY_DATA & (uint16_t)0x01FF);
 864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Wait for RXNE Flag */
 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         if (USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           return HAL_TIMEOUT;
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         tmp = (uint16_t *) pRxData ;
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         if (husart->Init.Parity == USART_PARITY_NONE)
 872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           *tmp = (uint16_t)(husart->Instance->DR & (uint16_t)0x01FF);
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           pRxData += 2U;
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         else
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           *tmp = (uint16_t)(husart->Instance->DR & (uint16_t)0x00FF);
 879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           pRxData += 1U;
 880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       else
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
 884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Wait until TXE flag is set to send dummy byte in order to generate the clock for the sla
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         if (USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           return HAL_TIMEOUT;
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
ARM GAS  /tmp/cctb5cV2.s 			page 17


 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Send Dummy Byte in order to generate clock */
 891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->Instance->DR = (DUMMY_DATA & (uint16_t)0x00FF);
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Wait until RXNE flag is set to receive the byte */
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         if (USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           return HAL_TIMEOUT;
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         if (husart->Init.Parity == USART_PARITY_NONE)
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           /* Receive data */
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           *pRxData++ = (uint8_t)(husart->Instance->DR & (uint8_t)0x00FF);
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         else
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           /* Receive data */
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           *pRxData++ = (uint8_t)(husart->Instance->DR & (uint8_t)0x007F);
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
 910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->State = HAL_USART_STATE_READY;
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Process Unlocked */
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     __HAL_UNLOCK(husart);
 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return HAL_OK;
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   else
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return HAL_BUSY;
 922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
 926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Full-Duplex Send and Receive an amount of data in full-duplex mode (blocking mode).
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         the sent data and the received data are handled as sets of u16. In this case, Size must
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         of u16 available through pTxData and through pRxData.
 930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart  Pointer to a USART_HandleTypeDef structure that contains
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                 the configuration information for the specified USART module.
 932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  pTxData Pointer to TX data buffer (u8 or u16 data elements).
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  pRxData Pointer to RX data buffer (u8 or u16 data elements).
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  Size    Amount of data elements (u8 or u16) to be sent (same amount to be received).
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  Timeout Timeout duration
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval HAL status
 937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_TransmitReceive(USART_HandleTypeDef *husart, uint8_t *pTxData, uint8_t 
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
 940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint16_t *tmp;
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t tickstart = 0U;
 942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_READY)
 944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0))
 946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
ARM GAS  /tmp/cctb5cV2.s 			page 18


 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       return  HAL_ERROR;
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Process Locked */
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     __HAL_LOCK(husart);
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_RX;
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Init tickstart for timeout management */
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     tickstart = HAL_GetTick();
 957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->RxXferSize = Size;
 959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->TxXferSize = Size;
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->TxXferCount = Size;
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->RxXferCount = Size;
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Check the remain data to be received */
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     while (husart->TxXferCount > 0U)
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->TxXferCount--;
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->RxXferCount--;
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       if (husart->Init.WordLength == USART_WORDLENGTH_9B)
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
 970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Wait for TC flag in order to write data in DR */
 971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         if (USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           return HAL_TIMEOUT;
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         tmp = (uint16_t *) pTxData;
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         if (husart->Init.Parity == USART_PARITY_NONE)
 978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           pTxData += 2U;
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         else
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           pTxData += 1U;
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Wait for RXNE Flag */
 987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         if (USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           return HAL_TIMEOUT;
 990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         tmp = (uint16_t *) pRxData ;
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         if (husart->Init.Parity == USART_PARITY_NONE)
 993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           *tmp = (uint16_t)(husart->Instance->DR & (uint16_t)0x01FF);
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           pRxData += 2U;
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         else
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           *tmp = (uint16_t)(husart->Instance->DR & (uint16_t)0x00FF);
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           pRxData += 1U;
1001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
1003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       else
ARM GAS  /tmp/cctb5cV2.s 			page 19


1004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Wait for TC flag in order to write data in DR */
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         if (USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_
1007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           return HAL_TIMEOUT;
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->Instance->DR = (*pTxData++ & (uint8_t)0x00FF);
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Wait for RXNE Flag */
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         if (USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           return HAL_TIMEOUT;
1016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         if (husart->Init.Parity == USART_PARITY_NONE)
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           /* Receive data */
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           *pRxData++ = (uint8_t)(husart->Instance->DR & (uint8_t)0x00FF);
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         else
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           /* Receive data */
1025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           *pRxData++ = (uint8_t)(husart->Instance->DR & (uint8_t)0x007F);
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->State = HAL_USART_STATE_READY;
1031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Process Unlocked */
1033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     __HAL_UNLOCK(husart);
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return HAL_OK;
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   else
1038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return HAL_BUSY;
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Simplex Send an amount of data in non-blocking mode.
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         of u16 provided through pTxData.
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart  Pointer to a USART_HandleTypeDef structure that contains
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                 the configuration information for the specified USART module.
1050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  pTxData Pointer to data buffer (u8 or u16 data elements).
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  Size    Amount of data elements (u8 or u16) to be sent.
1052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval HAL status
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @note   The USART errors are not managed to avoid the overrun error.
1054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Transmit_IT(USART_HandleTypeDef *husart, uint8_t *pTxData, uint16_t Siz
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_READY)
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if ((pTxData == NULL) || (Size == 0))
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
ARM GAS  /tmp/cctb5cV2.s 			page 20


1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       return HAL_ERROR;
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Process Locked */
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     __HAL_LOCK(husart);
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->pTxBuffPtr = pTxData;
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->TxXferSize = Size;
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->TxXferCount = Size;
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_TX;
1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* The USART Error Interrupts: (Frame error, Noise error, Overrun error)
1075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        are not managed by the USART transmit process to avoid the overrun interrupt
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        when the USART mode is configured for transmit and receive "USART_MODE_TX_RX"
1077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        to benefit for the frame error and noise interrupts the USART mode should be
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        configured only for transmit "USART_MODE_TX"
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        The __HAL_USART_ENABLE_IT(husart, USART_IT_ERR) can be used to enable the Frame error,
1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        Noise error interrupt */
1081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Process Unlocked */
1083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     __HAL_UNLOCK(husart);
1084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Enable the USART Transmit Data Register Empty Interrupt */
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     SET_BIT(husart->Instance->CR1, USART_CR1_TXEIE);
1087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return HAL_OK;
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
1090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   else
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return HAL_BUSY;
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
1094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Simplex Receive an amount of data in non-blocking mode.
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @note   To receive synchronous data, dummy data are simultaneously transmitted.
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         of u16 available through pRxData.
1102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart  Pointer to a USART_HandleTypeDef structure that contains
1103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                 the configuration information for the specified USART module.
1104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  pRxData Pointer to data buffer (u8 or u16 data elements).
1105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  Size    Amount of data elements (u8 or u16) to be received.
1106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval HAL status
1107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Receive_IT(USART_HandleTypeDef *husart, uint8_t *pRxData, uint16_t Size
1109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_READY)
1111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if ((pRxData == NULL) || (Size == 0))
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       return HAL_ERROR;
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Process Locked */
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     __HAL_LOCK(husart);
ARM GAS  /tmp/cctb5cV2.s 			page 21


1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->pRxBuffPtr = pRxData;
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->RxXferSize = Size;
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->RxXferCount = Size;
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_RX;
1125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Process Unlocked */
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     __HAL_UNLOCK(husart);
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Enable the USART Parity Error and Data Register not empty Interrupts */
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     SET_BIT(husart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Enable the USART Error Interrupt: (Frame error, noise error, overrun error) */
1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     SET_BIT(husart->Instance->CR3, USART_CR3_EIE);
1134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Send dummy byte in order to generate the clock for the slave to send data */
1136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->Instance->DR = (DUMMY_DATA & (uint16_t)0x01FF);
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return HAL_OK;
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   else
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return HAL_BUSY;
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Full-Duplex Send and Receive an amount of data in full-duplex mode (non-blocking).
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         the sent data and the received data are handled as sets of u16. In this case, Size must
1150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         of u16 available through pTxData and through pRxData.
1151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart  Pointer to a USART_HandleTypeDef structure that contains
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                 the configuration information for the specified USART module.
1153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  pTxData Pointer to TX data buffer (u8 or u16 data elements).
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  pRxData Pointer to RX data buffer (u8 or u16 data elements).
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  Size    Amount of data elements (u8 or u16) to be sent (same amount to be received).
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval HAL status
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_TransmitReceive_IT(USART_HandleTypeDef *husart, uint8_t *pTxData, uint8
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_READY)
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0))
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       return HAL_ERROR;
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Process Locked */
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     __HAL_LOCK(husart);
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->pRxBuffPtr = pRxData;
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->RxXferSize = Size;
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->RxXferCount = Size;
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->pTxBuffPtr = pTxData;
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->TxXferSize = Size;
1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->TxXferCount = Size;
ARM GAS  /tmp/cctb5cV2.s 			page 22


1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_TX_RX;
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Process Unlocked */
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     __HAL_UNLOCK(husart);
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Enable the USART Data Register not empty Interrupt */
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     SET_BIT(husart->Instance->CR1, USART_CR1_RXNEIE);
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Enable the USART Parity Error Interrupt */
1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     SET_BIT(husart->Instance->CR1, USART_CR1_PEIE);
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Enable the USART Error Interrupt: (Frame error, noise error, overrun error) */
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     SET_BIT(husart->Instance->CR3, USART_CR3_EIE);
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Enable the USART Transmit Data Register Empty Interrupt */
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     SET_BIT(husart->Instance->CR1, USART_CR1_TXEIE);
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return HAL_OK;
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   else
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return HAL_BUSY;
1199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
1203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Simplex Send an amount of data in DMA mode.
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         of u16 provided through pTxData.
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart  Pointer to a USART_HandleTypeDef structure that contains
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                 the configuration information for the specified USART module.
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  pTxData Pointer to data buffer (u8 or u16 data elements).
1210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  Size    Amount of data elements (u8 or u16) to be sent.
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval HAL status
1212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Transmit_DMA(USART_HandleTypeDef *husart, uint8_t *pTxData, uint16_t Si
1214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t *tmp;
1216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_READY)
1218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if ((pTxData == NULL) || (Size == 0))
1220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       return HAL_ERROR;
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Process Locked */
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     __HAL_LOCK(husart);
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->pTxBuffPtr = pTxData;
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->TxXferSize = Size;
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->TxXferCount = Size;
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_TX;
ARM GAS  /tmp/cctb5cV2.s 			page 23


1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Set the USART DMA transfer complete callback */
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->hdmatx->XferCpltCallback = USART_DMATransmitCplt;
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Set the USART DMA Half transfer complete callback */
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->hdmatx->XferHalfCpltCallback = USART_DMATxHalfCplt;
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Set the DMA error callback */
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->hdmatx->XferErrorCallback = USART_DMAError;
1241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Set the DMA abort callback */
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->hdmatx->XferAbortCallback = NULL;
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Enable the USART transmit DMA channel */
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     tmp = (uint32_t *)&pTxData;
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     HAL_DMA_Start_IT(husart->hdmatx, *(uint32_t *)tmp, (uint32_t)&husart->Instance->DR, Size);
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     __HAL_USART_CLEAR_FLAG(husart, USART_FLAG_TC);
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Process Unlocked */
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     __HAL_UNLOCK(husart);
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     in the USART CR3 register */
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     SET_BIT(husart->Instance->CR3, USART_CR3_DMAT);
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return HAL_OK;
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   else
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return HAL_BUSY;
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Full-Duplex Receive an amount of data in DMA mode.
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         of u16 available through pRxData.
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart  Pointer to a USART_HandleTypeDef structure that contains
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                 the configuration information for the specified USART module.
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  pRxData Pointer to data buffer (u8 or u16 data elements).
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  Size    Amount of data elements (u8 or u16) to be received.
1276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval HAL status
1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @note   The USART DMA transmit channel must be configured in order to generate the clock for th
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @note   When the USART parity is enabled (PCE = 1) the data received contain the parity bit.
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Receive_DMA(USART_HandleTypeDef *husart, uint8_t *pRxData, uint16_t Siz
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t *tmp;
1283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_READY)
1285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if ((pRxData == NULL) || (Size == 0))
1287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       return HAL_ERROR;
ARM GAS  /tmp/cctb5cV2.s 			page 24


1289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Process Locked */
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     __HAL_LOCK(husart);
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->pRxBuffPtr = pRxData;
1295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->RxXferSize = Size;
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->pTxBuffPtr = pRxData;
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->TxXferSize = Size;
1298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_RX;
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Set the USART DMA Rx transfer complete callback */
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->hdmarx->XferCpltCallback = USART_DMAReceiveCplt;
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Set the USART DMA Half transfer complete callback */
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->hdmarx->XferHalfCpltCallback = USART_DMARxHalfCplt;
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Set the USART DMA Rx transfer error callback */
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->hdmarx->XferErrorCallback = USART_DMAError;
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Set the DMA abort callback */
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->hdmarx->XferAbortCallback = NULL;
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Set the USART Tx DMA transfer complete callback as NULL because the communication closing
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     is performed in DMA reception complete callback  */
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->hdmatx->XferHalfCpltCallback = NULL;
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->hdmatx->XferCpltCallback = NULL;
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Set the DMA error callback */
1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->hdmatx->XferErrorCallback = USART_DMAError;
1321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Set the DMA AbortCpltCallback */
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->hdmatx->XferAbortCallback = NULL;
1324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Enable the USART receive DMA channel */
1326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     tmp = (uint32_t *)&pRxData;
1327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     HAL_DMA_Start_IT(husart->hdmarx, (uint32_t)&husart->Instance->DR, *(uint32_t *)tmp, Size);
1328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Enable the USART transmit DMA channel: the transmit channel is used in order
1330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        to generate in the non-blocking mode the clock to the slave device,
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        this mode isn't a simplex receive mode but a full-duplex receive one */
1332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     HAL_DMA_Start_IT(husart->hdmatx, *(uint32_t *)tmp, (uint32_t)&husart->Instance->DR, Size);
1333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Clear the Overrun flag just before enabling the DMA Rx request: mandatory for the second tra
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     __HAL_USART_CLEAR_OREFLAG(husart);
1336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Process Unlocked */
1338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     __HAL_UNLOCK(husart);
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Enable the USART Parity Error Interrupt */
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     SET_BIT(husart->Instance->CR1, USART_CR1_PEIE);
1342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Enable the USART Error Interrupt: (Frame error, noise error, overrun error) */
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     SET_BIT(husart->Instance->CR3, USART_CR3_EIE);
1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
ARM GAS  /tmp/cctb5cV2.s 			page 25


1346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        in the USART CR3 register */
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     SET_BIT(husart->Instance->CR3, USART_CR3_DMAR);
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        in the USART CR3 register */
1352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     SET_BIT(husart->Instance->CR3, USART_CR3_DMAT);
1353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return HAL_OK;
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
1356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   else
1357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
1358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return HAL_BUSY;
1359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
1361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
1363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Full-Duplex Transmit Receive an amount of data in DMA mode.
1364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         the sent data and the received data are handled as sets of u16. In this case, Size must
1366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         of u16 available through pTxData and through pRxData.
1367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart  Pointer to a USART_HandleTypeDef structure that contains
1368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                 the configuration information for the specified USART module.
1369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  pTxData Pointer to TX data buffer (u8 or u16 data elements).
1370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  pRxData Pointer to RX data buffer (u8 or u16 data elements).
1371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  Size    Amount of data elements (u8 or u16) to be received/sent.
1372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @note   When the USART parity is enabled (PCE = 1) the data received contain the parity bit.
1373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval HAL status
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
1375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_TransmitReceive_DMA(USART_HandleTypeDef *husart, uint8_t *pTxData, uint
1376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t *tmp;
1378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_READY)
1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0))
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
1383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       return HAL_ERROR;
1384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Process Locked */
1386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     __HAL_LOCK(husart);
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->pRxBuffPtr = pRxData;
1389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->RxXferSize = Size;
1390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->pTxBuffPtr = pTxData;
1391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->TxXferSize = Size;
1392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
1394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_TX_RX;
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Set the USART DMA Rx transfer complete callback */
1397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->hdmarx->XferCpltCallback = USART_DMAReceiveCplt;
1398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Set the USART DMA Half transfer complete callback */
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->hdmarx->XferHalfCpltCallback = USART_DMARxHalfCplt;
1401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Set the USART DMA Tx transfer complete callback */
ARM GAS  /tmp/cctb5cV2.s 			page 26


1403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->hdmatx->XferCpltCallback = USART_DMATransmitCplt;
1404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Set the USART DMA Half transfer complete callback */
1406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->hdmatx->XferHalfCpltCallback = USART_DMATxHalfCplt;
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Set the USART DMA Tx transfer error callback */
1409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->hdmatx->XferErrorCallback = USART_DMAError;
1410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Set the USART DMA Rx transfer error callback */
1412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->hdmarx->XferErrorCallback = USART_DMAError;
1413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Set the DMA abort callback */
1415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->hdmarx->XferAbortCallback = NULL;
1416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Enable the USART receive DMA channel */
1418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     tmp = (uint32_t *)&pRxData;
1419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     HAL_DMA_Start_IT(husart->hdmarx, (uint32_t)&husart->Instance->DR, *(uint32_t *)tmp, Size);
1420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Enable the USART transmit DMA channel */
1422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     tmp = (uint32_t *)&pTxData;
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     HAL_DMA_Start_IT(husart->hdmatx, *(uint32_t *)tmp, (uint32_t)&husart->Instance->DR, Size);
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
1426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     __HAL_USART_CLEAR_FLAG(husart, USART_FLAG_TC);
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Clear the Overrun flag: mandatory for the second transfer in circular mode */
1429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     __HAL_USART_CLEAR_OREFLAG(husart);
1430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Process Unlocked */
1432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     __HAL_UNLOCK(husart);
1433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Enable the USART Parity Error Interrupt */
1435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     SET_BIT(husart->Instance->CR1, USART_CR1_PEIE);
1436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Enable the USART Error Interrupt: (Frame error, noise error, overrun error) */
1438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     SET_BIT(husart->Instance->CR3, USART_CR3_EIE);
1439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        in the USART CR3 register */
1442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     SET_BIT(husart->Instance->CR3, USART_CR3_DMAR);
1443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        in the USART CR3 register */
1446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     SET_BIT(husart->Instance->CR3, USART_CR3_DMAT);
1447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return HAL_OK;
1449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
1450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   else
1451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
1452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return HAL_BUSY;
1453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
1455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
1457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Pauses the DMA Transfer.
1458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart Pointer to a USART_HandleTypeDef structure that contains
1459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                the configuration information for the specified USART module.
ARM GAS  /tmp/cctb5cV2.s 			page 27


1460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval HAL status
1461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
1462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_DMAPause(USART_HandleTypeDef *husart)
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
1464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Process Locked */
1465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   __HAL_LOCK(husart);
1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Disable the USART DMA Tx request */
1468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAT);
1469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Process Unlocked */
1471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   __HAL_UNLOCK(husart);
1472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   return HAL_OK;
1474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
1475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
1477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Resumes the DMA Transfer.
1478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart Pointer to a USART_HandleTypeDef structure that contains
1479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                the configuration information for the specified USART module.
1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval HAL status
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
1482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_DMAResume(USART_HandleTypeDef *husart)
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Process Locked */
1485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   __HAL_LOCK(husart);
1486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Enable the USART DMA Tx request */
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   SET_BIT(husart->Instance->CR3, USART_CR3_DMAT);
1489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Process Unlocked */
1491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   __HAL_UNLOCK(husart);
1492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   return HAL_OK;
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
1495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
1497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Stops the DMA Transfer.
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart Pointer to a USART_HandleTypeDef structure that contains
1499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                the configuration information for the specified USART module.
1500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval HAL status
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
1502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_DMAStop(USART_HandleTypeDef *husart)
1503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
1504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t dmarequest = 0x00U;
1505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* The Lock is not implemented on this API to allow the user application
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****      to call the HAL USART API under callbacks HAL_USART_TxCpltCallback() / HAL_USART_RxCpltCallbac
1507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****      and the correspond call back is executed HAL_USART_TxCpltCallback() / HAL_USART_RxCpltCallback
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****      */
1510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Stop USART DMA Tx request if ongoing */
1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   dmarequest = HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAT);
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if ((husart->State == HAL_USART_STATE_BUSY_TX) && dmarequest)
1514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     USART_EndTxTransfer(husart);
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
ARM GAS  /tmp/cctb5cV2.s 			page 28


1517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Abort the USART DMA Tx channel */
1518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (husart->hdmatx != NULL)
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
1520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       HAL_DMA_Abort(husart->hdmatx);
1521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Disable the USART Tx DMA request */
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAT);
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
1526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Stop USART DMA Rx request if ongoing */
1528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   dmarequest = HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAR);
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if ((husart->State == HAL_USART_STATE_BUSY_RX) && dmarequest)
1530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     USART_EndRxTransfer(husart);
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Abort the USART DMA Rx channel */
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (husart->hdmarx != NULL)
1535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       HAL_DMA_Abort(husart->hdmarx);
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Disable the USART Rx DMA request */
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAR);
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   return HAL_OK;
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Abort ongoing transfer (blocking mode).
1548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart USART handle.
1549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @note   This procedure could be used for aborting any ongoing transfer (either Tx or Rx,
1550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         as described by TransferType parameter) started in Interrupt or DMA mode.
1551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         This procedure performs following operations :
1552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           - Disable PPP Interrupts (depending of transfer direction)
1553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           - Set handle State to READY
1556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval HAL status
1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** */
1559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Abort(USART_HandleTypeDef *husart)
1560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
1561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1
1563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR3, USART_CR3_EIE);
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Disable the USART DMA Tx request if enabled */
1566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAT))
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAT);
1569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Abort the USART DMA Tx channel : use blocking DMA Abort API (no callback) */
1571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (husart->hdmatx != NULL)
1572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
1573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Set the USART DMA Abort callback to Null.
ARM GAS  /tmp/cctb5cV2.s 			page 29


1574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****          No call back execution at end of DMA abort procedure */
1575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->hdmatx->XferAbortCallback = NULL;
1576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       HAL_DMA_Abort(husart->hdmatx);
1578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
1579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
1580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Disable the USART DMA Rx request if enabled */
1582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAR))
1583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
1584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAR);
1585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Abort the USART DMA Rx channel : use blocking DMA Abort API (no callback) */
1587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (husart->hdmarx != NULL)
1588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Set the USART DMA Abort callback to Null.
1590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****          No call back execution at end of DMA abort procedure */
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->hdmarx->XferAbortCallback = NULL;
1592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       HAL_DMA_Abort(husart->hdmarx);
1594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
1596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Reset Tx and Rx transfer counters */
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->TxXferCount = 0x00U;
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->RxXferCount = 0x00U;
1600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Restore husart->State to Ready */
1602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->State  = HAL_USART_STATE_READY;
1603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Reset Handle ErrorCode to No Error */
1605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->ErrorCode = HAL_USART_ERROR_NONE;
1606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   return HAL_OK;
1608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
1609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
1611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Abort ongoing transfer (Interrupt mode).
1612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart USART handle.
1613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @note   This procedure could be used for aborting any ongoing transfer (either Tx or Rx,
1614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         as described by TransferType parameter) started in Interrupt or DMA mode.
1615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         This procedure performs following operations :
1616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           - Disable PPP Interrupts (depending of transfer direction)
1617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           - Set handle State to READY
1620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *           - At abort completion, call user abort complete callback
1621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval HAL status
1624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** */
1625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Abort_IT(USART_HandleTypeDef *husart)
1626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t AbortCplt = 0x01U;
1628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1
ARM GAS  /tmp/cctb5cV2.s 			page 30


1631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR3, USART_CR3_EIE);
1632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to USART Handle, DMA Abort complete callbacks s
1634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****      before any call to DMA Abort functions */
1635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* DMA Tx Handle is valid */
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (husart->hdmatx != NULL)
1637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Set DMA Abort Complete callback if USART DMA Tx request if enabled.
1639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        Otherwise, set it to NULL */
1640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAT))
1641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
1642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->hdmatx->XferAbortCallback = USART_DMATxAbortCallback;
1643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
1644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     else
1645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
1646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->hdmatx->XferAbortCallback = NULL;
1647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
1648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
1649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* DMA Rx Handle is valid */
1650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (husart->hdmarx != NULL)
1651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Set DMA Abort Complete callback if USART DMA Rx request if enabled.
1653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****        Otherwise, set it to NULL */
1654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAR))
1655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
1656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->hdmarx->XferAbortCallback = USART_DMARxAbortCallback;
1657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
1658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     else
1659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
1660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->hdmarx->XferAbortCallback = NULL;
1661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
1662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
1663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Disable the USART DMA Tx request if enabled */
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAT))
1666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
1667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Disable DMA Tx at USART level */
1668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAT);
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Abort the USART DMA Tx channel : use non blocking DMA Abort API (callback) */
1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (husart->hdmatx != NULL)
1672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
1673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* USART Tx DMA Abort callback has already been initialised :
1674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****          will lead to call HAL_USART_AbortCpltCallback() at end of DMA abort procedure */
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Abort DMA TX */
1677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       if (HAL_DMA_Abort_IT(husart->hdmatx) != HAL_OK)
1678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
1679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->hdmatx->XferAbortCallback = NULL;
1680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
1681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       else
1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         AbortCplt = 0x00U;
1684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
1685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
1686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
1687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
ARM GAS  /tmp/cctb5cV2.s 			page 31


1688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Disable the USART DMA Rx request if enabled */
1689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAR))
1690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
1691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAR);
1692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Abort the USART DMA Rx channel : use non blocking DMA Abort API (callback) */
1694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (husart->hdmarx != NULL)
1695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
1696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* USART Rx DMA Abort callback has already been initialised :
1697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****          will lead to call HAL_USART_AbortCpltCallback() at end of DMA abort procedure */
1698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Abort DMA RX */
1700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       if (HAL_DMA_Abort_IT(husart->hdmarx) != HAL_OK)
1701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
1702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->hdmarx->XferAbortCallback = NULL;
1703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         AbortCplt = 0x01U;
1704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
1705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       else
1706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
1707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         AbortCplt = 0x00U;
1708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
1709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
1710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
1711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (AbortCplt  == 0x01U)
1714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
1715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Reset Tx and Rx transfer counters */
1716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->TxXferCount = 0x00U;
1717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->RxXferCount = 0x00U;
1718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Reset errorCode */
1720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
1721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Restore husart->State to Ready */
1723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->State  = HAL_USART_STATE_READY;
1724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
1727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Call registered Abort Complete Callback */
1728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->AbortCpltCallback(husart);
1729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #else
1730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Call legacy weak Abort Complete Callback */
1731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     HAL_USART_AbortCpltCallback(husart);
1732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
1733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
1734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   return HAL_OK;
1736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
1737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
1739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  This function handles USART interrupt request.
1740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart Pointer to a USART_HandleTypeDef structure that contains
1741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                the configuration information for the specified USART module.
1742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval None
1743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
1744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** void HAL_USART_IRQHandler(USART_HandleTypeDef *husart)
ARM GAS  /tmp/cctb5cV2.s 			page 32


1745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
1746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t isrflags = READ_REG(husart->Instance->SR);
1747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t cr1its   = READ_REG(husart->Instance->CR1);
1748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t cr3its   = READ_REG(husart->Instance->CR3);
1749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t errorflags = 0x00U;
1750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t dmarequest = 0x00U;
1751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* If no error occurs */
1753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
1754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (errorflags == RESET)
1755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
1756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* USART in mode Receiver -------------------------------------------------*/
1757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
1759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       if (husart->State == HAL_USART_STATE_BUSY_RX)
1760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
1761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         USART_Receive_IT(husart);
1762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
1763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       else
1764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
1765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         USART_TransmitReceive_IT(husart);
1766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
1767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       return;
1768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
1769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
1770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* If some errors occur */
1771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE
1772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
1773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* USART parity error interrupt occurred ----------------------------------*/
1774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
1776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->ErrorCode |= HAL_USART_ERROR_PE;
1777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
1778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* USART noise error interrupt occurred --------------------------------*/
1780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
1782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->ErrorCode |= HAL_USART_ERROR_NE;
1783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
1784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* USART frame error interrupt occurred --------------------------------*/
1786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
1788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->ErrorCode |= HAL_USART_ERROR_FE;
1789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
1790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* USART Over-Run interrupt occurred -----------------------------------*/
1792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (((isrflags & USART_SR_ORE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
1794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->ErrorCode |= HAL_USART_ERROR_ORE;
1795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
1796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (husart->ErrorCode != HAL_USART_ERROR_NONE)
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
1799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* USART in mode Receiver -----------------------------------------------*/
1800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
ARM GAS  /tmp/cctb5cV2.s 			page 33


1802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         if (husart->State == HAL_USART_STATE_BUSY_RX)
1803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
1804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           USART_Receive_IT(husart);
1805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
1806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         else
1807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
1808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           USART_TransmitReceive_IT(husart);
1809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
1810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
1811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       consider error as blocking */
1813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       dmarequest = HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAR);
1814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       if (((husart->ErrorCode & HAL_USART_ERROR_ORE) != RESET) || dmarequest)
1815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
1816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Set the USART state ready to be able to start again the process,
1817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         USART_EndRxTransfer(husart);
1819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Disable the USART DMA Rx request if enabled */
1821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         if (HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAR))
1822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
1823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAR);
1824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           /* Abort the USART DMA Rx channel */
1826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           if (husart->hdmarx != NULL)
1827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           {
1828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             /* Set the USART DMA Abort callback :
1829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             will lead to call HAL_USART_ErrorCallback() at end of DMA abort procedure */
1830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             husart->hdmarx->XferAbortCallback = USART_DMAAbortOnError;
1831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             if (HAL_DMA_Abort_IT(husart->hdmarx) != HAL_OK)
1833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             {
1834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****               /* Call Directly XferAbortCallback function in case of error */
1835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****               husart->hdmarx->XferAbortCallback(husart->hdmarx);
1836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             }
1837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           }
1838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           else
1839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           {
1840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             /* Call user error callback */
1841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
1842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             /* Call registered Error Callback */
1843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             husart->ErrorCallback(husart);
1844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #else
1845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             /* Call legacy weak Error Callback */
1846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             HAL_USART_ErrorCallback(husart);
1847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
1848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           }
1849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
1850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         else
1851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
1852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           /* Call user error callback */
1853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
1854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           /* Call registered Error Callback */
1855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           husart->ErrorCallback(husart);
1856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #else
1857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           /* Call legacy weak Error Callback */
1858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           HAL_USART_ErrorCallback(husart);
ARM GAS  /tmp/cctb5cV2.s 			page 34


1859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
1860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
1861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
1862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       else
1863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
1864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Call user error callback */
1865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
1866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Call registered Error Callback */
1867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->ErrorCallback(husart);
1868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #else
1869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Call legacy weak Error Callback */
1870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         HAL_USART_ErrorCallback(husart);
1871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
1872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->ErrorCode = HAL_USART_ERROR_NONE;
1873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
1874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
1875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return;
1876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
1877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* USART in mode Transmitter -----------------------------------------------*/
1879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
1880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
1881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (husart->State == HAL_USART_STATE_BUSY_TX)
1882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
1883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       USART_Transmit_IT(husart);
1884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
1885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     else
1886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
1887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       USART_TransmitReceive_IT(husart);
1888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
1889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return;
1890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
1891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* USART in mode Transmitter (transmission end) ----------------------------*/
1893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
1895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     USART_EndTransmit_IT(husart);
1896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return;
1897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
1898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
1899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
1901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Tx Transfer completed callbacks.
1902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart Pointer to a USART_HandleTypeDef structure that contains
1903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                the configuration information for the specified USART module.
1904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval None
1905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
1906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** __weak void HAL_USART_TxCpltCallback(USART_HandleTypeDef *husart)
1907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
1908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
1909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   UNUSED(husart);
1910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****            the HAL_USART_TxCpltCallback could be implemented in the user file
1912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****    */
1913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
1914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
ARM GAS  /tmp/cctb5cV2.s 			page 35


1916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Tx Half Transfer completed callbacks.
1917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart Pointer to a USART_HandleTypeDef structure that contains
1918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                the configuration information for the specified USART module.
1919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval None
1920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
1921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** __weak void HAL_USART_TxHalfCpltCallback(USART_HandleTypeDef *husart)
1922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
1923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
1924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   UNUSED(husart);
1925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****            the HAL_USART_TxHalfCpltCallback could be implemented in the user file
1927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****    */
1928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
1929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
1931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Rx Transfer completed callbacks.
1932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart Pointer to a USART_HandleTypeDef structure that contains
1933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                the configuration information for the specified USART module.
1934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval None
1935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
1936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** __weak void HAL_USART_RxCpltCallback(USART_HandleTypeDef *husart)
1937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
1938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
1939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   UNUSED(husart);
1940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****            the HAL_USART_RxCpltCallback could be implemented in the user file
1942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****    */
1943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
1944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
1946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Rx Half Transfer completed callbacks.
1947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart Pointer to a USART_HandleTypeDef structure that contains
1948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                the configuration information for the specified USART module.
1949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval None
1950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
1951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** __weak void HAL_USART_RxHalfCpltCallback(USART_HandleTypeDef *husart)
1952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
1953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
1954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   UNUSED(husart);
1955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****            the HAL_USART_RxHalfCpltCallback could be implemented in the user file
1957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****    */
1958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
1959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
1961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Tx/Rx Transfers completed callback for the non-blocking process.
1962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart Pointer to a USART_HandleTypeDef structure that contains
1963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                the configuration information for the specified USART module.
1964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval None
1965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
1966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** __weak void HAL_USART_TxRxCpltCallback(USART_HandleTypeDef *husart)
1967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
1968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
1969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   UNUSED(husart);
1970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****            the HAL_USART_TxRxCpltCallback could be implemented in the user file
1972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****    */
ARM GAS  /tmp/cctb5cV2.s 			page 36


1973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
1974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
1976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  USART error callbacks.
1977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart Pointer to a USART_HandleTypeDef structure that contains
1978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                the configuration information for the specified USART module.
1979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval None
1980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
1981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** __weak void HAL_USART_ErrorCallback(USART_HandleTypeDef *husart)
1982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
1983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
1984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   UNUSED(husart);
1985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****            the HAL_USART_ErrorCallback could be implemented in the user file
1987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****    */
1988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
1989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
1990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
1991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  USART Abort Complete callback.
1992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart USART handle.
1993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval None
1994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
1995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** __weak void HAL_USART_AbortCpltCallback(USART_HandleTypeDef *husart)
1996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
1997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
1998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   UNUSED(husart);
1999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             the HAL_USART_AbortCpltCallback can be implemented in the user file.
2002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****    */
2003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
2004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
2006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @}
2007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
2008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /** @defgroup USART_Exported_Functions_Group3 Peripheral State and Errors functions
2010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *  @brief   USART State and Errors functions
2011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *
2012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** @verbatim
2013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   ==============================================================================
2014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****                   ##### Peripheral State and Errors functions #####
2015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   ==============================================================================
2016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   [..]
2017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     This subsection provides a set of functions allowing to return the State of
2018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     USART communication
2019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     process, return Peripheral Errors occurred during communication process
2020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****      (+) HAL_USART_GetState() API can be helpful to check in run-time the state
2021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****          of the USART peripheral.
2022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****      (+) HAL_USART_GetError() check in run-time errors that could be occurred during
2023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****          communication.
2024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** @endverbatim
2025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @{
2026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
2027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
2029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Returns the USART state.
ARM GAS  /tmp/cctb5cV2.s 			page 37


2030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart Pointer to a USART_HandleTypeDef structure that contains
2031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                the configuration information for the specified USART module.
2032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval HAL state
2033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
2034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** HAL_USART_StateTypeDef HAL_USART_GetState(USART_HandleTypeDef *husart)
2035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
2036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   return husart->State;
2037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
2038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
2040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Return the USART error code
2041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart Pointer to a USART_HandleTypeDef structure that contains
2042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                the configuration information for the specified USART.
2043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval USART Error Code
2044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
2045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** uint32_t HAL_USART_GetError(USART_HandleTypeDef *husart)
2046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
2047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   return husart->ErrorCode;
2048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
2049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
2051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @}
2052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
2053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /** @defgroup USART_Private_Functions USART Private Functions
2055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****  * @{
2056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****  */
2057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
2059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Initialize the callbacks to their default values.
2060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart USART handle.
2061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval none
2062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
2063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** void USART_InitCallbacksToDefault(USART_HandleTypeDef *husart)
2065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
2066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Init the USART Callback settings */
2067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->TxHalfCpltCallback        = HAL_USART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpl
2068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->TxCpltCallback            = HAL_USART_TxCpltCallback;            /* Legacy weak TxCpltCal
2069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->RxHalfCpltCallback        = HAL_USART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpl
2070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->RxCpltCallback            = HAL_USART_RxCpltCallback;            /* Legacy weak RxCpltCal
2071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->TxRxCpltCallback          = HAL_USART_TxRxCpltCallback;          /* Legacy weak TxRxCpltC
2072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->ErrorCallback             = HAL_USART_ErrorCallback;             /* Legacy weak ErrorCall
2073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->AbortCpltCallback         = HAL_USART_AbortCpltCallback;         /* Legacy weak AbortCplt
2074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
2075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
2078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  DMA USART transmit process complete callback.
2079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
2080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *              the configuration information for the specified DMA module.
2081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval None
2082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
2083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static void USART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
2085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   USART_HandleTypeDef *husart = (USART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* DMA Normal mode */
ARM GAS  /tmp/cctb5cV2.s 			page 38


2087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
2088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
2089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->TxXferCount = 0U;
2090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (husart->State == HAL_USART_STATE_BUSY_TX)
2091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
2092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Disable the DMA transfer for transmit request by resetting the DMAT bit
2093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****          in the USART CR3 register */
2094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAT);
2095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Enable the USART Transmit Complete Interrupt */
2097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       SET_BIT(husart->Instance->CR1, USART_CR1_TCIE);
2098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
2099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
2100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* DMA Circular mode */
2101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   else
2102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
2103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (husart->State == HAL_USART_STATE_BUSY_TX)
2104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
2105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Call registered Tx Complete Callback */
2107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->TxCpltCallback(husart);
2108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #else
2109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Call legacy weak Tx Complete Callback */
2110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       HAL_USART_TxCpltCallback(husart);
2111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
2113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
2114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
2115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
2117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  DMA USART transmit process half complete callback
2118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
2119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *              the configuration information for the specified DMA module.
2120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval None
2121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
2122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static void USART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
2124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   USART_HandleTypeDef *husart = (USART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Call registered Tx Half Complete Callback */
2128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->TxHalfCpltCallback(husart);
2129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #else
2130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Call legacy weak Tx Half Complete Callback */
2131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   HAL_USART_TxHalfCpltCallback(husart);
2132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
2134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
2136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  DMA USART receive process complete callback.
2137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
2138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *              the configuration information for the specified DMA module.
2139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval None
2140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
2141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static void USART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
2143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   USART_HandleTypeDef *husart = (USART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
ARM GAS  /tmp/cctb5cV2.s 			page 39


2144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* DMA Normal mode */
2145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
2146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
2147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->RxXferCount = 0x00U;
2148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR1, USART_CR1_PEIE);
2151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_EIE);
2152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Disable the DMA transfer for the Transmit/receiver request by clearing the DMAT/DMAR bit
2154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****          in the USART CR3 register */
2155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAR);
2156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAT);
2157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->State = HAL_USART_STATE_READY;
2159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* The USART state is HAL_USART_STATE_BUSY_RX */
2161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (husart->State == HAL_USART_STATE_BUSY_RX)
2162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
2163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Call registered Rx Complete Callback */
2165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->RxCpltCallback(husart);
2166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #else
2167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Call legacy weak Rx Complete Callback */
2168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       HAL_USART_RxCpltCallback(husart);
2169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
2171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* The USART state is HAL_USART_STATE_BUSY_TX_RX */
2172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     else
2173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
2174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Call registered Tx Rx Complete Callback */
2176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->TxRxCpltCallback(husart);
2177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #else
2178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Call legacy weak Tx Rx Complete Callback */
2179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       HAL_USART_TxRxCpltCallback(husart);
2180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
2182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
2183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* DMA circular mode */
2184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   else
2185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
2186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (husart->State == HAL_USART_STATE_BUSY_RX)
2187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
2188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Call registered Rx Complete Callback */
2190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->RxCpltCallback(husart);
2191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #else
2192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Call legacy weak Rx Complete Callback */
2193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       HAL_USART_RxCpltCallback(husart);
2194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
2196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* The USART state is HAL_USART_STATE_BUSY_TX_RX */
2197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     else
2198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
2199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Call registered Tx Rx Complete Callback */
ARM GAS  /tmp/cctb5cV2.s 			page 40


2201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->TxRxCpltCallback(husart);
2202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #else
2203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Call legacy weak Tx Rx Complete Callback */
2204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       HAL_USART_TxRxCpltCallback(husart);
2205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
2207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
2208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
2209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
2211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  DMA USART receive process half complete callback
2212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
2213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *              the configuration information for the specified DMA module.
2214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval None
2215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
2216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static void USART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
2218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   USART_HandleTypeDef *husart = (USART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Call registered Rx Half Complete Callback */
2222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->RxHalfCpltCallback(husart);
2223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #else
2224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Call legacy weak Rx Half Complete Callback */
2225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   HAL_USART_RxHalfCpltCallback(husart);
2226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
2228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
2230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  DMA USART communication error callback.
2231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
2232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *              the configuration information for the specified DMA module.
2233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval None
2234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
2235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static void USART_DMAError(DMA_HandleTypeDef *hdma)
2236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
2237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t dmarequest = 0x00U;
2238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   USART_HandleTypeDef *husart = (USART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->RxXferCount = 0x00U;
2240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->TxXferCount = 0x00U;
2241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Stop USART DMA Tx request if ongoing */
2243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   dmarequest = HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAT);
2244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if ((husart->State == HAL_USART_STATE_BUSY_TX) && dmarequest)
2245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
2246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     USART_EndTxTransfer(husart);
2247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
2248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Stop USART DMA Rx request if ongoing */
2250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   dmarequest = HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAR);
2251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if ((husart->State == HAL_USART_STATE_BUSY_RX) && dmarequest)
2252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
2253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     USART_EndRxTransfer(husart);
2254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
2255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->ErrorCode |= HAL_USART_ERROR_DMA;
2257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->State = HAL_USART_STATE_READY;
ARM GAS  /tmp/cctb5cV2.s 			page 41


2258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Call registered Error Callback */
2261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->ErrorCallback(husart);
2262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #else
2263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Call legacy weak Error Callback */
2264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   HAL_USART_ErrorCallback(husart);
2265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
2267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
2269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  This function handles USART Communication Timeout.
2270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart Pointer to a USART_HandleTypeDef structure that contains
2271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                the configuration information for the specified USART module.
2272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  Flag specifies the USART flag to check.
2273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  Status The new Flag status (SET or RESET).
2274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  Tickstart Tick start value.
2275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  Timeout Timeout duration.
2276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval HAL status
2277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
2278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static HAL_StatusTypeDef USART_WaitOnFlagUntilTimeout(USART_HandleTypeDef *husart, uint32_t Flag, F
2279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
2280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Wait until flag is set */
2281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   while ((__HAL_USART_GET_FLAG(husart, Flag) ? SET : RESET) == Status)
2282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
2283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Check for the Timeout */
2284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (Timeout != HAL_MAX_DELAY)
2285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
2286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
2287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
2288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Disable the USART Transmit Complete Interrupt */
2289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         CLEAR_BIT(husart->Instance->CR1, USART_CR1_TXEIE);
2290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Disable the USART RXNE Interrupt */
2292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         CLEAR_BIT(husart->Instance->CR1, USART_CR1_RXNEIE);
2293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Disable the USART Parity Error Interrupt */
2295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         CLEAR_BIT(husart->Instance->CR1, USART_CR1_PEIE);
2296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Disable the USART Error Interrupt: (Frame error, noise error, overrun error) */
2298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         CLEAR_BIT(husart->Instance->CR3, USART_CR3_EIE);
2299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->State = HAL_USART_STATE_READY;
2301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Process Unlocked */
2303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         __HAL_UNLOCK(husart);
2304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         return HAL_TIMEOUT;
2306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
2307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
2308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
2309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   return HAL_OK;
2310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
2311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
2313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  End ongoing Tx transfer on USART peripheral (following error detection or Transmit comp
2314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart USART handle.
ARM GAS  /tmp/cctb5cV2.s 			page 42


2315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval None
2316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
2317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static void USART_EndTxTransfer(USART_HandleTypeDef *husart)
2318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
  25              		.loc 1 2318 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
2319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Disable TXEIE and TCIE interrupts */
2320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  31              		.loc 1 2320 0
  32 0000 0268     		ldr	r2, [r0]
  33 0002 D368     		ldr	r3, [r2, #12]
  34 0004 23F0C003 		bic	r3, r3, #192
  35 0008 D360     		str	r3, [r2, #12]
2321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* At end of Tx process, restore husart->State to Ready */
2323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->State = HAL_USART_STATE_READY;
  36              		.loc 1 2323 0
  37 000a 0123     		movs	r3, #1
  38 000c 80F83D30 		strb	r3, [r0, #61]
  39 0010 7047     		bx	lr
  40              		.cfi_endproc
  41              	.LFE99:
  43              		.section	.text.USART_EndRxTransfer,"ax",%progbits
  44              		.align	1
  45              		.syntax unified
  46              		.thumb
  47              		.thumb_func
  48              		.fpu softvfp
  50              	USART_EndRxTransfer:
  51              	.LFB100:
2324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
2325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
2327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  End ongoing Rx transfer on USART peripheral (following error detection or Reception com
2328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart USART handle.
2329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval None
2330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
2331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static void USART_EndRxTransfer(USART_HandleTypeDef *husart)
2332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
  52              		.loc 1 2332 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              	.LVL1:
2333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Disable RXNE, PE and ERR interrupts */
2334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  58              		.loc 1 2334 0
  59 0000 0268     		ldr	r2, [r0]
  60 0002 D368     		ldr	r3, [r2, #12]
  61 0004 23F49073 		bic	r3, r3, #288
  62 0008 D360     		str	r3, [r2, #12]
2335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR3, USART_CR3_EIE);
ARM GAS  /tmp/cctb5cV2.s 			page 43


  63              		.loc 1 2335 0
  64 000a 0268     		ldr	r2, [r0]
  65 000c 5369     		ldr	r3, [r2, #20]
  66 000e 23F00103 		bic	r3, r3, #1
  67 0012 5361     		str	r3, [r2, #20]
2336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* At end of Rx process, restore husart->State to Ready */
2338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->State = HAL_USART_STATE_READY;
  68              		.loc 1 2338 0
  69 0014 0123     		movs	r3, #1
  70 0016 80F83D30 		strb	r3, [r0, #61]
  71 001a 7047     		bx	lr
  72              		.cfi_endproc
  73              	.LFE100:
  75              		.section	.text.USART_Transmit_IT,"ax",%progbits
  76              		.align	1
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  80              		.fpu softvfp
  82              	USART_Transmit_IT:
  83              	.LFB104:
2339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
2340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
2342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  DMA USART communication abort callback, when initiated by HAL services on Error
2343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  hdma DMA handle.
2345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval None
2346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
2347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static void USART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
2349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   USART_HandleTypeDef *husart = (USART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->RxXferCount = 0x00U;
2351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->TxXferCount = 0x00U;
2352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Call registered Error Callback */
2355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->ErrorCallback(husart);
2356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #else
2357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Call legacy weak Error Callback */
2358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   HAL_USART_ErrorCallback(husart);
2359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
2361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
2363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  DMA USART Tx communication abort callback, when initiated by user
2364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         Abort still ongoing for Rx DMA Handle.
2367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  hdma DMA handle.
2368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval None
2369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
2370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static void USART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
2372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   USART_HandleTypeDef *husart = (USART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
ARM GAS  /tmp/cctb5cV2.s 			page 44


2374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->hdmatx->XferAbortCallback = NULL;
2375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Check if an Abort process is still ongoing */
2377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (husart->hdmarx != NULL)
2378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
2379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (husart->hdmarx->XferAbortCallback != NULL)
2380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
2381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       return;
2382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
2383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
2384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->TxXferCount = 0x00U;
2387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->RxXferCount = 0x00U;
2388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Reset errorCode */
2390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->ErrorCode = HAL_USART_ERROR_NONE;
2391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Restore husart->State to Ready */
2393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->State  = HAL_USART_STATE_READY;
2394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Call user Abort complete callback */
2396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Call registered Abort Complete Callback */
2398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->AbortCpltCallback(husart);
2399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #else
2400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Call legacy weak Abort Complete Callback */
2401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   HAL_USART_AbortCpltCallback(husart);
2402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
2404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
2406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  DMA USART Rx communication abort callback, when initiated by user
2407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *         Abort still ongoing for Tx DMA Handle.
2410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  hdma DMA handle.
2411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval None
2412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
2413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static void USART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
2415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   USART_HandleTypeDef *husart = (USART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->hdmarx->XferAbortCallback = NULL;
2418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Check if an Abort process is still ongoing */
2420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (husart->hdmatx != NULL)
2421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
2422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (husart->hdmatx->XferAbortCallback != NULL)
2423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
2424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       return;
2425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
2426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
2427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->TxXferCount = 0x00U;
2430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->RxXferCount = 0x00U;
ARM GAS  /tmp/cctb5cV2.s 			page 45


2431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Reset errorCode */
2433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->ErrorCode = HAL_USART_ERROR_NONE;
2434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Restore husart->State to Ready */
2436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->State  = HAL_USART_STATE_READY;
2437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Call user Abort complete callback */
2439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Call registered Abort Complete Callback */
2441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->AbortCpltCallback(husart);
2442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #else
2443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Call legacy weak Abort Complete Callback */
2444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   HAL_USART_AbortCpltCallback(husart);
2445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
2447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
2449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Simplex Send an amount of data in non-blocking mode.
2450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart Pointer to a USART_HandleTypeDef structure that contains
2451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                the configuration information for the specified USART module.
2452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval HAL status
2453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @note   The USART errors are not managed to avoid the overrun error.
2454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
2455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static HAL_StatusTypeDef USART_Transmit_IT(USART_HandleTypeDef *husart)
2456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
  84              		.loc 1 2456 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88              		@ link register save eliminated.
  89              	.LVL2:
2457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint16_t *tmp;
2458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_BUSY_TX)
  90              		.loc 1 2459 0
  91 0000 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
  92 0004 DBB2     		uxtb	r3, r3
  93 0006 122B     		cmp	r3, #18
  94 0008 01D0     		beq	.L10
2460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
2461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (husart->Init.WordLength == USART_WORDLENGTH_9B)
2462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
2463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       tmp = (uint16_t *) husart->pTxBuffPtr;
2464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
2465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       if (husart->Init.Parity == USART_PARITY_NONE)
2466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
2467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->pTxBuffPtr += 2U;
2468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
2469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       else
2470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
2471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->pTxBuffPtr += 1U;
2472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
2473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
2474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     else
2475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
2476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->Instance->DR = (uint8_t)(*husart->pTxBuffPtr++ & (uint8_t)0x00FF);
ARM GAS  /tmp/cctb5cV2.s 			page 46


2477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
2478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (--husart->TxXferCount == 0U)
2480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
2481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Disable the USART Transmit data register empty Interrupt */
2482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       CLEAR_BIT(husart->Instance->CR1, USART_CR1_TXEIE);
2483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Enable the USART Transmit Complete Interrupt */
2485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       SET_BIT(husart->Instance->CR1, USART_CR1_TCIE);
2486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
2487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return HAL_OK;
2488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
2489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   else
2490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
2491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return HAL_BUSY;
  95              		.loc 1 2491 0
  96 000a 0220     		movs	r0, #2
  97              	.LVL3:
  98 000c 7047     		bx	lr
  99              	.LVL4:
 100              	.L10:
2461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 101              		.loc 1 2461 0
 102 000e 8368     		ldr	r3, [r0, #8]
 103 0010 B3F5805F 		cmp	r3, #4096
 104 0014 17D0     		beq	.L11
2476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 105              		.loc 1 2476 0
 106 0016 0268     		ldr	r2, [r0]
 107 0018 436A     		ldr	r3, [r0, #36]
 108 001a 591C     		adds	r1, r3, #1
 109 001c 4162     		str	r1, [r0, #36]
 110 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 111 0020 5360     		str	r3, [r2, #4]
 112              	.L7:
2479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 113              		.loc 1 2479 0
 114 0022 438D     		ldrh	r3, [r0, #42]
 115 0024 9BB2     		uxth	r3, r3
 116 0026 013B     		subs	r3, r3, #1
 117 0028 9BB2     		uxth	r3, r3
 118 002a 4385     		strh	r3, [r0, #42]	@ movhi
 119 002c DBB9     		cbnz	r3, .L9
2482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 120              		.loc 1 2482 0
 121 002e 0268     		ldr	r2, [r0]
 122 0030 D368     		ldr	r3, [r2, #12]
 123 0032 23F08003 		bic	r3, r3, #128
 124 0036 D360     		str	r3, [r2, #12]
2485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 125              		.loc 1 2485 0
 126 0038 0268     		ldr	r2, [r0]
 127 003a D368     		ldr	r3, [r2, #12]
 128 003c 43F04003 		orr	r3, r3, #64
 129 0040 D360     		str	r3, [r2, #12]
2487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 130              		.loc 1 2487 0
ARM GAS  /tmp/cctb5cV2.s 			page 47


 131 0042 0020     		movs	r0, #0
 132              	.LVL5:
 133 0044 7047     		bx	lr
 134              	.LVL6:
 135              	.L11:
2463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 136              		.loc 1 2463 0
 137 0046 436A     		ldr	r3, [r0, #36]
 138              	.LVL7:
2464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       if (husart->Init.Parity == USART_PARITY_NONE)
 139              		.loc 1 2464 0
 140 0048 0268     		ldr	r2, [r0]
 141 004a 1B88     		ldrh	r3, [r3]
 142              	.LVL8:
 143 004c C3F30803 		ubfx	r3, r3, #0, #9
 144 0050 5360     		str	r3, [r2, #4]
 145              	.LVL9:
2465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
 146              		.loc 1 2465 0
 147 0052 0369     		ldr	r3, [r0, #16]
 148 0054 1BB9     		cbnz	r3, .L6
2467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
 149              		.loc 1 2467 0
 150 0056 436A     		ldr	r3, [r0, #36]
 151 0058 0233     		adds	r3, r3, #2
 152 005a 4362     		str	r3, [r0, #36]
 153 005c E1E7     		b	.L7
 154              	.L6:
2471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
 155              		.loc 1 2471 0
 156 005e 436A     		ldr	r3, [r0, #36]
 157 0060 0133     		adds	r3, r3, #1
 158 0062 4362     		str	r3, [r0, #36]
 159 0064 DDE7     		b	.L7
 160              	.L9:
2487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 161              		.loc 1 2487 0
 162 0066 0020     		movs	r0, #0
 163              	.LVL10:
2492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
2493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
 164              		.loc 1 2493 0
 165 0068 7047     		bx	lr
 166              		.cfi_endproc
 167              	.LFE104:
 169              		.section	.text.USART_SetConfig,"ax",%progbits
 170              		.align	1
 171              		.syntax unified
 172              		.thumb
 173              		.thumb_func
 174              		.fpu softvfp
 176              	USART_SetConfig:
 177              	.LFB108:
2494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
2496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Wraps up transmission in non blocking mode.
2497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart Pointer to a USART_HandleTypeDef structure that contains
ARM GAS  /tmp/cctb5cV2.s 			page 48


2498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                the configuration information for the specified USART module.
2499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval HAL status
2500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
2501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static HAL_StatusTypeDef USART_EndTransmit_IT(USART_HandleTypeDef *husart)
2502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
2503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Disable the USART Transmit Complete Interrupt */
2504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR1, USART_CR1_TCIE);
2505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Disable the USART Error Interrupt: (Frame error, noise error, overrun error) */
2507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR3, USART_CR3_EIE);
2508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->State = HAL_USART_STATE_READY;
2510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Call registered Tx Complete Callback */
2513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->TxCpltCallback(husart);
2514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #else
2515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Call legacy weak Tx Complete Callback */
2516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   HAL_USART_TxCpltCallback(husart);
2517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   return HAL_OK;
2520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
2521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
2523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Simplex Receive an amount of data in non-blocking mode.
2524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart Pointer to a USART_HandleTypeDef structure that contains
2525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                the configuration information for the specified USART module.
2526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval HAL status
2527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
2528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static HAL_StatusTypeDef USART_Receive_IT(USART_HandleTypeDef *husart)
2529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
2530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint16_t *tmp;
2531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_BUSY_RX)
2532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
2533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (husart->Init.WordLength == USART_WORDLENGTH_9B)
2534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
2535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       tmp = (uint16_t *) husart->pRxBuffPtr;
2536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       if (husart->Init.Parity == USART_PARITY_NONE)
2537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
2538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         *tmp = (uint16_t)(husart->Instance->DR & (uint16_t)0x01FF);
2539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->pRxBuffPtr += 2U;
2540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
2541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       else
2542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
2543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         *tmp = (uint16_t)(husart->Instance->DR & (uint16_t)0x00FF);
2544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->pRxBuffPtr += 1U;
2545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
2546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       if (--husart->RxXferCount != 0x00U)
2547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
2548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Send dummy byte in order to generate the clock for the slave to send the next data */
2549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->Instance->DR = (DUMMY_DATA & (uint16_t)0x01FF);
2550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
2551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
2552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     else
2553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
2554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       if (husart->Init.Parity == USART_PARITY_NONE)
ARM GAS  /tmp/cctb5cV2.s 			page 49


2555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
2556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         *husart->pRxBuffPtr++ = (uint8_t)(husart->Instance->DR & (uint8_t)0x00FF);
2557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
2558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       else
2559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
2560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         *husart->pRxBuffPtr++ = (uint8_t)(husart->Instance->DR & (uint8_t)0x007F);
2561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
2562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       if (--husart->RxXferCount != 0x00U)
2564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
2565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Send dummy byte in order to generate the clock for the slave to send the next data */
2566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->Instance->DR = (DUMMY_DATA & (uint16_t)0x00FF);
2567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
2568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
2569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (husart->RxXferCount == 0U)
2571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
2572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Disable the USART RXNE Interrupt */
2573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       CLEAR_BIT(husart->Instance->CR1, USART_CR1_RXNEIE);
2574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Disable the USART Parity Error Interrupt */
2576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       CLEAR_BIT(husart->Instance->CR1, USART_CR1_PEIE);
2577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Disable the USART Error Interrupt: (Frame error, noise error, overrun error) */
2579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       CLEAR_BIT(husart->Instance->CR3, USART_CR3_EIE);
2580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->State = HAL_USART_STATE_READY;
2582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Call registered Rx Complete Callback */
2584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->RxCpltCallback(husart);
2585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #else
2586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Call legacy weak Rx Complete Callback */
2587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       HAL_USART_RxCpltCallback(husart);
2588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       return HAL_OK;
2591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
2592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return HAL_OK;
2593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
2594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   else
2595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
2596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return HAL_BUSY;
2597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
2598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
2599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
2601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Full-Duplex Send receive an amount of data in full-duplex mode (non-blocking).
2602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart Pointer to a USART_HandleTypeDef structure that contains
2603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                the configuration information for the specified USART module.
2604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval HAL status
2605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
2606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static HAL_StatusTypeDef USART_TransmitReceive_IT(USART_HandleTypeDef *husart)
2607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
2608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint16_t *tmp;
2609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_BUSY_TX_RX)
2611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
ARM GAS  /tmp/cctb5cV2.s 			page 50


2612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (husart->TxXferCount != 0x00U)
2613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
2614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       if (__HAL_USART_GET_FLAG(husart, USART_FLAG_TXE) != RESET)
2615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
2616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         if (husart->Init.WordLength == USART_WORDLENGTH_9B)
2617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
2618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           tmp = (uint16_t *) husart->pTxBuffPtr;
2619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           husart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
2620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           if (husart->Init.Parity == USART_PARITY_NONE)
2621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           {
2622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             husart->pTxBuffPtr += 2U;
2623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           }
2624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           else
2625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           {
2626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             husart->pTxBuffPtr += 1U;
2627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           }
2628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
2629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         else
2630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
2631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           husart->Instance->DR = (uint8_t)(*husart->pTxBuffPtr++ & (uint8_t)0x00FF);
2632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
2633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->TxXferCount--;
2634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         /* Check the latest data transmitted */
2636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         if (husart->TxXferCount == 0U)
2637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
2638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           CLEAR_BIT(husart->Instance->CR1, USART_CR1_TXEIE);
2639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
2640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
2641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
2642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (husart->RxXferCount != 0x00U)
2644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
2645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       if (__HAL_USART_GET_FLAG(husart, USART_FLAG_RXNE) != RESET)
2646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
2647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         if (husart->Init.WordLength == USART_WORDLENGTH_9B)
2648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
2649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           tmp = (uint16_t *) husart->pRxBuffPtr;
2650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           if (husart->Init.Parity == USART_PARITY_NONE)
2651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           {
2652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             *tmp = (uint16_t)(husart->Instance->DR & (uint16_t)0x01FF);
2653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             husart->pRxBuffPtr += 2U;
2654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           }
2655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           else
2656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           {
2657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             *tmp = (uint16_t)(husart->Instance->DR & (uint16_t)0x00FF);
2658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             husart->pRxBuffPtr += 1U;
2659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           }
2660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
2661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         else
2662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
2663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           if (husart->Init.Parity == USART_PARITY_NONE)
2664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           {
2665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             *husart->pRxBuffPtr++ = (uint8_t)(husart->Instance->DR & (uint8_t)0x00FF);
2666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           }
2667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           else
2668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           {
ARM GAS  /tmp/cctb5cV2.s 			page 51


2669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             *husart->pRxBuffPtr++ = (uint8_t)(husart->Instance->DR & (uint8_t)0x007F);
2670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           }
2671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
2672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->RxXferCount--;
2673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
2674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
2675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Check the latest data received */
2677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (husart->RxXferCount == 0U)
2678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
2679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Disable the USART RXNE Interrupt */
2680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       CLEAR_BIT(husart->Instance->CR1, USART_CR1_RXNEIE);
2681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Disable the USART Parity Error Interrupt */
2683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       CLEAR_BIT(husart->Instance->CR1, USART_CR1_PEIE);
2684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Disable the USART Error Interrupt: (Frame error, noise error, overrun error) */
2686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       CLEAR_BIT(husart->Instance->CR3, USART_CR3_EIE);
2687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->State = HAL_USART_STATE_READY;
2689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Call registered Tx Rx Complete Callback */
2692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->TxRxCpltCallback(husart);
2693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #else
2694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       /* Call legacy weak Tx Rx Complete Callback */
2695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       HAL_USART_TxRxCpltCallback(husart);
2696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       return HAL_OK;
2699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
2700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return HAL_OK;
2702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
2703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   else
2704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
2705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return HAL_BUSY;
2706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
2707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
2708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** /**
2710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @brief  Configures the USART peripheral.
2711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @param  husart Pointer to a USART_HandleTypeDef structure that contains
2712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   *                the configuration information for the specified USART module.
2713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   * @retval None
2714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   */
2715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** static void USART_SetConfig(USART_HandleTypeDef *husart)
2716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** {
 178              		.loc 1 2716 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              	.LVL11:
 183 0000 38B5     		push	{r3, r4, r5, lr}
 184              	.LCFI0:
 185              		.cfi_def_cfa_offset 16
 186              		.cfi_offset 3, -16
ARM GAS  /tmp/cctb5cV2.s 			page 52


 187              		.cfi_offset 4, -12
 188              		.cfi_offset 5, -8
 189              		.cfi_offset 14, -4
 190 0002 0446     		mov	r4, r0
 191              	.LVL12:
2717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t tmpreg = 0x00U;
2718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t pclk;
2719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Check the parameters */
2721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   assert_param(IS_USART_INSTANCE(husart->Instance));
2722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   assert_param(IS_USART_POLARITY(husart->Init.CLKPolarity));
2723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   assert_param(IS_USART_PHASE(husart->Init.CLKPhase));
2724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   assert_param(IS_USART_LASTBIT(husart->Init.CLKLastBit));
2725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   assert_param(IS_USART_BAUDRATE(husart->Init.BaudRate));
2726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   assert_param(IS_USART_WORD_LENGTH(husart->Init.WordLength));
2727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   assert_param(IS_USART_STOPBITS(husart->Init.StopBits));
2728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   assert_param(IS_USART_PARITY(husart->Init.Parity));
2729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   assert_param(IS_USART_MODE(husart->Init.Mode));
2730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* The LBCL, CPOL and CPHA bits have to be selected when both the transmitter and the
2732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****      receiver are disabled (TE=RE=0) to ensure that the clock pulses function correctly. */
2733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 192              		.loc 1 2733 0
 193 0004 0268     		ldr	r2, [r0]
 194 0006 D368     		ldr	r3, [r2, #12]
 195 0008 23F00C03 		bic	r3, r3, #12
 196 000c D360     		str	r3, [r2, #12]
2734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /*---------------------------- USART CR2 Configuration ---------------------*/
2736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   tmpreg = husart->Instance->CR2;
 197              		.loc 1 2736 0
 198 000e 0168     		ldr	r1, [r0]
 199 0010 0B69     		ldr	r3, [r1, #16]
 200              	.LVL13:
2737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Clear CLKEN, CPOL, CPHA and LBCL bits */
2738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR2_CPHA | USART_CR2_CPOL | USART_CR2_CLKEN | USART_CR2_LB
 201              		.loc 1 2738 0
 202 0012 23F47C53 		bic	r3, r3, #16128
 203              	.LVL14:
2739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Configure the USART Clock, CPOL, CPHA and LastBit -----------------------*/
2740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Set CPOL bit according to husart->Init.CLKPolarity value */
2741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Set CPHA bit according to husart->Init.CLKPhase value */
2742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Set LBCL bit according to husart->Init.CLKLastBit value */
2743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Set Stop Bits: Set STOP[13:12] bits according to husart->Init.StopBits value */
2744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   tmpreg |= (uint32_t)(USART_CLOCK_ENABLE | husart->Init.CLKPolarity |
 204              		.loc 1 2744 0
 205 0016 8269     		ldr	r2, [r0, #24]
2745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****                        husart->Init.CLKPhase | husart->Init.CLKLastBit | husart->Init.StopBits);
 206              		.loc 1 2745 0
 207 0018 C069     		ldr	r0, [r0, #28]
 208              	.LVL15:
2744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****                        husart->Init.CLKPhase | husart->Init.CLKLastBit | husart->Init.StopBits);
 209              		.loc 1 2744 0
 210 001a 0243     		orrs	r2, r2, r0
 211              		.loc 1 2745 0
 212 001c 206A     		ldr	r0, [r4, #32]
 213 001e 0243     		orrs	r2, r2, r0
ARM GAS  /tmp/cctb5cV2.s 			page 53


 214 0020 E068     		ldr	r0, [r4, #12]
2744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****                        husart->Init.CLKPhase | husart->Init.CLKLastBit | husart->Init.StopBits);
 215              		.loc 1 2744 0
 216 0022 0243     		orrs	r2, r2, r0
 217 0024 1343     		orrs	r3, r3, r2
 218              	.LVL16:
 219 0026 43F40063 		orr	r3, r3, #2048
 220              	.LVL17:
2746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Write to USART CR2 */
2747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   WRITE_REG(husart->Instance->CR2, (uint32_t)tmpreg);
 221              		.loc 1 2747 0
 222 002a 0B61     		str	r3, [r1, #16]
2748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   tmpreg = husart->Instance->CR1;
 223              		.loc 1 2750 0
 224 002c 2168     		ldr	r1, [r4]
 225 002e CB68     		ldr	r3, [r1, #12]
 226              	.LVL18:
2751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Clear M, PCE, PS, TE and RE bits */
2753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USAR
 227              		.loc 1 2753 0
 228 0030 23F4B053 		bic	r3, r3, #5632
 229              	.LVL19:
 230 0034 23F00C03 		bic	r3, r3, #12
 231              	.LVL20:
2754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Configure the USART Word Length, Parity and mode:
2756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****      Set the M bits according to husart->Init.WordLength value
2757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****      Set PCE and PS bits according to husart->Init.Parity value
2758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****      Set TE and RE bits according to husart->Init.Mode value
2759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****    */
2760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   tmpreg |= (uint32_t)husart->Init.WordLength | husart->Init.Parity | husart->Init.Mode;
 232              		.loc 1 2760 0
 233 0038 A268     		ldr	r2, [r4, #8]
 234 003a 2069     		ldr	r0, [r4, #16]
 235 003c 0243     		orrs	r2, r2, r0
 236 003e 6069     		ldr	r0, [r4, #20]
 237 0040 0243     		orrs	r2, r2, r0
 238 0042 1343     		orrs	r3, r3, r2
 239              	.LVL21:
2761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Write to USART CR1 */
2763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   WRITE_REG(husart->Instance->CR1, (uint32_t)tmpreg);
 240              		.loc 1 2763 0
 241 0044 CB60     		str	r3, [r1, #12]
2764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Clear CTSE and RTSE bits */
2767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE));
 242              		.loc 1 2767 0
 243 0046 2268     		ldr	r2, [r4]
 244 0048 5369     		ldr	r3, [r2, #20]
 245              	.LVL22:
 246 004a 23F44073 		bic	r3, r3, #768
 247 004e 5361     		str	r3, [r2, #20]
ARM GAS  /tmp/cctb5cV2.s 			page 54


 248              	.LVL23:
2768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
2769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if((husart->Instance == USART1))
 249              		.loc 1 2770 0
 250 0050 2268     		ldr	r2, [r4]
 251 0052 224B     		ldr	r3, .L17
 252 0054 9A42     		cmp	r2, r3
 253 0056 20D0     		beq	.L16
2771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
2772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     pclk = HAL_RCC_GetPCLK2Freq();
2773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->Instance->BRR = USART_BRR(pclk, husart->Init.BaudRate);
2774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
2775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   else
2776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
2777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     pclk = HAL_RCC_GetPCLK1Freq();
 254              		.loc 1 2777 0
 255 0058 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 256              	.LVL24:
2778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->Instance->BRR = USART_BRR(pclk, husart->Init.BaudRate);
 257              		.loc 1 2778 0
 258 005c 2168     		ldr	r1, [r4]
 259 005e 00EB8000 		add	r0, r0, r0, lsl #2
 260              	.LVL25:
 261 0062 00EB8000 		add	r0, r0, r0, lsl #2
 262 0066 6368     		ldr	r3, [r4, #4]
 263 0068 9B00     		lsls	r3, r3, #2
 264 006a B0FBF3F0 		udiv	r0, r0, r3
 265 006e 1C4D     		ldr	r5, .L17+4
 266 0070 A5FB0032 		umull	r3, r2, r5, r0
 267 0074 5409     		lsrs	r4, r2, #5
 268              	.LVL26:
 269 0076 6422     		movs	r2, #100
 270 0078 02FB1402 		mls	r2, r2, r4, r0
 271 007c 1301     		lsls	r3, r2, #4
 272 007e 3233     		adds	r3, r3, #50
 273 0080 A5FB0323 		umull	r2, r3, r5, r3
 274 0084 5B09     		lsrs	r3, r3, #5
 275 0086 5A00     		lsls	r2, r3, #1
 276 0088 02F4F072 		and	r2, r2, #480
 277 008c 02EB0412 		add	r2, r2, r4, lsl #4
 278 0090 03F00F03 		and	r3, r3, #15
 279 0094 1344     		add	r3, r3, r2
 280 0096 8B60     		str	r3, [r1, #8]
 281 0098 38BD     		pop	{r3, r4, r5, pc}
 282              	.LVL27:
 283              	.L16:
2772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->Instance->BRR = USART_BRR(pclk, husart->Init.BaudRate);
 284              		.loc 1 2772 0
 285 009a FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 286              	.LVL28:
2773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 287              		.loc 1 2773 0
 288 009e 2168     		ldr	r1, [r4]
 289 00a0 00EB8000 		add	r0, r0, r0, lsl #2
 290              	.LVL29:
 291 00a4 00EB8000 		add	r0, r0, r0, lsl #2
ARM GAS  /tmp/cctb5cV2.s 			page 55


 292 00a8 6368     		ldr	r3, [r4, #4]
 293 00aa 9B00     		lsls	r3, r3, #2
 294 00ac B0FBF3F0 		udiv	r0, r0, r3
 295 00b0 0B4D     		ldr	r5, .L17+4
 296 00b2 A5FB0032 		umull	r3, r2, r5, r0
 297 00b6 5409     		lsrs	r4, r2, #5
 298              	.LVL30:
 299 00b8 6422     		movs	r2, #100
 300 00ba 02FB1402 		mls	r2, r2, r4, r0
 301 00be 1301     		lsls	r3, r2, #4
 302 00c0 3233     		adds	r3, r3, #50
 303 00c2 A5FB0323 		umull	r2, r3, r5, r3
 304 00c6 5B09     		lsrs	r3, r3, #5
 305 00c8 5A00     		lsls	r2, r3, #1
 306 00ca 02F4F072 		and	r2, r2, #480
 307 00ce 02EB0412 		add	r2, r2, r4, lsl #4
 308 00d2 03F00F03 		and	r3, r3, #15
 309 00d6 1344     		add	r3, r3, r2
 310 00d8 8B60     		str	r3, [r1, #8]
 311 00da 38BD     		pop	{r3, r4, r5, pc}
 312              	.L18:
 313              		.align	2
 314              	.L17:
 315 00dc 00380140 		.word	1073821696
 316 00e0 1F85EB51 		.word	1374389535
 317              		.cfi_endproc
 318              	.LFE108:
 320              		.section	.text.USART_WaitOnFlagUntilTimeout,"ax",%progbits
 321              		.align	1
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 325              		.fpu softvfp
 327              	USART_WaitOnFlagUntilTimeout:
 328              	.LFB98:
2279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Wait until flag is set */
 329              		.loc 1 2279 0
 330              		.cfi_startproc
 331              		@ args = 4, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              	.LVL31:
 334 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 335              	.LCFI1:
 336              		.cfi_def_cfa_offset 24
 337              		.cfi_offset 4, -24
 338              		.cfi_offset 5, -20
 339              		.cfi_offset 6, -16
 340              		.cfi_offset 7, -12
 341              		.cfi_offset 8, -8
 342              		.cfi_offset 14, -4
 343 0004 0546     		mov	r5, r0
 344 0006 0F46     		mov	r7, r1
 345 0008 1646     		mov	r6, r2
 346 000a 9846     		mov	r8, r3
 347 000c 069C     		ldr	r4, [sp, #24]
 348              	.LVL32:
 349              	.L21:
ARM GAS  /tmp/cctb5cV2.s 			page 56


2281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 350              		.loc 1 2281 0
 351 000e 2B68     		ldr	r3, [r5]
 352 0010 1B68     		ldr	r3, [r3]
 353 0012 37EA0303 		bics	r3, r7, r3
 354 0016 0CBF     		ite	eq
 355 0018 0123     		moveq	r3, #1
 356 001a 0023     		movne	r3, #0
 357 001c B342     		cmp	r3, r6
 358 001e 26D1     		bne	.L26
2284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 359              		.loc 1 2284 0
 360 0020 B4F1FF3F 		cmp	r4, #-1
 361 0024 F3D0     		beq	.L21
2286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
 362              		.loc 1 2286 0
 363 0026 2CB1     		cbz	r4, .L22
2286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
 364              		.loc 1 2286 0 is_stmt 0 discriminator 1
 365 0028 FFF7FEFF 		bl	HAL_GetTick
 366              	.LVL33:
 367 002c A0EB0800 		sub	r0, r0, r8
 368 0030 8442     		cmp	r4, r0
 369 0032 ECD2     		bcs	.L21
 370              	.L22:
2289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 371              		.loc 1 2289 0 is_stmt 1
 372 0034 2A68     		ldr	r2, [r5]
 373 0036 D368     		ldr	r3, [r2, #12]
 374 0038 23F08003 		bic	r3, r3, #128
 375 003c D360     		str	r3, [r2, #12]
2292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 376              		.loc 1 2292 0
 377 003e 2A68     		ldr	r2, [r5]
 378 0040 D368     		ldr	r3, [r2, #12]
 379 0042 23F02003 		bic	r3, r3, #32
 380 0046 D360     		str	r3, [r2, #12]
2295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 381              		.loc 1 2295 0
 382 0048 2A68     		ldr	r2, [r5]
 383 004a D368     		ldr	r3, [r2, #12]
 384 004c 23F48073 		bic	r3, r3, #256
 385 0050 D360     		str	r3, [r2, #12]
2298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 386              		.loc 1 2298 0
 387 0052 2A68     		ldr	r2, [r5]
 388 0054 5369     		ldr	r3, [r2, #20]
 389 0056 23F00103 		bic	r3, r3, #1
 390 005a 5361     		str	r3, [r2, #20]
2300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 391              		.loc 1 2300 0
 392 005c 0123     		movs	r3, #1
 393 005e 85F83D30 		strb	r3, [r5, #61]
2303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 394              		.loc 1 2303 0
 395 0062 0023     		movs	r3, #0
 396 0064 85F83C30 		strb	r3, [r5, #60]
ARM GAS  /tmp/cctb5cV2.s 			page 57


2305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
 397              		.loc 1 2305 0
 398 0068 0320     		movs	r0, #3
 399 006a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 400              	.LVL34:
 401              	.L26:
2309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
 402              		.loc 1 2309 0
 403 006e 0020     		movs	r0, #0
2310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 404              		.loc 1 2310 0
 405 0070 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 406              		.cfi_endproc
 407              	.LFE98:
 409              		.section	.text.HAL_USART_MspInit,"ax",%progbits
 410              		.align	1
 411              		.weak	HAL_USART_MspInit
 412              		.syntax unified
 413              		.thumb
 414              		.thumb_func
 415              		.fpu softvfp
 417              	HAL_USART_MspInit:
 418              	.LFB67:
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
 419              		.loc 1 398 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423              		@ link register save eliminated.
 424              	.LVL35:
 425 0000 7047     		bx	lr
 426              		.cfi_endproc
 427              	.LFE67:
 429              		.section	.text.HAL_USART_Init,"ax",%progbits
 430              		.align	1
 431              		.global	HAL_USART_Init
 432              		.syntax unified
 433              		.thumb
 434              		.thumb_func
 435              		.fpu softvfp
 437              	HAL_USART_Init:
 438              	.LFB65:
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Check the USART handle allocation */
 439              		.loc 1 296 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443              	.LVL36:
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 444              		.loc 1 298 0
 445 0000 20B3     		cbz	r0, .L31
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Check the USART handle allocation */
 446              		.loc 1 296 0
 447 0002 10B5     		push	{r4, lr}
 448              	.LCFI2:
 449              		.cfi_def_cfa_offset 8
 450              		.cfi_offset 4, -8
ARM GAS  /tmp/cctb5cV2.s 			page 58


 451              		.cfi_offset 14, -4
 452 0004 0446     		mov	r4, r0
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 453              		.loc 1 306 0
 454 0006 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 455 000a D3B1     		cbz	r3, .L36
 456              	.LVL37:
 457              	.L30:
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 458              		.loc 1 327 0
 459 000c 0223     		movs	r3, #2
 460 000e 84F83D30 		strb	r3, [r4, #61]
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 461              		.loc 1 330 0
 462 0012 2046     		mov	r0, r4
 463 0014 FFF7FEFF 		bl	USART_SetConfig
 464              	.LVL38:
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 465              		.loc 1 335 0
 466 0018 2268     		ldr	r2, [r4]
 467 001a 1369     		ldr	r3, [r2, #16]
 468 001c 23F48043 		bic	r3, r3, #16384
 469 0020 1361     		str	r3, [r2, #16]
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 470              		.loc 1 336 0
 471 0022 2268     		ldr	r2, [r4]
 472 0024 5369     		ldr	r3, [r2, #20]
 473 0026 23F02A03 		bic	r3, r3, #42
 474 002a 5361     		str	r3, [r2, #20]
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 475              		.loc 1 339 0
 476 002c 2268     		ldr	r2, [r4]
 477 002e D368     		ldr	r3, [r2, #12]
 478 0030 43F40053 		orr	r3, r3, #8192
 479 0034 D360     		str	r3, [r2, #12]
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->State = HAL_USART_STATE_READY;
 480              		.loc 1 342 0
 481 0036 0020     		movs	r0, #0
 482 0038 2064     		str	r0, [r4, #64]
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 483              		.loc 1 343 0
 484 003a 0123     		movs	r3, #1
 485 003c 84F83D30 		strb	r3, [r4, #61]
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
 486              		.loc 1 345 0
 487 0040 10BD     		pop	{r4, pc}
 488              	.LVL39:
 489              	.L36:
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 490              		.loc 1 309 0
 491 0042 80F83C30 		strb	r3, [r0, #60]
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 492              		.loc 1 323 0
 493 0046 FFF7FEFF 		bl	HAL_USART_MspInit
 494              	.LVL40:
 495 004a DFE7     		b	.L30
 496              	.LVL41:
ARM GAS  /tmp/cctb5cV2.s 			page 59


 497              	.L31:
 498              	.LCFI3:
 499              		.cfi_def_cfa_offset 0
 500              		.cfi_restore 4
 501              		.cfi_restore 14
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 502              		.loc 1 300 0
 503 004c 0120     		movs	r0, #1
 504              	.LVL42:
 505 004e 7047     		bx	lr
 506              		.cfi_endproc
 507              	.LFE65:
 509              		.section	.text.HAL_USART_MspDeInit,"ax",%progbits
 510              		.align	1
 511              		.weak	HAL_USART_MspDeInit
 512              		.syntax unified
 513              		.thumb
 514              		.thumb_func
 515              		.fpu softvfp
 517              	HAL_USART_MspDeInit:
 518              	.LFB68:
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
 519              		.loc 1 413 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 0
 522              		@ frame_needed = 0, uses_anonymous_args = 0
 523              		@ link register save eliminated.
 524              	.LVL43:
 525 0000 7047     		bx	lr
 526              		.cfi_endproc
 527              	.LFE68:
 529              		.section	.text.HAL_USART_DeInit,"ax",%progbits
 530              		.align	1
 531              		.global	HAL_USART_DeInit
 532              		.syntax unified
 533              		.thumb
 534              		.thumb_func
 535              		.fpu softvfp
 537              	HAL_USART_DeInit:
 538              	.LFB66:
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Check the USART handle allocation */
 539              		.loc 1 355 0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 543              	.LVL44:
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 544              		.loc 1 357 0
 545 0000 90B1     		cbz	r0, .L40
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Check the USART handle allocation */
 546              		.loc 1 355 0
 547 0002 10B5     		push	{r4, lr}
 548              	.LCFI4:
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 4, -8
 551              		.cfi_offset 14, -4
 552 0004 0446     		mov	r4, r0
ARM GAS  /tmp/cctb5cV2.s 			page 60


 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 553              		.loc 1 365 0
 554 0006 0223     		movs	r3, #2
 555 0008 80F83D30 		strb	r3, [r0, #61]
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 556              		.loc 1 368 0
 557 000c 0268     		ldr	r2, [r0]
 558 000e D368     		ldr	r3, [r2, #12]
 559 0010 23F40053 		bic	r3, r3, #8192
 560 0014 D360     		str	r3, [r2, #12]
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 561              		.loc 1 379 0
 562 0016 FFF7FEFF 		bl	HAL_USART_MspDeInit
 563              	.LVL45:
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->State = HAL_USART_STATE_RESET;
 564              		.loc 1 382 0
 565 001a 0020     		movs	r0, #0
 566 001c 2064     		str	r0, [r4, #64]
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 567              		.loc 1 383 0
 568 001e 84F83D00 		strb	r0, [r4, #61]
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 569              		.loc 1 386 0
 570 0022 84F83C00 		strb	r0, [r4, #60]
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
 571              		.loc 1 388 0
 572 0026 10BD     		pop	{r4, pc}
 573              	.LVL46:
 574              	.L40:
 575              	.LCFI5:
 576              		.cfi_def_cfa_offset 0
 577              		.cfi_restore 4
 578              		.cfi_restore 14
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 579              		.loc 1 359 0
 580 0028 0120     		movs	r0, #1
 581              	.LVL47:
 582 002a 7047     		bx	lr
 583              		.cfi_endproc
 584              	.LFE66:
 586              		.section	.text.HAL_USART_Transmit,"ax",%progbits
 587              		.align	1
 588              		.global	HAL_USART_Transmit
 589              		.syntax unified
 590              		.thumb
 591              		.thumb_func
 592              		.fpu softvfp
 594              	HAL_USART_Transmit:
 595              	.LFB69:
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint16_t *tmp;
 596              		.loc 1 745 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              	.LVL48:
 601 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 602              	.LCFI6:
ARM GAS  /tmp/cctb5cV2.s 			page 61


 603              		.cfi_def_cfa_offset 24
 604              		.cfi_offset 4, -24
 605              		.cfi_offset 5, -20
 606              		.cfi_offset 6, -16
 607              		.cfi_offset 7, -12
 608              		.cfi_offset 8, -8
 609              		.cfi_offset 14, -4
 610 0004 82B0     		sub	sp, sp, #8
 611              	.LCFI7:
 612              		.cfi_def_cfa_offset 32
 613 0006 1E46     		mov	r6, r3
 614              	.LVL49:
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 615              		.loc 1 749 0
 616 0008 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 617              	.LVL50:
 618 000c DBB2     		uxtb	r3, r3
 619 000e 012B     		cmp	r3, #1
 620 0010 04D0     		beq	.L60
 812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 621              		.loc 1 812 0
 622 0012 0223     		movs	r3, #2
 623              	.LVL51:
 624              	.L46:
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 625              		.loc 1 814 0
 626 0014 1846     		mov	r0, r3
 627 0016 02B0     		add	sp, sp, #8
 628              	.LCFI8:
 629              		.cfi_remember_state
 630              		.cfi_def_cfa_offset 24
 631              		@ sp needed
 632 0018 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 633              	.LVL52:
 634              	.L60:
 635              	.LCFI9:
 636              		.cfi_restore_state
 637 001c 0446     		mov	r4, r0
 638 001e 0D46     		mov	r5, r1
 639 0020 9046     		mov	r8, r2
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 640              		.loc 1 751 0
 641 0022 0029     		cmp	r1, #0
 642 0024 55D0     		beq	.L53
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 643              		.loc 1 751 0 is_stmt 0 discriminator 1
 644 0026 002A     		cmp	r2, #0
 645 0028 55D0     		beq	.L54
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 646              		.loc 1 757 0 is_stmt 1
 647 002a 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 648 002e 012B     		cmp	r3, #1
 649 0030 01D1     		bne	.L61
 650 0032 0223     		movs	r3, #2
 651 0034 EEE7     		b	.L46
 652              	.L61:
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
ARM GAS  /tmp/cctb5cV2.s 			page 62


 653              		.loc 1 757 0 is_stmt 0 discriminator 2
 654 0036 0123     		movs	r3, #1
 655 0038 80F83C30 		strb	r3, [r0, #60]
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_TX;
 656              		.loc 1 759 0 is_stmt 1 discriminator 2
 657 003c 0023     		movs	r3, #0
 658 003e 0364     		str	r3, [r0, #64]
 760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 659              		.loc 1 760 0 discriminator 2
 660 0040 1223     		movs	r3, #18
 661 0042 80F83D30 		strb	r3, [r0, #61]
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 662              		.loc 1 763 0 discriminator 2
 663 0046 FFF7FEFF 		bl	HAL_GetTick
 664              	.LVL53:
 665 004a 0746     		mov	r7, r0
 666              	.LVL54:
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->TxXferCount = Size;
 667              		.loc 1 765 0 discriminator 2
 668 004c A4F82880 		strh	r8, [r4, #40]	@ movhi
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     while (husart->TxXferCount > 0U)
 669              		.loc 1 766 0 discriminator 2
 670 0050 A4F82A80 		strh	r8, [r4, #42]	@ movhi
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 671              		.loc 1 767 0 discriminator 2
 672 0054 10E0     		b	.L47
 673              	.LVL55:
 674              	.L63:
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 675              		.loc 1 773 0
 676 0056 0096     		str	r6, [sp]
 677 0058 3B46     		mov	r3, r7
 678 005a 0022     		movs	r2, #0
 679 005c 8021     		movs	r1, #128
 680 005e 2046     		mov	r0, r4
 681 0060 FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 682              	.LVL56:
 683 0064 0028     		cmp	r0, #0
 684 0066 38D1     		bne	.L56
 685              	.LVL57:
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         if (husart->Init.Parity == USART_PARITY_NONE)
 686              		.loc 1 778 0
 687 0068 2268     		ldr	r2, [r4]
 688 006a 2B88     		ldrh	r3, [r5]
 689 006c C3F30803 		ubfx	r3, r3, #0, #9
 690 0070 5360     		str	r3, [r2, #4]
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 691              		.loc 1 779 0
 692 0072 2369     		ldr	r3, [r4, #16]
 693 0074 CBB9     		cbnz	r3, .L49
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 694              		.loc 1 781 0
 695 0076 0235     		adds	r5, r5, #2
 696              	.LVL58:
 697              	.L47:
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 698              		.loc 1 767 0
ARM GAS  /tmp/cctb5cV2.s 			page 63


 699 0078 638D     		ldrh	r3, [r4, #42]
 700 007a 9BB2     		uxth	r3, r3
 701 007c BBB1     		cbz	r3, .L62
 769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       if (husart->Init.WordLength == USART_WORDLENGTH_9B)
 702              		.loc 1 769 0
 703 007e 638D     		ldrh	r3, [r4, #42]
 704 0080 9BB2     		uxth	r3, r3
 705 0082 013B     		subs	r3, r3, #1
 706 0084 9BB2     		uxth	r3, r3
 707 0086 6385     		strh	r3, [r4, #42]	@ movhi
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
 708              		.loc 1 770 0
 709 0088 A368     		ldr	r3, [r4, #8]
 710 008a B3F5805F 		cmp	r3, #4096
 711 008e E2D0     		beq	.L63
 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 712              		.loc 1 790 0
 713 0090 0096     		str	r6, [sp]
 714 0092 3B46     		mov	r3, r7
 715 0094 0022     		movs	r2, #0
 716 0096 8021     		movs	r1, #128
 717 0098 2046     		mov	r0, r4
 718 009a FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 719              	.LVL59:
 720 009e F0B9     		cbnz	r0, .L57
 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
 721              		.loc 1 794 0
 722 00a0 2368     		ldr	r3, [r4]
 723              	.LVL60:
 724 00a2 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 725 00a4 5A60     		str	r2, [r3, #4]
 726 00a6 0135     		adds	r5, r5, #1
 727              	.LVL61:
 728 00a8 E6E7     		b	.L47
 729              	.LVL62:
 730              	.L49:
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 731              		.loc 1 785 0
 732 00aa 0135     		adds	r5, r5, #1
 733              	.LVL63:
 734 00ac E4E7     		b	.L47
 735              	.LVL64:
 736              	.L62:
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 737              		.loc 1 798 0
 738 00ae 0096     		str	r6, [sp]
 739 00b0 3B46     		mov	r3, r7
 740 00b2 0022     		movs	r2, #0
 741 00b4 4021     		movs	r1, #64
 742 00b6 2046     		mov	r0, r4
 743 00b8 FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 744              	.LVL65:
 745 00bc 0346     		mov	r3, r0
 746 00be 08B1     		cbz	r0, .L64
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 747              		.loc 1 800 0
 748 00c0 0323     		movs	r3, #3
ARM GAS  /tmp/cctb5cV2.s 			page 64


 749 00c2 A7E7     		b	.L46
 750              	.L64:
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 751              		.loc 1 803 0
 752 00c4 0122     		movs	r2, #1
 753 00c6 84F83D20 		strb	r2, [r4, #61]
 806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 754              		.loc 1 806 0
 755 00ca 0022     		movs	r2, #0
 756 00cc 84F83C20 		strb	r2, [r4, #60]
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 757              		.loc 1 808 0
 758 00d0 A0E7     		b	.L46
 759              	.LVL66:
 760              	.L53:
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 761              		.loc 1 753 0
 762 00d2 0123     		movs	r3, #1
 763 00d4 9EE7     		b	.L46
 764              	.L54:
 765 00d6 0123     		movs	r3, #1
 766 00d8 9CE7     		b	.L46
 767              	.LVL67:
 768              	.L56:
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 769              		.loc 1 775 0
 770 00da 0323     		movs	r3, #3
 771 00dc 9AE7     		b	.L46
 772              	.L57:
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 773              		.loc 1 792 0
 774 00de 0323     		movs	r3, #3
 775 00e0 98E7     		b	.L46
 776              		.cfi_endproc
 777              	.LFE69:
 779              		.section	.text.HAL_USART_Receive,"ax",%progbits
 780              		.align	1
 781              		.global	HAL_USART_Receive
 782              		.syntax unified
 783              		.thumb
 784              		.thumb_func
 785              		.fpu softvfp
 787              	HAL_USART_Receive:
 788              	.LFB70:
 830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint16_t *tmp;
 789              		.loc 1 830 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              	.LVL68:
 794 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 795              	.LCFI10:
 796              		.cfi_def_cfa_offset 24
 797              		.cfi_offset 4, -24
 798              		.cfi_offset 5, -20
 799              		.cfi_offset 6, -16
 800              		.cfi_offset 7, -12
ARM GAS  /tmp/cctb5cV2.s 			page 65


 801              		.cfi_offset 8, -8
 802              		.cfi_offset 14, -4
 803 0004 82B0     		sub	sp, sp, #8
 804              	.LCFI11:
 805              		.cfi_def_cfa_offset 32
 806 0006 1E46     		mov	r6, r3
 807              	.LVL69:
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 808              		.loc 1 834 0
 809 0008 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 810              	.LVL70:
 811 000c DBB2     		uxtb	r3, r3
 812 000e 012B     		cmp	r3, #1
 813 0010 03D0     		beq	.L82
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 814              		.loc 1 921 0
 815 0012 0220     		movs	r0, #2
 816              	.LVL71:
 817              	.L66:
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 818              		.loc 1 923 0
 819 0014 02B0     		add	sp, sp, #8
 820              	.LCFI12:
 821              		.cfi_remember_state
 822              		.cfi_def_cfa_offset 24
 823              		@ sp needed
 824 0016 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 825              	.LVL72:
 826              	.L82:
 827              	.LCFI13:
 828              		.cfi_restore_state
 829 001a 0446     		mov	r4, r0
 830 001c 0D46     		mov	r5, r1
 831 001e 9046     		mov	r8, r2
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 832              		.loc 1 836 0
 833 0020 0029     		cmp	r1, #0
 834 0022 70D0     		beq	.L74
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 835              		.loc 1 836 0 is_stmt 0 discriminator 1
 836 0024 002A     		cmp	r2, #0
 837 0026 70D0     		beq	.L75
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 838              		.loc 1 841 0 is_stmt 1
 839 0028 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 840 002c 012B     		cmp	r3, #1
 841 002e 01D1     		bne	.L83
 842 0030 0220     		movs	r0, #2
 843              	.LVL73:
 844 0032 EFE7     		b	.L66
 845              	.LVL74:
 846              	.L83:
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 847              		.loc 1 841 0 is_stmt 0 discriminator 2
 848 0034 0123     		movs	r3, #1
 849 0036 80F83C30 		strb	r3, [r0, #60]
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_RX;
ARM GAS  /tmp/cctb5cV2.s 			page 66


 850              		.loc 1 843 0 is_stmt 1 discriminator 2
 851 003a 0023     		movs	r3, #0
 852 003c 0364     		str	r3, [r0, #64]
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 853              		.loc 1 844 0 discriminator 2
 854 003e 2223     		movs	r3, #34
 855 0040 80F83D30 		strb	r3, [r0, #61]
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 856              		.loc 1 847 0 discriminator 2
 857 0044 FFF7FEFF 		bl	HAL_GetTick
 858              	.LVL75:
 859 0048 0746     		mov	r7, r0
 860              	.LVL76:
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->RxXferCount = Size;
 861              		.loc 1 849 0 discriminator 2
 862 004a A4F83080 		strh	r8, [r4, #48]	@ movhi
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     /* Check the remain data to be received */
 863              		.loc 1 850 0 discriminator 2
 864 004e A4F83280 		strh	r8, [r4, #50]	@ movhi
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 865              		.loc 1 852 0 discriminator 2
 866 0052 2AE0     		b	.L67
 867              	.LVL77:
 868              	.L85:
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 869              		.loc 1 858 0
 870 0054 0096     		str	r6, [sp]
 871 0056 3B46     		mov	r3, r7
 872 0058 0022     		movs	r2, #0
 873 005a 8021     		movs	r1, #128
 874 005c 2046     		mov	r0, r4
 875 005e FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 876              	.LVL78:
 877 0062 0028     		cmp	r0, #0
 878 0064 53D1     		bne	.L77
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 879              		.loc 1 863 0
 880 0066 2368     		ldr	r3, [r4]
 881 0068 40F2FF12 		movw	r2, #511
 882 006c 5A60     		str	r2, [r3, #4]
 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 883              		.loc 1 866 0
 884 006e 0096     		str	r6, [sp]
 885 0070 3B46     		mov	r3, r7
 886 0072 0022     		movs	r2, #0
 887 0074 2021     		movs	r1, #32
 888 0076 2046     		mov	r0, r4
 889 0078 FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 890              	.LVL79:
 891 007c 0028     		cmp	r0, #0
 892 007e 48D1     		bne	.L78
 893              	.LVL80:
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 894              		.loc 1 871 0
 895 0080 2369     		ldr	r3, [r4, #16]
 896 0082 33B9     		cbnz	r3, .L69
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           pRxData += 2U;
ARM GAS  /tmp/cctb5cV2.s 			page 67


 897              		.loc 1 873 0
 898 0084 2368     		ldr	r3, [r4]
 899 0086 5B68     		ldr	r3, [r3, #4]
 900 0088 C3F30803 		ubfx	r3, r3, #0, #9
 901 008c 25F8023B 		strh	r3, [r5], #2	@ movhi
 902              	.LVL81:
 903 0090 0BE0     		b	.L67
 904              	.LVL82:
 905              	.L69:
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           pRxData += 1U;
 906              		.loc 1 878 0
 907 0092 2368     		ldr	r3, [r4]
 908 0094 5B68     		ldr	r3, [r3, #4]
 909 0096 DBB2     		uxtb	r3, r3
 910 0098 25F8013B 		strh	r3, [r5], #1	@ movhi
 911              	.LVL83:
 912 009c 05E0     		b	.L67
 913              	.LVL84:
 914              	.L71:
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 915              		.loc 1 906 0
 916 009e 2368     		ldr	r3, [r4]
 917 00a0 5B68     		ldr	r3, [r3, #4]
 918 00a2 03F07F03 		and	r3, r3, #127
 919 00a6 2B70     		strb	r3, [r5]
 920 00a8 0135     		adds	r5, r5, #1
 921              	.LVL85:
 922              	.L67:
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 923              		.loc 1 852 0
 924 00aa 638E     		ldrh	r3, [r4, #50]
 925 00ac 9BB2     		uxth	r3, r3
 926 00ae 1BB3     		cbz	r3, .L84
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       if (husart->Init.WordLength == USART_WORDLENGTH_9B)
 927              		.loc 1 854 0
 928 00b0 638E     		ldrh	r3, [r4, #50]
 929 00b2 9BB2     		uxth	r3, r3
 930 00b4 013B     		subs	r3, r3, #1
 931 00b6 9BB2     		uxth	r3, r3
 932 00b8 6386     		strh	r3, [r4, #50]	@ movhi
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
 933              		.loc 1 855 0
 934 00ba A368     		ldr	r3, [r4, #8]
 935 00bc B3F5805F 		cmp	r3, #4096
 936 00c0 C8D0     		beq	.L85
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 937              		.loc 1 885 0
 938 00c2 0096     		str	r6, [sp]
 939 00c4 3B46     		mov	r3, r7
 940 00c6 0022     		movs	r2, #0
 941 00c8 8021     		movs	r1, #128
 942 00ca 2046     		mov	r0, r4
 943 00cc FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 944              	.LVL86:
 945 00d0 08BB     		cbnz	r0, .L79
 891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 946              		.loc 1 891 0
ARM GAS  /tmp/cctb5cV2.s 			page 68


 947 00d2 2368     		ldr	r3, [r4]
 948 00d4 FF22     		movs	r2, #255
 949 00d6 5A60     		str	r2, [r3, #4]
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 950              		.loc 1 894 0
 951 00d8 0096     		str	r6, [sp]
 952 00da 3B46     		mov	r3, r7
 953 00dc 0022     		movs	r2, #0
 954 00de 2021     		movs	r1, #32
 955 00e0 2046     		mov	r0, r4
 956 00e2 FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 957              	.LVL87:
 958 00e6 C0B9     		cbnz	r0, .L80
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 959              		.loc 1 898 0
 960 00e8 2369     		ldr	r3, [r4, #16]
 961 00ea 002B     		cmp	r3, #0
 962 00ec D7D1     		bne	.L71
 963              	.LVL88:
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 964              		.loc 1 901 0
 965 00ee 2368     		ldr	r3, [r4]
 966 00f0 5B68     		ldr	r3, [r3, #4]
 967 00f2 2B70     		strb	r3, [r5]
 968 00f4 0135     		adds	r5, r5, #1
 969              	.LVL89:
 970 00f6 D8E7     		b	.L67
 971              	.L84:
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 972              		.loc 1 912 0
 973 00f8 0123     		movs	r3, #1
 974 00fa 84F83D30 		strb	r3, [r4, #61]
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 975              		.loc 1 915 0
 976 00fe 0020     		movs	r0, #0
 977 0100 84F83C00 		strb	r0, [r4, #60]
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 978              		.loc 1 917 0
 979 0104 86E7     		b	.L66
 980              	.LVL90:
 981              	.L74:
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 982              		.loc 1 838 0
 983 0106 0120     		movs	r0, #1
 984              	.LVL91:
 985 0108 84E7     		b	.L66
 986              	.LVL92:
 987              	.L75:
 988 010a 0120     		movs	r0, #1
 989              	.LVL93:
 990 010c 82E7     		b	.L66
 991              	.LVL94:
 992              	.L77:
 860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 993              		.loc 1 860 0
 994 010e 0320     		movs	r0, #3
 995 0110 80E7     		b	.L66
ARM GAS  /tmp/cctb5cV2.s 			page 69


 996              	.L78:
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 997              		.loc 1 868 0
 998 0112 0320     		movs	r0, #3
 999 0114 7EE7     		b	.L66
 1000              	.L79:
 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 1001              		.loc 1 887 0
 1002 0116 0320     		movs	r0, #3
 1003 0118 7CE7     		b	.L66
 1004              	.L80:
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 1005              		.loc 1 896 0
 1006 011a 0320     		movs	r0, #3
 1007 011c 7AE7     		b	.L66
 1008              		.cfi_endproc
 1009              	.LFE70:
 1011              		.section	.text.HAL_USART_TransmitReceive,"ax",%progbits
 1012              		.align	1
 1013              		.global	HAL_USART_TransmitReceive
 1014              		.syntax unified
 1015              		.thumb
 1016              		.thumb_func
 1017              		.fpu softvfp
 1019              	HAL_USART_TransmitReceive:
 1020              	.LFB71:
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint16_t *tmp;
 1021              		.loc 1 939 0
 1022              		.cfi_startproc
 1023              		@ args = 4, pretend = 0, frame = 0
 1024              		@ frame_needed = 0, uses_anonymous_args = 0
 1025              	.LVL95:
 1026 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1027              	.LCFI14:
 1028              		.cfi_def_cfa_offset 24
 1029              		.cfi_offset 4, -24
 1030              		.cfi_offset 5, -20
 1031              		.cfi_offset 6, -16
 1032              		.cfi_offset 7, -12
 1033              		.cfi_offset 8, -8
 1034              		.cfi_offset 14, -4
 1035 0004 82B0     		sub	sp, sp, #8
 1036              	.LCFI15:
 1037              		.cfi_def_cfa_offset 32
 1038 0006 9846     		mov	r8, r3
 1039              	.LVL96:
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 1040              		.loc 1 943 0
 1041 0008 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1042              	.LVL97:
 1043 000c DBB2     		uxtb	r3, r3
 1044 000e 012B     		cmp	r3, #1
 1045 0010 03D0     		beq	.L106
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 1046              		.loc 1 1039 0
 1047 0012 0220     		movs	r0, #2
 1048              	.LVL98:
ARM GAS  /tmp/cctb5cV2.s 			page 70


 1049              	.L87:
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1050              		.loc 1 1041 0
 1051 0014 02B0     		add	sp, sp, #8
 1052              	.LCFI16:
 1053              		.cfi_remember_state
 1054              		.cfi_def_cfa_offset 24
 1055              		@ sp needed
 1056 0016 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1057              	.LVL99:
 1058              	.L106:
 1059              	.LCFI17:
 1060              		.cfi_restore_state
 1061 001a 0446     		mov	r4, r0
 1062 001c 0D46     		mov	r5, r1
 1063 001e 1646     		mov	r6, r2
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 1064              		.loc 1 945 0
 1065 0020 0029     		cmp	r1, #0
 1066 0022 00F08E80 		beq	.L97
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 1067              		.loc 1 945 0 is_stmt 0 discriminator 1
 1068 0026 002A     		cmp	r2, #0
 1069 0028 00F08D80 		beq	.L98
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 1070              		.loc 1 945 0 discriminator 2
 1071 002c B8F1000F 		cmp	r8, #0
 1072 0030 00F08B80 		beq	.L99
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1073              		.loc 1 950 0 is_stmt 1
 1074 0034 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1075 0038 012B     		cmp	r3, #1
 1076 003a 01D1     		bne	.L107
 1077 003c 0220     		movs	r0, #2
 1078              	.LVL100:
 1079 003e E9E7     		b	.L87
 1080              	.LVL101:
 1081              	.L107:
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1082              		.loc 1 950 0 is_stmt 0 discriminator 2
 1083 0040 0123     		movs	r3, #1
 1084 0042 80F83C30 		strb	r3, [r0, #60]
 952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_RX;
 1085              		.loc 1 952 0 is_stmt 1 discriminator 2
 1086 0046 0023     		movs	r3, #0
 1087 0048 0364     		str	r3, [r0, #64]
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1088              		.loc 1 953 0 discriminator 2
 1089 004a 2223     		movs	r3, #34
 1090 004c 80F83D30 		strb	r3, [r0, #61]
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1091              		.loc 1 956 0 discriminator 2
 1092 0050 FFF7FEFF 		bl	HAL_GetTick
 1093              	.LVL102:
 1094 0054 0746     		mov	r7, r0
 1095              	.LVL103:
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->TxXferSize = Size;
ARM GAS  /tmp/cctb5cV2.s 			page 71


 1096              		.loc 1 958 0 discriminator 2
 1097 0056 A4F83080 		strh	r8, [r4, #48]	@ movhi
 959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->TxXferCount = Size;
 1098              		.loc 1 959 0 discriminator 2
 1099 005a A4F82880 		strh	r8, [r4, #40]	@ movhi
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->RxXferCount = Size;
 1100              		.loc 1 960 0 discriminator 2
 1101 005e A4F82A80 		strh	r8, [r4, #42]	@ movhi
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1102              		.loc 1 961 0 discriminator 2
 1103 0062 A4F83280 		strh	r8, [r4, #50]	@ movhi
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 1104              		.loc 1 964 0 discriminator 2
 1105 0066 33E0     		b	.L88
 1106              	.LVL104:
 1107              	.L109:
 971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 1108              		.loc 1 971 0
 1109 0068 089B     		ldr	r3, [sp, #32]
 1110 006a 0093     		str	r3, [sp]
 1111 006c 3B46     		mov	r3, r7
 1112 006e 0022     		movs	r2, #0
 1113 0070 8021     		movs	r1, #128
 1114 0072 2046     		mov	r0, r4
 1115 0074 FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 1116              	.LVL105:
 1117 0078 0028     		cmp	r0, #0
 1118 007a 68D1     		bne	.L101
 1119              	.LVL106:
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         if (husart->Init.Parity == USART_PARITY_NONE)
 1120              		.loc 1 976 0
 1121 007c 2268     		ldr	r2, [r4]
 1122 007e 2B88     		ldrh	r3, [r5]
 1123 0080 C3F30803 		ubfx	r3, r3, #0, #9
 1124 0084 5360     		str	r3, [r2, #4]
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 1125              		.loc 1 977 0
 1126 0086 2369     		ldr	r3, [r4, #16]
 1127 0088 9BB9     		cbnz	r3, .L90
 979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 1128              		.loc 1 979 0
 1129 008a 0235     		adds	r5, r5, #2
 1130              	.LVL107:
 1131              	.L91:
 987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 1132              		.loc 1 987 0
 1133 008c 089B     		ldr	r3, [sp, #32]
 1134 008e 0093     		str	r3, [sp]
 1135 0090 3B46     		mov	r3, r7
 1136 0092 0022     		movs	r2, #0
 1137 0094 2021     		movs	r1, #32
 1138 0096 2046     		mov	r0, r4
 1139 0098 FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 1140              	.LVL108:
 1141 009c 0028     		cmp	r0, #0
 1142 009e 58D1     		bne	.L102
 1143              	.LVL109:
ARM GAS  /tmp/cctb5cV2.s 			page 72


 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 1144              		.loc 1 992 0
 1145 00a0 2369     		ldr	r3, [r4, #16]
 1146 00a2 43B9     		cbnz	r3, .L92
 994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           pRxData += 2U;
 1147              		.loc 1 994 0
 1148 00a4 2368     		ldr	r3, [r4]
 1149 00a6 5B68     		ldr	r3, [r3, #4]
 1150 00a8 C3F30803 		ubfx	r3, r3, #0, #9
 1151 00ac 26F8023B 		strh	r3, [r6], #2	@ movhi
 1152              	.LVL110:
 1153 00b0 0EE0     		b	.L88
 1154              	.LVL111:
 1155              	.L90:
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 1156              		.loc 1 983 0
 1157 00b2 0135     		adds	r5, r5, #1
 1158              	.LVL112:
 1159 00b4 EAE7     		b	.L91
 1160              	.LVL113:
 1161              	.L92:
 999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           pRxData += 1U;
 1162              		.loc 1 999 0
 1163 00b6 2368     		ldr	r3, [r4]
 1164 00b8 5B68     		ldr	r3, [r3, #4]
 1165 00ba DBB2     		uxtb	r3, r3
 1166 00bc 26F8013B 		strh	r3, [r6], #1	@ movhi
 1167              	.LVL114:
 1168 00c0 06E0     		b	.L88
 1169              	.LVL115:
 1170              	.L94:
1025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 1171              		.loc 1 1025 0
 1172 00c2 2368     		ldr	r3, [r4]
 1173 00c4 5B68     		ldr	r3, [r3, #4]
 1174 00c6 03F07F03 		and	r3, r3, #127
 1175 00ca 3370     		strb	r3, [r6]
 1176 00cc 0136     		adds	r6, r6, #1
 1177              	.LVL116:
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1178              		.loc 1 1010 0
 1179 00ce 4546     		mov	r5, r8
 1180              	.LVL117:
 1181              	.L88:
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 1182              		.loc 1 964 0
 1183 00d0 638D     		ldrh	r3, [r4, #42]
 1184 00d2 9BB2     		uxth	r3, r3
 1185 00d4 002B     		cmp	r3, #0
 1186 00d6 2DD0     		beq	.L108
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       husart->RxXferCount--;
 1187              		.loc 1 966 0
 1188 00d8 638D     		ldrh	r3, [r4, #42]
 1189 00da 9BB2     		uxth	r3, r3
 1190 00dc 013B     		subs	r3, r3, #1
 1191 00de 9BB2     		uxth	r3, r3
 1192 00e0 6385     		strh	r3, [r4, #42]	@ movhi
ARM GAS  /tmp/cctb5cV2.s 			page 73


 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       if (husart->Init.WordLength == USART_WORDLENGTH_9B)
 1193              		.loc 1 967 0
 1194 00e2 638E     		ldrh	r3, [r4, #50]
 1195 00e4 9BB2     		uxth	r3, r3
 1196 00e6 013B     		subs	r3, r3, #1
 1197 00e8 9BB2     		uxth	r3, r3
 1198 00ea 6386     		strh	r3, [r4, #50]	@ movhi
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
 1199              		.loc 1 968 0
 1200 00ec A368     		ldr	r3, [r4, #8]
 1201 00ee B3F5805F 		cmp	r3, #4096
 1202 00f2 B9D0     		beq	.L109
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 1203              		.loc 1 1006 0
 1204 00f4 089B     		ldr	r3, [sp, #32]
 1205 00f6 0093     		str	r3, [sp]
 1206 00f8 3B46     		mov	r3, r7
 1207 00fa 0022     		movs	r2, #0
 1208 00fc 8021     		movs	r1, #128
 1209 00fe 2046     		mov	r0, r4
 1210 0100 FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 1211              	.LVL118:
 1212 0104 38BB     		cbnz	r0, .L103
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1213              		.loc 1 1010 0
 1214 0106 2368     		ldr	r3, [r4]
 1215 0108 05F10108 		add	r8, r5, #1
 1216              	.LVL119:
 1217 010c 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 1218 010e 5A60     		str	r2, [r3, #4]
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 1219              		.loc 1 1013 0
 1220 0110 089B     		ldr	r3, [sp, #32]
 1221 0112 0093     		str	r3, [sp]
 1222 0114 3B46     		mov	r3, r7
 1223 0116 0022     		movs	r2, #0
 1224 0118 2021     		movs	r1, #32
 1225 011a 2046     		mov	r0, r4
 1226 011c FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 1227              	.LVL120:
 1228 0120 D8B9     		cbnz	r0, .L104
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 1229              		.loc 1 1017 0
 1230 0122 2369     		ldr	r3, [r4, #16]
 1231 0124 002B     		cmp	r3, #0
 1232 0126 CCD1     		bne	.L94
 1233              	.LVL121:
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 1234              		.loc 1 1020 0
 1235 0128 2368     		ldr	r3, [r4]
 1236 012a 5B68     		ldr	r3, [r3, #4]
 1237 012c 3370     		strb	r3, [r6]
 1238 012e 0136     		adds	r6, r6, #1
 1239              	.LVL122:
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1240              		.loc 1 1010 0
 1241 0130 4546     		mov	r5, r8
ARM GAS  /tmp/cctb5cV2.s 			page 74


 1242 0132 CDE7     		b	.L88
 1243              	.LVL123:
 1244              	.L108:
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1245              		.loc 1 1030 0
 1246 0134 0123     		movs	r3, #1
 1247 0136 84F83D30 		strb	r3, [r4, #61]
1033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1248              		.loc 1 1033 0
 1249 013a 0020     		movs	r0, #0
 1250 013c 84F83C00 		strb	r0, [r4, #60]
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 1251              		.loc 1 1035 0
 1252 0140 68E7     		b	.L87
 1253              	.LVL124:
 1254              	.L97:
 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 1255              		.loc 1 947 0
 1256 0142 0120     		movs	r0, #1
 1257              	.LVL125:
 1258 0144 66E7     		b	.L87
 1259              	.LVL126:
 1260              	.L98:
 1261 0146 0120     		movs	r0, #1
 1262              	.LVL127:
 1263 0148 64E7     		b	.L87
 1264              	.LVL128:
 1265              	.L99:
 1266 014a 0120     		movs	r0, #1
 1267              	.LVL129:
 1268 014c 62E7     		b	.L87
 1269              	.LVL130:
 1270              	.L101:
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 1271              		.loc 1 973 0
 1272 014e 0320     		movs	r0, #3
 1273 0150 60E7     		b	.L87
 1274              	.L102:
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 1275              		.loc 1 989 0
 1276 0152 0320     		movs	r0, #3
 1277 0154 5EE7     		b	.L87
 1278              	.L103:
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 1279              		.loc 1 1008 0
 1280 0156 0320     		movs	r0, #3
 1281 0158 5CE7     		b	.L87
 1282              	.LVL131:
 1283              	.L104:
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 1284              		.loc 1 1015 0
 1285 015a 0320     		movs	r0, #3
 1286 015c 5AE7     		b	.L87
 1287              		.cfi_endproc
 1288              	.LFE71:
 1290              		.section	.text.HAL_USART_Transmit_IT,"ax",%progbits
 1291              		.align	1
ARM GAS  /tmp/cctb5cV2.s 			page 75


 1292              		.global	HAL_USART_Transmit_IT
 1293              		.syntax unified
 1294              		.thumb
 1295              		.thumb_func
 1296              		.fpu softvfp
 1298              	HAL_USART_Transmit_IT:
 1299              	.LFB72:
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_READY)
 1300              		.loc 1 1056 0
 1301              		.cfi_startproc
 1302              		@ args = 0, pretend = 0, frame = 0
 1303              		@ frame_needed = 0, uses_anonymous_args = 0
 1304              		@ link register save eliminated.
 1305              	.LVL132:
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 1306              		.loc 1 1057 0
 1307 0000 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1308 0004 DBB2     		uxtb	r3, r3
 1309 0006 012B     		cmp	r3, #1
 1310 0008 01D0     		beq	.L116
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 1311              		.loc 1 1092 0
 1312 000a 0220     		movs	r0, #2
 1313              	.LVL133:
 1314 000c 7047     		bx	lr
 1315              	.LVL134:
 1316              	.L116:
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 1317              		.loc 1 1059 0
 1318 000e A9B1     		cbz	r1, .L113
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 1319              		.loc 1 1059 0 is_stmt 0 discriminator 1
 1320 0010 B2B1     		cbz	r2, .L114
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1321              		.loc 1 1065 0 is_stmt 1
 1322 0012 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1323 0016 012B     		cmp	r3, #1
 1324 0018 14D0     		beq	.L115
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->TxXferSize = Size;
 1325              		.loc 1 1067 0 discriminator 2
 1326 001a 4162     		str	r1, [r0, #36]
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->TxXferCount = Size;
 1327              		.loc 1 1068 0 discriminator 2
 1328 001c 0285     		strh	r2, [r0, #40]	@ movhi
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1329              		.loc 1 1069 0 discriminator 2
 1330 001e 4285     		strh	r2, [r0, #42]	@ movhi
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_TX;
 1331              		.loc 1 1071 0 discriminator 2
 1332 0020 0023     		movs	r3, #0
 1333 0022 0364     		str	r3, [r0, #64]
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1334              		.loc 1 1072 0 discriminator 2
 1335 0024 1222     		movs	r2, #18
 1336              	.LVL135:
 1337 0026 80F83D20 		strb	r2, [r0, #61]
1083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
ARM GAS  /tmp/cctb5cV2.s 			page 76


 1338              		.loc 1 1083 0 discriminator 2
 1339 002a 80F83C30 		strb	r3, [r0, #60]
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1340              		.loc 1 1086 0 discriminator 2
 1341 002e 0168     		ldr	r1, [r0]
 1342              	.LVL136:
 1343 0030 CA68     		ldr	r2, [r1, #12]
 1344 0032 42F08002 		orr	r2, r2, #128
 1345 0036 CA60     		str	r2, [r1, #12]
 1346              	.LVL137:
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 1347              		.loc 1 1088 0 discriminator 2
 1348 0038 1846     		mov	r0, r3
 1349              	.LVL138:
 1350 003a 7047     		bx	lr
 1351              	.LVL139:
 1352              	.L113:
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 1353              		.loc 1 1061 0
 1354 003c 0120     		movs	r0, #1
 1355              	.LVL140:
 1356 003e 7047     		bx	lr
 1357              	.LVL141:
 1358              	.L114:
 1359 0040 0120     		movs	r0, #1
 1360              	.LVL142:
 1361 0042 7047     		bx	lr
 1362              	.LVL143:
 1363              	.L115:
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1364              		.loc 1 1065 0
 1365 0044 0220     		movs	r0, #2
 1366              	.LVL144:
1094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1367              		.loc 1 1094 0
 1368 0046 7047     		bx	lr
 1369              		.cfi_endproc
 1370              	.LFE72:
 1372              		.section	.text.HAL_USART_Receive_IT,"ax",%progbits
 1373              		.align	1
 1374              		.global	HAL_USART_Receive_IT
 1375              		.syntax unified
 1376              		.thumb
 1377              		.thumb_func
 1378              		.fpu softvfp
 1380              	HAL_USART_Receive_IT:
 1381              	.LFB73:
1109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_READY)
 1382              		.loc 1 1109 0
 1383              		.cfi_startproc
 1384              		@ args = 0, pretend = 0, frame = 0
 1385              		@ frame_needed = 0, uses_anonymous_args = 0
 1386              		@ link register save eliminated.
 1387              	.LVL145:
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 1388              		.loc 1 1110 0
 1389 0000 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
ARM GAS  /tmp/cctb5cV2.s 			page 77


 1390 0004 DBB2     		uxtb	r3, r3
 1391 0006 012B     		cmp	r3, #1
 1392 0008 01D0     		beq	.L123
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 1393              		.loc 1 1142 0
 1394 000a 0220     		movs	r0, #2
 1395              	.LVL146:
 1396 000c 7047     		bx	lr
 1397              	.LVL147:
 1398              	.L123:
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 1399              		.loc 1 1112 0
 1400 000e F1B1     		cbz	r1, .L120
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 1401              		.loc 1 1112 0 is_stmt 0 discriminator 1
 1402 0010 FAB1     		cbz	r2, .L121
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1403              		.loc 1 1117 0 is_stmt 1
 1404 0012 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1405 0016 012B     		cmp	r3, #1
 1406 0018 1DD0     		beq	.L122
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->RxXferSize = Size;
 1407              		.loc 1 1119 0 discriminator 2
 1408 001a C162     		str	r1, [r0, #44]
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->RxXferCount = Size;
 1409              		.loc 1 1120 0 discriminator 2
 1410 001c 0286     		strh	r2, [r0, #48]	@ movhi
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1411              		.loc 1 1121 0 discriminator 2
 1412 001e 4286     		strh	r2, [r0, #50]	@ movhi
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_RX;
 1413              		.loc 1 1123 0 discriminator 2
 1414 0020 0023     		movs	r3, #0
 1415 0022 0364     		str	r3, [r0, #64]
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1416              		.loc 1 1124 0 discriminator 2
 1417 0024 2222     		movs	r2, #34
 1418              	.LVL148:
 1419 0026 80F83D20 		strb	r2, [r0, #61]
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1420              		.loc 1 1127 0 discriminator 2
 1421 002a 80F83C30 		strb	r3, [r0, #60]
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1422              		.loc 1 1130 0 discriminator 2
 1423 002e 0168     		ldr	r1, [r0]
 1424              	.LVL149:
 1425 0030 CA68     		ldr	r2, [r1, #12]
 1426 0032 42F49072 		orr	r2, r2, #288
 1427 0036 CA60     		str	r2, [r1, #12]
 1428              	.LVL150:
1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1429              		.loc 1 1133 0 discriminator 2
 1430 0038 0168     		ldr	r1, [r0]
 1431 003a 4A69     		ldr	r2, [r1, #20]
 1432 003c 42F00102 		orr	r2, r2, #1
 1433 0040 4A61     		str	r2, [r1, #20]
1136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
ARM GAS  /tmp/cctb5cV2.s 			page 78


 1434              		.loc 1 1136 0 discriminator 2
 1435 0042 0268     		ldr	r2, [r0]
 1436 0044 40F2FF11 		movw	r1, #511
 1437 0048 5160     		str	r1, [r2, #4]
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 1438              		.loc 1 1138 0 discriminator 2
 1439 004a 1846     		mov	r0, r3
 1440              	.LVL151:
 1441 004c 7047     		bx	lr
 1442              	.LVL152:
 1443              	.L120:
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 1444              		.loc 1 1114 0
 1445 004e 0120     		movs	r0, #1
 1446              	.LVL153:
 1447 0050 7047     		bx	lr
 1448              	.LVL154:
 1449              	.L121:
 1450 0052 0120     		movs	r0, #1
 1451              	.LVL155:
 1452 0054 7047     		bx	lr
 1453              	.LVL156:
 1454              	.L122:
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1455              		.loc 1 1117 0
 1456 0056 0220     		movs	r0, #2
 1457              	.LVL157:
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1458              		.loc 1 1144 0
 1459 0058 7047     		bx	lr
 1460              		.cfi_endproc
 1461              	.LFE73:
 1463              		.section	.text.HAL_USART_TransmitReceive_IT,"ax",%progbits
 1464              		.align	1
 1465              		.global	HAL_USART_TransmitReceive_IT
 1466              		.syntax unified
 1467              		.thumb
 1468              		.thumb_func
 1469              		.fpu softvfp
 1471              	HAL_USART_TransmitReceive_IT:
 1472              	.LFB74:
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_READY)
 1473              		.loc 1 1159 0
 1474              		.cfi_startproc
 1475              		@ args = 0, pretend = 0, frame = 0
 1476              		@ frame_needed = 0, uses_anonymous_args = 0
 1477              		@ link register save eliminated.
 1478              	.LVL158:
 1479 0000 10B4     		push	{r4}
 1480              	.LCFI18:
 1481              		.cfi_def_cfa_offset 4
 1482              		.cfi_offset 4, -4
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 1483              		.loc 1 1160 0
 1484 0002 90F83D40 		ldrb	r4, [r0, #61]	@ zero_extendqisi2
 1485 0006 E4B2     		uxtb	r4, r4
 1486 0008 012C     		cmp	r4, #1
ARM GAS  /tmp/cctb5cV2.s 			page 79


 1487 000a 02D0     		beq	.L132
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 1488              		.loc 1 1198 0
 1489 000c 0220     		movs	r0, #2
 1490              	.LVL159:
 1491              	.L125:
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1492              		.loc 1 1200 0
 1493 000e 10BC     		pop	{r4}
 1494              	.LCFI19:
 1495              		.cfi_remember_state
 1496              		.cfi_restore 4
 1497              		.cfi_def_cfa_offset 0
 1498 0010 7047     		bx	lr
 1499              	.LVL160:
 1500              	.L132:
 1501              	.LCFI20:
 1502              		.cfi_restore_state
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 1503              		.loc 1 1162 0
 1504 0012 41B3     		cbz	r1, .L127
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 1505              		.loc 1 1162 0 is_stmt 0 discriminator 1
 1506 0014 4AB3     		cbz	r2, .L128
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 1507              		.loc 1 1162 0 discriminator 2
 1508 0016 53B3     		cbz	r3, .L129
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1509              		.loc 1 1167 0 is_stmt 1
 1510 0018 90F83C40 		ldrb	r4, [r0, #60]	@ zero_extendqisi2
 1511 001c 012C     		cmp	r4, #1
 1512 001e 28D0     		beq	.L130
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->RxXferSize = Size;
 1513              		.loc 1 1169 0 discriminator 2
 1514 0020 C262     		str	r2, [r0, #44]
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->RxXferCount = Size;
 1515              		.loc 1 1170 0 discriminator 2
 1516 0022 0386     		strh	r3, [r0, #48]	@ movhi
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->pTxBuffPtr = pTxData;
 1517              		.loc 1 1171 0 discriminator 2
 1518 0024 4386     		strh	r3, [r0, #50]	@ movhi
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->TxXferSize = Size;
 1519              		.loc 1 1172 0 discriminator 2
 1520 0026 4162     		str	r1, [r0, #36]
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->TxXferCount = Size;
 1521              		.loc 1 1173 0 discriminator 2
 1522 0028 0385     		strh	r3, [r0, #40]	@ movhi
1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1523              		.loc 1 1174 0 discriminator 2
 1524 002a 4385     		strh	r3, [r0, #42]	@ movhi
1176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_TX_RX;
 1525              		.loc 1 1176 0 discriminator 2
 1526 002c 0023     		movs	r3, #0
 1527              	.LVL161:
 1528 002e 0364     		str	r3, [r0, #64]
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1529              		.loc 1 1177 0 discriminator 2
ARM GAS  /tmp/cctb5cV2.s 			page 80


 1530 0030 3222     		movs	r2, #50
 1531              	.LVL162:
 1532 0032 80F83D20 		strb	r2, [r0, #61]
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1533              		.loc 1 1180 0 discriminator 2
 1534 0036 80F83C30 		strb	r3, [r0, #60]
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1535              		.loc 1 1183 0 discriminator 2
 1536 003a 0168     		ldr	r1, [r0]
 1537              	.LVL163:
 1538 003c CA68     		ldr	r2, [r1, #12]
 1539 003e 42F02002 		orr	r2, r2, #32
 1540 0042 CA60     		str	r2, [r1, #12]
 1541              	.LVL164:
1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1542              		.loc 1 1186 0 discriminator 2
 1543 0044 0168     		ldr	r1, [r0]
 1544 0046 CA68     		ldr	r2, [r1, #12]
 1545 0048 42F48072 		orr	r2, r2, #256
 1546 004c CA60     		str	r2, [r1, #12]
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1547              		.loc 1 1189 0 discriminator 2
 1548 004e 0168     		ldr	r1, [r0]
 1549 0050 4A69     		ldr	r2, [r1, #20]
 1550 0052 42F00102 		orr	r2, r2, #1
 1551 0056 4A61     		str	r2, [r1, #20]
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1552              		.loc 1 1192 0 discriminator 2
 1553 0058 0168     		ldr	r1, [r0]
 1554 005a CA68     		ldr	r2, [r1, #12]
 1555 005c 42F08002 		orr	r2, r2, #128
 1556 0060 CA60     		str	r2, [r1, #12]
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 1557              		.loc 1 1194 0 discriminator 2
 1558 0062 1846     		mov	r0, r3
 1559              	.LVL165:
 1560 0064 D3E7     		b	.L125
 1561              	.LVL166:
 1562              	.L127:
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 1563              		.loc 1 1164 0
 1564 0066 0120     		movs	r0, #1
 1565              	.LVL167:
 1566 0068 D1E7     		b	.L125
 1567              	.LVL168:
 1568              	.L128:
 1569 006a 0120     		movs	r0, #1
 1570              	.LVL169:
 1571 006c CFE7     		b	.L125
 1572              	.LVL170:
 1573              	.L129:
 1574 006e 0120     		movs	r0, #1
 1575              	.LVL171:
 1576 0070 CDE7     		b	.L125
 1577              	.LVL172:
 1578              	.L130:
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
ARM GAS  /tmp/cctb5cV2.s 			page 81


 1579              		.loc 1 1167 0
 1580 0072 0220     		movs	r0, #2
 1581              	.LVL173:
 1582 0074 CBE7     		b	.L125
 1583              		.cfi_endproc
 1584              	.LFE74:
 1586              		.section	.text.HAL_USART_Transmit_DMA,"ax",%progbits
 1587              		.align	1
 1588              		.global	HAL_USART_Transmit_DMA
 1589              		.syntax unified
 1590              		.thumb
 1591              		.thumb_func
 1592              		.fpu softvfp
 1594              	HAL_USART_Transmit_DMA:
 1595              	.LFB75:
1214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t *tmp;
 1596              		.loc 1 1214 0
 1597              		.cfi_startproc
 1598              		@ args = 0, pretend = 0, frame = 0
 1599              		@ frame_needed = 0, uses_anonymous_args = 0
 1600              	.LVL174:
 1601 0000 38B5     		push	{r3, r4, r5, lr}
 1602              	.LCFI21:
 1603              		.cfi_def_cfa_offset 16
 1604              		.cfi_offset 3, -16
 1605              		.cfi_offset 4, -12
 1606              		.cfi_offset 5, -8
 1607              		.cfi_offset 14, -4
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 1608              		.loc 1 1217 0
 1609 0002 90F83D40 		ldrb	r4, [r0, #61]	@ zero_extendqisi2
 1610 0006 E4B2     		uxtb	r4, r4
 1611 0008 012C     		cmp	r4, #1
 1612 000a 01D0     		beq	.L140
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 1613              		.loc 1 1263 0
 1614 000c 0220     		movs	r0, #2
 1615              	.LVL175:
 1616 000e 38BD     		pop	{r3, r4, r5, pc}
 1617              	.LVL176:
 1618              	.L140:
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 1619              		.loc 1 1219 0
 1620 0010 0029     		cmp	r1, #0
 1621 0012 31D0     		beq	.L136
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 1622              		.loc 1 1219 0 is_stmt 0 discriminator 1
 1623 0014 002A     		cmp	r2, #0
 1624 0016 31D0     		beq	.L137
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1625              		.loc 1 1224 0 is_stmt 1
 1626 0018 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1627 001c 012B     		cmp	r3, #1
 1628 001e 01D1     		bne	.L141
 1629 0020 0220     		movs	r0, #2
 1630              	.LVL177:
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
ARM GAS  /tmp/cctb5cV2.s 			page 82


 1631              		.loc 1 1265 0
 1632 0022 38BD     		pop	{r3, r4, r5, pc}
 1633              	.LVL178:
 1634              	.L141:
 1635 0024 1346     		mov	r3, r2
 1636 0026 0446     		mov	r4, r0
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1637              		.loc 1 1224 0 discriminator 2
 1638 0028 0122     		movs	r2, #1
 1639              	.LVL179:
 1640 002a 80F83C20 		strb	r2, [r0, #60]
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->TxXferSize = Size;
 1641              		.loc 1 1226 0 discriminator 2
 1642 002e 4162     		str	r1, [r0, #36]
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->TxXferCount = Size;
 1643              		.loc 1 1227 0 discriminator 2
 1644 0030 0385     		strh	r3, [r0, #40]	@ movhi
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1645              		.loc 1 1228 0 discriminator 2
 1646 0032 4385     		strh	r3, [r0, #42]	@ movhi
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_TX;
 1647              		.loc 1 1230 0 discriminator 2
 1648 0034 0025     		movs	r5, #0
 1649 0036 0564     		str	r5, [r0, #64]
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1650              		.loc 1 1231 0 discriminator 2
 1651 0038 1222     		movs	r2, #18
 1652 003a 80F83D20 		strb	r2, [r0, #61]
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1653              		.loc 1 1234 0 discriminator 2
 1654 003e 426B     		ldr	r2, [r0, #52]
 1655 0040 0F48     		ldr	r0, .L142
 1656              	.LVL180:
 1657 0042 9062     		str	r0, [r2, #40]
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1658              		.loc 1 1237 0 discriminator 2
 1659 0044 626B     		ldr	r2, [r4, #52]
 1660 0046 0F48     		ldr	r0, .L142+4
 1661 0048 D062     		str	r0, [r2, #44]
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1662              		.loc 1 1240 0 discriminator 2
 1663 004a 626B     		ldr	r2, [r4, #52]
 1664 004c 0E48     		ldr	r0, .L142+8
 1665 004e 1063     		str	r0, [r2, #48]
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1666              		.loc 1 1243 0 discriminator 2
 1667 0050 626B     		ldr	r2, [r4, #52]
 1668 0052 5563     		str	r5, [r2, #52]
 1669              	.LVL181:
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1670              		.loc 1 1247 0 discriminator 2
 1671 0054 2268     		ldr	r2, [r4]
 1672 0056 0432     		adds	r2, r2, #4
 1673 0058 606B     		ldr	r0, [r4, #52]
 1674 005a FFF7FEFF 		bl	HAL_DMA_Start_IT
 1675              	.LVL182:
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
ARM GAS  /tmp/cctb5cV2.s 			page 83


 1676              		.loc 1 1250 0 discriminator 2
 1677 005e 2368     		ldr	r3, [r4]
 1678 0060 6FF04002 		mvn	r2, #64
 1679 0064 1A60     		str	r2, [r3]
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1680              		.loc 1 1253 0 discriminator 2
 1681 0066 84F83C50 		strb	r5, [r4, #60]
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1682              		.loc 1 1257 0 discriminator 2
 1683 006a 2268     		ldr	r2, [r4]
 1684 006c 5369     		ldr	r3, [r2, #20]
 1685 006e 43F08003 		orr	r3, r3, #128
 1686 0072 5361     		str	r3, [r2, #20]
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 1687              		.loc 1 1259 0 discriminator 2
 1688 0074 2846     		mov	r0, r5
 1689 0076 38BD     		pop	{r3, r4, r5, pc}
 1690              	.LVL183:
 1691              	.L136:
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 1692              		.loc 1 1221 0
 1693 0078 0120     		movs	r0, #1
 1694              	.LVL184:
 1695 007a 38BD     		pop	{r3, r4, r5, pc}
 1696              	.LVL185:
 1697              	.L137:
 1698 007c 0120     		movs	r0, #1
 1699              	.LVL186:
 1700 007e 38BD     		pop	{r3, r4, r5, pc}
 1701              	.L143:
 1702              		.align	2
 1703              	.L142:
 1704 0080 00000000 		.word	USART_DMATransmitCplt
 1705 0084 00000000 		.word	USART_DMATxHalfCplt
 1706 0088 00000000 		.word	USART_DMAError
 1707              		.cfi_endproc
 1708              	.LFE75:
 1710              		.section	.text.HAL_USART_Receive_DMA,"ax",%progbits
 1711              		.align	1
 1712              		.global	HAL_USART_Receive_DMA
 1713              		.syntax unified
 1714              		.thumb
 1715              		.thumb_func
 1716              		.fpu softvfp
 1718              	HAL_USART_Receive_DMA:
 1719              	.LFB76:
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t *tmp;
 1720              		.loc 1 1281 0
 1721              		.cfi_startproc
 1722              		@ args = 0, pretend = 0, frame = 8
 1723              		@ frame_needed = 0, uses_anonymous_args = 0
 1724              	.LVL187:
 1725 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1726              	.LCFI22:
 1727              		.cfi_def_cfa_offset 20
 1728              		.cfi_offset 4, -20
 1729              		.cfi_offset 5, -16
ARM GAS  /tmp/cctb5cV2.s 			page 84


 1730              		.cfi_offset 6, -12
 1731              		.cfi_offset 7, -8
 1732              		.cfi_offset 14, -4
 1733 0002 83B0     		sub	sp, sp, #12
 1734              	.LCFI23:
 1735              		.cfi_def_cfa_offset 32
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 1736              		.loc 1 1284 0
 1737 0004 90F83D40 		ldrb	r4, [r0, #61]	@ zero_extendqisi2
 1738 0008 E4B2     		uxtb	r4, r4
 1739 000a 012C     		cmp	r4, #1
 1740 000c 02D0     		beq	.L151
1358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 1741              		.loc 1 1358 0
 1742 000e 0220     		movs	r0, #2
 1743              	.LVL188:
 1744              	.L145:
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1745              		.loc 1 1360 0
 1746 0010 03B0     		add	sp, sp, #12
 1747              	.LCFI24:
 1748              		.cfi_remember_state
 1749              		.cfi_def_cfa_offset 20
 1750              		@ sp needed
 1751 0012 F0BD     		pop	{r4, r5, r6, r7, pc}
 1752              	.LVL189:
 1753              	.L151:
 1754              	.LCFI25:
 1755              		.cfi_restore_state
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 1756              		.loc 1 1286 0
 1757 0014 0029     		cmp	r1, #0
 1758 0016 55D0     		beq	.L147
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 1759              		.loc 1 1286 0 is_stmt 0 discriminator 1
 1760 0018 002A     		cmp	r2, #0
 1761 001a 55D0     		beq	.L148
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1762              		.loc 1 1292 0 is_stmt 1
 1763 001c 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1764 0020 012B     		cmp	r3, #1
 1765 0022 01D1     		bne	.L152
 1766 0024 0220     		movs	r0, #2
 1767              	.LVL190:
 1768 0026 F3E7     		b	.L145
 1769              	.LVL191:
 1770              	.L152:
 1771 0028 1746     		mov	r7, r2
 1772 002a 0E46     		mov	r6, r1
 1773 002c 0446     		mov	r4, r0
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1774              		.loc 1 1292 0 is_stmt 0 discriminator 2
 1775 002e 0123     		movs	r3, #1
 1776 0030 80F83C30 		strb	r3, [r0, #60]
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->RxXferSize = Size;
 1777              		.loc 1 1294 0 is_stmt 1 discriminator 2
 1778 0034 E162     		str	r1, [r4, #44]
ARM GAS  /tmp/cctb5cV2.s 			page 85


1295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->pTxBuffPtr = pRxData;
 1779              		.loc 1 1295 0 discriminator 2
 1780 0036 2286     		strh	r2, [r4, #48]	@ movhi
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->TxXferSize = Size;
 1781              		.loc 1 1296 0 discriminator 2
 1782 0038 6162     		str	r1, [r4, #36]
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1783              		.loc 1 1297 0 discriminator 2
 1784 003a 2285     		strh	r2, [r4, #40]	@ movhi
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_RX;
 1785              		.loc 1 1299 0 discriminator 2
 1786 003c 0025     		movs	r5, #0
 1787 003e 0564     		str	r5, [r0, #64]
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1788              		.loc 1 1300 0 discriminator 2
 1789 0040 2223     		movs	r3, #34
 1790 0042 80F83D30 		strb	r3, [r0, #61]
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1791              		.loc 1 1303 0 discriminator 2
 1792 0046 836B     		ldr	r3, [r0, #56]
 1793 0048 204A     		ldr	r2, .L153
 1794              	.LVL192:
 1795 004a 9A62     		str	r2, [r3, #40]
 1796              	.LVL193:
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1797              		.loc 1 1306 0 discriminator 2
 1798 004c 836B     		ldr	r3, [r0, #56]
 1799 004e 204A     		ldr	r2, .L153+4
 1800 0050 DA62     		str	r2, [r3, #44]
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1801              		.loc 1 1309 0 discriminator 2
 1802 0052 826B     		ldr	r2, [r0, #56]
 1803 0054 1F4B     		ldr	r3, .L153+8
 1804 0056 1363     		str	r3, [r2, #48]
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1805              		.loc 1 1312 0 discriminator 2
 1806 0058 826B     		ldr	r2, [r0, #56]
 1807 005a 5563     		str	r5, [r2, #52]
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->hdmatx->XferCpltCallback = NULL;
 1808              		.loc 1 1316 0 discriminator 2
 1809 005c 426B     		ldr	r2, [r0, #52]
 1810 005e D562     		str	r5, [r2, #44]
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1811              		.loc 1 1317 0 discriminator 2
 1812 0060 426B     		ldr	r2, [r0, #52]
 1813 0062 9562     		str	r5, [r2, #40]
1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1814              		.loc 1 1320 0 discriminator 2
 1815 0064 426B     		ldr	r2, [r0, #52]
 1816 0066 1363     		str	r3, [r2, #48]
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1817              		.loc 1 1323 0 discriminator 2
 1818 0068 436B     		ldr	r3, [r0, #52]
 1819 006a 5D63     		str	r5, [r3, #52]
 1820              	.LVL194:
1327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1821              		.loc 1 1327 0 discriminator 2
ARM GAS  /tmp/cctb5cV2.s 			page 86


 1822 006c 0168     		ldr	r1, [r0]
 1823              	.LVL195:
 1824 006e 3B46     		mov	r3, r7
 1825 0070 3246     		mov	r2, r6
 1826 0072 0431     		adds	r1, r1, #4
 1827 0074 806B     		ldr	r0, [r0, #56]
 1828              	.LVL196:
 1829 0076 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1830              	.LVL197:
1332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1831              		.loc 1 1332 0 discriminator 2
 1832 007a 2268     		ldr	r2, [r4]
 1833 007c 3B46     		mov	r3, r7
 1834 007e 0432     		adds	r2, r2, #4
 1835 0080 3146     		mov	r1, r6
 1836 0082 606B     		ldr	r0, [r4, #52]
 1837 0084 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1838              	.LVL198:
 1839              	.LBB2:
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1840              		.loc 1 1335 0 discriminator 2
 1841 0088 0195     		str	r5, [sp, #4]
 1842 008a 2368     		ldr	r3, [r4]
 1843 008c 1A68     		ldr	r2, [r3]
 1844 008e 0192     		str	r2, [sp, #4]
 1845 0090 5A68     		ldr	r2, [r3, #4]
 1846 0092 0192     		str	r2, [sp, #4]
 1847 0094 019A     		ldr	r2, [sp, #4]
 1848              	.LBE2:
1338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1849              		.loc 1 1338 0 discriminator 2
 1850 0096 84F83C50 		strb	r5, [r4, #60]
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1851              		.loc 1 1341 0 discriminator 2
 1852 009a DA68     		ldr	r2, [r3, #12]
 1853 009c 42F48072 		orr	r2, r2, #256
 1854 00a0 DA60     		str	r2, [r3, #12]
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1855              		.loc 1 1344 0 discriminator 2
 1856 00a2 2268     		ldr	r2, [r4]
 1857 00a4 5369     		ldr	r3, [r2, #20]
 1858 00a6 43F00103 		orr	r3, r3, #1
 1859 00aa 5361     		str	r3, [r2, #20]
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1860              		.loc 1 1348 0 discriminator 2
 1861 00ac 2268     		ldr	r2, [r4]
 1862 00ae 5369     		ldr	r3, [r2, #20]
 1863 00b0 43F04003 		orr	r3, r3, #64
 1864 00b4 5361     		str	r3, [r2, #20]
1352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1865              		.loc 1 1352 0 discriminator 2
 1866 00b6 2268     		ldr	r2, [r4]
 1867 00b8 5369     		ldr	r3, [r2, #20]
 1868 00ba 43F08003 		orr	r3, r3, #128
 1869 00be 5361     		str	r3, [r2, #20]
1354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 1870              		.loc 1 1354 0 discriminator 2
ARM GAS  /tmp/cctb5cV2.s 			page 87


 1871 00c0 2846     		mov	r0, r5
 1872 00c2 A5E7     		b	.L145
 1873              	.LVL199:
 1874              	.L147:
1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 1875              		.loc 1 1288 0
 1876 00c4 0120     		movs	r0, #1
 1877              	.LVL200:
 1878 00c6 A3E7     		b	.L145
 1879              	.LVL201:
 1880              	.L148:
 1881 00c8 0120     		movs	r0, #1
 1882              	.LVL202:
 1883 00ca A1E7     		b	.L145
 1884              	.L154:
 1885              		.align	2
 1886              	.L153:
 1887 00cc 00000000 		.word	USART_DMAReceiveCplt
 1888 00d0 00000000 		.word	USART_DMARxHalfCplt
 1889 00d4 00000000 		.word	USART_DMAError
 1890              		.cfi_endproc
 1891              	.LFE76:
 1893              		.section	.text.HAL_USART_TransmitReceive_DMA,"ax",%progbits
 1894              		.align	1
 1895              		.global	HAL_USART_TransmitReceive_DMA
 1896              		.syntax unified
 1897              		.thumb
 1898              		.thumb_func
 1899              		.fpu softvfp
 1901              	HAL_USART_TransmitReceive_DMA:
 1902              	.LFB77:
1376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t *tmp;
 1903              		.loc 1 1376 0
 1904              		.cfi_startproc
 1905              		@ args = 0, pretend = 0, frame = 8
 1906              		@ frame_needed = 0, uses_anonymous_args = 0
 1907              	.LVL203:
 1908 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1909              	.LCFI26:
 1910              		.cfi_def_cfa_offset 20
 1911              		.cfi_offset 4, -20
 1912              		.cfi_offset 5, -16
 1913              		.cfi_offset 6, -12
 1914              		.cfi_offset 7, -8
 1915              		.cfi_offset 14, -4
 1916 0002 83B0     		sub	sp, sp, #12
 1917              	.LCFI27:
 1918              		.cfi_def_cfa_offset 32
1379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 1919              		.loc 1 1379 0
 1920 0004 90F83D40 		ldrb	r4, [r0, #61]	@ zero_extendqisi2
 1921 0008 E4B2     		uxtb	r4, r4
 1922 000a 012C     		cmp	r4, #1
 1923 000c 02D0     		beq	.L163
1452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 1924              		.loc 1 1452 0
 1925 000e 0220     		movs	r0, #2
ARM GAS  /tmp/cctb5cV2.s 			page 88


 1926              	.LVL204:
 1927              	.L156:
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1928              		.loc 1 1454 0
 1929 0010 03B0     		add	sp, sp, #12
 1930              	.LCFI28:
 1931              		.cfi_remember_state
 1932              		.cfi_def_cfa_offset 20
 1933              		@ sp needed
 1934 0012 F0BD     		pop	{r4, r5, r6, r7, pc}
 1935              	.LVL205:
 1936              	.L163:
 1937              	.LCFI29:
 1938              		.cfi_restore_state
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 1939              		.loc 1 1381 0
 1940 0014 0029     		cmp	r1, #0
 1941 0016 5AD0     		beq	.L158
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 1942              		.loc 1 1381 0 is_stmt 0 discriminator 1
 1943 0018 002A     		cmp	r2, #0
 1944 001a 5AD0     		beq	.L159
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 1945              		.loc 1 1381 0 discriminator 2
 1946 001c 002B     		cmp	r3, #0
 1947 001e 5AD0     		beq	.L160
1386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1948              		.loc 1 1386 0 is_stmt 1
 1949 0020 90F83C40 		ldrb	r4, [r0, #60]	@ zero_extendqisi2
 1950 0024 012C     		cmp	r4, #1
 1951 0026 01D1     		bne	.L164
 1952 0028 0220     		movs	r0, #2
 1953              	.LVL206:
 1954 002a F1E7     		b	.L156
 1955              	.LVL207:
 1956              	.L164:
 1957 002c 1F46     		mov	r7, r3
 1958 002e 0E46     		mov	r6, r1
 1959 0030 0446     		mov	r4, r0
1386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1960              		.loc 1 1386 0 is_stmt 0 discriminator 2
 1961 0032 0123     		movs	r3, #1
 1962              	.LVL208:
 1963 0034 80F83C30 		strb	r3, [r0, #60]
1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->RxXferSize = Size;
 1964              		.loc 1 1388 0 is_stmt 1 discriminator 2
 1965 0038 C262     		str	r2, [r0, #44]
1389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->pTxBuffPtr = pTxData;
 1966              		.loc 1 1389 0 discriminator 2
 1967 003a 0786     		strh	r7, [r0, #48]	@ movhi
1390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->TxXferSize = Size;
 1968              		.loc 1 1390 0 discriminator 2
 1969 003c 6162     		str	r1, [r4, #36]
1391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1970              		.loc 1 1391 0 discriminator 2
 1971 003e 0785     		strh	r7, [r0, #40]	@ movhi
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_TX_RX;
ARM GAS  /tmp/cctb5cV2.s 			page 89


 1972              		.loc 1 1393 0 discriminator 2
 1973 0040 0025     		movs	r5, #0
 1974 0042 0564     		str	r5, [r0, #64]
1394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1975              		.loc 1 1394 0 discriminator 2
 1976 0044 3223     		movs	r3, #50
 1977 0046 80F83D30 		strb	r3, [r0, #61]
1397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1978              		.loc 1 1397 0 discriminator 2
 1979 004a 836B     		ldr	r3, [r0, #56]
 1980 004c 2349     		ldr	r1, .L165
 1981              	.LVL209:
 1982 004e 9962     		str	r1, [r3, #40]
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1983              		.loc 1 1400 0 discriminator 2
 1984 0050 836B     		ldr	r3, [r0, #56]
 1985 0052 2349     		ldr	r1, .L165+4
 1986 0054 D962     		str	r1, [r3, #44]
1403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1987              		.loc 1 1403 0 discriminator 2
 1988 0056 436B     		ldr	r3, [r0, #52]
 1989 0058 2249     		ldr	r1, .L165+8
 1990 005a 9962     		str	r1, [r3, #40]
1406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1991              		.loc 1 1406 0 discriminator 2
 1992 005c 436B     		ldr	r3, [r0, #52]
 1993 005e 2249     		ldr	r1, .L165+12
 1994 0060 D962     		str	r1, [r3, #44]
1409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1995              		.loc 1 1409 0 discriminator 2
 1996 0062 416B     		ldr	r1, [r0, #52]
 1997 0064 214B     		ldr	r3, .L165+16
 1998 0066 0B63     		str	r3, [r1, #48]
1412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 1999              		.loc 1 1412 0 discriminator 2
 2000 0068 816B     		ldr	r1, [r0, #56]
 2001 006a 0B63     		str	r3, [r1, #48]
1415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2002              		.loc 1 1415 0 discriminator 2
 2003 006c 836B     		ldr	r3, [r0, #56]
 2004 006e 5D63     		str	r5, [r3, #52]
 2005              	.LVL210:
1419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2006              		.loc 1 1419 0 discriminator 2
 2007 0070 0168     		ldr	r1, [r0]
 2008 0072 3B46     		mov	r3, r7
 2009 0074 0431     		adds	r1, r1, #4
 2010 0076 806B     		ldr	r0, [r0, #56]
 2011              	.LVL211:
 2012 0078 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2013              	.LVL212:
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2014              		.loc 1 1423 0 discriminator 2
 2015 007c 2268     		ldr	r2, [r4]
 2016 007e 3B46     		mov	r3, r7
 2017 0080 0432     		adds	r2, r2, #4
 2018 0082 3146     		mov	r1, r6
ARM GAS  /tmp/cctb5cV2.s 			page 90


 2019 0084 606B     		ldr	r0, [r4, #52]
 2020 0086 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2021              	.LVL213:
1426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2022              		.loc 1 1426 0 discriminator 2
 2023 008a 2368     		ldr	r3, [r4]
 2024 008c 6FF04002 		mvn	r2, #64
 2025 0090 1A60     		str	r2, [r3]
 2026              	.LBB3:
1429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2027              		.loc 1 1429 0 discriminator 2
 2028 0092 0195     		str	r5, [sp, #4]
 2029 0094 2368     		ldr	r3, [r4]
 2030 0096 1A68     		ldr	r2, [r3]
 2031 0098 0192     		str	r2, [sp, #4]
 2032 009a 5A68     		ldr	r2, [r3, #4]
 2033 009c 0192     		str	r2, [sp, #4]
 2034 009e 019A     		ldr	r2, [sp, #4]
 2035              	.LBE3:
1432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2036              		.loc 1 1432 0 discriminator 2
 2037 00a0 84F83C50 		strb	r5, [r4, #60]
1435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2038              		.loc 1 1435 0 discriminator 2
 2039 00a4 DA68     		ldr	r2, [r3, #12]
 2040 00a6 42F48072 		orr	r2, r2, #256
 2041 00aa DA60     		str	r2, [r3, #12]
1438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2042              		.loc 1 1438 0 discriminator 2
 2043 00ac 2268     		ldr	r2, [r4]
 2044 00ae 5369     		ldr	r3, [r2, #20]
 2045 00b0 43F00103 		orr	r3, r3, #1
 2046 00b4 5361     		str	r3, [r2, #20]
1442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2047              		.loc 1 1442 0 discriminator 2
 2048 00b6 2268     		ldr	r2, [r4]
 2049 00b8 5369     		ldr	r3, [r2, #20]
 2050 00ba 43F04003 		orr	r3, r3, #64
 2051 00be 5361     		str	r3, [r2, #20]
1446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2052              		.loc 1 1446 0 discriminator 2
 2053 00c0 2268     		ldr	r2, [r4]
 2054 00c2 5369     		ldr	r3, [r2, #20]
 2055 00c4 43F08003 		orr	r3, r3, #128
 2056 00c8 5361     		str	r3, [r2, #20]
1448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 2057              		.loc 1 1448 0 discriminator 2
 2058 00ca 2846     		mov	r0, r5
 2059 00cc A0E7     		b	.L156
 2060              	.LVL214:
 2061              	.L158:
1383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 2062              		.loc 1 1383 0
 2063 00ce 0120     		movs	r0, #1
 2064              	.LVL215:
 2065 00d0 9EE7     		b	.L156
 2066              	.LVL216:
ARM GAS  /tmp/cctb5cV2.s 			page 91


 2067              	.L159:
 2068 00d2 0120     		movs	r0, #1
 2069              	.LVL217:
 2070 00d4 9CE7     		b	.L156
 2071              	.LVL218:
 2072              	.L160:
 2073 00d6 0120     		movs	r0, #1
 2074              	.LVL219:
 2075 00d8 9AE7     		b	.L156
 2076              	.L166:
 2077 00da 00BF     		.align	2
 2078              	.L165:
 2079 00dc 00000000 		.word	USART_DMAReceiveCplt
 2080 00e0 00000000 		.word	USART_DMARxHalfCplt
 2081 00e4 00000000 		.word	USART_DMATransmitCplt
 2082 00e8 00000000 		.word	USART_DMATxHalfCplt
 2083 00ec 00000000 		.word	USART_DMAError
 2084              		.cfi_endproc
 2085              	.LFE77:
 2087              		.section	.text.HAL_USART_DMAPause,"ax",%progbits
 2088              		.align	1
 2089              		.global	HAL_USART_DMAPause
 2090              		.syntax unified
 2091              		.thumb
 2092              		.thumb_func
 2093              		.fpu softvfp
 2095              	HAL_USART_DMAPause:
 2096              	.LFB78:
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Process Locked */
 2097              		.loc 1 1463 0
 2098              		.cfi_startproc
 2099              		@ args = 0, pretend = 0, frame = 0
 2100              		@ frame_needed = 0, uses_anonymous_args = 0
 2101              		@ link register save eliminated.
 2102              	.LVL220:
1465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2103              		.loc 1 1465 0
 2104 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2105 0004 012B     		cmp	r3, #1
 2106 0006 0CD0     		beq	.L169
1465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2107              		.loc 1 1465 0 is_stmt 0 discriminator 2
 2108 0008 0123     		movs	r3, #1
 2109 000a 80F83C30 		strb	r3, [r0, #60]
1468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2110              		.loc 1 1468 0 is_stmt 1 discriminator 2
 2111 000e 0268     		ldr	r2, [r0]
 2112 0010 5369     		ldr	r3, [r2, #20]
 2113 0012 23F08003 		bic	r3, r3, #128
 2114 0016 5361     		str	r3, [r2, #20]
1471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2115              		.loc 1 1471 0 discriminator 2
 2116 0018 0023     		movs	r3, #0
 2117 001a 80F83C30 		strb	r3, [r0, #60]
1473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
 2118              		.loc 1 1473 0 discriminator 2
 2119 001e 1846     		mov	r0, r3
ARM GAS  /tmp/cctb5cV2.s 			page 92


 2120              	.LVL221:
 2121 0020 7047     		bx	lr
 2122              	.LVL222:
 2123              	.L169:
1465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2124              		.loc 1 1465 0
 2125 0022 0220     		movs	r0, #2
 2126              	.LVL223:
1474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2127              		.loc 1 1474 0
 2128 0024 7047     		bx	lr
 2129              		.cfi_endproc
 2130              	.LFE78:
 2132              		.section	.text.HAL_USART_DMAResume,"ax",%progbits
 2133              		.align	1
 2134              		.global	HAL_USART_DMAResume
 2135              		.syntax unified
 2136              		.thumb
 2137              		.thumb_func
 2138              		.fpu softvfp
 2140              	HAL_USART_DMAResume:
 2141              	.LFB79:
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Process Locked */
 2142              		.loc 1 1483 0
 2143              		.cfi_startproc
 2144              		@ args = 0, pretend = 0, frame = 0
 2145              		@ frame_needed = 0, uses_anonymous_args = 0
 2146              		@ link register save eliminated.
 2147              	.LVL224:
1485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2148              		.loc 1 1485 0
 2149 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2150 0004 012B     		cmp	r3, #1
 2151 0006 0CD0     		beq	.L172
1485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2152              		.loc 1 1485 0 is_stmt 0 discriminator 2
 2153 0008 0123     		movs	r3, #1
 2154 000a 80F83C30 		strb	r3, [r0, #60]
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2155              		.loc 1 1488 0 is_stmt 1 discriminator 2
 2156 000e 0268     		ldr	r2, [r0]
 2157 0010 5369     		ldr	r3, [r2, #20]
 2158 0012 43F08003 		orr	r3, r3, #128
 2159 0016 5361     		str	r3, [r2, #20]
1491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2160              		.loc 1 1491 0 discriminator 2
 2161 0018 0023     		movs	r3, #0
 2162 001a 80F83C30 		strb	r3, [r0, #60]
1493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
 2163              		.loc 1 1493 0 discriminator 2
 2164 001e 1846     		mov	r0, r3
 2165              	.LVL225:
 2166 0020 7047     		bx	lr
 2167              	.LVL226:
 2168              	.L172:
1485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2169              		.loc 1 1485 0
ARM GAS  /tmp/cctb5cV2.s 			page 93


 2170 0022 0220     		movs	r0, #2
 2171              	.LVL227:
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2172              		.loc 1 1494 0
 2173 0024 7047     		bx	lr
 2174              		.cfi_endproc
 2175              	.LFE79:
 2177              		.section	.text.HAL_USART_DMAStop,"ax",%progbits
 2178              		.align	1
 2179              		.global	HAL_USART_DMAStop
 2180              		.syntax unified
 2181              		.thumb
 2182              		.thumb_func
 2183              		.fpu softvfp
 2185              	HAL_USART_DMAStop:
 2186              	.LFB80:
1503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t dmarequest = 0x00U;
 2187              		.loc 1 1503 0
 2188              		.cfi_startproc
 2189              		@ args = 0, pretend = 0, frame = 0
 2190              		@ frame_needed = 0, uses_anonymous_args = 0
 2191              	.LVL228:
 2192 0000 10B5     		push	{r4, lr}
 2193              	.LCFI30:
 2194              		.cfi_def_cfa_offset 8
 2195              		.cfi_offset 4, -8
 2196              		.cfi_offset 14, -4
 2197 0002 0446     		mov	r4, r0
 2198              	.LVL229:
1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if ((husart->State == HAL_USART_STATE_BUSY_TX) && dmarequest)
 2199              		.loc 1 1512 0
 2200 0004 0368     		ldr	r3, [r0]
 2201 0006 5A69     		ldr	r2, [r3, #20]
 2202              	.LVL230:
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 2203              		.loc 1 1513 0
 2204 0008 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 2205 000c DBB2     		uxtb	r3, r3
 2206 000e 122B     		cmp	r3, #18
 2207 0010 0AD0     		beq	.L179
 2208              	.LVL231:
 2209              	.L174:
1528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if ((husart->State == HAL_USART_STATE_BUSY_RX) && dmarequest)
 2210              		.loc 1 1528 0
 2211 0012 2368     		ldr	r3, [r4]
 2212 0014 5A69     		ldr	r2, [r3, #20]
 2213 0016 02F04002 		and	r2, r2, #64
 2214              	.LVL232:
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 2215              		.loc 1 1529 0
 2216 001a 94F83D30 		ldrb	r3, [r4, #61]	@ zero_extendqisi2
 2217 001e DBB2     		uxtb	r3, r3
 2218 0020 222B     		cmp	r3, #34
 2219 0022 11D0     		beq	.L180
 2220              	.LVL233:
 2221              	.L176:
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
ARM GAS  /tmp/cctb5cV2.s 			page 94


 2222              		.loc 1 1544 0
 2223 0024 0020     		movs	r0, #0
 2224 0026 10BD     		pop	{r4, pc}
 2225              	.LVL234:
 2226              	.L179:
 2227 0028 02F08002 		and	r2, r2, #128
 2228              	.LVL235:
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 2229              		.loc 1 1513 0 discriminator 1
 2230 002c 002A     		cmp	r2, #0
 2231 002e F0D0     		beq	.L174
1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2232              		.loc 1 1515 0
 2233 0030 FFF7FEFF 		bl	USART_EndTxTransfer
 2234              	.LVL236:
1518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 2235              		.loc 1 1518 0
 2236 0034 606B     		ldr	r0, [r4, #52]
 2237 0036 08B1     		cbz	r0, .L175
1520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 2238              		.loc 1 1520 0
 2239 0038 FFF7FEFF 		bl	HAL_DMA_Abort
 2240              	.LVL237:
 2241              	.L175:
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 2242              		.loc 1 1524 0
 2243 003c 2268     		ldr	r2, [r4]
 2244 003e 5369     		ldr	r3, [r2, #20]
 2245 0040 23F08003 		bic	r3, r3, #128
 2246 0044 5361     		str	r3, [r2, #20]
 2247 0046 E4E7     		b	.L174
 2248              	.LVL238:
 2249              	.L180:
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 2250              		.loc 1 1529 0 discriminator 1
 2251 0048 002A     		cmp	r2, #0
 2252 004a EBD0     		beq	.L176
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2253              		.loc 1 1531 0
 2254 004c 2046     		mov	r0, r4
 2255 004e FFF7FEFF 		bl	USART_EndRxTransfer
 2256              	.LVL239:
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 2257              		.loc 1 1534 0
 2258 0052 A06B     		ldr	r0, [r4, #56]
 2259 0054 08B1     		cbz	r0, .L177
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 2260              		.loc 1 1536 0
 2261 0056 FFF7FEFF 		bl	HAL_DMA_Abort
 2262              	.LVL240:
 2263              	.L177:
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 2264              		.loc 1 1540 0
 2265 005a 2268     		ldr	r2, [r4]
 2266 005c 5369     		ldr	r3, [r2, #20]
 2267 005e 23F04003 		bic	r3, r3, #64
 2268 0062 5361     		str	r3, [r2, #20]
ARM GAS  /tmp/cctb5cV2.s 			page 95


 2269 0064 DEE7     		b	.L176
 2270              		.cfi_endproc
 2271              	.LFE80:
 2273              		.section	.text.HAL_USART_Abort,"ax",%progbits
 2274              		.align	1
 2275              		.global	HAL_USART_Abort
 2276              		.syntax unified
 2277              		.thumb
 2278              		.thumb_func
 2279              		.fpu softvfp
 2281              	HAL_USART_Abort:
 2282              	.LFB81:
1560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2283              		.loc 1 1560 0
 2284              		.cfi_startproc
 2285              		@ args = 0, pretend = 0, frame = 0
 2286              		@ frame_needed = 0, uses_anonymous_args = 0
 2287              	.LVL241:
 2288 0000 10B5     		push	{r4, lr}
 2289              	.LCFI31:
 2290              		.cfi_def_cfa_offset 8
 2291              		.cfi_offset 4, -8
 2292              		.cfi_offset 14, -4
 2293 0002 0446     		mov	r4, r0
1562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR3, USART_CR3_EIE);
 2294              		.loc 1 1562 0
 2295 0004 0268     		ldr	r2, [r0]
 2296 0006 D368     		ldr	r3, [r2, #12]
 2297 0008 23F4F073 		bic	r3, r3, #480
 2298 000c D360     		str	r3, [r2, #12]
1563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2299              		.loc 1 1563 0
 2300 000e 0268     		ldr	r2, [r0]
 2301 0010 5369     		ldr	r3, [r2, #20]
 2302 0012 23F00103 		bic	r3, r3, #1
 2303 0016 5361     		str	r3, [r2, #20]
1566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 2304              		.loc 1 1566 0
 2305 0018 0368     		ldr	r3, [r0]
 2306 001a 5A69     		ldr	r2, [r3, #20]
 2307 001c 12F0800F 		tst	r2, #128
 2308 0020 0AD0     		beq	.L182
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2309              		.loc 1 1568 0
 2310 0022 5A69     		ldr	r2, [r3, #20]
 2311 0024 22F08002 		bic	r2, r2, #128
 2312 0028 5A61     		str	r2, [r3, #20]
1571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 2313              		.loc 1 1571 0
 2314 002a 436B     		ldr	r3, [r0, #52]
 2315 002c 23B1     		cbz	r3, .L182
1575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2316              		.loc 1 1575 0
 2317 002e 0022     		movs	r2, #0
 2318 0030 5A63     		str	r2, [r3, #52]
1577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 2319              		.loc 1 1577 0
ARM GAS  /tmp/cctb5cV2.s 			page 96


 2320 0032 406B     		ldr	r0, [r0, #52]
 2321              	.LVL242:
 2322 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 2323              	.LVL243:
 2324              	.L182:
1582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 2325              		.loc 1 1582 0
 2326 0038 2368     		ldr	r3, [r4]
 2327 003a 5A69     		ldr	r2, [r3, #20]
 2328 003c 12F0400F 		tst	r2, #64
 2329 0040 0AD0     		beq	.L183
1584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2330              		.loc 1 1584 0
 2331 0042 5A69     		ldr	r2, [r3, #20]
 2332 0044 22F04002 		bic	r2, r2, #64
 2333 0048 5A61     		str	r2, [r3, #20]
1587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 2334              		.loc 1 1587 0
 2335 004a A36B     		ldr	r3, [r4, #56]
 2336 004c 23B1     		cbz	r3, .L183
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2337              		.loc 1 1591 0
 2338 004e 0022     		movs	r2, #0
 2339 0050 5A63     		str	r2, [r3, #52]
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 2340              		.loc 1 1593 0
 2341 0052 A06B     		ldr	r0, [r4, #56]
 2342 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 2343              	.LVL244:
 2344              	.L183:
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->RxXferCount = 0x00U;
 2345              		.loc 1 1598 0
 2346 0058 0020     		movs	r0, #0
 2347 005a 6085     		strh	r0, [r4, #42]	@ movhi
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2348              		.loc 1 1599 0
 2349 005c 6086     		strh	r0, [r4, #50]	@ movhi
1602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2350              		.loc 1 1602 0
 2351 005e 0123     		movs	r3, #1
 2352 0060 84F83D30 		strb	r3, [r4, #61]
1605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2353              		.loc 1 1605 0
 2354 0064 2064     		str	r0, [r4, #64]
1608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2355              		.loc 1 1608 0
 2356 0066 10BD     		pop	{r4, pc}
 2357              		.cfi_endproc
 2358              	.LFE81:
 2360              		.section	.text.HAL_USART_TxCpltCallback,"ax",%progbits
 2361              		.align	1
 2362              		.weak	HAL_USART_TxCpltCallback
 2363              		.syntax unified
 2364              		.thumb
 2365              		.thumb_func
 2366              		.fpu softvfp
 2368              	HAL_USART_TxCpltCallback:
ARM GAS  /tmp/cctb5cV2.s 			page 97


 2369              	.LFB84:
1907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
 2370              		.loc 1 1907 0
 2371              		.cfi_startproc
 2372              		@ args = 0, pretend = 0, frame = 0
 2373              		@ frame_needed = 0, uses_anonymous_args = 0
 2374              		@ link register save eliminated.
 2375              	.LVL245:
 2376 0000 7047     		bx	lr
 2377              		.cfi_endproc
 2378              	.LFE84:
 2380              		.section	.text.USART_DMATransmitCplt,"ax",%progbits
 2381              		.align	1
 2382              		.syntax unified
 2383              		.thumb
 2384              		.thumb_func
 2385              		.fpu softvfp
 2387              	USART_DMATransmitCplt:
 2388              	.LFB93:
2084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   USART_HandleTypeDef *husart = (USART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2389              		.loc 1 2084 0
 2390              		.cfi_startproc
 2391              		@ args = 0, pretend = 0, frame = 0
 2392              		@ frame_needed = 0, uses_anonymous_args = 0
 2393              	.LVL246:
2084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   USART_HandleTypeDef *husart = (USART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2394              		.loc 1 2084 0
 2395 0000 08B5     		push	{r3, lr}
 2396              	.LCFI32:
 2397              		.cfi_def_cfa_offset 8
 2398              		.cfi_offset 3, -8
 2399              		.cfi_offset 14, -4
2085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* DMA Normal mode */
 2400              		.loc 1 2085 0
 2401 0002 436A     		ldr	r3, [r0, #36]
 2402              	.LVL247:
2087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 2403              		.loc 1 2087 0
 2404 0004 0268     		ldr	r2, [r0]
 2405 0006 1268     		ldr	r2, [r2]
 2406 0008 12F0200F 		tst	r2, #32
 2407 000c 11D1     		bne	.L187
2089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     if (husart->State == HAL_USART_STATE_BUSY_TX)
 2408              		.loc 1 2089 0
 2409 000e 0022     		movs	r2, #0
 2410 0010 5A85     		strh	r2, [r3, #42]	@ movhi
2090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 2411              		.loc 1 2090 0
 2412 0012 93F83D20 		ldrb	r2, [r3, #61]	@ zero_extendqisi2
 2413 0016 D2B2     		uxtb	r2, r2
 2414 0018 122A     		cmp	r2, #18
 2415 001a 0FD1     		bne	.L186
2094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2416              		.loc 1 2094 0
 2417 001c 1968     		ldr	r1, [r3]
 2418 001e 4A69     		ldr	r2, [r1, #20]
 2419 0020 22F08002 		bic	r2, r2, #128
ARM GAS  /tmp/cctb5cV2.s 			page 98


 2420 0024 4A61     		str	r2, [r1, #20]
2097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 2421              		.loc 1 2097 0
 2422 0026 1A68     		ldr	r2, [r3]
 2423 0028 D368     		ldr	r3, [r2, #12]
 2424              	.LVL248:
 2425 002a 43F04003 		orr	r3, r3, #64
 2426 002e D360     		str	r3, [r2, #12]
 2427 0030 08BD     		pop	{r3, pc}
 2428              	.LVL249:
 2429              	.L187:
2103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 2430              		.loc 1 2103 0
 2431 0032 93F83D20 		ldrb	r2, [r3, #61]	@ zero_extendqisi2
 2432 0036 D2B2     		uxtb	r2, r2
 2433 0038 122A     		cmp	r2, #18
 2434 003a 00D0     		beq	.L190
 2435              	.LVL250:
 2436              	.L186:
 2437 003c 08BD     		pop	{r3, pc}
 2438              	.LVL251:
 2439              	.L190:
2110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 2440              		.loc 1 2110 0
 2441 003e 1846     		mov	r0, r3
 2442              	.LVL252:
 2443 0040 FFF7FEFF 		bl	HAL_USART_TxCpltCallback
 2444              	.LVL253:
2114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2445              		.loc 1 2114 0
 2446 0044 FAE7     		b	.L186
 2447              		.cfi_endproc
 2448              	.LFE93:
 2450              		.section	.text.USART_EndTransmit_IT,"ax",%progbits
 2451              		.align	1
 2452              		.syntax unified
 2453              		.thumb
 2454              		.thumb_func
 2455              		.fpu softvfp
 2457              	USART_EndTransmit_IT:
 2458              	.LFB105:
2502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Disable the USART Transmit Complete Interrupt */
 2459              		.loc 1 2502 0
 2460              		.cfi_startproc
 2461              		@ args = 0, pretend = 0, frame = 0
 2462              		@ frame_needed = 0, uses_anonymous_args = 0
 2463              	.LVL254:
 2464 0000 08B5     		push	{r3, lr}
 2465              	.LCFI33:
 2466              		.cfi_def_cfa_offset 8
 2467              		.cfi_offset 3, -8
 2468              		.cfi_offset 14, -4
2504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2469              		.loc 1 2504 0
 2470 0002 0168     		ldr	r1, [r0]
 2471 0004 CA68     		ldr	r2, [r1, #12]
 2472 0006 22F04002 		bic	r2, r2, #64
ARM GAS  /tmp/cctb5cV2.s 			page 99


 2473 000a CA60     		str	r2, [r1, #12]
2507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2474              		.loc 1 2507 0
 2475 000c 0168     		ldr	r1, [r0]
 2476 000e 4A69     		ldr	r2, [r1, #20]
 2477 0010 22F00102 		bic	r2, r2, #1
 2478 0014 4A61     		str	r2, [r1, #20]
2509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2479              		.loc 1 2509 0
 2480 0016 0122     		movs	r2, #1
 2481 0018 80F83D20 		strb	r2, [r0, #61]
2516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 2482              		.loc 1 2516 0
 2483 001c FFF7FEFF 		bl	HAL_USART_TxCpltCallback
 2484              	.LVL255:
2520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2485              		.loc 1 2520 0
 2486 0020 0020     		movs	r0, #0
 2487 0022 08BD     		pop	{r3, pc}
 2488              		.cfi_endproc
 2489              	.LFE105:
 2491              		.section	.text.HAL_USART_TxHalfCpltCallback,"ax",%progbits
 2492              		.align	1
 2493              		.weak	HAL_USART_TxHalfCpltCallback
 2494              		.syntax unified
 2495              		.thumb
 2496              		.thumb_func
 2497              		.fpu softvfp
 2499              	HAL_USART_TxHalfCpltCallback:
 2500              	.LFB85:
1922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
 2501              		.loc 1 1922 0
 2502              		.cfi_startproc
 2503              		@ args = 0, pretend = 0, frame = 0
 2504              		@ frame_needed = 0, uses_anonymous_args = 0
 2505              		@ link register save eliminated.
 2506              	.LVL256:
 2507 0000 7047     		bx	lr
 2508              		.cfi_endproc
 2509              	.LFE85:
 2511              		.section	.text.USART_DMATxHalfCplt,"ax",%progbits
 2512              		.align	1
 2513              		.syntax unified
 2514              		.thumb
 2515              		.thumb_func
 2516              		.fpu softvfp
 2518              	USART_DMATxHalfCplt:
 2519              	.LFB94:
2123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   USART_HandleTypeDef *husart = (USART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2520              		.loc 1 2123 0
 2521              		.cfi_startproc
 2522              		@ args = 0, pretend = 0, frame = 0
 2523              		@ frame_needed = 0, uses_anonymous_args = 0
 2524              	.LVL257:
2123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   USART_HandleTypeDef *husart = (USART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2525              		.loc 1 2123 0
 2526 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/cctb5cV2.s 			page 100


 2527              	.LCFI34:
 2528              		.cfi_def_cfa_offset 8
 2529              		.cfi_offset 3, -8
 2530              		.cfi_offset 14, -4
 2531              	.LVL258:
2131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 2532              		.loc 1 2131 0
 2533 0002 406A     		ldr	r0, [r0, #36]
 2534              	.LVL259:
 2535 0004 FFF7FEFF 		bl	HAL_USART_TxHalfCpltCallback
 2536              	.LVL260:
 2537 0008 08BD     		pop	{r3, pc}
 2538              		.cfi_endproc
 2539              	.LFE94:
 2541              		.section	.text.HAL_USART_RxCpltCallback,"ax",%progbits
 2542              		.align	1
 2543              		.weak	HAL_USART_RxCpltCallback
 2544              		.syntax unified
 2545              		.thumb
 2546              		.thumb_func
 2547              		.fpu softvfp
 2549              	HAL_USART_RxCpltCallback:
 2550              	.LFB86:
1937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
 2551              		.loc 1 1937 0
 2552              		.cfi_startproc
 2553              		@ args = 0, pretend = 0, frame = 0
 2554              		@ frame_needed = 0, uses_anonymous_args = 0
 2555              		@ link register save eliminated.
 2556              	.LVL261:
 2557 0000 7047     		bx	lr
 2558              		.cfi_endproc
 2559              	.LFE86:
 2561              		.section	.text.USART_Receive_IT,"ax",%progbits
 2562              		.align	1
 2563              		.syntax unified
 2564              		.thumb
 2565              		.thumb_func
 2566              		.fpu softvfp
 2568              	USART_Receive_IT:
 2569              	.LFB106:
2529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint16_t *tmp;
 2570              		.loc 1 2529 0
 2571              		.cfi_startproc
 2572              		@ args = 0, pretend = 0, frame = 0
 2573              		@ frame_needed = 0, uses_anonymous_args = 0
 2574              	.LVL262:
2529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint16_t *tmp;
 2575              		.loc 1 2529 0
 2576 0000 08B5     		push	{r3, lr}
 2577              	.LCFI35:
 2578              		.cfi_def_cfa_offset 8
 2579              		.cfi_offset 3, -8
 2580              		.cfi_offset 14, -4
2531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 2581              		.loc 1 2531 0
 2582 0002 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
ARM GAS  /tmp/cctb5cV2.s 			page 101


 2583 0006 DBB2     		uxtb	r3, r3
 2584 0008 222B     		cmp	r3, #34
 2585 000a 01D0     		beq	.L208
2596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 2586              		.loc 1 2596 0
 2587 000c 0220     		movs	r0, #2
 2588              	.LVL263:
 2589 000e 08BD     		pop	{r3, pc}
 2590              	.LVL264:
 2591              	.L208:
2533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 2592              		.loc 1 2533 0
 2593 0010 8368     		ldr	r3, [r0, #8]
 2594 0012 B3F5805F 		cmp	r3, #4096
 2595 0016 17D0     		beq	.L209
2554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
 2596              		.loc 1 2554 0
 2597 0018 0369     		ldr	r3, [r0, #16]
 2598 001a 002B     		cmp	r3, #0
 2599 001c 33D1     		bne	.L203
2556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
 2600              		.loc 1 2556 0
 2601 001e C36A     		ldr	r3, [r0, #44]
 2602 0020 5A1C     		adds	r2, r3, #1
 2603 0022 C262     		str	r2, [r0, #44]
 2604 0024 0268     		ldr	r2, [r0]
 2605 0026 5268     		ldr	r2, [r2, #4]
 2606 0028 1A70     		strb	r2, [r3]
 2607              	.L204:
2563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
 2608              		.loc 1 2563 0
 2609 002a 438E     		ldrh	r3, [r0, #50]
 2610 002c 9BB2     		uxth	r3, r3
 2611 002e 013B     		subs	r3, r3, #1
 2612 0030 9BB2     		uxth	r3, r3
 2613 0032 4386     		strh	r3, [r0, #50]	@ movhi
 2614 0034 13B1     		cbz	r3, .L202
2566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
 2615              		.loc 1 2566 0
 2616 0036 0368     		ldr	r3, [r0]
 2617 0038 FF22     		movs	r2, #255
 2618 003a 5A60     		str	r2, [r3, #4]
 2619              	.L202:
2570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 2620              		.loc 1 2570 0
 2621 003c 438E     		ldrh	r3, [r0, #50]
 2622 003e 9BB2     		uxth	r3, r3
 2623 0040 002B     		cmp	r3, #0
 2624 0042 29D0     		beq	.L210
2592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 2625              		.loc 1 2592 0
 2626 0044 0020     		movs	r0, #0
 2627              	.LVL265:
2598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2628              		.loc 1 2598 0
 2629 0046 08BD     		pop	{r3, pc}
 2630              	.LVL266:
ARM GAS  /tmp/cctb5cV2.s 			page 102


 2631              	.L209:
2535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       if (husart->Init.Parity == USART_PARITY_NONE)
 2632              		.loc 1 2535 0
 2633 0048 C26A     		ldr	r2, [r0, #44]
 2634              	.LVL267:
2536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
 2635              		.loc 1 2536 0
 2636 004a 0369     		ldr	r3, [r0, #16]
 2637 004c 9BB9     		cbnz	r3, .L200
2538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->pRxBuffPtr += 2U;
 2638              		.loc 1 2538 0
 2639 004e 0368     		ldr	r3, [r0]
 2640 0050 5B68     		ldr	r3, [r3, #4]
 2641 0052 C3F30803 		ubfx	r3, r3, #0, #9
 2642 0056 1380     		strh	r3, [r2]	@ movhi
2539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
 2643              		.loc 1 2539 0
 2644 0058 C36A     		ldr	r3, [r0, #44]
 2645 005a 0233     		adds	r3, r3, #2
 2646 005c C362     		str	r3, [r0, #44]
 2647              	.L201:
2546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
 2648              		.loc 1 2546 0
 2649 005e 438E     		ldrh	r3, [r0, #50]
 2650 0060 9BB2     		uxth	r3, r3
 2651 0062 013B     		subs	r3, r3, #1
 2652 0064 9BB2     		uxth	r3, r3
 2653 0066 4386     		strh	r3, [r0, #50]	@ movhi
 2654 0068 002B     		cmp	r3, #0
 2655 006a E7D0     		beq	.L202
2549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
 2656              		.loc 1 2549 0
 2657 006c 0368     		ldr	r3, [r0]
 2658 006e 40F2FF12 		movw	r2, #511
 2659              	.LVL268:
 2660 0072 5A60     		str	r2, [r3, #4]
 2661 0074 E2E7     		b	.L202
 2662              	.LVL269:
 2663              	.L200:
2543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         husart->pRxBuffPtr += 1U;
 2664              		.loc 1 2543 0
 2665 0076 0368     		ldr	r3, [r0]
 2666 0078 5B68     		ldr	r3, [r3, #4]
 2667 007a DBB2     		uxtb	r3, r3
 2668 007c 1380     		strh	r3, [r2]	@ movhi
2544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
 2669              		.loc 1 2544 0
 2670 007e C36A     		ldr	r3, [r0, #44]
 2671 0080 0133     		adds	r3, r3, #1
 2672 0082 C362     		str	r3, [r0, #44]
 2673 0084 EBE7     		b	.L201
 2674              	.LVL270:
 2675              	.L203:
2560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
 2676              		.loc 1 2560 0
 2677 0086 C26A     		ldr	r2, [r0, #44]
 2678 0088 531C     		adds	r3, r2, #1
ARM GAS  /tmp/cctb5cV2.s 			page 103


 2679 008a C362     		str	r3, [r0, #44]
 2680 008c 0368     		ldr	r3, [r0]
 2681 008e 5B68     		ldr	r3, [r3, #4]
 2682 0090 03F07F03 		and	r3, r3, #127
 2683 0094 1370     		strb	r3, [r2]
 2684 0096 C8E7     		b	.L204
 2685              	.L210:
2573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2686              		.loc 1 2573 0
 2687 0098 0268     		ldr	r2, [r0]
 2688 009a D368     		ldr	r3, [r2, #12]
 2689 009c 23F02003 		bic	r3, r3, #32
 2690 00a0 D360     		str	r3, [r2, #12]
2576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2691              		.loc 1 2576 0
 2692 00a2 0268     		ldr	r2, [r0]
 2693 00a4 D368     		ldr	r3, [r2, #12]
 2694 00a6 23F48073 		bic	r3, r3, #256
 2695 00aa D360     		str	r3, [r2, #12]
2579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2696              		.loc 1 2579 0
 2697 00ac 0268     		ldr	r2, [r0]
 2698 00ae 5369     		ldr	r3, [r2, #20]
 2699 00b0 23F00103 		bic	r3, r3, #1
 2700 00b4 5361     		str	r3, [r2, #20]
2581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
 2701              		.loc 1 2581 0
 2702 00b6 0123     		movs	r3, #1
 2703 00b8 80F83D30 		strb	r3, [r0, #61]
2587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 2704              		.loc 1 2587 0
 2705 00bc FFF7FEFF 		bl	HAL_USART_RxCpltCallback
 2706              	.LVL271:
2590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 2707              		.loc 1 2590 0
 2708 00c0 0020     		movs	r0, #0
 2709 00c2 08BD     		pop	{r3, pc}
 2710              		.cfi_endproc
 2711              	.LFE106:
 2713              		.section	.text.HAL_USART_RxHalfCpltCallback,"ax",%progbits
 2714              		.align	1
 2715              		.weak	HAL_USART_RxHalfCpltCallback
 2716              		.syntax unified
 2717              		.thumb
 2718              		.thumb_func
 2719              		.fpu softvfp
 2721              	HAL_USART_RxHalfCpltCallback:
 2722              	.LFB87:
1952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
 2723              		.loc 1 1952 0
 2724              		.cfi_startproc
 2725              		@ args = 0, pretend = 0, frame = 0
 2726              		@ frame_needed = 0, uses_anonymous_args = 0
 2727              		@ link register save eliminated.
 2728              	.LVL272:
 2729 0000 7047     		bx	lr
 2730              		.cfi_endproc
ARM GAS  /tmp/cctb5cV2.s 			page 104


 2731              	.LFE87:
 2733              		.section	.text.USART_DMARxHalfCplt,"ax",%progbits
 2734              		.align	1
 2735              		.syntax unified
 2736              		.thumb
 2737              		.thumb_func
 2738              		.fpu softvfp
 2740              	USART_DMARxHalfCplt:
 2741              	.LFB96:
2217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   USART_HandleTypeDef *husart = (USART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2742              		.loc 1 2217 0
 2743              		.cfi_startproc
 2744              		@ args = 0, pretend = 0, frame = 0
 2745              		@ frame_needed = 0, uses_anonymous_args = 0
 2746              	.LVL273:
2217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   USART_HandleTypeDef *husart = (USART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2747              		.loc 1 2217 0
 2748 0000 08B5     		push	{r3, lr}
 2749              	.LCFI36:
 2750              		.cfi_def_cfa_offset 8
 2751              		.cfi_offset 3, -8
 2752              		.cfi_offset 14, -4
 2753              	.LVL274:
2225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 2754              		.loc 1 2225 0
 2755 0002 406A     		ldr	r0, [r0, #36]
 2756              	.LVL275:
 2757 0004 FFF7FEFF 		bl	HAL_USART_RxHalfCpltCallback
 2758              	.LVL276:
 2759 0008 08BD     		pop	{r3, pc}
 2760              		.cfi_endproc
 2761              	.LFE96:
 2763              		.section	.text.HAL_USART_TxRxCpltCallback,"ax",%progbits
 2764              		.align	1
 2765              		.weak	HAL_USART_TxRxCpltCallback
 2766              		.syntax unified
 2767              		.thumb
 2768              		.thumb_func
 2769              		.fpu softvfp
 2771              	HAL_USART_TxRxCpltCallback:
 2772              	.LFB88:
1967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
 2773              		.loc 1 1967 0
 2774              		.cfi_startproc
 2775              		@ args = 0, pretend = 0, frame = 0
 2776              		@ frame_needed = 0, uses_anonymous_args = 0
 2777              		@ link register save eliminated.
 2778              	.LVL277:
 2779 0000 7047     		bx	lr
 2780              		.cfi_endproc
 2781              	.LFE88:
 2783              		.section	.text.USART_DMAReceiveCplt,"ax",%progbits
 2784              		.align	1
 2785              		.syntax unified
 2786              		.thumb
 2787              		.thumb_func
 2788              		.fpu softvfp
ARM GAS  /tmp/cctb5cV2.s 			page 105


 2790              	USART_DMAReceiveCplt:
 2791              	.LFB95:
2142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   USART_HandleTypeDef *husart = (USART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2792              		.loc 1 2142 0
 2793              		.cfi_startproc
 2794              		@ args = 0, pretend = 0, frame = 0
 2795              		@ frame_needed = 0, uses_anonymous_args = 0
 2796              	.LVL278:
2142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   USART_HandleTypeDef *husart = (USART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2797              		.loc 1 2142 0
 2798 0000 08B5     		push	{r3, lr}
 2799              	.LCFI37:
 2800              		.cfi_def_cfa_offset 8
 2801              		.cfi_offset 3, -8
 2802              		.cfi_offset 14, -4
2143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* DMA Normal mode */
 2803              		.loc 1 2143 0
 2804 0002 436A     		ldr	r3, [r0, #36]
 2805              	.LVL279:
2145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 2806              		.loc 1 2145 0
 2807 0004 0268     		ldr	r2, [r0]
 2808 0006 1268     		ldr	r2, [r2]
 2809 0008 12F0200F 		tst	r2, #32
 2810 000c 25D1     		bne	.L216
2147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2811              		.loc 1 2147 0
 2812 000e 0022     		movs	r2, #0
 2813 0010 5A86     		strh	r2, [r3, #50]	@ movhi
2150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_EIE);
 2814              		.loc 1 2150 0
 2815 0012 1968     		ldr	r1, [r3]
 2816 0014 CA68     		ldr	r2, [r1, #12]
 2817 0016 22F48072 		bic	r2, r2, #256
 2818 001a CA60     		str	r2, [r1, #12]
2151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2819              		.loc 1 2151 0
 2820 001c 1968     		ldr	r1, [r3]
 2821 001e 4A69     		ldr	r2, [r1, #20]
 2822 0020 22F00102 		bic	r2, r2, #1
 2823 0024 4A61     		str	r2, [r1, #20]
2155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAT);
 2824              		.loc 1 2155 0
 2825 0026 1968     		ldr	r1, [r3]
 2826 0028 4A69     		ldr	r2, [r1, #20]
 2827 002a 22F04002 		bic	r2, r2, #64
 2828 002e 4A61     		str	r2, [r1, #20]
2156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2829              		.loc 1 2156 0
 2830 0030 1968     		ldr	r1, [r3]
 2831 0032 4A69     		ldr	r2, [r1, #20]
 2832 0034 22F08002 		bic	r2, r2, #128
 2833 0038 4A61     		str	r2, [r1, #20]
2158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2834              		.loc 1 2158 0
 2835 003a 0122     		movs	r2, #1
 2836 003c 83F83D20 		strb	r2, [r3, #61]
ARM GAS  /tmp/cctb5cV2.s 			page 106


2161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 2837              		.loc 1 2161 0
 2838 0040 93F83D20 		ldrb	r2, [r3, #61]	@ zero_extendqisi2
 2839 0044 D2B2     		uxtb	r2, r2
 2840 0046 222A     		cmp	r2, #34
 2841 0048 03D0     		beq	.L221
2179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 2842              		.loc 1 2179 0
 2843 004a 1846     		mov	r0, r3
 2844              	.LVL280:
 2845 004c FFF7FEFF 		bl	HAL_USART_TxRxCpltCallback
 2846              	.LVL281:
 2847 0050 08BD     		pop	{r3, pc}
 2848              	.LVL282:
 2849              	.L221:
2168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 2850              		.loc 1 2168 0
 2851 0052 1846     		mov	r0, r3
 2852              	.LVL283:
 2853 0054 FFF7FEFF 		bl	HAL_USART_RxCpltCallback
 2854              	.LVL284:
 2855 0058 08BD     		pop	{r3, pc}
 2856              	.LVL285:
 2857              	.L216:
2186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 2858              		.loc 1 2186 0
 2859 005a 93F83D20 		ldrb	r2, [r3, #61]	@ zero_extendqisi2
 2860 005e D2B2     		uxtb	r2, r2
 2861 0060 222A     		cmp	r2, #34
 2862 0062 03D0     		beq	.L222
2204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 2863              		.loc 1 2204 0
 2864 0064 1846     		mov	r0, r3
 2865              	.LVL286:
 2866 0066 FFF7FEFF 		bl	HAL_USART_TxRxCpltCallback
 2867              	.LVL287:
 2868 006a 08BD     		pop	{r3, pc}
 2869              	.LVL288:
 2870              	.L222:
2193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 2871              		.loc 1 2193 0
 2872 006c 1846     		mov	r0, r3
 2873              	.LVL289:
 2874 006e FFF7FEFF 		bl	HAL_USART_RxCpltCallback
 2875              	.LVL290:
 2876 0072 08BD     		pop	{r3, pc}
 2877              		.cfi_endproc
 2878              	.LFE95:
 2880              		.section	.text.USART_TransmitReceive_IT,"ax",%progbits
 2881              		.align	1
 2882              		.syntax unified
 2883              		.thumb
 2884              		.thumb_func
 2885              		.fpu softvfp
 2887              	USART_TransmitReceive_IT:
 2888              	.LFB107:
2607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint16_t *tmp;
ARM GAS  /tmp/cctb5cV2.s 			page 107


 2889              		.loc 1 2607 0
 2890              		.cfi_startproc
 2891              		@ args = 0, pretend = 0, frame = 0
 2892              		@ frame_needed = 0, uses_anonymous_args = 0
 2893              	.LVL291:
 2894 0000 08B5     		push	{r3, lr}
 2895              	.LCFI38:
 2896              		.cfi_def_cfa_offset 8
 2897              		.cfi_offset 3, -8
 2898              		.cfi_offset 14, -4
2610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 2899              		.loc 1 2610 0
 2900 0002 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 2901 0006 DBB2     		uxtb	r3, r3
 2902 0008 322B     		cmp	r3, #50
 2903 000a 01D0     		beq	.L237
2705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 2904              		.loc 1 2705 0
 2905 000c 0220     		movs	r0, #2
 2906              	.LVL292:
 2907 000e 08BD     		pop	{r3, pc}
 2908              	.LVL293:
 2909              	.L237:
2612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 2910              		.loc 1 2612 0
 2911 0010 438D     		ldrh	r3, [r0, #42]
 2912 0012 9BB2     		uxth	r3, r3
 2913 0014 D3B1     		cbz	r3, .L225
2614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
 2914              		.loc 1 2614 0
 2915 0016 0368     		ldr	r3, [r0]
 2916 0018 1A68     		ldr	r2, [r3]
 2917 001a 12F0800F 		tst	r2, #128
 2918 001e 15D0     		beq	.L225
2616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 2919              		.loc 1 2616 0
 2920 0020 8268     		ldr	r2, [r0, #8]
 2921 0022 B2F5805F 		cmp	r2, #4096
 2922 0026 30D0     		beq	.L238
2631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 2923              		.loc 1 2631 0
 2924 0028 426A     		ldr	r2, [r0, #36]
 2925 002a 511C     		adds	r1, r2, #1
 2926 002c 4162     		str	r1, [r0, #36]
 2927 002e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2928 0030 5A60     		str	r2, [r3, #4]
 2929              	.L228:
2633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 2930              		.loc 1 2633 0
 2931 0032 438D     		ldrh	r3, [r0, #42]
 2932 0034 9BB2     		uxth	r3, r3
 2933 0036 013B     		subs	r3, r3, #1
 2934 0038 9BB2     		uxth	r3, r3
 2935 003a 4385     		strh	r3, [r0, #42]	@ movhi
2636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 2936              		.loc 1 2636 0
 2937 003c 438D     		ldrh	r3, [r0, #42]
ARM GAS  /tmp/cctb5cV2.s 			page 108


 2938 003e 9BB2     		uxth	r3, r3
 2939 0040 23B9     		cbnz	r3, .L225
2638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 2940              		.loc 1 2638 0
 2941 0042 0268     		ldr	r2, [r0]
 2942 0044 D368     		ldr	r3, [r2, #12]
 2943 0046 23F08003 		bic	r3, r3, #128
 2944 004a D360     		str	r3, [r2, #12]
 2945              	.L225:
2643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 2946              		.loc 1 2643 0
 2947 004c 438E     		ldrh	r3, [r0, #50]
 2948 004e 9BB2     		uxth	r3, r3
 2949 0050 ABB1     		cbz	r3, .L229
2645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
 2950              		.loc 1 2645 0
 2951 0052 0368     		ldr	r3, [r0]
 2952 0054 1A68     		ldr	r2, [r3]
 2953 0056 12F0200F 		tst	r2, #32
 2954 005a 10D0     		beq	.L229
2647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 2955              		.loc 1 2647 0
 2956 005c 8268     		ldr	r2, [r0, #8]
 2957 005e B2F5805F 		cmp	r2, #4096
 2958 0062 21D0     		beq	.L239
2663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           {
 2959              		.loc 1 2663 0
 2960 0064 0269     		ldr	r2, [r0, #16]
 2961 0066 002A     		cmp	r2, #0
 2962 0068 30D1     		bne	.L233
2665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           }
 2963              		.loc 1 2665 0
 2964 006a C26A     		ldr	r2, [r0, #44]
 2965 006c 511C     		adds	r1, r2, #1
 2966 006e C162     		str	r1, [r0, #44]
 2967 0070 5B68     		ldr	r3, [r3, #4]
 2968 0072 1370     		strb	r3, [r2]
 2969              	.L232:
2672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
 2970              		.loc 1 2672 0
 2971 0074 438E     		ldrh	r3, [r0, #50]
 2972 0076 9BB2     		uxth	r3, r3
 2973 0078 013B     		subs	r3, r3, #1
 2974 007a 9BB2     		uxth	r3, r3
 2975 007c 4386     		strh	r3, [r0, #50]	@ movhi
 2976              	.L229:
2677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 2977              		.loc 1 2677 0
 2978 007e 438E     		ldrh	r3, [r0, #50]
 2979 0080 9BB2     		uxth	r3, r3
 2980 0082 002B     		cmp	r3, #0
 2981 0084 2AD0     		beq	.L240
2701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 2982              		.loc 1 2701 0
 2983 0086 0020     		movs	r0, #0
 2984              	.LVL294:
2707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
ARM GAS  /tmp/cctb5cV2.s 			page 109


 2985              		.loc 1 2707 0
 2986 0088 08BD     		pop	{r3, pc}
 2987              	.LVL295:
 2988              	.L238:
2618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           husart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 2989              		.loc 1 2618 0
 2990 008a 426A     		ldr	r2, [r0, #36]
 2991              	.LVL296:
2619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           if (husart->Init.Parity == USART_PARITY_NONE)
 2992              		.loc 1 2619 0
 2993 008c 1288     		ldrh	r2, [r2]
 2994              	.LVL297:
 2995 008e C2F30802 		ubfx	r2, r2, #0, #9
 2996 0092 5A60     		str	r2, [r3, #4]
 2997              	.LVL298:
2620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           {
 2998              		.loc 1 2620 0
 2999 0094 0369     		ldr	r3, [r0, #16]
 3000 0096 1BB9     		cbnz	r3, .L227
2622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           }
 3001              		.loc 1 2622 0
 3002 0098 436A     		ldr	r3, [r0, #36]
 3003 009a 0233     		adds	r3, r3, #2
 3004 009c 4362     		str	r3, [r0, #36]
 3005 009e C8E7     		b	.L228
 3006              	.L227:
2626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           }
 3007              		.loc 1 2626 0
 3008 00a0 436A     		ldr	r3, [r0, #36]
 3009 00a2 0133     		adds	r3, r3, #1
 3010 00a4 4362     		str	r3, [r0, #36]
 3011 00a6 C4E7     		b	.L228
 3012              	.L239:
2649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           if (husart->Init.Parity == USART_PARITY_NONE)
 3013              		.loc 1 2649 0
 3014 00a8 C16A     		ldr	r1, [r0, #44]
 3015              	.LVL299:
2650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           {
 3016              		.loc 1 2650 0
 3017 00aa 0269     		ldr	r2, [r0, #16]
 3018 00ac 3AB9     		cbnz	r2, .L231
2652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             husart->pRxBuffPtr += 2U;
 3019              		.loc 1 2652 0
 3020 00ae 5B68     		ldr	r3, [r3, #4]
 3021 00b0 C3F30803 		ubfx	r3, r3, #0, #9
 3022 00b4 0B80     		strh	r3, [r1]	@ movhi
2653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           }
 3023              		.loc 1 2653 0
 3024 00b6 C36A     		ldr	r3, [r0, #44]
 3025 00b8 0233     		adds	r3, r3, #2
 3026 00ba C362     		str	r3, [r0, #44]
 3027 00bc DAE7     		b	.L232
 3028              	.L231:
2657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             husart->pRxBuffPtr += 1U;
 3029              		.loc 1 2657 0
 3030 00be 5B68     		ldr	r3, [r3, #4]
 3031 00c0 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/cctb5cV2.s 			page 110


 3032 00c2 0B80     		strh	r3, [r1]	@ movhi
2658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           }
 3033              		.loc 1 2658 0
 3034 00c4 C36A     		ldr	r3, [r0, #44]
 3035 00c6 0133     		adds	r3, r3, #1
 3036 00c8 C362     		str	r3, [r0, #44]
 3037 00ca D3E7     		b	.L232
 3038              	.LVL300:
 3039              	.L233:
2669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           }
 3040              		.loc 1 2669 0
 3041 00cc C26A     		ldr	r2, [r0, #44]
 3042 00ce 511C     		adds	r1, r2, #1
 3043 00d0 C162     		str	r1, [r0, #44]
 3044 00d2 5B68     		ldr	r3, [r3, #4]
 3045 00d4 03F07F03 		and	r3, r3, #127
 3046 00d8 1370     		strb	r3, [r2]
 3047 00da CBE7     		b	.L232
 3048              	.L240:
2680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3049              		.loc 1 2680 0
 3050 00dc 0268     		ldr	r2, [r0]
 3051 00de D368     		ldr	r3, [r2, #12]
 3052 00e0 23F02003 		bic	r3, r3, #32
 3053 00e4 D360     		str	r3, [r2, #12]
2683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3054              		.loc 1 2683 0
 3055 00e6 0268     		ldr	r2, [r0]
 3056 00e8 D368     		ldr	r3, [r2, #12]
 3057 00ea 23F48073 		bic	r3, r3, #256
 3058 00ee D360     		str	r3, [r2, #12]
2686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3059              		.loc 1 2686 0
 3060 00f0 0268     		ldr	r2, [r0]
 3061 00f2 5369     		ldr	r3, [r2, #20]
 3062 00f4 23F00103 		bic	r3, r3, #1
 3063 00f8 5361     		str	r3, [r2, #20]
2688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3064              		.loc 1 2688 0
 3065 00fa 0123     		movs	r3, #1
 3066 00fc 80F83D30 		strb	r3, [r0, #61]
2695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 3067              		.loc 1 2695 0
 3068 0100 FFF7FEFF 		bl	HAL_USART_TxRxCpltCallback
 3069              	.LVL301:
2698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 3070              		.loc 1 2698 0
 3071 0104 0020     		movs	r0, #0
 3072 0106 08BD     		pop	{r3, pc}
 3073              		.cfi_endproc
 3074              	.LFE107:
 3076              		.section	.text.HAL_USART_ErrorCallback,"ax",%progbits
 3077              		.align	1
 3078              		.weak	HAL_USART_ErrorCallback
 3079              		.syntax unified
 3080              		.thumb
 3081              		.thumb_func
ARM GAS  /tmp/cctb5cV2.s 			page 111


 3082              		.fpu softvfp
 3084              	HAL_USART_ErrorCallback:
 3085              	.LFB89:
1982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
 3086              		.loc 1 1982 0
 3087              		.cfi_startproc
 3088              		@ args = 0, pretend = 0, frame = 0
 3089              		@ frame_needed = 0, uses_anonymous_args = 0
 3090              		@ link register save eliminated.
 3091              	.LVL302:
 3092 0000 7047     		bx	lr
 3093              		.cfi_endproc
 3094              	.LFE89:
 3096              		.section	.text.USART_DMAError,"ax",%progbits
 3097              		.align	1
 3098              		.syntax unified
 3099              		.thumb
 3100              		.thumb_func
 3101              		.fpu softvfp
 3103              	USART_DMAError:
 3104              	.LFB97:
2236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t dmarequest = 0x00U;
 3105              		.loc 1 2236 0
 3106              		.cfi_startproc
 3107              		@ args = 0, pretend = 0, frame = 0
 3108              		@ frame_needed = 0, uses_anonymous_args = 0
 3109              	.LVL303:
2236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t dmarequest = 0x00U;
 3110              		.loc 1 2236 0
 3111 0000 10B5     		push	{r4, lr}
 3112              	.LCFI39:
 3113              		.cfi_def_cfa_offset 8
 3114              		.cfi_offset 4, -8
 3115              		.cfi_offset 14, -4
 3116              	.LVL304:
2238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->RxXferCount = 0x00U;
 3117              		.loc 1 2238 0
 3118 0002 446A     		ldr	r4, [r0, #36]
 3119              	.LVL305:
2239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->TxXferCount = 0x00U;
 3120              		.loc 1 2239 0
 3121 0004 0023     		movs	r3, #0
 3122 0006 6386     		strh	r3, [r4, #50]	@ movhi
2240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3123              		.loc 1 2240 0
 3124 0008 6385     		strh	r3, [r4, #42]	@ movhi
2243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if ((husart->State == HAL_USART_STATE_BUSY_TX) && dmarequest)
 3125              		.loc 1 2243 0
 3126 000a 2368     		ldr	r3, [r4]
 3127 000c 5A69     		ldr	r2, [r3, #20]
 3128              	.LVL306:
2244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 3129              		.loc 1 2244 0
 3130 000e 94F83D30 		ldrb	r3, [r4, #61]	@ zero_extendqisi2
 3131 0012 DBB2     		uxtb	r3, r3
 3132 0014 122B     		cmp	r3, #18
 3133 0016 13D0     		beq	.L246
ARM GAS  /tmp/cctb5cV2.s 			page 112


 3134              	.LVL307:
 3135              	.L243:
2250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   if ((husart->State == HAL_USART_STATE_BUSY_RX) && dmarequest)
 3136              		.loc 1 2250 0
 3137 0018 2368     		ldr	r3, [r4]
 3138 001a 5A69     		ldr	r2, [r3, #20]
 3139 001c 02F04002 		and	r2, r2, #64
 3140              	.LVL308:
2251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 3141              		.loc 1 2251 0
 3142 0020 94F83D30 		ldrb	r3, [r4, #61]	@ zero_extendqisi2
 3143 0024 DBB2     		uxtb	r3, r3
 3144 0026 222B     		cmp	r3, #34
 3145 0028 12D0     		beq	.L247
 3146              	.LVL309:
 3147              	.L244:
2256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->State = HAL_USART_STATE_READY;
 3148              		.loc 1 2256 0
 3149 002a 236C     		ldr	r3, [r4, #64]
 3150 002c 43F01003 		orr	r3, r3, #16
 3151 0030 2364     		str	r3, [r4, #64]
2257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3152              		.loc 1 2257 0
 3153 0032 0123     		movs	r3, #1
 3154 0034 84F83D30 		strb	r3, [r4, #61]
2264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 3155              		.loc 1 2264 0
 3156 0038 2046     		mov	r0, r4
 3157 003a FFF7FEFF 		bl	HAL_USART_ErrorCallback
 3158              	.LVL310:
 3159 003e 10BD     		pop	{r4, pc}
 3160              	.LVL311:
 3161              	.L246:
 3162 0040 02F08002 		and	r2, r2, #128
 3163              	.LVL312:
2244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 3164              		.loc 1 2244 0 discriminator 1
 3165 0044 002A     		cmp	r2, #0
 3166 0046 E7D0     		beq	.L243
2246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 3167              		.loc 1 2246 0
 3168 0048 2046     		mov	r0, r4
 3169              	.LVL313:
 3170 004a FFF7FEFF 		bl	USART_EndTxTransfer
 3171              	.LVL314:
 3172 004e E3E7     		b	.L243
 3173              	.LVL315:
 3174              	.L247:
2251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 3175              		.loc 1 2251 0 discriminator 1
 3176 0050 002A     		cmp	r2, #0
 3177 0052 EAD0     		beq	.L244
2253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 3178              		.loc 1 2253 0
 3179 0054 2046     		mov	r0, r4
 3180 0056 FFF7FEFF 		bl	USART_EndRxTransfer
 3181              	.LVL316:
ARM GAS  /tmp/cctb5cV2.s 			page 113


 3182 005a E6E7     		b	.L244
 3183              		.cfi_endproc
 3184              	.LFE97:
 3186              		.section	.text.HAL_USART_IRQHandler,"ax",%progbits
 3187              		.align	1
 3188              		.global	HAL_USART_IRQHandler
 3189              		.syntax unified
 3190              		.thumb
 3191              		.thumb_func
 3192              		.fpu softvfp
 3194              	HAL_USART_IRQHandler:
 3195              	.LFB83:
1745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t isrflags = READ_REG(husart->Instance->SR);
 3196              		.loc 1 1745 0
 3197              		.cfi_startproc
 3198              		@ args = 0, pretend = 0, frame = 0
 3199              		@ frame_needed = 0, uses_anonymous_args = 0
 3200              	.LVL317:
 3201 0000 10B5     		push	{r4, lr}
 3202              	.LCFI40:
 3203              		.cfi_def_cfa_offset 8
 3204              		.cfi_offset 4, -8
 3205              		.cfi_offset 14, -4
 3206 0002 0446     		mov	r4, r0
1746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t cr1its   = READ_REG(husart->Instance->CR1);
 3207              		.loc 1 1746 0
 3208 0004 0268     		ldr	r2, [r0]
 3209 0006 1368     		ldr	r3, [r2]
 3210              	.LVL318:
1747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t cr3its   = READ_REG(husart->Instance->CR3);
 3211              		.loc 1 1747 0
 3212 0008 D168     		ldr	r1, [r2, #12]
 3213              	.LVL319:
1748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t errorflags = 0x00U;
 3214              		.loc 1 1748 0
 3215 000a 5269     		ldr	r2, [r2, #20]
 3216              	.LVL320:
1754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 3217              		.loc 1 1754 0
 3218 000c 13F00F00 		ands	r0, r3, #15
 3219              	.LVL321:
 3220 0010 12D1     		bne	.L249
1757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 3221              		.loc 1 1757 0
 3222 0012 13F0200F 		tst	r3, #32
 3223 0016 0FD0     		beq	.L249
1757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 3224              		.loc 1 1757 0 is_stmt 0 discriminator 1
 3225 0018 11F0200F 		tst	r1, #32
 3226 001c 0CD0     		beq	.L249
1759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
 3227              		.loc 1 1759 0 is_stmt 1
 3228 001e 94F83D30 		ldrb	r3, [r4, #61]	@ zero_extendqisi2
 3229              	.LVL322:
 3230 0022 DBB2     		uxtb	r3, r3
 3231 0024 222B     		cmp	r3, #34
 3232 0026 03D0     		beq	.L267
ARM GAS  /tmp/cctb5cV2.s 			page 114


1765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
 3233              		.loc 1 1765 0
 3234 0028 2046     		mov	r0, r4
 3235              	.LVL323:
 3236 002a FFF7FEFF 		bl	USART_TransmitReceive_IT
 3237              	.LVL324:
 3238 002e 10BD     		pop	{r4, pc}
 3239              	.LVL325:
 3240              	.L267:
1761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
 3241              		.loc 1 1761 0
 3242 0030 2046     		mov	r0, r4
 3243              	.LVL326:
 3244 0032 FFF7FEFF 		bl	USART_Receive_IT
 3245              	.LVL327:
 3246 0036 10BD     		pop	{r4, pc}
 3247              	.LVL328:
 3248              	.L249:
1771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 3249              		.loc 1 1771 0
 3250 0038 0028     		cmp	r0, #0
 3251 003a 6BD0     		beq	.L252
1771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 3252              		.loc 1 1771 0 is_stmt 0 discriminator 1
 3253 003c 12F00102 		ands	r2, r2, #1
 3254              	.LVL329:
 3255 0040 02D1     		bne	.L253
1771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 3256              		.loc 1 1771 0 discriminator 2
 3257 0042 11F4907F 		tst	r1, #288
 3258 0046 65D0     		beq	.L252
 3259              	.L253:
1774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 3260              		.loc 1 1774 0 is_stmt 1
 3261 0048 13F0010F 		tst	r3, #1
 3262 004c 06D0     		beq	.L254
1774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 3263              		.loc 1 1774 0 is_stmt 0 discriminator 1
 3264 004e 11F4807F 		tst	r1, #256
 3265 0052 03D0     		beq	.L254
1776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 3266              		.loc 1 1776 0 is_stmt 1
 3267 0054 206C     		ldr	r0, [r4, #64]
 3268              	.LVL330:
 3269 0056 40F00100 		orr	r0, r0, #1
 3270 005a 2064     		str	r0, [r4, #64]
 3271              	.L254:
1780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 3272              		.loc 1 1780 0
 3273 005c 13F0040F 		tst	r3, #4
 3274 0060 04D0     		beq	.L255
1780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 3275              		.loc 1 1780 0 is_stmt 0 discriminator 1
 3276 0062 1AB1     		cbz	r2, .L255
1782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 3277              		.loc 1 1782 0 is_stmt 1
 3278 0064 206C     		ldr	r0, [r4, #64]
ARM GAS  /tmp/cctb5cV2.s 			page 115


 3279 0066 40F00200 		orr	r0, r0, #2
 3280 006a 2064     		str	r0, [r4, #64]
 3281              	.L255:
1786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 3282              		.loc 1 1786 0
 3283 006c 13F0020F 		tst	r3, #2
 3284 0070 04D0     		beq	.L256
1786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 3285              		.loc 1 1786 0 is_stmt 0 discriminator 1
 3286 0072 1AB1     		cbz	r2, .L256
1788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 3287              		.loc 1 1788 0 is_stmt 1
 3288 0074 206C     		ldr	r0, [r4, #64]
 3289 0076 40F00400 		orr	r0, r0, #4
 3290 007a 2064     		str	r0, [r4, #64]
 3291              	.L256:
1792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 3292              		.loc 1 1792 0
 3293 007c 13F0080F 		tst	r3, #8
 3294 0080 04D0     		beq	.L257
1792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 3295              		.loc 1 1792 0 is_stmt 0 discriminator 1
 3296 0082 1AB1     		cbz	r2, .L257
1794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 3297              		.loc 1 1794 0 is_stmt 1
 3298 0084 226C     		ldr	r2, [r4, #64]
 3299 0086 42F00802 		orr	r2, r2, #8
 3300 008a 2264     		str	r2, [r4, #64]
 3301              	.L257:
1797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 3302              		.loc 1 1797 0
 3303 008c 226C     		ldr	r2, [r4, #64]
 3304 008e 002A     		cmp	r2, #0
 3305 0090 59D0     		beq	.L248
1800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
 3306              		.loc 1 1800 0
 3307 0092 13F0200F 		tst	r3, #32
 3308 0096 0AD0     		beq	.L258
1800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
 3309              		.loc 1 1800 0 is_stmt 0 discriminator 1
 3310 0098 11F0200F 		tst	r1, #32
 3311 009c 07D0     		beq	.L258
1802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 3312              		.loc 1 1802 0 is_stmt 1
 3313 009e 94F83D30 		ldrb	r3, [r4, #61]	@ zero_extendqisi2
 3314              	.LVL331:
 3315 00a2 DBB2     		uxtb	r3, r3
 3316 00a4 222B     		cmp	r3, #34
 3317 00a6 23D0     		beq	.L268
1808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 3318              		.loc 1 1808 0
 3319 00a8 2046     		mov	r0, r4
 3320 00aa FFF7FEFF 		bl	USART_TransmitReceive_IT
 3321              	.LVL332:
 3322              	.L258:
1813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       if (((husart->ErrorCode & HAL_USART_ERROR_ORE) != RESET) || dmarequest)
 3323              		.loc 1 1813 0
ARM GAS  /tmp/cctb5cV2.s 			page 116


 3324 00ae 2368     		ldr	r3, [r4]
 3325 00b0 5B69     		ldr	r3, [r3, #20]
 3326 00b2 03F04003 		and	r3, r3, #64
 3327              	.LVL333:
1814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
 3328              		.loc 1 1814 0
 3329 00b6 226C     		ldr	r2, [r4, #64]
 3330 00b8 12F0080F 		tst	r2, #8
 3331 00bc 00D1     		bne	.L260
1814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
 3332              		.loc 1 1814 0 is_stmt 0 discriminator 1
 3333 00be 1BB3     		cbz	r3, .L261
 3334              	.L260:
1818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3335              		.loc 1 1818 0 is_stmt 1
 3336 00c0 2046     		mov	r0, r4
 3337 00c2 FFF7FEFF 		bl	USART_EndRxTransfer
 3338              	.LVL334:
1821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         {
 3339              		.loc 1 1821 0
 3340 00c6 2368     		ldr	r3, [r4]
 3341 00c8 5A69     		ldr	r2, [r3, #20]
 3342 00ca 12F0400F 		tst	r2, #64
 3343 00ce 17D0     		beq	.L262
1823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3344              		.loc 1 1823 0
 3345 00d0 5A69     		ldr	r2, [r3, #20]
 3346 00d2 22F04002 		bic	r2, r2, #64
 3347 00d6 5A61     		str	r2, [r3, #20]
1826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****           {
 3348              		.loc 1 1826 0
 3349 00d8 A36B     		ldr	r3, [r4, #56]
 3350 00da 6BB1     		cbz	r3, .L263
1830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3351              		.loc 1 1830 0
 3352 00dc 1C4A     		ldr	r2, .L271
 3353 00de 5A63     		str	r2, [r3, #52]
1832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             {
 3354              		.loc 1 1832 0
 3355 00e0 A06B     		ldr	r0, [r4, #56]
 3356 00e2 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3357              	.LVL335:
 3358 00e6 70B3     		cbz	r0, .L248
1835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****             }
 3359              		.loc 1 1835 0
 3360 00e8 A06B     		ldr	r0, [r4, #56]
 3361 00ea 436B     		ldr	r3, [r0, #52]
 3362 00ec 9847     		blx	r3
 3363              	.LVL336:
 3364 00ee 10BD     		pop	{r4, pc}
 3365              	.LVL337:
 3366              	.L268:
1804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         }
 3367              		.loc 1 1804 0
 3368 00f0 2046     		mov	r0, r4
 3369 00f2 FFF7FEFF 		bl	USART_Receive_IT
 3370              	.LVL338:
ARM GAS  /tmp/cctb5cV2.s 			page 117


 3371 00f6 DAE7     		b	.L258
 3372              	.LVL339:
 3373              	.L263:
1846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 3374              		.loc 1 1846 0
 3375 00f8 2046     		mov	r0, r4
 3376 00fa FFF7FEFF 		bl	HAL_USART_ErrorCallback
 3377              	.LVL340:
 3378 00fe 10BD     		pop	{r4, pc}
 3379              	.LVL341:
 3380              	.L262:
1858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 3381              		.loc 1 1858 0
 3382 0100 2046     		mov	r0, r4
 3383 0102 FFF7FEFF 		bl	HAL_USART_ErrorCallback
 3384              	.LVL342:
 3385 0106 10BD     		pop	{r4, pc}
 3386              	.LVL343:
 3387              	.L261:
1870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 3388              		.loc 1 1870 0
 3389 0108 2046     		mov	r0, r4
 3390 010a FFF7FEFF 		bl	HAL_USART_ErrorCallback
 3391              	.LVL344:
1872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
 3392              		.loc 1 1872 0
 3393 010e 0023     		movs	r3, #0
 3394 0110 2364     		str	r3, [r4, #64]
 3395 0112 10BD     		pop	{r4, pc}
 3396              	.LVL345:
 3397              	.L252:
1879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 3398              		.loc 1 1879 0
 3399 0114 13F0800F 		tst	r3, #128
 3400 0118 0FD0     		beq	.L264
1879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 3401              		.loc 1 1879 0 is_stmt 0 discriminator 1
 3402 011a 11F0800F 		tst	r1, #128
 3403 011e 0CD0     		beq	.L264
1881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 3404              		.loc 1 1881 0 is_stmt 1
 3405 0120 94F83D30 		ldrb	r3, [r4, #61]	@ zero_extendqisi2
 3406              	.LVL346:
 3407 0124 DBB2     		uxtb	r3, r3
 3408 0126 122B     		cmp	r3, #18
 3409 0128 03D0     		beq	.L269
1887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 3410              		.loc 1 1887 0
 3411 012a 2046     		mov	r0, r4
 3412              	.LVL347:
 3413 012c FFF7FEFF 		bl	USART_TransmitReceive_IT
 3414              	.LVL348:
 3415 0130 10BD     		pop	{r4, pc}
 3416              	.LVL349:
 3417              	.L269:
1883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 3418              		.loc 1 1883 0
ARM GAS  /tmp/cctb5cV2.s 			page 118


 3419 0132 2046     		mov	r0, r4
 3420              	.LVL350:
 3421 0134 FFF7FEFF 		bl	USART_Transmit_IT
 3422              	.LVL351:
 3423 0138 10BD     		pop	{r4, pc}
 3424              	.LVL352:
 3425              	.L264:
1893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 3426              		.loc 1 1893 0
 3427 013a 13F0400F 		tst	r3, #64
 3428 013e 02D0     		beq	.L248
1893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 3429              		.loc 1 1893 0 is_stmt 0 discriminator 1
 3430 0140 11F0400F 		tst	r1, #64
 3431 0144 00D1     		bne	.L270
 3432              	.LVL353:
 3433              	.L248:
 3434 0146 10BD     		pop	{r4, pc}
 3435              	.LVL354:
 3436              	.L270:
1895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     return;
 3437              		.loc 1 1895 0 is_stmt 1
 3438 0148 2046     		mov	r0, r4
 3439              	.LVL355:
 3440 014a FFF7FEFF 		bl	USART_EndTransmit_IT
 3441              	.LVL356:
1896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   }
 3442              		.loc 1 1896 0
 3443 014e FAE7     		b	.L248
 3444              	.L272:
 3445              		.align	2
 3446              	.L271:
 3447 0150 00000000 		.word	USART_DMAAbortOnError
 3448              		.cfi_endproc
 3449              	.LFE83:
 3451              		.section	.text.USART_DMAAbortOnError,"ax",%progbits
 3452              		.align	1
 3453              		.syntax unified
 3454              		.thumb
 3455              		.thumb_func
 3456              		.fpu softvfp
 3458              	USART_DMAAbortOnError:
 3459              	.LFB101:
2348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   USART_HandleTypeDef *husart = (USART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3460              		.loc 1 2348 0
 3461              		.cfi_startproc
 3462              		@ args = 0, pretend = 0, frame = 0
 3463              		@ frame_needed = 0, uses_anonymous_args = 0
 3464              	.LVL357:
 3465 0000 08B5     		push	{r3, lr}
 3466              	.LCFI41:
 3467              		.cfi_def_cfa_offset 8
 3468              		.cfi_offset 3, -8
 3469              		.cfi_offset 14, -4
2349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->RxXferCount = 0x00U;
 3470              		.loc 1 2349 0
 3471 0002 406A     		ldr	r0, [r0, #36]
ARM GAS  /tmp/cctb5cV2.s 			page 119


 3472              	.LVL358:
2350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->TxXferCount = 0x00U;
 3473              		.loc 1 2350 0
 3474 0004 0023     		movs	r3, #0
 3475 0006 4386     		strh	r3, [r0, #50]	@ movhi
2351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3476              		.loc 1 2351 0
 3477 0008 4385     		strh	r3, [r0, #42]	@ movhi
2358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 3478              		.loc 1 2358 0
 3479 000a FFF7FEFF 		bl	HAL_USART_ErrorCallback
 3480              	.LVL359:
 3481 000e 08BD     		pop	{r3, pc}
 3482              		.cfi_endproc
 3483              	.LFE101:
 3485              		.section	.text.HAL_USART_AbortCpltCallback,"ax",%progbits
 3486              		.align	1
 3487              		.weak	HAL_USART_AbortCpltCallback
 3488              		.syntax unified
 3489              		.thumb
 3490              		.thumb_func
 3491              		.fpu softvfp
 3493              	HAL_USART_AbortCpltCallback:
 3494              	.LFB90:
1996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
 3495              		.loc 1 1996 0
 3496              		.cfi_startproc
 3497              		@ args = 0, pretend = 0, frame = 0
 3498              		@ frame_needed = 0, uses_anonymous_args = 0
 3499              		@ link register save eliminated.
 3500              	.LVL360:
 3501 0000 7047     		bx	lr
 3502              		.cfi_endproc
 3503              	.LFE90:
 3505              		.section	.text.HAL_USART_Abort_IT,"ax",%progbits
 3506              		.align	1
 3507              		.global	HAL_USART_Abort_IT
 3508              		.syntax unified
 3509              		.thumb
 3510              		.thumb_func
 3511              		.fpu softvfp
 3513              	HAL_USART_Abort_IT:
 3514              	.LFB82:
1626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t AbortCplt = 0x01U;
 3515              		.loc 1 1626 0
 3516              		.cfi_startproc
 3517              		@ args = 0, pretend = 0, frame = 0
 3518              		@ frame_needed = 0, uses_anonymous_args = 0
 3519              	.LVL361:
1626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   uint32_t AbortCplt = 0x01U;
 3520              		.loc 1 1626 0
 3521 0000 10B5     		push	{r4, lr}
 3522              	.LCFI42:
 3523              		.cfi_def_cfa_offset 8
 3524              		.cfi_offset 4, -8
 3525              		.cfi_offset 14, -4
 3526 0002 0446     		mov	r4, r0
ARM GAS  /tmp/cctb5cV2.s 			page 120


 3527              	.LVL362:
1630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR3, USART_CR3_EIE);
 3528              		.loc 1 1630 0
 3529 0004 0268     		ldr	r2, [r0]
 3530 0006 D368     		ldr	r3, [r2, #12]
 3531 0008 23F4F073 		bic	r3, r3, #480
 3532 000c D360     		str	r3, [r2, #12]
1631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3533              		.loc 1 1631 0
 3534 000e 0268     		ldr	r2, [r0]
 3535 0010 5369     		ldr	r3, [r2, #20]
 3536 0012 23F00103 		bic	r3, r3, #1
 3537 0016 5361     		str	r3, [r2, #20]
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 3538              		.loc 1 1636 0
 3539 0018 436B     		ldr	r3, [r0, #52]
 3540 001a 33B1     		cbz	r3, .L277
1640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 3541              		.loc 1 1640 0
 3542 001c 0268     		ldr	r2, [r0]
 3543 001e 5269     		ldr	r2, [r2, #20]
 3544 0020 12F0800F 		tst	r2, #128
 3545 0024 1DD0     		beq	.L278
1642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 3546              		.loc 1 1642 0
 3547 0026 254A     		ldr	r2, .L290
 3548 0028 5A63     		str	r2, [r3, #52]
 3549              	.L277:
1650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 3550              		.loc 1 1650 0
 3551 002a A36B     		ldr	r3, [r4, #56]
 3552 002c 33B1     		cbz	r3, .L279
1654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 3553              		.loc 1 1654 0
 3554 002e 2268     		ldr	r2, [r4]
 3555 0030 5269     		ldr	r2, [r2, #20]
 3556 0032 12F0400F 		tst	r2, #64
 3557 0036 17D0     		beq	.L280
1656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 3558              		.loc 1 1656 0
 3559 0038 214A     		ldr	r2, .L290+4
 3560 003a 5A63     		str	r2, [r3, #52]
 3561              	.L279:
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 3562              		.loc 1 1665 0
 3563 003c 2368     		ldr	r3, [r4]
 3564 003e 5A69     		ldr	r2, [r3, #20]
 3565 0040 12F0800F 		tst	r2, #128
 3566 0044 13D0     		beq	.L284
1668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3567              		.loc 1 1668 0
 3568 0046 5A69     		ldr	r2, [r3, #20]
 3569 0048 22F08002 		bic	r2, r2, #128
 3570 004c 5A61     		str	r2, [r3, #20]
1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 3571              		.loc 1 1671 0
 3572 004e 606B     		ldr	r0, [r4, #52]
ARM GAS  /tmp/cctb5cV2.s 			page 121


 3573              	.LVL363:
 3574 0050 18B3     		cbz	r0, .L285
1677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
 3575              		.loc 1 1677 0
 3576 0052 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3577              	.LVL364:
 3578 0056 10B3     		cbz	r0, .L286
1679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
 3579              		.loc 1 1679 0
 3580 0058 636B     		ldr	r3, [r4, #52]
 3581 005a 0022     		movs	r2, #0
 3582 005c 5A63     		str	r2, [r3, #52]
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3583              		.loc 1 1627 0
 3584 005e 0122     		movs	r2, #1
 3585 0060 06E0     		b	.L281
 3586              	.LVL365:
 3587              	.L278:
1646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 3588              		.loc 1 1646 0
 3589 0062 0022     		movs	r2, #0
 3590 0064 5A63     		str	r2, [r3, #52]
 3591 0066 E0E7     		b	.L277
 3592              	.L280:
1660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     }
 3593              		.loc 1 1660 0
 3594 0068 0022     		movs	r2, #0
 3595 006a 5A63     		str	r2, [r3, #52]
 3596 006c E6E7     		b	.L279
 3597              	.L284:
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3598              		.loc 1 1627 0
 3599 006e 0122     		movs	r2, #1
 3600              	.LVL366:
 3601              	.L281:
1689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 3602              		.loc 1 1689 0
 3603 0070 2368     		ldr	r3, [r4]
 3604 0072 5969     		ldr	r1, [r3, #20]
 3605 0074 11F0400F 		tst	r1, #64
 3606 0078 0CD0     		beq	.L282
1691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3607              		.loc 1 1691 0
 3608 007a 5969     		ldr	r1, [r3, #20]
 3609 007c 21F04001 		bic	r1, r1, #64
 3610 0080 5961     		str	r1, [r3, #20]
1694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 3611              		.loc 1 1694 0
 3612 0082 A06B     		ldr	r0, [r4, #56]
 3613 0084 30B1     		cbz	r0, .L282
1700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       {
 3614              		.loc 1 1700 0
 3615 0086 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3616              	.LVL367:
 3617 008a 50B1     		cbz	r0, .L287
1702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****         AbortCplt = 0x01U;
 3618              		.loc 1 1702 0
ARM GAS  /tmp/cctb5cV2.s 			page 122


 3619 008c A36B     		ldr	r3, [r4, #56]
 3620 008e 0022     		movs	r2, #0
 3621 0090 5A63     		str	r2, [r3, #52]
 3622              	.LVL368:
1703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
 3623              		.loc 1 1703 0
 3624 0092 0122     		movs	r2, #1
 3625              	.LVL369:
 3626              	.L282:
1713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 3627              		.loc 1 1713 0
 3628 0094 3AB9     		cbnz	r2, .L289
 3629              	.LVL370:
 3630              	.L283:
1736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3631              		.loc 1 1736 0
 3632 0096 0020     		movs	r0, #0
 3633 0098 10BD     		pop	{r4, pc}
 3634              	.LVL371:
 3635              	.L285:
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3636              		.loc 1 1627 0
 3637 009a 0122     		movs	r2, #1
 3638 009c E8E7     		b	.L281
 3639              	.L286:
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
 3640              		.loc 1 1683 0
 3641 009e 0022     		movs	r2, #0
 3642 00a0 E6E7     		b	.L281
 3643              	.LVL372:
 3644              	.L287:
1707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****       }
 3645              		.loc 1 1707 0
 3646 00a2 0022     		movs	r2, #0
 3647 00a4 F6E7     		b	.L282
 3648              	.LVL373:
 3649              	.L289:
1716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     husart->RxXferCount = 0x00U;
 3650              		.loc 1 1716 0
 3651 00a6 0023     		movs	r3, #0
 3652 00a8 6385     		strh	r3, [r4, #42]	@ movhi
1717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3653              		.loc 1 1717 0
 3654 00aa 6386     		strh	r3, [r4, #50]	@ movhi
1720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3655              		.loc 1 1720 0
 3656 00ac 2364     		str	r3, [r4, #64]
1723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3657              		.loc 1 1723 0
 3658 00ae 0123     		movs	r3, #1
 3659 00b0 84F83D30 		strb	r3, [r4, #61]
1731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 3660              		.loc 1 1731 0
 3661 00b4 2046     		mov	r0, r4
 3662 00b6 FFF7FEFF 		bl	HAL_USART_AbortCpltCallback
 3663              	.LVL374:
 3664 00ba ECE7     		b	.L283
ARM GAS  /tmp/cctb5cV2.s 			page 123


 3665              	.L291:
 3666              		.align	2
 3667              	.L290:
 3668 00bc 00000000 		.word	USART_DMATxAbortCallback
 3669 00c0 00000000 		.word	USART_DMARxAbortCallback
 3670              		.cfi_endproc
 3671              	.LFE82:
 3673              		.section	.text.USART_DMARxAbortCallback,"ax",%progbits
 3674              		.align	1
 3675              		.syntax unified
 3676              		.thumb
 3677              		.thumb_func
 3678              		.fpu softvfp
 3680              	USART_DMARxAbortCallback:
 3681              	.LFB103:
2414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   USART_HandleTypeDef *husart = (USART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3682              		.loc 1 2414 0
 3683              		.cfi_startproc
 3684              		@ args = 0, pretend = 0, frame = 0
 3685              		@ frame_needed = 0, uses_anonymous_args = 0
 3686              	.LVL375:
 3687 0000 08B5     		push	{r3, lr}
 3688              	.LCFI43:
 3689              		.cfi_def_cfa_offset 8
 3690              		.cfi_offset 3, -8
 3691              		.cfi_offset 14, -4
2415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3692              		.loc 1 2415 0
 3693 0002 406A     		ldr	r0, [r0, #36]
 3694              	.LVL376:
2417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3695              		.loc 1 2417 0
 3696 0004 836B     		ldr	r3, [r0, #56]
 3697 0006 0022     		movs	r2, #0
 3698 0008 5A63     		str	r2, [r3, #52]
2420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 3699              		.loc 1 2420 0
 3700 000a 436B     		ldr	r3, [r0, #52]
 3701 000c 13B1     		cbz	r3, .L293
2422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 3702              		.loc 1 2422 0
 3703 000e 5B6B     		ldr	r3, [r3, #52]
 3704 0010 03B1     		cbz	r3, .L293
 3705              	.LVL377:
 3706              	.L292:
 3707 0012 08BD     		pop	{r3, pc}
 3708              	.LVL378:
 3709              	.L293:
2429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->RxXferCount = 0x00U;
 3710              		.loc 1 2429 0
 3711 0014 0023     		movs	r3, #0
 3712 0016 4385     		strh	r3, [r0, #42]	@ movhi
2430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3713              		.loc 1 2430 0
 3714 0018 4386     		strh	r3, [r0, #50]	@ movhi
2433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3715              		.loc 1 2433 0
ARM GAS  /tmp/cctb5cV2.s 			page 124


 3716 001a 0364     		str	r3, [r0, #64]
2436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3717              		.loc 1 2436 0
 3718 001c 0123     		movs	r3, #1
 3719 001e 80F83D30 		strb	r3, [r0, #61]
2444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 3720              		.loc 1 2444 0
 3721 0022 FFF7FEFF 		bl	HAL_USART_AbortCpltCallback
 3722              	.LVL379:
 3723 0026 F4E7     		b	.L292
 3724              		.cfi_endproc
 3725              	.LFE103:
 3727              		.section	.text.USART_DMATxAbortCallback,"ax",%progbits
 3728              		.align	1
 3729              		.syntax unified
 3730              		.thumb
 3731              		.thumb_func
 3732              		.fpu softvfp
 3734              	USART_DMATxAbortCallback:
 3735              	.LFB102:
2371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   USART_HandleTypeDef *husart = (USART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3736              		.loc 1 2371 0
 3737              		.cfi_startproc
 3738              		@ args = 0, pretend = 0, frame = 0
 3739              		@ frame_needed = 0, uses_anonymous_args = 0
 3740              	.LVL380:
 3741 0000 08B5     		push	{r3, lr}
 3742              	.LCFI44:
 3743              		.cfi_def_cfa_offset 8
 3744              		.cfi_offset 3, -8
 3745              		.cfi_offset 14, -4
2372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3746              		.loc 1 2372 0
 3747 0002 406A     		ldr	r0, [r0, #36]
 3748              	.LVL381:
2374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3749              		.loc 1 2374 0
 3750 0004 436B     		ldr	r3, [r0, #52]
 3751 0006 0022     		movs	r2, #0
 3752 0008 5A63     		str	r2, [r3, #52]
2377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   {
 3753              		.loc 1 2377 0
 3754 000a 836B     		ldr	r3, [r0, #56]
 3755 000c 13B1     		cbz	r3, .L297
2379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****     {
 3756              		.loc 1 2379 0
 3757 000e 5B6B     		ldr	r3, [r3, #52]
 3758 0010 03B1     		cbz	r3, .L297
 3759              	.LVL382:
 3760              	.L296:
 3761 0012 08BD     		pop	{r3, pc}
 3762              	.LVL383:
 3763              	.L297:
2386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   husart->RxXferCount = 0x00U;
 3764              		.loc 1 2386 0
 3765 0014 0023     		movs	r3, #0
 3766 0016 4385     		strh	r3, [r0, #42]	@ movhi
ARM GAS  /tmp/cctb5cV2.s 			page 125


2387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3767              		.loc 1 2387 0
 3768 0018 4386     		strh	r3, [r0, #50]	@ movhi
2390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3769              		.loc 1 2390 0
 3770 001a 0364     		str	r3, [r0, #64]
2393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3771              		.loc 1 2393 0
 3772 001c 0123     		movs	r3, #1
 3773 001e 80F83D30 		strb	r3, [r0, #61]
2401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 3774              		.loc 1 2401 0
 3775 0022 FFF7FEFF 		bl	HAL_USART_AbortCpltCallback
 3776              	.LVL384:
 3777 0026 F4E7     		b	.L296
 3778              		.cfi_endproc
 3779              	.LFE102:
 3781              		.section	.text.HAL_USART_GetState,"ax",%progbits
 3782              		.align	1
 3783              		.global	HAL_USART_GetState
 3784              		.syntax unified
 3785              		.thumb
 3786              		.thumb_func
 3787              		.fpu softvfp
 3789              	HAL_USART_GetState:
 3790              	.LFB91:
2035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   return husart->State;
 3791              		.loc 1 2035 0
 3792              		.cfi_startproc
 3793              		@ args = 0, pretend = 0, frame = 0
 3794              		@ frame_needed = 0, uses_anonymous_args = 0
 3795              		@ link register save eliminated.
 3796              	.LVL385:
2036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
 3797              		.loc 1 2036 0
 3798 0000 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2
 3799              	.LVL386:
2037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3800              		.loc 1 2037 0
 3801 0004 7047     		bx	lr
 3802              		.cfi_endproc
 3803              	.LFE91:
 3805              		.section	.text.HAL_USART_GetError,"ax",%progbits
 3806              		.align	1
 3807              		.global	HAL_USART_GetError
 3808              		.syntax unified
 3809              		.thumb
 3810              		.thumb_func
 3811              		.fpu softvfp
 3813              	HAL_USART_GetError:
 3814              	.LFB92:
2046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c ****   return husart->ErrorCode;
 3815              		.loc 1 2046 0
 3816              		.cfi_startproc
 3817              		@ args = 0, pretend = 0, frame = 0
 3818              		@ frame_needed = 0, uses_anonymous_args = 0
 3819              		@ link register save eliminated.
ARM GAS  /tmp/cctb5cV2.s 			page 126


 3820              	.LVL387:
2047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** }
 3821              		.loc 1 2047 0
 3822 0000 006C     		ldr	r0, [r0, #64]
 3823              	.LVL388:
2048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_usart.c **** 
 3824              		.loc 1 2048 0
 3825 0002 7047     		bx	lr
 3826              		.cfi_endproc
 3827              	.LFE92:
 3829              		.text
 3830              	.Letext0:
 3831              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 3832              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 3833              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 3834              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 3835              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 3836              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 3837              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 3838              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 3839              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_usart.h"
 3840              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 3841              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
ARM GAS  /tmp/cctb5cV2.s 			page 127


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_usart.c
     /tmp/cctb5cV2.s:16     .text.USART_EndTxTransfer:0000000000000000 $t
     /tmp/cctb5cV2.s:22     .text.USART_EndTxTransfer:0000000000000000 USART_EndTxTransfer
     /tmp/cctb5cV2.s:44     .text.USART_EndRxTransfer:0000000000000000 $t
     /tmp/cctb5cV2.s:50     .text.USART_EndRxTransfer:0000000000000000 USART_EndRxTransfer
     /tmp/cctb5cV2.s:76     .text.USART_Transmit_IT:0000000000000000 $t
     /tmp/cctb5cV2.s:82     .text.USART_Transmit_IT:0000000000000000 USART_Transmit_IT
     /tmp/cctb5cV2.s:170    .text.USART_SetConfig:0000000000000000 $t
     /tmp/cctb5cV2.s:176    .text.USART_SetConfig:0000000000000000 USART_SetConfig
     /tmp/cctb5cV2.s:315    .text.USART_SetConfig:00000000000000dc $d
     /tmp/cctb5cV2.s:321    .text.USART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/cctb5cV2.s:327    .text.USART_WaitOnFlagUntilTimeout:0000000000000000 USART_WaitOnFlagUntilTimeout
     /tmp/cctb5cV2.s:410    .text.HAL_USART_MspInit:0000000000000000 $t
     /tmp/cctb5cV2.s:417    .text.HAL_USART_MspInit:0000000000000000 HAL_USART_MspInit
     /tmp/cctb5cV2.s:430    .text.HAL_USART_Init:0000000000000000 $t
     /tmp/cctb5cV2.s:437    .text.HAL_USART_Init:0000000000000000 HAL_USART_Init
     /tmp/cctb5cV2.s:510    .text.HAL_USART_MspDeInit:0000000000000000 $t
     /tmp/cctb5cV2.s:517    .text.HAL_USART_MspDeInit:0000000000000000 HAL_USART_MspDeInit
     /tmp/cctb5cV2.s:530    .text.HAL_USART_DeInit:0000000000000000 $t
     /tmp/cctb5cV2.s:537    .text.HAL_USART_DeInit:0000000000000000 HAL_USART_DeInit
     /tmp/cctb5cV2.s:587    .text.HAL_USART_Transmit:0000000000000000 $t
     /tmp/cctb5cV2.s:594    .text.HAL_USART_Transmit:0000000000000000 HAL_USART_Transmit
     /tmp/cctb5cV2.s:780    .text.HAL_USART_Receive:0000000000000000 $t
     /tmp/cctb5cV2.s:787    .text.HAL_USART_Receive:0000000000000000 HAL_USART_Receive
     /tmp/cctb5cV2.s:1012   .text.HAL_USART_TransmitReceive:0000000000000000 $t
     /tmp/cctb5cV2.s:1019   .text.HAL_USART_TransmitReceive:0000000000000000 HAL_USART_TransmitReceive
     /tmp/cctb5cV2.s:1291   .text.HAL_USART_Transmit_IT:0000000000000000 $t
     /tmp/cctb5cV2.s:1298   .text.HAL_USART_Transmit_IT:0000000000000000 HAL_USART_Transmit_IT
     /tmp/cctb5cV2.s:1373   .text.HAL_USART_Receive_IT:0000000000000000 $t
     /tmp/cctb5cV2.s:1380   .text.HAL_USART_Receive_IT:0000000000000000 HAL_USART_Receive_IT
     /tmp/cctb5cV2.s:1464   .text.HAL_USART_TransmitReceive_IT:0000000000000000 $t
     /tmp/cctb5cV2.s:1471   .text.HAL_USART_TransmitReceive_IT:0000000000000000 HAL_USART_TransmitReceive_IT
     /tmp/cctb5cV2.s:1587   .text.HAL_USART_Transmit_DMA:0000000000000000 $t
     /tmp/cctb5cV2.s:1594   .text.HAL_USART_Transmit_DMA:0000000000000000 HAL_USART_Transmit_DMA
     /tmp/cctb5cV2.s:1704   .text.HAL_USART_Transmit_DMA:0000000000000080 $d
     /tmp/cctb5cV2.s:2387   .text.USART_DMATransmitCplt:0000000000000000 USART_DMATransmitCplt
     /tmp/cctb5cV2.s:2518   .text.USART_DMATxHalfCplt:0000000000000000 USART_DMATxHalfCplt
     /tmp/cctb5cV2.s:3103   .text.USART_DMAError:0000000000000000 USART_DMAError
     /tmp/cctb5cV2.s:1711   .text.HAL_USART_Receive_DMA:0000000000000000 $t
     /tmp/cctb5cV2.s:1718   .text.HAL_USART_Receive_DMA:0000000000000000 HAL_USART_Receive_DMA
     /tmp/cctb5cV2.s:1887   .text.HAL_USART_Receive_DMA:00000000000000cc $d
     /tmp/cctb5cV2.s:2790   .text.USART_DMAReceiveCplt:0000000000000000 USART_DMAReceiveCplt
     /tmp/cctb5cV2.s:2740   .text.USART_DMARxHalfCplt:0000000000000000 USART_DMARxHalfCplt
     /tmp/cctb5cV2.s:1894   .text.HAL_USART_TransmitReceive_DMA:0000000000000000 $t
     /tmp/cctb5cV2.s:1901   .text.HAL_USART_TransmitReceive_DMA:0000000000000000 HAL_USART_TransmitReceive_DMA
     /tmp/cctb5cV2.s:2079   .text.HAL_USART_TransmitReceive_DMA:00000000000000dc $d
     /tmp/cctb5cV2.s:2088   .text.HAL_USART_DMAPause:0000000000000000 $t
     /tmp/cctb5cV2.s:2095   .text.HAL_USART_DMAPause:0000000000000000 HAL_USART_DMAPause
     /tmp/cctb5cV2.s:2133   .text.HAL_USART_DMAResume:0000000000000000 $t
     /tmp/cctb5cV2.s:2140   .text.HAL_USART_DMAResume:0000000000000000 HAL_USART_DMAResume
     /tmp/cctb5cV2.s:2178   .text.HAL_USART_DMAStop:0000000000000000 $t
     /tmp/cctb5cV2.s:2185   .text.HAL_USART_DMAStop:0000000000000000 HAL_USART_DMAStop
     /tmp/cctb5cV2.s:2274   .text.HAL_USART_Abort:0000000000000000 $t
     /tmp/cctb5cV2.s:2281   .text.HAL_USART_Abort:0000000000000000 HAL_USART_Abort
     /tmp/cctb5cV2.s:2361   .text.HAL_USART_TxCpltCallback:0000000000000000 $t
     /tmp/cctb5cV2.s:2368   .text.HAL_USART_TxCpltCallback:0000000000000000 HAL_USART_TxCpltCallback
ARM GAS  /tmp/cctb5cV2.s 			page 128


     /tmp/cctb5cV2.s:2381   .text.USART_DMATransmitCplt:0000000000000000 $t
     /tmp/cctb5cV2.s:2451   .text.USART_EndTransmit_IT:0000000000000000 $t
     /tmp/cctb5cV2.s:2457   .text.USART_EndTransmit_IT:0000000000000000 USART_EndTransmit_IT
     /tmp/cctb5cV2.s:2492   .text.HAL_USART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/cctb5cV2.s:2499   .text.HAL_USART_TxHalfCpltCallback:0000000000000000 HAL_USART_TxHalfCpltCallback
     /tmp/cctb5cV2.s:2512   .text.USART_DMATxHalfCplt:0000000000000000 $t
     /tmp/cctb5cV2.s:2542   .text.HAL_USART_RxCpltCallback:0000000000000000 $t
     /tmp/cctb5cV2.s:2549   .text.HAL_USART_RxCpltCallback:0000000000000000 HAL_USART_RxCpltCallback
     /tmp/cctb5cV2.s:2562   .text.USART_Receive_IT:0000000000000000 $t
     /tmp/cctb5cV2.s:2568   .text.USART_Receive_IT:0000000000000000 USART_Receive_IT
     /tmp/cctb5cV2.s:2714   .text.HAL_USART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/cctb5cV2.s:2721   .text.HAL_USART_RxHalfCpltCallback:0000000000000000 HAL_USART_RxHalfCpltCallback
     /tmp/cctb5cV2.s:2734   .text.USART_DMARxHalfCplt:0000000000000000 $t
     /tmp/cctb5cV2.s:2764   .text.HAL_USART_TxRxCpltCallback:0000000000000000 $t
     /tmp/cctb5cV2.s:2771   .text.HAL_USART_TxRxCpltCallback:0000000000000000 HAL_USART_TxRxCpltCallback
     /tmp/cctb5cV2.s:2784   .text.USART_DMAReceiveCplt:0000000000000000 $t
     /tmp/cctb5cV2.s:2881   .text.USART_TransmitReceive_IT:0000000000000000 $t
     /tmp/cctb5cV2.s:2887   .text.USART_TransmitReceive_IT:0000000000000000 USART_TransmitReceive_IT
     /tmp/cctb5cV2.s:3077   .text.HAL_USART_ErrorCallback:0000000000000000 $t
     /tmp/cctb5cV2.s:3084   .text.HAL_USART_ErrorCallback:0000000000000000 HAL_USART_ErrorCallback
     /tmp/cctb5cV2.s:3097   .text.USART_DMAError:0000000000000000 $t
     /tmp/cctb5cV2.s:3187   .text.HAL_USART_IRQHandler:0000000000000000 $t
     /tmp/cctb5cV2.s:3194   .text.HAL_USART_IRQHandler:0000000000000000 HAL_USART_IRQHandler
     /tmp/cctb5cV2.s:3447   .text.HAL_USART_IRQHandler:0000000000000150 $d
     /tmp/cctb5cV2.s:3458   .text.USART_DMAAbortOnError:0000000000000000 USART_DMAAbortOnError
     /tmp/cctb5cV2.s:3452   .text.USART_DMAAbortOnError:0000000000000000 $t
     /tmp/cctb5cV2.s:3486   .text.HAL_USART_AbortCpltCallback:0000000000000000 $t
     /tmp/cctb5cV2.s:3493   .text.HAL_USART_AbortCpltCallback:0000000000000000 HAL_USART_AbortCpltCallback
     /tmp/cctb5cV2.s:3506   .text.HAL_USART_Abort_IT:0000000000000000 $t
     /tmp/cctb5cV2.s:3513   .text.HAL_USART_Abort_IT:0000000000000000 HAL_USART_Abort_IT
     /tmp/cctb5cV2.s:3668   .text.HAL_USART_Abort_IT:00000000000000bc $d
     /tmp/cctb5cV2.s:3734   .text.USART_DMATxAbortCallback:0000000000000000 USART_DMATxAbortCallback
     /tmp/cctb5cV2.s:3680   .text.USART_DMARxAbortCallback:0000000000000000 USART_DMARxAbortCallback
     /tmp/cctb5cV2.s:3674   .text.USART_DMARxAbortCallback:0000000000000000 $t
     /tmp/cctb5cV2.s:3728   .text.USART_DMATxAbortCallback:0000000000000000 $t
     /tmp/cctb5cV2.s:3782   .text.HAL_USART_GetState:0000000000000000 $t
     /tmp/cctb5cV2.s:3789   .text.HAL_USART_GetState:0000000000000000 HAL_USART_GetState
     /tmp/cctb5cV2.s:3806   .text.HAL_USART_GetError:0000000000000000 $t
     /tmp/cctb5cV2.s:3813   .text.HAL_USART_GetError:0000000000000000 HAL_USART_GetError
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
