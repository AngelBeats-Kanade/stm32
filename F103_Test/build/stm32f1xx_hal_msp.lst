ARM GAS  /tmp/ccmthLTV.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_hal_msp.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_MspInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_MspInit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_MspInit:
  24              	.LFB66:
  25              		.file 1 "Src/stm32f1xx_hal_msp.c"
   1:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f1xx_hal_msp.c **** /**
   3:Src/stm32f1xx_hal_msp.c ****  ******************************************************************************
   4:Src/stm32f1xx_hal_msp.c ****  * File Name          : stm32f1xx_hal_msp.c
   5:Src/stm32f1xx_hal_msp.c ****  * Description        : This file provides code for the MSP Initialization
   6:Src/stm32f1xx_hal_msp.c ****  *                      and de-Initialization codes.
   7:Src/stm32f1xx_hal_msp.c ****  ******************************************************************************
   8:Src/stm32f1xx_hal_msp.c ****  * @attention
   9:Src/stm32f1xx_hal_msp.c ****  *
  10:Src/stm32f1xx_hal_msp.c ****  * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  11:Src/stm32f1xx_hal_msp.c ****  * All rights reserved.</center></h2>
  12:Src/stm32f1xx_hal_msp.c ****  *
  13:Src/stm32f1xx_hal_msp.c ****  * This software component is licensed by ST under BSD 3-Clause license,
  14:Src/stm32f1xx_hal_msp.c ****  * the "License"; You may not use this file except in compliance with the
  15:Src/stm32f1xx_hal_msp.c ****  * License. You may obtain a copy of the License at:
  16:Src/stm32f1xx_hal_msp.c ****  *                        opensource.org/licenses/BSD-3-Clause
  17:Src/stm32f1xx_hal_msp.c ****  *
  18:Src/stm32f1xx_hal_msp.c ****  ******************************************************************************
  19:Src/stm32f1xx_hal_msp.c ****  */
  20:Src/stm32f1xx_hal_msp.c **** /* USER CODE END Header */
  21:Src/stm32f1xx_hal_msp.c **** 
  22:Src/stm32f1xx_hal_msp.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/stm32f1xx_hal_msp.c **** #include "main.h"
  24:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN Includes */
  25:Src/stm32f1xx_hal_msp.c **** 
  26:Src/stm32f1xx_hal_msp.c **** /* USER CODE END Includes */
  27:Src/stm32f1xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_dac_ch2;
  28:Src/stm32f1xx_hal_msp.c **** 
  29:Src/stm32f1xx_hal_msp.c **** /* Private typedef -----------------------------------------------------------*/
  30:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN TD */
  31:Src/stm32f1xx_hal_msp.c **** 
  32:Src/stm32f1xx_hal_msp.c **** /* USER CODE END TD */
  33:Src/stm32f1xx_hal_msp.c **** 
ARM GAS  /tmp/ccmthLTV.s 			page 2


  34:Src/stm32f1xx_hal_msp.c **** /* Private define ------------------------------------------------------------*/
  35:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN Define */
  36:Src/stm32f1xx_hal_msp.c **** 
  37:Src/stm32f1xx_hal_msp.c **** /* USER CODE END Define */
  38:Src/stm32f1xx_hal_msp.c **** 
  39:Src/stm32f1xx_hal_msp.c **** /* Private macro -------------------------------------------------------------*/
  40:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN Macro */
  41:Src/stm32f1xx_hal_msp.c **** 
  42:Src/stm32f1xx_hal_msp.c **** /* USER CODE END Macro */
  43:Src/stm32f1xx_hal_msp.c **** 
  44:Src/stm32f1xx_hal_msp.c **** /* Private variables ---------------------------------------------------------*/
  45:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN PV */
  46:Src/stm32f1xx_hal_msp.c **** 
  47:Src/stm32f1xx_hal_msp.c **** /* USER CODE END PV */
  48:Src/stm32f1xx_hal_msp.c **** 
  49:Src/stm32f1xx_hal_msp.c **** /* Private function prototypes -----------------------------------------------*/
  50:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN PFP */
  51:Src/stm32f1xx_hal_msp.c **** 
  52:Src/stm32f1xx_hal_msp.c **** /* USER CODE END PFP */
  53:Src/stm32f1xx_hal_msp.c **** 
  54:Src/stm32f1xx_hal_msp.c **** /* External functions --------------------------------------------------------*/
  55:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN ExternalFunctions */
  56:Src/stm32f1xx_hal_msp.c **** 
  57:Src/stm32f1xx_hal_msp.c **** /* USER CODE END ExternalFunctions */
  58:Src/stm32f1xx_hal_msp.c **** 
  59:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN 0 */
  60:Src/stm32f1xx_hal_msp.c **** 
  61:Src/stm32f1xx_hal_msp.c **** /* USER CODE END 0 */
  62:Src/stm32f1xx_hal_msp.c **** /**
  63:Src/stm32f1xx_hal_msp.c ****   * Initializes the Global MSP.
  64:Src/stm32f1xx_hal_msp.c ****   */
  65:Src/stm32f1xx_hal_msp.c **** void HAL_MspInit(void)
  66:Src/stm32f1xx_hal_msp.c **** {
  26              		.loc 1 66 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 00B5     		push	{lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 4
  33              		.cfi_offset 14, -4
  34 0002 83B0     		sub	sp, sp, #12
  35              	.LCFI1:
  36              		.cfi_def_cfa_offset 16
  37              	.LBB2:
  67:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 0 */
  68:Src/stm32f1xx_hal_msp.c **** 
  69:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END MspInit 0 */
  70:Src/stm32f1xx_hal_msp.c **** 
  71:Src/stm32f1xx_hal_msp.c ****   __HAL_RCC_AFIO_CLK_ENABLE();
  38              		.loc 1 71 0
  39 0004 0F4B     		ldr	r3, .L3
  40 0006 9A69     		ldr	r2, [r3, #24]
  41 0008 42F00102 		orr	r2, r2, #1
  42 000c 9A61     		str	r2, [r3, #24]
  43 000e 9A69     		ldr	r2, [r3, #24]
  44 0010 02F00102 		and	r2, r2, #1
ARM GAS  /tmp/ccmthLTV.s 			page 3


  45 0014 0092     		str	r2, [sp]
  46 0016 009A     		ldr	r2, [sp]
  47              	.LBE2:
  48              	.LBB3:
  72:Src/stm32f1xx_hal_msp.c ****   __HAL_RCC_PWR_CLK_ENABLE();
  49              		.loc 1 72 0
  50 0018 DA69     		ldr	r2, [r3, #28]
  51 001a 42F08052 		orr	r2, r2, #268435456
  52 001e DA61     		str	r2, [r3, #28]
  53 0020 DB69     		ldr	r3, [r3, #28]
  54 0022 03F08053 		and	r3, r3, #268435456
  55 0026 0193     		str	r3, [sp, #4]
  56 0028 019B     		ldr	r3, [sp, #4]
  57              	.LBE3:
  73:Src/stm32f1xx_hal_msp.c **** 
  74:Src/stm32f1xx_hal_msp.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_1);
  58              		.loc 1 74 0
  59 002a 0620     		movs	r0, #6
  60 002c FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
  61              	.LVL0:
  62              	.LBB4:
  75:Src/stm32f1xx_hal_msp.c **** 
  76:Src/stm32f1xx_hal_msp.c ****   /* System interrupt init*/
  77:Src/stm32f1xx_hal_msp.c **** 
  78:Src/stm32f1xx_hal_msp.c ****   /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled 
  79:Src/stm32f1xx_hal_msp.c ****   */
  80:Src/stm32f1xx_hal_msp.c ****   __HAL_AFIO_REMAP_SWJ_NOJTAG();
  63              		.loc 1 80 0
  64 0030 054A     		ldr	r2, .L3+4
  65 0032 5368     		ldr	r3, [r2, #4]
  66              	.LVL1:
  67 0034 23F0E063 		bic	r3, r3, #117440512
  68              	.LVL2:
  69 0038 43F00073 		orr	r3, r3, #33554432
  70              	.LVL3:
  71 003c 5360     		str	r3, [r2, #4]
  72              	.LBE4:
  81:Src/stm32f1xx_hal_msp.c **** 
  82:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 1 */
  83:Src/stm32f1xx_hal_msp.c **** 
  84:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END MspInit 1 */
  85:Src/stm32f1xx_hal_msp.c **** }
  73              		.loc 1 85 0
  74 003e 03B0     		add	sp, sp, #12
  75              	.LCFI2:
  76              		.cfi_def_cfa_offset 4
  77              		@ sp needed
  78 0040 5DF804FB 		ldr	pc, [sp], #4
  79              	.L4:
  80              		.align	2
  81              	.L3:
  82 0044 00100240 		.word	1073876992
  83 0048 00000140 		.word	1073807360
  84              		.cfi_endproc
  85              	.LFE66:
  87              		.section	.text.HAL_DAC_MspInit,"ax",%progbits
  88              		.align	1
ARM GAS  /tmp/ccmthLTV.s 			page 4


  89              		.global	HAL_DAC_MspInit
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu softvfp
  95              	HAL_DAC_MspInit:
  96              	.LFB67:
  86:Src/stm32f1xx_hal_msp.c **** 
  87:Src/stm32f1xx_hal_msp.c **** /**
  88:Src/stm32f1xx_hal_msp.c **** * @brief DAC MSP Initialization
  89:Src/stm32f1xx_hal_msp.c **** * This function configures the hardware resources used in this example
  90:Src/stm32f1xx_hal_msp.c **** * @param hdac: DAC handle pointer
  91:Src/stm32f1xx_hal_msp.c **** * @retval None
  92:Src/stm32f1xx_hal_msp.c **** */
  93:Src/stm32f1xx_hal_msp.c **** void HAL_DAC_MspInit(DAC_HandleTypeDef* hdac)
  94:Src/stm32f1xx_hal_msp.c **** {
  97              		.loc 1 94 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 24
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              	.LVL4:
 102 0000 30B5     		push	{r4, r5, lr}
 103              	.LCFI3:
 104              		.cfi_def_cfa_offset 12
 105              		.cfi_offset 4, -12
 106              		.cfi_offset 5, -8
 107              		.cfi_offset 14, -4
 108 0002 87B0     		sub	sp, sp, #28
 109              	.LCFI4:
 110              		.cfi_def_cfa_offset 40
  95:Src/stm32f1xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 111              		.loc 1 95 0
 112 0004 0023     		movs	r3, #0
 113 0006 0293     		str	r3, [sp, #8]
 114 0008 0393     		str	r3, [sp, #12]
 115 000a 0493     		str	r3, [sp, #16]
 116 000c 0593     		str	r3, [sp, #20]
  96:Src/stm32f1xx_hal_msp.c ****   if(hdac->Instance==DAC)
 117              		.loc 1 96 0
 118 000e 0268     		ldr	r2, [r0]
 119 0010 1F4B     		ldr	r3, .L11
 120 0012 9A42     		cmp	r2, r3
 121 0014 01D0     		beq	.L9
 122              	.LVL5:
 123              	.L5:
  97:Src/stm32f1xx_hal_msp.c ****   {
  98:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN DAC_MspInit 0 */
  99:Src/stm32f1xx_hal_msp.c **** 
 100:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END DAC_MspInit 0 */
 101:Src/stm32f1xx_hal_msp.c ****     /* Peripheral clock enable */
 102:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_DAC_CLK_ENABLE();
 103:Src/stm32f1xx_hal_msp.c ****   
 104:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 105:Src/stm32f1xx_hal_msp.c ****     /**DAC GPIO Configuration    
 106:Src/stm32f1xx_hal_msp.c ****     PA5     ------> DAC_OUT2 
 107:Src/stm32f1xx_hal_msp.c ****     */
 108:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Pin = DAC_2_Pin;
ARM GAS  /tmp/ccmthLTV.s 			page 5


 109:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 110:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_Init(DAC_2_GPIO_Port, &GPIO_InitStruct);
 111:Src/stm32f1xx_hal_msp.c **** 
 112:Src/stm32f1xx_hal_msp.c ****     /* DAC DMA Init */
 113:Src/stm32f1xx_hal_msp.c ****     /* DAC_CH2 Init */
 114:Src/stm32f1xx_hal_msp.c ****     hdma_dac_ch2.Instance = DMA2_Channel4;
 115:Src/stm32f1xx_hal_msp.c ****     hdma_dac_ch2.Init.Direction = DMA_MEMORY_TO_PERIPH;
 116:Src/stm32f1xx_hal_msp.c ****     hdma_dac_ch2.Init.PeriphInc = DMA_PINC_DISABLE;
 117:Src/stm32f1xx_hal_msp.c ****     hdma_dac_ch2.Init.MemInc = DMA_MINC_ENABLE;
 118:Src/stm32f1xx_hal_msp.c ****     hdma_dac_ch2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 119:Src/stm32f1xx_hal_msp.c ****     hdma_dac_ch2.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 120:Src/stm32f1xx_hal_msp.c ****     hdma_dac_ch2.Init.Mode = DMA_CIRCULAR;
 121:Src/stm32f1xx_hal_msp.c ****     hdma_dac_ch2.Init.Priority = DMA_PRIORITY_HIGH;
 122:Src/stm32f1xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_dac_ch2) != HAL_OK)
 123:Src/stm32f1xx_hal_msp.c ****     {
 124:Src/stm32f1xx_hal_msp.c ****       Error_Handler();
 125:Src/stm32f1xx_hal_msp.c ****     }
 126:Src/stm32f1xx_hal_msp.c **** 
 127:Src/stm32f1xx_hal_msp.c ****     __HAL_LINKDMA(hdac,DMA_Handle2,hdma_dac_ch2);
 128:Src/stm32f1xx_hal_msp.c **** 
 129:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN DAC_MspInit 1 */
 130:Src/stm32f1xx_hal_msp.c **** 
 131:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END DAC_MspInit 1 */
 132:Src/stm32f1xx_hal_msp.c ****   }
 133:Src/stm32f1xx_hal_msp.c **** 
 134:Src/stm32f1xx_hal_msp.c **** }
 124              		.loc 1 134 0
 125 0016 07B0     		add	sp, sp, #28
 126              	.LCFI5:
 127              		.cfi_remember_state
 128              		.cfi_def_cfa_offset 12
 129              		@ sp needed
 130 0018 30BD     		pop	{r4, r5, pc}
 131              	.LVL6:
 132              	.L9:
 133              	.LCFI6:
 134              		.cfi_restore_state
 135 001a 0446     		mov	r4, r0
 136              	.LBB5:
 102:Src/stm32f1xx_hal_msp.c ****   
 137              		.loc 1 102 0
 138 001c 03F5CE33 		add	r3, r3, #105472
 139 0020 DA69     		ldr	r2, [r3, #28]
 140 0022 42F00052 		orr	r2, r2, #536870912
 141 0026 DA61     		str	r2, [r3, #28]
 142 0028 DA69     		ldr	r2, [r3, #28]
 143 002a 02F00052 		and	r2, r2, #536870912
 144 002e 0092     		str	r2, [sp]
 145 0030 009A     		ldr	r2, [sp]
 146              	.LBE5:
 147              	.LBB6:
 104:Src/stm32f1xx_hal_msp.c ****     /**DAC GPIO Configuration    
 148              		.loc 1 104 0
 149 0032 9A69     		ldr	r2, [r3, #24]
 150 0034 42F00402 		orr	r2, r2, #4
 151 0038 9A61     		str	r2, [r3, #24]
 152 003a 9B69     		ldr	r3, [r3, #24]
ARM GAS  /tmp/ccmthLTV.s 			page 6


 153 003c 03F00403 		and	r3, r3, #4
 154 0040 0193     		str	r3, [sp, #4]
 155 0042 019B     		ldr	r3, [sp, #4]
 156              	.LBE6:
 108:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 157              		.loc 1 108 0
 158 0044 2025     		movs	r5, #32
 159 0046 0295     		str	r5, [sp, #8]
 109:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_Init(DAC_2_GPIO_Port, &GPIO_InitStruct);
 160              		.loc 1 109 0
 161 0048 0323     		movs	r3, #3
 162 004a 0393     		str	r3, [sp, #12]
 110:Src/stm32f1xx_hal_msp.c **** 
 163              		.loc 1 110 0
 164 004c 02A9     		add	r1, sp, #8
 165 004e 1148     		ldr	r0, .L11+4
 166              	.LVL7:
 167 0050 FFF7FEFF 		bl	HAL_GPIO_Init
 168              	.LVL8:
 114:Src/stm32f1xx_hal_msp.c ****     hdma_dac_ch2.Init.Direction = DMA_MEMORY_TO_PERIPH;
 169              		.loc 1 114 0
 170 0054 1048     		ldr	r0, .L11+8
 171 0056 114B     		ldr	r3, .L11+12
 172 0058 0360     		str	r3, [r0]
 115:Src/stm32f1xx_hal_msp.c ****     hdma_dac_ch2.Init.PeriphInc = DMA_PINC_DISABLE;
 173              		.loc 1 115 0
 174 005a 1023     		movs	r3, #16
 175 005c 4360     		str	r3, [r0, #4]
 116:Src/stm32f1xx_hal_msp.c ****     hdma_dac_ch2.Init.MemInc = DMA_MINC_ENABLE;
 176              		.loc 1 116 0
 177 005e 0023     		movs	r3, #0
 178 0060 8360     		str	r3, [r0, #8]
 117:Src/stm32f1xx_hal_msp.c ****     hdma_dac_ch2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 179              		.loc 1 117 0
 180 0062 8023     		movs	r3, #128
 181 0064 C360     		str	r3, [r0, #12]
 118:Src/stm32f1xx_hal_msp.c ****     hdma_dac_ch2.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 182              		.loc 1 118 0
 183 0066 4FF48073 		mov	r3, #256
 184 006a 0361     		str	r3, [r0, #16]
 119:Src/stm32f1xx_hal_msp.c ****     hdma_dac_ch2.Init.Mode = DMA_CIRCULAR;
 185              		.loc 1 119 0
 186 006c 4FF48063 		mov	r3, #1024
 187 0070 4361     		str	r3, [r0, #20]
 120:Src/stm32f1xx_hal_msp.c ****     hdma_dac_ch2.Init.Priority = DMA_PRIORITY_HIGH;
 188              		.loc 1 120 0
 189 0072 8561     		str	r5, [r0, #24]
 121:Src/stm32f1xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_dac_ch2) != HAL_OK)
 190              		.loc 1 121 0
 191 0074 4FF40053 		mov	r3, #8192
 192 0078 C361     		str	r3, [r0, #28]
 122:Src/stm32f1xx_hal_msp.c ****     {
 193              		.loc 1 122 0
 194 007a FFF7FEFF 		bl	HAL_DMA_Init
 195              	.LVL9:
 196 007e 18B9     		cbnz	r0, .L10
 197              	.L7:
ARM GAS  /tmp/ccmthLTV.s 			page 7


 127:Src/stm32f1xx_hal_msp.c **** 
 198              		.loc 1 127 0
 199 0080 054B     		ldr	r3, .L11+8
 200 0082 E360     		str	r3, [r4, #12]
 201 0084 5C62     		str	r4, [r3, #36]
 202              		.loc 1 134 0
 203 0086 C6E7     		b	.L5
 204              	.L10:
 124:Src/stm32f1xx_hal_msp.c ****     }
 205              		.loc 1 124 0
 206 0088 FFF7FEFF 		bl	Error_Handler
 207              	.LVL10:
 208 008c F8E7     		b	.L7
 209              	.L12:
 210 008e 00BF     		.align	2
 211              	.L11:
 212 0090 00740040 		.word	1073771520
 213 0094 00080140 		.word	1073809408
 214 0098 00000000 		.word	hdma_dac_ch2
 215 009c 44040240 		.word	1073873988
 216              		.cfi_endproc
 217              	.LFE67:
 219              		.section	.text.HAL_DAC_MspDeInit,"ax",%progbits
 220              		.align	1
 221              		.global	HAL_DAC_MspDeInit
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 225              		.fpu softvfp
 227              	HAL_DAC_MspDeInit:
 228              	.LFB68:
 135:Src/stm32f1xx_hal_msp.c **** 
 136:Src/stm32f1xx_hal_msp.c **** /**
 137:Src/stm32f1xx_hal_msp.c **** * @brief DAC MSP De-Initialization
 138:Src/stm32f1xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 139:Src/stm32f1xx_hal_msp.c **** * @param hdac: DAC handle pointer
 140:Src/stm32f1xx_hal_msp.c **** * @retval None
 141:Src/stm32f1xx_hal_msp.c **** */
 142:Src/stm32f1xx_hal_msp.c **** void HAL_DAC_MspDeInit(DAC_HandleTypeDef* hdac)
 143:Src/stm32f1xx_hal_msp.c **** {
 229              		.loc 1 143 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              	.LVL11:
 144:Src/stm32f1xx_hal_msp.c ****   if(hdac->Instance==DAC)
 234              		.loc 1 144 0
 235 0000 0268     		ldr	r2, [r0]
 236 0002 094B     		ldr	r3, .L20
 237 0004 9A42     		cmp	r2, r3
 238 0006 00D0     		beq	.L19
 239 0008 7047     		bx	lr
 240              	.L19:
 143:Src/stm32f1xx_hal_msp.c ****   if(hdac->Instance==DAC)
 241              		.loc 1 143 0
 242 000a 10B5     		push	{r4, lr}
 243              	.LCFI7:
ARM GAS  /tmp/ccmthLTV.s 			page 8


 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 4, -8
 246              		.cfi_offset 14, -4
 247 000c 0446     		mov	r4, r0
 145:Src/stm32f1xx_hal_msp.c ****   {
 146:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN DAC_MspDeInit 0 */
 147:Src/stm32f1xx_hal_msp.c **** 
 148:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END DAC_MspDeInit 0 */
 149:Src/stm32f1xx_hal_msp.c ****     /* Peripheral clock disable */
 150:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_DAC_CLK_DISABLE();
 248              		.loc 1 150 0
 249 000e 074A     		ldr	r2, .L20+4
 250 0010 D369     		ldr	r3, [r2, #28]
 251 0012 23F00053 		bic	r3, r3, #536870912
 252 0016 D361     		str	r3, [r2, #28]
 151:Src/stm32f1xx_hal_msp.c ****   
 152:Src/stm32f1xx_hal_msp.c ****     /**DAC GPIO Configuration    
 153:Src/stm32f1xx_hal_msp.c ****     PA5     ------> DAC_OUT2 
 154:Src/stm32f1xx_hal_msp.c ****     */
 155:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_DeInit(DAC_2_GPIO_Port, DAC_2_Pin);
 253              		.loc 1 155 0
 254 0018 2021     		movs	r1, #32
 255 001a 0548     		ldr	r0, .L20+8
 256              	.LVL12:
 257 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 258              	.LVL13:
 156:Src/stm32f1xx_hal_msp.c **** 
 157:Src/stm32f1xx_hal_msp.c ****     /* DAC DMA DeInit */
 158:Src/stm32f1xx_hal_msp.c ****     HAL_DMA_DeInit(hdac->DMA_Handle2);
 259              		.loc 1 158 0
 260 0020 E068     		ldr	r0, [r4, #12]
 261 0022 FFF7FEFF 		bl	HAL_DMA_DeInit
 262              	.LVL14:
 263 0026 10BD     		pop	{r4, pc}
 264              	.LVL15:
 265              	.L21:
 266              		.align	2
 267              	.L20:
 268 0028 00740040 		.word	1073771520
 269 002c 00100240 		.word	1073876992
 270 0030 00080140 		.word	1073809408
 271              		.cfi_endproc
 272              	.LFE68:
 274              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 275              		.align	1
 276              		.global	HAL_TIM_Base_MspInit
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 280              		.fpu softvfp
 282              	HAL_TIM_Base_MspInit:
 283              	.LFB69:
 159:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN DAC_MspDeInit 1 */
 160:Src/stm32f1xx_hal_msp.c **** 
 161:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END DAC_MspDeInit 1 */
 162:Src/stm32f1xx_hal_msp.c ****   }
 163:Src/stm32f1xx_hal_msp.c **** 
ARM GAS  /tmp/ccmthLTV.s 			page 9


 164:Src/stm32f1xx_hal_msp.c **** }
 165:Src/stm32f1xx_hal_msp.c **** 
 166:Src/stm32f1xx_hal_msp.c **** /**
 167:Src/stm32f1xx_hal_msp.c **** * @brief TIM_Base MSP Initialization
 168:Src/stm32f1xx_hal_msp.c **** * This function configures the hardware resources used in this example
 169:Src/stm32f1xx_hal_msp.c **** * @param htim_base: TIM_Base handle pointer
 170:Src/stm32f1xx_hal_msp.c **** * @retval None
 171:Src/stm32f1xx_hal_msp.c **** */
 172:Src/stm32f1xx_hal_msp.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
 173:Src/stm32f1xx_hal_msp.c **** {
 284              		.loc 1 173 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 32
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              	.LVL16:
 289 0000 00B5     		push	{lr}
 290              	.LCFI8:
 291              		.cfi_def_cfa_offset 4
 292              		.cfi_offset 14, -4
 293 0002 89B0     		sub	sp, sp, #36
 294              	.LCFI9:
 295              		.cfi_def_cfa_offset 40
 174:Src/stm32f1xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 296              		.loc 1 174 0
 297 0004 0023     		movs	r3, #0
 298 0006 0493     		str	r3, [sp, #16]
 299 0008 0593     		str	r3, [sp, #20]
 300 000a 0693     		str	r3, [sp, #24]
 301 000c 0793     		str	r3, [sp, #28]
 175:Src/stm32f1xx_hal_msp.c ****   if(htim_base->Instance==TIM1)
 302              		.loc 1 175 0
 303 000e 0368     		ldr	r3, [r0]
 304 0010 234A     		ldr	r2, .L30
 305 0012 9342     		cmp	r3, r2
 306 0014 08D0     		beq	.L27
 176:Src/stm32f1xx_hal_msp.c ****   {
 177:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 178:Src/stm32f1xx_hal_msp.c **** 
 179:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END TIM1_MspInit 0 */
 180:Src/stm32f1xx_hal_msp.c ****     /* Peripheral clock enable */
 181:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_TIM1_CLK_ENABLE();
 182:Src/stm32f1xx_hal_msp.c ****   
 183:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 184:Src/stm32f1xx_hal_msp.c ****     /**TIM1 GPIO Configuration    
 185:Src/stm32f1xx_hal_msp.c ****     PA12     ------> TIM1_ETR 
 186:Src/stm32f1xx_hal_msp.c ****     */
 187:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_12;
 188:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 189:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 190:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 191:Src/stm32f1xx_hal_msp.c **** 
 192:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 193:Src/stm32f1xx_hal_msp.c **** 
 194:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END TIM1_MspInit 1 */
 195:Src/stm32f1xx_hal_msp.c ****   }
 196:Src/stm32f1xx_hal_msp.c ****   else if(htim_base->Instance==TIM3)
 307              		.loc 1 196 0
ARM GAS  /tmp/ccmthLTV.s 			page 10


 308 0016 234A     		ldr	r2, .L30+4
 309 0018 9342     		cmp	r3, r2
 310 001a 22D0     		beq	.L28
 197:Src/stm32f1xx_hal_msp.c ****   {
 198:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspInit 0 */
 199:Src/stm32f1xx_hal_msp.c **** 
 200:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END TIM3_MspInit 0 */
 201:Src/stm32f1xx_hal_msp.c ****     /* Peripheral clock enable */
 202:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_TIM3_CLK_ENABLE();
 203:Src/stm32f1xx_hal_msp.c ****     /* TIM3 interrupt Init */
 204:Src/stm32f1xx_hal_msp.c ****     HAL_NVIC_SetPriority(TIM3_IRQn, 1, 3);
 205:Src/stm32f1xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(TIM3_IRQn);
 206:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 207:Src/stm32f1xx_hal_msp.c **** 
 208:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END TIM3_MspInit 1 */
 209:Src/stm32f1xx_hal_msp.c ****   }
 210:Src/stm32f1xx_hal_msp.c ****   else if(htim_base->Instance==TIM6)
 311              		.loc 1 210 0
 312 001c 224A     		ldr	r2, .L30+8
 313 001e 9342     		cmp	r3, r2
 314 0020 32D0     		beq	.L29
 315              	.LVL17:
 316              	.L22:
 211:Src/stm32f1xx_hal_msp.c ****   {
 212:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN TIM6_MspInit 0 */
 213:Src/stm32f1xx_hal_msp.c **** 
 214:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END TIM6_MspInit 0 */
 215:Src/stm32f1xx_hal_msp.c ****     /* Peripheral clock enable */
 216:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_TIM6_CLK_ENABLE();
 217:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN TIM6_MspInit 1 */
 218:Src/stm32f1xx_hal_msp.c **** 
 219:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END TIM6_MspInit 1 */
 220:Src/stm32f1xx_hal_msp.c ****   }
 221:Src/stm32f1xx_hal_msp.c **** 
 222:Src/stm32f1xx_hal_msp.c **** }
 317              		.loc 1 222 0
 318 0022 09B0     		add	sp, sp, #36
 319              	.LCFI10:
 320              		.cfi_remember_state
 321              		.cfi_def_cfa_offset 4
 322              		@ sp needed
 323 0024 5DF804FB 		ldr	pc, [sp], #4
 324              	.LVL18:
 325              	.L27:
 326              	.LCFI11:
 327              		.cfi_restore_state
 328              	.LBB7:
 181:Src/stm32f1xx_hal_msp.c ****   
 329              		.loc 1 181 0
 330 0028 204B     		ldr	r3, .L30+12
 331 002a 9A69     		ldr	r2, [r3, #24]
 332 002c 42F40062 		orr	r2, r2, #2048
 333 0030 9A61     		str	r2, [r3, #24]
 334 0032 9A69     		ldr	r2, [r3, #24]
 335 0034 02F40062 		and	r2, r2, #2048
 336 0038 0092     		str	r2, [sp]
 337 003a 009A     		ldr	r2, [sp]
ARM GAS  /tmp/ccmthLTV.s 			page 11


 338              	.LBE7:
 339              	.LBB8:
 183:Src/stm32f1xx_hal_msp.c ****     /**TIM1 GPIO Configuration    
 340              		.loc 1 183 0
 341 003c 9A69     		ldr	r2, [r3, #24]
 342 003e 42F00402 		orr	r2, r2, #4
 343 0042 9A61     		str	r2, [r3, #24]
 344 0044 9B69     		ldr	r3, [r3, #24]
 345 0046 03F00403 		and	r3, r3, #4
 346 004a 0193     		str	r3, [sp, #4]
 347 004c 019B     		ldr	r3, [sp, #4]
 348              	.LBE8:
 187:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 349              		.loc 1 187 0
 350 004e 4FF48053 		mov	r3, #4096
 351 0052 0493     		str	r3, [sp, #16]
 189:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 352              		.loc 1 189 0
 353 0054 0223     		movs	r3, #2
 354 0056 0693     		str	r3, [sp, #24]
 190:Src/stm32f1xx_hal_msp.c **** 
 355              		.loc 1 190 0
 356 0058 04A9     		add	r1, sp, #16
 357 005a 1548     		ldr	r0, .L30+16
 358              	.LVL19:
 359 005c FFF7FEFF 		bl	HAL_GPIO_Init
 360              	.LVL20:
 361 0060 DFE7     		b	.L22
 362              	.LVL21:
 363              	.L28:
 364              	.LBB9:
 202:Src/stm32f1xx_hal_msp.c ****     /* TIM3 interrupt Init */
 365              		.loc 1 202 0
 366 0062 124B     		ldr	r3, .L30+12
 367 0064 DA69     		ldr	r2, [r3, #28]
 368 0066 42F00202 		orr	r2, r2, #2
 369 006a DA61     		str	r2, [r3, #28]
 370 006c DB69     		ldr	r3, [r3, #28]
 371 006e 03F00203 		and	r3, r3, #2
 372 0072 0293     		str	r3, [sp, #8]
 373 0074 029B     		ldr	r3, [sp, #8]
 374              	.LBE9:
 204:Src/stm32f1xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(TIM3_IRQn);
 375              		.loc 1 204 0
 376 0076 0322     		movs	r2, #3
 377 0078 0121     		movs	r1, #1
 378 007a 1D20     		movs	r0, #29
 379              	.LVL22:
 380 007c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 381              	.LVL23:
 205:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 382              		.loc 1 205 0
 383 0080 1D20     		movs	r0, #29
 384 0082 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 385              	.LVL24:
 386 0086 CCE7     		b	.L22
 387              	.LVL25:
ARM GAS  /tmp/ccmthLTV.s 			page 12


 388              	.L29:
 389              	.LBB10:
 216:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN TIM6_MspInit 1 */
 390              		.loc 1 216 0
 391 0088 084B     		ldr	r3, .L30+12
 392 008a DA69     		ldr	r2, [r3, #28]
 393 008c 42F01002 		orr	r2, r2, #16
 394 0090 DA61     		str	r2, [r3, #28]
 395 0092 DB69     		ldr	r3, [r3, #28]
 396 0094 03F01003 		and	r3, r3, #16
 397 0098 0393     		str	r3, [sp, #12]
 398 009a 039B     		ldr	r3, [sp, #12]
 399              	.LBE10:
 400              		.loc 1 222 0
 401 009c C1E7     		b	.L22
 402              	.L31:
 403 009e 00BF     		.align	2
 404              	.L30:
 405 00a0 002C0140 		.word	1073818624
 406 00a4 00040040 		.word	1073742848
 407 00a8 00100040 		.word	1073745920
 408 00ac 00100240 		.word	1073876992
 409 00b0 00080140 		.word	1073809408
 410              		.cfi_endproc
 411              	.LFE69:
 413              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 414              		.align	1
 415              		.global	HAL_TIM_Base_MspDeInit
 416              		.syntax unified
 417              		.thumb
 418              		.thumb_func
 419              		.fpu softvfp
 421              	HAL_TIM_Base_MspDeInit:
 422              	.LFB70:
 223:Src/stm32f1xx_hal_msp.c **** 
 224:Src/stm32f1xx_hal_msp.c **** /**
 225:Src/stm32f1xx_hal_msp.c **** * @brief TIM_Base MSP De-Initialization
 226:Src/stm32f1xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 227:Src/stm32f1xx_hal_msp.c **** * @param htim_base: TIM_Base handle pointer
 228:Src/stm32f1xx_hal_msp.c **** * @retval None
 229:Src/stm32f1xx_hal_msp.c **** */
 230:Src/stm32f1xx_hal_msp.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* htim_base)
 231:Src/stm32f1xx_hal_msp.c **** {
 423              		.loc 1 231 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              	.LVL26:
 428 0000 08B5     		push	{r3, lr}
 429              	.LCFI12:
 430              		.cfi_def_cfa_offset 8
 431              		.cfi_offset 3, -8
 432              		.cfi_offset 14, -4
 232:Src/stm32f1xx_hal_msp.c ****   if(htim_base->Instance==TIM1)
 433              		.loc 1 232 0
 434 0002 0368     		ldr	r3, [r0]
 435 0004 134A     		ldr	r2, .L40
ARM GAS  /tmp/ccmthLTV.s 			page 13


 436 0006 9342     		cmp	r3, r2
 437 0008 06D0     		beq	.L37
 233:Src/stm32f1xx_hal_msp.c ****   {
 234:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 235:Src/stm32f1xx_hal_msp.c **** 
 236:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END TIM1_MspDeInit 0 */
 237:Src/stm32f1xx_hal_msp.c ****     /* Peripheral clock disable */
 238:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_TIM1_CLK_DISABLE();
 239:Src/stm32f1xx_hal_msp.c ****   
 240:Src/stm32f1xx_hal_msp.c ****     /**TIM1 GPIO Configuration    
 241:Src/stm32f1xx_hal_msp.c ****     PA12     ------> TIM1_ETR 
 242:Src/stm32f1xx_hal_msp.c ****     */
 243:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_12);
 244:Src/stm32f1xx_hal_msp.c **** 
 245:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 246:Src/stm32f1xx_hal_msp.c **** 
 247:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END TIM1_MspDeInit 1 */
 248:Src/stm32f1xx_hal_msp.c ****   }
 249:Src/stm32f1xx_hal_msp.c ****   else if(htim_base->Instance==TIM3)
 438              		.loc 1 249 0
 439 000a 134A     		ldr	r2, .L40+4
 440 000c 9342     		cmp	r3, r2
 441 000e 0FD0     		beq	.L38
 250:Src/stm32f1xx_hal_msp.c ****   {
 251:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspDeInit 0 */
 252:Src/stm32f1xx_hal_msp.c **** 
 253:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END TIM3_MspDeInit 0 */
 254:Src/stm32f1xx_hal_msp.c ****     /* Peripheral clock disable */
 255:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_TIM3_CLK_DISABLE();
 256:Src/stm32f1xx_hal_msp.c **** 
 257:Src/stm32f1xx_hal_msp.c ****     /* TIM3 interrupt DeInit */
 258:Src/stm32f1xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(TIM3_IRQn);
 259:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 260:Src/stm32f1xx_hal_msp.c **** 
 261:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END TIM3_MspDeInit 1 */
 262:Src/stm32f1xx_hal_msp.c ****   }
 263:Src/stm32f1xx_hal_msp.c ****   else if(htim_base->Instance==TIM6)
 442              		.loc 1 263 0
 443 0010 124A     		ldr	r2, .L40+8
 444 0012 9342     		cmp	r3, r2
 445 0014 16D0     		beq	.L39
 446              	.L32:
 447 0016 08BD     		pop	{r3, pc}
 448              	.L37:
 238:Src/stm32f1xx_hal_msp.c ****   
 449              		.loc 1 238 0
 450 0018 02F56442 		add	r2, r2, #58368
 451 001c 9369     		ldr	r3, [r2, #24]
 452 001e 23F40063 		bic	r3, r3, #2048
 453 0022 9361     		str	r3, [r2, #24]
 243:Src/stm32f1xx_hal_msp.c **** 
 454              		.loc 1 243 0
 455 0024 4FF48051 		mov	r1, #4096
 456 0028 0D48     		ldr	r0, .L40+12
 457              	.LVL27:
 458 002a FFF7FEFF 		bl	HAL_GPIO_DeInit
 459              	.LVL28:
ARM GAS  /tmp/ccmthLTV.s 			page 14


 460 002e 08BD     		pop	{r3, pc}
 461              	.LVL29:
 462              	.L38:
 255:Src/stm32f1xx_hal_msp.c **** 
 463              		.loc 1 255 0
 464 0030 02F50332 		add	r2, r2, #134144
 465 0034 D369     		ldr	r3, [r2, #28]
 466 0036 23F00203 		bic	r3, r3, #2
 467 003a D361     		str	r3, [r2, #28]
 258:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 468              		.loc 1 258 0
 469 003c 1D20     		movs	r0, #29
 470              	.LVL30:
 471 003e FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 472              	.LVL31:
 473 0042 08BD     		pop	{r3, pc}
 474              	.LVL32:
 475              	.L39:
 264:Src/stm32f1xx_hal_msp.c ****   {
 265:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN TIM6_MspDeInit 0 */
 266:Src/stm32f1xx_hal_msp.c **** 
 267:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END TIM6_MspDeInit 0 */
 268:Src/stm32f1xx_hal_msp.c ****     /* Peripheral clock disable */
 269:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_TIM6_CLK_DISABLE();
 476              		.loc 1 269 0
 477 0044 02F50032 		add	r2, r2, #131072
 478 0048 D369     		ldr	r3, [r2, #28]
 479 004a 23F01003 		bic	r3, r3, #16
 480 004e D361     		str	r3, [r2, #28]
 270:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN TIM6_MspDeInit 1 */
 271:Src/stm32f1xx_hal_msp.c **** 
 272:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END TIM6_MspDeInit 1 */
 273:Src/stm32f1xx_hal_msp.c ****   }
 274:Src/stm32f1xx_hal_msp.c **** 
 275:Src/stm32f1xx_hal_msp.c **** }
 481              		.loc 1 275 0
 482 0050 E1E7     		b	.L32
 483              	.L41:
 484 0052 00BF     		.align	2
 485              	.L40:
 486 0054 002C0140 		.word	1073818624
 487 0058 00040040 		.word	1073742848
 488 005c 00100040 		.word	1073745920
 489 0060 00080140 		.word	1073809408
 490              		.cfi_endproc
 491              	.LFE70:
 493              		.text
 494              	.Letext0:
 495              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 496              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 497              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 498              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 499              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 500              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 501              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 502              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 503              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dac.h"
ARM GAS  /tmp/ccmthLTV.s 			page 15


 504              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 505              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 506              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 507              		.file 14 "/usr/include/newlib/sys/lock.h"
 508              		.file 15 "/usr/include/newlib/sys/_types.h"
 509              		.file 16 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 510              		.file 17 "/usr/include/newlib/sys/reent.h"
 511              		.file 18 "Inc/bsp_debug_usart.h"
 512              		.file 19 "Inc/fonts.h"
 513              		.file 20 "Inc/bsp_ili9341_lcd.h"
 514              		.file 21 "/usr/include/newlib/stdlib.h"
 515              		.file 22 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 516              		.file 23 "Inc/main.h"
ARM GAS  /tmp/ccmthLTV.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_msp.c
     /tmp/ccmthLTV.s:16     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccmthLTV.s:23     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccmthLTV.s:82     .text.HAL_MspInit:0000000000000044 $d
     /tmp/ccmthLTV.s:88     .text.HAL_DAC_MspInit:0000000000000000 $t
     /tmp/ccmthLTV.s:95     .text.HAL_DAC_MspInit:0000000000000000 HAL_DAC_MspInit
     /tmp/ccmthLTV.s:212    .text.HAL_DAC_MspInit:0000000000000090 $d
     /tmp/ccmthLTV.s:220    .text.HAL_DAC_MspDeInit:0000000000000000 $t
     /tmp/ccmthLTV.s:227    .text.HAL_DAC_MspDeInit:0000000000000000 HAL_DAC_MspDeInit
     /tmp/ccmthLTV.s:268    .text.HAL_DAC_MspDeInit:0000000000000028 $d
     /tmp/ccmthLTV.s:275    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccmthLTV.s:282    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccmthLTV.s:405    .text.HAL_TIM_Base_MspInit:00000000000000a0 $d
     /tmp/ccmthLTV.s:414    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccmthLTV.s:421    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccmthLTV.s:486    .text.HAL_TIM_Base_MspDeInit:0000000000000054 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriorityGrouping
HAL_GPIO_Init
HAL_DMA_Init
Error_Handler
hdma_dac_ch2
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_NVIC_DisableIRQ
