ARM GAS  /tmp/ccaKQJa2.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	MX_GPIO_Init:
  23              	.LFB73:
  24              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****  ******************************************************************************
   4:Src/main.c    ****  * @file           : main.c
   5:Src/main.c    ****  * @brief        : Main program body
   6:Src/main.c    ****  ******************************************************************************
   7:Src/main.c    ****  * @attention
   8:Src/main.c    ****  *
   9:Src/main.c    ****  * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****  * All rights reserved.</center></h2>
  11:Src/main.c    ****  *
  12:Src/main.c    ****  * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****  * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****  * License. You may obtain a copy of the License at:
  15:Src/main.c    ****  *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****  *
  17:Src/main.c    ****  ******************************************************************************
  18:Src/main.c    ****  */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/ccaKQJa2.s 			page 2


  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** /* USER CODE END PD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PM */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* USER CODE END PM */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  44:Src/main.c    **** DAC_HandleTypeDef hdac;
  45:Src/main.c    **** DMA_HandleTypeDef hdma_dac_ch2;
  46:Src/main.c    **** 
  47:Src/main.c    **** TIM_HandleTypeDef htim1;
  48:Src/main.c    **** TIM_HandleTypeDef htim3;
  49:Src/main.c    **** TIM_HandleTypeDef htim6;
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE BEGIN PV */
  52:Src/main.c    **** uint16_t CH_Value[320] = {
  53:Src/main.c    ****     2048, 2088, 2129, 2169, 2209, 2249, 2289, 2329, 2369, 2409, 2449, 2488, 2528, 2567, 2606, 2644,
  54:Src/main.c    ****     2797, 2834, 2871, 2908, 2944, 2980, 3016, 3052, 3087, 3121, 3155, 3189, 3222, 3255, 3287, 3319,
  55:Src/main.c    ****     3442, 3471, 3500, 3528, 3555, 3582, 3609, 3635, 3660, 3684, 3708, 3732, 3754, 3776, 3798, 3818,
  56:Src/main.c    ****     3894, 3911, 3927, 3943, 3958, 3972, 3986, 3998, 4010, 4021, 4032, 4041, 4050, 4058, 4066, 4072,
  57:Src/main.c    ****     4090, 4093, 4095, 4095, 4095, 4095, 4094, 4092, 4089, 4085, 4081, 4075, 4069, 4062, 4054, 4046,
  58:Src/main.c    ****     4004, 3992, 3979, 3965, 3951, 3935, 3919, 3902, 3885, 3867, 3848, 3828, 3808, 3787, 3765, 3743,
  59:Src/main.c    ****     3647, 3622, 3596, 3569, 3542, 3514, 3485, 3456, 3427, 3397, 3366, 3335, 3303, 3271, 3239, 3206,
  60:Src/main.c    ****     3069, 3034, 2998, 2962, 2926, 2890, 2853, 2815, 2778, 2740, 2702, 2664, 2625, 2586, 2547, 2508,
  61:Src/main.c    ****     2349, 2309, 2269, 2229, 2189, 2149, 2108, 2068, 2028, 1988, 1947, 1907, 1867, 1827, 1787, 1747,
  62:Src/main.c    ****     1588, 1549, 1510, 1471, 1432, 1394, 1356, 1318, 1281, 1243, 1206, 1170, 1134, 1098, 1062, 1027,
  63:Src/main.c    ****     890,  857,  825,  793,  761,  730,  699,  669,  640,  611,  582,  554,  527,  500,  474,  449, 
  64:Src/main.c    ****     353,  331,  309,  288,  268,  248,  229,  211,  194,  177,  161,  145,  131,  117,  104,  92,  
  65:Src/main.c    ****     50,   42,   34,   27,   21,   15,   11,   7,    4,    2,    1,    0,    0,    1,    3,    6,   
  66:Src/main.c    ****     24,   30,   38,   46,   55,   64,   75,   86,   98,   110,  124,  138,  153,  169,  185,  202, 
  67:Src/main.c    ****     278,  298,  320,  342,  364,  388,  412,  436,  461,  487,  514,  541,  568,  596,  625,  654, 
  68:Src/main.c    ****     777,  809,  841,  874,  907,  941,  975,  1009, 1044, 1080, 1116, 1152, 1188, 1225, 1262, 1299,
  69:Src/main.c    ****     1452, 1490, 1529, 1568, 1608, 1647, 1687, 1727, 1767, 1807, 1847, 1887, 1927, 1967, 2008, 2048}
  70:Src/main.c    **** uint32_t CNT = 0;
  71:Src/main.c    **** /* USER CODE END PV */
  72:Src/main.c    **** 
  73:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  74:Src/main.c    **** void SystemClock_Config(void);
  75:Src/main.c    **** static void MX_GPIO_Init(void);
  76:Src/main.c    **** static void MX_DMA_Init(void);
  77:Src/main.c    **** static void MX_DAC_Init(void);
  78:Src/main.c    **** static void MX_TIM3_Init(void);
  79:Src/main.c    **** static void MX_TIM6_Init(void);
  80:Src/main.c    **** static void MX_TIM1_Init(void);
  81:Src/main.c    **** /* USER CODE BEGIN PFP */
  82:Src/main.c    **** void Test(void);
  83:Src/main.c    **** /* USER CODE END PFP */
  84:Src/main.c    **** 
  85:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  86:Src/main.c    **** /* USER CODE BEGIN 0 */
  87:Src/main.c    **** 
  88:Src/main.c    **** /* USER CODE END 0 */
  89:Src/main.c    **** 
  90:Src/main.c    **** /**
  91:Src/main.c    ****   * @brief  The application entry point.
ARM GAS  /tmp/ccaKQJa2.s 			page 3


  92:Src/main.c    ****   * @retval int
  93:Src/main.c    ****   */
  94:Src/main.c    **** int main(void)
  95:Src/main.c    **** {
  96:Src/main.c    ****   /* USER CODE BEGIN 1 */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* USER CODE END 1 */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 103:Src/main.c    ****   HAL_Init();
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE BEGIN Init */
 106:Src/main.c    ****   DEBUG_USART_Config();
 107:Src/main.c    ****   ILI9341_Init();
 108:Src/main.c    ****   /* USER CODE END Init */
 109:Src/main.c    **** 
 110:Src/main.c    ****   /* Configure the system clock */
 111:Src/main.c    ****   SystemClock_Config();
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* USER CODE END SysInit */
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* Initialize all configured peripherals */
 118:Src/main.c    ****   MX_GPIO_Init();
 119:Src/main.c    ****   MX_DMA_Init();
 120:Src/main.c    ****   MX_DAC_Init();
 121:Src/main.c    ****   MX_TIM3_Init();
 122:Src/main.c    ****   MX_TIM6_Init();
 123:Src/main.c    ****   MX_TIM1_Init();
 124:Src/main.c    ****   /* USER CODE BEGIN 2 */
 125:Src/main.c    ****   HAL_TIM_Base_Start(&htim1);
 126:Src/main.c    ****   HAL_TIM_Base_Start(&htim3);
 127:Src/main.c    ****   HAL_TIM_Base_Start(&htim6);
 128:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim3);
 129:Src/main.c    ****   HAL_DAC_Start_DMA(&hdac, DAC_CHANNEL_2, (uint32_t *)CH_Value, 320, DAC_ALIGN_12B_R);
 130:Src/main.c    ****   /* USER CODE END 2 */
 131:Src/main.c    **** 
 132:Src/main.c    ****   /* Infinite loop */
 133:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 134:Src/main.c    ****   while (1)
 135:Src/main.c    ****   {
 136:Src/main.c    ****     Test();
 137:Src/main.c    ****     /* USER CODE END WHILE */
 138:Src/main.c    **** 
 139:Src/main.c    ****     /* USER CODE BEGIN 3 */
 140:Src/main.c    ****     HAL_GPIO_TogglePin(LED_1_GPIO_Port, LED_1_Pin);
 141:Src/main.c    ****     //printf("This is a test!");
 142:Src/main.c    ****     HAL_Delay(200);
 143:Src/main.c    ****     HAL_GPIO_TogglePin(LED_1_GPIO_Port, LED_1_Pin);
 144:Src/main.c    ****     HAL_Delay(200);
 145:Src/main.c    ****     HAL_GPIO_TogglePin(LED_2_GPIO_Port, LED_2_Pin);
 146:Src/main.c    ****     HAL_Delay(200);
 147:Src/main.c    ****     HAL_GPIO_TogglePin(LED_2_GPIO_Port, LED_2_Pin);
 148:Src/main.c    ****     HAL_Delay(200);
ARM GAS  /tmp/ccaKQJa2.s 			page 4


 149:Src/main.c    ****   }
 150:Src/main.c    ****   /* USER CODE END 3 */
 151:Src/main.c    **** }
 152:Src/main.c    **** 
 153:Src/main.c    **** /**
 154:Src/main.c    ****   * @brief System Clock Configuration
 155:Src/main.c    ****   * @retval None
 156:Src/main.c    ****   */
 157:Src/main.c    **** void SystemClock_Config(void)
 158:Src/main.c    **** {
 159:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 160:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 161:Src/main.c    **** 
 162:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 163:Src/main.c    ****   */
 164:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 165:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 166:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 167:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 168:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 169:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 170:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 171:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 172:Src/main.c    ****   {
 173:Src/main.c    ****     Error_Handler();
 174:Src/main.c    ****   }
 175:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 176:Src/main.c    ****   */
 177:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 178:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 179:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 180:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 181:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 182:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 183:Src/main.c    **** 
 184:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 185:Src/main.c    ****   {
 186:Src/main.c    ****     Error_Handler();
 187:Src/main.c    ****   }
 188:Src/main.c    **** }
 189:Src/main.c    **** 
 190:Src/main.c    **** /**
 191:Src/main.c    ****   * @brief DAC Initialization Function
 192:Src/main.c    ****   * @param None
 193:Src/main.c    ****   * @retval None
 194:Src/main.c    ****   */
 195:Src/main.c    **** static void MX_DAC_Init(void)
 196:Src/main.c    **** {
 197:Src/main.c    **** 
 198:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 0 */
 199:Src/main.c    **** 
 200:Src/main.c    ****   /* USER CODE END DAC_Init 0 */
 201:Src/main.c    **** 
 202:Src/main.c    ****   DAC_ChannelConfTypeDef sConfig = {0};
 203:Src/main.c    **** 
 204:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 1 */
 205:Src/main.c    **** 
ARM GAS  /tmp/ccaKQJa2.s 			page 5


 206:Src/main.c    ****   /* USER CODE END DAC_Init 1 */
 207:Src/main.c    ****   /** DAC Initialization
 208:Src/main.c    ****   */
 209:Src/main.c    ****   hdac.Instance = DAC;
 210:Src/main.c    ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 211:Src/main.c    ****   {
 212:Src/main.c    ****     Error_Handler();
 213:Src/main.c    ****   }
 214:Src/main.c    ****   /** DAC channel OUT2 config
 215:Src/main.c    ****   */
 216:Src/main.c    ****   sConfig.DAC_Trigger = DAC_TRIGGER_T6_TRGO;
 217:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_DISABLE;
 218:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 219:Src/main.c    ****   {
 220:Src/main.c    ****     Error_Handler();
 221:Src/main.c    ****   }
 222:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 2 */
 223:Src/main.c    **** 
 224:Src/main.c    ****   /* USER CODE END DAC_Init 2 */
 225:Src/main.c    **** 
 226:Src/main.c    **** }
 227:Src/main.c    **** 
 228:Src/main.c    **** /**
 229:Src/main.c    ****   * @brief TIM1 Initialization Function
 230:Src/main.c    ****   * @param None
 231:Src/main.c    ****   * @retval None
 232:Src/main.c    ****   */
 233:Src/main.c    **** static void MX_TIM1_Init(void)
 234:Src/main.c    **** {
 235:Src/main.c    **** 
 236:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 0 */
 237:Src/main.c    **** 
 238:Src/main.c    ****   /* USER CODE END TIM1_Init 0 */
 239:Src/main.c    **** 
 240:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 241:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 242:Src/main.c    **** 
 243:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 1 */
 244:Src/main.c    **** 
 245:Src/main.c    ****   /* USER CODE END TIM1_Init 1 */
 246:Src/main.c    ****   htim1.Instance = TIM1;
 247:Src/main.c    ****   htim1.Init.Prescaler = 0;
 248:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 249:Src/main.c    ****   htim1.Init.Period = 0;
 250:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 251:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 252:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 253:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 254:Src/main.c    ****   {
 255:Src/main.c    ****     Error_Handler();
 256:Src/main.c    ****   }
 257:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_ETRMODE2;
 258:Src/main.c    ****   sClockSourceConfig.ClockPolarity = TIM_CLOCKPOLARITY_NONINVERTED;
 259:Src/main.c    ****   sClockSourceConfig.ClockPrescaler = TIM_CLOCKPRESCALER_DIV1;
 260:Src/main.c    ****   sClockSourceConfig.ClockFilter = 0;
 261:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 262:Src/main.c    ****   {
ARM GAS  /tmp/ccaKQJa2.s 			page 6


 263:Src/main.c    ****     Error_Handler();
 264:Src/main.c    ****   }
 265:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 266:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 267:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 268:Src/main.c    ****   {
 269:Src/main.c    ****     Error_Handler();
 270:Src/main.c    ****   }
 271:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 2 */
 272:Src/main.c    **** 
 273:Src/main.c    ****   /* USER CODE END TIM1_Init 2 */
 274:Src/main.c    **** 
 275:Src/main.c    **** }
 276:Src/main.c    **** 
 277:Src/main.c    **** /**
 278:Src/main.c    ****   * @brief TIM3 Initialization Function
 279:Src/main.c    ****   * @param None
 280:Src/main.c    ****   * @retval None
 281:Src/main.c    ****   */
 282:Src/main.c    **** static void MX_TIM3_Init(void)
 283:Src/main.c    **** {
 284:Src/main.c    **** 
 285:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 0 */
 286:Src/main.c    **** 
 287:Src/main.c    ****   /* USER CODE END TIM3_Init 0 */
 288:Src/main.c    **** 
 289:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 290:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 291:Src/main.c    **** 
 292:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 1 */
 293:Src/main.c    **** 
 294:Src/main.c    ****   /* USER CODE END TIM3_Init 1 */
 295:Src/main.c    ****   htim3.Instance = TIM3;
 296:Src/main.c    ****   htim3.Init.Prescaler = 7200-1;
 297:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 298:Src/main.c    ****   htim3.Init.Period = 9999;
 299:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 300:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 301:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 302:Src/main.c    ****   {
 303:Src/main.c    ****     Error_Handler();
 304:Src/main.c    ****   }
 305:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 306:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 307:Src/main.c    ****   {
 308:Src/main.c    ****     Error_Handler();
 309:Src/main.c    ****   }
 310:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 311:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 312:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 313:Src/main.c    ****   {
 314:Src/main.c    ****     Error_Handler();
 315:Src/main.c    ****   }
 316:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 2 */
 317:Src/main.c    **** 
 318:Src/main.c    ****   /* USER CODE END TIM3_Init 2 */
 319:Src/main.c    **** 
ARM GAS  /tmp/ccaKQJa2.s 			page 7


 320:Src/main.c    **** }
 321:Src/main.c    **** 
 322:Src/main.c    **** /**
 323:Src/main.c    ****   * @brief TIM6 Initialization Function
 324:Src/main.c    ****   * @param None
 325:Src/main.c    ****   * @retval None
 326:Src/main.c    ****   */
 327:Src/main.c    **** static void MX_TIM6_Init(void)
 328:Src/main.c    **** {
 329:Src/main.c    **** 
 330:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 0 */
 331:Src/main.c    **** 
 332:Src/main.c    ****   /* USER CODE END TIM6_Init 0 */
 333:Src/main.c    **** 
 334:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 335:Src/main.c    **** 
 336:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 1 */
 337:Src/main.c    **** 
 338:Src/main.c    ****   /* USER CODE END TIM6_Init 1 */
 339:Src/main.c    ****   htim6.Instance = TIM6;
 340:Src/main.c    ****   htim6.Init.Prescaler = 0;
 341:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 342:Src/main.c    ****   htim6.Init.Period = 39;
 343:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 344:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 345:Src/main.c    ****   {
 346:Src/main.c    ****     Error_Handler();
 347:Src/main.c    ****   }
 348:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 349:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 350:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 351:Src/main.c    ****   {
 352:Src/main.c    ****     Error_Handler();
 353:Src/main.c    ****   }
 354:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 2 */
 355:Src/main.c    **** 
 356:Src/main.c    ****   /* USER CODE END TIM6_Init 2 */
 357:Src/main.c    **** 
 358:Src/main.c    **** }
 359:Src/main.c    **** 
 360:Src/main.c    **** /**
 361:Src/main.c    ****   * Enable DMA controller clock
 362:Src/main.c    ****   */
 363:Src/main.c    **** static void MX_DMA_Init(void)
 364:Src/main.c    **** {
 365:Src/main.c    **** 
 366:Src/main.c    ****   /* DMA controller clock enable */
 367:Src/main.c    ****   __HAL_RCC_DMA2_CLK_ENABLE();
 368:Src/main.c    **** 
 369:Src/main.c    ****   /* DMA interrupt init */
 370:Src/main.c    ****   /* DMA2_Channel4_5_IRQn interrupt configuration */
 371:Src/main.c    ****   HAL_NVIC_SetPriority(DMA2_Channel4_5_IRQn, 0, 1);
 372:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA2_Channel4_5_IRQn);
 373:Src/main.c    **** 
 374:Src/main.c    **** }
 375:Src/main.c    **** 
 376:Src/main.c    **** /**
ARM GAS  /tmp/ccaKQJa2.s 			page 8


 377:Src/main.c    ****   * @brief GPIO Initialization Function
 378:Src/main.c    ****   * @param None
 379:Src/main.c    ****   * @retval None
 380:Src/main.c    ****   */
 381:Src/main.c    **** static void MX_GPIO_Init(void)
 382:Src/main.c    **** {
  25              		.loc 1 382 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 32
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29 0000 70B5     		push	{r4, r5, r6, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 16
  32              		.cfi_offset 4, -16
  33              		.cfi_offset 5, -12
  34              		.cfi_offset 6, -8
  35              		.cfi_offset 14, -4
  36 0002 88B0     		sub	sp, sp, #32
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 383:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 383 0
  40 0004 0024     		movs	r4, #0
  41 0006 0494     		str	r4, [sp, #16]
  42 0008 0594     		str	r4, [sp, #20]
  43 000a 0694     		str	r4, [sp, #24]
  44 000c 0794     		str	r4, [sp, #28]
  45              	.LBB2:
 384:Src/main.c    **** 
 385:Src/main.c    ****   /* GPIO Ports Clock Enable */
 386:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  46              		.loc 1 386 0
  47 000e 1C4B     		ldr	r3, .L3
  48 0010 9A69     		ldr	r2, [r3, #24]
  49 0012 42F02002 		orr	r2, r2, #32
  50 0016 9A61     		str	r2, [r3, #24]
  51 0018 9A69     		ldr	r2, [r3, #24]
  52 001a 02F02002 		and	r2, r2, #32
  53 001e 0192     		str	r2, [sp, #4]
  54 0020 019A     		ldr	r2, [sp, #4]
  55              	.LBE2:
  56              	.LBB3:
 387:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  57              		.loc 1 387 0
  58 0022 9A69     		ldr	r2, [r3, #24]
  59 0024 42F01002 		orr	r2, r2, #16
  60 0028 9A61     		str	r2, [r3, #24]
  61 002a 9A69     		ldr	r2, [r3, #24]
  62 002c 02F01002 		and	r2, r2, #16
  63 0030 0292     		str	r2, [sp, #8]
  64 0032 029A     		ldr	r2, [sp, #8]
  65              	.LBE3:
  66              	.LBB4:
 388:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  67              		.loc 1 388 0
  68 0034 9A69     		ldr	r2, [r3, #24]
  69 0036 42F00402 		orr	r2, r2, #4
ARM GAS  /tmp/ccaKQJa2.s 			page 9


  70 003a 9A61     		str	r2, [r3, #24]
  71 003c 9B69     		ldr	r3, [r3, #24]
  72 003e 03F00403 		and	r3, r3, #4
  73 0042 0393     		str	r3, [sp, #12]
  74 0044 039B     		ldr	r3, [sp, #12]
  75              	.LBE4:
 389:Src/main.c    **** 
 390:Src/main.c    ****   /*Configure GPIO pin Output Level */
 391:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, LED_1_Pin|LED_2_Pin, GPIO_PIN_RESET);
  76              		.loc 1 391 0
  77 0046 0F4D     		ldr	r5, .L3+4
  78 0048 2246     		mov	r2, r4
  79 004a 0C21     		movs	r1, #12
  80 004c 2846     		mov	r0, r5
  81 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
  82              	.LVL0:
 392:Src/main.c    **** 
 393:Src/main.c    ****   /*Configure GPIO pin : LED_1_Pin */
 394:Src/main.c    ****   GPIO_InitStruct.Pin = LED_1_Pin;
  83              		.loc 1 394 0
  84 0052 0423     		movs	r3, #4
  85 0054 0493     		str	r3, [sp, #16]
 395:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  86              		.loc 1 395 0
  87 0056 0126     		movs	r6, #1
  88 0058 0596     		str	r6, [sp, #20]
 396:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  89              		.loc 1 396 0
  90 005a 0694     		str	r4, [sp, #24]
 397:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  91              		.loc 1 397 0
  92 005c 0224     		movs	r4, #2
  93 005e 0794     		str	r4, [sp, #28]
 398:Src/main.c    ****   HAL_GPIO_Init(LED_1_GPIO_Port, &GPIO_InitStruct);
  94              		.loc 1 398 0
  95 0060 04A9     		add	r1, sp, #16
  96 0062 2846     		mov	r0, r5
  97 0064 FFF7FEFF 		bl	HAL_GPIO_Init
  98              	.LVL1:
 399:Src/main.c    **** 
 400:Src/main.c    ****   /*Configure GPIO pin : LED_2_Pin */
 401:Src/main.c    ****   GPIO_InitStruct.Pin = LED_2_Pin;
  99              		.loc 1 401 0
 100 0068 0823     		movs	r3, #8
 101 006a 0493     		str	r3, [sp, #16]
 402:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 102              		.loc 1 402 0
 103 006c 0596     		str	r6, [sp, #20]
 403:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 104              		.loc 1 403 0
 105 006e 0696     		str	r6, [sp, #24]
 404:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 106              		.loc 1 404 0
 107 0070 0794     		str	r4, [sp, #28]
 405:Src/main.c    ****   HAL_GPIO_Init(LED_2_GPIO_Port, &GPIO_InitStruct);
 108              		.loc 1 405 0
 109 0072 04A9     		add	r1, sp, #16
ARM GAS  /tmp/ccaKQJa2.s 			page 10


 110 0074 2846     		mov	r0, r5
 111 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 112              	.LVL2:
 406:Src/main.c    **** 
 407:Src/main.c    **** }
 113              		.loc 1 407 0
 114 007a 08B0     		add	sp, sp, #32
 115              	.LCFI2:
 116              		.cfi_def_cfa_offset 16
 117              		@ sp needed
 118 007c 70BD     		pop	{r4, r5, r6, pc}
 119              	.L4:
 120 007e 00BF     		.align	2
 121              	.L3:
 122 0080 00100240 		.word	1073876992
 123 0084 00100140 		.word	1073811456
 124              		.cfi_endproc
 125              	.LFE73:
 127              		.section	.text.MX_DMA_Init,"ax",%progbits
 128              		.align	1
 129              		.syntax unified
 130              		.thumb
 131              		.thumb_func
 132              		.fpu softvfp
 134              	MX_DMA_Init:
 135              	.LFB72:
 364:Src/main.c    **** 
 136              		.loc 1 364 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 8
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140 0000 00B5     		push	{lr}
 141              	.LCFI3:
 142              		.cfi_def_cfa_offset 4
 143              		.cfi_offset 14, -4
 144 0002 83B0     		sub	sp, sp, #12
 145              	.LCFI4:
 146              		.cfi_def_cfa_offset 16
 147              	.LBB5:
 367:Src/main.c    **** 
 148              		.loc 1 367 0
 149 0004 0A4B     		ldr	r3, .L7
 150 0006 5A69     		ldr	r2, [r3, #20]
 151 0008 42F00202 		orr	r2, r2, #2
 152 000c 5A61     		str	r2, [r3, #20]
 153 000e 5B69     		ldr	r3, [r3, #20]
 154 0010 03F00203 		and	r3, r3, #2
 155 0014 0193     		str	r3, [sp, #4]
 156 0016 019B     		ldr	r3, [sp, #4]
 157              	.LBE5:
 371:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA2_Channel4_5_IRQn);
 158              		.loc 1 371 0
 159 0018 0122     		movs	r2, #1
 160 001a 0021     		movs	r1, #0
 161 001c 3B20     		movs	r0, #59
 162 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 163              	.LVL3:
ARM GAS  /tmp/ccaKQJa2.s 			page 11


 372:Src/main.c    **** 
 164              		.loc 1 372 0
 165 0022 3B20     		movs	r0, #59
 166 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 167              	.LVL4:
 374:Src/main.c    **** 
 168              		.loc 1 374 0
 169 0028 03B0     		add	sp, sp, #12
 170              	.LCFI5:
 171              		.cfi_def_cfa_offset 4
 172              		@ sp needed
 173 002a 5DF804FB 		ldr	pc, [sp], #4
 174              	.L8:
 175 002e 00BF     		.align	2
 176              	.L7:
 177 0030 00100240 		.word	1073876992
 178              		.cfi_endproc
 179              	.LFE72:
 181              		.section	.text.MX_DAC_Init,"ax",%progbits
 182              		.align	1
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 186              		.fpu softvfp
 188              	MX_DAC_Init:
 189              	.LFB68:
 196:Src/main.c    **** 
 190              		.loc 1 196 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 8
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194 0000 10B5     		push	{r4, lr}
 195              	.LCFI6:
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 4, -8
 198              		.cfi_offset 14, -4
 199 0002 82B0     		sub	sp, sp, #8
 200              	.LCFI7:
 201              		.cfi_def_cfa_offset 16
 202:Src/main.c    **** 
 202              		.loc 1 202 0
 203 0004 0023     		movs	r3, #0
 204 0006 0093     		str	r3, [sp]
 205 0008 0193     		str	r3, [sp, #4]
 209:Src/main.c    ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 206              		.loc 1 209 0
 207 000a 084C     		ldr	r4, .L11
 208 000c 084B     		ldr	r3, .L11+4
 209 000e 2360     		str	r3, [r4]
 210:Src/main.c    ****   {
 210              		.loc 1 210 0
 211 0010 2046     		mov	r0, r4
 212 0012 FFF7FEFF 		bl	HAL_DAC_Init
 213              	.LVL5:
 216:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_DISABLE;
 214              		.loc 1 216 0
 215 0016 0423     		movs	r3, #4
ARM GAS  /tmp/ccaKQJa2.s 			page 12


 216 0018 0093     		str	r3, [sp]
 217:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 217              		.loc 1 217 0
 218 001a 0223     		movs	r3, #2
 219 001c 0193     		str	r3, [sp, #4]
 218:Src/main.c    ****   {
 220              		.loc 1 218 0
 221 001e 1022     		movs	r2, #16
 222 0020 6946     		mov	r1, sp
 223 0022 2046     		mov	r0, r4
 224 0024 FFF7FEFF 		bl	HAL_DAC_ConfigChannel
 225              	.LVL6:
 226:Src/main.c    **** 
 226              		.loc 1 226 0
 227 0028 02B0     		add	sp, sp, #8
 228              	.LCFI8:
 229              		.cfi_def_cfa_offset 8
 230              		@ sp needed
 231 002a 10BD     		pop	{r4, pc}
 232              	.L12:
 233              		.align	2
 234              	.L11:
 235 002c 00000000 		.word	hdac
 236 0030 00740040 		.word	1073771520
 237              		.cfi_endproc
 238              	.LFE68:
 240              		.section	.text.MX_TIM3_Init,"ax",%progbits
 241              		.align	1
 242              		.syntax unified
 243              		.thumb
 244              		.thumb_func
 245              		.fpu softvfp
 247              	MX_TIM3_Init:
 248              	.LFB70:
 283:Src/main.c    **** 
 249              		.loc 1 283 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 24
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253 0000 30B5     		push	{r4, r5, lr}
 254              	.LCFI9:
 255              		.cfi_def_cfa_offset 12
 256              		.cfi_offset 4, -12
 257              		.cfi_offset 5, -8
 258              		.cfi_offset 14, -4
 259 0002 87B0     		sub	sp, sp, #28
 260              	.LCFI10:
 261              		.cfi_def_cfa_offset 40
 289:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 262              		.loc 1 289 0
 263 0004 0024     		movs	r4, #0
 264 0006 0294     		str	r4, [sp, #8]
 265 0008 0394     		str	r4, [sp, #12]
 266 000a 0494     		str	r4, [sp, #16]
 267 000c 0594     		str	r4, [sp, #20]
 290:Src/main.c    **** 
 268              		.loc 1 290 0
ARM GAS  /tmp/ccaKQJa2.s 			page 13


 269 000e 0094     		str	r4, [sp]
 270 0010 0194     		str	r4, [sp, #4]
 295:Src/main.c    ****   htim3.Init.Prescaler = 7200-1;
 271              		.loc 1 295 0
 272 0012 0F4D     		ldr	r5, .L15
 273 0014 0F4B     		ldr	r3, .L15+4
 274 0016 2B60     		str	r3, [r5]
 296:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 275              		.loc 1 296 0
 276 0018 41F61F43 		movw	r3, #7199
 277 001c 6B60     		str	r3, [r5, #4]
 297:Src/main.c    ****   htim3.Init.Period = 9999;
 278              		.loc 1 297 0
 279 001e AC60     		str	r4, [r5, #8]
 298:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 280              		.loc 1 298 0
 281 0020 42F20F73 		movw	r3, #9999
 282 0024 EB60     		str	r3, [r5, #12]
 299:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 283              		.loc 1 299 0
 284 0026 2C61     		str	r4, [r5, #16]
 300:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 285              		.loc 1 300 0
 286 0028 AC61     		str	r4, [r5, #24]
 301:Src/main.c    ****   {
 287              		.loc 1 301 0
 288 002a 2846     		mov	r0, r5
 289 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
 290              	.LVL7:
 305:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 291              		.loc 1 305 0
 292 0030 4FF48053 		mov	r3, #4096
 293 0034 0293     		str	r3, [sp, #8]
 306:Src/main.c    ****   {
 294              		.loc 1 306 0
 295 0036 02A9     		add	r1, sp, #8
 296 0038 2846     		mov	r0, r5
 297 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 298              	.LVL8:
 310:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 299              		.loc 1 310 0
 300 003e 0094     		str	r4, [sp]
 311:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 301              		.loc 1 311 0
 302 0040 0194     		str	r4, [sp, #4]
 312:Src/main.c    ****   {
 303              		.loc 1 312 0
 304 0042 6946     		mov	r1, sp
 305 0044 2846     		mov	r0, r5
 306 0046 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 307              	.LVL9:
 320:Src/main.c    **** 
 308              		.loc 1 320 0
 309 004a 07B0     		add	sp, sp, #28
 310              	.LCFI11:
 311              		.cfi_def_cfa_offset 12
 312              		@ sp needed
ARM GAS  /tmp/ccaKQJa2.s 			page 14


 313 004c 30BD     		pop	{r4, r5, pc}
 314              	.L16:
 315 004e 00BF     		.align	2
 316              	.L15:
 317 0050 00000000 		.word	htim3
 318 0054 00040040 		.word	1073742848
 319              		.cfi_endproc
 320              	.LFE70:
 322              		.section	.text.MX_TIM6_Init,"ax",%progbits
 323              		.align	1
 324              		.syntax unified
 325              		.thumb
 326              		.thumb_func
 327              		.fpu softvfp
 329              	MX_TIM6_Init:
 330              	.LFB71:
 328:Src/main.c    **** 
 331              		.loc 1 328 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 8
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335 0000 30B5     		push	{r4, r5, lr}
 336              	.LCFI12:
 337              		.cfi_def_cfa_offset 12
 338              		.cfi_offset 4, -12
 339              		.cfi_offset 5, -8
 340              		.cfi_offset 14, -4
 341 0002 83B0     		sub	sp, sp, #12
 342              	.LCFI13:
 343              		.cfi_def_cfa_offset 24
 334:Src/main.c    **** 
 344              		.loc 1 334 0
 345 0004 0025     		movs	r5, #0
 346 0006 0095     		str	r5, [sp]
 347 0008 0195     		str	r5, [sp, #4]
 339:Src/main.c    ****   htim6.Init.Prescaler = 0;
 348              		.loc 1 339 0
 349 000a 0A4C     		ldr	r4, .L19
 350 000c 0A4B     		ldr	r3, .L19+4
 351 000e 2360     		str	r3, [r4]
 340:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 352              		.loc 1 340 0
 353 0010 6560     		str	r5, [r4, #4]
 341:Src/main.c    ****   htim6.Init.Period = 39;
 354              		.loc 1 341 0
 355 0012 A560     		str	r5, [r4, #8]
 342:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 356              		.loc 1 342 0
 357 0014 2723     		movs	r3, #39
 358 0016 E360     		str	r3, [r4, #12]
 343:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 359              		.loc 1 343 0
 360 0018 A561     		str	r5, [r4, #24]
 344:Src/main.c    ****   {
 361              		.loc 1 344 0
 362 001a 2046     		mov	r0, r4
 363 001c FFF7FEFF 		bl	HAL_TIM_Base_Init
ARM GAS  /tmp/ccaKQJa2.s 			page 15


 364              	.LVL10:
 348:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 365              		.loc 1 348 0
 366 0020 2023     		movs	r3, #32
 367 0022 0093     		str	r3, [sp]
 349:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 368              		.loc 1 349 0
 369 0024 0195     		str	r5, [sp, #4]
 350:Src/main.c    ****   {
 370              		.loc 1 350 0
 371 0026 6946     		mov	r1, sp
 372 0028 2046     		mov	r0, r4
 373 002a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 374              	.LVL11:
 358:Src/main.c    **** 
 375              		.loc 1 358 0
 376 002e 03B0     		add	sp, sp, #12
 377              	.LCFI14:
 378              		.cfi_def_cfa_offset 12
 379              		@ sp needed
 380 0030 30BD     		pop	{r4, r5, pc}
 381              	.L20:
 382 0032 00BF     		.align	2
 383              	.L19:
 384 0034 00000000 		.word	htim6
 385 0038 00100040 		.word	1073745920
 386              		.cfi_endproc
 387              	.LFE71:
 389              		.section	.text.MX_TIM1_Init,"ax",%progbits
 390              		.align	1
 391              		.syntax unified
 392              		.thumb
 393              		.thumb_func
 394              		.fpu softvfp
 396              	MX_TIM1_Init:
 397              	.LFB69:
 234:Src/main.c    **** 
 398              		.loc 1 234 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 24
 401              		@ frame_needed = 0, uses_anonymous_args = 0
 402 0000 30B5     		push	{r4, r5, lr}
 403              	.LCFI15:
 404              		.cfi_def_cfa_offset 12
 405              		.cfi_offset 4, -12
 406              		.cfi_offset 5, -8
 407              		.cfi_offset 14, -4
 408 0002 87B0     		sub	sp, sp, #28
 409              	.LCFI16:
 410              		.cfi_def_cfa_offset 40
 240:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 411              		.loc 1 240 0
 412 0004 0024     		movs	r4, #0
 413 0006 0294     		str	r4, [sp, #8]
 414 0008 0394     		str	r4, [sp, #12]
 415 000a 0494     		str	r4, [sp, #16]
 416 000c 0594     		str	r4, [sp, #20]
ARM GAS  /tmp/ccaKQJa2.s 			page 16


 241:Src/main.c    **** 
 417              		.loc 1 241 0
 418 000e 0094     		str	r4, [sp]
 419 0010 0194     		str	r4, [sp, #4]
 246:Src/main.c    ****   htim1.Init.Prescaler = 0;
 420              		.loc 1 246 0
 421 0012 0F4D     		ldr	r5, .L23
 422 0014 0F4B     		ldr	r3, .L23+4
 423 0016 2B60     		str	r3, [r5]
 247:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 424              		.loc 1 247 0
 425 0018 6C60     		str	r4, [r5, #4]
 248:Src/main.c    ****   htim1.Init.Period = 0;
 426              		.loc 1 248 0
 427 001a AC60     		str	r4, [r5, #8]
 249:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 428              		.loc 1 249 0
 429 001c EC60     		str	r4, [r5, #12]
 250:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 430              		.loc 1 250 0
 431 001e 2C61     		str	r4, [r5, #16]
 251:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 432              		.loc 1 251 0
 433 0020 6C61     		str	r4, [r5, #20]
 252:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 434              		.loc 1 252 0
 435 0022 AC61     		str	r4, [r5, #24]
 253:Src/main.c    ****   {
 436              		.loc 1 253 0
 437 0024 2846     		mov	r0, r5
 438 0026 FFF7FEFF 		bl	HAL_TIM_Base_Init
 439              	.LVL12:
 257:Src/main.c    ****   sClockSourceConfig.ClockPolarity = TIM_CLOCKPOLARITY_NONINVERTED;
 440              		.loc 1 257 0
 441 002a 4FF40053 		mov	r3, #8192
 442 002e 0293     		str	r3, [sp, #8]
 258:Src/main.c    ****   sClockSourceConfig.ClockPrescaler = TIM_CLOCKPRESCALER_DIV1;
 443              		.loc 1 258 0
 444 0030 0394     		str	r4, [sp, #12]
 259:Src/main.c    ****   sClockSourceConfig.ClockFilter = 0;
 445              		.loc 1 259 0
 446 0032 0494     		str	r4, [sp, #16]
 260:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 447              		.loc 1 260 0
 448 0034 0594     		str	r4, [sp, #20]
 261:Src/main.c    ****   {
 449              		.loc 1 261 0
 450 0036 02A9     		add	r1, sp, #8
 451 0038 2846     		mov	r0, r5
 452 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 453              	.LVL13:
 265:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 454              		.loc 1 265 0
 455 003e 0094     		str	r4, [sp]
 266:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 456              		.loc 1 266 0
 457 0040 0194     		str	r4, [sp, #4]
ARM GAS  /tmp/ccaKQJa2.s 			page 17


 267:Src/main.c    ****   {
 458              		.loc 1 267 0
 459 0042 6946     		mov	r1, sp
 460 0044 2846     		mov	r0, r5
 461 0046 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 462              	.LVL14:
 275:Src/main.c    **** 
 463              		.loc 1 275 0
 464 004a 07B0     		add	sp, sp, #28
 465              	.LCFI17:
 466              		.cfi_def_cfa_offset 12
 467              		@ sp needed
 468 004c 30BD     		pop	{r4, r5, pc}
 469              	.L24:
 470 004e 00BF     		.align	2
 471              	.L23:
 472 0050 00000000 		.word	htim1
 473 0054 002C0140 		.word	1073818624
 474              		.cfi_endproc
 475              	.LFE69:
 477              		.section	.text.SystemClock_Config,"ax",%progbits
 478              		.align	1
 479              		.global	SystemClock_Config
 480              		.syntax unified
 481              		.thumb
 482              		.thumb_func
 483              		.fpu softvfp
 485              	SystemClock_Config:
 486              	.LFB67:
 158:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 487              		.loc 1 158 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 64
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491 0000 30B5     		push	{r4, r5, lr}
 492              	.LCFI18:
 493              		.cfi_def_cfa_offset 12
 494              		.cfi_offset 4, -12
 495              		.cfi_offset 5, -8
 496              		.cfi_offset 14, -4
 497 0002 91B0     		sub	sp, sp, #68
 498              	.LCFI19:
 499              		.cfi_def_cfa_offset 80
 159:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 500              		.loc 1 159 0
 501 0004 2822     		movs	r2, #40
 502 0006 0021     		movs	r1, #0
 503 0008 06A8     		add	r0, sp, #24
 504 000a FFF7FEFF 		bl	memset
 505              	.LVL15:
 160:Src/main.c    **** 
 506              		.loc 1 160 0
 507 000e 0024     		movs	r4, #0
 508 0010 0194     		str	r4, [sp, #4]
 509 0012 0294     		str	r4, [sp, #8]
 510 0014 0394     		str	r4, [sp, #12]
 511 0016 0494     		str	r4, [sp, #16]
ARM GAS  /tmp/ccaKQJa2.s 			page 18


 512 0018 0594     		str	r4, [sp, #20]
 164:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 513              		.loc 1 164 0
 514 001a 0122     		movs	r2, #1
 515 001c 0692     		str	r2, [sp, #24]
 165:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 516              		.loc 1 165 0
 517 001e 4FF48033 		mov	r3, #65536
 518 0022 0793     		str	r3, [sp, #28]
 167:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 519              		.loc 1 167 0
 520 0024 0A92     		str	r2, [sp, #40]
 168:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 521              		.loc 1 168 0
 522 0026 0225     		movs	r5, #2
 523 0028 0D95     		str	r5, [sp, #52]
 169:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 524              		.loc 1 169 0
 525 002a 0E93     		str	r3, [sp, #56]
 170:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 526              		.loc 1 170 0
 527 002c 4FF4E013 		mov	r3, #1835008
 528 0030 0F93     		str	r3, [sp, #60]
 171:Src/main.c    ****   {
 529              		.loc 1 171 0
 530 0032 06A8     		add	r0, sp, #24
 531 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 532              	.LVL16:
 177:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 533              		.loc 1 177 0
 534 0038 0F23     		movs	r3, #15
 535 003a 0193     		str	r3, [sp, #4]
 179:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 536              		.loc 1 179 0
 537 003c 0295     		str	r5, [sp, #8]
 180:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 538              		.loc 1 180 0
 539 003e 0394     		str	r4, [sp, #12]
 181:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 540              		.loc 1 181 0
 541 0040 4FF48063 		mov	r3, #1024
 542 0044 0493     		str	r3, [sp, #16]
 182:Src/main.c    **** 
 543              		.loc 1 182 0
 544 0046 0594     		str	r4, [sp, #20]
 184:Src/main.c    ****   {
 545              		.loc 1 184 0
 546 0048 2946     		mov	r1, r5
 547 004a 01A8     		add	r0, sp, #4
 548 004c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 549              	.LVL17:
 188:Src/main.c    **** 
 550              		.loc 1 188 0
 551 0050 11B0     		add	sp, sp, #68
 552              	.LCFI20:
 553              		.cfi_def_cfa_offset 12
 554              		@ sp needed
ARM GAS  /tmp/ccaKQJa2.s 			page 19


 555 0052 30BD     		pop	{r4, r5, pc}
 556              		.cfi_endproc
 557              	.LFE67:
 559              		.global	__aeabi_f2d
 560              		.global	__aeabi_dadd
 561              		.global	__aeabi_d2f
 562              		.global	__aeabi_f2iz
 563              		.global	__aeabi_fmul
 564              		.global	__aeabi_i2f
 565              		.global	__aeabi_fsub
 566              		.global	__aeabi_fcmpge
 567              		.section	.text.Test,"ax",%progbits
 568              		.align	1
 569              		.global	Test
 570              		.syntax unified
 571              		.thumb
 572              		.thumb_func
 573              		.fpu softvfp
 575              	Test:
 576              	.LFB74:
 408:Src/main.c    **** 
 409:Src/main.c    **** /* USER CODE BEGIN 4 */
 410:Src/main.c    **** 
 411:Src/main.c    **** void Test(void)
 412:Src/main.c    **** {
 577              		.loc 1 412 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 104
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 581 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 582              	.LCFI21:
 583              		.cfi_def_cfa_offset 24
 584              		.cfi_offset 4, -24
 585              		.cfi_offset 5, -20
 586              		.cfi_offset 6, -16
 587              		.cfi_offset 7, -12
 588              		.cfi_offset 8, -8
 589              		.cfi_offset 14, -4
 590 0004 9CB0     		sub	sp, sp, #112
 591              	.LCFI22:
 592              		.cfi_def_cfa_offset 136
 593              	.LVL18:
 413:Src/main.c    ****   static uint8_t testint = 0;
 414:Src/main.c    ****   static float testfloat = 0;
 415:Src/main.c    ****   int a, b;
 416:Src/main.c    ****   char dispBuff[100];
 417:Src/main.c    ****   char *pStr = 0;
 418:Src/main.c    **** 
 419:Src/main.c    ****   testint++;
 594              		.loc 1 419 0
 595 0006 5C4D     		ldr	r5, .L33+8
 596 0008 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 597 000a 0133     		adds	r3, r3, #1
 598 000c 2B70     		strb	r3, [r5]
 420:Src/main.c    ****   testfloat += 0.01;
 599              		.loc 1 420 0
 600 000e 5B4E     		ldr	r6, .L33+12
ARM GAS  /tmp/ccaKQJa2.s 			page 20


 601 0010 3068     		ldr	r0, [r6]	@ float
 602 0012 FFF7FEFF 		bl	__aeabi_f2d
 603              	.LVL19:
 604 0016 56A3     		adr	r3, .L33
 605 0018 D3E90023 		ldrd	r2, [r3]
 606 001c FFF7FEFF 		bl	__aeabi_dadd
 607              	.LVL20:
 608 0020 FFF7FEFF 		bl	__aeabi_d2f
 609              	.LVL21:
 610 0024 3060     		str	r0, [r6]	@ float
 421:Src/main.c    **** 
 422:Src/main.c    ****   LCD_SetFont(&Font8x16);
 611              		.loc 1 422 0
 612 0026 5648     		ldr	r0, .L33+16
 613 0028 FFF7FEFF 		bl	LCD_SetFont
 614              	.LVL22:
 423:Src/main.c    ****   LCD_SetColors(BLACK, WHITE);
 615              		.loc 1 423 0
 616 002c 4FF6FF71 		movw	r1, #65535
 617 0030 0020     		movs	r0, #0
 618 0032 FFF7FEFF 		bl	LCD_SetColors
 619              	.LVL23:
 424:Src/main.c    ****   ILI9341_Clear(0, 0, LCD_X_LENGTH, LCD_Y_LENGTH);
 620              		.loc 1 424 0
 621 0036 534C     		ldr	r4, .L33+20
 622 0038 534B     		ldr	r3, .L33+24
 623 003a 1B88     		ldrh	r3, [r3]
 624 003c 2288     		ldrh	r2, [r4]
 625 003e 0021     		movs	r1, #0
 626 0040 0846     		mov	r0, r1
 627 0042 FFF7FEFF 		bl	ILI9341_Clear
 628              	.LVL24:
 425:Src/main.c    **** 
 426:Src/main.c    ****   sprintf(dispBuff, "INT:%d", testint);
 629              		.loc 1 426 0
 630 0046 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 631 0048 5049     		ldr	r1, .L33+28
 632 004a 03A8     		add	r0, sp, #12
 633 004c FFF7FEFF 		bl	sprintf
 634              	.LVL25:
 427:Src/main.c    ****   LCD_ClearLine(LINE(5));
 635              		.loc 1 427 0
 636 0050 FFF7FEFF 		bl	LCD_GetFont
 637              	.LVL26:
 638 0054 C088     		ldrh	r0, [r0, #6]
 639 0056 00EB8000 		add	r0, r0, r0, lsl #2
 640 005a 80B2     		uxth	r0, r0
 641 005c FFF7FEFF 		bl	LCD_ClearLine
 642              	.LVL27:
 428:Src/main.c    ****   ILI9341_DispStringLine_EN(LINE(5), dispBuff);
 643              		.loc 1 428 0
 644 0060 FFF7FEFF 		bl	LCD_GetFont
 645              	.LVL28:
 646 0064 C088     		ldrh	r0, [r0, #6]
 647 0066 00EB8000 		add	r0, r0, r0, lsl #2
 648 006a 03A9     		add	r1, sp, #12
 649 006c 80B2     		uxth	r0, r0
ARM GAS  /tmp/ccaKQJa2.s 			page 21


 650 006e FFF7FEFF 		bl	ILI9341_DispStringLine_EN
 651              	.LVL29:
 429:Src/main.c    **** 
 430:Src/main.c    ****   sprintf(dispBuff, "Frequency:%d", CNT);
 652              		.loc 1 430 0
 653 0072 474B     		ldr	r3, .L33+32
 654 0074 1A68     		ldr	r2, [r3]
 655 0076 4749     		ldr	r1, .L33+36
 656 0078 03A8     		add	r0, sp, #12
 657 007a FFF7FEFF 		bl	sprintf
 658              	.LVL30:
 431:Src/main.c    ****   LCD_ClearLine(LINE(7));
 659              		.loc 1 431 0
 660 007e FFF7FEFF 		bl	LCD_GetFont
 661              	.LVL31:
 662 0082 C088     		ldrh	r0, [r0, #6]
 663 0084 C0EBC000 		rsb	r0, r0, r0, lsl #3
 664 0088 80B2     		uxth	r0, r0
 665 008a FFF7FEFF 		bl	LCD_ClearLine
 666              	.LVL32:
 432:Src/main.c    ****   ILI9341_DispStringLine_EN(LINE(7), dispBuff);
 667              		.loc 1 432 0
 668 008e FFF7FEFF 		bl	LCD_GetFont
 669              	.LVL33:
 670 0092 C088     		ldrh	r0, [r0, #6]
 671 0094 C0EBC000 		rsb	r0, r0, r0, lsl #3
 672 0098 03A9     		add	r1, sp, #12
 673 009a 80B2     		uxth	r0, r0
 674 009c FFF7FEFF 		bl	ILI9341_DispStringLine_EN
 675              	.LVL34:
 433:Src/main.c    **** 
 434:Src/main.c    ****   a = (int)testfloat * 1000;
 676              		.loc 1 434 0
 677 00a0 D6F80080 		ldr	r8, [r6]	@ float
 678 00a4 4046     		mov	r0, r8
 679 00a6 FFF7FEFF 		bl	__aeabi_f2iz
 680              	.LVL35:
 681 00aa 0746     		mov	r7, r0
 682 00ac 4FF47A76 		mov	r6, #1000
 683 00b0 06FB00F6 		mul	r6, r6, r0
 684              	.LVL36:
 435:Src/main.c    ****   b = testfloat * 1000 - a;
 685              		.loc 1 435 0
 686 00b4 3849     		ldr	r1, .L33+40
 687 00b6 4046     		mov	r0, r8
 688 00b8 FFF7FEFF 		bl	__aeabi_fmul
 689              	.LVL37:
 690 00bc 8046     		mov	r8, r0
 691 00be 3046     		mov	r0, r6
 692 00c0 FFF7FEFF 		bl	__aeabi_i2f
 693              	.LVL38:
 694 00c4 0146     		mov	r1, r0
 695 00c6 4046     		mov	r0, r8
 696 00c8 FFF7FEFF 		bl	__aeabi_fsub
 697              	.LVL39:
 698 00cc FFF7FEFF 		bl	__aeabi_f2iz
 699              	.LVL40:
ARM GAS  /tmp/ccaKQJa2.s 			page 22


 436:Src/main.c    ****   sprintf(dispBuff, "FLOAT:%d.%03d", (int)testfloat, b);
 700              		.loc 1 436 0
 701 00d0 0346     		mov	r3, r0
 702 00d2 3A46     		mov	r2, r7
 703 00d4 3149     		ldr	r1, .L33+44
 704 00d6 03A8     		add	r0, sp, #12
 705              	.LVL41:
 706 00d8 FFF7FEFF 		bl	sprintf
 707              	.LVL42:
 437:Src/main.c    ****   LCD_ClearLine(LINE(6));
 708              		.loc 1 437 0
 709 00dc FFF7FEFF 		bl	LCD_GetFont
 710              	.LVL43:
 711 00e0 C388     		ldrh	r3, [r0, #6]
 712 00e2 03EB4303 		add	r3, r3, r3, lsl #1
 713 00e6 5800     		lsls	r0, r3, #1
 714 00e8 80B2     		uxth	r0, r0
 715 00ea FFF7FEFF 		bl	LCD_ClearLine
 716              	.LVL44:
 438:Src/main.c    ****   ILI9341_DispStringLine_EN(LINE(6), dispBuff);
 717              		.loc 1 438 0
 718 00ee FFF7FEFF 		bl	LCD_GetFont
 719              	.LVL45:
 720 00f2 C388     		ldrh	r3, [r0, #6]
 721 00f4 03EB4303 		add	r3, r3, r3, lsl #1
 722 00f8 5800     		lsls	r0, r3, #1
 723 00fa 80B2     		uxth	r0, r0
 724 00fc 03A9     		add	r1, sp, #12
 725 00fe FFF7FEFF 		bl	ILI9341_DispStringLine_EN
 726              	.LVL46:
 439:Src/main.c    **** 
 440:Src/main.c    ****   LCD_SetFont(&Font24x32);
 727              		.loc 1 440 0
 728 0102 2748     		ldr	r0, .L33+48
 729 0104 FFF7FEFF 		bl	LCD_SetFont
 730              	.LVL47:
 441:Src/main.c    ****   LCD_SetTextColor(BLUE);
 731              		.loc 1 441 0
 732 0108 1F20     		movs	r0, #31
 733 010a FFF7FEFF 		bl	LCD_SetTextColor
 734              	.LVL48:
 442:Src/main.c    ****   pStr = "TT";
 443:Src/main.c    ****   sprintf(dispBuff, "%*c%s", ((LCD_X_LENGTH / (((sFONT *)LCD_GetFont())->Width)) - strlen(pStr)) / 
 735              		.loc 1 443 0
 736 010e 2488     		ldrh	r4, [r4]
 737 0110 FFF7FEFF 		bl	LCD_GetFont
 738              	.LVL49:
 739 0114 8288     		ldrh	r2, [r0, #4]
 740 0116 B4FBF2F2 		udiv	r2, r4, r2
 741 011a 023A     		subs	r2, r2, #2
 742 011c 214B     		ldr	r3, .L33+52
 743 011e 0093     		str	r3, [sp]
 744 0120 2023     		movs	r3, #32
 745 0122 5208     		lsrs	r2, r2, #1
 746 0124 2049     		ldr	r1, .L33+56
 747 0126 03A8     		add	r0, sp, #12
 748 0128 FFF7FEFF 		bl	sprintf
ARM GAS  /tmp/ccaKQJa2.s 			page 23


 749              	.LVL50:
 444:Src/main.c    ****   LCD_ClearLine(LINE(9));
 750              		.loc 1 444 0
 751 012c FFF7FEFF 		bl	LCD_GetFont
 752              	.LVL51:
 753 0130 C088     		ldrh	r0, [r0, #6]
 754 0132 00EBC000 		add	r0, r0, r0, lsl #3
 755 0136 80B2     		uxth	r0, r0
 756 0138 FFF7FEFF 		bl	LCD_ClearLine
 757              	.LVL52:
 445:Src/main.c    ****   ILI9341_DispStringLine_EN(LINE(9), dispBuff);
 758              		.loc 1 445 0
 759 013c FFF7FEFF 		bl	LCD_GetFont
 760              	.LVL53:
 761 0140 C088     		ldrh	r0, [r0, #6]
 762 0142 00EBC000 		add	r0, r0, r0, lsl #3
 763 0146 03A9     		add	r1, sp, #12
 764 0148 80B2     		uxth	r0, r0
 765 014a FFF7FEFF 		bl	ILI9341_DispStringLine_EN
 766              	.LVL54:
 446:Src/main.c    **** 
 447:Src/main.c    ****   if (testint >= 100)
 767              		.loc 1 447 0
 768 014e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 769 0150 632B     		cmp	r3, #99
 770 0152 01D9     		bls	.L28
 448:Src/main.c    ****     testint = 0;
 771              		.loc 1 448 0
 772 0154 0022     		movs	r2, #0
 773 0156 2A70     		strb	r2, [r5]
 774              	.L28:
 449:Src/main.c    ****   if (testfloat >= 100.00)
 775              		.loc 1 449 0
 776 0158 1449     		ldr	r1, .L33+60
 777 015a 084B     		ldr	r3, .L33+12
 778 015c 1868     		ldr	r0, [r3]	@ float
 779 015e FFF7FEFF 		bl	__aeabi_fcmpge
 780              	.LVL55:
 781 0162 10B1     		cbz	r0, .L27
 450:Src/main.c    ****     testfloat = 0;
 782              		.loc 1 450 0
 783 0164 0022     		movs	r2, #0
 784 0166 054B     		ldr	r3, .L33+12
 785 0168 1A60     		str	r2, [r3]	@ float
 786              	.L27:
 451:Src/main.c    **** }
 787              		.loc 1 451 0
 788 016a 1CB0     		add	sp, sp, #112
 789              	.LCFI23:
 790              		.cfi_def_cfa_offset 24
 791              		@ sp needed
 792 016c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 793              	.LVL56:
 794              	.L34:
 795              		.align	3
 796              	.L33:
 797 0170 7B14AE47 		.word	1202590843
ARM GAS  /tmp/ccaKQJa2.s 			page 24


 798 0174 E17A843F 		.word	1065646817
 799 0178 00000000 		.word	.LANCHOR0
 800 017c 00000000 		.word	.LANCHOR1
 801 0180 00000000 		.word	Font8x16
 802 0184 00000000 		.word	LCD_X_LENGTH
 803 0188 00000000 		.word	LCD_Y_LENGTH
 804 018c 00000000 		.word	.LC0
 805 0190 00000000 		.word	.LANCHOR2
 806 0194 08000000 		.word	.LC1
 807 0198 00007A44 		.word	1148846080
 808 019c 18000000 		.word	.LC2
 809 01a0 00000000 		.word	Font24x32
 810 01a4 30000000 		.word	.LC4
 811 01a8 28000000 		.word	.LC3
 812 01ac 0000C842 		.word	1120403456
 813              		.cfi_endproc
 814              	.LFE74:
 816              		.section	.text.main,"ax",%progbits
 817              		.align	1
 818              		.global	main
 819              		.syntax unified
 820              		.thumb
 821              		.thumb_func
 822              		.fpu softvfp
 824              	main:
 825              	.LFB66:
  95:Src/main.c    ****   /* USER CODE BEGIN 1 */
 826              		.loc 1 95 0
 827              		.cfi_startproc
 828              		@ Volatile: function does not return.
 829              		@ args = 0, pretend = 0, frame = 0
 830              		@ frame_needed = 0, uses_anonymous_args = 0
 831 0000 00B5     		push	{lr}
 832              	.LCFI24:
 833              		.cfi_def_cfa_offset 4
 834              		.cfi_offset 14, -4
 835 0002 83B0     		sub	sp, sp, #12
 836              	.LCFI25:
 837              		.cfi_def_cfa_offset 16
 103:Src/main.c    **** 
 838              		.loc 1 103 0
 839 0004 FFF7FEFF 		bl	HAL_Init
 840              	.LVL57:
 106:Src/main.c    ****   ILI9341_Init();
 841              		.loc 1 106 0
 842 0008 FFF7FEFF 		bl	DEBUG_USART_Config
 843              	.LVL58:
 107:Src/main.c    ****   /* USER CODE END Init */
 844              		.loc 1 107 0
 845 000c FFF7FEFF 		bl	ILI9341_Init
 846              	.LVL59:
 111:Src/main.c    **** 
 847              		.loc 1 111 0
 848 0010 FFF7FEFF 		bl	SystemClock_Config
 849              	.LVL60:
 118:Src/main.c    ****   MX_DMA_Init();
 850              		.loc 1 118 0
ARM GAS  /tmp/ccaKQJa2.s 			page 25


 851 0014 FFF7FEFF 		bl	MX_GPIO_Init
 852              	.LVL61:
 119:Src/main.c    ****   MX_DAC_Init();
 853              		.loc 1 119 0
 854 0018 FFF7FEFF 		bl	MX_DMA_Init
 855              	.LVL62:
 120:Src/main.c    ****   MX_TIM3_Init();
 856              		.loc 1 120 0
 857 001c FFF7FEFF 		bl	MX_DAC_Init
 858              	.LVL63:
 121:Src/main.c    ****   MX_TIM6_Init();
 859              		.loc 1 121 0
 860 0020 FFF7FEFF 		bl	MX_TIM3_Init
 861              	.LVL64:
 122:Src/main.c    ****   MX_TIM1_Init();
 862              		.loc 1 122 0
 863 0024 FFF7FEFF 		bl	MX_TIM6_Init
 864              	.LVL65:
 123:Src/main.c    ****   /* USER CODE BEGIN 2 */
 865              		.loc 1 123 0
 866 0028 FFF7FEFF 		bl	MX_TIM1_Init
 867              	.LVL66:
 125:Src/main.c    ****   HAL_TIM_Base_Start(&htim3);
 868              		.loc 1 125 0
 869 002c 1A48     		ldr	r0, .L38
 870 002e FFF7FEFF 		bl	HAL_TIM_Base_Start
 871              	.LVL67:
 126:Src/main.c    ****   HAL_TIM_Base_Start(&htim6);
 872              		.loc 1 126 0
 873 0032 1A4C     		ldr	r4, .L38+4
 874 0034 2046     		mov	r0, r4
 875 0036 FFF7FEFF 		bl	HAL_TIM_Base_Start
 876              	.LVL68:
 127:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim3);
 877              		.loc 1 127 0
 878 003a 1948     		ldr	r0, .L38+8
 879 003c FFF7FEFF 		bl	HAL_TIM_Base_Start
 880              	.LVL69:
 128:Src/main.c    ****   HAL_DAC_Start_DMA(&hdac, DAC_CHANNEL_2, (uint32_t *)CH_Value, 320, DAC_ALIGN_12B_R);
 881              		.loc 1 128 0
 882 0040 2046     		mov	r0, r4
 883 0042 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 884              	.LVL70:
 129:Src/main.c    ****   /* USER CODE END 2 */
 885              		.loc 1 129 0
 886 0046 0023     		movs	r3, #0
 887 0048 0093     		str	r3, [sp]
 888 004a 4FF4A073 		mov	r3, #320
 889 004e 154A     		ldr	r2, .L38+12
 890 0050 1021     		movs	r1, #16
 891 0052 1548     		ldr	r0, .L38+16
 892 0054 FFF7FEFF 		bl	HAL_DAC_Start_DMA
 893              	.LVL71:
 894              	.L36:
 136:Src/main.c    ****     /* USER CODE END WHILE */
 895              		.loc 1 136 0 discriminator 1
 896 0058 FFF7FEFF 		bl	Test
ARM GAS  /tmp/ccaKQJa2.s 			page 26


 897              	.LVL72:
 140:Src/main.c    ****     //printf("This is a test!");
 898              		.loc 1 140 0 discriminator 1
 899 005c 134C     		ldr	r4, .L38+20
 900 005e 0421     		movs	r1, #4
 901 0060 2046     		mov	r0, r4
 902 0062 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 903              	.LVL73:
 142:Src/main.c    ****     HAL_GPIO_TogglePin(LED_1_GPIO_Port, LED_1_Pin);
 904              		.loc 1 142 0 discriminator 1
 905 0066 C820     		movs	r0, #200
 906 0068 FFF7FEFF 		bl	HAL_Delay
 907              	.LVL74:
 143:Src/main.c    ****     HAL_Delay(200);
 908              		.loc 1 143 0 discriminator 1
 909 006c 0421     		movs	r1, #4
 910 006e 2046     		mov	r0, r4
 911 0070 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 912              	.LVL75:
 144:Src/main.c    ****     HAL_GPIO_TogglePin(LED_2_GPIO_Port, LED_2_Pin);
 913              		.loc 1 144 0 discriminator 1
 914 0074 C820     		movs	r0, #200
 915 0076 FFF7FEFF 		bl	HAL_Delay
 916              	.LVL76:
 145:Src/main.c    ****     HAL_Delay(200);
 917              		.loc 1 145 0 discriminator 1
 918 007a 0821     		movs	r1, #8
 919 007c 2046     		mov	r0, r4
 920 007e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 921              	.LVL77:
 146:Src/main.c    ****     HAL_GPIO_TogglePin(LED_2_GPIO_Port, LED_2_Pin);
 922              		.loc 1 146 0 discriminator 1
 923 0082 C820     		movs	r0, #200
 924 0084 FFF7FEFF 		bl	HAL_Delay
 925              	.LVL78:
 147:Src/main.c    ****     HAL_Delay(200);
 926              		.loc 1 147 0 discriminator 1
 927 0088 0821     		movs	r1, #8
 928 008a 2046     		mov	r0, r4
 929 008c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 930              	.LVL79:
 148:Src/main.c    ****   }
 931              		.loc 1 148 0 discriminator 1
 932 0090 C820     		movs	r0, #200
 933 0092 FFF7FEFF 		bl	HAL_Delay
 934              	.LVL80:
 935 0096 DFE7     		b	.L36
 936              	.L39:
 937              		.align	2
 938              	.L38:
 939 0098 00000000 		.word	htim1
 940 009c 00000000 		.word	htim3
 941 00a0 00000000 		.word	htim6
 942 00a4 00000000 		.word	.LANCHOR3
 943 00a8 00000000 		.word	hdac
 944 00ac 00100140 		.word	1073811456
 945              		.cfi_endproc
ARM GAS  /tmp/ccaKQJa2.s 			page 27


 946              	.LFE66:
 948              		.section	.text.Error_Handler,"ax",%progbits
 949              		.align	1
 950              		.global	Error_Handler
 951              		.syntax unified
 952              		.thumb
 953              		.thumb_func
 954              		.fpu softvfp
 956              	Error_Handler:
 957              	.LFB75:
 452:Src/main.c    **** /* USER CODE END 4 */
 453:Src/main.c    **** 
 454:Src/main.c    **** /**
 455:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 456:Src/main.c    ****   * @retval None
 457:Src/main.c    ****   */
 458:Src/main.c    **** void Error_Handler(void)
 459:Src/main.c    **** {
 958              		.loc 1 459 0
 959              		.cfi_startproc
 960              		@ args = 0, pretend = 0, frame = 0
 961              		@ frame_needed = 0, uses_anonymous_args = 0
 962              		@ link register save eliminated.
 963 0000 7047     		bx	lr
 964              		.cfi_endproc
 965              	.LFE75:
 967              		.global	CNT
 968              		.global	CH_Value
 969              		.comm	htim6,64,4
 970              		.comm	htim3,64,4
 971              		.comm	htim1,64,4
 972              		.comm	hdma_dac_ch2,68,4
 973              		.comm	hdac,20,4
 974              		.section	.bss.CNT,"aw",%nobits
 975              		.align	2
 976              		.set	.LANCHOR2,. + 0
 979              	CNT:
 980 0000 00000000 		.space	4
 981              		.section	.bss.testfloat.8241,"aw",%nobits
 982              		.align	2
 983              		.set	.LANCHOR1,. + 0
 986              	testfloat.8241:
 987 0000 00000000 		.space	4
 988              		.section	.bss.testint.8240,"aw",%nobits
 989              		.set	.LANCHOR0,. + 0
 992              	testint.8240:
 993 0000 00       		.space	1
 994              		.section	.data.CH_Value,"aw",%progbits
 995              		.align	2
 996              		.set	.LANCHOR3,. + 0
 999              	CH_Value:
 1000 0000 0008     		.short	2048
 1001 0002 2808     		.short	2088
 1002 0004 5108     		.short	2129
 1003 0006 7908     		.short	2169
 1004 0008 A108     		.short	2209
 1005 000a C908     		.short	2249
ARM GAS  /tmp/ccaKQJa2.s 			page 28


 1006 000c F108     		.short	2289
 1007 000e 1909     		.short	2329
 1008 0010 4109     		.short	2369
 1009 0012 6909     		.short	2409
 1010 0014 9109     		.short	2449
 1011 0016 B809     		.short	2488
 1012 0018 E009     		.short	2528
 1013 001a 070A     		.short	2567
 1014 001c 2E0A     		.short	2606
 1015 001e 540A     		.short	2644
 1016 0020 7B0A     		.short	2683
 1017 0022 A10A     		.short	2721
 1018 0024 C70A     		.short	2759
 1019 0026 ED0A     		.short	2797
 1020 0028 120B     		.short	2834
 1021 002a 370B     		.short	2871
 1022 002c 5C0B     		.short	2908
 1023 002e 800B     		.short	2944
 1024 0030 A40B     		.short	2980
 1025 0032 C80B     		.short	3016
 1026 0034 EC0B     		.short	3052
 1027 0036 0F0C     		.short	3087
 1028 0038 310C     		.short	3121
 1029 003a 530C     		.short	3155
 1030 003c 750C     		.short	3189
 1031 003e 960C     		.short	3222
 1032 0040 B70C     		.short	3255
 1033 0042 D70C     		.short	3287
 1034 0044 F70C     		.short	3319
 1035 0046 170D     		.short	3351
 1036 0048 360D     		.short	3382
 1037 004a 540D     		.short	3412
 1038 004c 720D     		.short	3442
 1039 004e 8F0D     		.short	3471
 1040 0050 AC0D     		.short	3500
 1041 0052 C80D     		.short	3528
 1042 0054 E30D     		.short	3555
 1043 0056 FE0D     		.short	3582
 1044 0058 190E     		.short	3609
 1045 005a 330E     		.short	3635
 1046 005c 4C0E     		.short	3660
 1047 005e 640E     		.short	3684
 1048 0060 7C0E     		.short	3708
 1049 0062 940E     		.short	3732
 1050 0064 AA0E     		.short	3754
 1051 0066 C00E     		.short	3776
 1052 0068 D60E     		.short	3798
 1053 006a EA0E     		.short	3818
 1054 006c FE0E     		.short	3838
 1055 006e 110F     		.short	3857
 1056 0070 240F     		.short	3876
 1057 0072 360F     		.short	3894
 1058 0074 470F     		.short	3911
 1059 0076 570F     		.short	3927
 1060 0078 670F     		.short	3943
 1061 007a 760F     		.short	3958
 1062 007c 840F     		.short	3972
ARM GAS  /tmp/ccaKQJa2.s 			page 29


 1063 007e 920F     		.short	3986
 1064 0080 9E0F     		.short	3998
 1065 0082 AA0F     		.short	4010
 1066 0084 B50F     		.short	4021
 1067 0086 C00F     		.short	4032
 1068 0088 C90F     		.short	4041
 1069 008a D20F     		.short	4050
 1070 008c DA0F     		.short	4058
 1071 008e E20F     		.short	4066
 1072 0090 E80F     		.short	4072
 1073 0092 EE0F     		.short	4078
 1074 0094 F30F     		.short	4083
 1075 0096 F70F     		.short	4087
 1076 0098 FA0F     		.short	4090
 1077 009a FD0F     		.short	4093
 1078 009c FF0F     		.short	4095
 1079 009e FF0F     		.short	4095
 1080 00a0 FF0F     		.short	4095
 1081 00a2 FF0F     		.short	4095
 1082 00a4 FE0F     		.short	4094
 1083 00a6 FC0F     		.short	4092
 1084 00a8 F90F     		.short	4089
 1085 00aa F50F     		.short	4085
 1086 00ac F10F     		.short	4081
 1087 00ae EB0F     		.short	4075
 1088 00b0 E50F     		.short	4069
 1089 00b2 DE0F     		.short	4062
 1090 00b4 D60F     		.short	4054
 1091 00b6 CE0F     		.short	4046
 1092 00b8 C50F     		.short	4037
 1093 00ba BB0F     		.short	4027
 1094 00bc B00F     		.short	4016
 1095 00be A40F     		.short	4004
 1096 00c0 980F     		.short	3992
 1097 00c2 8B0F     		.short	3979
 1098 00c4 7D0F     		.short	3965
 1099 00c6 6F0F     		.short	3951
 1100 00c8 5F0F     		.short	3935
 1101 00ca 4F0F     		.short	3919
 1102 00cc 3E0F     		.short	3902
 1103 00ce 2D0F     		.short	3885
 1104 00d0 1B0F     		.short	3867
 1105 00d2 080F     		.short	3848
 1106 00d4 F40E     		.short	3828
 1107 00d6 E00E     		.short	3808
 1108 00d8 CB0E     		.short	3787
 1109 00da B50E     		.short	3765
 1110 00dc 9F0E     		.short	3743
 1111 00de 880E     		.short	3720
 1112 00e0 710E     		.short	3697
 1113 00e2 580E     		.short	3672
 1114 00e4 3F0E     		.short	3647
 1115 00e6 260E     		.short	3622
 1116 00e8 0C0E     		.short	3596
 1117 00ea F10D     		.short	3569
 1118 00ec D60D     		.short	3542
 1119 00ee BA0D     		.short	3514
ARM GAS  /tmp/ccaKQJa2.s 			page 30


 1120 00f0 9D0D     		.short	3485
 1121 00f2 800D     		.short	3456
 1122 00f4 630D     		.short	3427
 1123 00f6 450D     		.short	3397
 1124 00f8 260D     		.short	3366
 1125 00fa 070D     		.short	3335
 1126 00fc E70C     		.short	3303
 1127 00fe C70C     		.short	3271
 1128 0100 A70C     		.short	3239
 1129 0102 860C     		.short	3206
 1130 0104 640C     		.short	3172
 1131 0106 420C     		.short	3138
 1132 0108 200C     		.short	3104
 1133 010a FD0B     		.short	3069
 1134 010c DA0B     		.short	3034
 1135 010e B60B     		.short	2998
 1136 0110 920B     		.short	2962
 1137 0112 6E0B     		.short	2926
 1138 0114 4A0B     		.short	2890
 1139 0116 250B     		.short	2853
 1140 0118 FF0A     		.short	2815
 1141 011a DA0A     		.short	2778
 1142 011c B40A     		.short	2740
 1143 011e 8E0A     		.short	2702
 1144 0120 680A     		.short	2664
 1145 0122 410A     		.short	2625
 1146 0124 1A0A     		.short	2586
 1147 0126 F309     		.short	2547
 1148 0128 CC09     		.short	2508
 1149 012a A509     		.short	2469
 1150 012c 7D09     		.short	2429
 1151 012e 5509     		.short	2389
 1152 0130 2D09     		.short	2349
 1153 0132 0509     		.short	2309
 1154 0134 DD08     		.short	2269
 1155 0136 B508     		.short	2229
 1156 0138 8D08     		.short	2189
 1157 013a 6508     		.short	2149
 1158 013c 3C08     		.short	2108
 1159 013e 1408     		.short	2068
 1160 0140 EC07     		.short	2028
 1161 0142 C407     		.short	1988
 1162 0144 9B07     		.short	1947
 1163 0146 7307     		.short	1907
 1164 0148 4B07     		.short	1867
 1165 014a 2307     		.short	1827
 1166 014c FB06     		.short	1787
 1167 014e D306     		.short	1747
 1168 0150 AB06     		.short	1707
 1169 0152 8306     		.short	1667
 1170 0154 5B06     		.short	1627
 1171 0156 3406     		.short	1588
 1172 0158 0D06     		.short	1549
 1173 015a E605     		.short	1510
 1174 015c BF05     		.short	1471
 1175 015e 9805     		.short	1432
 1176 0160 7205     		.short	1394
ARM GAS  /tmp/ccaKQJa2.s 			page 31


 1177 0162 4C05     		.short	1356
 1178 0164 2605     		.short	1318
 1179 0166 0105     		.short	1281
 1180 0168 DB04     		.short	1243
 1181 016a B604     		.short	1206
 1182 016c 9204     		.short	1170
 1183 016e 6E04     		.short	1134
 1184 0170 4A04     		.short	1098
 1185 0172 2604     		.short	1062
 1186 0174 0304     		.short	1027
 1187 0176 E003     		.short	992
 1188 0178 BE03     		.short	958
 1189 017a 9C03     		.short	924
 1190 017c 7A03     		.short	890
 1191 017e 5903     		.short	857
 1192 0180 3903     		.short	825
 1193 0182 1903     		.short	793
 1194 0184 F902     		.short	761
 1195 0186 DA02     		.short	730
 1196 0188 BB02     		.short	699
 1197 018a 9D02     		.short	669
 1198 018c 8002     		.short	640
 1199 018e 6302     		.short	611
 1200 0190 4602     		.short	582
 1201 0192 2A02     		.short	554
 1202 0194 0F02     		.short	527
 1203 0196 F401     		.short	500
 1204 0198 DA01     		.short	474
 1205 019a C101     		.short	449
 1206 019c A801     		.short	424
 1207 019e 8F01     		.short	399
 1208 01a0 7801     		.short	376
 1209 01a2 6101     		.short	353
 1210 01a4 4B01     		.short	331
 1211 01a6 3501     		.short	309
 1212 01a8 2001     		.short	288
 1213 01aa 0C01     		.short	268
 1214 01ac F800     		.short	248
 1215 01ae E500     		.short	229
 1216 01b0 D300     		.short	211
 1217 01b2 C200     		.short	194
 1218 01b4 B100     		.short	177
 1219 01b6 A100     		.short	161
 1220 01b8 9100     		.short	145
 1221 01ba 8300     		.short	131
 1222 01bc 7500     		.short	117
 1223 01be 6800     		.short	104
 1224 01c0 5C00     		.short	92
 1225 01c2 5000     		.short	80
 1226 01c4 4500     		.short	69
 1227 01c6 3B00     		.short	59
 1228 01c8 3200     		.short	50
 1229 01ca 2A00     		.short	42
 1230 01cc 2200     		.short	34
 1231 01ce 1B00     		.short	27
 1232 01d0 1500     		.short	21
 1233 01d2 0F00     		.short	15
ARM GAS  /tmp/ccaKQJa2.s 			page 32


 1234 01d4 0B00     		.short	11
 1235 01d6 0700     		.short	7
 1236 01d8 0400     		.short	4
 1237 01da 0200     		.short	2
 1238 01dc 0100     		.short	1
 1239 01de 0000     		.short	0
 1240 01e0 0000     		.short	0
 1241 01e2 0100     		.short	1
 1242 01e4 0300     		.short	3
 1243 01e6 0600     		.short	6
 1244 01e8 0900     		.short	9
 1245 01ea 0D00     		.short	13
 1246 01ec 1200     		.short	18
 1247 01ee 1800     		.short	24
 1248 01f0 1E00     		.short	30
 1249 01f2 2600     		.short	38
 1250 01f4 2E00     		.short	46
 1251 01f6 3700     		.short	55
 1252 01f8 4000     		.short	64
 1253 01fa 4B00     		.short	75
 1254 01fc 5600     		.short	86
 1255 01fe 6200     		.short	98
 1256 0200 6E00     		.short	110
 1257 0202 7C00     		.short	124
 1258 0204 8A00     		.short	138
 1259 0206 9900     		.short	153
 1260 0208 A900     		.short	169
 1261 020a B900     		.short	185
 1262 020c CA00     		.short	202
 1263 020e DC00     		.short	220
 1264 0210 EF00     		.short	239
 1265 0212 0201     		.short	258
 1266 0214 1601     		.short	278
 1267 0216 2A01     		.short	298
 1268 0218 4001     		.short	320
 1269 021a 5601     		.short	342
 1270 021c 6C01     		.short	364
 1271 021e 8401     		.short	388
 1272 0220 9C01     		.short	412
 1273 0222 B401     		.short	436
 1274 0224 CD01     		.short	461
 1275 0226 E701     		.short	487
 1276 0228 0202     		.short	514
 1277 022a 1D02     		.short	541
 1278 022c 3802     		.short	568
 1279 022e 5402     		.short	596
 1280 0230 7102     		.short	625
 1281 0232 8E02     		.short	654
 1282 0234 AC02     		.short	684
 1283 0236 CA02     		.short	714
 1284 0238 E902     		.short	745
 1285 023a 0903     		.short	777
 1286 023c 2903     		.short	809
 1287 023e 4903     		.short	841
 1288 0240 6A03     		.short	874
 1289 0242 8B03     		.short	907
 1290 0244 AD03     		.short	941
ARM GAS  /tmp/ccaKQJa2.s 			page 33


 1291 0246 CF03     		.short	975
 1292 0248 F103     		.short	1009
 1293 024a 1404     		.short	1044
 1294 024c 3804     		.short	1080
 1295 024e 5C04     		.short	1116
 1296 0250 8004     		.short	1152
 1297 0252 A404     		.short	1188
 1298 0254 C904     		.short	1225
 1299 0256 EE04     		.short	1262
 1300 0258 1305     		.short	1299
 1301 025a 3905     		.short	1337
 1302 025c 5F05     		.short	1375
 1303 025e 8505     		.short	1413
 1304 0260 AC05     		.short	1452
 1305 0262 D205     		.short	1490
 1306 0264 F905     		.short	1529
 1307 0266 2006     		.short	1568
 1308 0268 4806     		.short	1608
 1309 026a 6F06     		.short	1647
 1310 026c 9706     		.short	1687
 1311 026e BF06     		.short	1727
 1312 0270 E706     		.short	1767
 1313 0272 0F07     		.short	1807
 1314 0274 3707     		.short	1847
 1315 0276 5F07     		.short	1887
 1316 0278 8707     		.short	1927
 1317 027a AF07     		.short	1967
 1318 027c D807     		.short	2008
 1319 027e 0008     		.short	2048
 1320              		.section	.rodata.Test.str1.4,"aMS",%progbits,1
 1321              		.align	2
 1322              	.LC0:
 1323 0000 494E543A 		.ascii	"INT:%d\000"
 1323      256400
 1324 0007 00       		.space	1
 1325              	.LC1:
 1326 0008 46726571 		.ascii	"Frequency:%d\000"
 1326      75656E63 
 1326      793A2564 
 1326      00
 1327 0015 000000   		.space	3
 1328              	.LC2:
 1329 0018 464C4F41 		.ascii	"FLOAT:%d.%03d\000"
 1329      543A2564 
 1329      2E253033 
 1329      6400
 1330 0026 0000     		.space	2
 1331              	.LC3:
 1332 0028 252A6325 		.ascii	"%*c%s\000"
 1332      7300
 1333 002e 0000     		.space	2
 1334              	.LC4:
 1335 0030 545400   		.ascii	"TT\000"
 1336              		.text
 1337              	.Letext0:
 1338              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1339              		.file 3 "/usr/include/newlib/sys/_stdint.h"
ARM GAS  /tmp/ccaKQJa2.s 			page 34


 1340              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 1341              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1342              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 1343              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1344              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1345              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1346              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1347              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1348              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dac.h"
 1349              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1350              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1351              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1352              		.file 16 "/usr/include/newlib/sys/lock.h"
 1353              		.file 17 "/usr/include/newlib/sys/_types.h"
 1354              		.file 18 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 1355              		.file 19 "/usr/include/newlib/sys/reent.h"
 1356              		.file 20 "Inc/bsp_debug_usart.h"
 1357              		.file 21 "Inc/fonts.h"
 1358              		.file 22 "Inc/bsp_ili9341_lcd.h"
 1359              		.file 23 "/usr/include/newlib/stdlib.h"
 1360              		.file 24 "/usr/include/newlib/stdio.h"
 1361              		.file 25 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 1362              		.file 26 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
ARM GAS  /tmp/ccaKQJa2.s 			page 35


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccaKQJa2.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccaKQJa2.s:22     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccaKQJa2.s:122    .text.MX_GPIO_Init:0000000000000080 $d
     /tmp/ccaKQJa2.s:128    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccaKQJa2.s:134    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccaKQJa2.s:177    .text.MX_DMA_Init:0000000000000030 $d
     /tmp/ccaKQJa2.s:182    .text.MX_DAC_Init:0000000000000000 $t
     /tmp/ccaKQJa2.s:188    .text.MX_DAC_Init:0000000000000000 MX_DAC_Init
     /tmp/ccaKQJa2.s:235    .text.MX_DAC_Init:000000000000002c $d
                            *COM*:0000000000000014 hdac
     /tmp/ccaKQJa2.s:241    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccaKQJa2.s:247    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccaKQJa2.s:317    .text.MX_TIM3_Init:0000000000000050 $d
                            *COM*:0000000000000040 htim3
     /tmp/ccaKQJa2.s:323    .text.MX_TIM6_Init:0000000000000000 $t
     /tmp/ccaKQJa2.s:329    .text.MX_TIM6_Init:0000000000000000 MX_TIM6_Init
     /tmp/ccaKQJa2.s:384    .text.MX_TIM6_Init:0000000000000034 $d
                            *COM*:0000000000000040 htim6
     /tmp/ccaKQJa2.s:390    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccaKQJa2.s:396    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccaKQJa2.s:472    .text.MX_TIM1_Init:0000000000000050 $d
                            *COM*:0000000000000040 htim1
     /tmp/ccaKQJa2.s:478    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccaKQJa2.s:485    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccaKQJa2.s:568    .text.Test:0000000000000000 $t
     /tmp/ccaKQJa2.s:575    .text.Test:0000000000000000 Test
     /tmp/ccaKQJa2.s:797    .text.Test:0000000000000170 $d
     /tmp/ccaKQJa2.s:817    .text.main:0000000000000000 $t
     /tmp/ccaKQJa2.s:824    .text.main:0000000000000000 main
     /tmp/ccaKQJa2.s:939    .text.main:0000000000000098 $d
     /tmp/ccaKQJa2.s:949    .text.Error_Handler:0000000000000000 $t
     /tmp/ccaKQJa2.s:956    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccaKQJa2.s:979    .bss.CNT:0000000000000000 CNT
     /tmp/ccaKQJa2.s:999    .data.CH_Value:0000000000000000 CH_Value
                            *COM*:0000000000000044 hdma_dac_ch2
     /tmp/ccaKQJa2.s:975    .bss.CNT:0000000000000000 $d
     /tmp/ccaKQJa2.s:982    .bss.testfloat.8241:0000000000000000 $d
     /tmp/ccaKQJa2.s:986    .bss.testfloat.8241:0000000000000000 testfloat.8241
     /tmp/ccaKQJa2.s:992    .bss.testint.8240:0000000000000000 testint.8240
     /tmp/ccaKQJa2.s:993    .bss.testint.8240:0000000000000000 $d
     /tmp/ccaKQJa2.s:995    .data.CH_Value:0000000000000000 $d
     /tmp/ccaKQJa2.s:1321   .rodata.Test.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_DAC_Init
HAL_DAC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
memset
ARM GAS  /tmp/ccaKQJa2.s 			page 36


HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_f2d
__aeabi_dadd
__aeabi_d2f
__aeabi_f2iz
__aeabi_fmul
__aeabi_i2f
__aeabi_fsub
__aeabi_fcmpge
LCD_SetFont
LCD_SetColors
ILI9341_Clear
sprintf
LCD_GetFont
LCD_ClearLine
ILI9341_DispStringLine_EN
LCD_SetTextColor
Font8x16
LCD_X_LENGTH
LCD_Y_LENGTH
Font24x32
HAL_Init
DEBUG_USART_Config
ILI9341_Init
HAL_TIM_Base_Start
HAL_TIM_Base_Start_IT
HAL_DAC_Start_DMA
HAL_GPIO_TogglePin
HAL_Delay
