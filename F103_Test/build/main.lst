ARM GAS  /tmp/ccSn9RSi.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB75:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****  ******************************************************************************
   4:Src/main.c    ****  * @file           : main.c
   5:Src/main.c    ****  * @brief        : Main program body
   6:Src/main.c    ****  ******************************************************************************
   7:Src/main.c    ****  * @attention
   8:Src/main.c    ****  *
   9:Src/main.c    ****  * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****  * All rights reserved.</center></h2>
  11:Src/main.c    ****  *
  12:Src/main.c    ****  * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****  * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****  * License. You may obtain a copy of the License at:
  15:Src/main.c    ****  *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****  *
  17:Src/main.c    ****  ******************************************************************************
  18:Src/main.c    ****  */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
ARM GAS  /tmp/ccSn9RSi.s 			page 2


  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** /* USER CODE END PD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PM */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* USER CODE END PM */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  44:Src/main.c    **** DAC_HandleTypeDef hdac;
  45:Src/main.c    **** DMA_HandleTypeDef hdma_dac_ch2;
  46:Src/main.c    **** 
  47:Src/main.c    **** TIM_HandleTypeDef htim1;
  48:Src/main.c    **** TIM_HandleTypeDef htim3;
  49:Src/main.c    **** TIM_HandleTypeDef htim6;
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE BEGIN PV */
  52:Src/main.c    **** uint16_t CH_Value[320] = {
  53:Src/main.c    ****     2048, 2088, 2129, 2169, 2209, 2249, 2289, 2329, 2369, 2409, 2449, 2488, 2528, 2567, 2606, 2644,
  54:Src/main.c    ****     2797, 2834, 2871, 2908, 2944, 2980, 3016, 3052, 3087, 3121, 3155, 3189, 3222, 3255, 3287, 3319,
  55:Src/main.c    ****     3442, 3471, 3500, 3528, 3555, 3582, 3609, 3635, 3660, 3684, 3708, 3732, 3754, 3776, 3798, 3818,
  56:Src/main.c    ****     3894, 3911, 3927, 3943, 3958, 3972, 3986, 3998, 4010, 4021, 4032, 4041, 4050, 4058, 4066, 4072,
  57:Src/main.c    ****     4090, 4093, 4095, 4095, 4095, 4095, 4094, 4092, 4089, 4085, 4081, 4075, 4069, 4062, 4054, 4046,
  58:Src/main.c    ****     4004, 3992, 3979, 3965, 3951, 3935, 3919, 3902, 3885, 3867, 3848, 3828, 3808, 3787, 3765, 3743,
  59:Src/main.c    ****     3647, 3622, 3596, 3569, 3542, 3514, 3485, 3456, 3427, 3397, 3366, 3335, 3303, 3271, 3239, 3206,
  60:Src/main.c    ****     3069, 3034, 2998, 2962, 2926, 2890, 2853, 2815, 2778, 2740, 2702, 2664, 2625, 2586, 2547, 2508,
  61:Src/main.c    ****     2349, 2309, 2269, 2229, 2189, 2149, 2108, 2068, 2028, 1988, 1947, 1907, 1867, 1827, 1787, 1747,
  62:Src/main.c    ****     1588, 1549, 1510, 1471, 1432, 1394, 1356, 1318, 1281, 1243, 1206, 1170, 1134, 1098, 1062, 1027,
  63:Src/main.c    ****     890,  857,  825,  793,  761,  730,  699,  669,  640,  611,  582,  554,  527,  500,  474,  449, 
  64:Src/main.c    ****     353,  331,  309,  288,  268,  248,  229,  211,  194,  177,  161,  145,  131,  117,  104,  92,  
  65:Src/main.c    ****     50,   42,   34,   27,   21,   15,   11,   7,    4,    2,    1,    0,    0,    1,    3,    6,   
  66:Src/main.c    ****     24,   30,   38,   46,   55,   64,   75,   86,   98,   110,  124,  138,  153,  169,  185,  202, 
  67:Src/main.c    ****     278,  298,  320,  342,  364,  388,  412,  436,  461,  487,  514,  541,  568,  596,  625,  654, 
  68:Src/main.c    ****     777,  809,  841,  874,  907,  941,  975,  1009, 1044, 1080, 1116, 1152, 1188, 1225, 1262, 1299,
  69:Src/main.c    ****     1452, 1490, 1529, 1568, 1608, 1647, 1687, 1727, 1767, 1807, 1847, 1887, 1927, 1967, 2008, 2048}
  70:Src/main.c    **** uint32_t CNT = 0;
  71:Src/main.c    **** /* USER CODE END PV */
  72:Src/main.c    **** 
  73:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  74:Src/main.c    **** void SystemClock_Config(void);
  75:Src/main.c    **** static void MX_GPIO_Init(void);
  76:Src/main.c    **** static void MX_DMA_Init(void);
  77:Src/main.c    **** static void MX_DAC_Init(void);
  78:Src/main.c    **** static void MX_TIM3_Init(void);
  79:Src/main.c    **** static void MX_TIM6_Init(void);
  80:Src/main.c    **** static void MX_TIM1_Init(void);
  81:Src/main.c    **** /* USER CODE BEGIN PFP */
  82:Src/main.c    **** void Test(void);
  83:Src/main.c    **** /* USER CODE END PFP */
  84:Src/main.c    **** 
  85:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  86:Src/main.c    **** /* USER CODE BEGIN 0 */
  87:Src/main.c    **** 
  88:Src/main.c    **** /* USER CODE END 0 */
  89:Src/main.c    **** 
  90:Src/main.c    **** /**
ARM GAS  /tmp/ccSn9RSi.s 			page 3


  91:Src/main.c    ****   * @brief  The application entry point.
  92:Src/main.c    ****   * @retval int
  93:Src/main.c    ****   */
  94:Src/main.c    **** int main(void)
  95:Src/main.c    **** {
  96:Src/main.c    ****   /* USER CODE BEGIN 1 */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* USER CODE END 1 */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 103:Src/main.c    ****   HAL_Init();
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE BEGIN Init */
 106:Src/main.c    ****   DEBUG_USART_Config();
 107:Src/main.c    ****   ILI9341_Init();
 108:Src/main.c    ****   /* USER CODE END Init */
 109:Src/main.c    **** 
 110:Src/main.c    ****   /* Configure the system clock */
 111:Src/main.c    ****   SystemClock_Config();
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* USER CODE END SysInit */
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* Initialize all configured peripherals */
 118:Src/main.c    ****   MX_GPIO_Init();
 119:Src/main.c    ****   MX_DMA_Init();
 120:Src/main.c    ****   MX_DAC_Init();
 121:Src/main.c    ****   MX_TIM3_Init();
 122:Src/main.c    ****   MX_TIM6_Init();
 123:Src/main.c    ****   MX_TIM1_Init();
 124:Src/main.c    ****   /* USER CODE BEGIN 2 */
 125:Src/main.c    ****   HAL_TIM_Base_Start(&htim1);
 126:Src/main.c    ****   HAL_TIM_Base_Start(&htim3);
 127:Src/main.c    ****   HAL_TIM_Base_Start(&htim6);
 128:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim3);
 129:Src/main.c    ****   HAL_DAC_Start_DMA(&hdac, DAC_CHANNEL_2, (uint32_t *)CH_Value, 320, DAC_ALIGN_12B_R);
 130:Src/main.c    ****   /* USER CODE END 2 */
 131:Src/main.c    **** 
 132:Src/main.c    ****   /* Infinite loop */
 133:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 134:Src/main.c    ****   while (1)
 135:Src/main.c    ****   {
 136:Src/main.c    ****     Test();
 137:Src/main.c    ****     /* USER CODE END WHILE */
 138:Src/main.c    **** 
 139:Src/main.c    ****     /* USER CODE BEGIN 3 */
 140:Src/main.c    ****     HAL_GPIO_TogglePin(LED_1_GPIO_Port, LED_1_Pin);
 141:Src/main.c    ****     //printf("This is a test!");
 142:Src/main.c    ****     HAL_Delay(200);
 143:Src/main.c    ****     HAL_GPIO_TogglePin(LED_1_GPIO_Port, LED_1_Pin);
 144:Src/main.c    ****     HAL_Delay(200);
 145:Src/main.c    ****     HAL_GPIO_TogglePin(LED_2_GPIO_Port, LED_2_Pin);
 146:Src/main.c    ****     HAL_Delay(200);
 147:Src/main.c    ****     HAL_GPIO_TogglePin(LED_2_GPIO_Port, LED_2_Pin);
ARM GAS  /tmp/ccSn9RSi.s 			page 4


 148:Src/main.c    ****     HAL_Delay(200);
 149:Src/main.c    ****   }
 150:Src/main.c    ****   /* USER CODE END 3 */
 151:Src/main.c    **** }
 152:Src/main.c    **** 
 153:Src/main.c    **** /**
 154:Src/main.c    ****   * @brief System Clock Configuration
 155:Src/main.c    ****   * @retval None
 156:Src/main.c    ****   */
 157:Src/main.c    **** void SystemClock_Config(void)
 158:Src/main.c    **** {
 159:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 160:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 161:Src/main.c    **** 
 162:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 163:Src/main.c    ****   */
 164:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 165:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 166:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 167:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 168:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 169:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 170:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 171:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 172:Src/main.c    ****   {
 173:Src/main.c    ****     Error_Handler();
 174:Src/main.c    ****   }
 175:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 176:Src/main.c    ****   */
 177:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 178:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 179:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 180:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 181:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 182:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 183:Src/main.c    **** 
 184:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 185:Src/main.c    ****   {
 186:Src/main.c    ****     Error_Handler();
 187:Src/main.c    ****   }
 188:Src/main.c    **** }
 189:Src/main.c    **** 
 190:Src/main.c    **** /**
 191:Src/main.c    ****   * @brief DAC Initialization Function
 192:Src/main.c    ****   * @param None
 193:Src/main.c    ****   * @retval None
 194:Src/main.c    ****   */
 195:Src/main.c    **** static void MX_DAC_Init(void)
 196:Src/main.c    **** {
 197:Src/main.c    **** 
 198:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 0 */
 199:Src/main.c    **** 
 200:Src/main.c    ****   /* USER CODE END DAC_Init 0 */
 201:Src/main.c    **** 
 202:Src/main.c    ****   DAC_ChannelConfTypeDef sConfig = {0};
 203:Src/main.c    **** 
 204:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 1 */
ARM GAS  /tmp/ccSn9RSi.s 			page 5


 205:Src/main.c    **** 
 206:Src/main.c    ****   /* USER CODE END DAC_Init 1 */
 207:Src/main.c    ****   /** DAC Initialization
 208:Src/main.c    ****   */
 209:Src/main.c    ****   hdac.Instance = DAC;
 210:Src/main.c    ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 211:Src/main.c    ****   {
 212:Src/main.c    ****     Error_Handler();
 213:Src/main.c    ****   }
 214:Src/main.c    ****   /** DAC channel OUT2 config
 215:Src/main.c    ****   */
 216:Src/main.c    ****   sConfig.DAC_Trigger = DAC_TRIGGER_T6_TRGO;
 217:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_DISABLE;
 218:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 219:Src/main.c    ****   {
 220:Src/main.c    ****     Error_Handler();
 221:Src/main.c    ****   }
 222:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 2 */
 223:Src/main.c    **** 
 224:Src/main.c    ****   /* USER CODE END DAC_Init 2 */
 225:Src/main.c    **** 
 226:Src/main.c    **** }
 227:Src/main.c    **** 
 228:Src/main.c    **** /**
 229:Src/main.c    ****   * @brief TIM1 Initialization Function
 230:Src/main.c    ****   * @param None
 231:Src/main.c    ****   * @retval None
 232:Src/main.c    ****   */
 233:Src/main.c    **** static void MX_TIM1_Init(void)
 234:Src/main.c    **** {
 235:Src/main.c    **** 
 236:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 0 */
 237:Src/main.c    **** 
 238:Src/main.c    ****   /* USER CODE END TIM1_Init 0 */
 239:Src/main.c    **** 
 240:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 241:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 242:Src/main.c    **** 
 243:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 1 */
 244:Src/main.c    **** 
 245:Src/main.c    ****   /* USER CODE END TIM1_Init 1 */
 246:Src/main.c    ****   htim1.Instance = TIM1;
 247:Src/main.c    ****   htim1.Init.Prescaler = 0;
 248:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 249:Src/main.c    ****   htim1.Init.Period = 0;
 250:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 251:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 252:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 253:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 254:Src/main.c    ****   {
 255:Src/main.c    ****     Error_Handler();
 256:Src/main.c    ****   }
 257:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_ETRMODE2;
 258:Src/main.c    ****   sClockSourceConfig.ClockPolarity = TIM_CLOCKPOLARITY_NONINVERTED;
 259:Src/main.c    ****   sClockSourceConfig.ClockPrescaler = TIM_CLOCKPRESCALER_DIV1;
 260:Src/main.c    ****   sClockSourceConfig.ClockFilter = 0;
 261:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
ARM GAS  /tmp/ccSn9RSi.s 			page 6


 262:Src/main.c    ****   {
 263:Src/main.c    ****     Error_Handler();
 264:Src/main.c    ****   }
 265:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 266:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 267:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 268:Src/main.c    ****   {
 269:Src/main.c    ****     Error_Handler();
 270:Src/main.c    ****   }
 271:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 2 */
 272:Src/main.c    **** 
 273:Src/main.c    ****   /* USER CODE END TIM1_Init 2 */
 274:Src/main.c    **** 
 275:Src/main.c    **** }
 276:Src/main.c    **** 
 277:Src/main.c    **** /**
 278:Src/main.c    ****   * @brief TIM3 Initialization Function
 279:Src/main.c    ****   * @param None
 280:Src/main.c    ****   * @retval None
 281:Src/main.c    ****   */
 282:Src/main.c    **** static void MX_TIM3_Init(void)
 283:Src/main.c    **** {
 284:Src/main.c    **** 
 285:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 0 */
 286:Src/main.c    **** 
 287:Src/main.c    ****   /* USER CODE END TIM3_Init 0 */
 288:Src/main.c    **** 
 289:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 290:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 291:Src/main.c    **** 
 292:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 1 */
 293:Src/main.c    **** 
 294:Src/main.c    ****   /* USER CODE END TIM3_Init 1 */
 295:Src/main.c    ****   htim3.Instance = TIM3;
 296:Src/main.c    ****   htim3.Init.Prescaler = 7200-1;
 297:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 298:Src/main.c    ****   htim3.Init.Period = 9999;
 299:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 300:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 301:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 302:Src/main.c    ****   {
 303:Src/main.c    ****     Error_Handler();
 304:Src/main.c    ****   }
 305:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 306:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 307:Src/main.c    ****   {
 308:Src/main.c    ****     Error_Handler();
 309:Src/main.c    ****   }
 310:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 311:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 312:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 313:Src/main.c    ****   {
 314:Src/main.c    ****     Error_Handler();
 315:Src/main.c    ****   }
 316:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 2 */
 317:Src/main.c    **** 
 318:Src/main.c    ****   /* USER CODE END TIM3_Init 2 */
ARM GAS  /tmp/ccSn9RSi.s 			page 7


 319:Src/main.c    **** 
 320:Src/main.c    **** }
 321:Src/main.c    **** 
 322:Src/main.c    **** /**
 323:Src/main.c    ****   * @brief TIM6 Initialization Function
 324:Src/main.c    ****   * @param None
 325:Src/main.c    ****   * @retval None
 326:Src/main.c    ****   */
 327:Src/main.c    **** static void MX_TIM6_Init(void)
 328:Src/main.c    **** {
 329:Src/main.c    **** 
 330:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 0 */
 331:Src/main.c    **** 
 332:Src/main.c    ****   /* USER CODE END TIM6_Init 0 */
 333:Src/main.c    **** 
 334:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 335:Src/main.c    **** 
 336:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 1 */
 337:Src/main.c    **** 
 338:Src/main.c    ****   /* USER CODE END TIM6_Init 1 */
 339:Src/main.c    ****   htim6.Instance = TIM6;
 340:Src/main.c    ****   htim6.Init.Prescaler = 0;
 341:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 342:Src/main.c    ****   htim6.Init.Period = 39;
 343:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 344:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 345:Src/main.c    ****   {
 346:Src/main.c    ****     Error_Handler();
 347:Src/main.c    ****   }
 348:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 349:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 350:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 351:Src/main.c    ****   {
 352:Src/main.c    ****     Error_Handler();
 353:Src/main.c    ****   }
 354:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 2 */
 355:Src/main.c    **** 
 356:Src/main.c    ****   /* USER CODE END TIM6_Init 2 */
 357:Src/main.c    **** 
 358:Src/main.c    **** }
 359:Src/main.c    **** 
 360:Src/main.c    **** /**
 361:Src/main.c    ****   * Enable DMA controller clock
 362:Src/main.c    ****   */
 363:Src/main.c    **** static void MX_DMA_Init(void)
 364:Src/main.c    **** {
 365:Src/main.c    **** 
 366:Src/main.c    ****   /* DMA controller clock enable */
 367:Src/main.c    ****   __HAL_RCC_DMA2_CLK_ENABLE();
 368:Src/main.c    **** 
 369:Src/main.c    ****   /* DMA interrupt init */
 370:Src/main.c    ****   /* DMA2_Channel4_5_IRQn interrupt configuration */
 371:Src/main.c    ****   HAL_NVIC_SetPriority(DMA2_Channel4_5_IRQn, 0, 1);
 372:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA2_Channel4_5_IRQn);
 373:Src/main.c    **** 
 374:Src/main.c    **** }
 375:Src/main.c    **** 
ARM GAS  /tmp/ccSn9RSi.s 			page 8


 376:Src/main.c    **** /**
 377:Src/main.c    ****   * @brief GPIO Initialization Function
 378:Src/main.c    ****   * @param None
 379:Src/main.c    ****   * @retval None
 380:Src/main.c    ****   */
 381:Src/main.c    **** static void MX_GPIO_Init(void)
 382:Src/main.c    **** {
  26              		.loc 1 382 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 70B5     		push	{r4, r5, r6, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 4, -16
  34              		.cfi_offset 5, -12
  35              		.cfi_offset 6, -8
  36              		.cfi_offset 14, -4
  37 0002 88B0     		sub	sp, sp, #32
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
 383:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 383 3 view .LVU1
  41              		.loc 1 383 20 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0494     		str	r4, [sp, #16]
  44 0008 0594     		str	r4, [sp, #20]
  45 000a 0694     		str	r4, [sp, #24]
  46 000c 0794     		str	r4, [sp, #28]
 384:Src/main.c    **** 
 385:Src/main.c    ****   /* GPIO Ports Clock Enable */
 386:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  47              		.loc 1 386 3 is_stmt 1 view .LVU3
  48              	.LBB2:
  49              		.loc 1 386 3 view .LVU4
  50              		.loc 1 386 3 view .LVU5
  51 000e 1C4B     		ldr	r3, .L3
  52 0010 9A69     		ldr	r2, [r3, #24]
  53 0012 42F02002 		orr	r2, r2, #32
  54 0016 9A61     		str	r2, [r3, #24]
  55              		.loc 1 386 3 view .LVU6
  56 0018 9A69     		ldr	r2, [r3, #24]
  57 001a 02F02002 		and	r2, r2, #32
  58 001e 0192     		str	r2, [sp, #4]
  59              		.loc 1 386 3 view .LVU7
  60 0020 019A     		ldr	r2, [sp, #4]
  61              	.LBE2:
  62              		.loc 1 386 3 view .LVU8
 387:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  63              		.loc 1 387 3 view .LVU9
  64              	.LBB3:
  65              		.loc 1 387 3 view .LVU10
  66              		.loc 1 387 3 view .LVU11
  67 0022 9A69     		ldr	r2, [r3, #24]
  68 0024 42F01002 		orr	r2, r2, #16
  69 0028 9A61     		str	r2, [r3, #24]
  70              		.loc 1 387 3 view .LVU12
ARM GAS  /tmp/ccSn9RSi.s 			page 9


  71 002a 9A69     		ldr	r2, [r3, #24]
  72 002c 02F01002 		and	r2, r2, #16
  73 0030 0292     		str	r2, [sp, #8]
  74              		.loc 1 387 3 view .LVU13
  75 0032 029A     		ldr	r2, [sp, #8]
  76              	.LBE3:
  77              		.loc 1 387 3 view .LVU14
 388:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  78              		.loc 1 388 3 view .LVU15
  79              	.LBB4:
  80              		.loc 1 388 3 view .LVU16
  81              		.loc 1 388 3 view .LVU17
  82 0034 9A69     		ldr	r2, [r3, #24]
  83 0036 42F00402 		orr	r2, r2, #4
  84 003a 9A61     		str	r2, [r3, #24]
  85              		.loc 1 388 3 view .LVU18
  86 003c 9B69     		ldr	r3, [r3, #24]
  87 003e 03F00403 		and	r3, r3, #4
  88 0042 0393     		str	r3, [sp, #12]
  89              		.loc 1 388 3 view .LVU19
  90 0044 039B     		ldr	r3, [sp, #12]
  91              	.LBE4:
  92              		.loc 1 388 3 view .LVU20
 389:Src/main.c    **** 
 390:Src/main.c    ****   /*Configure GPIO pin Output Level */
 391:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, LED_1_Pin|LED_2_Pin, GPIO_PIN_RESET);
  93              		.loc 1 391 3 view .LVU21
  94 0046 0F4D     		ldr	r5, .L3+4
  95 0048 2246     		mov	r2, r4
  96 004a 0C21     		movs	r1, #12
  97 004c 2846     		mov	r0, r5
  98 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
  99              	.LVL0:
 392:Src/main.c    **** 
 393:Src/main.c    ****   /*Configure GPIO pin : LED_1_Pin */
 394:Src/main.c    ****   GPIO_InitStruct.Pin = LED_1_Pin;
 100              		.loc 1 394 3 view .LVU22
 101              		.loc 1 394 23 is_stmt 0 view .LVU23
 102 0052 0423     		movs	r3, #4
 103 0054 0493     		str	r3, [sp, #16]
 395:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 104              		.loc 1 395 3 is_stmt 1 view .LVU24
 105              		.loc 1 395 24 is_stmt 0 view .LVU25
 106 0056 0126     		movs	r6, #1
 107 0058 0596     		str	r6, [sp, #20]
 396:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 108              		.loc 1 396 3 is_stmt 1 view .LVU26
 109              		.loc 1 396 24 is_stmt 0 view .LVU27
 110 005a 0694     		str	r4, [sp, #24]
 397:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 111              		.loc 1 397 3 is_stmt 1 view .LVU28
 112              		.loc 1 397 25 is_stmt 0 view .LVU29
 113 005c 0224     		movs	r4, #2
 114 005e 0794     		str	r4, [sp, #28]
 398:Src/main.c    ****   HAL_GPIO_Init(LED_1_GPIO_Port, &GPIO_InitStruct);
 115              		.loc 1 398 3 is_stmt 1 view .LVU30
 116 0060 04A9     		add	r1, sp, #16
ARM GAS  /tmp/ccSn9RSi.s 			page 10


 117 0062 2846     		mov	r0, r5
 118 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 119              	.LVL1:
 399:Src/main.c    **** 
 400:Src/main.c    ****   /*Configure GPIO pin : LED_2_Pin */
 401:Src/main.c    ****   GPIO_InitStruct.Pin = LED_2_Pin;
 120              		.loc 1 401 3 view .LVU31
 121              		.loc 1 401 23 is_stmt 0 view .LVU32
 122 0068 0823     		movs	r3, #8
 123 006a 0493     		str	r3, [sp, #16]
 402:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 124              		.loc 1 402 3 is_stmt 1 view .LVU33
 125              		.loc 1 402 24 is_stmt 0 view .LVU34
 126 006c 0596     		str	r6, [sp, #20]
 403:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 127              		.loc 1 403 3 is_stmt 1 view .LVU35
 128              		.loc 1 403 24 is_stmt 0 view .LVU36
 129 006e 0696     		str	r6, [sp, #24]
 404:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 130              		.loc 1 404 3 is_stmt 1 view .LVU37
 131              		.loc 1 404 25 is_stmt 0 view .LVU38
 132 0070 0794     		str	r4, [sp, #28]
 405:Src/main.c    ****   HAL_GPIO_Init(LED_2_GPIO_Port, &GPIO_InitStruct);
 133              		.loc 1 405 3 is_stmt 1 view .LVU39
 134 0072 04A9     		add	r1, sp, #16
 135 0074 2846     		mov	r0, r5
 136 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 137              	.LVL2:
 406:Src/main.c    **** 
 407:Src/main.c    **** }
 138              		.loc 1 407 1 is_stmt 0 view .LVU40
 139 007a 08B0     		add	sp, sp, #32
 140              	.LCFI2:
 141              		.cfi_def_cfa_offset 16
 142              		@ sp needed
 143 007c 70BD     		pop	{r4, r5, r6, pc}
 144              	.L4:
 145 007e 00BF     		.align	2
 146              	.L3:
 147 0080 00100240 		.word	1073876992
 148 0084 00100140 		.word	1073811456
 149              		.cfi_endproc
 150              	.LFE75:
 152              		.section	.text.MX_DMA_Init,"ax",%progbits
 153              		.align	1
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 157              		.fpu softvfp
 159              	MX_DMA_Init:
 160              	.LFB74:
 364:Src/main.c    **** 
 161              		.loc 1 364 1 is_stmt 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 8
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165 0000 00B5     		push	{lr}
ARM GAS  /tmp/ccSn9RSi.s 			page 11


 166              	.LCFI3:
 167              		.cfi_def_cfa_offset 4
 168              		.cfi_offset 14, -4
 169 0002 83B0     		sub	sp, sp, #12
 170              	.LCFI4:
 171              		.cfi_def_cfa_offset 16
 367:Src/main.c    **** 
 172              		.loc 1 367 3 view .LVU42
 173              	.LBB5:
 367:Src/main.c    **** 
 174              		.loc 1 367 3 view .LVU43
 367:Src/main.c    **** 
 175              		.loc 1 367 3 view .LVU44
 176 0004 0A4B     		ldr	r3, .L7
 177 0006 5A69     		ldr	r2, [r3, #20]
 178 0008 42F00202 		orr	r2, r2, #2
 179 000c 5A61     		str	r2, [r3, #20]
 367:Src/main.c    **** 
 180              		.loc 1 367 3 view .LVU45
 181 000e 5B69     		ldr	r3, [r3, #20]
 182 0010 03F00203 		and	r3, r3, #2
 183 0014 0193     		str	r3, [sp, #4]
 367:Src/main.c    **** 
 184              		.loc 1 367 3 view .LVU46
 185 0016 019B     		ldr	r3, [sp, #4]
 186              	.LBE5:
 367:Src/main.c    **** 
 187              		.loc 1 367 3 view .LVU47
 371:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA2_Channel4_5_IRQn);
 188              		.loc 1 371 3 view .LVU48
 189 0018 0122     		movs	r2, #1
 190 001a 0021     		movs	r1, #0
 191 001c 3B20     		movs	r0, #59
 192 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 193              	.LVL3:
 372:Src/main.c    **** 
 194              		.loc 1 372 3 view .LVU49
 195 0022 3B20     		movs	r0, #59
 196 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 197              	.LVL4:
 374:Src/main.c    **** 
 198              		.loc 1 374 1 is_stmt 0 view .LVU50
 199 0028 03B0     		add	sp, sp, #12
 200              	.LCFI5:
 201              		.cfi_def_cfa_offset 4
 202              		@ sp needed
 203 002a 5DF804FB 		ldr	pc, [sp], #4
 204              	.L8:
 205 002e 00BF     		.align	2
 206              	.L7:
 207 0030 00100240 		.word	1073876992
 208              		.cfi_endproc
 209              	.LFE74:
 211              		.section	.text.MX_DAC_Init,"ax",%progbits
 212              		.align	1
 213              		.syntax unified
 214              		.thumb
ARM GAS  /tmp/ccSn9RSi.s 			page 12


 215              		.thumb_func
 216              		.fpu softvfp
 218              	MX_DAC_Init:
 219              	.LFB70:
 196:Src/main.c    **** 
 220              		.loc 1 196 1 is_stmt 1 view -0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 8
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224 0000 10B5     		push	{r4, lr}
 225              	.LCFI6:
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 4, -8
 228              		.cfi_offset 14, -4
 229 0002 82B0     		sub	sp, sp, #8
 230              	.LCFI7:
 231              		.cfi_def_cfa_offset 16
 202:Src/main.c    **** 
 232              		.loc 1 202 3 view .LVU52
 202:Src/main.c    **** 
 233              		.loc 1 202 26 is_stmt 0 view .LVU53
 234 0004 0023     		movs	r3, #0
 235 0006 0093     		str	r3, [sp]
 236 0008 0193     		str	r3, [sp, #4]
 209:Src/main.c    ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 237              		.loc 1 209 3 is_stmt 1 view .LVU54
 209:Src/main.c    ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 238              		.loc 1 209 17 is_stmt 0 view .LVU55
 239 000a 084C     		ldr	r4, .L11
 240 000c 084B     		ldr	r3, .L11+4
 241 000e 2360     		str	r3, [r4]
 210:Src/main.c    ****   {
 242              		.loc 1 210 3 is_stmt 1 view .LVU56
 210:Src/main.c    ****   {
 243              		.loc 1 210 7 is_stmt 0 view .LVU57
 244 0010 2046     		mov	r0, r4
 245 0012 FFF7FEFF 		bl	HAL_DAC_Init
 246              	.LVL5:
 216:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_DISABLE;
 247              		.loc 1 216 3 is_stmt 1 view .LVU58
 216:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_DISABLE;
 248              		.loc 1 216 23 is_stmt 0 view .LVU59
 249 0016 0423     		movs	r3, #4
 250 0018 0093     		str	r3, [sp]
 217:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 251              		.loc 1 217 3 is_stmt 1 view .LVU60
 217:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 252              		.loc 1 217 28 is_stmt 0 view .LVU61
 253 001a 0223     		movs	r3, #2
 254 001c 0193     		str	r3, [sp, #4]
 218:Src/main.c    ****   {
 255              		.loc 1 218 3 is_stmt 1 view .LVU62
 218:Src/main.c    ****   {
 256              		.loc 1 218 7 is_stmt 0 view .LVU63
 257 001e 1022     		movs	r2, #16
 258 0020 6946     		mov	r1, sp
 259 0022 2046     		mov	r0, r4
ARM GAS  /tmp/ccSn9RSi.s 			page 13


 260 0024 FFF7FEFF 		bl	HAL_DAC_ConfigChannel
 261              	.LVL6:
 226:Src/main.c    **** 
 262              		.loc 1 226 1 view .LVU64
 263 0028 02B0     		add	sp, sp, #8
 264              	.LCFI8:
 265              		.cfi_def_cfa_offset 8
 266              		@ sp needed
 267 002a 10BD     		pop	{r4, pc}
 268              	.L12:
 269              		.align	2
 270              	.L11:
 271 002c 00000000 		.word	hdac
 272 0030 00740040 		.word	1073771520
 273              		.cfi_endproc
 274              	.LFE70:
 276              		.section	.text.MX_TIM3_Init,"ax",%progbits
 277              		.align	1
 278              		.syntax unified
 279              		.thumb
 280              		.thumb_func
 281              		.fpu softvfp
 283              	MX_TIM3_Init:
 284              	.LFB72:
 283:Src/main.c    **** 
 285              		.loc 1 283 1 is_stmt 1 view -0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 24
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289 0000 30B5     		push	{r4, r5, lr}
 290              	.LCFI9:
 291              		.cfi_def_cfa_offset 12
 292              		.cfi_offset 4, -12
 293              		.cfi_offset 5, -8
 294              		.cfi_offset 14, -4
 295 0002 87B0     		sub	sp, sp, #28
 296              	.LCFI10:
 297              		.cfi_def_cfa_offset 40
 289:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 298              		.loc 1 289 3 view .LVU66
 289:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 299              		.loc 1 289 26 is_stmt 0 view .LVU67
 300 0004 0024     		movs	r4, #0
 301 0006 0294     		str	r4, [sp, #8]
 302 0008 0394     		str	r4, [sp, #12]
 303 000a 0494     		str	r4, [sp, #16]
 304 000c 0594     		str	r4, [sp, #20]
 290:Src/main.c    **** 
 305              		.loc 1 290 3 is_stmt 1 view .LVU68
 290:Src/main.c    **** 
 306              		.loc 1 290 27 is_stmt 0 view .LVU69
 307 000e 0094     		str	r4, [sp]
 308 0010 0194     		str	r4, [sp, #4]
 295:Src/main.c    ****   htim3.Init.Prescaler = 7200-1;
 309              		.loc 1 295 3 is_stmt 1 view .LVU70
 295:Src/main.c    ****   htim3.Init.Prescaler = 7200-1;
 310              		.loc 1 295 18 is_stmt 0 view .LVU71
ARM GAS  /tmp/ccSn9RSi.s 			page 14


 311 0012 0F4D     		ldr	r5, .L15
 312 0014 0F4B     		ldr	r3, .L15+4
 313 0016 2B60     		str	r3, [r5]
 296:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 314              		.loc 1 296 3 is_stmt 1 view .LVU72
 296:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 315              		.loc 1 296 24 is_stmt 0 view .LVU73
 316 0018 41F61F43 		movw	r3, #7199
 317 001c 6B60     		str	r3, [r5, #4]
 297:Src/main.c    ****   htim3.Init.Period = 9999;
 318              		.loc 1 297 3 is_stmt 1 view .LVU74
 297:Src/main.c    ****   htim3.Init.Period = 9999;
 319              		.loc 1 297 26 is_stmt 0 view .LVU75
 320 001e AC60     		str	r4, [r5, #8]
 298:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 321              		.loc 1 298 3 is_stmt 1 view .LVU76
 298:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 322              		.loc 1 298 21 is_stmt 0 view .LVU77
 323 0020 42F20F73 		movw	r3, #9999
 324 0024 EB60     		str	r3, [r5, #12]
 299:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 325              		.loc 1 299 3 is_stmt 1 view .LVU78
 299:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 326              		.loc 1 299 28 is_stmt 0 view .LVU79
 327 0026 2C61     		str	r4, [r5, #16]
 300:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 328              		.loc 1 300 3 is_stmt 1 view .LVU80
 300:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 329              		.loc 1 300 32 is_stmt 0 view .LVU81
 330 0028 AC61     		str	r4, [r5, #24]
 301:Src/main.c    ****   {
 331              		.loc 1 301 3 is_stmt 1 view .LVU82
 301:Src/main.c    ****   {
 332              		.loc 1 301 7 is_stmt 0 view .LVU83
 333 002a 2846     		mov	r0, r5
 334 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
 335              	.LVL7:
 305:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 336              		.loc 1 305 3 is_stmt 1 view .LVU84
 305:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 337              		.loc 1 305 34 is_stmt 0 view .LVU85
 338 0030 4FF48053 		mov	r3, #4096
 339 0034 0293     		str	r3, [sp, #8]
 306:Src/main.c    ****   {
 340              		.loc 1 306 3 is_stmt 1 view .LVU86
 306:Src/main.c    ****   {
 341              		.loc 1 306 7 is_stmt 0 view .LVU87
 342 0036 02A9     		add	r1, sp, #8
 343 0038 2846     		mov	r0, r5
 344 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 345              	.LVL8:
 310:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 346              		.loc 1 310 3 is_stmt 1 view .LVU88
 310:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 347              		.loc 1 310 37 is_stmt 0 view .LVU89
 348 003e 0094     		str	r4, [sp]
 311:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
ARM GAS  /tmp/ccSn9RSi.s 			page 15


 349              		.loc 1 311 3 is_stmt 1 view .LVU90
 311:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 350              		.loc 1 311 33 is_stmt 0 view .LVU91
 351 0040 0194     		str	r4, [sp, #4]
 312:Src/main.c    ****   {
 352              		.loc 1 312 3 is_stmt 1 view .LVU92
 312:Src/main.c    ****   {
 353              		.loc 1 312 7 is_stmt 0 view .LVU93
 354 0042 6946     		mov	r1, sp
 355 0044 2846     		mov	r0, r5
 356 0046 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 357              	.LVL9:
 320:Src/main.c    **** 
 358              		.loc 1 320 1 view .LVU94
 359 004a 07B0     		add	sp, sp, #28
 360              	.LCFI11:
 361              		.cfi_def_cfa_offset 12
 362              		@ sp needed
 363 004c 30BD     		pop	{r4, r5, pc}
 364              	.L16:
 365 004e 00BF     		.align	2
 366              	.L15:
 367 0050 00000000 		.word	htim3
 368 0054 00040040 		.word	1073742848
 369              		.cfi_endproc
 370              	.LFE72:
 372              		.section	.text.MX_TIM6_Init,"ax",%progbits
 373              		.align	1
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
 377              		.fpu softvfp
 379              	MX_TIM6_Init:
 380              	.LFB73:
 328:Src/main.c    **** 
 381              		.loc 1 328 1 is_stmt 1 view -0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 8
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385 0000 30B5     		push	{r4, r5, lr}
 386              	.LCFI12:
 387              		.cfi_def_cfa_offset 12
 388              		.cfi_offset 4, -12
 389              		.cfi_offset 5, -8
 390              		.cfi_offset 14, -4
 391 0002 83B0     		sub	sp, sp, #12
 392              	.LCFI13:
 393              		.cfi_def_cfa_offset 24
 334:Src/main.c    **** 
 394              		.loc 1 334 3 view .LVU96
 334:Src/main.c    **** 
 395              		.loc 1 334 27 is_stmt 0 view .LVU97
 396 0004 0025     		movs	r5, #0
 397 0006 0095     		str	r5, [sp]
 398 0008 0195     		str	r5, [sp, #4]
 339:Src/main.c    ****   htim6.Init.Prescaler = 0;
 399              		.loc 1 339 3 is_stmt 1 view .LVU98
ARM GAS  /tmp/ccSn9RSi.s 			page 16


 339:Src/main.c    ****   htim6.Init.Prescaler = 0;
 400              		.loc 1 339 18 is_stmt 0 view .LVU99
 401 000a 0A4C     		ldr	r4, .L19
 402 000c 0A4B     		ldr	r3, .L19+4
 403 000e 2360     		str	r3, [r4]
 340:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 404              		.loc 1 340 3 is_stmt 1 view .LVU100
 340:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 405              		.loc 1 340 24 is_stmt 0 view .LVU101
 406 0010 6560     		str	r5, [r4, #4]
 341:Src/main.c    ****   htim6.Init.Period = 39;
 407              		.loc 1 341 3 is_stmt 1 view .LVU102
 341:Src/main.c    ****   htim6.Init.Period = 39;
 408              		.loc 1 341 26 is_stmt 0 view .LVU103
 409 0012 A560     		str	r5, [r4, #8]
 342:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 410              		.loc 1 342 3 is_stmt 1 view .LVU104
 342:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 411              		.loc 1 342 21 is_stmt 0 view .LVU105
 412 0014 2723     		movs	r3, #39
 413 0016 E360     		str	r3, [r4, #12]
 343:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 414              		.loc 1 343 3 is_stmt 1 view .LVU106
 343:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 415              		.loc 1 343 32 is_stmt 0 view .LVU107
 416 0018 A561     		str	r5, [r4, #24]
 344:Src/main.c    ****   {
 417              		.loc 1 344 3 is_stmt 1 view .LVU108
 344:Src/main.c    ****   {
 418              		.loc 1 344 7 is_stmt 0 view .LVU109
 419 001a 2046     		mov	r0, r4
 420 001c FFF7FEFF 		bl	HAL_TIM_Base_Init
 421              	.LVL10:
 348:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 422              		.loc 1 348 3 is_stmt 1 view .LVU110
 348:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 423              		.loc 1 348 37 is_stmt 0 view .LVU111
 424 0020 2023     		movs	r3, #32
 425 0022 0093     		str	r3, [sp]
 349:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 426              		.loc 1 349 3 is_stmt 1 view .LVU112
 349:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 427              		.loc 1 349 33 is_stmt 0 view .LVU113
 428 0024 0195     		str	r5, [sp, #4]
 350:Src/main.c    ****   {
 429              		.loc 1 350 3 is_stmt 1 view .LVU114
 350:Src/main.c    ****   {
 430              		.loc 1 350 7 is_stmt 0 view .LVU115
 431 0026 6946     		mov	r1, sp
 432 0028 2046     		mov	r0, r4
 433 002a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 434              	.LVL11:
 358:Src/main.c    **** 
 435              		.loc 1 358 1 view .LVU116
 436 002e 03B0     		add	sp, sp, #12
 437              	.LCFI14:
 438              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccSn9RSi.s 			page 17


 439              		@ sp needed
 440 0030 30BD     		pop	{r4, r5, pc}
 441              	.L20:
 442 0032 00BF     		.align	2
 443              	.L19:
 444 0034 00000000 		.word	htim6
 445 0038 00100040 		.word	1073745920
 446              		.cfi_endproc
 447              	.LFE73:
 449              		.section	.text.MX_TIM1_Init,"ax",%progbits
 450              		.align	1
 451              		.syntax unified
 452              		.thumb
 453              		.thumb_func
 454              		.fpu softvfp
 456              	MX_TIM1_Init:
 457              	.LFB71:
 234:Src/main.c    **** 
 458              		.loc 1 234 1 is_stmt 1 view -0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 24
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462 0000 30B5     		push	{r4, r5, lr}
 463              	.LCFI15:
 464              		.cfi_def_cfa_offset 12
 465              		.cfi_offset 4, -12
 466              		.cfi_offset 5, -8
 467              		.cfi_offset 14, -4
 468 0002 87B0     		sub	sp, sp, #28
 469              	.LCFI16:
 470              		.cfi_def_cfa_offset 40
 240:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 471              		.loc 1 240 3 view .LVU118
 240:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 472              		.loc 1 240 26 is_stmt 0 view .LVU119
 473 0004 0024     		movs	r4, #0
 474 0006 0294     		str	r4, [sp, #8]
 475 0008 0394     		str	r4, [sp, #12]
 476 000a 0494     		str	r4, [sp, #16]
 477 000c 0594     		str	r4, [sp, #20]
 241:Src/main.c    **** 
 478              		.loc 1 241 3 is_stmt 1 view .LVU120
 241:Src/main.c    **** 
 479              		.loc 1 241 27 is_stmt 0 view .LVU121
 480 000e 0094     		str	r4, [sp]
 481 0010 0194     		str	r4, [sp, #4]
 246:Src/main.c    ****   htim1.Init.Prescaler = 0;
 482              		.loc 1 246 3 is_stmt 1 view .LVU122
 246:Src/main.c    ****   htim1.Init.Prescaler = 0;
 483              		.loc 1 246 18 is_stmt 0 view .LVU123
 484 0012 0F4D     		ldr	r5, .L23
 485 0014 0F4B     		ldr	r3, .L23+4
 486 0016 2B60     		str	r3, [r5]
 247:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 487              		.loc 1 247 3 is_stmt 1 view .LVU124
 247:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 488              		.loc 1 247 24 is_stmt 0 view .LVU125
ARM GAS  /tmp/ccSn9RSi.s 			page 18


 489 0018 6C60     		str	r4, [r5, #4]
 248:Src/main.c    ****   htim1.Init.Period = 0;
 490              		.loc 1 248 3 is_stmt 1 view .LVU126
 248:Src/main.c    ****   htim1.Init.Period = 0;
 491              		.loc 1 248 26 is_stmt 0 view .LVU127
 492 001a AC60     		str	r4, [r5, #8]
 249:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 493              		.loc 1 249 3 is_stmt 1 view .LVU128
 249:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 494              		.loc 1 249 21 is_stmt 0 view .LVU129
 495 001c EC60     		str	r4, [r5, #12]
 250:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 496              		.loc 1 250 3 is_stmt 1 view .LVU130
 250:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 497              		.loc 1 250 28 is_stmt 0 view .LVU131
 498 001e 2C61     		str	r4, [r5, #16]
 251:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 499              		.loc 1 251 3 is_stmt 1 view .LVU132
 251:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 500              		.loc 1 251 32 is_stmt 0 view .LVU133
 501 0020 6C61     		str	r4, [r5, #20]
 252:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 502              		.loc 1 252 3 is_stmt 1 view .LVU134
 252:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 503              		.loc 1 252 32 is_stmt 0 view .LVU135
 504 0022 AC61     		str	r4, [r5, #24]
 253:Src/main.c    ****   {
 505              		.loc 1 253 3 is_stmt 1 view .LVU136
 253:Src/main.c    ****   {
 506              		.loc 1 253 7 is_stmt 0 view .LVU137
 507 0024 2846     		mov	r0, r5
 508 0026 FFF7FEFF 		bl	HAL_TIM_Base_Init
 509              	.LVL12:
 257:Src/main.c    ****   sClockSourceConfig.ClockPolarity = TIM_CLOCKPOLARITY_NONINVERTED;
 510              		.loc 1 257 3 is_stmt 1 view .LVU138
 257:Src/main.c    ****   sClockSourceConfig.ClockPolarity = TIM_CLOCKPOLARITY_NONINVERTED;
 511              		.loc 1 257 34 is_stmt 0 view .LVU139
 512 002a 4FF40053 		mov	r3, #8192
 513 002e 0293     		str	r3, [sp, #8]
 258:Src/main.c    ****   sClockSourceConfig.ClockPrescaler = TIM_CLOCKPRESCALER_DIV1;
 514              		.loc 1 258 3 is_stmt 1 view .LVU140
 258:Src/main.c    ****   sClockSourceConfig.ClockPrescaler = TIM_CLOCKPRESCALER_DIV1;
 515              		.loc 1 258 36 is_stmt 0 view .LVU141
 516 0030 0394     		str	r4, [sp, #12]
 259:Src/main.c    ****   sClockSourceConfig.ClockFilter = 0;
 517              		.loc 1 259 3 is_stmt 1 view .LVU142
 259:Src/main.c    ****   sClockSourceConfig.ClockFilter = 0;
 518              		.loc 1 259 37 is_stmt 0 view .LVU143
 519 0032 0494     		str	r4, [sp, #16]
 260:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 520              		.loc 1 260 3 is_stmt 1 view .LVU144
 260:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 521              		.loc 1 260 34 is_stmt 0 view .LVU145
 522 0034 0594     		str	r4, [sp, #20]
 261:Src/main.c    ****   {
 523              		.loc 1 261 3 is_stmt 1 view .LVU146
 261:Src/main.c    ****   {
ARM GAS  /tmp/ccSn9RSi.s 			page 19


 524              		.loc 1 261 7 is_stmt 0 view .LVU147
 525 0036 02A9     		add	r1, sp, #8
 526 0038 2846     		mov	r0, r5
 527 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 528              	.LVL13:
 265:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 529              		.loc 1 265 3 is_stmt 1 view .LVU148
 265:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 530              		.loc 1 265 37 is_stmt 0 view .LVU149
 531 003e 0094     		str	r4, [sp]
 266:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 532              		.loc 1 266 3 is_stmt 1 view .LVU150
 266:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 533              		.loc 1 266 33 is_stmt 0 view .LVU151
 534 0040 0194     		str	r4, [sp, #4]
 267:Src/main.c    ****   {
 535              		.loc 1 267 3 is_stmt 1 view .LVU152
 267:Src/main.c    ****   {
 536              		.loc 1 267 7 is_stmt 0 view .LVU153
 537 0042 6946     		mov	r1, sp
 538 0044 2846     		mov	r0, r5
 539 0046 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 540              	.LVL14:
 275:Src/main.c    **** 
 541              		.loc 1 275 1 view .LVU154
 542 004a 07B0     		add	sp, sp, #28
 543              	.LCFI17:
 544              		.cfi_def_cfa_offset 12
 545              		@ sp needed
 546 004c 30BD     		pop	{r4, r5, pc}
 547              	.L24:
 548 004e 00BF     		.align	2
 549              	.L23:
 550 0050 00000000 		.word	htim1
 551 0054 002C0140 		.word	1073818624
 552              		.cfi_endproc
 553              	.LFE71:
 555              		.section	.text.SystemClock_Config,"ax",%progbits
 556              		.align	1
 557              		.global	SystemClock_Config
 558              		.syntax unified
 559              		.thumb
 560              		.thumb_func
 561              		.fpu softvfp
 563              	SystemClock_Config:
 564              	.LFB69:
 158:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 565              		.loc 1 158 1 is_stmt 1 view -0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 64
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569 0000 30B5     		push	{r4, r5, lr}
 570              	.LCFI18:
 571              		.cfi_def_cfa_offset 12
 572              		.cfi_offset 4, -12
 573              		.cfi_offset 5, -8
 574              		.cfi_offset 14, -4
ARM GAS  /tmp/ccSn9RSi.s 			page 20


 575 0002 91B0     		sub	sp, sp, #68
 576              	.LCFI19:
 577              		.cfi_def_cfa_offset 80
 159:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 578              		.loc 1 159 3 view .LVU156
 159:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 579              		.loc 1 159 22 is_stmt 0 view .LVU157
 580 0004 0024     		movs	r4, #0
 581 0006 0994     		str	r4, [sp, #36]
 582 0008 0B94     		str	r4, [sp, #44]
 583 000a 0C94     		str	r4, [sp, #48]
 160:Src/main.c    **** 
 584              		.loc 1 160 3 is_stmt 1 view .LVU158
 160:Src/main.c    **** 
 585              		.loc 1 160 22 is_stmt 0 view .LVU159
 586 000c 0194     		str	r4, [sp, #4]
 587 000e 0294     		str	r4, [sp, #8]
 588 0010 0394     		str	r4, [sp, #12]
 589 0012 0494     		str	r4, [sp, #16]
 590 0014 0594     		str	r4, [sp, #20]
 164:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 591              		.loc 1 164 3 is_stmt 1 view .LVU160
 164:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 592              		.loc 1 164 36 is_stmt 0 view .LVU161
 593 0016 0122     		movs	r2, #1
 594 0018 0692     		str	r2, [sp, #24]
 165:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 595              		.loc 1 165 3 is_stmt 1 view .LVU162
 165:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 596              		.loc 1 165 30 is_stmt 0 view .LVU163
 597 001a 4FF48033 		mov	r3, #65536
 598 001e 0793     		str	r3, [sp, #28]
 166:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 599              		.loc 1 166 3 is_stmt 1 view .LVU164
 166:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 600              		.loc 1 166 36 is_stmt 0 view .LVU165
 601 0020 0894     		str	r4, [sp, #32]
 167:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 602              		.loc 1 167 3 is_stmt 1 view .LVU166
 167:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 603              		.loc 1 167 30 is_stmt 0 view .LVU167
 604 0022 0A92     		str	r2, [sp, #40]
 168:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 605              		.loc 1 168 3 is_stmt 1 view .LVU168
 168:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 606              		.loc 1 168 34 is_stmt 0 view .LVU169
 607 0024 0225     		movs	r5, #2
 608 0026 0D95     		str	r5, [sp, #52]
 169:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 609              		.loc 1 169 3 is_stmt 1 view .LVU170
 169:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 610              		.loc 1 169 35 is_stmt 0 view .LVU171
 611 0028 0E93     		str	r3, [sp, #56]
 170:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 612              		.loc 1 170 3 is_stmt 1 view .LVU172
 170:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 613              		.loc 1 170 32 is_stmt 0 view .LVU173
ARM GAS  /tmp/ccSn9RSi.s 			page 21


 614 002a 4FF4E013 		mov	r3, #1835008
 615 002e 0F93     		str	r3, [sp, #60]
 171:Src/main.c    ****   {
 616              		.loc 1 171 3 is_stmt 1 view .LVU174
 171:Src/main.c    ****   {
 617              		.loc 1 171 7 is_stmt 0 view .LVU175
 618 0030 06A8     		add	r0, sp, #24
 619 0032 FFF7FEFF 		bl	HAL_RCC_OscConfig
 620              	.LVL15:
 177:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 621              		.loc 1 177 3 is_stmt 1 view .LVU176
 177:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 622              		.loc 1 177 31 is_stmt 0 view .LVU177
 623 0036 0F23     		movs	r3, #15
 624 0038 0193     		str	r3, [sp, #4]
 179:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 625              		.loc 1 179 3 is_stmt 1 view .LVU178
 179:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 626              		.loc 1 179 34 is_stmt 0 view .LVU179
 627 003a 0295     		str	r5, [sp, #8]
 180:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 628              		.loc 1 180 3 is_stmt 1 view .LVU180
 180:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 629              		.loc 1 180 35 is_stmt 0 view .LVU181
 630 003c 0394     		str	r4, [sp, #12]
 181:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 631              		.loc 1 181 3 is_stmt 1 view .LVU182
 181:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 632              		.loc 1 181 36 is_stmt 0 view .LVU183
 633 003e 4FF48063 		mov	r3, #1024
 634 0042 0493     		str	r3, [sp, #16]
 182:Src/main.c    **** 
 635              		.loc 1 182 3 is_stmt 1 view .LVU184
 182:Src/main.c    **** 
 636              		.loc 1 182 36 is_stmt 0 view .LVU185
 637 0044 0594     		str	r4, [sp, #20]
 184:Src/main.c    ****   {
 638              		.loc 1 184 3 is_stmt 1 view .LVU186
 184:Src/main.c    ****   {
 639              		.loc 1 184 7 is_stmt 0 view .LVU187
 640 0046 2946     		mov	r1, r5
 641 0048 01A8     		add	r0, sp, #4
 642 004a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 643              	.LVL16:
 188:Src/main.c    **** 
 644              		.loc 1 188 1 view .LVU188
 645 004e 11B0     		add	sp, sp, #68
 646              	.LCFI20:
 647              		.cfi_def_cfa_offset 12
 648              		@ sp needed
 649 0050 30BD     		pop	{r4, r5, pc}
 650              		.cfi_endproc
 651              	.LFE69:
 653              		.global	__aeabi_f2d
 654              		.global	__aeabi_dadd
 655              		.global	__aeabi_d2f
 656              		.section	.rodata.Test.str1.4,"aMS",%progbits,1
ARM GAS  /tmp/ccSn9RSi.s 			page 22


 657              		.align	2
 658              	.LC0:
 659 0000 494E543A 		.ascii	"INT:%d\000"
 659      256400
 660 0007 00       		.align	2
 661              	.LC1:
 662 0008 46726571 		.ascii	"Frequency:%d\000"
 662      75656E63 
 662      793A2564 
 662      00
 663              		.global	__aeabi_f2iz
 664              		.global	__aeabi_fmul
 665              		.global	__aeabi_i2f
 666              		.global	__aeabi_fsub
 667 0015 000000   		.align	2
 668              	.LC2:
 669 0018 464C4F41 		.ascii	"FLOAT:%d.%03d\000"
 669      543A2564 
 669      2E253033 
 669      6400
 670 0026 0000     		.align	2
 671              	.LC3:
 672 0028 252A6325 		.ascii	"%*c%s\000"
 672      7300
 673 002e 0000     		.align	2
 674              	.LC4:
 675 0030 545400   		.ascii	"TT\000"
 676              		.global	__aeabi_fcmpge
 677              		.section	.text.Test,"ax",%progbits
 678              		.align	1
 679              		.global	Test
 680              		.syntax unified
 681              		.thumb
 682              		.thumb_func
 683              		.fpu softvfp
 685              	Test:
 686              	.LFB76:
 408:Src/main.c    **** 
 409:Src/main.c    **** /* USER CODE BEGIN 4 */
 410:Src/main.c    **** 
 411:Src/main.c    **** void Test(void)
 412:Src/main.c    **** {
 687              		.loc 1 412 1 is_stmt 1 view -0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 104
 690              		@ frame_needed = 0, uses_anonymous_args = 0
 691 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 692              	.LCFI21:
 693              		.cfi_def_cfa_offset 24
 694              		.cfi_offset 4, -24
 695              		.cfi_offset 5, -20
 696              		.cfi_offset 6, -16
 697              		.cfi_offset 7, -12
 698              		.cfi_offset 8, -8
 699              		.cfi_offset 14, -4
 700 0004 9CB0     		sub	sp, sp, #112
 701              	.LCFI22:
ARM GAS  /tmp/ccSn9RSi.s 			page 23


 702              		.cfi_def_cfa_offset 136
 413:Src/main.c    ****   static uint8_t testint = 0;
 703              		.loc 1 413 3 view .LVU190
 414:Src/main.c    ****   static float testfloat = 0;
 704              		.loc 1 414 3 view .LVU191
 415:Src/main.c    ****   int a, b;
 705              		.loc 1 415 3 view .LVU192
 416:Src/main.c    ****   char dispBuff[100];
 706              		.loc 1 416 3 view .LVU193
 417:Src/main.c    ****   char *pStr = 0;
 707              		.loc 1 417 3 view .LVU194
 708              	.LVL17:
 418:Src/main.c    **** 
 419:Src/main.c    ****   testint++;
 709              		.loc 1 419 3 view .LVU195
 710              		.loc 1 419 10 is_stmt 0 view .LVU196
 711 0006 5C4C     		ldr	r4, .L33+8
 712 0008 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 713 000a 0133     		adds	r3, r3, #1
 714 000c 2370     		strb	r3, [r4]
 420:Src/main.c    ****   testfloat += 0.01;
 715              		.loc 1 420 3 is_stmt 1 view .LVU197
 716              		.loc 1 420 13 is_stmt 0 view .LVU198
 717 000e 5B4E     		ldr	r6, .L33+12
 718 0010 3068     		ldr	r0, [r6]	@ float
 719 0012 FFF7FEFF 		bl	__aeabi_f2d
 720              	.LVL18:
 721 0016 56A3     		adr	r3, .L33
 722 0018 D3E90023 		ldrd	r2, [r3]
 723 001c FFF7FEFF 		bl	__aeabi_dadd
 724              	.LVL19:
 725 0020 FFF7FEFF 		bl	__aeabi_d2f
 726              	.LVL20:
 727 0024 3060     		str	r0, [r6]	@ float
 421:Src/main.c    **** 
 422:Src/main.c    ****   LCD_SetFont(&Font8x16);
 728              		.loc 1 422 3 is_stmt 1 view .LVU199
 729 0026 5648     		ldr	r0, .L33+16
 730 0028 FFF7FEFF 		bl	LCD_SetFont
 731              	.LVL21:
 423:Src/main.c    ****   LCD_SetColors(BLACK, WHITE);
 732              		.loc 1 423 3 view .LVU200
 733 002c 4FF6FF71 		movw	r1, #65535
 734 0030 0020     		movs	r0, #0
 735 0032 FFF7FEFF 		bl	LCD_SetColors
 736              	.LVL22:
 424:Src/main.c    ****   ILI9341_Clear(0, 0, LCD_X_LENGTH, LCD_Y_LENGTH);
 737              		.loc 1 424 3 view .LVU201
 738 0036 534D     		ldr	r5, .L33+20
 739 0038 534B     		ldr	r3, .L33+24
 740 003a 1B88     		ldrh	r3, [r3]
 741 003c 2A88     		ldrh	r2, [r5]
 742 003e 0021     		movs	r1, #0
 743 0040 0846     		mov	r0, r1
 744 0042 FFF7FEFF 		bl	ILI9341_Clear
 745              	.LVL23:
 425:Src/main.c    **** 
ARM GAS  /tmp/ccSn9RSi.s 			page 24


 426:Src/main.c    ****   sprintf(dispBuff, "INT:%d", testint);
 746              		.loc 1 426 3 view .LVU202
 747 0046 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 748 0048 5049     		ldr	r1, .L33+28
 749 004a 03A8     		add	r0, sp, #12
 750 004c FFF7FEFF 		bl	sprintf
 751              	.LVL24:
 427:Src/main.c    ****   LCD_ClearLine(LINE(5));
 752              		.loc 1 427 3 view .LVU203
 753              		.loc 1 427 17 is_stmt 0 view .LVU204
 754 0050 FFF7FEFF 		bl	LCD_GetFont
 755              	.LVL25:
 756 0054 C088     		ldrh	r0, [r0, #6]
 757              		.loc 1 427 3 view .LVU205
 758 0056 00EB8000 		add	r0, r0, r0, lsl #2
 759 005a 80B2     		uxth	r0, r0
 760 005c FFF7FEFF 		bl	LCD_ClearLine
 761              	.LVL26:
 428:Src/main.c    ****   ILI9341_DispStringLine_EN(LINE(5), dispBuff);
 762              		.loc 1 428 3 is_stmt 1 view .LVU206
 763              		.loc 1 428 29 is_stmt 0 view .LVU207
 764 0060 FFF7FEFF 		bl	LCD_GetFont
 765              	.LVL27:
 766 0064 C088     		ldrh	r0, [r0, #6]
 767              		.loc 1 428 3 view .LVU208
 768 0066 00EB8000 		add	r0, r0, r0, lsl #2
 769 006a 03A9     		add	r1, sp, #12
 770 006c 80B2     		uxth	r0, r0
 771 006e FFF7FEFF 		bl	ILI9341_DispStringLine_EN
 772              	.LVL28:
 429:Src/main.c    **** 
 430:Src/main.c    ****   sprintf(dispBuff, "Frequency:%d", CNT);
 773              		.loc 1 430 3 is_stmt 1 view .LVU209
 774 0072 474B     		ldr	r3, .L33+32
 775 0074 1A68     		ldr	r2, [r3]
 776 0076 4749     		ldr	r1, .L33+36
 777 0078 03A8     		add	r0, sp, #12
 778 007a FFF7FEFF 		bl	sprintf
 779              	.LVL29:
 431:Src/main.c    ****   LCD_ClearLine(LINE(7));
 780              		.loc 1 431 3 view .LVU210
 781              		.loc 1 431 17 is_stmt 0 view .LVU211
 782 007e FFF7FEFF 		bl	LCD_GetFont
 783              	.LVL30:
 784 0082 C088     		ldrh	r0, [r0, #6]
 785              		.loc 1 431 3 view .LVU212
 786 0084 C0EBC000 		rsb	r0, r0, r0, lsl #3
 787 0088 80B2     		uxth	r0, r0
 788 008a FFF7FEFF 		bl	LCD_ClearLine
 789              	.LVL31:
 432:Src/main.c    ****   ILI9341_DispStringLine_EN(LINE(7), dispBuff);
 790              		.loc 1 432 3 is_stmt 1 view .LVU213
 791              		.loc 1 432 29 is_stmt 0 view .LVU214
 792 008e FFF7FEFF 		bl	LCD_GetFont
 793              	.LVL32:
 794 0092 C088     		ldrh	r0, [r0, #6]
 795              		.loc 1 432 3 view .LVU215
ARM GAS  /tmp/ccSn9RSi.s 			page 25


 796 0094 C0EBC000 		rsb	r0, r0, r0, lsl #3
 797 0098 03A9     		add	r1, sp, #12
 798 009a 80B2     		uxth	r0, r0
 799 009c FFF7FEFF 		bl	ILI9341_DispStringLine_EN
 800              	.LVL33:
 433:Src/main.c    **** 
 434:Src/main.c    ****   a = (int)testfloat * 1000;
 801              		.loc 1 434 3 is_stmt 1 view .LVU216
 802              		.loc 1 434 7 is_stmt 0 view .LVU217
 803 00a0 3768     		ldr	r7, [r6]	@ float
 804 00a2 3846     		mov	r0, r7
 805 00a4 FFF7FEFF 		bl	__aeabi_f2iz
 806              	.LVL34:
 807 00a8 0646     		mov	r6, r0
 808              		.loc 1 434 5 view .LVU218
 809 00aa 4FF47A78 		mov	r8, #1000
 810 00ae 08FB00F8 		mul	r8, r8, r0
 811              	.LVL35:
 435:Src/main.c    ****   b = testfloat * 1000 - a;
 812              		.loc 1 435 3 is_stmt 1 view .LVU219
 813              		.loc 1 435 17 is_stmt 0 view .LVU220
 814 00b2 3949     		ldr	r1, .L33+40
 815 00b4 3846     		mov	r0, r7
 816 00b6 FFF7FEFF 		bl	__aeabi_fmul
 817              	.LVL36:
 818 00ba 0746     		mov	r7, r0
 819              		.loc 1 435 24 view .LVU221
 820 00bc 4046     		mov	r0, r8
 821 00be FFF7FEFF 		bl	__aeabi_i2f
 822              	.LVL37:
 823 00c2 0146     		mov	r1, r0
 824 00c4 3846     		mov	r0, r7
 825 00c6 FFF7FEFF 		bl	__aeabi_fsub
 826              	.LVL38:
 827              		.loc 1 435 5 view .LVU222
 828 00ca FFF7FEFF 		bl	__aeabi_f2iz
 829              	.LVL39:
 830 00ce 0346     		mov	r3, r0
 831              	.LVL40:
 436:Src/main.c    ****   sprintf(dispBuff, "FLOAT:%d.%03d", (int)testfloat, b);
 832              		.loc 1 436 3 is_stmt 1 view .LVU223
 833 00d0 3246     		mov	r2, r6
 834 00d2 3249     		ldr	r1, .L33+44
 835 00d4 03A8     		add	r0, sp, #12
 836              	.LVL41:
 837              		.loc 1 436 3 is_stmt 0 view .LVU224
 838 00d6 FFF7FEFF 		bl	sprintf
 839              	.LVL42:
 437:Src/main.c    ****   LCD_ClearLine(LINE(6));
 840              		.loc 1 437 3 is_stmt 1 view .LVU225
 841              		.loc 1 437 17 is_stmt 0 view .LVU226
 842 00da FFF7FEFF 		bl	LCD_GetFont
 843              	.LVL43:
 844 00de C088     		ldrh	r0, [r0, #6]
 845              		.loc 1 437 3 view .LVU227
 846 00e0 00EB4000 		add	r0, r0, r0, lsl #1
 847 00e4 4000     		lsls	r0, r0, #1
ARM GAS  /tmp/ccSn9RSi.s 			page 26


 848 00e6 80B2     		uxth	r0, r0
 849 00e8 FFF7FEFF 		bl	LCD_ClearLine
 850              	.LVL44:
 438:Src/main.c    ****   ILI9341_DispStringLine_EN(LINE(6), dispBuff);
 851              		.loc 1 438 3 is_stmt 1 view .LVU228
 852              		.loc 1 438 29 is_stmt 0 view .LVU229
 853 00ec FFF7FEFF 		bl	LCD_GetFont
 854              	.LVL45:
 855 00f0 C088     		ldrh	r0, [r0, #6]
 856              		.loc 1 438 3 view .LVU230
 857 00f2 00EB4000 		add	r0, r0, r0, lsl #1
 858 00f6 4000     		lsls	r0, r0, #1
 859 00f8 80B2     		uxth	r0, r0
 860 00fa 03A9     		add	r1, sp, #12
 861 00fc FFF7FEFF 		bl	ILI9341_DispStringLine_EN
 862              	.LVL46:
 439:Src/main.c    **** 
 440:Src/main.c    ****   LCD_SetFont(&Font24x32);
 863              		.loc 1 440 3 is_stmt 1 view .LVU231
 864 0100 2748     		ldr	r0, .L33+48
 865 0102 FFF7FEFF 		bl	LCD_SetFont
 866              	.LVL47:
 441:Src/main.c    ****   LCD_SetTextColor(BLUE);
 867              		.loc 1 441 3 view .LVU232
 868 0106 1F20     		movs	r0, #31
 869 0108 FFF7FEFF 		bl	LCD_SetTextColor
 870              	.LVL48:
 442:Src/main.c    ****   pStr = "TT";
 871              		.loc 1 442 3 view .LVU233
 443:Src/main.c    ****   sprintf(dispBuff, "%*c%s", ((LCD_X_LENGTH / (((sFONT *)LCD_GetFont())->Width)) - strlen(pStr)) / 
 872              		.loc 1 443 3 view .LVU234
 873              		.loc 1 443 45 is_stmt 0 view .LVU235
 874 010c 2D88     		ldrh	r5, [r5]
 875              		.loc 1 443 49 view .LVU236
 876 010e FFF7FEFF 		bl	LCD_GetFont
 877              	.LVL49:
 878              		.loc 1 443 72 view .LVU237
 879 0112 8288     		ldrh	r2, [r0, #4]
 880              		.loc 1 443 45 view .LVU238
 881 0114 B5FBF2F2 		udiv	r2, r5, r2
 882              		.loc 1 443 82 view .LVU239
 883 0118 023A     		subs	r2, r2, #2
 884              		.loc 1 443 3 view .LVU240
 885 011a 224B     		ldr	r3, .L33+52
 886 011c 0093     		str	r3, [sp]
 887 011e 2023     		movs	r3, #32
 888 0120 5208     		lsrs	r2, r2, #1
 889 0122 2149     		ldr	r1, .L33+56
 890 0124 03A8     		add	r0, sp, #12
 891 0126 FFF7FEFF 		bl	sprintf
 892              	.LVL50:
 444:Src/main.c    ****   LCD_ClearLine(LINE(9));
 893              		.loc 1 444 3 is_stmt 1 view .LVU241
 894              		.loc 1 444 17 is_stmt 0 view .LVU242
 895 012a FFF7FEFF 		bl	LCD_GetFont
 896              	.LVL51:
 897 012e C088     		ldrh	r0, [r0, #6]
ARM GAS  /tmp/ccSn9RSi.s 			page 27


 898              		.loc 1 444 3 view .LVU243
 899 0130 00EBC000 		add	r0, r0, r0, lsl #3
 900 0134 80B2     		uxth	r0, r0
 901 0136 FFF7FEFF 		bl	LCD_ClearLine
 902              	.LVL52:
 445:Src/main.c    ****   ILI9341_DispStringLine_EN(LINE(9), dispBuff);
 903              		.loc 1 445 3 is_stmt 1 view .LVU244
 904              		.loc 1 445 29 is_stmt 0 view .LVU245
 905 013a FFF7FEFF 		bl	LCD_GetFont
 906              	.LVL53:
 907 013e C088     		ldrh	r0, [r0, #6]
 908              		.loc 1 445 3 view .LVU246
 909 0140 00EBC000 		add	r0, r0, r0, lsl #3
 910 0144 03A9     		add	r1, sp, #12
 911 0146 80B2     		uxth	r0, r0
 912 0148 FFF7FEFF 		bl	ILI9341_DispStringLine_EN
 913              	.LVL54:
 446:Src/main.c    **** 
 447:Src/main.c    ****   if (testint >= 100)
 914              		.loc 1 447 3 is_stmt 1 view .LVU247
 915              		.loc 1 447 15 is_stmt 0 view .LVU248
 916 014c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 917              		.loc 1 447 6 view .LVU249
 918 014e 632B     		cmp	r3, #99
 919 0150 01D9     		bls	.L28
 448:Src/main.c    ****     testint = 0;
 920              		.loc 1 448 5 is_stmt 1 view .LVU250
 921              		.loc 1 448 13 is_stmt 0 view .LVU251
 922 0152 0022     		movs	r2, #0
 923 0154 2270     		strb	r2, [r4]
 924              	.L28:
 449:Src/main.c    ****   if (testfloat >= 100.00)
 925              		.loc 1 449 3 is_stmt 1 view .LVU252
 926              		.loc 1 449 6 is_stmt 0 view .LVU253
 927 0156 1549     		ldr	r1, .L33+60
 928 0158 084B     		ldr	r3, .L33+12
 929 015a 1868     		ldr	r0, [r3]	@ float
 930 015c FFF7FEFF 		bl	__aeabi_fcmpge
 931              	.LVL55:
 932 0160 10B1     		cbz	r0, .L27
 450:Src/main.c    ****     testfloat = 0;
 933              		.loc 1 450 5 is_stmt 1 view .LVU254
 934              		.loc 1 450 15 is_stmt 0 view .LVU255
 935 0162 064B     		ldr	r3, .L33+12
 936 0164 0022     		movs	r2, #0
 937 0166 1A60     		str	r2, [r3]	@ float
 938              	.L27:
 451:Src/main.c    **** }
 939              		.loc 1 451 1 view .LVU256
 940 0168 1CB0     		add	sp, sp, #112
 941              	.LCFI23:
 942              		.cfi_def_cfa_offset 24
 943              		@ sp needed
 944 016a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 945              	.LVL56:
 946              	.L34:
 947              		.loc 1 451 1 view .LVU257
ARM GAS  /tmp/ccSn9RSi.s 			page 28


 948 016e 00BF     		.align	3
 949              	.L33:
 950 0170 7B14AE47 		.word	1202590843
 951 0174 E17A843F 		.word	1065646817
 952 0178 00000000 		.word	.LANCHOR0
 953 017c 00000000 		.word	.LANCHOR1
 954 0180 00000000 		.word	Font8x16
 955 0184 00000000 		.word	LCD_X_LENGTH
 956 0188 00000000 		.word	LCD_Y_LENGTH
 957 018c 00000000 		.word	.LC0
 958 0190 00000000 		.word	.LANCHOR2
 959 0194 08000000 		.word	.LC1
 960 0198 00007A44 		.word	1148846080
 961 019c 18000000 		.word	.LC2
 962 01a0 00000000 		.word	Font24x32
 963 01a4 30000000 		.word	.LC4
 964 01a8 28000000 		.word	.LC3
 965 01ac 0000C842 		.word	1120403456
 966              		.cfi_endproc
 967              	.LFE76:
 969              		.section	.text.main,"ax",%progbits
 970              		.align	1
 971              		.global	main
 972              		.syntax unified
 973              		.thumb
 974              		.thumb_func
 975              		.fpu softvfp
 977              	main:
 978              	.LFB68:
  95:Src/main.c    ****   /* USER CODE BEGIN 1 */
 979              		.loc 1 95 1 is_stmt 1 view -0
 980              		.cfi_startproc
 981              		@ Volatile: function does not return.
 982              		@ args = 0, pretend = 0, frame = 0
 983              		@ frame_needed = 0, uses_anonymous_args = 0
 984 0000 00B5     		push	{lr}
 985              	.LCFI24:
 986              		.cfi_def_cfa_offset 4
 987              		.cfi_offset 14, -4
 988 0002 83B0     		sub	sp, sp, #12
 989              	.LCFI25:
 990              		.cfi_def_cfa_offset 16
 103:Src/main.c    **** 
 991              		.loc 1 103 3 view .LVU259
 992 0004 FFF7FEFF 		bl	HAL_Init
 993              	.LVL57:
 106:Src/main.c    ****   ILI9341_Init();
 994              		.loc 1 106 3 view .LVU260
 995 0008 FFF7FEFF 		bl	DEBUG_USART_Config
 996              	.LVL58:
 107:Src/main.c    ****   /* USER CODE END Init */
 997              		.loc 1 107 3 view .LVU261
 998 000c FFF7FEFF 		bl	ILI9341_Init
 999              	.LVL59:
 111:Src/main.c    **** 
 1000              		.loc 1 111 3 view .LVU262
 1001 0010 FFF7FEFF 		bl	SystemClock_Config
ARM GAS  /tmp/ccSn9RSi.s 			page 29


 1002              	.LVL60:
 118:Src/main.c    ****   MX_DMA_Init();
 1003              		.loc 1 118 3 view .LVU263
 1004 0014 FFF7FEFF 		bl	MX_GPIO_Init
 1005              	.LVL61:
 119:Src/main.c    ****   MX_DAC_Init();
 1006              		.loc 1 119 3 view .LVU264
 1007 0018 FFF7FEFF 		bl	MX_DMA_Init
 1008              	.LVL62:
 120:Src/main.c    ****   MX_TIM3_Init();
 1009              		.loc 1 120 3 view .LVU265
 1010 001c FFF7FEFF 		bl	MX_DAC_Init
 1011              	.LVL63:
 121:Src/main.c    ****   MX_TIM6_Init();
 1012              		.loc 1 121 3 view .LVU266
 1013 0020 FFF7FEFF 		bl	MX_TIM3_Init
 1014              	.LVL64:
 122:Src/main.c    ****   MX_TIM1_Init();
 1015              		.loc 1 122 3 view .LVU267
 1016 0024 FFF7FEFF 		bl	MX_TIM6_Init
 1017              	.LVL65:
 123:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1018              		.loc 1 123 3 view .LVU268
 1019 0028 FFF7FEFF 		bl	MX_TIM1_Init
 1020              	.LVL66:
 125:Src/main.c    ****   HAL_TIM_Base_Start(&htim3);
 1021              		.loc 1 125 3 view .LVU269
 1022 002c 1A48     		ldr	r0, .L38
 1023 002e FFF7FEFF 		bl	HAL_TIM_Base_Start
 1024              	.LVL67:
 126:Src/main.c    ****   HAL_TIM_Base_Start(&htim6);
 1025              		.loc 1 126 3 view .LVU270
 1026 0032 1A4C     		ldr	r4, .L38+4
 1027 0034 2046     		mov	r0, r4
 1028 0036 FFF7FEFF 		bl	HAL_TIM_Base_Start
 1029              	.LVL68:
 127:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim3);
 1030              		.loc 1 127 3 view .LVU271
 1031 003a 1948     		ldr	r0, .L38+8
 1032 003c FFF7FEFF 		bl	HAL_TIM_Base_Start
 1033              	.LVL69:
 128:Src/main.c    ****   HAL_DAC_Start_DMA(&hdac, DAC_CHANNEL_2, (uint32_t *)CH_Value, 320, DAC_ALIGN_12B_R);
 1034              		.loc 1 128 3 view .LVU272
 1035 0040 2046     		mov	r0, r4
 1036 0042 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1037              	.LVL70:
 129:Src/main.c    ****   /* USER CODE END 2 */
 1038              		.loc 1 129 3 view .LVU273
 1039 0046 0023     		movs	r3, #0
 1040 0048 0093     		str	r3, [sp]
 1041 004a 4FF4A073 		mov	r3, #320
 1042 004e 154A     		ldr	r2, .L38+12
 1043 0050 1021     		movs	r1, #16
 1044 0052 1548     		ldr	r0, .L38+16
 1045 0054 FFF7FEFF 		bl	HAL_DAC_Start_DMA
 1046              	.LVL71:
 1047              	.L36:
ARM GAS  /tmp/ccSn9RSi.s 			page 30


 134:Src/main.c    ****   {
 1048              		.loc 1 134 3 discriminator 1 view .LVU274
 136:Src/main.c    ****     /* USER CODE END WHILE */
 1049              		.loc 1 136 5 discriminator 1 view .LVU275
 1050 0058 FFF7FEFF 		bl	Test
 1051              	.LVL72:
 140:Src/main.c    ****     //printf("This is a test!");
 1052              		.loc 1 140 5 discriminator 1 view .LVU276
 1053 005c 134C     		ldr	r4, .L38+20
 1054 005e 0421     		movs	r1, #4
 1055 0060 2046     		mov	r0, r4
 1056 0062 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1057              	.LVL73:
 142:Src/main.c    ****     HAL_GPIO_TogglePin(LED_1_GPIO_Port, LED_1_Pin);
 1058              		.loc 1 142 5 discriminator 1 view .LVU277
 1059 0066 C820     		movs	r0, #200
 1060 0068 FFF7FEFF 		bl	HAL_Delay
 1061              	.LVL74:
 143:Src/main.c    ****     HAL_Delay(200);
 1062              		.loc 1 143 5 discriminator 1 view .LVU278
 1063 006c 0421     		movs	r1, #4
 1064 006e 2046     		mov	r0, r4
 1065 0070 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1066              	.LVL75:
 144:Src/main.c    ****     HAL_GPIO_TogglePin(LED_2_GPIO_Port, LED_2_Pin);
 1067              		.loc 1 144 5 discriminator 1 view .LVU279
 1068 0074 C820     		movs	r0, #200
 1069 0076 FFF7FEFF 		bl	HAL_Delay
 1070              	.LVL76:
 145:Src/main.c    ****     HAL_Delay(200);
 1071              		.loc 1 145 5 discriminator 1 view .LVU280
 1072 007a 0821     		movs	r1, #8
 1073 007c 2046     		mov	r0, r4
 1074 007e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1075              	.LVL77:
 146:Src/main.c    ****     HAL_GPIO_TogglePin(LED_2_GPIO_Port, LED_2_Pin);
 1076              		.loc 1 146 5 discriminator 1 view .LVU281
 1077 0082 C820     		movs	r0, #200
 1078 0084 FFF7FEFF 		bl	HAL_Delay
 1079              	.LVL78:
 147:Src/main.c    ****     HAL_Delay(200);
 1080              		.loc 1 147 5 discriminator 1 view .LVU282
 1081 0088 0821     		movs	r1, #8
 1082 008a 2046     		mov	r0, r4
 1083 008c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1084              	.LVL79:
 148:Src/main.c    ****   }
 1085              		.loc 1 148 5 discriminator 1 view .LVU283
 1086 0090 C820     		movs	r0, #200
 1087 0092 FFF7FEFF 		bl	HAL_Delay
 1088              	.LVL80:
 134:Src/main.c    ****   {
 1089              		.loc 1 134 9 discriminator 1 view .LVU284
 1090 0096 DFE7     		b	.L36
 1091              	.L39:
 1092              		.align	2
 1093              	.L38:
ARM GAS  /tmp/ccSn9RSi.s 			page 31


 1094 0098 00000000 		.word	htim1
 1095 009c 00000000 		.word	htim3
 1096 00a0 00000000 		.word	htim6
 1097 00a4 00000000 		.word	.LANCHOR3
 1098 00a8 00000000 		.word	hdac
 1099 00ac 00100140 		.word	1073811456
 1100              		.cfi_endproc
 1101              	.LFE68:
 1103              		.section	.text.Error_Handler,"ax",%progbits
 1104              		.align	1
 1105              		.global	Error_Handler
 1106              		.syntax unified
 1107              		.thumb
 1108              		.thumb_func
 1109              		.fpu softvfp
 1111              	Error_Handler:
 1112              	.LFB77:
 452:Src/main.c    **** /* USER CODE END 4 */
 453:Src/main.c    **** 
 454:Src/main.c    **** /**
 455:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 456:Src/main.c    ****   * @retval None
 457:Src/main.c    ****   */
 458:Src/main.c    **** void Error_Handler(void)
 459:Src/main.c    **** {
 1113              		.loc 1 459 1 view -0
 1114              		.cfi_startproc
 1115              		@ args = 0, pretend = 0, frame = 0
 1116              		@ frame_needed = 0, uses_anonymous_args = 0
 1117              		@ link register save eliminated.
 460:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 461:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 462:Src/main.c    **** 
 463:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 464:Src/main.c    **** }
 1118              		.loc 1 464 1 view .LVU286
 1119 0000 7047     		bx	lr
 1120              		.cfi_endproc
 1121              	.LFE77:
 1123              		.global	CNT
 1124              		.global	CH_Value
 1125              		.comm	htim6,64,4
 1126              		.comm	htim3,64,4
 1127              		.comm	htim1,64,4
 1128              		.comm	hdma_dac_ch2,68,4
 1129              		.comm	hdac,20,4
 1130              		.section	.bss.CNT,"aw",%nobits
 1131              		.align	2
 1132              		.set	.LANCHOR2,. + 0
 1135              	CNT:
 1136 0000 00000000 		.space	4
 1137              		.section	.bss.testfloat.8364,"aw",%nobits
 1138              		.align	2
 1139              		.set	.LANCHOR1,. + 0
 1142              	testfloat.8364:
 1143 0000 00000000 		.space	4
 1144              		.section	.bss.testint.8363,"aw",%nobits
ARM GAS  /tmp/ccSn9RSi.s 			page 32


 1145              		.set	.LANCHOR0,. + 0
 1148              	testint.8363:
 1149 0000 00       		.space	1
 1150              		.section	.data.CH_Value,"aw"
 1151              		.align	2
 1152              		.set	.LANCHOR3,. + 0
 1155              	CH_Value:
 1156 0000 0008     		.short	2048
 1157 0002 2808     		.short	2088
 1158 0004 5108     		.short	2129
 1159 0006 7908     		.short	2169
 1160 0008 A108     		.short	2209
 1161 000a C908     		.short	2249
 1162 000c F108     		.short	2289
 1163 000e 1909     		.short	2329
 1164 0010 4109     		.short	2369
 1165 0012 6909     		.short	2409
 1166 0014 9109     		.short	2449
 1167 0016 B809     		.short	2488
 1168 0018 E009     		.short	2528
 1169 001a 070A     		.short	2567
 1170 001c 2E0A     		.short	2606
 1171 001e 540A     		.short	2644
 1172 0020 7B0A     		.short	2683
 1173 0022 A10A     		.short	2721
 1174 0024 C70A     		.short	2759
 1175 0026 ED0A     		.short	2797
 1176 0028 120B     		.short	2834
 1177 002a 370B     		.short	2871
 1178 002c 5C0B     		.short	2908
 1179 002e 800B     		.short	2944
 1180 0030 A40B     		.short	2980
 1181 0032 C80B     		.short	3016
 1182 0034 EC0B     		.short	3052
 1183 0036 0F0C     		.short	3087
 1184 0038 310C     		.short	3121
 1185 003a 530C     		.short	3155
 1186 003c 750C     		.short	3189
 1187 003e 960C     		.short	3222
 1188 0040 B70C     		.short	3255
 1189 0042 D70C     		.short	3287
 1190 0044 F70C     		.short	3319
 1191 0046 170D     		.short	3351
 1192 0048 360D     		.short	3382
 1193 004a 540D     		.short	3412
 1194 004c 720D     		.short	3442
 1195 004e 8F0D     		.short	3471
 1196 0050 AC0D     		.short	3500
 1197 0052 C80D     		.short	3528
 1198 0054 E30D     		.short	3555
 1199 0056 FE0D     		.short	3582
 1200 0058 190E     		.short	3609
 1201 005a 330E     		.short	3635
 1202 005c 4C0E     		.short	3660
 1203 005e 640E     		.short	3684
 1204 0060 7C0E     		.short	3708
 1205 0062 940E     		.short	3732
ARM GAS  /tmp/ccSn9RSi.s 			page 33


 1206 0064 AA0E     		.short	3754
 1207 0066 C00E     		.short	3776
 1208 0068 D60E     		.short	3798
 1209 006a EA0E     		.short	3818
 1210 006c FE0E     		.short	3838
 1211 006e 110F     		.short	3857
 1212 0070 240F     		.short	3876
 1213 0072 360F     		.short	3894
 1214 0074 470F     		.short	3911
 1215 0076 570F     		.short	3927
 1216 0078 670F     		.short	3943
 1217 007a 760F     		.short	3958
 1218 007c 840F     		.short	3972
 1219 007e 920F     		.short	3986
 1220 0080 9E0F     		.short	3998
 1221 0082 AA0F     		.short	4010
 1222 0084 B50F     		.short	4021
 1223 0086 C00F     		.short	4032
 1224 0088 C90F     		.short	4041
 1225 008a D20F     		.short	4050
 1226 008c DA0F     		.short	4058
 1227 008e E20F     		.short	4066
 1228 0090 E80F     		.short	4072
 1229 0092 EE0F     		.short	4078
 1230 0094 F30F     		.short	4083
 1231 0096 F70F     		.short	4087
 1232 0098 FA0F     		.short	4090
 1233 009a FD0F     		.short	4093
 1234 009c FF0F     		.short	4095
 1235 009e FF0F     		.short	4095
 1236 00a0 FF0F     		.short	4095
 1237 00a2 FF0F     		.short	4095
 1238 00a4 FE0F     		.short	4094
 1239 00a6 FC0F     		.short	4092
 1240 00a8 F90F     		.short	4089
 1241 00aa F50F     		.short	4085
 1242 00ac F10F     		.short	4081
 1243 00ae EB0F     		.short	4075
 1244 00b0 E50F     		.short	4069
 1245 00b2 DE0F     		.short	4062
 1246 00b4 D60F     		.short	4054
 1247 00b6 CE0F     		.short	4046
 1248 00b8 C50F     		.short	4037
 1249 00ba BB0F     		.short	4027
 1250 00bc B00F     		.short	4016
 1251 00be A40F     		.short	4004
 1252 00c0 980F     		.short	3992
 1253 00c2 8B0F     		.short	3979
 1254 00c4 7D0F     		.short	3965
 1255 00c6 6F0F     		.short	3951
 1256 00c8 5F0F     		.short	3935
 1257 00ca 4F0F     		.short	3919
 1258 00cc 3E0F     		.short	3902
 1259 00ce 2D0F     		.short	3885
 1260 00d0 1B0F     		.short	3867
 1261 00d2 080F     		.short	3848
 1262 00d4 F40E     		.short	3828
ARM GAS  /tmp/ccSn9RSi.s 			page 34


 1263 00d6 E00E     		.short	3808
 1264 00d8 CB0E     		.short	3787
 1265 00da B50E     		.short	3765
 1266 00dc 9F0E     		.short	3743
 1267 00de 880E     		.short	3720
 1268 00e0 710E     		.short	3697
 1269 00e2 580E     		.short	3672
 1270 00e4 3F0E     		.short	3647
 1271 00e6 260E     		.short	3622
 1272 00e8 0C0E     		.short	3596
 1273 00ea F10D     		.short	3569
 1274 00ec D60D     		.short	3542
 1275 00ee BA0D     		.short	3514
 1276 00f0 9D0D     		.short	3485
 1277 00f2 800D     		.short	3456
 1278 00f4 630D     		.short	3427
 1279 00f6 450D     		.short	3397
 1280 00f8 260D     		.short	3366
 1281 00fa 070D     		.short	3335
 1282 00fc E70C     		.short	3303
 1283 00fe C70C     		.short	3271
 1284 0100 A70C     		.short	3239
 1285 0102 860C     		.short	3206
 1286 0104 640C     		.short	3172
 1287 0106 420C     		.short	3138
 1288 0108 200C     		.short	3104
 1289 010a FD0B     		.short	3069
 1290 010c DA0B     		.short	3034
 1291 010e B60B     		.short	2998
 1292 0110 920B     		.short	2962
 1293 0112 6E0B     		.short	2926
 1294 0114 4A0B     		.short	2890
 1295 0116 250B     		.short	2853
 1296 0118 FF0A     		.short	2815
 1297 011a DA0A     		.short	2778
 1298 011c B40A     		.short	2740
 1299 011e 8E0A     		.short	2702
 1300 0120 680A     		.short	2664
 1301 0122 410A     		.short	2625
 1302 0124 1A0A     		.short	2586
 1303 0126 F309     		.short	2547
 1304 0128 CC09     		.short	2508
 1305 012a A509     		.short	2469
 1306 012c 7D09     		.short	2429
 1307 012e 5509     		.short	2389
 1308 0130 2D09     		.short	2349
 1309 0132 0509     		.short	2309
 1310 0134 DD08     		.short	2269
 1311 0136 B508     		.short	2229
 1312 0138 8D08     		.short	2189
 1313 013a 6508     		.short	2149
 1314 013c 3C08     		.short	2108
 1315 013e 1408     		.short	2068
 1316 0140 EC07     		.short	2028
 1317 0142 C407     		.short	1988
 1318 0144 9B07     		.short	1947
 1319 0146 7307     		.short	1907
ARM GAS  /tmp/ccSn9RSi.s 			page 35


 1320 0148 4B07     		.short	1867
 1321 014a 2307     		.short	1827
 1322 014c FB06     		.short	1787
 1323 014e D306     		.short	1747
 1324 0150 AB06     		.short	1707
 1325 0152 8306     		.short	1667
 1326 0154 5B06     		.short	1627
 1327 0156 3406     		.short	1588
 1328 0158 0D06     		.short	1549
 1329 015a E605     		.short	1510
 1330 015c BF05     		.short	1471
 1331 015e 9805     		.short	1432
 1332 0160 7205     		.short	1394
 1333 0162 4C05     		.short	1356
 1334 0164 2605     		.short	1318
 1335 0166 0105     		.short	1281
 1336 0168 DB04     		.short	1243
 1337 016a B604     		.short	1206
 1338 016c 9204     		.short	1170
 1339 016e 6E04     		.short	1134
 1340 0170 4A04     		.short	1098
 1341 0172 2604     		.short	1062
 1342 0174 0304     		.short	1027
 1343 0176 E003     		.short	992
 1344 0178 BE03     		.short	958
 1345 017a 9C03     		.short	924
 1346 017c 7A03     		.short	890
 1347 017e 5903     		.short	857
 1348 0180 3903     		.short	825
 1349 0182 1903     		.short	793
 1350 0184 F902     		.short	761
 1351 0186 DA02     		.short	730
 1352 0188 BB02     		.short	699
 1353 018a 9D02     		.short	669
 1354 018c 8002     		.short	640
 1355 018e 6302     		.short	611
 1356 0190 4602     		.short	582
 1357 0192 2A02     		.short	554
 1358 0194 0F02     		.short	527
 1359 0196 F401     		.short	500
 1360 0198 DA01     		.short	474
 1361 019a C101     		.short	449
 1362 019c A801     		.short	424
 1363 019e 8F01     		.short	399
 1364 01a0 7801     		.short	376
 1365 01a2 6101     		.short	353
 1366 01a4 4B01     		.short	331
 1367 01a6 3501     		.short	309
 1368 01a8 2001     		.short	288
 1369 01aa 0C01     		.short	268
 1370 01ac F800     		.short	248
 1371 01ae E500     		.short	229
 1372 01b0 D300     		.short	211
 1373 01b2 C200     		.short	194
 1374 01b4 B100     		.short	177
 1375 01b6 A100     		.short	161
 1376 01b8 9100     		.short	145
ARM GAS  /tmp/ccSn9RSi.s 			page 36


 1377 01ba 8300     		.short	131
 1378 01bc 7500     		.short	117
 1379 01be 6800     		.short	104
 1380 01c0 5C00     		.short	92
 1381 01c2 5000     		.short	80
 1382 01c4 4500     		.short	69
 1383 01c6 3B00     		.short	59
 1384 01c8 3200     		.short	50
 1385 01ca 2A00     		.short	42
 1386 01cc 2200     		.short	34
 1387 01ce 1B00     		.short	27
 1388 01d0 1500     		.short	21
 1389 01d2 0F00     		.short	15
 1390 01d4 0B00     		.short	11
 1391 01d6 0700     		.short	7
 1392 01d8 0400     		.short	4
 1393 01da 0200     		.short	2
 1394 01dc 0100     		.short	1
 1395 01de 0000     		.short	0
 1396 01e0 0000     		.short	0
 1397 01e2 0100     		.short	1
 1398 01e4 0300     		.short	3
 1399 01e6 0600     		.short	6
 1400 01e8 0900     		.short	9
 1401 01ea 0D00     		.short	13
 1402 01ec 1200     		.short	18
 1403 01ee 1800     		.short	24
 1404 01f0 1E00     		.short	30
 1405 01f2 2600     		.short	38
 1406 01f4 2E00     		.short	46
 1407 01f6 3700     		.short	55
 1408 01f8 4000     		.short	64
 1409 01fa 4B00     		.short	75
 1410 01fc 5600     		.short	86
 1411 01fe 6200     		.short	98
 1412 0200 6E00     		.short	110
 1413 0202 7C00     		.short	124
 1414 0204 8A00     		.short	138
 1415 0206 9900     		.short	153
 1416 0208 A900     		.short	169
 1417 020a B900     		.short	185
 1418 020c CA00     		.short	202
 1419 020e DC00     		.short	220
 1420 0210 EF00     		.short	239
 1421 0212 0201     		.short	258
 1422 0214 1601     		.short	278
 1423 0216 2A01     		.short	298
 1424 0218 4001     		.short	320
 1425 021a 5601     		.short	342
 1426 021c 6C01     		.short	364
 1427 021e 8401     		.short	388
 1428 0220 9C01     		.short	412
 1429 0222 B401     		.short	436
 1430 0224 CD01     		.short	461
 1431 0226 E701     		.short	487
 1432 0228 0202     		.short	514
 1433 022a 1D02     		.short	541
ARM GAS  /tmp/ccSn9RSi.s 			page 37


 1434 022c 3802     		.short	568
 1435 022e 5402     		.short	596
 1436 0230 7102     		.short	625
 1437 0232 8E02     		.short	654
 1438 0234 AC02     		.short	684
 1439 0236 CA02     		.short	714
 1440 0238 E902     		.short	745
 1441 023a 0903     		.short	777
 1442 023c 2903     		.short	809
 1443 023e 4903     		.short	841
 1444 0240 6A03     		.short	874
 1445 0242 8B03     		.short	907
 1446 0244 AD03     		.short	941
 1447 0246 CF03     		.short	975
 1448 0248 F103     		.short	1009
 1449 024a 1404     		.short	1044
 1450 024c 3804     		.short	1080
 1451 024e 5C04     		.short	1116
 1452 0250 8004     		.short	1152
 1453 0252 A404     		.short	1188
 1454 0254 C904     		.short	1225
 1455 0256 EE04     		.short	1262
 1456 0258 1305     		.short	1299
 1457 025a 3905     		.short	1337
 1458 025c 5F05     		.short	1375
 1459 025e 8505     		.short	1413
 1460 0260 AC05     		.short	1452
 1461 0262 D205     		.short	1490
 1462 0264 F905     		.short	1529
 1463 0266 2006     		.short	1568
 1464 0268 4806     		.short	1608
 1465 026a 6F06     		.short	1647
 1466 026c 9706     		.short	1687
 1467 026e BF06     		.short	1727
 1468 0270 E706     		.short	1767
 1469 0272 0F07     		.short	1807
 1470 0274 3707     		.short	1847
 1471 0276 5F07     		.short	1887
 1472 0278 8707     		.short	1927
 1473 027a AF07     		.short	1967
 1474 027c D807     		.short	2008
 1475 027e 0008     		.short	2048
 1476              		.text
 1477              	.Letext0:
 1478              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1479              		.file 3 "Drivers/CMSIS/Include/core_cm3.h"
 1480              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1481              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 1482              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1483              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1484              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1485              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1486              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1487              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dac.h"
 1488              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1489              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1490              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/ccSn9RSi.s 			page 38


 1491              		.file 15 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1492              		.file 16 "/usr/include/newlib/sys/_types.h"
 1493              		.file 17 "/usr/include/newlib/sys/reent.h"
 1494              		.file 18 "/usr/include/newlib/sys/lock.h"
 1495              		.file 19 "Inc/bsp_debug_usart.h"
 1496              		.file 20 "Inc/fonts.h"
 1497              		.file 21 "Inc/bsp_ili9341_lcd.h"
 1498              		.file 22 "/usr/include/newlib/stdlib.h"
 1499              		.file 23 "/usr/include/newlib/stdio.h"
 1500              		.file 24 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 1501              		.file 25 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
ARM GAS  /tmp/ccSn9RSi.s 			page 39


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccSn9RSi.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccSn9RSi.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccSn9RSi.s:147    .text.MX_GPIO_Init:0000000000000080 $d
     /tmp/ccSn9RSi.s:153    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccSn9RSi.s:159    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccSn9RSi.s:207    .text.MX_DMA_Init:0000000000000030 $d
     /tmp/ccSn9RSi.s:212    .text.MX_DAC_Init:0000000000000000 $t
     /tmp/ccSn9RSi.s:218    .text.MX_DAC_Init:0000000000000000 MX_DAC_Init
     /tmp/ccSn9RSi.s:271    .text.MX_DAC_Init:000000000000002c $d
                            *COM*:0000000000000014 hdac
     /tmp/ccSn9RSi.s:277    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccSn9RSi.s:283    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccSn9RSi.s:367    .text.MX_TIM3_Init:0000000000000050 $d
                            *COM*:0000000000000040 htim3
     /tmp/ccSn9RSi.s:373    .text.MX_TIM6_Init:0000000000000000 $t
     /tmp/ccSn9RSi.s:379    .text.MX_TIM6_Init:0000000000000000 MX_TIM6_Init
     /tmp/ccSn9RSi.s:444    .text.MX_TIM6_Init:0000000000000034 $d
                            *COM*:0000000000000040 htim6
     /tmp/ccSn9RSi.s:450    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccSn9RSi.s:456    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccSn9RSi.s:550    .text.MX_TIM1_Init:0000000000000050 $d
                            *COM*:0000000000000040 htim1
     /tmp/ccSn9RSi.s:556    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccSn9RSi.s:563    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccSn9RSi.s:657    .rodata.Test.str1.4:0000000000000000 $d
     /tmp/ccSn9RSi.s:678    .text.Test:0000000000000000 $t
     /tmp/ccSn9RSi.s:685    .text.Test:0000000000000000 Test
     /tmp/ccSn9RSi.s:950    .text.Test:0000000000000170 $d
     /tmp/ccSn9RSi.s:970    .text.main:0000000000000000 $t
     /tmp/ccSn9RSi.s:977    .text.main:0000000000000000 main
     /tmp/ccSn9RSi.s:1094   .text.main:0000000000000098 $d
     /tmp/ccSn9RSi.s:1104   .text.Error_Handler:0000000000000000 $t
     /tmp/ccSn9RSi.s:1111   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccSn9RSi.s:1135   .bss.CNT:0000000000000000 CNT
     /tmp/ccSn9RSi.s:1155   .data.CH_Value:0000000000000000 CH_Value
                            *COM*:0000000000000044 hdma_dac_ch2
     /tmp/ccSn9RSi.s:1131   .bss.CNT:0000000000000000 $d
     /tmp/ccSn9RSi.s:1138   .bss.testfloat.8364:0000000000000000 $d
     /tmp/ccSn9RSi.s:1142   .bss.testfloat.8364:0000000000000000 testfloat.8364
     /tmp/ccSn9RSi.s:1148   .bss.testint.8363:0000000000000000 testint.8363
     /tmp/ccSn9RSi.s:1149   .bss.testint.8363:0000000000000000 $d
     /tmp/ccSn9RSi.s:1151   .data.CH_Value:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_DAC_Init
HAL_DAC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
ARM GAS  /tmp/ccSn9RSi.s 			page 40


__aeabi_f2d
__aeabi_dadd
__aeabi_d2f
__aeabi_f2iz
__aeabi_fmul
__aeabi_i2f
__aeabi_fsub
__aeabi_fcmpge
LCD_SetFont
LCD_SetColors
ILI9341_Clear
sprintf
LCD_GetFont
LCD_ClearLine
ILI9341_DispStringLine_EN
LCD_SetTextColor
Font8x16
LCD_X_LENGTH
LCD_Y_LENGTH
Font24x32
HAL_Init
DEBUG_USART_Config
ILI9341_Init
HAL_TIM_Base_Start
HAL_TIM_Base_Start_IT
HAL_DAC_Start_DMA
HAL_GPIO_TogglePin
HAL_Delay
